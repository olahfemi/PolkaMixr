{"id":"f039fcb0a44972f2b17fb1de01005ebe","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"contracts/MiMCSponge.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\ncontract Hasher {\n    uint256 p = 21888242871839275222246405745257275088548364400416034343698204186575808495617;\n    uint256[20] c = [\n        0,\n        25823191961023811529686723375255045606187170120624741056268890390838310270028,\n        71153255768872006974285801937521995907343848376936063113800887806988124358800,\n        51253176922899201987938365653129780755804051536550826601168630951148399005246,\n        66651710483985382365580181188706173532487386392003341306307921015066514594406,\n        45887003413921204775397977044284378920236104620216194900669591190628189327887,\n        14399999722617037892747232478295923748665564430258345135947757381904956977453,\n        29376176727758177809204424209125257629638239807319618360680345079470240949145,\n        13768859312518298840937540532277016512087005174650120937309279832230513110846,\n        54749662990362840569021981534456448557155682756506853240029023635346061661615,\n        25161436470718351277017231215227846535148280460947816286575563945185127975034,\n        90370030464179443930112165274275271350651484239155016554738639197417116558730,\n        92014788260850167582827910417652439562305280453223492851660096740204889381255,\n        40376490640073034398204558905403523738912091909516510156577526370637723469243,\n        903792244391531377123276432892896247924738784402045372115602887103675299839,\n        112203415202699791888928570309186854585561656615192232544262649073999791317171,\n        114801681136748880679062548782792743842998635558909635247841799223004802934045,\n        111440818948676816539978930514468038603327388809824089593328295503672011604028,\n        64965960071752809090438003157362764845283225351402746675238539375404528707397,\n        98428510787134995495896453413714864789970336245473413374424598985988309743097\n    ];\n\n    function MiMC5Feistel(uint256 _iL, uint256 _iR, uint256 _k) internal view returns(uint256 oL, uint256 oR) {\n        uint8 nRounds = 20;\n\n        uint256 lastL = _iL;\n        uint256 lastR = _iR;\n\n        uint256 mask;\n        uint256 mask2;\n        uint256 mask4;\n        uint256 temp;\n\n        for(uint8 i = 0; i < nRounds; i++){\n            mask = addmod(lastR, _k, p);\n            mask = addmod(mask, c[i], p);\n            mask2 = mulmod(mask, mask, p);\n            mask4 = mulmod(mask2, mask2, p);\n            mask = mulmod(mask4, mask, p);\n\n            temp = lastR;\n            lastR = addmod(lastL, mask, p);\n            lastL = temp;\n        }\n\n        return (lastL, lastR);\n    }\n    function MiMC5Sponge(uint256[2] memory _ins, uint256 _k) external view returns(uint256 h) {\n        uint256 lastR = 0;\n        uint256 lastC = 0;\n\n        for(uint8 i = 0; i < _ins.length; i++){\n            lastR = addmod(lastR, _ins[i], p);\n            (lastR, lastC) = MiMC5Feistel(lastR, lastC, _k);\n        }\n\n        h = lastR;\n    }\n}"},"contracts/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}"},"contracts/Tornado.sol":{"content":"// SPDX-License-Identifier: NONE\npragma solidity ^0.8.28;\n\nimport \"./MiMCSponge.sol\";\nimport \"./ReentrancyGuard.sol\";\n\ninterface IVerifier {\n    function verifyProof(uint[2] memory a, uint[2][2] memory b, uint[2] memory c, uint[3] memory input) external;\n}\n\ncontract Tornado is ReentrancyGuard {\n    address verifier;\n    Hasher hasher;\n\n    uint8 public treeLevel = 10;\n    uint256 public denomination = 0.1 ether;\n\n    uint256 public nextLeafIdx = 0;\n    mapping(uint256 => bool) public roots;\n    mapping(uint8 => uint256) lastLevelHash;\n    mapping(uint256 => bool) public nullifierHashes;\n    mapping(uint256 => bool) public commitments;\n    \n    uint256[10] levelDefaults = [\n        23183772226880328093887215408966704399401918833188238128725944610428185466379,\n        24000819369602093814416139508614852491908395579435466932859056804037806454973,\n        90767735163385213280029221395007952082767922246267858237072012090673396196740,\n        36838446922933702266161394000006956756061899673576454513992013853093276527813,\n        68942419351509126448570740374747181965696714458775214939345221885282113404505,\n        50082386515045053504076326033442809551011315580267173564563197889162423619623,\n        73182421758286469310850848737411980736456210038565066977682644585724928397862,\n        60176431197461170637692882955627917456800648458772472331451918908568455016445,\n        105740430515862457360623134126179561153993738774115400861400649215360807197726,\n        76840483767501885884368002925517179365815019383466879774586151314479309584255\n    ];\n\n    event Deposit(uint256 root, uint256[10] hashPairings, uint8[10] pairDirection);\n    event Withdrawal(address to, uint256 nullifierHash);\n\n    constructor(\n        address _hasher,\n        address _verifier\n    ){\n        hasher = Hasher(_hasher);\n        verifier = _verifier;\n    }\n\n    function deposit(uint256 _commitment) external payable nonReentrant {\n        require(msg.value == denomination, \"incorrect-amount\");\n        require(!commitments[_commitment], \"existing-commitment\");\n        require(nextLeafIdx < 2 ** treeLevel, \"tree-full\");\n\n        uint256 newRoot;\n        uint256[10] memory hashPairings;\n        uint8[10] memory hashDirections;\n\n        uint256 currentIdx = nextLeafIdx;\n        uint256 currentHash = _commitment;\n\n        uint256 left;\n        uint256 right;\n        uint256[2] memory ins;\n        \n        for(uint8 i = 0; i < treeLevel; i++){\n            \n            if(currentIdx % 2 == 0){\n                left = currentHash;\n                right = levelDefaults[i];\n                hashPairings[i] = levelDefaults[i];\n                hashDirections[i] = 0;\n            }else{\n                left = lastLevelHash[i];\n                right = currentHash;\n                hashPairings[i] = lastLevelHash[i];\n                hashDirections[i] = 1;\n            }\n            lastLevelHash[i] = currentHash;\n\n            ins[0] = left;\n            ins[1] = right;\n\n            (uint256 h) = hasher.MiMC5Sponge{ gas: 150000 }(ins, _commitment);\n\n            currentHash = h;\n            currentIdx = currentIdx / 2;\n        }\n\n        newRoot = currentHash;\n        roots[newRoot] = true;\n        nextLeafIdx += 1;\n\n        commitments[_commitment] = true;\n        emit Deposit(newRoot, hashPairings, hashDirections);\n    }\n\n    function withdraw(\n        uint[2] memory a,\n        uint[2][2] memory b,\n        uint[2] memory c,\n        uint[2] memory input\n    ) external payable nonReentrant {\n        uint256 _root = input[0];\n        uint256 _nullifierHash = input[1];\n\n        require(!nullifierHashes[_nullifierHash], \"already-spent\");\n        require(roots[_root], \"not-root\");\n\n        uint256 _addr = uint256(uint160(msg.sender));\n\n        (bool verifyOK, ) = verifier.call(abi.encodeCall(IVerifier.verifyProof, (a, b, c, [_root, _nullifierHash, _addr])));\n\n        require(verifyOK, \"invalid-proof\");\n\n        nullifierHashes[_nullifierHash] = true;\n        address payable target = payable(msg.sender);\n\n        (bool ok, ) = target.call{ value: denomination }(\"\");\n\n        require(ok, \"payment-failed\");\n\n        emit Withdrawal(msg.sender, _nullifierHash);\n    }\n                \n}"},"contracts/Verifier.sol":{"content":"//\n// Copyright 2017 Christian Reitwiessner\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n// 2019 OKIMS\n//      ported to solidity 0.6\n//      fixed linter warnings\n//      added requiere error messages\n//\n//\n// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.28;\nlibrary Pairing {\n    struct G1Point {\n        uint X;\n        uint Y;\n    }\n    // Encoding of field elements is: X[0] * z + X[1]\n    struct G2Point {\n        uint[2] X;\n        uint[2] Y;\n    }\n    /// @return the generator of G1\n    function P1() internal pure returns (G1Point memory) {\n        return G1Point(1, 2);\n    }\n    /// @return the generator of G2\n    function P2() internal pure returns (G2Point memory) {\n        // Original code point\n        return G2Point(\n            [11559732032986387107991004021392285783925812861821192530917403151452391805634,\n             10857046999023057135944570762232829481370756359578518086990519993285655852781],\n            [4082367875863433681332203403145435568316851327593401208105741076214120093531,\n             8495653923123431417604973247489272438418190587263600148770280649306958101930]\n        );\n\n/*\n        // Changed by Jordi point\n        return G2Point(\n            [10857046999023057135944570762232829481370756359578518086990519993285655852781,\n             11559732032986387107991004021392285783925812861821192530917403151452391805634],\n            [8495653923123431417604973247489272438418190587263600148770280649306958101930,\n             4082367875863433681332203403145435568316851327593401208105741076214120093531]\n        );\n*/\n    }\n    /// @return r the negation of p, i.e. p.addition(p.negate()) should be zero.\n    function negate(G1Point memory p) internal pure returns (G1Point memory r) {\n        // The prime q in the base field F_q for G1\n        uint q = 21888242871839275222246405745257275088696311157297823662689037894645226208583;\n        if (p.X == 0 && p.Y == 0)\n            return G1Point(0, 0);\n        return G1Point(p.X, q - (p.Y % q));\n    }\n    /// @return r the sum of two points of G1\n    function addition(G1Point memory p1, G1Point memory p2) internal view returns (G1Point memory r) {\n        uint[4] memory input;\n        input[0] = p1.X;\n        input[1] = p1.Y;\n        input[2] = p2.X;\n        input[3] = p2.Y;\n        bool success;\n        // solium-disable-next-line security/no-inline-assembly\n        assembly {\n            success := staticcall(sub(gas(), 2000), 6, input, 0xc0, r, 0x60)\n            // Use \"invalid\" to make gas estimation work\n            switch success case 0 { invalid() }\n        }\n        require(success,\"pairing-add-failed\");\n    }\n    /// @return r the product of a point on G1 and a scalar, i.e.\n    /// p == p.scalar_mul(1) and p.addition(p) == p.scalar_mul(2) for all points p.\n    function scalar_mul(G1Point memory p, uint s) internal view returns (G1Point memory r) {\n        uint[3] memory input;\n        input[0] = p.X;\n        input[1] = p.Y;\n        input[2] = s;\n        bool success;\n        // solium-disable-next-line security/no-inline-assembly\n        assembly {\n            success := staticcall(sub(gas(), 2000), 7, input, 0x80, r, 0x60)\n            // Use \"invalid\" to make gas estimation work\n            switch success case 0 { invalid() }\n        }\n        require (success,\"pairing-mul-failed\");\n    }\n    /// @return the result of computing the pairing check\n    /// e(p1[0], p2[0]) *  .... * e(p1[n], p2[n]) == 1\n    /// For example pairing([P1(), P1().negate()], [P2(), P2()]) should\n    /// return true.\n    function pairing(G1Point[] memory p1, G2Point[] memory p2) internal view returns (bool) {\n        require(p1.length == p2.length,\"pairing-lengths-failed\");\n        uint elements = p1.length;\n        uint inputSize = elements * 6;\n        uint[] memory input = new uint[](inputSize);\n        for (uint i = 0; i < elements; i++)\n        {\n            input[i * 6 + 0] = p1[i].X;\n            input[i * 6 + 1] = p1[i].Y;\n            input[i * 6 + 2] = p2[i].X[0];\n            input[i * 6 + 3] = p2[i].X[1];\n            input[i * 6 + 4] = p2[i].Y[0];\n            input[i * 6 + 5] = p2[i].Y[1];\n        }\n        uint[1] memory out;\n        bool success;\n        // solium-disable-next-line security/no-inline-assembly\n        assembly {\n            success := staticcall(sub(gas(), 2000), 8, add(input, 0x20), mul(inputSize, 0x20), out, 0x20)\n            // Use \"invalid\" to make gas estimation work\n            switch success case 0 { invalid() }\n        }\n        require(success,\"pairing-opcode-failed\");\n        return out[0] != 0;\n    }\n    /// Convenience method for a pairing check for two pairs.\n    function pairingProd2(G1Point memory a1, G2Point memory a2, G1Point memory b1, G2Point memory b2) internal view returns (bool) {\n        G1Point[] memory p1 = new G1Point[](2);\n        G2Point[] memory p2 = new G2Point[](2);\n        p1[0] = a1;\n        p1[1] = b1;\n        p2[0] = a2;\n        p2[1] = b2;\n        return pairing(p1, p2);\n    }\n    /// Convenience method for a pairing check for three pairs.\n    function pairingProd3(\n            G1Point memory a1, G2Point memory a2,\n            G1Point memory b1, G2Point memory b2,\n            G1Point memory c1, G2Point memory c2\n    ) internal view returns (bool) {\n        G1Point[] memory p1 = new G1Point[](3);\n        G2Point[] memory p2 = new G2Point[](3);\n        p1[0] = a1;\n        p1[1] = b1;\n        p1[2] = c1;\n        p2[0] = a2;\n        p2[1] = b2;\n        p2[2] = c2;\n        return pairing(p1, p2);\n    }\n    /// Convenience method for a pairing check for four pairs.\n    function pairingProd4(\n            G1Point memory a1, G2Point memory a2,\n            G1Point memory b1, G2Point memory b2,\n            G1Point memory c1, G2Point memory c2,\n            G1Point memory d1, G2Point memory d2\n    ) internal view returns (bool) {\n        G1Point[] memory p1 = new G1Point[](4);\n        G2Point[] memory p2 = new G2Point[](4);\n        p1[0] = a1;\n        p1[1] = b1;\n        p1[2] = c1;\n        p1[3] = d1;\n        p2[0] = a2;\n        p2[1] = b2;\n        p2[2] = c2;\n        p2[3] = d2;\n        return pairing(p1, p2);\n    }\n}\ncontract Verifier {\n    using Pairing for *;\n    struct VerifyingKey {\n        Pairing.G1Point alfa1;\n        Pairing.G2Point beta2;\n        Pairing.G2Point gamma2;\n        Pairing.G2Point delta2;\n        Pairing.G1Point[] IC;\n    }\n    struct Proof {\n        Pairing.G1Point A;\n        Pairing.G2Point B;\n        Pairing.G1Point C;\n    }\n    function verifyingKey() internal pure returns (VerifyingKey memory vk) {\n        vk.alfa1 = Pairing.G1Point(\n            3112640452745891906395967382512463782769786511499763029389435659949223665060,\n            21761806409352002115101162498209346270751871932492984846604013947992364059527\n        );\n\n        vk.beta2 = Pairing.G2Point(\n            [9916723841081039443275076399171230540551908170777423639963754056599235860863,\n             9152493419635877461134214039762804574135588600441757947058474234217471726440],\n            [14221675781187066041833878228984135615670714378796892911166473098633852896136,\n             9418158396728157991287396942798828936700886913347622388844728474725577224769]\n        );\n        vk.gamma2 = Pairing.G2Point(\n            [11559732032986387107991004021392285783925812861821192530917403151452391805634,\n             10857046999023057135944570762232829481370756359578518086990519993285655852781],\n            [4082367875863433681332203403145435568316851327593401208105741076214120093531,\n             8495653923123431417604973247489272438418190587263600148770280649306958101930]\n        );\n        vk.delta2 = Pairing.G2Point(\n            [13438653518288788019143743712818566091790779839120735018305088396196687585708,\n             17243914913544414900331031360667901230307697486510106221450028976183796564842],\n            [17587092873194425767731335381829252655781923443512477329969151825924323590128,\n             16430922978292987668100366728957812421279218267510108283348099988119420737487]\n        );\n        vk.IC = new Pairing.G1Point[](4);\n        \n        vk.IC[0] = Pairing.G1Point( \n            764312887015986102888364722725819283701448797821918109913499988131070575084,\n            581900821725321480007315022533820807324501919402643897336936980064583440913\n        );                                      \n        \n        vk.IC[1] = Pairing.G1Point( \n            16572821774990860494704700231703947442158229636776641142382437900939064007016,\n            7829407253169896534563224234843010424193288969396394196456956558891129702417\n        );                                      \n        \n        vk.IC[2] = Pairing.G1Point( \n            8137718909162085777269030960428818343674674454071415319162021736331156392805,\n            10032489348457778820993314355078012280043344533311459253972967745596756665657\n        );                                      \n        \n        vk.IC[3] = Pairing.G1Point( \n            6349326230934313156976828643793342266852298075898779839679601918860187709020,\n            13620054709601116447869576680439541741763486638168006495199766488994572511447\n        );                                      \n        \n    }\n    function verify(uint[] memory input, Proof memory proof) internal view returns (uint) {\n        uint256 snark_scalar_field = 21888242871839275222246405745257275088548364400416034343698204186575808495617;\n        VerifyingKey memory vk = verifyingKey();\n        require(input.length + 1 == vk.IC.length,\"verifier-bad-input\");\n        // Compute the linear combination vk_x\n        Pairing.G1Point memory vk_x = Pairing.G1Point(0, 0);\n        for (uint i = 0; i < input.length; i++) {\n            require(input[i] < snark_scalar_field,\"verifier-gte-snark-scalar-field\");\n            vk_x = Pairing.addition(vk_x, Pairing.scalar_mul(vk.IC[i + 1], input[i]));\n        }\n        vk_x = Pairing.addition(vk_x, vk.IC[0]);\n        if (!Pairing.pairingProd4(\n            Pairing.negate(proof.A), proof.B,\n            vk.alfa1, vk.beta2,\n            vk_x, vk.gamma2,\n            proof.C, vk.delta2\n        )) return 1;\n        return 0;\n    }\n    /// @return r  bool true if proof is valid\n    function verifyProof(\n            uint[2] memory a,\n            uint[2][2] memory b,\n            uint[2] memory c,\n            uint[3] memory input\n        ) public view returns (bool r) {\n        Proof memory proof;\n        proof.A = Pairing.G1Point(a[0], a[1]);\n        proof.B = Pairing.G2Point([b[0][0], b[0][1]], [b[1][0], b[1][1]]);\n        proof.C = Pairing.G1Point(c[0], c[1]);\n        uint[] memory inputValues = new uint[](input.length);\n        for(uint i = 0; i < input.length; i++){\n            inputValues[i] = input[i];\n        }\n        if (verify(inputValues, proof) == 0) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"}},"settings":{"evmVersion":"istanbul","optimizer":{"enabled":true,"runs":400},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[],"version":"0.8.29","long_version":"0.8.29+commit.ab55807c.Darwin.appleclang","revive_version":"0.1.0-dev.14+commit.f6a412e.llvm-18.1.8","sources":{"contracts/MiMCSponge.sol":{"id":0,"ast":{"absolutePath":"contracts/MiMCSponge.sol","exportedSymbols":{"Hasher":[199]},"id":200,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"Hasher","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":199,"linearizedBaseContracts":[199],"name":"Hasher","nameLocation":"67:6:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":4,"mutability":"mutable","name":"p","nameLocation":"88:1:0","nodeType":"VariableDeclaration","scope":199,"src":"80:89:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2,"name":"uint256","nodeType":"ElementaryTypeName","src":"80:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3231383838323432383731383339323735323232323436343035373435323537323735303838353438333634343030343136303334333433363938323034313836353735383038343935363137","id":3,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"92:77:0","typeDescriptions":{"typeIdentifier":"t_rational_21888242871839275222246405745257275088548364400416034343698204186575808495617_by_1","typeString":"int_const 2188...(69 digits omitted)...5617"},"value":"21888242871839275222246405745257275088548364400416034343698204186575808495617"},"visibility":"internal"},{"constant":false,"id":29,"mutability":"mutable","name":"c","nameLocation":"187:1:0","nodeType":"VariableDeclaration","scope":199,"src":"175:1687:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$20_storage","typeString":"uint256[20]"},"typeName":{"baseType":{"id":5,"name":"uint256","nodeType":"ElementaryTypeName","src":"175:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7,"length":{"hexValue":"3230","id":6,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"183:2:0","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"nodeType":"ArrayTypeName","src":"175:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$20_storage_ptr","typeString":"uint256[20]"}},"value":{"components":[{"hexValue":"30","id":8,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"201:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"3235383233313931393631303233383131353239363836373233333735323535303435363036313837313730313230363234373431303536323638383930333930383338333130323730303238","id":9,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"212:77:0","typeDescriptions":{"typeIdentifier":"t_rational_25823191961023811529686723375255045606187170120624741056268890390838310270028_by_1","typeString":"int_const 2582...(69 digits omitted)...0028"},"value":"25823191961023811529686723375255045606187170120624741056268890390838310270028"},{"hexValue":"3731313533323535373638383732303036393734323835383031393337353231393935393037333433383438333736393336303633313133383030383837383036393838313234333538383030","id":10,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"299:77:0","typeDescriptions":{"typeIdentifier":"t_rational_71153255768872006974285801937521995907343848376936063113800887806988124358800_by_1","typeString":"int_const 7115...(69 digits omitted)...8800"},"value":"71153255768872006974285801937521995907343848376936063113800887806988124358800"},{"hexValue":"3531323533313736393232383939323031393837393338333635363533313239373830373535383034303531353336353530383236363031313638363330393531313438333939303035323436","id":11,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"386:77:0","typeDescriptions":{"typeIdentifier":"t_rational_51253176922899201987938365653129780755804051536550826601168630951148399005246_by_1","typeString":"int_const 5125...(69 digits omitted)...5246"},"value":"51253176922899201987938365653129780755804051536550826601168630951148399005246"},{"hexValue":"3636363531373130343833393835333832333635353830313831313838373036313733353332343837333836333932303033333431333036333037393231303135303636353134353934343036","id":12,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"473:77:0","typeDescriptions":{"typeIdentifier":"t_rational_66651710483985382365580181188706173532487386392003341306307921015066514594406_by_1","typeString":"int_const 6665...(69 digits omitted)...4406"},"value":"66651710483985382365580181188706173532487386392003341306307921015066514594406"},{"hexValue":"3435383837303033343133393231323034373735333937393737303434323834333738393230323336313034363230323136313934393030363639353931313930363238313839333237383837","id":13,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"560:77:0","typeDescriptions":{"typeIdentifier":"t_rational_45887003413921204775397977044284378920236104620216194900669591190628189327887_by_1","typeString":"int_const 4588...(69 digits omitted)...7887"},"value":"45887003413921204775397977044284378920236104620216194900669591190628189327887"},{"hexValue":"3134333939393939373232363137303337383932373437323332343738323935393233373438363635353634343330323538333435313335393437373537333831393034393536393737343533","id":14,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"647:77:0","typeDescriptions":{"typeIdentifier":"t_rational_14399999722617037892747232478295923748665564430258345135947757381904956977453_by_1","typeString":"int_const 1439...(69 digits omitted)...7453"},"value":"14399999722617037892747232478295923748665564430258345135947757381904956977453"},{"hexValue":"3239333736313736373237373538313737383039323034343234323039313235323537363239363338323339383037333139363138333630363830333435303739343730323430393439313435","id":15,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"734:77:0","typeDescriptions":{"typeIdentifier":"t_rational_29376176727758177809204424209125257629638239807319618360680345079470240949145_by_1","typeString":"int_const 2937...(69 digits omitted)...9145"},"value":"29376176727758177809204424209125257629638239807319618360680345079470240949145"},{"hexValue":"3133373638383539333132353138323938383430393337353430353332323737303136353132303837303035313734363530313230393337333039323739383332323330353133313130383436","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"821:77:0","typeDescriptions":{"typeIdentifier":"t_rational_13768859312518298840937540532277016512087005174650120937309279832230513110846_by_1","typeString":"int_const 1376...(69 digits omitted)...0846"},"value":"13768859312518298840937540532277016512087005174650120937309279832230513110846"},{"hexValue":"3534373439363632393930333632383430353639303231393831353334343536343438353537313535363832373536353036383533323430303239303233363335333436303631363631363135","id":17,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"908:77:0","typeDescriptions":{"typeIdentifier":"t_rational_54749662990362840569021981534456448557155682756506853240029023635346061661615_by_1","typeString":"int_const 5474...(69 digits omitted)...1615"},"value":"54749662990362840569021981534456448557155682756506853240029023635346061661615"},{"hexValue":"3235313631343336343730373138333531323737303137323331323135323237383436353335313438323830343630393437383136323836353735353633393435313835313237393735303334","id":18,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"995:77:0","typeDescriptions":{"typeIdentifier":"t_rational_25161436470718351277017231215227846535148280460947816286575563945185127975034_by_1","typeString":"int_const 2516...(69 digits omitted)...5034"},"value":"25161436470718351277017231215227846535148280460947816286575563945185127975034"},{"hexValue":"3930333730303330343634313739343433393330313132313635323734323735323731333530363531343834323339313535303136353534373338363339313937343137313136353538373330","id":19,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1082:77:0","typeDescriptions":{"typeIdentifier":"t_rational_90370030464179443930112165274275271350651484239155016554738639197417116558730_by_1","typeString":"int_const 9037...(69 digits omitted)...8730"},"value":"90370030464179443930112165274275271350651484239155016554738639197417116558730"},{"hexValue":"3932303134373838323630383530313637353832383237393130343137363532343339353632333035323830343533323233343932383531363630303936373430323034383839333831323535","id":20,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1169:77:0","typeDescriptions":{"typeIdentifier":"t_rational_92014788260850167582827910417652439562305280453223492851660096740204889381255_by_1","typeString":"int_const 9201...(69 digits omitted)...1255"},"value":"92014788260850167582827910417652439562305280453223492851660096740204889381255"},{"hexValue":"3430333736343930363430303733303334333938323034353538393035343033353233373338393132303931393039353136353130313536353737353236333730363337373233343639323433","id":21,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1256:77:0","typeDescriptions":{"typeIdentifier":"t_rational_40376490640073034398204558905403523738912091909516510156577526370637723469243_by_1","typeString":"int_const 4037...(69 digits omitted)...9243"},"value":"40376490640073034398204558905403523738912091909516510156577526370637723469243"},{"hexValue":"393033373932323434333931353331333737313233323736343332383932383936323437393234373338373834343032303435333732313135363032383837313033363735323939383339","id":22,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:75:0","typeDescriptions":{"typeIdentifier":"t_rational_903792244391531377123276432892896247924738784402045372115602887103675299839_by_1","typeString":"int_const 9037...(67 digits omitted)...9839"},"value":"903792244391531377123276432892896247924738784402045372115602887103675299839"},{"hexValue":"313132323033343135323032363939373931383838393238353730333039313836383534353835353631363536363135313932323332353434323632363439303733393939373931333137313731","id":23,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1428:78:0","typeDescriptions":{"typeIdentifier":"t_rational_112203415202699791888928570309186854585561656615192232544262649073999791317171_by_1","typeString":"int_const 1122...(70 digits omitted)...7171"},"value":"112203415202699791888928570309186854585561656615192232544262649073999791317171"},{"hexValue":"313134383031363831313336373438383830363739303632353438373832373932373433383432393938363335353538393039363335323437383431373939323233303034383032393334303435","id":24,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1516:78:0","typeDescriptions":{"typeIdentifier":"t_rational_114801681136748880679062548782792743842998635558909635247841799223004802934045_by_1","typeString":"int_const 1148...(70 digits omitted)...4045"},"value":"114801681136748880679062548782792743842998635558909635247841799223004802934045"},{"hexValue":"313131343430383138393438363736383136353339393738393330353134343638303338363033333237333838383039383234303839353933333238323935353033363732303131363034303238","id":25,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1604:78:0","typeDescriptions":{"typeIdentifier":"t_rational_111440818948676816539978930514468038603327388809824089593328295503672011604028_by_1","typeString":"int_const 1114...(70 digits omitted)...4028"},"value":"111440818948676816539978930514468038603327388809824089593328295503672011604028"},{"hexValue":"3634393635393630303731373532383039303930343338303033313537333632373634383435323833323235333531343032373436363735323338353339333735343034353238373037333937","id":26,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1692:77:0","typeDescriptions":{"typeIdentifier":"t_rational_64965960071752809090438003157362764845283225351402746675238539375404528707397_by_1","typeString":"int_const 6496...(69 digits omitted)...7397"},"value":"64965960071752809090438003157362764845283225351402746675238539375404528707397"},{"hexValue":"3938343238353130373837313334393935343935383936343533343133373134383634373839393730333336323435343733343133333734343234353938393835393838333039373433303937","id":27,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1779:77:0","typeDescriptions":{"typeIdentifier":"t_rational_98428510787134995495896453413714864789970336245473413374424598985988309743097_by_1","typeString":"int_const 9842...(69 digits omitted)...3097"},"value":"98428510787134995495896453413714864789970336245473413374424598985988309743097"}],"id":28,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"191:1671:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$20_memory_ptr","typeString":"uint256[20] memory"}},"visibility":"internal"},{"body":{"id":140,"nodeType":"Block","src":"1975:583:0","statements":[{"assignments":[43],"declarations":[{"constant":false,"id":43,"mutability":"mutable","name":"nRounds","nameLocation":"1991:7:0","nodeType":"VariableDeclaration","scope":140,"src":"1985:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":42,"name":"uint8","nodeType":"ElementaryTypeName","src":"1985:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":45,"initialValue":{"hexValue":"3230","id":44,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2001:2:0","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"nodeType":"VariableDeclarationStatement","src":"1985:18:0"},{"assignments":[47],"declarations":[{"constant":false,"id":47,"mutability":"mutable","name":"lastL","nameLocation":"2022:5:0","nodeType":"VariableDeclaration","scope":140,"src":"2014:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":46,"name":"uint256","nodeType":"ElementaryTypeName","src":"2014:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":49,"initialValue":{"id":48,"name":"_iL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"2030:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2014:19:0"},{"assignments":[51],"declarations":[{"constant":false,"id":51,"mutability":"mutable","name":"lastR","nameLocation":"2051:5:0","nodeType":"VariableDeclaration","scope":140,"src":"2043:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":50,"name":"uint256","nodeType":"ElementaryTypeName","src":"2043:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":53,"initialValue":{"id":52,"name":"_iR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"2059:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2043:19:0"},{"assignments":[55],"declarations":[{"constant":false,"id":55,"mutability":"mutable","name":"mask","nameLocation":"2081:4:0","nodeType":"VariableDeclaration","scope":140,"src":"2073:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":54,"name":"uint256","nodeType":"ElementaryTypeName","src":"2073:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":56,"nodeType":"VariableDeclarationStatement","src":"2073:12:0"},{"assignments":[58],"declarations":[{"constant":false,"id":58,"mutability":"mutable","name":"mask2","nameLocation":"2103:5:0","nodeType":"VariableDeclaration","scope":140,"src":"2095:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":57,"name":"uint256","nodeType":"ElementaryTypeName","src":"2095:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":59,"nodeType":"VariableDeclarationStatement","src":"2095:13:0"},{"assignments":[61],"declarations":[{"constant":false,"id":61,"mutability":"mutable","name":"mask4","nameLocation":"2126:5:0","nodeType":"VariableDeclaration","scope":140,"src":"2118:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60,"name":"uint256","nodeType":"ElementaryTypeName","src":"2118:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":62,"nodeType":"VariableDeclarationStatement","src":"2118:13:0"},{"assignments":[64],"declarations":[{"constant":false,"id":64,"mutability":"mutable","name":"temp","nameLocation":"2149:4:0","nodeType":"VariableDeclaration","scope":140,"src":"2141:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":63,"name":"uint256","nodeType":"ElementaryTypeName","src":"2141:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":65,"nodeType":"VariableDeclarationStatement","src":"2141:12:0"},{"body":{"id":134,"nodeType":"Block","src":"2198:322:0","statements":[{"expression":{"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":76,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"2212:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":78,"name":"lastR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"2226:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":79,"name":"_k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2233:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":80,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"2237:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":77,"name":"addmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-2,"src":"2219:6:0","typeDescriptions":{"typeIdentifier":"t_function_addmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":81,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2219:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2212:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":83,"nodeType":"ExpressionStatement","src":"2212:27:0"},{"expression":{"id":92,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":84,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"2253:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":86,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"2267:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":87,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"2273:1:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$20_storage","typeString":"uint256[20] storage ref"}},"id":89,"indexExpression":{"id":88,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2275:1:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2273:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":90,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"2279:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":85,"name":"addmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-2,"src":"2260:6:0","typeDescriptions":{"typeIdentifier":"t_function_addmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2260:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2253:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":93,"nodeType":"ExpressionStatement","src":"2253:28:0"},{"expression":{"id":100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":94,"name":"mask2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"2295:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":96,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"2310:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":97,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"2316:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":98,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"2322:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":95,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"2303:6:0","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2295:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":101,"nodeType":"ExpressionStatement","src":"2295:29:0"},{"expression":{"id":108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":102,"name":"mask4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"2338:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":104,"name":"mask2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"2353:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":105,"name":"mask2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"2360:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":106,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"2367:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":103,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"2346:6:0","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2346:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2338:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":109,"nodeType":"ExpressionStatement","src":"2338:31:0"},{"expression":{"id":116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":110,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"2383:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":112,"name":"mask4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"2397:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":113,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"2404:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":114,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"2410:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":111,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"2390:6:0","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2390:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2383:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":117,"nodeType":"ExpressionStatement","src":"2383:29:0"},{"expression":{"id":120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":118,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"2427:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":119,"name":"lastR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"2434:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2427:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":121,"nodeType":"ExpressionStatement","src":"2427:12:0"},{"expression":{"id":128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":122,"name":"lastR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"2453:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":124,"name":"lastL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"2468:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":125,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"2475:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":126,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"2481:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":123,"name":"addmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-2,"src":"2461:6:0","typeDescriptions":{"typeIdentifier":"t_function_addmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2461:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2453:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":129,"nodeType":"ExpressionStatement","src":"2453:30:0"},{"expression":{"id":132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":130,"name":"lastL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"2497:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":131,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"2505:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2497:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":133,"nodeType":"ExpressionStatement","src":"2497:12:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":70,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2181:1:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":71,"name":"nRounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2185:7:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2181:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":135,"initializationExpression":{"assignments":[67],"declarations":[{"constant":false,"id":67,"mutability":"mutable","name":"i","nameLocation":"2174:1:0","nodeType":"VariableDeclaration","scope":135,"src":"2168:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":66,"name":"uint8","nodeType":"ElementaryTypeName","src":"2168:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":69,"initialValue":{"hexValue":"30","id":68,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2178:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2168:11:0"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":74,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2194:3:0","subExpression":{"id":73,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2194:1:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":75,"nodeType":"ExpressionStatement","src":"2194:3:0"},"nodeType":"ForStatement","src":"2164:356:0"},{"expression":{"components":[{"id":136,"name":"lastL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"2538:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":137,"name":"lastR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"2545:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":138,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2537:14:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":41,"id":139,"nodeType":"Return","src":"2530:21:0"}]},"id":141,"implemented":true,"kind":"function","modifiers":[],"name":"MiMC5Feistel","nameLocation":"1878:12:0","nodeType":"FunctionDefinition","parameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31,"mutability":"mutable","name":"_iL","nameLocation":"1899:3:0","nodeType":"VariableDeclaration","scope":141,"src":"1891:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30,"name":"uint256","nodeType":"ElementaryTypeName","src":"1891:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":33,"mutability":"mutable","name":"_iR","nameLocation":"1912:3:0","nodeType":"VariableDeclaration","scope":141,"src":"1904:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32,"name":"uint256","nodeType":"ElementaryTypeName","src":"1904:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":35,"mutability":"mutable","name":"_k","nameLocation":"1925:2:0","nodeType":"VariableDeclaration","scope":141,"src":"1917:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34,"name":"uint256","nodeType":"ElementaryTypeName","src":"1917:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1890:38:0"},"returnParameters":{"id":41,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"mutability":"mutable","name":"oL","nameLocation":"1959:2:0","nodeType":"VariableDeclaration","scope":141,"src":"1951:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37,"name":"uint256","nodeType":"ElementaryTypeName","src":"1951:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":40,"mutability":"mutable","name":"oR","nameLocation":"1971:2:0","nodeType":"VariableDeclaration","scope":141,"src":"1963:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39,"name":"uint256","nodeType":"ElementaryTypeName","src":"1963:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1950:24:0"},"scope":199,"src":"1869:689:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":197,"nodeType":"Block","src":"2653:248:0","statements":[{"assignments":[153],"declarations":[{"constant":false,"id":153,"mutability":"mutable","name":"lastR","nameLocation":"2671:5:0","nodeType":"VariableDeclaration","scope":197,"src":"2663:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":152,"name":"uint256","nodeType":"ElementaryTypeName","src":"2663:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":155,"initialValue":{"hexValue":"30","id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2679:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2663:17:0"},{"assignments":[157],"declarations":[{"constant":false,"id":157,"mutability":"mutable","name":"lastC","nameLocation":"2698:5:0","nodeType":"VariableDeclaration","scope":197,"src":"2690:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"2690:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":159,"initialValue":{"hexValue":"30","id":158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2706:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2690:17:0"},{"body":{"id":191,"nodeType":"Block","src":"2756:119:0","statements":[{"expression":{"id":179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":171,"name":"lastR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"2770:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":173,"name":"lastR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"2785:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":174,"name":"_ins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"2792:4:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":176,"indexExpression":{"id":175,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"2797:1:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2792:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":177,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"2801:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":172,"name":"addmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-2,"src":"2778:6:0","typeDescriptions":{"typeIdentifier":"t_function_addmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2778:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2770:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":180,"nodeType":"ExpressionStatement","src":"2770:33:0"},{"expression":{"id":189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":181,"name":"lastR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"2818:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":182,"name":"lastC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2825:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":183,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"2817:14:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":185,"name":"lastR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"2847:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":186,"name":"lastC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2854:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":187,"name":"_k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"2861:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":184,"name":"MiMC5Feistel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"2834:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256,uint256)"}},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2834:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"2817:47:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":190,"nodeType":"ExpressionStatement","src":"2817:47:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":164,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"2735:1:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":165,"name":"_ins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"2739:4:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2744:6:0","memberName":"length","nodeType":"MemberAccess","src":"2739:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2735:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":192,"initializationExpression":{"assignments":[161],"declarations":[{"constant":false,"id":161,"mutability":"mutable","name":"i","nameLocation":"2728:1:0","nodeType":"VariableDeclaration","scope":192,"src":"2722:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":160,"name":"uint8","nodeType":"ElementaryTypeName","src":"2722:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":163,"initialValue":{"hexValue":"30","id":162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2732:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2722:11:0"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2752:3:0","subExpression":{"id":168,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"2752:1:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":170,"nodeType":"ExpressionStatement","src":"2752:3:0"},"nodeType":"ForStatement","src":"2718:157:0"},{"expression":{"id":195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":193,"name":"h","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"2885:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":194,"name":"lastR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"2889:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2885:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":196,"nodeType":"ExpressionStatement","src":"2885:9:0"}]},"functionSelector":"d622e5a4","id":198,"implemented":true,"kind":"function","modifiers":[],"name":"MiMC5Sponge","nameLocation":"2572:11:0","nodeType":"FunctionDefinition","parameters":{"id":148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":145,"mutability":"mutable","name":"_ins","nameLocation":"2602:4:0","nodeType":"VariableDeclaration","scope":198,"src":"2584:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":142,"name":"uint256","nodeType":"ElementaryTypeName","src":"2584:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":144,"length":{"hexValue":"32","id":143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2592:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"2584:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":147,"mutability":"mutable","name":"_k","nameLocation":"2616:2:0","nodeType":"VariableDeclaration","scope":198,"src":"2608:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":146,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2583:36:0"},"returnParameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"h","nameLocation":"2650:1:0","nodeType":"VariableDeclaration","scope":198,"src":"2642:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":149,"name":"uint256","nodeType":"ElementaryTypeName","src":"2642:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2641:11:0"},"scope":199,"src":"2563:338:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":200,"src":"58:2845:0","usedErrors":[],"usedEvents":[]}],"src":"32:2871:0"}},"contracts/ReentrancyGuard.sol":{"id":1,"ast":{"absolutePath":"contracts/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[264]},"id":265,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":201,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:1"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":202,"nodeType":"StructuredDocumentation","src":"137:750:1","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":264,"linearizedBaseContracts":[264],"name":"ReentrancyGuard","nameLocation":"906:15:1","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":205,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:1","nodeType":"VariableDeclaration","scope":264,"src":"1676:41:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":203,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":208,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:1","nodeType":"VariableDeclaration","scope":264,"src":"1723:37:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":206,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":210,"mutability":"mutable","name":"_status","nameLocation":"1783:7:1","nodeType":"VariableDeclaration","scope":264,"src":"1767:23:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":209,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":217,"nodeType":"Block","src":"1811:39:1","statements":[{"expression":{"id":215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":213,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"1821:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":214,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"1831:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":216,"nodeType":"ExpressionStatement","src":"1821:22:1"}]},"id":218,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":211,"nodeType":"ParameterList","parameters":[],"src":"1808:2:1"},"returnParameters":{"id":212,"nodeType":"ParameterList","parameters":[],"src":"1811:0:1"},"scope":264,"src":"1797:53:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":228,"nodeType":"Block","src":"2251:79:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":221,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"2261:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":223,"nodeType":"ExpressionStatement","src":"2261:21:1"},{"id":224,"nodeType":"PlaceholderStatement","src":"2292:1:1"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":225,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"2303:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":227,"nodeType":"ExpressionStatement","src":"2303:20:1"}]},"documentation":{"id":219,"nodeType":"StructuredDocumentation","src":"1856:366:1","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":229,"name":"nonReentrant","nameLocation":"2236:12:1","nodeType":"ModifierDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[],"src":"2248:2:1"},"src":"2227:103:1","virtual":false,"visibility":"internal"},{"body":{"id":243,"nodeType":"Block","src":"2375:248:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":233,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"2468:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":234,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"2479:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":232,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2460:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":238,"nodeType":"ExpressionStatement","src":"2460:63:1"},{"expression":{"id":241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":239,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"2598:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":240,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"2608:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":242,"nodeType":"ExpressionStatement","src":"2598:18:1"}]},"id":244,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:1","nodeType":"FunctionDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[],"src":"2364:2:1"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[],"src":"2375:0:1"},"scope":264,"src":"2336:287:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":251,"nodeType":"Block","src":"2667:171:1","statements":[{"expression":{"id":249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":247,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"2809:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":248,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"2819:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":250,"nodeType":"ExpressionStatement","src":"2809:22:1"}]},"id":252,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:1","nodeType":"FunctionDefinition","parameters":{"id":245,"nodeType":"ParameterList","parameters":[],"src":"2656:2:1"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[],"src":"2667:0:1"},"scope":264,"src":"2629:209:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":262,"nodeType":"Block","src":"3081:43:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":258,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":259,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"3109:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":257,"id":261,"nodeType":"Return","src":"3091:26:1"}]},"documentation":{"id":253,"nodeType":"StructuredDocumentation","src":"2844:168:1","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":263,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:1","nodeType":"FunctionDefinition","parameters":{"id":254,"nodeType":"ParameterList","parameters":[],"src":"3049:2:1"},"returnParameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":263,"src":"3075:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":255,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:1"},"scope":264,"src":"3017:107:1","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":265,"src":"888:2238:1","usedErrors":[],"usedEvents":[]}],"src":"112:3014:1"}},"contracts/Tornado.sol":{"id":2,"ast":{"absolutePath":"contracts/Tornado.sol","exportedSymbols":{"Hasher":[199],"IVerifier":[290],"ReentrancyGuard":[264],"Tornado":[697]},"id":698,"license":"NONE","nodeType":"SourceUnit","nodes":[{"id":266,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"33:24:2"},{"absolutePath":"contracts/MiMCSponge.sol","file":"./MiMCSponge.sol","id":267,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":698,"sourceUnit":200,"src":"59:26:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/ReentrancyGuard.sol","file":"./ReentrancyGuard.sol","id":268,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":698,"sourceUnit":265,"src":"86:31:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IVerifier","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":290,"linearizedBaseContracts":[290],"name":"IVerifier","nameLocation":"129:9:2","nodeType":"ContractDefinition","nodes":[{"functionSelector":"11479fea","id":289,"implemented":false,"kind":"function","modifiers":[],"name":"verifyProof","nameLocation":"154:11:2","nodeType":"FunctionDefinition","parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":272,"mutability":"mutable","name":"a","nameLocation":"181:1:2","nodeType":"VariableDeclaration","scope":289,"src":"166:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":269,"name":"uint","nodeType":"ElementaryTypeName","src":"166:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":271,"length":{"hexValue":"32","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"171:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"166:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":278,"mutability":"mutable","name":"b","nameLocation":"202:1:2","nodeType":"VariableDeclaration","scope":289,"src":"184:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr","typeString":"uint256[2][2]"},"typeName":{"baseType":{"baseType":{"id":273,"name":"uint","nodeType":"ElementaryTypeName","src":"184:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":275,"length":{"hexValue":"32","id":274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"189:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"184:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"id":277,"length":{"hexValue":"32","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"192:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"184:10:2","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr","typeString":"uint256[2][2]"}},"visibility":"internal"},{"constant":false,"id":282,"mutability":"mutable","name":"c","nameLocation":"220:1:2","nodeType":"VariableDeclaration","scope":289,"src":"205:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":279,"name":"uint","nodeType":"ElementaryTypeName","src":"205:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":281,"length":{"hexValue":"32","id":280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"210:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"205:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"input","nameLocation":"238:5:2","nodeType":"VariableDeclaration","scope":289,"src":"223:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3]"},"typeName":{"baseType":{"id":283,"name":"uint","nodeType":"ElementaryTypeName","src":"223:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":285,"length":{"hexValue":"33","id":284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"228:1:2","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"223:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"}},"visibility":"internal"}],"src":"165:79:2"},"returnParameters":{"id":288,"nodeType":"ParameterList","parameters":[],"src":"253:0:2"},"scope":290,"src":"145:109:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":698,"src":"119:137:2","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":291,"name":"ReentrancyGuard","nameLocations":["278:15:2"],"nodeType":"IdentifierPath","referencedDeclaration":264,"src":"278:15:2"},"id":292,"nodeType":"InheritanceSpecifier","src":"278:15:2"}],"canonicalName":"Tornado","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":697,"linearizedBaseContracts":[697,264],"name":"Tornado","nameLocation":"267:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":294,"mutability":"mutable","name":"verifier","nameLocation":"308:8:2","nodeType":"VariableDeclaration","scope":697,"src":"300:16:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"300:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":297,"mutability":"mutable","name":"hasher","nameLocation":"329:6:2","nodeType":"VariableDeclaration","scope":697,"src":"322:13:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Hasher_$199","typeString":"contract Hasher"},"typeName":{"id":296,"nodeType":"UserDefinedTypeName","pathNode":{"id":295,"name":"Hasher","nameLocations":["322:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":199,"src":"322:6:2"},"referencedDeclaration":199,"src":"322:6:2","typeDescriptions":{"typeIdentifier":"t_contract$_Hasher_$199","typeString":"contract Hasher"}},"visibility":"internal"},{"constant":false,"functionSelector":"b8e79564","id":300,"mutability":"mutable","name":"treeLevel","nameLocation":"355:9:2","nodeType":"VariableDeclaration","scope":697,"src":"342:27:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":298,"name":"uint8","nodeType":"ElementaryTypeName","src":"342:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3130","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"367:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"visibility":"public"},{"constant":false,"functionSelector":"8bca6d16","id":303,"mutability":"mutable","name":"denomination","nameLocation":"390:12:2","nodeType":"VariableDeclaration","scope":697,"src":"375:39:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":301,"name":"uint256","nodeType":"ElementaryTypeName","src":"375:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"302e31","id":302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"405:9:2","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000_by_1","typeString":"int_const 100000000000000000"},"value":"0.1"},"visibility":"public"},{"constant":false,"functionSelector":"45e0523f","id":306,"mutability":"mutable","name":"nextLeafIdx","nameLocation":"436:11:2","nodeType":"VariableDeclaration","scope":697,"src":"421:30:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":304,"name":"uint256","nodeType":"ElementaryTypeName","src":"421:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"450:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"functionSelector":"c2b40ae4","id":310,"mutability":"mutable","name":"roots","nameLocation":"489:5:2","nodeType":"VariableDeclaration","scope":697,"src":"457:37:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"typeName":{"id":309,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":307,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"457:24:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":308,"name":"bool","nodeType":"ElementaryTypeName","src":"476:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"id":314,"mutability":"mutable","name":"lastLevelHash","nameLocation":"526:13:2","nodeType":"VariableDeclaration","scope":697,"src":"500:39:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint8_$_t_uint256_$","typeString":"mapping(uint8 => uint256)"},"typeName":{"id":313,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":311,"name":"uint8","nodeType":"ElementaryTypeName","src":"508:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Mapping","src":"500:25:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint8_$_t_uint256_$","typeString":"mapping(uint8 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":312,"name":"uint256","nodeType":"ElementaryTypeName","src":"517:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"functionSelector":"1f79a1e9","id":318,"mutability":"mutable","name":"nullifierHashes","nameLocation":"577:15:2","nodeType":"VariableDeclaration","scope":697,"src":"545:47:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"typeName":{"id":317,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":315,"name":"uint256","nodeType":"ElementaryTypeName","src":"553:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"545:24:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":316,"name":"bool","nodeType":"ElementaryTypeName","src":"564:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"49ce8997","id":322,"mutability":"mutable","name":"commitments","nameLocation":"630:11:2","nodeType":"VariableDeclaration","scope":697,"src":"598:43:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"typeName":{"id":321,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":319,"name":"uint256","nodeType":"ElementaryTypeName","src":"606:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"598:24:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":320,"name":"bool","nodeType":"ElementaryTypeName","src":"617:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"id":337,"mutability":"mutable","name":"levelDefaults","nameLocation":"664:13:2","nodeType":"VariableDeclaration","scope":697,"src":"652:905:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$10_storage","typeString":"uint256[10]"},"typeName":{"baseType":{"id":323,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":325,"length":{"hexValue":"3130","id":324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"660:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"ArrayTypeName","src":"652:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$10_storage_ptr","typeString":"uint256[10]"}},"value":{"components":[{"hexValue":"3233313833373732323236383830333238303933383837323135343038393636373034333939343031393138383333313838323338313238373235393434363130343238313835343636333739","id":326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"690:77:2","typeDescriptions":{"typeIdentifier":"t_rational_23183772226880328093887215408966704399401918833188238128725944610428185466379_by_1","typeString":"int_const 2318...(69 digits omitted)...6379"},"value":"23183772226880328093887215408966704399401918833188238128725944610428185466379"},{"hexValue":"3234303030383139333639363032303933383134343136313339353038363134383532343931393038333935353739343335343636393332383539303536383034303337383036343534393733","id":327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"777:77:2","typeDescriptions":{"typeIdentifier":"t_rational_24000819369602093814416139508614852491908395579435466932859056804037806454973_by_1","typeString":"int_const 2400...(69 digits omitted)...4973"},"value":"24000819369602093814416139508614852491908395579435466932859056804037806454973"},{"hexValue":"3930373637373335313633333835323133323830303239323231333935303037393532303832373637393232323436323637383538323337303732303132303930363733333936313936373430","id":328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"864:77:2","typeDescriptions":{"typeIdentifier":"t_rational_90767735163385213280029221395007952082767922246267858237072012090673396196740_by_1","typeString":"int_const 9076...(69 digits omitted)...6740"},"value":"90767735163385213280029221395007952082767922246267858237072012090673396196740"},{"hexValue":"3336383338343436393232393333373032323636313631333934303030303036393536373536303631383939363733353736343534353133393932303133383533303933323736353237383133","id":329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:77:2","typeDescriptions":{"typeIdentifier":"t_rational_36838446922933702266161394000006956756061899673576454513992013853093276527813_by_1","typeString":"int_const 3683...(69 digits omitted)...7813"},"value":"36838446922933702266161394000006956756061899673576454513992013853093276527813"},{"hexValue":"3638393432343139333531353039313236343438353730373430333734373437313831393635363936373134343538373735323134393339333435323231383835323832313133343034353035","id":330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1038:77:2","typeDescriptions":{"typeIdentifier":"t_rational_68942419351509126448570740374747181965696714458775214939345221885282113404505_by_1","typeString":"int_const 6894...(69 digits omitted)...4505"},"value":"68942419351509126448570740374747181965696714458775214939345221885282113404505"},{"hexValue":"3530303832333836353135303435303533353034303736333236303333343432383039353531303131333135353830323637313733353634353633313937383839313632343233363139363233","id":331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1125:77:2","typeDescriptions":{"typeIdentifier":"t_rational_50082386515045053504076326033442809551011315580267173564563197889162423619623_by_1","typeString":"int_const 5008...(69 digits omitted)...9623"},"value":"50082386515045053504076326033442809551011315580267173564563197889162423619623"},{"hexValue":"3733313832343231373538323836343639333130383530383438373337343131393830373336343536323130303338353635303636393737363832363434353835373234393238333937383632","id":332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1212:77:2","typeDescriptions":{"typeIdentifier":"t_rational_73182421758286469310850848737411980736456210038565066977682644585724928397862_by_1","typeString":"int_const 7318...(69 digits omitted)...7862"},"value":"73182421758286469310850848737411980736456210038565066977682644585724928397862"},{"hexValue":"3630313736343331313937343631313730363337363932383832393535363237393137343536383030363438343538373732343732333331343531393138393038353638343535303136343435","id":333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1299:77:2","typeDescriptions":{"typeIdentifier":"t_rational_60176431197461170637692882955627917456800648458772472331451918908568455016445_by_1","typeString":"int_const 6017...(69 digits omitted)...6445"},"value":"60176431197461170637692882955627917456800648458772472331451918908568455016445"},{"hexValue":"313035373430343330353135383632343537333630363233313334313236313739353631313533393933373338373734313135343030383631343030363439323135333630383037313937373236","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1386:78:2","typeDescriptions":{"typeIdentifier":"t_rational_105740430515862457360623134126179561153993738774115400861400649215360807197726_by_1","typeString":"int_const 1057...(70 digits omitted)...7726"},"value":"105740430515862457360623134126179561153993738774115400861400649215360807197726"},{"hexValue":"3736383430343833373637353031383835383834333638303032393235353137313739333635383135303139333833343636383739373734353836313531333134343739333039353834323535","id":335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1474:77:2","typeDescriptions":{"typeIdentifier":"t_rational_76840483767501885884368002925517179365815019383466879774586151314479309584255_by_1","typeString":"int_const 7684...(69 digits omitted)...4255"},"value":"76840483767501885884368002925517179365815019383466879774586151314479309584255"}],"id":336,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"680:877:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$10_memory_ptr","typeString":"uint256[10] memory"}},"visibility":"internal"},{"anonymous":false,"eventSelector":"e6ab8667cb740d6c65a4ad321c031eb42f6c5085d5753238d1b2e1e370c13483","id":349,"name":"Deposit","nameLocation":"1570:7:2","nodeType":"EventDefinition","parameters":{"id":348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"indexed":false,"mutability":"mutable","name":"root","nameLocation":"1586:4:2","nodeType":"VariableDeclaration","scope":349,"src":"1578:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":338,"name":"uint256","nodeType":"ElementaryTypeName","src":"1578:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":343,"indexed":false,"mutability":"mutable","name":"hashPairings","nameLocation":"1604:12:2","nodeType":"VariableDeclaration","scope":349,"src":"1592:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$10_memory_ptr","typeString":"uint256[10]"},"typeName":{"baseType":{"id":340,"name":"uint256","nodeType":"ElementaryTypeName","src":"1592:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":342,"length":{"hexValue":"3130","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1600:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"ArrayTypeName","src":"1592:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$10_storage_ptr","typeString":"uint256[10]"}},"visibility":"internal"},{"constant":false,"id":347,"indexed":false,"mutability":"mutable","name":"pairDirection","nameLocation":"1628:13:2","nodeType":"VariableDeclaration","scope":349,"src":"1618:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$10_memory_ptr","typeString":"uint8[10]"},"typeName":{"baseType":{"id":344,"name":"uint8","nodeType":"ElementaryTypeName","src":"1618:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":346,"length":{"hexValue":"3130","id":345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1624:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"ArrayTypeName","src":"1618:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$10_storage_ptr","typeString":"uint8[10]"}},"visibility":"internal"}],"src":"1577:65:2"},"src":"1564:79:2"},{"anonymous":false,"eventSelector":"7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65","id":355,"name":"Withdrawal","nameLocation":"1654:10:2","nodeType":"EventDefinition","parameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"1673:2:2","nodeType":"VariableDeclaration","scope":355,"src":"1665:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":350,"name":"address","nodeType":"ElementaryTypeName","src":"1665:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":353,"indexed":false,"mutability":"mutable","name":"nullifierHash","nameLocation":"1685:13:2","nodeType":"VariableDeclaration","scope":355,"src":"1677:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":352,"name":"uint256","nodeType":"ElementaryTypeName","src":"1677:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1664:35:2"},"src":"1648:52:2"},{"body":{"id":372,"nodeType":"Block","src":"1775:71:2","statements":[{"expression":{"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":362,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"1785:6:2","typeDescriptions":{"typeIdentifier":"t_contract$_Hasher_$199","typeString":"contract Hasher"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":364,"name":"_hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"1801:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":363,"name":"Hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"1794:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hasher_$199_$","typeString":"type(contract Hasher)"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1794:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Hasher_$199","typeString":"contract Hasher"}},"src":"1785:24:2","typeDescriptions":{"typeIdentifier":"t_contract$_Hasher_$199","typeString":"contract Hasher"}},"id":367,"nodeType":"ExpressionStatement","src":"1785:24:2"},{"expression":{"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":368,"name":"verifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"1819:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":369,"name":"_verifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"1830:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1819:20:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":371,"nodeType":"ExpressionStatement","src":"1819:20:2"}]},"id":373,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"_hasher","nameLocation":"1735:7:2","nodeType":"VariableDeclaration","scope":373,"src":"1727:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":356,"name":"address","nodeType":"ElementaryTypeName","src":"1727:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":359,"mutability":"mutable","name":"_verifier","nameLocation":"1760:9:2","nodeType":"VariableDeclaration","scope":373,"src":"1752:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"1752:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1717:58:2"},"returnParameters":{"id":361,"nodeType":"ParameterList","parameters":[],"src":"1775:0:2"},"scope":697,"src":"1706:140:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":575,"nodeType":"Block","src":"1920:1398:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":381,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1938:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1942:5:2","memberName":"value","nodeType":"MemberAccess","src":"1938:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":383,"name":"denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"1951:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1938:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e636f72726563742d616d6f756e74","id":385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1965:18:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_e8d3ec34ad47ed833e8676982d25f2896304b22aa39dd5df081e1e687f01cc89","typeString":"literal_string \"incorrect-amount\""},"value":"incorrect-amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e8d3ec34ad47ed833e8676982d25f2896304b22aa39dd5df081e1e687f01cc89","typeString":"literal_string \"incorrect-amount\""}],"id":380,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1930:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1930:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":387,"nodeType":"ExpressionStatement","src":"1930:54:2"},{"expression":{"arguments":[{"id":392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2002:25:2","subExpression":{"baseExpression":{"id":389,"name":"commitments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"2003:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":391,"indexExpression":{"id":390,"name":"_commitment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"2015:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2003:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6578697374696e672d636f6d6d69746d656e74","id":393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2029:21:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_5c6c1e451984486878b69ec22830d9221d2527671ba25dc63f9945c9f792663e","typeString":"literal_string \"existing-commitment\""},"value":"existing-commitment"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5c6c1e451984486878b69ec22830d9221d2527671ba25dc63f9945c9f792663e","typeString":"literal_string \"existing-commitment\""}],"id":388,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1994:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1994:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":395,"nodeType":"ExpressionStatement","src":"1994:57:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":397,"name":"nextLeafIdx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"2069:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2083:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":399,"name":"treeLevel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"2088:9:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2083:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2069:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"747265652d66756c6c","id":402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2099:11:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_79667d92e767f9c2b87f921d0f07f2f70d324a72eecdee913888c956bb68872d","typeString":"literal_string \"tree-full\""},"value":"tree-full"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_79667d92e767f9c2b87f921d0f07f2f70d324a72eecdee913888c956bb68872d","typeString":"literal_string \"tree-full\""}],"id":396,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2061:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2061:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":404,"nodeType":"ExpressionStatement","src":"2061:50:2"},{"assignments":[406],"declarations":[{"constant":false,"id":406,"mutability":"mutable","name":"newRoot","nameLocation":"2130:7:2","nodeType":"VariableDeclaration","scope":575,"src":"2122:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":405,"name":"uint256","nodeType":"ElementaryTypeName","src":"2122:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":407,"nodeType":"VariableDeclarationStatement","src":"2122:15:2"},{"assignments":[413],"declarations":[{"constant":false,"id":413,"mutability":"mutable","name":"hashPairings","nameLocation":"2166:12:2","nodeType":"VariableDeclaration","scope":575,"src":"2147:31:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$10_memory_ptr","typeString":"uint256[10]"},"typeName":{"baseType":{"id":411,"name":"uint256","nodeType":"ElementaryTypeName","src":"2147:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":412,"length":{"hexValue":"3130","id":410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"ArrayTypeName","src":"2147:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$10_storage_ptr","typeString":"uint256[10]"}},"visibility":"internal"}],"id":414,"nodeType":"VariableDeclarationStatement","src":"2147:31:2"},{"assignments":[420],"declarations":[{"constant":false,"id":420,"mutability":"mutable","name":"hashDirections","nameLocation":"2205:14:2","nodeType":"VariableDeclaration","scope":575,"src":"2188:31:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$10_memory_ptr","typeString":"uint8[10]"},"typeName":{"baseType":{"id":418,"name":"uint8","nodeType":"ElementaryTypeName","src":"2188:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":419,"length":{"hexValue":"3130","id":417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2194:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"ArrayTypeName","src":"2188:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$10_storage_ptr","typeString":"uint8[10]"}},"visibility":"internal"}],"id":421,"nodeType":"VariableDeclarationStatement","src":"2188:31:2"},{"assignments":[423],"declarations":[{"constant":false,"id":423,"mutability":"mutable","name":"currentIdx","nameLocation":"2238:10:2","nodeType":"VariableDeclaration","scope":575,"src":"2230:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":422,"name":"uint256","nodeType":"ElementaryTypeName","src":"2230:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":425,"initialValue":{"id":424,"name":"nextLeafIdx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"2251:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2230:32:2"},{"assignments":[427],"declarations":[{"constant":false,"id":427,"mutability":"mutable","name":"currentHash","nameLocation":"2280:11:2","nodeType":"VariableDeclaration","scope":575,"src":"2272:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":426,"name":"uint256","nodeType":"ElementaryTypeName","src":"2272:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":429,"initialValue":{"id":428,"name":"_commitment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"2294:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2272:33:2"},{"assignments":[431],"declarations":[{"constant":false,"id":431,"mutability":"mutable","name":"left","nameLocation":"2324:4:2","nodeType":"VariableDeclaration","scope":575,"src":"2316:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"2316:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":432,"nodeType":"VariableDeclarationStatement","src":"2316:12:2"},{"assignments":[434],"declarations":[{"constant":false,"id":434,"mutability":"mutable","name":"right","nameLocation":"2346:5:2","nodeType":"VariableDeclaration","scope":575,"src":"2338:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":433,"name":"uint256","nodeType":"ElementaryTypeName","src":"2338:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":435,"nodeType":"VariableDeclarationStatement","src":"2338:13:2"},{"assignments":[441],"declarations":[{"constant":false,"id":441,"mutability":"mutable","name":"ins","nameLocation":"2379:3:2","nodeType":"VariableDeclaration","scope":575,"src":"2361:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":439,"name":"uint256","nodeType":"ElementaryTypeName","src":"2361:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":440,"length":{"hexValue":"32","id":438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"2361:10:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"id":442,"nodeType":"VariableDeclarationStatement","src":"2361:21:2"},{"body":{"id":547,"nodeType":"Block","src":"2437:683:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":453,"name":"currentIdx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"2467:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2480:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2467:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2485:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2467:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":507,"nodeType":"Block","src":"2675:184:2","statements":[{"expression":{"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":483,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"2693:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":484,"name":"lastLevelHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"2700:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint8_$_t_uint256_$","typeString":"mapping(uint8 => uint256)"}},"id":486,"indexExpression":{"id":485,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2714:1:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2700:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2693:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":488,"nodeType":"ExpressionStatement","src":"2693:23:2"},{"expression":{"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":489,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"2734:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":490,"name":"currentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"2742:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2734:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":492,"nodeType":"ExpressionStatement","src":"2734:19:2"},{"expression":{"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":493,"name":"hashPairings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"2771:12:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$10_memory_ptr","typeString":"uint256[10] memory"}},"id":495,"indexExpression":{"id":494,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2784:1:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2771:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":496,"name":"lastLevelHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"2789:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint8_$_t_uint256_$","typeString":"mapping(uint8 => uint256)"}},"id":498,"indexExpression":{"id":497,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2803:1:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2789:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2771:34:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":500,"nodeType":"ExpressionStatement","src":"2771:34:2"},{"expression":{"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":501,"name":"hashDirections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"2823:14:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$10_memory_ptr","typeString":"uint8[10] memory"}},"id":503,"indexExpression":{"id":502,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2838:1:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2823:17:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2843:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2823:21:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":506,"nodeType":"ExpressionStatement","src":"2823:21:2"}]},"id":508,"nodeType":"IfStatement","src":"2464:395:2","trueBody":{"id":482,"nodeType":"Block","src":"2487:184:2","statements":[{"expression":{"id":460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":458,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"2505:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":459,"name":"currentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"2512:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2505:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":461,"nodeType":"ExpressionStatement","src":"2505:18:2"},{"expression":{"id":466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":462,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"2541:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":463,"name":"levelDefaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"2549:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$10_storage","typeString":"uint256[10] storage ref"}},"id":465,"indexExpression":{"id":464,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2563:1:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2549:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2541:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":467,"nodeType":"ExpressionStatement","src":"2541:24:2"},{"expression":{"id":474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":468,"name":"hashPairings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"2583:12:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$10_memory_ptr","typeString":"uint256[10] memory"}},"id":470,"indexExpression":{"id":469,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2596:1:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2583:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":471,"name":"levelDefaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"2601:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$10_storage","typeString":"uint256[10] storage ref"}},"id":473,"indexExpression":{"id":472,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2615:1:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2601:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2583:34:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":475,"nodeType":"ExpressionStatement","src":"2583:34:2"},{"expression":{"id":480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":476,"name":"hashDirections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"2635:14:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$10_memory_ptr","typeString":"uint8[10] memory"}},"id":478,"indexExpression":{"id":477,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2650:1:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2635:17:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2655:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2635:21:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":481,"nodeType":"ExpressionStatement","src":"2635:21:2"}]}},{"expression":{"id":513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":509,"name":"lastLevelHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"2872:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint8_$_t_uint256_$","typeString":"mapping(uint8 => uint256)"}},"id":511,"indexExpression":{"id":510,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2886:1:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2872:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":512,"name":"currentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"2891:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:30:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":514,"nodeType":"ExpressionStatement","src":"2872:30:2"},{"expression":{"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":515,"name":"ins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"2917:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":517,"indexExpression":{"hexValue":"30","id":516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2921:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2917:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":518,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"2926:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2917:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":520,"nodeType":"ExpressionStatement","src":"2917:13:2"},{"expression":{"id":525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":521,"name":"ins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"2944:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":523,"indexExpression":{"hexValue":"31","id":522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2944:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":524,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"2953:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2944:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":526,"nodeType":"ExpressionStatement","src":"2944:14:2"},{"assignments":[528],"declarations":[{"constant":false,"id":528,"mutability":"mutable","name":"h","nameLocation":"2982:1:2","nodeType":"VariableDeclaration","scope":547,"src":"2974:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":527,"name":"uint256","nodeType":"ElementaryTypeName","src":"2974:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":536,"initialValue":{"arguments":[{"id":533,"name":"ins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"3021:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":534,"name":"_commitment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"3026:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":529,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"2987:6:2","typeDescriptions":{"typeIdentifier":"t_contract$_Hasher_$199","typeString":"contract Hasher"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2994:11:2","memberName":"MiMC5Sponge","nodeType":"MemberAccess","referencedDeclaration":198,"src":"2987:18:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[2] memory,uint256) view external returns (uint256)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["gas"],"nodeType":"FunctionCallOptions","options":[{"hexValue":"313530303030","id":531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3012:6:2","typeDescriptions":{"typeIdentifier":"t_rational_150000_by_1","typeString":"int_const 150000"},"value":"150000"}],"src":"2987:33:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_uint256_$gas","typeString":"function (uint256[2] memory,uint256) view external returns (uint256)"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2987:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2973:65:2"},{"expression":{"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":537,"name":"currentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"3053:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":538,"name":"h","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"3067:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3053:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":540,"nodeType":"ExpressionStatement","src":"3053:15:2"},{"expression":{"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":541,"name":"currentIdx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"3082:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":542,"name":"currentIdx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"3095:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3108:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3095:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3082:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":546,"nodeType":"ExpressionStatement","src":"3082:27:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":447,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2418:1:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":448,"name":"treeLevel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"2422:9:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2418:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":548,"initializationExpression":{"assignments":[444],"declarations":[{"constant":false,"id":444,"mutability":"mutable","name":"i","nameLocation":"2411:1:2","nodeType":"VariableDeclaration","scope":548,"src":"2405:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":443,"name":"uint8","nodeType":"ElementaryTypeName","src":"2405:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":446,"initialValue":{"hexValue":"30","id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2405:11:2"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2433:3:2","subExpression":{"id":450,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2433:1:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":452,"nodeType":"ExpressionStatement","src":"2433:3:2"},"nodeType":"ForStatement","src":"2401:719:2"},{"expression":{"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":549,"name":"newRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"3130:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":550,"name":"currentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"3140:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3130:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":552,"nodeType":"ExpressionStatement","src":"3130:21:2"},{"expression":{"id":557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":553,"name":"roots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"3161:5:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":555,"indexExpression":{"id":554,"name":"newRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"3167:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3161:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3178:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3161:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":558,"nodeType":"ExpressionStatement","src":"3161:21:2"},{"expression":{"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":559,"name":"nextLeafIdx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"3192:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3207:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3192:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":562,"nodeType":"ExpressionStatement","src":"3192:16:2"},{"expression":{"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":563,"name":"commitments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"3219:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":565,"indexExpression":{"id":564,"name":"_commitment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"3231:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3219:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3246:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3219:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":568,"nodeType":"ExpressionStatement","src":"3219:31:2"},{"eventCall":{"arguments":[{"id":570,"name":"newRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"3273:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":571,"name":"hashPairings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"3282:12:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$10_memory_ptr","typeString":"uint256[10] memory"}},{"id":572,"name":"hashDirections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"3296:14:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$10_memory_ptr","typeString":"uint8[10] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$10_memory_ptr","typeString":"uint256[10] memory"},{"typeIdentifier":"t_array$_t_uint8_$10_memory_ptr","typeString":"uint8[10] memory"}],"id":569,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"3265:7:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_array$_t_uint256_$10_memory_ptr_$_t_array$_t_uint8_$10_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[10] memory,uint8[10] memory)"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":574,"nodeType":"EmitStatement","src":"3260:51:2"}]},"functionSelector":"b6b55f25","id":576,"implemented":true,"kind":"function","modifiers":[{"id":378,"kind":"modifierInvocation","modifierName":{"id":377,"name":"nonReentrant","nameLocations":["1907:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"1907:12:2"},"nodeType":"ModifierInvocation","src":"1907:12:2"}],"name":"deposit","nameLocation":"1861:7:2","nodeType":"FunctionDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":375,"mutability":"mutable","name":"_commitment","nameLocation":"1877:11:2","nodeType":"VariableDeclaration","scope":576,"src":"1869:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":374,"name":"uint256","nodeType":"ElementaryTypeName","src":"1869:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1868:21:2"},"returnParameters":{"id":379,"nodeType":"ParameterList","parameters":[],"src":"1920:0:2"},"scope":697,"src":"1852:1466:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":695,"nodeType":"Block","src":"3489:682:2","statements":[{"assignments":[600],"declarations":[{"constant":false,"id":600,"mutability":"mutable","name":"_root","nameLocation":"3507:5:2","nodeType":"VariableDeclaration","scope":695,"src":"3499:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":599,"name":"uint256","nodeType":"ElementaryTypeName","src":"3499:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":604,"initialValue":{"baseExpression":{"id":601,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"3515:5:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":603,"indexExpression":{"hexValue":"30","id":602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3521:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3515:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3499:24:2"},{"assignments":[606],"declarations":[{"constant":false,"id":606,"mutability":"mutable","name":"_nullifierHash","nameLocation":"3541:14:2","nodeType":"VariableDeclaration","scope":695,"src":"3533:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":605,"name":"uint256","nodeType":"ElementaryTypeName","src":"3533:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":610,"initialValue":{"baseExpression":{"id":607,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"3558:5:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":609,"indexExpression":{"hexValue":"31","id":608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3564:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3558:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3533:33:2"},{"expression":{"arguments":[{"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3585:32:2","subExpression":{"baseExpression":{"id":612,"name":"nullifierHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"3586:15:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":614,"indexExpression":{"id":613,"name":"_nullifierHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"3602:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3586:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"616c72656164792d7370656e74","id":616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3619:15:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_a32931b777e72ad377b288078cfdc0383c1aed1272920f82b34f8097600b11b3","typeString":"literal_string \"already-spent\""},"value":"already-spent"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a32931b777e72ad377b288078cfdc0383c1aed1272920f82b34f8097600b11b3","typeString":"literal_string \"already-spent\""}],"id":611,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3577:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3577:58:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":618,"nodeType":"ExpressionStatement","src":"3577:58:2"},{"expression":{"arguments":[{"baseExpression":{"id":620,"name":"roots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"3653:5:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":622,"indexExpression":{"id":621,"name":"_root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"3659:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3653:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6e6f742d726f6f74","id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3667:10:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_3a4e6fe3f9d4d62193dacb5816b64ecbf0cc0ff75d0d5e46adb999d2800039ba","typeString":"literal_string \"not-root\""},"value":"not-root"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3a4e6fe3f9d4d62193dacb5816b64ecbf0cc0ff75d0d5e46adb999d2800039ba","typeString":"literal_string \"not-root\""}],"id":619,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3645:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3645:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":625,"nodeType":"ExpressionStatement","src":"3645:33:2"},{"assignments":[627],"declarations":[{"constant":false,"id":627,"mutability":"mutable","name":"_addr","nameLocation":"3697:5:2","nodeType":"VariableDeclaration","scope":695,"src":"3689:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":626,"name":"uint256","nodeType":"ElementaryTypeName","src":"3689:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":636,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":632,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3721:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3725:6:2","memberName":"sender","nodeType":"MemberAccess","src":"3721:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3713:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":630,"name":"uint160","nodeType":"ElementaryTypeName","src":"3713:7:2","typeDescriptions":{}}},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3713:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3705:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":628,"name":"uint256","nodeType":"ElementaryTypeName","src":"3705:7:2","typeDescriptions":{}}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3705:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3689:44:2"},{"assignments":[638,null],"declarations":[{"constant":false,"id":638,"mutability":"mutable","name":"verifyOK","nameLocation":"3750:8:2","nodeType":"VariableDeclaration","scope":695,"src":"3745:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":637,"name":"bool","nodeType":"ElementaryTypeName","src":"3745:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":655,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":643,"name":"IVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"3793:9:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVerifier_$290_$","typeString":"type(contract IVerifier)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3803:11:2","memberName":"verifyProof","nodeType":"MemberAccess","referencedDeclaration":289,"src":"3793:21:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$returns$__$","typeString":"function IVerifier.verifyProof(uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[3] memory)"}},{"components":[{"id":645,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"3817:1:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":646,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"3820:1:2","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr","typeString":"uint256[2] memory[2] memory"}},{"id":647,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"3823:1:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"components":[{"id":648,"name":"_root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"3827:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":649,"name":"_nullifierHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"3834:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":650,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"3850:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":651,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3826:30:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}}],"id":652,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3816:41:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$","typeString":"tuple(uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[3] memory)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$returns$__$","typeString":"function IVerifier.verifyProof(uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[3] memory)"},{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$","typeString":"tuple(uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[3] memory)"}],"expression":{"id":641,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3778:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3782:10:2","memberName":"encodeCall","nodeType":"MemberAccess","src":"3778:14:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3778:80:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":639,"name":"verifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"3764:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3773:4:2","memberName":"call","nodeType":"MemberAccess","src":"3764:13:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3764:95:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3744:115:2"},{"expression":{"arguments":[{"id":657,"name":"verifyOK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"3878:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c69642d70726f6f66","id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3888:15:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_04a9a5c2c6ab0ee05a1a0015cdbf4919d93004c57d14f279451839df4ca72fce","typeString":"literal_string \"invalid-proof\""},"value":"invalid-proof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04a9a5c2c6ab0ee05a1a0015cdbf4919d93004c57d14f279451839df4ca72fce","typeString":"literal_string \"invalid-proof\""}],"id":656,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3870:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3870:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":660,"nodeType":"ExpressionStatement","src":"3870:34:2"},{"expression":{"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":661,"name":"nullifierHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"3915:15:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":663,"indexExpression":{"id":662,"name":"_nullifierHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"3931:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3915:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3949:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3915:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":666,"nodeType":"ExpressionStatement","src":"3915:38:2"},{"assignments":[668],"declarations":[{"constant":false,"id":668,"mutability":"mutable","name":"target","nameLocation":"3979:6:2","nodeType":"VariableDeclaration","scope":695,"src":"3963:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"3963:15:2","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"id":674,"initialValue":{"arguments":[{"expression":{"id":671,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3996:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4000:6:2","memberName":"sender","nodeType":"MemberAccess","src":"3996:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3988:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":669,"name":"address","nodeType":"ElementaryTypeName","src":"3988:8:2","stateMutability":"payable","typeDescriptions":{}}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3988:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"3963:44:2"},{"assignments":[676,null],"declarations":[{"constant":false,"id":676,"mutability":"mutable","name":"ok","nameLocation":"4024:2:2","nodeType":"VariableDeclaration","scope":695,"src":"4019:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":675,"name":"bool","nodeType":"ElementaryTypeName","src":"4019:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":683,"initialValue":{"arguments":[{"hexValue":"","id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4067:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":677,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"4032:6:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4039:4:2","memberName":"call","nodeType":"MemberAccess","src":"4032:11:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":679,"name":"denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"4052:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4032:34:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4018:52:2"},{"expression":{"arguments":[{"id":685,"name":"ok","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"4089:2:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7061796d656e742d6661696c6564","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4093:16:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e81ba5761687e4b7eb966295d56748bffb88ec05a90383087cba9ff18c1f650","typeString":"literal_string \"payment-failed\""},"value":"payment-failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e81ba5761687e4b7eb966295d56748bffb88ec05a90383087cba9ff18c1f650","typeString":"literal_string \"payment-failed\""}],"id":684,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4081:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4081:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":688,"nodeType":"ExpressionStatement","src":"4081:29:2"},{"eventCall":{"arguments":[{"expression":{"id":690,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4137:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4141:6:2","memberName":"sender","nodeType":"MemberAccess","src":"4137:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":692,"name":"_nullifierHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"4149:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":689,"name":"Withdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"4126:10:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4126:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":694,"nodeType":"EmitStatement","src":"4121:43:2"}]},"functionSelector":"c78784d7","id":696,"implemented":true,"kind":"function","modifiers":[{"id":597,"kind":"modifierInvocation","modifierName":{"id":596,"name":"nonReentrant","nameLocations":["3476:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"3476:12:2"},"nodeType":"ModifierInvocation","src":"3476:12:2"}],"name":"withdraw","nameLocation":"3333:8:2","nodeType":"FunctionDefinition","parameters":{"id":595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"mutability":"mutable","name":"a","nameLocation":"3366:1:2","nodeType":"VariableDeclaration","scope":696,"src":"3351:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":577,"name":"uint","nodeType":"ElementaryTypeName","src":"3351:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":579,"length":{"hexValue":"32","id":578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3356:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"3351:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":586,"mutability":"mutable","name":"b","nameLocation":"3395:1:2","nodeType":"VariableDeclaration","scope":696,"src":"3377:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr","typeString":"uint256[2][2]"},"typeName":{"baseType":{"baseType":{"id":581,"name":"uint","nodeType":"ElementaryTypeName","src":"3377:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":583,"length":{"hexValue":"32","id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3382:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"3377:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"id":585,"length":{"hexValue":"32","id":584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3385:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"3377:10:2","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr","typeString":"uint256[2][2]"}},"visibility":"internal"},{"constant":false,"id":590,"mutability":"mutable","name":"c","nameLocation":"3421:1:2","nodeType":"VariableDeclaration","scope":696,"src":"3406:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":587,"name":"uint","nodeType":"ElementaryTypeName","src":"3406:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":589,"length":{"hexValue":"32","id":588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3411:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"3406:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":594,"mutability":"mutable","name":"input","nameLocation":"3447:5:2","nodeType":"VariableDeclaration","scope":696,"src":"3432:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":591,"name":"uint","nodeType":"ElementaryTypeName","src":"3432:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":593,"length":{"hexValue":"32","id":592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3437:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"3432:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"src":"3341:117:2"},"returnParameters":{"id":598,"nodeType":"ParameterList","parameters":[],"src":"3489:0:2"},"scope":697,"src":"3324:847:2","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":698,"src":"258:3932:2","usedErrors":[],"usedEvents":[349,355]}],"src":"33:4157:2"}},"contracts/Verifier.sol":{"id":3,"ast":{"absolutePath":"contracts/Verifier.sol","exportedSymbols":{"Pairing":[1329],"Verifier":[1734]},"id":1735,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":699,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"1232:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"Pairing","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":1329,"linearizedBaseContracts":[1329],"name":"Pairing","nameLocation":"1265:7:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Pairing.G1Point","id":704,"members":[{"constant":false,"id":701,"mutability":"mutable","name":"X","nameLocation":"1309:1:3","nodeType":"VariableDeclaration","scope":704,"src":"1304:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":700,"name":"uint","nodeType":"ElementaryTypeName","src":"1304:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":703,"mutability":"mutable","name":"Y","nameLocation":"1325:1:3","nodeType":"VariableDeclaration","scope":704,"src":"1320:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":702,"name":"uint","nodeType":"ElementaryTypeName","src":"1320:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"G1Point","nameLocation":"1286:7:3","nodeType":"StructDefinition","scope":1329,"src":"1279:54:3","visibility":"public"},{"canonicalName":"Pairing.G2Point","id":713,"members":[{"constant":false,"id":708,"mutability":"mutable","name":"X","nameLocation":"1425:1:3","nodeType":"VariableDeclaration","scope":713,"src":"1417:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":705,"name":"uint","nodeType":"ElementaryTypeName","src":"1417:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":707,"length":{"hexValue":"32","id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1422:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"1417:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":712,"mutability":"mutable","name":"Y","nameLocation":"1444:1:3","nodeType":"VariableDeclaration","scope":713,"src":"1436:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":709,"name":"uint","nodeType":"ElementaryTypeName","src":"1436:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":711,"length":{"hexValue":"32","id":710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1441:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"1436:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"name":"G2Point","nameLocation":"1399:7:3","nodeType":"StructDefinition","scope":1329,"src":"1392:60:3","visibility":"public"},{"body":{"id":725,"nodeType":"Block","src":"1546:37:3","statements":[{"expression":{"arguments":[{"hexValue":"31","id":721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1571:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"32","id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1574:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":720,"name":"G1Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"1563:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G1Point_$704_storage_ptr_$","typeString":"type(struct Pairing.G1Point storage pointer)"}},"id":723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1563:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"functionReturnParameters":719,"id":724,"nodeType":"Return","src":"1556:20:3"}]},"documentation":{"id":714,"nodeType":"StructuredDocumentation","src":"1457:31:3","text":"@return the generator of G1"},"id":726,"implemented":true,"kind":"function","modifiers":[],"name":"P1","nameLocation":"1502:2:3","nodeType":"FunctionDefinition","parameters":{"id":715,"nodeType":"ParameterList","parameters":[],"src":"1504:2:3"},"returnParameters":{"id":719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":726,"src":"1530:14:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":717,"nodeType":"UserDefinedTypeName","pathNode":{"id":716,"name":"G1Point","nameLocations":["1530:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"1530:7:3"},"referencedDeclaration":704,"src":"1530:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"}],"src":"1529:16:3"},"scope":1329,"src":"1493:90:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":742,"nodeType":"Block","src":"1677:883:3","statements":[{"expression":{"arguments":[{"components":[{"hexValue":"3131353539373332303332393836333837313037393931303034303231333932323835373833393235383132383631383231313932353330393137343033313531343532333931383035363334","id":734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1747:77:3","typeDescriptions":{"typeIdentifier":"t_rational_11559732032986387107991004021392285783925812861821192530917403151452391805634_by_1","typeString":"int_const 1155...(69 digits omitted)...5634"},"value":"11559732032986387107991004021392285783925812861821192530917403151452391805634"},{"hexValue":"3130383537303436393939303233303537313335393434353730373632323332383239343831333730373536333539353738353138303836393930353139393933323835363535383532373831","id":735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1839:77:3","typeDescriptions":{"typeIdentifier":"t_rational_10857046999023057135944570762232829481370756359578518086990519993285655852781_by_1","typeString":"int_const 1085...(69 digits omitted)...2781"},"value":"10857046999023057135944570762232829481370756359578518086990519993285655852781"}],"id":736,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:171:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"components":[{"hexValue":"34303832333637383735383633343333363831333332323033343033313435343335353638333136383531333237353933343031323038313035373431303736323134313230303933353331","id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1932:76:3","typeDescriptions":{"typeIdentifier":"t_rational_4082367875863433681332203403145435568316851327593401208105741076214120093531_by_1","typeString":"int_const 4082...(68 digits omitted)...3531"},"value":"4082367875863433681332203403145435568316851327593401208105741076214120093531"},{"hexValue":"38343935363533393233313233343331343137363034393733323437343839323732343338343138313930353837323633363030313438373730323830363439333036393538313031393330","id":738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2023:76:3","typeDescriptions":{"typeIdentifier":"t_rational_8495653923123431417604973247489272438418190587263600148770280649306958101930_by_1","typeString":"int_const 8495...(68 digits omitted)...1930"},"value":"8495653923123431417604973247489272438418190587263600148770280649306958101930"}],"id":739,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1931:169:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"id":733,"name":"G2Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"1725:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G2Point_$713_storage_ptr_$","typeString":"type(struct Pairing.G2Point storage pointer)"}},"id":740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1725:385:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"functionReturnParameters":732,"id":741,"nodeType":"Return","src":"1718:392:3"}]},"documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"1588:31:3","text":"@return the generator of G2"},"id":743,"implemented":true,"kind":"function","modifiers":[],"name":"P2","nameLocation":"1633:2:3","nodeType":"FunctionDefinition","parameters":{"id":728,"nodeType":"ParameterList","parameters":[],"src":"1635:2:3"},"returnParameters":{"id":732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":743,"src":"1661:14:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point"},"typeName":{"id":730,"nodeType":"UserDefinedTypeName","pathNode":{"id":729,"name":"G2Point","nameLocations":["1661:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":713,"src":"1661:7:3"},"referencedDeclaration":713,"src":"1661:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_storage_ptr","typeString":"struct Pairing.G2Point"}},"visibility":"internal"}],"src":"1660:16:3"},"scope":1329,"src":"1624:936:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":784,"nodeType":"Block","src":"2721:267:3","statements":[{"assignments":[754],"declarations":[{"constant":false,"id":754,"mutability":"mutable","name":"q","nameLocation":"2788:1:3","nodeType":"VariableDeclaration","scope":784,"src":"2783:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":753,"name":"uint","nodeType":"ElementaryTypeName","src":"2783:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":756,"initialValue":{"hexValue":"3231383838323432383731383339323735323232323436343035373435323537323735303838363936333131313537323937383233363632363839303337383934363435323236323038353833","id":755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2792:77:3","typeDescriptions":{"typeIdentifier":"t_rational_21888242871839275222246405745257275088696311157297823662689037894645226208583_by_1","typeString":"int_const 2188...(69 digits omitted)...8583"},"value":"21888242871839275222246405745257275088696311157297823662689037894645226208583"},"nodeType":"VariableDeclarationStatement","src":"2783:86:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":757,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"2883:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":758,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2885:1:3","memberName":"X","nodeType":"MemberAccess","referencedDeclaration":701,"src":"2883:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2883:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":761,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"2895:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":762,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2897:1:3","memberName":"Y","nodeType":"MemberAccess","referencedDeclaration":703,"src":"2895:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2902:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2895:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2883:20:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":771,"nodeType":"IfStatement","src":"2879:58:3","trueBody":{"expression":{"arguments":[{"hexValue":"30","id":767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2932:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2935:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":766,"name":"G1Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"2924:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G1Point_$704_storage_ptr_$","typeString":"type(struct Pairing.G1Point storage pointer)"}},"id":769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2924:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"functionReturnParameters":752,"id":770,"nodeType":"Return","src":"2917:20:3"}},{"expression":{"arguments":[{"expression":{"id":773,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"2962:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2964:1:3","memberName":"X","nodeType":"MemberAccess","referencedDeclaration":701,"src":"2962:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":775,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"2967:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":776,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"2972:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":777,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2974:1:3","memberName":"Y","nodeType":"MemberAccess","referencedDeclaration":703,"src":"2972:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":778,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"2978:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2972:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":780,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2971:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2967:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":772,"name":"G1Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"2954:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G1Point_$704_storage_ptr_$","typeString":"type(struct Pairing.G1Point storage pointer)"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2954:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"functionReturnParameters":752,"id":783,"nodeType":"Return","src":"2947:34:3"}]},"documentation":{"id":744,"nodeType":"StructuredDocumentation","src":"2565:76:3","text":"@return r the negation of p, i.e. p.addition(p.negate()) should be zero."},"id":785,"implemented":true,"kind":"function","modifiers":[],"name":"negate","nameLocation":"2655:6:3","nodeType":"FunctionDefinition","parameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"p","nameLocation":"2677:1:3","nodeType":"VariableDeclaration","scope":785,"src":"2662:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":746,"nodeType":"UserDefinedTypeName","pathNode":{"id":745,"name":"G1Point","nameLocations":["2662:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"2662:7:3"},"referencedDeclaration":704,"src":"2662:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"}],"src":"2661:18:3"},"returnParameters":{"id":752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"r","nameLocation":"2718:1:3","nodeType":"VariableDeclaration","scope":785,"src":"2703:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":750,"nodeType":"UserDefinedTypeName","pathNode":{"id":749,"name":"G1Point","nameLocations":["2703:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"2703:7:3"},"referencedDeclaration":704,"src":"2703:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"}],"src":"2702:18:3"},"scope":1329,"src":"2646:342:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":842,"nodeType":"Block","src":"3136:481:3","statements":[{"assignments":[803],"declarations":[{"constant":false,"id":803,"mutability":"mutable","name":"input","nameLocation":"3161:5:3","nodeType":"VariableDeclaration","scope":842,"src":"3146:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$4_memory_ptr","typeString":"uint256[4]"},"typeName":{"baseType":{"id":801,"name":"uint","nodeType":"ElementaryTypeName","src":"3146:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":802,"length":{"hexValue":"34","id":800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3151:1:3","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"ArrayTypeName","src":"3146:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$4_storage_ptr","typeString":"uint256[4]"}},"visibility":"internal"}],"id":804,"nodeType":"VariableDeclarationStatement","src":"3146:20:3"},{"expression":{"id":810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":805,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"3176:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$4_memory_ptr","typeString":"uint256[4] memory"}},"id":807,"indexExpression":{"hexValue":"30","id":806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3182:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3176:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":808,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"3187:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":809,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3190:1:3","memberName":"X","nodeType":"MemberAccess","referencedDeclaration":701,"src":"3187:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3176:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":811,"nodeType":"ExpressionStatement","src":"3176:15:3"},{"expression":{"id":817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":812,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"3201:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$4_memory_ptr","typeString":"uint256[4] memory"}},"id":814,"indexExpression":{"hexValue":"31","id":813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3207:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3201:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":815,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"3212:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":816,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3215:1:3","memberName":"Y","nodeType":"MemberAccess","referencedDeclaration":703,"src":"3212:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3201:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":818,"nodeType":"ExpressionStatement","src":"3201:15:3"},{"expression":{"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":819,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"3226:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$4_memory_ptr","typeString":"uint256[4] memory"}},"id":821,"indexExpression":{"hexValue":"32","id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3232:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3226:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":822,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"3237:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":823,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3240:1:3","memberName":"X","nodeType":"MemberAccess","referencedDeclaration":701,"src":"3237:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3226:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":825,"nodeType":"ExpressionStatement","src":"3226:15:3"},{"expression":{"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":826,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"3251:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$4_memory_ptr","typeString":"uint256[4] memory"}},"id":828,"indexExpression":{"hexValue":"33","id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3257:1:3","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3251:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":829,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"3262:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":830,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3265:1:3","memberName":"Y","nodeType":"MemberAccess","referencedDeclaration":703,"src":"3262:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3251:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":832,"nodeType":"ExpressionStatement","src":"3251:15:3"},{"assignments":[834],"declarations":[{"constant":false,"id":834,"mutability":"mutable","name":"success","nameLocation":"3281:7:3","nodeType":"VariableDeclaration","scope":842,"src":"3276:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":833,"name":"bool","nodeType":"ElementaryTypeName","src":"3276:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":835,"nodeType":"VariableDeclarationStatement","src":"3276:12:3"},{"AST":{"nativeSrc":"3371:193:3","nodeType":"YulBlock","src":"3371:193:3","statements":[{"nativeSrc":"3385:64:3","nodeType":"YulAssignment","src":"3385:64:3","value":{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"3411:3:3","nodeType":"YulIdentifier","src":"3411:3:3"},"nativeSrc":"3411:5:3","nodeType":"YulFunctionCall","src":"3411:5:3"},{"kind":"number","nativeSrc":"3418:4:3","nodeType":"YulLiteral","src":"3418:4:3","type":"","value":"2000"}],"functionName":{"name":"sub","nativeSrc":"3407:3:3","nodeType":"YulIdentifier","src":"3407:3:3"},"nativeSrc":"3407:16:3","nodeType":"YulFunctionCall","src":"3407:16:3"},{"kind":"number","nativeSrc":"3425:1:3","nodeType":"YulLiteral","src":"3425:1:3","type":"","value":"6"},{"name":"input","nativeSrc":"3428:5:3","nodeType":"YulIdentifier","src":"3428:5:3"},{"kind":"number","nativeSrc":"3435:4:3","nodeType":"YulLiteral","src":"3435:4:3","type":"","value":"0xc0"},{"name":"r","nativeSrc":"3441:1:3","nodeType":"YulIdentifier","src":"3441:1:3"},{"kind":"number","nativeSrc":"3444:4:3","nodeType":"YulLiteral","src":"3444:4:3","type":"","value":"0x60"}],"functionName":{"name":"staticcall","nativeSrc":"3396:10:3","nodeType":"YulIdentifier","src":"3396:10:3"},"nativeSrc":"3396:53:3","nodeType":"YulFunctionCall","src":"3396:53:3"},"variableNames":[{"name":"success","nativeSrc":"3385:7:3","nodeType":"YulIdentifier","src":"3385:7:3"}]},{"cases":[{"body":{"nativeSrc":"3541:13:3","nodeType":"YulBlock","src":"3541:13:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"invalid","nativeSrc":"3543:7:3","nodeType":"YulIdentifier","src":"3543:7:3"},"nativeSrc":"3543:9:3","nodeType":"YulFunctionCall","src":"3543:9:3"},"nativeSrc":"3543:9:3","nodeType":"YulExpressionStatement","src":"3543:9:3"}]},"nativeSrc":"3534:20:3","nodeType":"YulCase","src":"3534:20:3","value":{"kind":"number","nativeSrc":"3539:1:3","nodeType":"YulLiteral","src":"3539:1:3","type":"","value":"0"}}],"expression":{"name":"success","nativeSrc":"3526:7:3","nodeType":"YulIdentifier","src":"3526:7:3"},"nativeSrc":"3519:35:3","nodeType":"YulSwitch","src":"3519:35:3"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":803,"isOffset":false,"isSlot":false,"src":"3428:5:3","valueSize":1},{"declaration":796,"isOffset":false,"isSlot":false,"src":"3441:1:3","valueSize":1},{"declaration":834,"isOffset":false,"isSlot":false,"src":"3385:7:3","valueSize":1},{"declaration":834,"isOffset":false,"isSlot":false,"src":"3526:7:3","valueSize":1}],"id":836,"nodeType":"InlineAssembly","src":"3362:202:3"},{"expression":{"arguments":[{"id":838,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"3581:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"70616972696e672d6164642d6661696c6564","id":839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3589:20:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_e428a53e578d13ee2fc3b8849114332d6a94afed893fa747a37e281039728688","typeString":"literal_string \"pairing-add-failed\""},"value":"pairing-add-failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e428a53e578d13ee2fc3b8849114332d6a94afed893fa747a37e281039728688","typeString":"literal_string \"pairing-add-failed\""}],"id":837,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3573:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3573:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":841,"nodeType":"ExpressionStatement","src":"3573:37:3"}]},"documentation":{"id":786,"nodeType":"StructuredDocumentation","src":"2993:41:3","text":"@return r the sum of two points of G1"},"id":843,"implemented":true,"kind":"function","modifiers":[],"name":"addition","nameLocation":"3048:8:3","nodeType":"FunctionDefinition","parameters":{"id":793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"p1","nameLocation":"3072:2:3","nodeType":"VariableDeclaration","scope":843,"src":"3057:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":788,"nodeType":"UserDefinedTypeName","pathNode":{"id":787,"name":"G1Point","nameLocations":["3057:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"3057:7:3"},"referencedDeclaration":704,"src":"3057:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"},{"constant":false,"id":792,"mutability":"mutable","name":"p2","nameLocation":"3091:2:3","nodeType":"VariableDeclaration","scope":843,"src":"3076:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":791,"nodeType":"UserDefinedTypeName","pathNode":{"id":790,"name":"G1Point","nameLocations":["3076:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"3076:7:3"},"referencedDeclaration":704,"src":"3076:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"}],"src":"3056:38:3"},"returnParameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"r","nameLocation":"3133:1:3","nodeType":"VariableDeclaration","scope":843,"src":"3118:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":795,"nodeType":"UserDefinedTypeName","pathNode":{"id":794,"name":"G1Point","nameLocations":["3118:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"3118:7:3"},"referencedDeclaration":704,"src":"3118:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"}],"src":"3117:18:3"},"scope":1329,"src":"3039:578:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":891,"nodeType":"Block","src":"3859:452:3","statements":[{"assignments":[860],"declarations":[{"constant":false,"id":860,"mutability":"mutable","name":"input","nameLocation":"3884:5:3","nodeType":"VariableDeclaration","scope":891,"src":"3869:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3]"},"typeName":{"baseType":{"id":858,"name":"uint","nodeType":"ElementaryTypeName","src":"3869:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":859,"length":{"hexValue":"33","id":857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3874:1:3","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"3869:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"}},"visibility":"internal"}],"id":861,"nodeType":"VariableDeclarationStatement","src":"3869:20:3"},{"expression":{"id":867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":862,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"3899:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":864,"indexExpression":{"hexValue":"30","id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3905:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3899:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":865,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"3910:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":866,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3912:1:3","memberName":"X","nodeType":"MemberAccess","referencedDeclaration":701,"src":"3910:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3899:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":868,"nodeType":"ExpressionStatement","src":"3899:14:3"},{"expression":{"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":869,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"3923:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":871,"indexExpression":{"hexValue":"31","id":870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3929:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3923:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":872,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"3934:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":873,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3936:1:3","memberName":"Y","nodeType":"MemberAccess","referencedDeclaration":703,"src":"3934:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3923:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":875,"nodeType":"ExpressionStatement","src":"3923:14:3"},{"expression":{"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":876,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"3947:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":878,"indexExpression":{"hexValue":"32","id":877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3953:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3947:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":879,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"3958:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3947:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":881,"nodeType":"ExpressionStatement","src":"3947:12:3"},{"assignments":[883],"declarations":[{"constant":false,"id":883,"mutability":"mutable","name":"success","nameLocation":"3974:7:3","nodeType":"VariableDeclaration","scope":891,"src":"3969:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":882,"name":"bool","nodeType":"ElementaryTypeName","src":"3969:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":884,"nodeType":"VariableDeclarationStatement","src":"3969:12:3"},{"AST":{"nativeSrc":"4064:193:3","nodeType":"YulBlock","src":"4064:193:3","statements":[{"nativeSrc":"4078:64:3","nodeType":"YulAssignment","src":"4078:64:3","value":{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"4104:3:3","nodeType":"YulIdentifier","src":"4104:3:3"},"nativeSrc":"4104:5:3","nodeType":"YulFunctionCall","src":"4104:5:3"},{"kind":"number","nativeSrc":"4111:4:3","nodeType":"YulLiteral","src":"4111:4:3","type":"","value":"2000"}],"functionName":{"name":"sub","nativeSrc":"4100:3:3","nodeType":"YulIdentifier","src":"4100:3:3"},"nativeSrc":"4100:16:3","nodeType":"YulFunctionCall","src":"4100:16:3"},{"kind":"number","nativeSrc":"4118:1:3","nodeType":"YulLiteral","src":"4118:1:3","type":"","value":"7"},{"name":"input","nativeSrc":"4121:5:3","nodeType":"YulIdentifier","src":"4121:5:3"},{"kind":"number","nativeSrc":"4128:4:3","nodeType":"YulLiteral","src":"4128:4:3","type":"","value":"0x80"},{"name":"r","nativeSrc":"4134:1:3","nodeType":"YulIdentifier","src":"4134:1:3"},{"kind":"number","nativeSrc":"4137:4:3","nodeType":"YulLiteral","src":"4137:4:3","type":"","value":"0x60"}],"functionName":{"name":"staticcall","nativeSrc":"4089:10:3","nodeType":"YulIdentifier","src":"4089:10:3"},"nativeSrc":"4089:53:3","nodeType":"YulFunctionCall","src":"4089:53:3"},"variableNames":[{"name":"success","nativeSrc":"4078:7:3","nodeType":"YulIdentifier","src":"4078:7:3"}]},{"cases":[{"body":{"nativeSrc":"4234:13:3","nodeType":"YulBlock","src":"4234:13:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"invalid","nativeSrc":"4236:7:3","nodeType":"YulIdentifier","src":"4236:7:3"},"nativeSrc":"4236:9:3","nodeType":"YulFunctionCall","src":"4236:9:3"},"nativeSrc":"4236:9:3","nodeType":"YulExpressionStatement","src":"4236:9:3"}]},"nativeSrc":"4227:20:3","nodeType":"YulCase","src":"4227:20:3","value":{"kind":"number","nativeSrc":"4232:1:3","nodeType":"YulLiteral","src":"4232:1:3","type":"","value":"0"}}],"expression":{"name":"success","nativeSrc":"4219:7:3","nodeType":"YulIdentifier","src":"4219:7:3"},"nativeSrc":"4212:35:3","nodeType":"YulSwitch","src":"4212:35:3"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":860,"isOffset":false,"isSlot":false,"src":"4121:5:3","valueSize":1},{"declaration":853,"isOffset":false,"isSlot":false,"src":"4134:1:3","valueSize":1},{"declaration":883,"isOffset":false,"isSlot":false,"src":"4078:7:3","valueSize":1},{"declaration":883,"isOffset":false,"isSlot":false,"src":"4219:7:3","valueSize":1}],"id":885,"nodeType":"InlineAssembly","src":"4055:202:3"},{"expression":{"arguments":[{"id":887,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"4275:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"70616972696e672d6d756c2d6661696c6564","id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4283:20:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_63b4943691e0891cf5adcfe6e3eb490783b718accceadc0166bc4e56cf1df5de","typeString":"literal_string \"pairing-mul-failed\""},"value":"pairing-mul-failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_63b4943691e0891cf5adcfe6e3eb490783b718accceadc0166bc4e56cf1df5de","typeString":"literal_string \"pairing-mul-failed\""}],"id":886,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4266:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4266:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":890,"nodeType":"ExpressionStatement","src":"4266:38:3"}]},"documentation":{"id":844,"nodeType":"StructuredDocumentation","src":"3622:145:3","text":"@return r the product of a point on G1 and a scalar, i.e.\n p == p.scalar_mul(1) and p.addition(p) == p.scalar_mul(2) for all points p."},"id":892,"implemented":true,"kind":"function","modifiers":[],"name":"scalar_mul","nameLocation":"3781:10:3","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"mutability":"mutable","name":"p","nameLocation":"3807:1:3","nodeType":"VariableDeclaration","scope":892,"src":"3792:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":846,"nodeType":"UserDefinedTypeName","pathNode":{"id":845,"name":"G1Point","nameLocations":["3792:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"3792:7:3"},"referencedDeclaration":704,"src":"3792:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"},{"constant":false,"id":849,"mutability":"mutable","name":"s","nameLocation":"3815:1:3","nodeType":"VariableDeclaration","scope":892,"src":"3810:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":848,"name":"uint","nodeType":"ElementaryTypeName","src":"3810:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3791:26:3"},"returnParameters":{"id":854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":853,"mutability":"mutable","name":"r","nameLocation":"3856:1:3","nodeType":"VariableDeclaration","scope":892,"src":"3841:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":852,"nodeType":"UserDefinedTypeName","pathNode":{"id":851,"name":"G1Point","nameLocations":["3841:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"3841:7:3"},"referencedDeclaration":704,"src":"3841:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"}],"src":"3840:18:3"},"scope":1329,"src":"3772:539:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1057,"nodeType":"Block","src":"4610:948:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":907,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"4628:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4631:6:3","memberName":"length","nodeType":"MemberAccess","src":"4628:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":909,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"4641:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G2Point memory[] memory"}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4644:6:3","memberName":"length","nodeType":"MemberAccess","src":"4641:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4628:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"70616972696e672d6c656e677468732d6661696c6564","id":912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4651:24:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_d4c505601ed3bad1341fbb75434dd6541f91bae974d0b2bc28d5491a5c4a21cc","typeString":"literal_string \"pairing-lengths-failed\""},"value":"pairing-lengths-failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d4c505601ed3bad1341fbb75434dd6541f91bae974d0b2bc28d5491a5c4a21cc","typeString":"literal_string \"pairing-lengths-failed\""}],"id":906,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4620:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4620:56:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":914,"nodeType":"ExpressionStatement","src":"4620:56:3"},{"assignments":[916],"declarations":[{"constant":false,"id":916,"mutability":"mutable","name":"elements","nameLocation":"4691:8:3","nodeType":"VariableDeclaration","scope":1057,"src":"4686:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":915,"name":"uint","nodeType":"ElementaryTypeName","src":"4686:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":919,"initialValue":{"expression":{"id":917,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"4702:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4705:6:3","memberName":"length","nodeType":"MemberAccess","src":"4702:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4686:25:3"},{"assignments":[921],"declarations":[{"constant":false,"id":921,"mutability":"mutable","name":"inputSize","nameLocation":"4726:9:3","nodeType":"VariableDeclaration","scope":1057,"src":"4721:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":920,"name":"uint","nodeType":"ElementaryTypeName","src":"4721:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":925,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":922,"name":"elements","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"4738:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"36","id":923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4749:1:3","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"4738:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4721:29:3"},{"assignments":[930],"declarations":[{"constant":false,"id":930,"mutability":"mutable","name":"input","nameLocation":"4774:5:3","nodeType":"VariableDeclaration","scope":1057,"src":"4760:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":928,"name":"uint","nodeType":"ElementaryTypeName","src":"4760:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":929,"nodeType":"ArrayTypeName","src":"4760:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":936,"initialValue":{"arguments":[{"id":934,"name":"inputSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"4793:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4782:10:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":931,"name":"uint","nodeType":"ElementaryTypeName","src":"4786:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":932,"nodeType":"ArrayTypeName","src":"4786:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4760:43:3"},{"body":{"id":1033,"nodeType":"Block","src":"4857:263:3","statements":[{"expression":{"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":947,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"4871:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":953,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":948,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"4877:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"36","id":949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4881:1:3","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"4877:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30","id":951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4885:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4877:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4871:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":954,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"4890:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"}},"id":956,"indexExpression":{"id":955,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"4893:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4890:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":957,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4896:1:3","memberName":"X","nodeType":"MemberAccess","referencedDeclaration":701,"src":"4890:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4871:26:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":959,"nodeType":"ExpressionStatement","src":"4871:26:3"},{"expression":{"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":960,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"4911:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":966,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":961,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"4917:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"36","id":962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4921:1:3","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"4917:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4925:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4917:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4911:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":967,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"4930:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"}},"id":969,"indexExpression":{"id":968,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"4933:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4930:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":970,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4936:1:3","memberName":"Y","nodeType":"MemberAccess","referencedDeclaration":703,"src":"4930:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4911:26:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":972,"nodeType":"ExpressionStatement","src":"4911:26:3"},{"expression":{"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":973,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"4951:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":979,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":974,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"4957:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"36","id":975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4961:1:3","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"4957:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4965:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4957:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4951:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":980,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"4970:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G2Point memory[] memory"}},"id":982,"indexExpression":{"id":981,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"4973:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4970:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"id":983,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4976:1:3","memberName":"X","nodeType":"MemberAccess","referencedDeclaration":708,"src":"4970:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":985,"indexExpression":{"hexValue":"30","id":984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4978:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4970:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4951:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":987,"nodeType":"ExpressionStatement","src":"4951:29:3"},{"expression":{"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":988,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"4994:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":994,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":989,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"5000:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"36","id":990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5004:1:3","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"5000:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"33","id":992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5008:1:3","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"5000:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4994:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":995,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"5013:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G2Point memory[] memory"}},"id":997,"indexExpression":{"id":996,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"5016:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5013:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"id":998,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5019:1:3","memberName":"X","nodeType":"MemberAccess","referencedDeclaration":708,"src":"5013:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1000,"indexExpression":{"hexValue":"31","id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5021:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5013:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4994:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1002,"nodeType":"ExpressionStatement","src":"4994:29:3"},{"expression":{"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1003,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"5037:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1009,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1004,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"5043:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"36","id":1005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5047:1:3","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"5043:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"34","id":1007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5051:1:3","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"5043:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5037:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":1010,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"5056:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G2Point memory[] memory"}},"id":1012,"indexExpression":{"id":1011,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"5059:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5056:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"id":1013,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5062:1:3","memberName":"Y","nodeType":"MemberAccess","referencedDeclaration":712,"src":"5056:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1015,"indexExpression":{"hexValue":"30","id":1014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5064:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5056:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5037:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1017,"nodeType":"ExpressionStatement","src":"5037:29:3"},{"expression":{"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1018,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"5080:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1024,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1019,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"5086:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"36","id":1020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5090:1:3","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"5086:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"35","id":1022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5094:1:3","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"5086:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5080:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":1025,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"5099:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G2Point memory[] memory"}},"id":1027,"indexExpression":{"id":1026,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"5102:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5099:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"id":1028,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5105:1:3","memberName":"Y","nodeType":"MemberAccess","referencedDeclaration":712,"src":"5099:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1030,"indexExpression":{"hexValue":"31","id":1029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5107:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5099:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5080:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1032,"nodeType":"ExpressionStatement","src":"5080:29:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":941,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"4830:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":942,"name":"elements","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"4834:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4830:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1034,"initializationExpression":{"assignments":[938],"declarations":[{"constant":false,"id":938,"mutability":"mutable","name":"i","nameLocation":"4823:1:3","nodeType":"VariableDeclaration","scope":1034,"src":"4818:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":937,"name":"uint","nodeType":"ElementaryTypeName","src":"4818:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":940,"initialValue":{"hexValue":"30","id":939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4827:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4818:10:3"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4844:3:3","subExpression":{"id":944,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"4844:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":946,"nodeType":"ExpressionStatement","src":"4844:3:3"},"nodeType":"ForStatement","src":"4813:307:3"},{"assignments":[1040],"declarations":[{"constant":false,"id":1040,"mutability":"mutable","name":"out","nameLocation":"5144:3:3","nodeType":"VariableDeclaration","scope":1057,"src":"5129:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$1_memory_ptr","typeString":"uint256[1]"},"typeName":{"baseType":{"id":1038,"name":"uint","nodeType":"ElementaryTypeName","src":"5129:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1039,"length":{"hexValue":"31","id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5134:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"ArrayTypeName","src":"5129:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$1_storage_ptr","typeString":"uint256[1]"}},"visibility":"internal"}],"id":1041,"nodeType":"VariableDeclarationStatement","src":"5129:18:3"},{"assignments":[1043],"declarations":[{"constant":false,"id":1043,"mutability":"mutable","name":"success","nameLocation":"5162:7:3","nodeType":"VariableDeclaration","scope":1057,"src":"5157:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1042,"name":"bool","nodeType":"ElementaryTypeName","src":"5157:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1044,"nodeType":"VariableDeclarationStatement","src":"5157:12:3"},{"AST":{"nativeSrc":"5252:222:3","nodeType":"YulBlock","src":"5252:222:3","statements":[{"nativeSrc":"5266:93:3","nodeType":"YulAssignment","src":"5266:93:3","value":{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"5292:3:3","nodeType":"YulIdentifier","src":"5292:3:3"},"nativeSrc":"5292:5:3","nodeType":"YulFunctionCall","src":"5292:5:3"},{"kind":"number","nativeSrc":"5299:4:3","nodeType":"YulLiteral","src":"5299:4:3","type":"","value":"2000"}],"functionName":{"name":"sub","nativeSrc":"5288:3:3","nodeType":"YulIdentifier","src":"5288:3:3"},"nativeSrc":"5288:16:3","nodeType":"YulFunctionCall","src":"5288:16:3"},{"kind":"number","nativeSrc":"5306:1:3","nodeType":"YulLiteral","src":"5306:1:3","type":"","value":"8"},{"arguments":[{"name":"input","nativeSrc":"5313:5:3","nodeType":"YulIdentifier","src":"5313:5:3"},{"kind":"number","nativeSrc":"5320:4:3","nodeType":"YulLiteral","src":"5320:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5309:3:3","nodeType":"YulIdentifier","src":"5309:3:3"},"nativeSrc":"5309:16:3","nodeType":"YulFunctionCall","src":"5309:16:3"},{"arguments":[{"name":"inputSize","nativeSrc":"5331:9:3","nodeType":"YulIdentifier","src":"5331:9:3"},{"kind":"number","nativeSrc":"5342:4:3","nodeType":"YulLiteral","src":"5342:4:3","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"5327:3:3","nodeType":"YulIdentifier","src":"5327:3:3"},"nativeSrc":"5327:20:3","nodeType":"YulFunctionCall","src":"5327:20:3"},{"name":"out","nativeSrc":"5349:3:3","nodeType":"YulIdentifier","src":"5349:3:3"},{"kind":"number","nativeSrc":"5354:4:3","nodeType":"YulLiteral","src":"5354:4:3","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"5277:10:3","nodeType":"YulIdentifier","src":"5277:10:3"},"nativeSrc":"5277:82:3","nodeType":"YulFunctionCall","src":"5277:82:3"},"variableNames":[{"name":"success","nativeSrc":"5266:7:3","nodeType":"YulIdentifier","src":"5266:7:3"}]},{"cases":[{"body":{"nativeSrc":"5451:13:3","nodeType":"YulBlock","src":"5451:13:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"invalid","nativeSrc":"5453:7:3","nodeType":"YulIdentifier","src":"5453:7:3"},"nativeSrc":"5453:9:3","nodeType":"YulFunctionCall","src":"5453:9:3"},"nativeSrc":"5453:9:3","nodeType":"YulExpressionStatement","src":"5453:9:3"}]},"nativeSrc":"5444:20:3","nodeType":"YulCase","src":"5444:20:3","value":{"kind":"number","nativeSrc":"5449:1:3","nodeType":"YulLiteral","src":"5449:1:3","type":"","value":"0"}}],"expression":{"name":"success","nativeSrc":"5436:7:3","nodeType":"YulIdentifier","src":"5436:7:3"},"nativeSrc":"5429:35:3","nodeType":"YulSwitch","src":"5429:35:3"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":930,"isOffset":false,"isSlot":false,"src":"5313:5:3","valueSize":1},{"declaration":921,"isOffset":false,"isSlot":false,"src":"5331:9:3","valueSize":1},{"declaration":1040,"isOffset":false,"isSlot":false,"src":"5349:3:3","valueSize":1},{"declaration":1043,"isOffset":false,"isSlot":false,"src":"5266:7:3","valueSize":1},{"declaration":1043,"isOffset":false,"isSlot":false,"src":"5436:7:3","valueSize":1}],"id":1045,"nodeType":"InlineAssembly","src":"5243:231:3"},{"expression":{"arguments":[{"id":1047,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"5491:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"70616972696e672d6f70636f64652d6661696c6564","id":1048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5499:23:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_f3220b3ef654fc0d9a13e2b6d8c956cb8fb22df61a3a050ded181d8902069fe5","typeString":"literal_string \"pairing-opcode-failed\""},"value":"pairing-opcode-failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f3220b3ef654fc0d9a13e2b6d8c956cb8fb22df61a3a050ded181d8902069fe5","typeString":"literal_string \"pairing-opcode-failed\""}],"id":1046,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5483:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5483:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1050,"nodeType":"ExpressionStatement","src":"5483:40:3"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1051,"name":"out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"5540:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$1_memory_ptr","typeString":"uint256[1] memory"}},"id":1053,"indexExpression":{"hexValue":"30","id":1052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5540:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5550:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5540:11:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":905,"id":1056,"nodeType":"Return","src":"5533:18:3"}]},"documentation":{"id":893,"nodeType":"StructuredDocumentation","src":"4316:201:3","text":"@return the result of computing the pairing check\n e(p1[0], p2[0]) *  .... * e(p1[n], p2[n]) == 1\n For example pairing([P1(), P1().negate()], [P2(), P2()]) should\n return true."},"id":1058,"implemented":true,"kind":"function","modifiers":[],"name":"pairing","nameLocation":"4531:7:3","nodeType":"FunctionDefinition","parameters":{"id":902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"p1","nameLocation":"4556:2:3","nodeType":"VariableDeclaration","scope":1058,"src":"4539:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point[]"},"typeName":{"baseType":{"id":895,"nodeType":"UserDefinedTypeName","pathNode":{"id":894,"name":"G1Point","nameLocations":["4539:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"4539:7:3"},"referencedDeclaration":704,"src":"4539:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"}},"id":896,"nodeType":"ArrayTypeName","src":"4539:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_storage_$dyn_storage_ptr","typeString":"struct Pairing.G1Point[]"}},"visibility":"internal"},{"constant":false,"id":901,"mutability":"mutable","name":"p2","nameLocation":"4577:2:3","nodeType":"VariableDeclaration","scope":1058,"src":"4560:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G2Point[]"},"typeName":{"baseType":{"id":899,"nodeType":"UserDefinedTypeName","pathNode":{"id":898,"name":"G2Point","nameLocations":["4560:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":713,"src":"4560:7:3"},"referencedDeclaration":713,"src":"4560:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_storage_ptr","typeString":"struct Pairing.G2Point"}},"id":900,"nodeType":"ArrayTypeName","src":"4560:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_storage_$dyn_storage_ptr","typeString":"struct Pairing.G2Point[]"}},"visibility":"internal"}],"src":"4538:42:3"},"returnParameters":{"id":905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1058,"src":"4604:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":903,"name":"bool","nodeType":"ElementaryTypeName","src":"4604:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4603:6:3"},"scope":1329,"src":"4522:1036:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1129,"nodeType":"Block","src":"5752:215:3","statements":[{"assignments":[1080],"declarations":[{"constant":false,"id":1080,"mutability":"mutable","name":"p1","nameLocation":"5779:2:3","nodeType":"VariableDeclaration","scope":1129,"src":"5762:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point[]"},"typeName":{"baseType":{"id":1078,"nodeType":"UserDefinedTypeName","pathNode":{"id":1077,"name":"G1Point","nameLocations":["5762:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"5762:7:3"},"referencedDeclaration":704,"src":"5762:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"}},"id":1079,"nodeType":"ArrayTypeName","src":"5762:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_storage_$dyn_storage_ptr","typeString":"struct Pairing.G1Point[]"}},"visibility":"internal"}],"id":1087,"initialValue":{"arguments":[{"hexValue":"32","id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5798:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":1084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5784:13:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct Pairing.G1Point memory[] memory)"},"typeName":{"baseType":{"id":1082,"nodeType":"UserDefinedTypeName","pathNode":{"id":1081,"name":"G1Point","nameLocations":["5788:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"5788:7:3"},"referencedDeclaration":704,"src":"5788:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"}},"id":1083,"nodeType":"ArrayTypeName","src":"5788:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_storage_$dyn_storage_ptr","typeString":"struct Pairing.G1Point[]"}}},"id":1086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5784:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5762:38:3"},{"assignments":[1092],"declarations":[{"constant":false,"id":1092,"mutability":"mutable","name":"p2","nameLocation":"5827:2:3","nodeType":"VariableDeclaration","scope":1129,"src":"5810:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G2Point[]"},"typeName":{"baseType":{"id":1090,"nodeType":"UserDefinedTypeName","pathNode":{"id":1089,"name":"G2Point","nameLocations":["5810:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":713,"src":"5810:7:3"},"referencedDeclaration":713,"src":"5810:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_storage_ptr","typeString":"struct Pairing.G2Point"}},"id":1091,"nodeType":"ArrayTypeName","src":"5810:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_storage_$dyn_storage_ptr","typeString":"struct Pairing.G2Point[]"}},"visibility":"internal"}],"id":1099,"initialValue":{"arguments":[{"hexValue":"32","id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5846:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":1096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5832:13:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct Pairing.G2Point memory[] memory)"},"typeName":{"baseType":{"id":1094,"nodeType":"UserDefinedTypeName","pathNode":{"id":1093,"name":"G2Point","nameLocations":["5836:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":713,"src":"5836:7:3"},"referencedDeclaration":713,"src":"5836:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_storage_ptr","typeString":"struct Pairing.G2Point"}},"id":1095,"nodeType":"ArrayTypeName","src":"5836:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_storage_$dyn_storage_ptr","typeString":"struct Pairing.G2Point[]"}}},"id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5832:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G2Point memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5810:38:3"},{"expression":{"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1100,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"5858:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"}},"id":1102,"indexExpression":{"hexValue":"30","id":1101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5861:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5858:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1103,"name":"a1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"5866:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"src":"5858:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":1105,"nodeType":"ExpressionStatement","src":"5858:10:3"},{"expression":{"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1106,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"5878:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"}},"id":1108,"indexExpression":{"hexValue":"31","id":1107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5881:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5878:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1109,"name":"b1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"5886:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"src":"5878:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":1111,"nodeType":"ExpressionStatement","src":"5878:10:3"},{"expression":{"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1112,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"5898:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G2Point memory[] memory"}},"id":1114,"indexExpression":{"hexValue":"30","id":1113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5901:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5898:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1115,"name":"a2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"5906:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"src":"5898:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"id":1117,"nodeType":"ExpressionStatement","src":"5898:10:3"},{"expression":{"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1118,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"5918:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G2Point memory[] memory"}},"id":1120,"indexExpression":{"hexValue":"31","id":1119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5921:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5918:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1121,"name":"b2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"5926:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"src":"5918:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"id":1123,"nodeType":"ExpressionStatement","src":"5918:10:3"},{"expression":{"arguments":[{"id":1125,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"5953:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"}},{"id":1126,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"5957:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G2Point memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"},{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G2Point memory[] memory"}],"id":1124,"name":"pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"5945:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr_$returns$_t_bool_$","typeString":"function (struct Pairing.G1Point memory[] memory,struct Pairing.G2Point memory[] memory) view returns (bool)"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5945:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1075,"id":1128,"nodeType":"Return","src":"5938:22:3"}]},"documentation":{"id":1059,"nodeType":"StructuredDocumentation","src":"5563:57:3","text":"Convenience method for a pairing check for two pairs."},"id":1130,"implemented":true,"kind":"function","modifiers":[],"name":"pairingProd2","nameLocation":"5634:12:3","nodeType":"FunctionDefinition","parameters":{"id":1072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"a1","nameLocation":"5662:2:3","nodeType":"VariableDeclaration","scope":1130,"src":"5647:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":1061,"nodeType":"UserDefinedTypeName","pathNode":{"id":1060,"name":"G1Point","nameLocations":["5647:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"5647:7:3"},"referencedDeclaration":704,"src":"5647:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"},{"constant":false,"id":1065,"mutability":"mutable","name":"a2","nameLocation":"5681:2:3","nodeType":"VariableDeclaration","scope":1130,"src":"5666:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point"},"typeName":{"id":1064,"nodeType":"UserDefinedTypeName","pathNode":{"id":1063,"name":"G2Point","nameLocations":["5666:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":713,"src":"5666:7:3"},"referencedDeclaration":713,"src":"5666:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_storage_ptr","typeString":"struct Pairing.G2Point"}},"visibility":"internal"},{"constant":false,"id":1068,"mutability":"mutable","name":"b1","nameLocation":"5700:2:3","nodeType":"VariableDeclaration","scope":1130,"src":"5685:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":1067,"nodeType":"UserDefinedTypeName","pathNode":{"id":1066,"name":"G1Point","nameLocations":["5685:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"5685:7:3"},"referencedDeclaration":704,"src":"5685:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"},{"constant":false,"id":1071,"mutability":"mutable","name":"b2","nameLocation":"5719:2:3","nodeType":"VariableDeclaration","scope":1130,"src":"5704:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point"},"typeName":{"id":1070,"nodeType":"UserDefinedTypeName","pathNode":{"id":1069,"name":"G2Point","nameLocations":["5704:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":713,"src":"5704:7:3"},"referencedDeclaration":713,"src":"5704:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_storage_ptr","typeString":"struct Pairing.G2Point"}},"visibility":"internal"}],"src":"5646:76:3"},"returnParameters":{"id":1075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1074,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1130,"src":"5746:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1073,"name":"bool","nodeType":"ElementaryTypeName","src":"5746:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5745:6:3"},"scope":1329,"src":"5625:342:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1219,"nodeType":"Block","src":"6243:255:3","statements":[{"assignments":[1158],"declarations":[{"constant":false,"id":1158,"mutability":"mutable","name":"p1","nameLocation":"6270:2:3","nodeType":"VariableDeclaration","scope":1219,"src":"6253:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point[]"},"typeName":{"baseType":{"id":1156,"nodeType":"UserDefinedTypeName","pathNode":{"id":1155,"name":"G1Point","nameLocations":["6253:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"6253:7:3"},"referencedDeclaration":704,"src":"6253:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"}},"id":1157,"nodeType":"ArrayTypeName","src":"6253:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_storage_$dyn_storage_ptr","typeString":"struct Pairing.G1Point[]"}},"visibility":"internal"}],"id":1165,"initialValue":{"arguments":[{"hexValue":"33","id":1163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6289:1:3","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"id":1162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6275:13:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct Pairing.G1Point memory[] memory)"},"typeName":{"baseType":{"id":1160,"nodeType":"UserDefinedTypeName","pathNode":{"id":1159,"name":"G1Point","nameLocations":["6279:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"6279:7:3"},"referencedDeclaration":704,"src":"6279:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"}},"id":1161,"nodeType":"ArrayTypeName","src":"6279:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_storage_$dyn_storage_ptr","typeString":"struct Pairing.G1Point[]"}}},"id":1164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6275:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6253:38:3"},{"assignments":[1170],"declarations":[{"constant":false,"id":1170,"mutability":"mutable","name":"p2","nameLocation":"6318:2:3","nodeType":"VariableDeclaration","scope":1219,"src":"6301:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G2Point[]"},"typeName":{"baseType":{"id":1168,"nodeType":"UserDefinedTypeName","pathNode":{"id":1167,"name":"G2Point","nameLocations":["6301:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":713,"src":"6301:7:3"},"referencedDeclaration":713,"src":"6301:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_storage_ptr","typeString":"struct Pairing.G2Point"}},"id":1169,"nodeType":"ArrayTypeName","src":"6301:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_storage_$dyn_storage_ptr","typeString":"struct Pairing.G2Point[]"}},"visibility":"internal"}],"id":1177,"initialValue":{"arguments":[{"hexValue":"33","id":1175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6337:1:3","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"id":1174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6323:13:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct Pairing.G2Point memory[] memory)"},"typeName":{"baseType":{"id":1172,"nodeType":"UserDefinedTypeName","pathNode":{"id":1171,"name":"G2Point","nameLocations":["6327:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":713,"src":"6327:7:3"},"referencedDeclaration":713,"src":"6327:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_storage_ptr","typeString":"struct Pairing.G2Point"}},"id":1173,"nodeType":"ArrayTypeName","src":"6327:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_storage_$dyn_storage_ptr","typeString":"struct Pairing.G2Point[]"}}},"id":1176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6323:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G2Point memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6301:38:3"},{"expression":{"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1178,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"6349:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"}},"id":1180,"indexExpression":{"hexValue":"30","id":1179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6352:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6349:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1181,"name":"a1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"6357:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"src":"6349:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":1183,"nodeType":"ExpressionStatement","src":"6349:10:3"},{"expression":{"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1184,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"6369:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"}},"id":1186,"indexExpression":{"hexValue":"31","id":1185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6372:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6369:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1187,"name":"b1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"6377:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"src":"6369:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":1189,"nodeType":"ExpressionStatement","src":"6369:10:3"},{"expression":{"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1190,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"6389:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"}},"id":1192,"indexExpression":{"hexValue":"32","id":1191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6392:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6389:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1193,"name":"c1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"6397:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"src":"6389:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":1195,"nodeType":"ExpressionStatement","src":"6389:10:3"},{"expression":{"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1196,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"6409:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G2Point memory[] memory"}},"id":1198,"indexExpression":{"hexValue":"30","id":1197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6412:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6409:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1199,"name":"a2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"6417:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"src":"6409:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"id":1201,"nodeType":"ExpressionStatement","src":"6409:10:3"},{"expression":{"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1202,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"6429:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G2Point memory[] memory"}},"id":1204,"indexExpression":{"hexValue":"31","id":1203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6432:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6429:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1205,"name":"b2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"6437:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"src":"6429:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"id":1207,"nodeType":"ExpressionStatement","src":"6429:10:3"},{"expression":{"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1208,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"6449:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G2Point memory[] memory"}},"id":1210,"indexExpression":{"hexValue":"32","id":1209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6452:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6449:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1211,"name":"c2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"6457:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"src":"6449:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"id":1213,"nodeType":"ExpressionStatement","src":"6449:10:3"},{"expression":{"arguments":[{"id":1215,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"6484:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"}},{"id":1216,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"6488:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G2Point memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"},{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G2Point memory[] memory"}],"id":1214,"name":"pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"6476:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr_$returns$_t_bool_$","typeString":"function (struct Pairing.G1Point memory[] memory,struct Pairing.G2Point memory[] memory) view returns (bool)"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6476:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1153,"id":1218,"nodeType":"Return","src":"6469:22:3"}]},"documentation":{"id":1131,"nodeType":"StructuredDocumentation","src":"5972:59:3","text":"Convenience method for a pairing check for three pairs."},"id":1220,"implemented":true,"kind":"function","modifiers":[],"name":"pairingProd3","nameLocation":"6045:12:3","nodeType":"FunctionDefinition","parameters":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1134,"mutability":"mutable","name":"a1","nameLocation":"6086:2:3","nodeType":"VariableDeclaration","scope":1220,"src":"6071:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":1133,"nodeType":"UserDefinedTypeName","pathNode":{"id":1132,"name":"G1Point","nameLocations":["6071:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"6071:7:3"},"referencedDeclaration":704,"src":"6071:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"},{"constant":false,"id":1137,"mutability":"mutable","name":"a2","nameLocation":"6105:2:3","nodeType":"VariableDeclaration","scope":1220,"src":"6090:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point"},"typeName":{"id":1136,"nodeType":"UserDefinedTypeName","pathNode":{"id":1135,"name":"G2Point","nameLocations":["6090:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":713,"src":"6090:7:3"},"referencedDeclaration":713,"src":"6090:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_storage_ptr","typeString":"struct Pairing.G2Point"}},"visibility":"internal"},{"constant":false,"id":1140,"mutability":"mutable","name":"b1","nameLocation":"6136:2:3","nodeType":"VariableDeclaration","scope":1220,"src":"6121:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":1139,"nodeType":"UserDefinedTypeName","pathNode":{"id":1138,"name":"G1Point","nameLocations":["6121:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"6121:7:3"},"referencedDeclaration":704,"src":"6121:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"},{"constant":false,"id":1143,"mutability":"mutable","name":"b2","nameLocation":"6155:2:3","nodeType":"VariableDeclaration","scope":1220,"src":"6140:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point"},"typeName":{"id":1142,"nodeType":"UserDefinedTypeName","pathNode":{"id":1141,"name":"G2Point","nameLocations":["6140:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":713,"src":"6140:7:3"},"referencedDeclaration":713,"src":"6140:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_storage_ptr","typeString":"struct Pairing.G2Point"}},"visibility":"internal"},{"constant":false,"id":1146,"mutability":"mutable","name":"c1","nameLocation":"6186:2:3","nodeType":"VariableDeclaration","scope":1220,"src":"6171:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":1145,"nodeType":"UserDefinedTypeName","pathNode":{"id":1144,"name":"G1Point","nameLocations":["6171:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"6171:7:3"},"referencedDeclaration":704,"src":"6171:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"c2","nameLocation":"6205:2:3","nodeType":"VariableDeclaration","scope":1220,"src":"6190:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point"},"typeName":{"id":1148,"nodeType":"UserDefinedTypeName","pathNode":{"id":1147,"name":"G2Point","nameLocations":["6190:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":713,"src":"6190:7:3"},"referencedDeclaration":713,"src":"6190:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_storage_ptr","typeString":"struct Pairing.G2Point"}},"visibility":"internal"}],"src":"6057:156:3"},"returnParameters":{"id":1153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1220,"src":"6237:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1151,"name":"bool","nodeType":"ElementaryTypeName","src":"6237:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6236:6:3"},"scope":1329,"src":"6036:462:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1327,"nodeType":"Block","src":"6823:295:3","statements":[{"assignments":[1254],"declarations":[{"constant":false,"id":1254,"mutability":"mutable","name":"p1","nameLocation":"6850:2:3","nodeType":"VariableDeclaration","scope":1327,"src":"6833:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point[]"},"typeName":{"baseType":{"id":1252,"nodeType":"UserDefinedTypeName","pathNode":{"id":1251,"name":"G1Point","nameLocations":["6833:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"6833:7:3"},"referencedDeclaration":704,"src":"6833:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"}},"id":1253,"nodeType":"ArrayTypeName","src":"6833:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_storage_$dyn_storage_ptr","typeString":"struct Pairing.G1Point[]"}},"visibility":"internal"}],"id":1261,"initialValue":{"arguments":[{"hexValue":"34","id":1259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6869:1:3","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}],"id":1258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6855:13:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct Pairing.G1Point memory[] memory)"},"typeName":{"baseType":{"id":1256,"nodeType":"UserDefinedTypeName","pathNode":{"id":1255,"name":"G1Point","nameLocations":["6859:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"6859:7:3"},"referencedDeclaration":704,"src":"6859:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"}},"id":1257,"nodeType":"ArrayTypeName","src":"6859:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_storage_$dyn_storage_ptr","typeString":"struct Pairing.G1Point[]"}}},"id":1260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6855:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6833:38:3"},{"assignments":[1266],"declarations":[{"constant":false,"id":1266,"mutability":"mutable","name":"p2","nameLocation":"6898:2:3","nodeType":"VariableDeclaration","scope":1327,"src":"6881:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G2Point[]"},"typeName":{"baseType":{"id":1264,"nodeType":"UserDefinedTypeName","pathNode":{"id":1263,"name":"G2Point","nameLocations":["6881:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":713,"src":"6881:7:3"},"referencedDeclaration":713,"src":"6881:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_storage_ptr","typeString":"struct Pairing.G2Point"}},"id":1265,"nodeType":"ArrayTypeName","src":"6881:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_storage_$dyn_storage_ptr","typeString":"struct Pairing.G2Point[]"}},"visibility":"internal"}],"id":1273,"initialValue":{"arguments":[{"hexValue":"34","id":1271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6917:1:3","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}],"id":1270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6903:13:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct Pairing.G2Point memory[] memory)"},"typeName":{"baseType":{"id":1268,"nodeType":"UserDefinedTypeName","pathNode":{"id":1267,"name":"G2Point","nameLocations":["6907:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":713,"src":"6907:7:3"},"referencedDeclaration":713,"src":"6907:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_storage_ptr","typeString":"struct Pairing.G2Point"}},"id":1269,"nodeType":"ArrayTypeName","src":"6907:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_storage_$dyn_storage_ptr","typeString":"struct Pairing.G2Point[]"}}},"id":1272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6903:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G2Point memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6881:38:3"},{"expression":{"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1274,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"6929:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"}},"id":1276,"indexExpression":{"hexValue":"30","id":1275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6932:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6929:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1277,"name":"a1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"6937:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"src":"6929:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":1279,"nodeType":"ExpressionStatement","src":"6929:10:3"},{"expression":{"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1280,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"6949:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"}},"id":1282,"indexExpression":{"hexValue":"31","id":1281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6952:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6949:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1283,"name":"b1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"6957:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"src":"6949:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":1285,"nodeType":"ExpressionStatement","src":"6949:10:3"},{"expression":{"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1286,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"6969:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"}},"id":1288,"indexExpression":{"hexValue":"32","id":1287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6972:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6969:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1289,"name":"c1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"6977:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"src":"6969:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":1291,"nodeType":"ExpressionStatement","src":"6969:10:3"},{"expression":{"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1292,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"6989:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"}},"id":1294,"indexExpression":{"hexValue":"33","id":1293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6992:1:3","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6989:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1295,"name":"d1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"6997:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"src":"6989:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":1297,"nodeType":"ExpressionStatement","src":"6989:10:3"},{"expression":{"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1298,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"7009:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G2Point memory[] memory"}},"id":1300,"indexExpression":{"hexValue":"30","id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7012:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7009:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1301,"name":"a2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"7017:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"src":"7009:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"id":1303,"nodeType":"ExpressionStatement","src":"7009:10:3"},{"expression":{"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1304,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"7029:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G2Point memory[] memory"}},"id":1306,"indexExpression":{"hexValue":"31","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7032:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7029:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1307,"name":"b2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"7037:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"src":"7029:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"id":1309,"nodeType":"ExpressionStatement","src":"7029:10:3"},{"expression":{"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1310,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"7049:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G2Point memory[] memory"}},"id":1312,"indexExpression":{"hexValue":"32","id":1311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7052:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7049:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1313,"name":"c2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"7057:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"src":"7049:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"id":1315,"nodeType":"ExpressionStatement","src":"7049:10:3"},{"expression":{"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1316,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"7069:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G2Point memory[] memory"}},"id":1318,"indexExpression":{"hexValue":"33","id":1317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7072:1:3","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7069:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1319,"name":"d2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"7077:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"src":"7069:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"id":1321,"nodeType":"ExpressionStatement","src":"7069:10:3"},{"expression":{"arguments":[{"id":1323,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"7104:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"}},{"id":1324,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"7108:2:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G2Point memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"},{"typeIdentifier":"t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G2Point memory[] memory"}],"id":1322,"name":"pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"7096:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_G2Point_$713_memory_ptr_$dyn_memory_ptr_$returns$_t_bool_$","typeString":"function (struct Pairing.G1Point memory[] memory,struct Pairing.G2Point memory[] memory) view returns (bool)"}},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7096:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1249,"id":1326,"nodeType":"Return","src":"7089:22:3"}]},"documentation":{"id":1221,"nodeType":"StructuredDocumentation","src":"6503:58:3","text":"Convenience method for a pairing check for four pairs."},"id":1328,"implemented":true,"kind":"function","modifiers":[],"name":"pairingProd4","nameLocation":"6575:12:3","nodeType":"FunctionDefinition","parameters":{"id":1246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1224,"mutability":"mutable","name":"a1","nameLocation":"6616:2:3","nodeType":"VariableDeclaration","scope":1328,"src":"6601:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":1223,"nodeType":"UserDefinedTypeName","pathNode":{"id":1222,"name":"G1Point","nameLocations":["6601:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"6601:7:3"},"referencedDeclaration":704,"src":"6601:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"a2","nameLocation":"6635:2:3","nodeType":"VariableDeclaration","scope":1328,"src":"6620:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point"},"typeName":{"id":1226,"nodeType":"UserDefinedTypeName","pathNode":{"id":1225,"name":"G2Point","nameLocations":["6620:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":713,"src":"6620:7:3"},"referencedDeclaration":713,"src":"6620:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_storage_ptr","typeString":"struct Pairing.G2Point"}},"visibility":"internal"},{"constant":false,"id":1230,"mutability":"mutable","name":"b1","nameLocation":"6666:2:3","nodeType":"VariableDeclaration","scope":1328,"src":"6651:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":1229,"nodeType":"UserDefinedTypeName","pathNode":{"id":1228,"name":"G1Point","nameLocations":["6651:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"6651:7:3"},"referencedDeclaration":704,"src":"6651:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"},{"constant":false,"id":1233,"mutability":"mutable","name":"b2","nameLocation":"6685:2:3","nodeType":"VariableDeclaration","scope":1328,"src":"6670:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point"},"typeName":{"id":1232,"nodeType":"UserDefinedTypeName","pathNode":{"id":1231,"name":"G2Point","nameLocations":["6670:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":713,"src":"6670:7:3"},"referencedDeclaration":713,"src":"6670:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_storage_ptr","typeString":"struct Pairing.G2Point"}},"visibility":"internal"},{"constant":false,"id":1236,"mutability":"mutable","name":"c1","nameLocation":"6716:2:3","nodeType":"VariableDeclaration","scope":1328,"src":"6701:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":1235,"nodeType":"UserDefinedTypeName","pathNode":{"id":1234,"name":"G1Point","nameLocations":["6701:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"6701:7:3"},"referencedDeclaration":704,"src":"6701:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"},{"constant":false,"id":1239,"mutability":"mutable","name":"c2","nameLocation":"6735:2:3","nodeType":"VariableDeclaration","scope":1328,"src":"6720:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point"},"typeName":{"id":1238,"nodeType":"UserDefinedTypeName","pathNode":{"id":1237,"name":"G2Point","nameLocations":["6720:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":713,"src":"6720:7:3"},"referencedDeclaration":713,"src":"6720:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_storage_ptr","typeString":"struct Pairing.G2Point"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"d1","nameLocation":"6766:2:3","nodeType":"VariableDeclaration","scope":1328,"src":"6751:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":1241,"nodeType":"UserDefinedTypeName","pathNode":{"id":1240,"name":"G1Point","nameLocations":["6751:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"6751:7:3"},"referencedDeclaration":704,"src":"6751:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"},{"constant":false,"id":1245,"mutability":"mutable","name":"d2","nameLocation":"6785:2:3","nodeType":"VariableDeclaration","scope":1328,"src":"6770:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point"},"typeName":{"id":1244,"nodeType":"UserDefinedTypeName","pathNode":{"id":1243,"name":"G2Point","nameLocations":["6770:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":713,"src":"6770:7:3"},"referencedDeclaration":713,"src":"6770:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_storage_ptr","typeString":"struct Pairing.G2Point"}},"visibility":"internal"}],"src":"6587:206:3"},"returnParameters":{"id":1249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1328,"src":"6817:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1247,"name":"bool","nodeType":"ElementaryTypeName","src":"6817:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6816:6:3"},"scope":1329,"src":"6566:552:3","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1735,"src":"1257:5863:3","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"Verifier","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1734,"linearizedBaseContracts":[1734],"name":"Verifier","nameLocation":"7130:8:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1331,"libraryName":{"id":1330,"name":"Pairing","nameLocations":["7151:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1329,"src":"7151:7:3"},"nodeType":"UsingForDirective","src":"7145:20:3"},{"canonicalName":"Verifier.VerifyingKey","id":1348,"members":[{"constant":false,"id":1334,"mutability":"mutable","name":"alfa1","nameLocation":"7216:5:3","nodeType":"VariableDeclaration","scope":1348,"src":"7200:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":1333,"nodeType":"UserDefinedTypeName","pathNode":{"id":1332,"name":"Pairing.G1Point","nameLocations":["7200:7:3","7208:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"7200:15:3"},"referencedDeclaration":704,"src":"7200:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"},{"constant":false,"id":1337,"mutability":"mutable","name":"beta2","nameLocation":"7247:5:3","nodeType":"VariableDeclaration","scope":1348,"src":"7231:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_storage_ptr","typeString":"struct Pairing.G2Point"},"typeName":{"id":1336,"nodeType":"UserDefinedTypeName","pathNode":{"id":1335,"name":"Pairing.G2Point","nameLocations":["7231:7:3","7239:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":713,"src":"7231:15:3"},"referencedDeclaration":713,"src":"7231:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_storage_ptr","typeString":"struct Pairing.G2Point"}},"visibility":"internal"},{"constant":false,"id":1340,"mutability":"mutable","name":"gamma2","nameLocation":"7278:6:3","nodeType":"VariableDeclaration","scope":1348,"src":"7262:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_storage_ptr","typeString":"struct Pairing.G2Point"},"typeName":{"id":1339,"nodeType":"UserDefinedTypeName","pathNode":{"id":1338,"name":"Pairing.G2Point","nameLocations":["7262:7:3","7270:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":713,"src":"7262:15:3"},"referencedDeclaration":713,"src":"7262:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_storage_ptr","typeString":"struct Pairing.G2Point"}},"visibility":"internal"},{"constant":false,"id":1343,"mutability":"mutable","name":"delta2","nameLocation":"7310:6:3","nodeType":"VariableDeclaration","scope":1348,"src":"7294:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_storage_ptr","typeString":"struct Pairing.G2Point"},"typeName":{"id":1342,"nodeType":"UserDefinedTypeName","pathNode":{"id":1341,"name":"Pairing.G2Point","nameLocations":["7294:7:3","7302:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":713,"src":"7294:15:3"},"referencedDeclaration":713,"src":"7294:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_storage_ptr","typeString":"struct Pairing.G2Point"}},"visibility":"internal"},{"constant":false,"id":1347,"mutability":"mutable","name":"IC","nameLocation":"7344:2:3","nodeType":"VariableDeclaration","scope":1348,"src":"7326:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_storage_$dyn_storage_ptr","typeString":"struct Pairing.G1Point[]"},"typeName":{"baseType":{"id":1345,"nodeType":"UserDefinedTypeName","pathNode":{"id":1344,"name":"Pairing.G1Point","nameLocations":["7326:7:3","7334:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"7326:15:3"},"referencedDeclaration":704,"src":"7326:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"}},"id":1346,"nodeType":"ArrayTypeName","src":"7326:17:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_storage_$dyn_storage_ptr","typeString":"struct Pairing.G1Point[]"}},"visibility":"internal"}],"name":"VerifyingKey","nameLocation":"7177:12:3","nodeType":"StructDefinition","scope":1734,"src":"7170:183:3","visibility":"public"},{"canonicalName":"Verifier.Proof","id":1358,"members":[{"constant":false,"id":1351,"mutability":"mutable","name":"A","nameLocation":"7397:1:3","nodeType":"VariableDeclaration","scope":1358,"src":"7381:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":1350,"nodeType":"UserDefinedTypeName","pathNode":{"id":1349,"name":"Pairing.G1Point","nameLocations":["7381:7:3","7389:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"7381:15:3"},"referencedDeclaration":704,"src":"7381:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"},{"constant":false,"id":1354,"mutability":"mutable","name":"B","nameLocation":"7424:1:3","nodeType":"VariableDeclaration","scope":1358,"src":"7408:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_storage_ptr","typeString":"struct Pairing.G2Point"},"typeName":{"id":1353,"nodeType":"UserDefinedTypeName","pathNode":{"id":1352,"name":"Pairing.G2Point","nameLocations":["7408:7:3","7416:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":713,"src":"7408:15:3"},"referencedDeclaration":713,"src":"7408:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_storage_ptr","typeString":"struct Pairing.G2Point"}},"visibility":"internal"},{"constant":false,"id":1357,"mutability":"mutable","name":"C","nameLocation":"7451:1:3","nodeType":"VariableDeclaration","scope":1358,"src":"7435:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":1356,"nodeType":"UserDefinedTypeName","pathNode":{"id":1355,"name":"Pairing.G1Point","nameLocations":["7435:7:3","7443:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"7435:15:3"},"referencedDeclaration":704,"src":"7435:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"}],"name":"Proof","nameLocation":"7365:5:3","nodeType":"StructDefinition","scope":1734,"src":"7358:101:3","visibility":"public"},{"body":{"id":1475,"nodeType":"Block","src":"7535:2628:3","statements":[{"expression":{"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1364,"name":"vk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"7545:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$1348_memory_ptr","typeString":"struct Verifier.VerifyingKey memory"}},"id":1366,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7548:5:3","memberName":"alfa1","nodeType":"MemberAccess","referencedDeclaration":1334,"src":"7545:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"33313132363430343532373435383931393036333935393637333832353132343633373832373639373836353131343939373633303239333839343335363539393439323233363635303630","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7585:76:3","typeDescriptions":{"typeIdentifier":"t_rational_3112640452745891906395967382512463782769786511499763029389435659949223665060_by_1","typeString":"int_const 3112...(68 digits omitted)...5060"},"value":"3112640452745891906395967382512463782769786511499763029389435659949223665060"},{"hexValue":"3231373631383036343039333532303032313135313031313632343938323039333436323730373531383731393332343932393834383436363034303133393437393932333634303539353237","id":1370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7675:77:3","typeDescriptions":{"typeIdentifier":"t_rational_21761806409352002115101162498209346270751871932492984846604013947992364059527_by_1","typeString":"int_const 2176...(69 digits omitted)...9527"},"value":"21761806409352002115101162498209346270751871932492984846604013947992364059527"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3112640452745891906395967382512463782769786511499763029389435659949223665060_by_1","typeString":"int_const 3112...(68 digits omitted)...5060"},{"typeIdentifier":"t_rational_21761806409352002115101162498209346270751871932492984846604013947992364059527_by_1","typeString":"int_const 2176...(69 digits omitted)...9527"}],"expression":{"id":1367,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"7556:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$1329_$","typeString":"type(library Pairing)"}},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7564:7:3","memberName":"G1Point","nodeType":"MemberAccess","referencedDeclaration":704,"src":"7556:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G1Point_$704_storage_ptr_$","typeString":"type(struct Pairing.G1Point storage pointer)"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7556:206:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"src":"7545:217:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":1373,"nodeType":"ExpressionStatement","src":"7545:217:3"},{"expression":{"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1374,"name":"vk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"7773:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$1348_memory_ptr","typeString":"struct Verifier.VerifyingKey memory"}},"id":1376,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7776:5:3","memberName":"beta2","nodeType":"MemberAccess","referencedDeclaration":1337,"src":"7773:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"components":[{"hexValue":"39393136373233383431303831303339343433323735303736333939313731323330353430353531393038313730373737343233363339393633373534303536353939323335383630383633","id":1379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7814:76:3","typeDescriptions":{"typeIdentifier":"t_rational_9916723841081039443275076399171230540551908170777423639963754056599235860863_by_1","typeString":"int_const 9916...(68 digits omitted)...0863"},"value":"9916723841081039443275076399171230540551908170777423639963754056599235860863"},{"hexValue":"39313532343933343139363335383737343631313334323134303339373632383034353734313335353838363030343431373537393437303538343734323334323137343731373236343430","id":1380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7905:76:3","typeDescriptions":{"typeIdentifier":"t_rational_9152493419635877461134214039762804574135588600441757947058474234217471726440_by_1","typeString":"int_const 9152...(68 digits omitted)...6440"},"value":"9152493419635877461134214039762804574135588600441757947058474234217471726440"}],"id":1381,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7813:169:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"components":[{"hexValue":"3134323231363735373831313837303636303431383333383738323238393834313335363135363730373134333738373936383932393131313636343733303938363333383532383936313336","id":1382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7997:77:3","typeDescriptions":{"typeIdentifier":"t_rational_14221675781187066041833878228984135615670714378796892911166473098633852896136_by_1","typeString":"int_const 1422...(69 digits omitted)...6136"},"value":"14221675781187066041833878228984135615670714378796892911166473098633852896136"},{"hexValue":"39343138313538333936373238313537393931323837333936393432373938383238393336373030383836393133333437363232333838383434373238343734373235353737323234373639","id":1383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8089:76:3","typeDescriptions":{"typeIdentifier":"t_rational_9418158396728157991287396942798828936700886913347622388844728474725577224769_by_1","typeString":"int_const 9418...(68 digits omitted)...4769"},"value":"9418158396728157991287396942798828936700886913347622388844728474725577224769"}],"id":1384,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7996:170:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"expression":{"id":1377,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"7784:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$1329_$","typeString":"type(library Pairing)"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7792:7:3","memberName":"G2Point","nodeType":"MemberAccess","referencedDeclaration":713,"src":"7784:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G2Point_$713_storage_ptr_$","typeString":"type(struct Pairing.G2Point storage pointer)"}},"id":1385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7784:392:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"src":"7773:403:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"id":1387,"nodeType":"ExpressionStatement","src":"7773:403:3"},{"expression":{"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1388,"name":"vk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"8186:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$1348_memory_ptr","typeString":"struct Verifier.VerifyingKey memory"}},"id":1390,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8189:6:3","memberName":"gamma2","nodeType":"MemberAccess","referencedDeclaration":1340,"src":"8186:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"components":[{"hexValue":"3131353539373332303332393836333837313037393931303034303231333932323835373833393235383132383631383231313932353330393137343033313531343532333931383035363334","id":1393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8228:77:3","typeDescriptions":{"typeIdentifier":"t_rational_11559732032986387107991004021392285783925812861821192530917403151452391805634_by_1","typeString":"int_const 1155...(69 digits omitted)...5634"},"value":"11559732032986387107991004021392285783925812861821192530917403151452391805634"},{"hexValue":"3130383537303436393939303233303537313335393434353730373632323332383239343831333730373536333539353738353138303836393930353139393933323835363535383532373831","id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8320:77:3","typeDescriptions":{"typeIdentifier":"t_rational_10857046999023057135944570762232829481370756359578518086990519993285655852781_by_1","typeString":"int_const 1085...(69 digits omitted)...2781"},"value":"10857046999023057135944570762232829481370756359578518086990519993285655852781"}],"id":1395,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8227:171:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"components":[{"hexValue":"34303832333637383735383633343333363831333332323033343033313435343335353638333136383531333237353933343031323038313035373431303736323134313230303933353331","id":1396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8413:76:3","typeDescriptions":{"typeIdentifier":"t_rational_4082367875863433681332203403145435568316851327593401208105741076214120093531_by_1","typeString":"int_const 4082...(68 digits omitted)...3531"},"value":"4082367875863433681332203403145435568316851327593401208105741076214120093531"},{"hexValue":"38343935363533393233313233343331343137363034393733323437343839323732343338343138313930353837323633363030313438373730323830363439333036393538313031393330","id":1397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8504:76:3","typeDescriptions":{"typeIdentifier":"t_rational_8495653923123431417604973247489272438418190587263600148770280649306958101930_by_1","typeString":"int_const 8495...(68 digits omitted)...1930"},"value":"8495653923123431417604973247489272438418190587263600148770280649306958101930"}],"id":1398,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8412:169:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"expression":{"id":1391,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"8198:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$1329_$","typeString":"type(library Pairing)"}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8206:7:3","memberName":"G2Point","nodeType":"MemberAccess","referencedDeclaration":713,"src":"8198:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G2Point_$713_storage_ptr_$","typeString":"type(struct Pairing.G2Point storage pointer)"}},"id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8198:393:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"src":"8186:405:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"id":1401,"nodeType":"ExpressionStatement","src":"8186:405:3"},{"expression":{"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1402,"name":"vk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"8601:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$1348_memory_ptr","typeString":"struct Verifier.VerifyingKey memory"}},"id":1404,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8604:6:3","memberName":"delta2","nodeType":"MemberAccess","referencedDeclaration":1343,"src":"8601:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"components":[{"hexValue":"3133343338363533353138323838373838303139313433373433373132383138353636303931373930373739383339313230373335303138333035303838333936313936363837353835373038","id":1407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8643:77:3","typeDescriptions":{"typeIdentifier":"t_rational_13438653518288788019143743712818566091790779839120735018305088396196687585708_by_1","typeString":"int_const 1343...(69 digits omitted)...5708"},"value":"13438653518288788019143743712818566091790779839120735018305088396196687585708"},{"hexValue":"3137323433393134393133353434343134393030333331303331333630363637393031323330333037363937343836353130313036323231343530303238393736313833373936353634383432","id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8735:77:3","typeDescriptions":{"typeIdentifier":"t_rational_17243914913544414900331031360667901230307697486510106221450028976183796564842_by_1","typeString":"int_const 1724...(69 digits omitted)...4842"},"value":"17243914913544414900331031360667901230307697486510106221450028976183796564842"}],"id":1409,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8642:171:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"components":[{"hexValue":"3137353837303932383733313934343235373637373331333335333831383239323532363535373831393233343433353132343737333239393639313531383235393234333233353930313238","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8828:77:3","typeDescriptions":{"typeIdentifier":"t_rational_17587092873194425767731335381829252655781923443512477329969151825924323590128_by_1","typeString":"int_const 1758...(69 digits omitted)...0128"},"value":"17587092873194425767731335381829252655781923443512477329969151825924323590128"},{"hexValue":"3136343330393232393738323932393837363638313030333636373238393537383132343231323739323138323637353130313038323833333438303939393838313139343230373337343837","id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8920:77:3","typeDescriptions":{"typeIdentifier":"t_rational_16430922978292987668100366728957812421279218267510108283348099988119420737487_by_1","typeString":"int_const 1643...(69 digits omitted)...7487"},"value":"16430922978292987668100366728957812421279218267510108283348099988119420737487"}],"id":1412,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8827:171:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"expression":{"id":1405,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"8613:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$1329_$","typeString":"type(library Pairing)"}},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8621:7:3","memberName":"G2Point","nodeType":"MemberAccess","referencedDeclaration":713,"src":"8613:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G2Point_$713_storage_ptr_$","typeString":"type(struct Pairing.G2Point storage pointer)"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8613:395:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"src":"8601:407:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"id":1415,"nodeType":"ExpressionStatement","src":"8601:407:3"},{"expression":{"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1416,"name":"vk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"9018:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$1348_memory_ptr","typeString":"struct Verifier.VerifyingKey memory"}},"id":1418,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9021:2:3","memberName":"IC","nodeType":"MemberAccess","referencedDeclaration":1347,"src":"9018:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"34","id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9048:1:3","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}],"id":1422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9026:21:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct Pairing.G1Point memory[] memory)"},"typeName":{"baseType":{"id":1420,"nodeType":"UserDefinedTypeName","pathNode":{"id":1419,"name":"Pairing.G1Point","nameLocations":["9030:7:3","9038:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"9030:15:3"},"referencedDeclaration":704,"src":"9030:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"}},"id":1421,"nodeType":"ArrayTypeName","src":"9030:17:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_storage_$dyn_storage_ptr","typeString":"struct Pairing.G1Point[]"}}},"id":1424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9026:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"}},"src":"9018:32:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"}},"id":1426,"nodeType":"ExpressionStatement","src":"9018:32:3"},{"expression":{"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1427,"name":"vk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"9069:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$1348_memory_ptr","typeString":"struct Verifier.VerifyingKey memory"}},"id":1430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9072:2:3","memberName":"IC","nodeType":"MemberAccess","referencedDeclaration":1347,"src":"9069:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"}},"id":1431,"indexExpression":{"hexValue":"30","id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9075:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9069:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"373634333132383837303135393836313032383838333634373232373235383139323833373031343438373937383231393138313039393133343939393838313331303730353735303834","id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9110:75:3","typeDescriptions":{"typeIdentifier":"t_rational_764312887015986102888364722725819283701448797821918109913499988131070575084_by_1","typeString":"int_const 7643...(67 digits omitted)...5084"},"value":"764312887015986102888364722725819283701448797821918109913499988131070575084"},{"hexValue":"353831393030383231373235333231343830303037333135303232353333383230383037333234353031393139343032363433383937333336393336393830303634353833343430393133","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9199:75:3","typeDescriptions":{"typeIdentifier":"t_rational_581900821725321480007315022533820807324501919402643897336936980064583440913_by_1","typeString":"int_const 5819...(67 digits omitted)...0913"},"value":"581900821725321480007315022533820807324501919402643897336936980064583440913"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_764312887015986102888364722725819283701448797821918109913499988131070575084_by_1","typeString":"int_const 7643...(67 digits omitted)...5084"},{"typeIdentifier":"t_rational_581900821725321480007315022533820807324501919402643897336936980064583440913_by_1","typeString":"int_const 5819...(67 digits omitted)...0913"}],"expression":{"id":1432,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"9080:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$1329_$","typeString":"type(library Pairing)"}},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9088:7:3","memberName":"G1Point","nodeType":"MemberAccess","referencedDeclaration":704,"src":"9080:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G1Point_$704_storage_ptr_$","typeString":"type(struct Pairing.G1Point storage pointer)"}},"id":1436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9080:204:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"src":"9069:215:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":1438,"nodeType":"ExpressionStatement","src":"9069:215:3"},{"expression":{"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1439,"name":"vk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"9341:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$1348_memory_ptr","typeString":"struct Verifier.VerifyingKey memory"}},"id":1442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9344:2:3","memberName":"IC","nodeType":"MemberAccess","referencedDeclaration":1347,"src":"9341:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"}},"id":1443,"indexExpression":{"hexValue":"31","id":1441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9347:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9341:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"3136353732383231373734393930383630343934373034373030323331373033393437343432313538323239363336373736363431313432333832343337393030393339303634303037303136","id":1446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9382:77:3","typeDescriptions":{"typeIdentifier":"t_rational_16572821774990860494704700231703947442158229636776641142382437900939064007016_by_1","typeString":"int_const 1657...(69 digits omitted)...7016"},"value":"16572821774990860494704700231703947442158229636776641142382437900939064007016"},{"hexValue":"37383239343037323533313639383936353334353633323234323334383433303130343234313933323838393639333936333934313936343536393536353538383931313239373032343137","id":1447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9473:76:3","typeDescriptions":{"typeIdentifier":"t_rational_7829407253169896534563224234843010424193288969396394196456956558891129702417_by_1","typeString":"int_const 7829...(68 digits omitted)...2417"},"value":"7829407253169896534563224234843010424193288969396394196456956558891129702417"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16572821774990860494704700231703947442158229636776641142382437900939064007016_by_1","typeString":"int_const 1657...(69 digits omitted)...7016"},{"typeIdentifier":"t_rational_7829407253169896534563224234843010424193288969396394196456956558891129702417_by_1","typeString":"int_const 7829...(68 digits omitted)...2417"}],"expression":{"id":1444,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"9352:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$1329_$","typeString":"type(library Pairing)"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9360:7:3","memberName":"G1Point","nodeType":"MemberAccess","referencedDeclaration":704,"src":"9352:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G1Point_$704_storage_ptr_$","typeString":"type(struct Pairing.G1Point storage pointer)"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:207:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"src":"9341:218:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":1450,"nodeType":"ExpressionStatement","src":"9341:218:3"},{"expression":{"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1451,"name":"vk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"9616:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$1348_memory_ptr","typeString":"struct Verifier.VerifyingKey memory"}},"id":1454,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9619:2:3","memberName":"IC","nodeType":"MemberAccess","referencedDeclaration":1347,"src":"9616:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"}},"id":1455,"indexExpression":{"hexValue":"32","id":1453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9622:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9616:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"38313337373138393039313632303835373737323639303330393630343238383138333433363734363734343534303731343135333139313632303231373336333331313536333932383035","id":1458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9657:76:3","typeDescriptions":{"typeIdentifier":"t_rational_8137718909162085777269030960428818343674674454071415319162021736331156392805_by_1","typeString":"int_const 8137...(68 digits omitted)...2805"},"value":"8137718909162085777269030960428818343674674454071415319162021736331156392805"},{"hexValue":"3130303332343839333438343537373738383230393933333134333535303738303132323830303433333434353333333131343539323533393732393637373435353936373536363635363537","id":1459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9747:77:3","typeDescriptions":{"typeIdentifier":"t_rational_10032489348457778820993314355078012280043344533311459253972967745596756665657_by_1","typeString":"int_const 1003...(69 digits omitted)...5657"},"value":"10032489348457778820993314355078012280043344533311459253972967745596756665657"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8137718909162085777269030960428818343674674454071415319162021736331156392805_by_1","typeString":"int_const 8137...(68 digits omitted)...2805"},{"typeIdentifier":"t_rational_10032489348457778820993314355078012280043344533311459253972967745596756665657_by_1","typeString":"int_const 1003...(69 digits omitted)...5657"}],"expression":{"id":1456,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"9627:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$1329_$","typeString":"type(library Pairing)"}},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9635:7:3","memberName":"G1Point","nodeType":"MemberAccess","referencedDeclaration":704,"src":"9627:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G1Point_$704_storage_ptr_$","typeString":"type(struct Pairing.G1Point storage pointer)"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9627:207:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"src":"9616:218:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":1462,"nodeType":"ExpressionStatement","src":"9616:218:3"},{"expression":{"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1463,"name":"vk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"9891:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$1348_memory_ptr","typeString":"struct Verifier.VerifyingKey memory"}},"id":1466,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9894:2:3","memberName":"IC","nodeType":"MemberAccess","referencedDeclaration":1347,"src":"9891:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"}},"id":1467,"indexExpression":{"hexValue":"33","id":1465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9897:1:3","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9891:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"36333439333236323330393334333133313536393736383238363433373933333432323636383532323938303735383938373739383339363739363031393138383630313837373039303230","id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:76:3","typeDescriptions":{"typeIdentifier":"t_rational_6349326230934313156976828643793342266852298075898779839679601918860187709020_by_1","typeString":"int_const 6349...(68 digits omitted)...9020"},"value":"6349326230934313156976828643793342266852298075898779839679601918860187709020"},{"hexValue":"3133363230303534373039363031313136343437383639353736363830343339353431373431373633343836363338313638303036343935313939373636343838393934353732353131343437","id":1471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10022:77:3","typeDescriptions":{"typeIdentifier":"t_rational_13620054709601116447869576680439541741763486638168006495199766488994572511447_by_1","typeString":"int_const 1362...(69 digits omitted)...1447"},"value":"13620054709601116447869576680439541741763486638168006495199766488994572511447"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_6349326230934313156976828643793342266852298075898779839679601918860187709020_by_1","typeString":"int_const 6349...(68 digits omitted)...9020"},{"typeIdentifier":"t_rational_13620054709601116447869576680439541741763486638168006495199766488994572511447_by_1","typeString":"int_const 1362...(69 digits omitted)...1447"}],"expression":{"id":1468,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"9902:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$1329_$","typeString":"type(library Pairing)"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9910:7:3","memberName":"G1Point","nodeType":"MemberAccess","referencedDeclaration":704,"src":"9902:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G1Point_$704_storage_ptr_$","typeString":"type(struct Pairing.G1Point storage pointer)"}},"id":1472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9902:207:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"src":"9891:218:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":1474,"nodeType":"ExpressionStatement","src":"9891:218:3"}]},"id":1476,"implemented":true,"kind":"function","modifiers":[],"name":"verifyingKey","nameLocation":"7473:12:3","nodeType":"FunctionDefinition","parameters":{"id":1359,"nodeType":"ParameterList","parameters":[],"src":"7485:2:3"},"returnParameters":{"id":1363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1362,"mutability":"mutable","name":"vk","nameLocation":"7531:2:3","nodeType":"VariableDeclaration","scope":1476,"src":"7511:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$1348_memory_ptr","typeString":"struct Verifier.VerifyingKey"},"typeName":{"id":1361,"nodeType":"UserDefinedTypeName","pathNode":{"id":1360,"name":"VerifyingKey","nameLocations":["7511:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1348,"src":"7511:12:3"},"referencedDeclaration":1348,"src":"7511:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$1348_storage_ptr","typeString":"struct Verifier.VerifyingKey"}},"visibility":"internal"}],"src":"7510:24:3"},"scope":1734,"src":"7464:2699:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1599,"nodeType":"Block","src":"10254:846:3","statements":[{"assignments":[1488],"declarations":[{"constant":false,"id":1488,"mutability":"mutable","name":"snark_scalar_field","nameLocation":"10272:18:3","nodeType":"VariableDeclaration","scope":1599,"src":"10264:26:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1487,"name":"uint256","nodeType":"ElementaryTypeName","src":"10264:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1490,"initialValue":{"hexValue":"3231383838323432383731383339323735323232323436343035373435323537323735303838353438333634343030343136303334333433363938323034313836353735383038343935363137","id":1489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10293:77:3","typeDescriptions":{"typeIdentifier":"t_rational_21888242871839275222246405745257275088548364400416034343698204186575808495617_by_1","typeString":"int_const 2188...(69 digits omitted)...5617"},"value":"21888242871839275222246405745257275088548364400416034343698204186575808495617"},"nodeType":"VariableDeclarationStatement","src":"10264:106:3"},{"assignments":[1493],"declarations":[{"constant":false,"id":1493,"mutability":"mutable","name":"vk","nameLocation":"10400:2:3","nodeType":"VariableDeclaration","scope":1599,"src":"10380:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$1348_memory_ptr","typeString":"struct Verifier.VerifyingKey"},"typeName":{"id":1492,"nodeType":"UserDefinedTypeName","pathNode":{"id":1491,"name":"VerifyingKey","nameLocations":["10380:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1348,"src":"10380:12:3"},"referencedDeclaration":1348,"src":"10380:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$1348_storage_ptr","typeString":"struct Verifier.VerifyingKey"}},"visibility":"internal"}],"id":1496,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1494,"name":"verifyingKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"10405:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VerifyingKey_$1348_memory_ptr_$","typeString":"function () pure returns (struct Verifier.VerifyingKey memory)"}},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10405:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$1348_memory_ptr","typeString":"struct Verifier.VerifyingKey memory"}},"nodeType":"VariableDeclarationStatement","src":"10380:39:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1498,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"10437:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10443:6:3","memberName":"length","nodeType":"MemberAccess","src":"10437:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10452:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10437:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1502,"name":"vk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"10457:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$1348_memory_ptr","typeString":"struct Verifier.VerifyingKey memory"}},"id":1503,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10460:2:3","memberName":"IC","nodeType":"MemberAccess","referencedDeclaration":1347,"src":"10457:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10463:6:3","memberName":"length","nodeType":"MemberAccess","src":"10457:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10437:32:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76657269666965722d6261642d696e707574","id":1506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10470:20:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_62f18c0da782e23b7e947e83d22170e983c1918040b5b1bd1c1e3ee5a50cc57a","typeString":"literal_string \"verifier-bad-input\""},"value":"verifier-bad-input"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_62f18c0da782e23b7e947e83d22170e983c1918040b5b1bd1c1e3ee5a50cc57a","typeString":"literal_string \"verifier-bad-input\""}],"id":1497,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"10429:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:62:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1508,"nodeType":"ExpressionStatement","src":"10429:62:3"},{"assignments":[1513],"declarations":[{"constant":false,"id":1513,"mutability":"mutable","name":"vk_x","nameLocation":"10571:4:3","nodeType":"VariableDeclaration","scope":1599,"src":"10548:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":1512,"nodeType":"UserDefinedTypeName","pathNode":{"id":1511,"name":"Pairing.G1Point","nameLocations":["10548:7:3","10556:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"10548:15:3"},"referencedDeclaration":704,"src":"10548:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"}],"id":1519,"initialValue":{"arguments":[{"hexValue":"30","id":1516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10594:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10597:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1514,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"10578:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$1329_$","typeString":"type(library Pairing)"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10586:7:3","memberName":"G1Point","nodeType":"MemberAccess","referencedDeclaration":704,"src":"10578:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G1Point_$704_storage_ptr_$","typeString":"type(struct Pairing.G1Point storage pointer)"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10578:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"nodeType":"VariableDeclarationStatement","src":"10548:51:3"},{"body":{"id":1559,"nodeType":"Block","src":"10649:184:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1532,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"10671:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1534,"indexExpression":{"id":1533,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"10677:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10671:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1535,"name":"snark_scalar_field","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"10682:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10671:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76657269666965722d6774652d736e61726b2d7363616c61722d6669656c64","id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10701:33:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_8cb5a586d84bd3fa5140c79c44fd5cd5a5b0e7e59a1ddee2846426486e57f847","typeString":"literal_string \"verifier-gte-snark-scalar-field\""},"value":"verifier-gte-snark-scalar-field"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8cb5a586d84bd3fa5140c79c44fd5cd5a5b0e7e59a1ddee2846426486e57f847","typeString":"literal_string \"verifier-gte-snark-scalar-field\""}],"id":1531,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"10663:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10663:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1539,"nodeType":"ExpressionStatement","src":"10663:72:3"},{"expression":{"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1540,"name":"vk_x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"10749:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1543,"name":"vk_x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"10773:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},{"arguments":[{"baseExpression":{"expression":{"id":1546,"name":"vk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"10798:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$1348_memory_ptr","typeString":"struct Verifier.VerifyingKey memory"}},"id":1547,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10801:2:3","memberName":"IC","nodeType":"MemberAccess","referencedDeclaration":1347,"src":"10798:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"}},"id":1551,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1548,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"10804:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10804:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10798:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},{"baseExpression":{"id":1552,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"10812:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1554,"indexExpression":{"id":1553,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"10818:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10812:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1544,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"10779:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$1329_$","typeString":"type(library Pairing)"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10787:10:3","memberName":"scalar_mul","nodeType":"MemberAccess","referencedDeclaration":892,"src":"10779:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_G1Point_$704_memory_ptr_$_t_uint256_$returns$_t_struct$_G1Point_$704_memory_ptr_$","typeString":"function (struct Pairing.G1Point memory,uint256) view returns (struct Pairing.G1Point memory)"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10779:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"},{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}],"expression":{"id":1541,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"10756:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$1329_$","typeString":"type(library Pairing)"}},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10764:8:3","memberName":"addition","nodeType":"MemberAccess","referencedDeclaration":843,"src":"10756:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_G1Point_$704_memory_ptr_$_t_struct$_G1Point_$704_memory_ptr_$returns$_t_struct$_G1Point_$704_memory_ptr_$","typeString":"function (struct Pairing.G1Point memory,struct Pairing.G1Point memory) view returns (struct Pairing.G1Point memory)"}},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10756:66:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"src":"10749:73:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":1558,"nodeType":"ExpressionStatement","src":"10749:73:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1524,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"10626:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1525,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"10630:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10636:6:3","memberName":"length","nodeType":"MemberAccess","src":"10630:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10626:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1560,"initializationExpression":{"assignments":[1521],"declarations":[{"constant":false,"id":1521,"mutability":"mutable","name":"i","nameLocation":"10619:1:3","nodeType":"VariableDeclaration","scope":1560,"src":"10614:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1520,"name":"uint","nodeType":"ElementaryTypeName","src":"10614:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1523,"initialValue":{"hexValue":"30","id":1522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10623:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10614:10:3"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10644:3:3","subExpression":{"id":1528,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"10644:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1530,"nodeType":"ExpressionStatement","src":"10644:3:3"},"nodeType":"ForStatement","src":"10609:224:3"},{"expression":{"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1561,"name":"vk_x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"10842:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1564,"name":"vk_x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"10866:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},{"baseExpression":{"expression":{"id":1565,"name":"vk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"10872:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$1348_memory_ptr","typeString":"struct Verifier.VerifyingKey memory"}},"id":1566,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10875:2:3","memberName":"IC","nodeType":"MemberAccess","referencedDeclaration":1347,"src":"10872:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$704_memory_ptr_$dyn_memory_ptr","typeString":"struct Pairing.G1Point memory[] memory"}},"id":1568,"indexExpression":{"hexValue":"30","id":1567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10878:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10872:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"},{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}],"expression":{"id":1562,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"10849:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$1329_$","typeString":"type(library Pairing)"}},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10857:8:3","memberName":"addition","nodeType":"MemberAccess","referencedDeclaration":843,"src":"10849:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_G1Point_$704_memory_ptr_$_t_struct$_G1Point_$704_memory_ptr_$returns$_t_struct$_G1Point_$704_memory_ptr_$","typeString":"function (struct Pairing.G1Point memory,struct Pairing.G1Point memory) view returns (struct Pairing.G1Point memory)"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"src":"10842:39:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":1571,"nodeType":"ExpressionStatement","src":"10842:39:3"},{"condition":{"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10895:170:3","subExpression":{"arguments":[{"arguments":[{"expression":{"id":1576,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"10945:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$1358_memory_ptr","typeString":"struct Verifier.Proof memory"}},"id":1577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10951:1:3","memberName":"A","nodeType":"MemberAccess","referencedDeclaration":1351,"src":"10945:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}],"expression":{"id":1574,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"10930:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$1329_$","typeString":"type(library Pairing)"}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10938:6:3","memberName":"negate","nodeType":"MemberAccess","referencedDeclaration":785,"src":"10930:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_G1Point_$704_memory_ptr_$returns$_t_struct$_G1Point_$704_memory_ptr_$","typeString":"function (struct Pairing.G1Point memory) pure returns (struct Pairing.G1Point memory)"}},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10930:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},{"expression":{"id":1579,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"10955:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$1358_memory_ptr","typeString":"struct Verifier.Proof memory"}},"id":1580,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10961:1:3","memberName":"B","nodeType":"MemberAccess","referencedDeclaration":1354,"src":"10955:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},{"expression":{"id":1581,"name":"vk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"10976:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$1348_memory_ptr","typeString":"struct Verifier.VerifyingKey memory"}},"id":1582,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10979:5:3","memberName":"alfa1","nodeType":"MemberAccess","referencedDeclaration":1334,"src":"10976:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},{"expression":{"id":1583,"name":"vk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"10986:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$1348_memory_ptr","typeString":"struct Verifier.VerifyingKey memory"}},"id":1584,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10989:5:3","memberName":"beta2","nodeType":"MemberAccess","referencedDeclaration":1337,"src":"10986:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},{"id":1585,"name":"vk_x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"11008:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},{"expression":{"id":1586,"name":"vk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"11014:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$1348_memory_ptr","typeString":"struct Verifier.VerifyingKey memory"}},"id":1587,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11017:6:3","memberName":"gamma2","nodeType":"MemberAccess","referencedDeclaration":1340,"src":"11014:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},{"expression":{"id":1588,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"11037:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$1358_memory_ptr","typeString":"struct Verifier.Proof memory"}},"id":1589,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11043:1:3","memberName":"C","nodeType":"MemberAccess","referencedDeclaration":1357,"src":"11037:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},{"expression":{"id":1590,"name":"vk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"11046:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$1348_memory_ptr","typeString":"struct Verifier.VerifyingKey memory"}},"id":1591,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11049:6:3","memberName":"delta2","nodeType":"MemberAccess","referencedDeclaration":1343,"src":"11046:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"},{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"},{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"},{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"},{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"},{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"},{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"},{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}],"expression":{"id":1572,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"10896:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$1329_$","typeString":"type(library Pairing)"}},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10904:12:3","memberName":"pairingProd4","nodeType":"MemberAccess","referencedDeclaration":1328,"src":"10896:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_G1Point_$704_memory_ptr_$_t_struct$_G2Point_$713_memory_ptr_$_t_struct$_G1Point_$704_memory_ptr_$_t_struct$_G2Point_$713_memory_ptr_$_t_struct$_G1Point_$704_memory_ptr_$_t_struct$_G2Point_$713_memory_ptr_$_t_struct$_G1Point_$704_memory_ptr_$_t_struct$_G2Point_$713_memory_ptr_$returns$_t_bool_$","typeString":"function (struct Pairing.G1Point memory,struct Pairing.G2Point memory,struct Pairing.G1Point memory,struct Pairing.G2Point memory,struct Pairing.G1Point memory,struct Pairing.G2Point memory,struct Pairing.G1Point memory,struct Pairing.G2Point memory) view returns (bool)"}},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10896:169:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1596,"nodeType":"IfStatement","src":"10891:184:3","trueBody":{"expression":{"hexValue":"31","id":1594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11074:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"functionReturnParameters":1486,"id":1595,"nodeType":"Return","src":"11067:8:3"}},{"expression":{"hexValue":"30","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1486,"id":1598,"nodeType":"Return","src":"11085:8:3"}]},"id":1600,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"10177:6:3","nodeType":"FunctionDefinition","parameters":{"id":1483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1479,"mutability":"mutable","name":"input","nameLocation":"10198:5:3","nodeType":"VariableDeclaration","scope":1600,"src":"10184:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1477,"name":"uint","nodeType":"ElementaryTypeName","src":"10184:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1478,"nodeType":"ArrayTypeName","src":"10184:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1482,"mutability":"mutable","name":"proof","nameLocation":"10218:5:3","nodeType":"VariableDeclaration","scope":1600,"src":"10205:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$1358_memory_ptr","typeString":"struct Verifier.Proof"},"typeName":{"id":1481,"nodeType":"UserDefinedTypeName","pathNode":{"id":1480,"name":"Proof","nameLocations":["10205:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":1358,"src":"10205:5:3"},"referencedDeclaration":1358,"src":"10205:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$1358_storage_ptr","typeString":"struct Verifier.Proof"}},"visibility":"internal"}],"src":"10183:41:3"},"returnParameters":{"id":1486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1600,"src":"10248:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1484,"name":"uint","nodeType":"ElementaryTypeName","src":"10248:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10247:6:3"},"scope":1734,"src":"10168:932:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1732,"nodeType":"Block","src":"11339:488:3","statements":[{"assignments":[1626],"declarations":[{"constant":false,"id":1626,"mutability":"mutable","name":"proof","nameLocation":"11362:5:3","nodeType":"VariableDeclaration","scope":1732,"src":"11349:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$1358_memory_ptr","typeString":"struct Verifier.Proof"},"typeName":{"id":1625,"nodeType":"UserDefinedTypeName","pathNode":{"id":1624,"name":"Proof","nameLocations":["11349:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":1358,"src":"11349:5:3"},"referencedDeclaration":1358,"src":"11349:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$1358_storage_ptr","typeString":"struct Verifier.Proof"}},"visibility":"internal"}],"id":1627,"nodeType":"VariableDeclarationStatement","src":"11349:18:3"},{"expression":{"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1628,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"11377:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$1358_memory_ptr","typeString":"struct Verifier.Proof memory"}},"id":1630,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11383:1:3","memberName":"A","nodeType":"MemberAccess","referencedDeclaration":1351,"src":"11377:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":1633,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"11403:1:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1635,"indexExpression":{"hexValue":"30","id":1634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11405:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11403:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":1636,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"11409:1:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1638,"indexExpression":{"hexValue":"31","id":1637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11409:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1631,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"11387:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$1329_$","typeString":"type(library Pairing)"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11395:7:3","memberName":"G1Point","nodeType":"MemberAccess","referencedDeclaration":704,"src":"11387:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G1Point_$704_storage_ptr_$","typeString":"type(struct Pairing.G1Point storage pointer)"}},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11387:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"src":"11377:37:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":1641,"nodeType":"ExpressionStatement","src":"11377:37:3"},{"expression":{"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1642,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"11424:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$1358_memory_ptr","typeString":"struct Verifier.Proof memory"}},"id":1644,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11430:1:3","memberName":"B","nodeType":"MemberAccess","referencedDeclaration":1354,"src":"11424:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"components":[{"baseExpression":{"baseExpression":{"id":1647,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"11451:1:3","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr","typeString":"uint256[2] memory[2] memory"}},"id":1649,"indexExpression":{"hexValue":"30","id":1648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11453:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11451:4:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1651,"indexExpression":{"hexValue":"30","id":1650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11456:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11451:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"baseExpression":{"id":1652,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"11460:1:3","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr","typeString":"uint256[2] memory[2] memory"}},"id":1654,"indexExpression":{"hexValue":"30","id":1653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11462:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11460:4:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1656,"indexExpression":{"hexValue":"31","id":1655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11465:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11460:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1657,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11450:18:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"components":[{"baseExpression":{"baseExpression":{"id":1658,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"11471:1:3","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr","typeString":"uint256[2] memory[2] memory"}},"id":1660,"indexExpression":{"hexValue":"31","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11473:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11471:4:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1662,"indexExpression":{"hexValue":"30","id":1661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11476:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11471:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"baseExpression":{"id":1663,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"11480:1:3","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr","typeString":"uint256[2] memory[2] memory"}},"id":1665,"indexExpression":{"hexValue":"31","id":1664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11482:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11480:4:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1667,"indexExpression":{"hexValue":"31","id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11485:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11480:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1668,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11470:18:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"expression":{"id":1645,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"11434:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$1329_$","typeString":"type(library Pairing)"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11442:7:3","memberName":"G2Point","nodeType":"MemberAccess","referencedDeclaration":713,"src":"11434:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G2Point_$713_storage_ptr_$","typeString":"type(struct Pairing.G2Point storage pointer)"}},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11434:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"src":"11424:65:3","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$713_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"id":1671,"nodeType":"ExpressionStatement","src":"11424:65:3"},{"expression":{"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1672,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"11499:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$1358_memory_ptr","typeString":"struct Verifier.Proof memory"}},"id":1674,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11505:1:3","memberName":"C","nodeType":"MemberAccess","referencedDeclaration":1357,"src":"11499:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":1677,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"11525:1:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1679,"indexExpression":{"hexValue":"30","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11527:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11525:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":1680,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"11531:1:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1682,"indexExpression":{"hexValue":"31","id":1681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11533:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11531:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1675,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"11509:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$1329_$","typeString":"type(library Pairing)"}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11517:7:3","memberName":"G1Point","nodeType":"MemberAccess","referencedDeclaration":704,"src":"11509:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G1Point_$704_storage_ptr_$","typeString":"type(struct Pairing.G1Point storage pointer)"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11509:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"src":"11499:37:3","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$704_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":1685,"nodeType":"ExpressionStatement","src":"11499:37:3"},{"assignments":[1690],"declarations":[{"constant":false,"id":1690,"mutability":"mutable","name":"inputValues","nameLocation":"11560:11:3","nodeType":"VariableDeclaration","scope":1732,"src":"11546:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1688,"name":"uint","nodeType":"ElementaryTypeName","src":"11546:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1689,"nodeType":"ArrayTypeName","src":"11546:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1697,"initialValue":{"arguments":[{"expression":{"id":1694,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"11585:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11591:6:3","memberName":"length","nodeType":"MemberAccess","src":"11585:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"11574:10:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1691,"name":"uint","nodeType":"ElementaryTypeName","src":"11578:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1692,"nodeType":"ArrayTypeName","src":"11578:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11574:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11546:52:3"},{"body":{"id":1717,"nodeType":"Block","src":"11646:50:3","statements":[{"expression":{"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1709,"name":"inputValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"11660:11:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1711,"indexExpression":{"id":1710,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"11672:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11660:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1712,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"11677:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":1714,"indexExpression":{"id":1713,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"11683:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11677:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11660:25:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1716,"nodeType":"ExpressionStatement","src":"11660:25:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1702,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"11624:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1703,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"11628:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:6:3","memberName":"length","nodeType":"MemberAccess","src":"11628:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11624:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1718,"initializationExpression":{"assignments":[1699],"declarations":[{"constant":false,"id":1699,"mutability":"mutable","name":"i","nameLocation":"11617:1:3","nodeType":"VariableDeclaration","scope":1718,"src":"11612:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1698,"name":"uint","nodeType":"ElementaryTypeName","src":"11612:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1701,"initialValue":{"hexValue":"30","id":1700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11621:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11612:10:3"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11642:3:3","subExpression":{"id":1706,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"11642:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1708,"nodeType":"ExpressionStatement","src":"11642:3:3"},"nodeType":"ForStatement","src":"11608:88:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1720,"name":"inputValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"11716:11:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1721,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"11729:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$1358_memory_ptr","typeString":"struct Verifier.Proof memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_struct$_Proof_$1358_memory_ptr","typeString":"struct Verifier.Proof memory"}],"id":1719,"name":"verify","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"11709:6:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Proof_$1358_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory,struct Verifier.Proof memory) view returns (uint256)"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11709:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11739:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11709:31:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1730,"nodeType":"Block","src":"11784:37:3","statements":[{"expression":{"hexValue":"66616c7365","id":1728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11805:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1623,"id":1729,"nodeType":"Return","src":"11798:12:3"}]},"id":1731,"nodeType":"IfStatement","src":"11705:116:3","trueBody":{"id":1727,"nodeType":"Block","src":"11742:36:3","statements":[{"expression":{"hexValue":"74727565","id":1725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11763:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1623,"id":1726,"nodeType":"Return","src":"11756:11:3"}]}}]},"documentation":{"id":1601,"nodeType":"StructuredDocumentation","src":"11105:42:3","text":"@return r  bool true if proof is valid"},"functionSelector":"11479fea","id":1733,"implemented":true,"kind":"function","modifiers":[],"name":"verifyProof","nameLocation":"11161:11:3","nodeType":"FunctionDefinition","parameters":{"id":1620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1605,"mutability":"mutable","name":"a","nameLocation":"11201:1:3","nodeType":"VariableDeclaration","scope":1733,"src":"11186:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1602,"name":"uint","nodeType":"ElementaryTypeName","src":"11186:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1604,"length":{"hexValue":"32","id":1603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11191:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"11186:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":1611,"mutability":"mutable","name":"b","nameLocation":"11234:1:3","nodeType":"VariableDeclaration","scope":1733,"src":"11216:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr","typeString":"uint256[2][2]"},"typeName":{"baseType":{"baseType":{"id":1606,"name":"uint","nodeType":"ElementaryTypeName","src":"11216:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1608,"length":{"hexValue":"32","id":1607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11221:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"11216:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"id":1610,"length":{"hexValue":"32","id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11224:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"11216:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr","typeString":"uint256[2][2]"}},"visibility":"internal"},{"constant":false,"id":1615,"mutability":"mutable","name":"c","nameLocation":"11264:1:3","nodeType":"VariableDeclaration","scope":1733,"src":"11249:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1612,"name":"uint","nodeType":"ElementaryTypeName","src":"11249:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1614,"length":{"hexValue":"32","id":1613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11254:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"11249:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":1619,"mutability":"mutable","name":"input","nameLocation":"11294:5:3","nodeType":"VariableDeclaration","scope":1733,"src":"11279:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3]"},"typeName":{"baseType":{"id":1616,"name":"uint","nodeType":"ElementaryTypeName","src":"11279:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1618,"length":{"hexValue":"33","id":1617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11284:1:3","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"11279:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"}},"visibility":"internal"}],"src":"11172:137:3"},"returnParameters":{"id":1623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1622,"mutability":"mutable","name":"r","nameLocation":"11336:1:3","nodeType":"VariableDeclaration","scope":1733,"src":"11331:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1621,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11330:8:3"},"scope":1734,"src":"11152:675:3","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":1735,"src":"7121:4708:3","usedErrors":[],"usedEvents":[]}],"src":"1232:10598:3"}}},"contracts":{"contracts/MiMCSponge.sol":{"Hasher":{"abi":[{"inputs":[{"internalType":"uint256[2]","name":"_ins","type":"uint256[2]"},{"internalType":"uint256","name":"_k","type":"uint256"}],"name":"MiMC5Sponge","outputs":[{"internalType":"uint256","name":"h","type":"uint256"}],"stateMutability":"view","type":"function"}],"metadata":{"llvm_arguments":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"revive_pallet_version":null,"revive_version":"0.1.0-dev.14+commit.f6a412e.llvm-18.1.8","solc_metadata":"{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"_ins\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256\",\"name\":\"_k\",\"type\":\"uint256\"}],\"name\":\"MiMC5Sponge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"h\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MiMCSponge.sol\":\"Hasher\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MiMCSponge.sol\":{\"keccak256\":\"0x88b37596f844edfa4281035653c8c4f3057ec9e8f7552472e364c19488f9343d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://729ea70d2ef35a1e44298dd69e55dbfb880c7b1cf57cc367f17f6e81b171a2f6\",\"dweb:/ipfs/QmWtXUgDPKVmn1WXgUU6GguiCJcnvhMEuT2JdFCyJu3GEB\"]}},\"version\":1}","solc_version":"0.8.29+commit.ab55807c.Darwin.appleclang"},"evm":{"assembly":"// RO data = 0/0 bytes\n// RW data = 640/66224 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 24391\n// Code size = 82610 bytes\n\n      : @0 (gas: 2)\n     0: i32 a2 = a0 >> 0x10\n     3: jump @5 if a2 != 0\n      : @1 (gas: 4)\n     6: a1 = a1 + a0\n     9: i32 a1 = a1 + 0x1f\n    12: a1 = a1 & 0xffffffffffffffe0\n    15: jump @5 if a1 >u 65536\n      : @2 (gas: 3)\n    21: a2 = 0x20284\n    26: a3 = i32 [0x20284]\n    31: jump @4 if a3 >=u a1\n      : @3 (gas: 2)\n    34: u32 [0x20284] = a1\n    39: fallthrough\n      : @4 (gas: 4)\n    40: a1 = 0x20290\n    45: i32 a0 = a0 + 0\n    47: a0 = a0 + a1\n    50: ret\n      : @5 (gas: 1)\n    52: trap\n      : @6 (gas: 6)\n    53: sp = sp + 0xfffffffffffffff0\n    56: u64 [sp + 0x8] = ra\n    59: u64 [sp] = s0\n    61: s0 = a0 & 0x1\n    64: ecalli 2 // 'call_data_size'\n    66: fallthrough\n      : @7 (gas: 2)\n    67: u32 [0x20280] = a0\n    72: jump @9 if s0 == 0\n      : @8 (gas: 1)\n    75: ra = 2, jump @10\n      : @9 [@dyn 1] (gas: 1)\n    79: ra = 4, jump @71\n      : @10 [@dyn 2] (gas: 13)\n    84: sp = sp + 0xfffffffffffffe40\n    88: u64 [sp + 0x1b8] = ra\n    92: u64 [sp + 0x1b0] = s0\n    96: u64 [sp + 0x1a8] = s1\n   100: s0 = sp + 0x1c0\n   104: sp = sp & 0xffffffffffffffe0\n   107: u64 [sp + 344] = 0\n   111: u64 [sp + 336] = 0\n   115: u64 [sp + 328] = 0\n   119: u64 [sp + 320] = 0\n   123: i32 a0 = sp + 0x140\n   127: ecalli 7 // 'value_transferred'\n   129: fallthrough\n      : @11 (gas: 8)\n   130: a0 = u64 [sp + 0x150]\n   134: a1 = u64 [sp + 0x158]\n   138: a2 = u64 [sp + 0x148]\n   142: a3 = u64 [sp + 0x140]\n   146: a1 = a1 | a2\n   149: a0 = a0 | a3\n   152: a0 = a0 | a1\n   155: jump @63 if a0 != 0\n      : @12 (gas: 20)\n   159: a0 = u64 [0x20000]\n   164: a1 = u64 [0x20008]\n   169: a2 = u64 [0x20010]\n   174: u64 [sp + 0x198] = a0\n   178: u64 [sp + 0x190] = a1\n   182: u64 [sp + 376] = 0\n   186: u64 [sp + 0x188] = a2\n   190: a0 = u64 [0x20018]\n   195: u64 [sp + 368] = 0\n   199: u64 [sp + 360] = 0\n   203: u64 [sp + 352] = 0\n   207: u64 [sp + 0x180] = a0\n   211: i32 a1 = sp + 0x160\n   215: i32 a3 = sp + 0x180\n   219: a2 = 0xffffffffffffffff\n   222: a4 = 0x20\n   225: a0 = 0\n   227: ra = 0x6\n   230: ecalli 6 // 'set_storage'\n   232: fallthrough\n      : @13 [@dyn 3] (gas: 51)\n   233: t2 = 0x20284\n   238: s1 = 0x20290\n   243: a5 = i32 [0x20284]\n   248: a0 = 0x3000000000000\n   258: u64 [0x202e8] = a0\n   263: u64 [0x202e0] = 0\n   268: u64 [0x202d8] = 0\n   273: u64 [0x202d0] = 0\n   278: u64 [0x20328] = 0\n   283: u64 [0x20320] = 0\n   288: u64 [0x20318] = 0\n   293: u64 [0x20310] = 0\n   298: u64 [sp + 0x120] = a0\n   302: u64 [sp + 0x128] = a0\n   306: u64 [sp + 0x130] = a0\n   310: u64 [sp + 0x138] = a0\n   314: u64 [sp + 0x100] = a0\n   318: u64 [sp + 0x108] = a0\n   322: u64 [sp + 0x110] = a0\n   326: u64 [sp + 0x118] = a0\n   330: u64 [sp + 0xd8] = a0\n   334: u64 [sp + 0xe8] = a0\n   338: u64 [sp + 0xf0] = a0\n   342: u64 [sp + 0xf8] = a0\n   346: u64 [sp + 0xb8] = a0\n   350: u64 [sp + 0xc0] = a0\n   354: u64 [sp + 0xc8] = a0\n   358: u64 [sp + 0xd0] = a0\n   362: u64 [sp + 0x98] = a0\n   366: u64 [sp + 0xa0] = a0\n   370: u64 [sp + 0xa8] = a0\n   374: u64 [sp + 0xb0] = a0\n   378: u64 [sp + 0x78] = a0\n   381: u64 [sp + 0x80] = a0\n   385: u64 [sp + 0x88] = a0\n   389: u64 [sp + 0x90] = a0\n   393: u64 [sp + 0x58] = a0\n   396: u64 [sp + 0x60] = a0\n   399: u64 [sp + 0x68] = a0\n   402: u64 [sp + 0x70] = a0\n   405: u64 [sp + 0x38] = a0\n   408: u64 [sp + 0x40] = a0\n   411: u64 [sp + 0x48] = a0\n   414: u64 [sp + 0x50] = a0\n   417: u64 [sp + 0x18] = a0\n   420: u64 [sp + 0x20] = a0\n   423: u64 [sp + 0x28] = a0\n   426: u64 [sp + 0x30] = a0\n   429: u64 [sp + 0x10] = a0\n   432: u64 [sp + 0xe0] = t2\n   436: jump @15 if a5 >u 191\n      : @14 (gas: 12)\n   441: a5 = u64 [sp + 0xe0]\n   445: u32 [a5 + 0] = 0xc0\n   449: t2 = u64 [sp + 0xe0]\n   453: a5 = u64 [0x20020]\n   458: a0 = u64 [0x20028]\n   463: a4 = u64 [0x20030]\n   468: a2 = u64 [0x20038]\n   473: u64 [0x20348] = a5\n   478: u64 [0x20340] = a0\n   483: u64 [0x20338] = a4\n   488: u64 [0x20330] = a2\n   493: jump @16\n      : @15 (gas: 12)\n   495: u64 [sp + 0x8] = a5\n   498: a5 = u64 [0x20020]\n   503: a0 = u64 [0x20028]\n   508: a4 = u64 [0x20030]\n   513: u64 [0x20348] = a5\n   518: a5 = u64 [sp + 0x8]\n   521: a2 = u64 [0x20038]\n   526: u64 [0x20340] = a0\n   531: u64 [0x20338] = a4\n   536: a4 = 0xdf\n   540: u64 [0x20330] = a2\n   545: jump @45 if a4 <u a5\n      : @16 (gas: 9)\n   549: a2 = u64 [0x20040]\n   554: a1 = u64 [0x20048]\n   559: a0 = u64 [0x20050]\n   564: a3 = u64 [0x20058]\n   569: u64 [0x20368] = a2\n   574: u64 [0x20360] = a1\n   579: u64 [0x20358] = a0\n   584: u64 [0x20350] = a3\n   589: fallthrough\n      : @17 (gas: 9)\n   590: a0 = u64 [0x20060]\n   595: a1 = u64 [0x20068]\n   600: a2 = u64 [0x20070]\n   605: a3 = u64 [0x20078]\n   610: u64 [0x20388] = a0\n   615: u64 [0x20380] = a1\n   620: u64 [0x20378] = a2\n   625: u64 [0x20370] = a3\n   630: fallthrough\n      : @18 (gas: 10)\n   631: u32 [t2 + 0] = 0x120\n   635: a0 = u64 [0x20080]\n   640: a1 = u64 [0x20088]\n   645: a2 = u64 [0x20090]\n   650: a3 = u64 [0x20098]\n   655: u64 [0x203a8] = a0\n   660: u64 [0x203a0] = a1\n   665: u64 [0x20398] = a2\n   670: u64 [0x20390] = a3\n   675: fallthrough\n      : @19 (gas: 9)\n   676: a0 = u64 [0x200a0]\n   681: a1 = u64 [0x200a8]\n   686: a2 = u64 [0x200b0]\n   691: a3 = u64 [0x200b8]\n   696: u64 [0x203c8] = a0\n   701: u64 [0x203c0] = a1\n   706: u64 [0x203b8] = a2\n   711: u64 [0x203b0] = a3\n   716: fallthrough\n      : @20 (gas: 9)\n   717: a0 = u64 [0x200c0]\n   722: a1 = u64 [0x200c8]\n   727: a2 = u64 [0x200d0]\n   732: a3 = u64 [0x200d8]\n   737: u64 [0x203e8] = a0\n   742: u64 [0x203e0] = a1\n   747: u64 [0x203d8] = a2\n   752: u64 [0x203d0] = a3\n   757: fallthrough\n      : @21 (gas: 10)\n   758: u32 [t2 + 0] = 0x180\n   762: a0 = u64 [0x200e0]\n   767: a1 = u64 [0x200e8]\n   772: a2 = u64 [0x200f0]\n   777: a3 = u64 [0x200f8]\n   782: u64 [0x20408] = a0\n   787: u64 [0x20400] = a1\n   792: u64 [0x203f8] = a2\n   797: u64 [0x203f0] = a3\n   802: fallthrough\n      : @22 (gas: 9)\n   803: a0 = u64 [0x20100]\n   808: a1 = u64 [0x20108]\n   813: a2 = u64 [0x20110]\n   818: a3 = u64 [0x20118]\n   823: u64 [0x20428] = a0\n   828: u64 [0x20420] = a1\n   833: u64 [0x20418] = a2\n   838: u64 [0x20410] = a3\n   843: fallthrough\n      : @23 (gas: 10)\n   844: u32 [t2 + 0] = 0x1c0\n   848: a0 = u64 [0x20120]\n   853: a1 = u64 [0x20128]\n   858: a2 = u64 [0x20130]\n   863: a3 = u64 [0x20138]\n   868: u64 [0x20448] = a0\n   873: u64 [0x20440] = a1\n   878: u64 [0x20438] = a2\n   883: u64 [0x20430] = a3\n   888: fallthrough\n      : @24 (gas: 9)\n   889: a0 = u64 [0x20140]\n   894: a1 = u64 [0x20148]\n   899: a2 = u64 [0x20150]\n   904: a3 = u64 [0x20158]\n   909: u64 [0x20468] = a0\n   914: u64 [0x20460] = a1\n   919: u64 [0x20458] = a2\n   924: u64 [0x20450] = a3\n   929: fallthrough\n      : @25 (gas: 10)\n   930: u32 [t2 + 0] = 0x200\n   934: a0 = u64 [0x20160]\n   939: a1 = u64 [0x20168]\n   944: a2 = u64 [0x20170]\n   949: a3 = u64 [0x20178]\n   954: u64 [0x20488] = a0\n   959: u64 [0x20480] = a1\n   964: u64 [0x20478] = a2\n   969: u64 [0x20470] = a3\n   974: fallthrough\n      : @26 (gas: 9)\n   975: a0 = u64 [0x20180]\n   980: a1 = u64 [0x20188]\n   985: a2 = u64 [0x20190]\n   990: a3 = u64 [0x20198]\n   995: u64 [0x204a8] = a0\n  1000: u64 [0x204a0] = a1\n  1005: u64 [0x20498] = a2\n  1010: u64 [0x20490] = a3\n  1015: fallthrough\n      : @27 (gas: 10)\n  1016: u32 [t2 + 0] = 0x240\n  1020: a0 = u64 [0x201a0]\n  1025: a1 = u64 [0x201a8]\n  1030: a2 = u64 [0x201b0]\n  1035: a3 = u64 [0x201b8]\n  1040: u64 [0x204c8] = a0\n  1045: u64 [0x204c0] = a1\n  1050: u64 [0x204b8] = a2\n  1055: u64 [0x204b0] = a3\n  1060: fallthrough\n      : @28 (gas: 9)\n  1061: a0 = u64 [0x201c0]\n  1066: a1 = u64 [0x201c8]\n  1071: a2 = u64 [0x201d0]\n  1076: a3 = u64 [0x201d8]\n  1081: u64 [0x204e8] = a0\n  1086: u64 [0x204e0] = a1\n  1091: u64 [0x204d8] = a2\n  1096: u64 [0x204d0] = a3\n  1101: fallthrough\n      : @29 (gas: 10)\n  1102: u32 [t2 + 0] = 0x280\n  1106: a0 = u64 [0x201e0]\n  1111: a1 = u64 [0x201e8]\n  1116: a2 = u64 [0x201f0]\n  1121: a3 = u64 [0x201f8]\n  1126: u64 [0x20508] = a0\n  1131: u64 [0x20500] = a1\n  1136: u64 [0x204f8] = a2\n  1141: u64 [0x204f0] = a3\n  1146: fallthrough\n      : @30 (gas: 9)\n  1147: a0 = u64 [0x20200]\n  1152: a1 = u64 [0x20208]\n  1157: a2 = u64 [0x20210]\n  1162: a3 = u64 [0x20218]\n  1167: u64 [0x20528] = a0\n  1172: u64 [0x20520] = a1\n  1177: u64 [0x20518] = a2\n  1182: u64 [0x20510] = a3\n  1187: fallthrough\n      : @31 (gas: 10)\n  1188: u32 [t2 + 0] = 0x2c0\n  1192: a0 = u64 [0x20220]\n  1197: a1 = u64 [0x20228]\n  1202: a2 = u64 [0x20230]\n  1207: a3 = u64 [0x20238]\n  1212: u64 [0x20548] = a0\n  1217: u64 [0x20540] = a1\n  1222: u64 [0x20538] = a2\n  1227: u64 [0x20530] = a3\n  1232: fallthrough\n      : @32 (gas: 10)\n  1233: a0 = u64 [0x20240]\n  1238: a1 = u64 [0x20248]\n  1243: a2 = u64 [0x20250]\n  1248: a3 = u64 [0x20258]\n  1253: u64 [0x20568] = a0\n  1258: u64 [0x20560] = a1\n  1263: u64 [0x20558] = a2\n  1268: u64 [0x20550] = a3\n  1273: u32 [t2 + 0] = 0x300\n  1277: jump @34\n      : @33 (gas: 2)\n  1279: u32 [0x20284] = 0x300\n  1286: fallthrough\n      : @34 (gas: 24)\n  1287: a2 = u64 [0x20260]\n  1292: t0 = 0\n  1294: t1 = 0\n  1296: ra = 0\n  1298: u64 [sp + 312] = 0\n  1302: a1 = 0\n  1304: a0 = 0\n  1306: u64 [sp + 304] = 0\n  1310: u64 [0x20588] = a2\n  1315: a2 = u64 [0x20268]\n  1320: a3 = u64 [0x20270]\n  1325: a4 = u64 [0x20278]\n  1330: u64 [sp + 208] = 0x1ffe0\n  1337: u64 [0x20580] = a2\n  1342: u64 [0x20578] = a3\n  1347: u64 [sp + 0xd8] = s1\n  1351: u64 [0x20570] = a4\n  1356: s1 = u64 [sp + 0x138]\n  1360: a2 = 0x80\n  1364: i32 a3 = sp + 0x160\n  1368: u64 [sp + 0xc8] = a3\n  1372: i32 a3 = sp + 0x180\n  1376: u64 [sp + 0xc0] = a3\n  1380: jump @37\n      : @35 (gas: 52)\n  1383: i32 a3 = a2 + 0\n  1385: a4 = u64 [sp + 0xd8]\n  1389: a3 = a3 + a4\n  1392: a4 = u64 [a3 + 0x18]\n  1395: a5 = a2 + 0x20\n  1398: u64 [sp + 0x128] = a5\n  1402: a2 = a5 <u a2\n  1405: a5 = a1 + a2\n  1408: u64 [sp + 0x120] = a5\n  1412: a1 = a5 <u a1\n  1415: a1 = a2 if a2 == 0\n  1418: a1 = a1 + a0\n  1421: u64 [sp + 0x118] = a1\n  1425: a0 = a1 <u a0\n  1428: a1 = u64 [sp + 0x130]\n  1432: a1 = a1 + a0\n  1435: u64 [sp + 0x130] = a1\n  1439: a5 = t0 + 0x1\n  1442: u64 [sp + 0x108] = a5\n  1446: a0 = a5 << 0x38\n  1449: u64 [sp + 0x178] = a0\n  1453: a0 = u64 [a3 + 0x10]\n  1456: u64 [sp + 0x198] = a4\n  1460: a1 = u64 [a3]\n  1462: a2 = u64 [a3 + 0x8]\n  1465: u64 [sp + 0x190] = a0\n  1469: a0 = a5 <u 0x1\n  1472: a0 = a0 + t1\n  1475: u64 [sp + 0x110] = a0\n  1479: u64 [sp + 0x188] = a2\n  1483: a0 = a0 | a5\n  1486: a0 = a0 <u 0x1\n  1489: a0 = a0 + ra\n  1492: u64 [sp + 0xf8] = a0\n  1496: u64 [sp + 0x180] = a1\n  1500: a0 = a0 <u ra\n  1503: a0 = a0 + s1\n  1506: u64 [sp + 0x100] = a0\n  1510: u64 [sp + 368] = 0\n  1514: u64 [sp + 360] = 0\n  1518: u64 [sp + 352] = 0\n  1522: a2 = 0xffffffffffffffff\n  1525: a4 = 0x20\n  1528: a0 = 0\n  1530: a1 = u64 [sp + 0xc8]\n  1534: a3 = u64 [sp + 0xc0]\n  1538: u64 [sp + 0x138] = s1\n  1542: s1 = t0\n  1544: u64 [sp + 0xe8] = t1\n  1548: u64 [sp + 0xf0] = ra\n  1552: ecalli 6 // 'set_storage'\n  1554: fallthrough\n      : @36 (gas: 16)\n  1555: t2 = u64 [sp + 0xe0]\n  1559: a3 = s1 <u 0x13\n  1562: a0 = u64 [sp + 0xe8]\n  1566: a3 = 0 if a0 != 0\n  1568: a0 = u64 [sp + 0x138]\n  1572: a1 = u64 [sp + 0xf0]\n  1576: a0 = a0 | a1\n  1579: a3 = 0 if a0 != 0\n  1581: t0 = u64 [sp + 0x108]\n  1585: t1 = u64 [sp + 0x110]\n  1589: ra = u64 [sp + 0xf8]\n  1593: s1 = u64 [sp + 0x100]\n  1597: a2 = u64 [sp + 0x128]\n  1601: a1 = u64 [sp + 0x120]\n  1605: a0 = u64 [sp + 0x118]\n  1609: jump @39 if a3 == 0\n      : @37 (gas: 5)\n  1612: a4 = i32 [t2]\n  1614: a3 = a2 + 0x3f\n  1617: a5 = u64 [sp + 0xd0]\n  1621: a3 = a3 & a5\n  1624: jump @35 if a4 >=u a3\n      : @38 (gas: 2)\n  1628: u32 [t2] = a3\n  1630: jump @35\n      : @39 (gas: 2)\n  1633: a0 = i32 [t2]\n  1635: jump @41 if a0 >u 95\n      : @40 (gas: 3)\n  1639: a0 = 0x60\n  1642: u32 [t2] = a0\n  1644: fallthrough\n      : @41 (gas: 17)\n  1645: a4 = u64 [sp + 0xd8]\n  1649: a1 = u64 [a4 + 0x48]\n  1652: a2 = u64 [a4 + 0x58]\n  1655: a3 = u64 [a4 + 0x40]\n  1658: a4 = u64 [a4 + 0x50]\n  1661: a1 = reverse a1\n  1663: s1 = reverse a2\n  1665: a2 = reverse a3\n  1667: a3 = reverse a4\n  1669: a2 = a2 | a3\n  1672: a3 = s1 | a1\n  1675: a3 = a3 | a2\n  1678: a3 = a3 >> 0x20\n  1681: a1 = a1 | a2\n  1684: a1 = a1 << 0x20\n  1687: a1 = a1 | a3\n  1690: jump @44 if a1 != 0\n      : @42 (gas: 2)\n  1693: i32 a1 = s1 >> 0x10\n  1696: jump @44 if a1 != 0\n      : @43 (gas: 4)\n  1699: a1 = s1 + 0x1f\n  1702: a2 = u64 [sp + 0xd0]\n  1706: a1 = a1 & a2\n  1709: jump @64 if a1 <=u 65536\n      : @44 (gas: 1)\n  1716: trap\n      : @45 (gas: 9)\n  1717: a2 = u64 [0x20040]\n  1722: a1 = u64 [0x20048]\n  1727: a0 = u64 [0x20050]\n  1732: u64 [0x20368] = a2\n  1737: a2 = u64 [0x20058]\n  1742: u64 [0x20360] = a1\n  1747: u64 [0x20358] = a0\n  1752: u64 [0x20350] = a2\n  1757: jump @17 if a5 <=u 255\n      : @46 (gas: 9)\n  1763: a0 = u64 [0x20060]\n  1768: a1 = u64 [0x20068]\n  1773: a2 = u64 [0x20070]\n  1778: u64 [0x20388] = a0\n  1783: a0 = u64 [0x20078]\n  1788: u64 [0x20380] = a1\n  1793: u64 [0x20378] = a2\n  1798: u64 [0x20370] = a0\n  1803: jump @18 if a5 <=u 287\n      : @47 (gas: 9)\n  1809: a0 = u64 [0x20080]\n  1814: a1 = u64 [0x20088]\n  1819: a2 = u64 [0x20090]\n  1824: u64 [0x203a8] = a0\n  1829: a0 = u64 [0x20098]\n  1834: u64 [0x203a0] = a1\n  1839: u64 [0x20398] = a2\n  1844: u64 [0x20390] = a0\n  1849: jump @19 if a5 <=u 319\n      : @48 (gas: 9)\n  1855: a0 = u64 [0x200a0]\n  1860: a1 = u64 [0x200a8]\n  1865: a2 = u64 [0x200b0]\n  1870: u64 [0x203c8] = a0\n  1875: a0 = u64 [0x200b8]\n  1880: u64 [0x203c0] = a1\n  1885: u64 [0x203b8] = a2\n  1890: u64 [0x203b0] = a0\n  1895: jump @20 if a5 <=u 351\n      : @49 (gas: 9)\n  1901: a0 = u64 [0x200c0]\n  1906: a1 = u64 [0x200c8]\n  1911: a2 = u64 [0x200d0]\n  1916: u64 [0x203e8] = a0\n  1921: a0 = u64 [0x200d8]\n  1926: u64 [0x203e0] = a1\n  1931: u64 [0x203d8] = a2\n  1936: u64 [0x203d0] = a0\n  1941: jump @21 if a5 <=u 383\n      : @50 (gas: 9)\n  1947: a0 = u64 [0x200e0]\n  1952: a1 = u64 [0x200e8]\n  1957: a2 = u64 [0x200f0]\n  1962: u64 [0x20408] = a0\n  1967: a0 = u64 [0x200f8]\n  1972: u64 [0x20400] = a1\n  1977: u64 [0x203f8] = a2\n  1982: u64 [0x203f0] = a0\n  1987: jump @22 if a5 <=u 415\n      : @51 (gas: 9)\n  1993: a0 = u64 [0x20100]\n  1998: a1 = u64 [0x20108]\n  2003: a2 = u64 [0x20110]\n  2008: u64 [0x20428] = a0\n  2013: a0 = u64 [0x20118]\n  2018: u64 [0x20420] = a1\n  2023: u64 [0x20418] = a2\n  2028: u64 [0x20410] = a0\n  2033: jump @23 if a5 <=u 447\n      : @52 (gas: 9)\n  2039: a0 = u64 [0x20120]\n  2044: a1 = u64 [0x20128]\n  2049: a2 = u64 [0x20130]\n  2054: u64 [0x20448] = a0\n  2059: a0 = u64 [0x20138]\n  2064: u64 [0x20440] = a1\n  2069: u64 [0x20438] = a2\n  2074: u64 [0x20430] = a0\n  2079: jump @24 if a5 <=u 479\n      : @53 (gas: 9)\n  2085: a0 = u64 [0x20140]\n  2090: a1 = u64 [0x20148]\n  2095: a2 = u64 [0x20150]\n  2100: u64 [0x20468] = a0\n  2105: a0 = u64 [0x20158]\n  2110: u64 [0x20460] = a1\n  2115: u64 [0x20458] = a2\n  2120: u64 [0x20450] = a0\n  2125: jump @25 if a5 <=u 511\n      : @54 (gas: 9)\n  2131: a0 = u64 [0x20160]\n  2136: a1 = u64 [0x20168]\n  2141: a2 = u64 [0x20170]\n  2146: u64 [0x20488] = a0\n  2151: a0 = u64 [0x20178]\n  2156: u64 [0x20480] = a1\n  2161: u64 [0x20478] = a2\n  2166: u64 [0x20470] = a0\n  2171: jump @26 if a5 <=u 543\n      : @55 (gas: 9)\n  2177: a0 = u64 [0x20180]\n  2182: u64 [0x204a8] = a0\n  2187: a0 = u64 [0x20188]\n  2192: a1 = u64 [0x20190]\n  2197: a2 = u64 [0x20198]\n  2202: u64 [0x204a0] = a0\n  2207: u64 [0x20498] = a1\n  2212: u64 [0x20490] = a2\n  2217: jump @27 if a5 <=u 575\n      : @56 (gas: 9)\n  2223: a0 = u64 [0x201a0]\n  2228: u64 [0x204c8] = a0\n  2233: a0 = u64 [0x201a8]\n  2238: a1 = u64 [0x201b0]\n  2243: a2 = u64 [0x201b8]\n  2248: u64 [0x204c0] = a0\n  2253: u64 [0x204b8] = a1\n  2258: u64 [0x204b0] = a2\n  2263: jump @28 if a5 <=u 607\n      : @57 (gas: 9)\n  2269: a0 = u64 [0x201c0]\n  2274: u64 [0x204e8] = a0\n  2279: a0 = u64 [0x201c8]\n  2284: a1 = u64 [0x201d0]\n  2289: a2 = u64 [0x201d8]\n  2294: u64 [0x204e0] = a0\n  2299: u64 [0x204d8] = a1\n  2304: u64 [0x204d0] = a2\n  2309: jump @29 if a5 <=u 639\n      : @58 (gas: 10)\n  2315: a0 = u64 [0x201e0]\n  2320: u64 [0x20508] = a0\n  2325: a0 = u64 [0x201e8]\n  2330: a1 = u64 [0x201f0]\n  2335: a2 = u64 [0x201f8]\n  2340: u64 [0x20500] = a0\n  2345: u64 [0x204f8] = a1\n  2350: u64 [0x204f0] = a2\n  2355: a1 = u64 [sp + 0x8]\n  2358: jump @30 if a1 <=u 671\n      : @59 (gas: 10)\n  2364: a0 = u64 [0x20200]\n  2369: u64 [0x20528] = a0\n  2374: a0 = u64 [0x20208]\n  2379: a1 = u64 [0x20210]\n  2384: a2 = u64 [0x20218]\n  2389: u64 [0x20520] = a0\n  2394: u64 [0x20518] = a1\n  2399: u64 [0x20510] = a2\n  2404: a1 = u64 [sp + 0x8]\n  2407: jump @31 if a1 <=u 703\n      : @60 (gas: 10)\n  2413: a0 = u64 [0x20220]\n  2418: u64 [0x20548] = a0\n  2423: a0 = u64 [0x20228]\n  2428: a1 = u64 [0x20230]\n  2433: a2 = u64 [0x20238]\n  2438: u64 [0x20540] = a0\n  2443: u64 [0x20538] = a1\n  2448: u64 [0x20530] = a2\n  2453: a1 = u64 [sp + 0x8]\n  2456: jump @32 if a1 <=u 735\n      : @61 (gas: 10)\n  2462: a0 = u64 [0x20240]\n  2467: u64 [0x20568] = a0\n  2472: a0 = u64 [0x20248]\n  2477: a1 = u64 [0x20250]\n  2482: a2 = u64 [0x20258]\n  2487: u64 [0x20560] = a0\n  2492: u64 [0x20558] = a1\n  2497: u64 [0x20550] = a2\n  2502: a1 = u64 [sp + 0x8]\n  2505: jump @33 if a1 <=u 767\n      : @62 (gas: 1)\n  2511: jump @34\n      : @63 (gas: 6)\n  2514: a1 = 0x20290\n  2519: i32 a1 = a1 + 0\n  2521: a0 = 0x1\n  2524: a2 = 0\n  2526: ecalli 4 // 'seal_return'\n  2528: fallthrough\n      : @64 (gas: 1)\n  2529: jump @66 if a0 >=u a1\n      : @65 (gas: 3)\n  2532: a0 = u64 [sp + 0xe0]\n  2536: u32 [a0] = a1\n  2538: fallthrough\n      : @66 (gas: 6)\n  2539: a0 = u64 [sp + 0xd8]\n  2543: i32 a0 = a0 + s1\n  2546: a1 = 0\n  2548: a2 = 0\n  2550: ecalli 0 // 'call_data_copy'\n  2551: fallthrough\n      : @67 (gas: 2)\n  2552: a1 = i32 [0x20288]\n  2557: jump @69 if a1 == 0\n      : @68 (gas: 4)\n  2560: a0 = 0x302b0\n  2565: i32 a0 = a0 + 0\n  2567: ecalli 5 // 'set_immutable_data'\n  2569: fallthrough\n      : @69 (gas: 3)\n  2570: a0 = s1\n  2572: a1 = 0\n  2574: ra = 8, jump @0\n      : @70 [@dyn 4] (gas: 6)\n  2579: i32 a1 = a0 + 0\n  2581: a0 = 0\n  2583: a2 = 0\n  2585: ra = 0xa\n  2588: ecalli 4 // 'seal_return'\n  2590: fallthrough\n      : @71 [@dyn 5] (gas: 10)\n  2591: sp = sp + 0xfffffffffffff808\n  2595: u64 [sp + 0x7f0] = ra\n  2599: u64 [sp + 0x7e8] = s0\n  2603: u64 [sp + 0x7e0] = s1\n  2607: s0 = sp + 0x7f8\n  2611: sp = sp + 0xfffffffffffff800\n  2615: sp = sp + 0xfffffffffffffcd8\n  2619: sp = sp & 0xffffffffffffffe0\n  2622: a0 = i32 [0x20280]\n  2627: jump @73 if a0 >=u 4\n      : @72 (gas: 1)\n  2631: jump @375\n      : @73 (gas: 5)\n  2635: a0 = sp + 0x1000\n  2639: i32 a0 = a0 + 0x220\n  2643: a1 = 0\n  2645: ecalli 1 // 'call_data_load'\n  2647: fallthrough\n      : @74 (gas: 6)\n  2648: a2 = sp + 0x7ff\n  2652: a2 = a2 + 0x360\n  2656: a0 = u32 [a2 + 0x6dd]\n  2660: a0 = a0 << 0x20\n  2663: a1 = 0xd622e5a400000000\n  2673: jump @76 if a0 == a1\n      : @75 (gas: 1)\n  2676: jump @375\n      : @76 (gas: 8)\n  2680: u64 [a2 + 1785] = 0\n  2684: u64 [a2 + 1777] = 0\n  2688: u64 [a2 + 1769] = 0\n  2692: u64 [a2 + 1761] = 0\n  2696: a0 = sp + 0x1000\n  2700: i32 a0 = a0 + 0x240\n  2704: ecalli 7 // 'value_transferred'\n  2706: fallthrough\n      : @77 (gas: 10)\n  2707: a3 = sp + 0x7ff\n  2711: a3 = a3 + 0x360\n  2715: a0 = u64 [a3 + 0x6f1]\n  2719: a1 = u64 [a3 + 0x6f9]\n  2723: a2 = u64 [a3 + 0x6e9]\n  2727: a3 = u64 [a3 + 0x6e1]\n  2731: a1 = a1 | a2\n  2734: a0 = a0 | a3\n  2737: a0 = a0 | a1\n  2740: jump @79 if a0 == 0\n      : @78 (gas: 1)\n  2743: jump @376\n      : @79 (gas: 2)\n  2747: a0 = i32 [0x20280]\n  2752: jump @81 if a0 >u 99\n      : @80 (gas: 1)\n  2756: jump @377\n      : @81 (gas: 3)\n  2760: s1 = 0x20284\n  2765: a0 = i32 [0x20284]\n  2770: jump @83 if a0 >u 95\n      : @82 (gas: 2)\n  2774: u32 [0x20284] = 0x60\n  2780: fallthrough\n      : @83 (gas: 12)\n  2781: a1 = 0x20290\n  2786: u64 [0x202e0] = 0\n  2791: u64 [0x202d8] = 0\n  2796: u64 [0x202d0] = 0\n  2801: a0 = 0xc000000000000000\n  2811: u64 [sp + 0x8] = a1\n  2814: u64 [0x202e8] = a0\n  2819: a0 = sp + 0x1000\n  2823: i32 a0 = a0 + 0x260\n  2827: a1 = 0x4\n  2830: ecalli 1 // 'call_data_load'\n  2832: fallthrough\n      : @84 (gas: 8)\n  2833: a3 = sp + 0x7ff\n  2837: a3 = a3 + 0x360\n  2841: a2 = u64 [a3 + 0x719]\n  2845: a1 = u64 [a3 + 0x711]\n  2849: a0 = u64 [a3 + 0x709]\n  2853: a4 = i32 [0x20284]\n  2858: a3 = u64 [a3 + 0x701]\n  2862: jump @86 if a4 >u 159\n      : @85 (gas: 2)\n  2867: u32 [0x20284] = 0xa0\n  2874: fallthrough\n      : @86 (gas: 14)\n  2875: a2 = reverse a2\n  2877: a1 = reverse a1\n  2879: a0 = reverse a0\n  2881: a3 = reverse a3\n  2883: a4 = u64 [sp + 0x8]\n  2886: u64 [a4 + 0x98] = a3\n  2890: u64 [a4 + 0x90] = a0\n  2894: u64 [a4 + 0x88] = a1\n  2898: u64 [a4 + 0x80] = a2\n  2902: a0 = sp + 0x1000\n  2906: i32 a0 = a0 + 0x260\n  2910: a1 = 0x24\n  2913: ecalli 1 // 'call_data_load'\n  2915: fallthrough\n      : @87 (gas: 8)\n  2916: a3 = sp + 0x7ff\n  2920: a3 = a3 + 0x360\n  2924: a2 = u64 [a3 + 0x719]\n  2928: a1 = u64 [a3 + 0x711]\n  2932: a0 = u64 [a3 + 0x709]\n  2936: a4 = i32 [0x20284]\n  2941: a3 = u64 [a3 + 0x701]\n  2945: jump @89 if a4 >u 191\n      : @88 (gas: 2)\n  2950: u32 [0x20284] = 0xc0\n  2957: fallthrough\n      : @89 (gas: 399)\n  2958: u64 [sp + 0x18] = s1\n  2961: a2 = reverse a2\n  2963: a1 = reverse a1\n  2965: a0 = reverse a0\n  2967: a3 = reverse a3\n  2969: a4 = u64 [sp + 0x8]\n  2972: u64 [a4 + 0xb8] = a3\n  2976: u64 [a4 + 0xb0] = a0\n  2980: u64 [a4 + 0xa8] = a1\n  2984: u64 [a4 + 0xa0] = a2\n  2988: a0 = sp + 0x1000\n  2992: i32 a0 = a0 + 0x280\n  2996: a1 = 0x44\n  2999: ecalli 1 // 'call_data_load'\n  3001: a1 = sp + 0x7ff\n  3005: a1 = a1 + 0x360\n  3009: a0 = u64 [a1 + 0x739]\n  3013: u64 [sp + 0x270] = a0\n  3017: a0 = u64 [a1 + 0x731]\n  3021: u64 [sp + 0x280] = a0\n  3025: a0 = u64 [a1 + 0x729]\n  3029: u64 [sp + 0x2c8] = a0\n  3033: a0 = u64 [a1 + 0x721]\n  3037: u64 [sp + 0x2a8] = a0\n  3041: u64 [a1 + 1881] = 0\n  3045: u64 [a1 + 1873] = 0\n  3049: u64 [a1 + 1865] = 0\n  3053: u64 [a1 + 1857] = 0\n  3057: u64 [a1 + 1913] = 0\n  3061: u64 [a1 + 1905] = 0\n  3065: u64 [a1 + 1897] = 0\n  3069: u64 [a1 + 1889] = 0\n  3073: u32 [a1 + 1921] = 0x20\n  3078: s1 = a1\n  3080: a0 = sp + 0x1000\n  3084: i32 a1 = a0 + 0x2a0\n  3088: a0 = sp + 0x1000\n  3092: i32 a3 = a0 + 0x2c0\n  3096: a0 = sp + 0x1000\n  3100: i32 a4 = a0 + 0x2e0\n  3104: a2 = 0xffffffffffffffff\n  3107: a0 = 0\n  3109: ecalli 3 // 'get_storage'\n  3111: a0 = u64 [s1 + 0x769]\n  3115: u64 [sp + 0x3c0] = a0\n  3119: a1 = u64 [s1 + 0x761]\n  3123: u64 [sp + 0x3d0] = a1\n  3127: u64 [sp + 936] = 0\n  3131: u64 [sp + 736] = 0\n  3135: u64 [sp + 696] = 0\n  3139: u64 [sp + 688] = 0\n  3143: u64 [sp + 664] = 0\n  3147: u64 [sp + 760] = 0\n  3151: u64 [sp + 744] = 0\n  3155: u64 [sp + 752] = 0\n  3159: u64 [sp + 720] = 0\n  3163: a3 = reverse a0\n  3165: u64 [sp + 0x3c8] = a3\n  3169: t2 = reverse a1\n  3171: a1 = t2 ^ 0x1\n  3174: a1 = a1 | a3\n  3177: a2 = t2 <u 0x1\n  3180: a2 = 0 if a1 == 0\n  3182: a1 = 0x40\n  3185: a4 = 0x80\n  3189: a4 = a1 if a2 == 0\n  3192: u64 [sp + 0x3b8] = a4\n  3196: a1 = 0 if a2 != 0\n  3198: a2 = t2 >> a1\n  3201: a3 = a3 >> a1\n  3204: a1 = a1 + 0xffffffffffffffc0\n  3207: a4 = a1 <s 0\n  3209: a3 = a2 if a4 == 0\n  3212: a1 = a1 >>a 0x3f\n  3215: a1 = a1 & a2\n  3218: a2 = a3 >> 0x20\n  3221: a4 = a1 >>r 0x20\n  3224: a2 = a2 | a4\n  3227: u64 [sp + 0x3b0] = a2\n  3231: a2 = a2 >u 0\n  3233: a2 = a2 << 0x5\n  3236: a4 = a2 ^ 0x3f\n  3239: a5 = a1 << 0x1\n  3242: a4 = a5 << a4\n  3245: a3 = a3 >> a2\n  3248: a3 = a3 | a4\n  3251: a1 = a1 >> a2\n  3254: a2 = a3 >> 0x10\n  3257: a4 = a1 >>r 0x10\n  3260: a2 = a2 | a4\n  3263: u64 [sp + 0x3a0] = a2\n  3267: a2 = a2 >u 0\n  3269: a2 = a2 << 0x4\n  3272: a4 = a2 ^ 0x3f\n  3275: a5 = a1 << 0x1\n  3278: a4 = a5 << a4\n  3281: a3 = a3 >> a2\n  3284: a3 = a3 | a4\n  3287: t0 = a1 >> a2\n  3290: a0 = a3 <u 0x100\n  3294: u64 [sp + 0x390] = a0\n  3298: a1 = a0 ^ 0x1\n  3301: a2 = t0 >u 0\n  3303: a2 = a1 if t0 == 0\n  3306: a2 = a2 << 0x3\n  3309: a1 = a2 ^ 0x3f\n  3312: a5 = t0 << 0x1\n  3315: a1 = a5 << a1\n  3318: a3 = a3 >> a2\n  3321: a1 = a1 | a3\n  3324: a3 = t0 >> a2\n  3327: t1 = a1 <u 0x10\n  3330: a2 = t1 ^ 0x1\n  3333: a5 = a3 >u 0\n  3335: a5 = a2 if a3 == 0\n  3338: a5 = a5 << 0x2\n  3341: a2 = a5 ^ 0x3f\n  3344: s1 = a3 << 0x1\n  3347: s1 = s1 << a2\n  3350: a1 = a1 >> a5\n  3353: s1 = s1 | a1\n  3356: a2 = a3 >> a5\n  3359: a4 = s1 <u 0x4\n  3362: a5 = a4 ^ 0x1\n  3365: ra = a2 >u 0\n  3367: ra = a5 if a2 == 0\n  3370: ra = ra << 0x1\n  3373: a5 = ra ^ 0x3f\n  3376: a1 = a2 << 0x1\n  3379: a1 = a1 << a5\n  3382: a5 = s1 >> ra\n  3385: a1 = a1 | a5\n  3388: a5 = a2 >> ra\n  3391: s1 = a1 <u 0x2\n  3394: s1 = 0 if a5 != 0\n  3396: a5 = -a1\n  3398: a1 = sp + 0x7ff\n  3402: a1 = a1 + 0x360\n  3406: a0 = u64 [a1 + 0x779]\n  3410: u64 [sp + 0x398] = a0\n  3414: ra = u64 [a1 + 0x771]\n  3418: a5 = 0xfffffffffffffffe if s1 == 0\n  3421: a1 = u64 [sp + 0x3c0]\n  3425: a1 = a1 | a0\n  3428: s1 = u64 [sp + 0x3d0]\n  3432: s1 = s1 | ra\n  3435: a0 = ra\n  3437: a1 = a1 | s1\n  3440: u64 [sp + 0x10] = a1\n  3443: a1 = 0xffffffffffffffe0\n  3446: s1 = u64 [sp + 0x3b0]\n  3450: a1 = 0 if s1 == 0\n  3452: s1 = u64 [sp + 0x3b8]\n  3456: a1 = a1 + s1\n  3459: s1 = 0xfffffffffffffff0\n  3462: ra = u64 [sp + 0x3a0]\n  3466: s1 = 0 if ra == 0\n  3468: ra = a1 + s1\n  3471: a1 = u64 [sp + 0x390]\n  3475: a1 = 0 if t0 != 0\n  3477: s1 = 0xfffffffffffffff8\n  3480: s1 = 0 if a1 != 0\n  3482: a1 = ra + s1\n  3485: t1 = 0 if a3 != 0\n  3487: a3 = 0xfffffffffffffffc\n  3490: a3 = 0 if t1 != 0\n  3492: a1 = a1 + a3\n  3495: a4 = 0 if a2 != 0\n  3497: a2 = 0xfffffffffffffffe\n  3500: a2 = 0 if a4 != 0\n  3502: a1 = a1 + a2\n  3505: ra = a5 + a1\n  3508: a1 = t2 >> 0x38\n  3511: t1 = sp + 0x7ff\n  3515: t1 = t1 + 0x360\n  3519: u8 [t1 + 0x6c0] = a1\n  3523: a1 = t2 >> 0x30\n  3526: u8 [t1 + 0x6bf] = a1\n  3530: a1 = t2 >> 0x28\n  3533: u8 [t1 + 0x6be] = a1\n  3537: a1 = t2 >> 0x20\n  3540: u8 [t1 + 0x6bd] = a1\n  3544: a1 = t2 >> 0x18\n  3547: u8 [t1 + 0x6bc] = a1\n  3551: a1 = t2 >> 0x10\n  3554: u8 [t1 + 0x6bb] = a1\n  3558: a1 = t2 >> 0x8\n  3561: u8 [t1 + 0x6ba] = a1\n  3565: a3 = u64 [sp + 0x3c8]\n  3569: a1 = a3 >> 0x38\n  3572: u8 [t1 + 0x6b8] = a1\n  3576: a1 = a3 >> 0x30\n  3579: u8 [t1 + 0x6b7] = a1\n  3583: a1 = a3 >> 0x28\n  3586: u8 [t1 + 0x6b6] = a1\n  3590: a1 = a3 >> 0x20\n  3593: u8 [t1 + 0x6b5] = a1\n  3597: a1 = a3 >> 0x18\n  3600: u8 [t1 + 0x6b4] = a1\n  3604: a1 = a3 >> 0x10\n  3607: u8 [t1 + 0x6b3] = a1\n  3611: a1 = a3 >> 0x8\n  3614: u8 [t1 + 0x6b2] = a1\n  3618: a2 = reverse a0\n  3620: a1 = a2 >> 0x38\n  3623: u8 [t1 + 0x6b0] = a1\n  3627: a1 = a2 >> 0x30\n  3630: u8 [t1 + 0x6af] = a1\n  3634: a1 = a2 >> 0x28\n  3637: u8 [t1 + 0x6ae] = a1\n  3641: a1 = a2 >> 0x20\n  3644: u8 [t1 + 0x6ad] = a1\n  3648: a1 = a2 >> 0x18\n  3651: u8 [t1 + 0x6ac] = a1\n  3655: a1 = a2 >> 0x10\n  3658: u8 [t1 + 0x6ab] = a1\n  3662: a1 = a2 >> 0x8\n  3665: u8 [t1 + 0x6aa] = a1\n  3669: a0 = u64 [sp + 0x398]\n  3673: a0 = reverse a0\n  3675: a1 = a0 >> 0x38\n  3678: u8 [t1 + 0x6a8] = a1\n  3682: a1 = a0 >> 0x30\n  3685: u8 [t1 + 0x6a7] = a1\n  3689: a1 = a0 >> 0x28\n  3692: u8 [t1 + 0x6a6] = a1\n  3696: a1 = a0 >> 0x20\n  3699: u8 [t1 + 0x6a5] = a1\n  3703: a1 = a0 >> 0x18\n  3706: u8 [t1 + 0x6a4] = a1\n  3710: a1 = a0 >> 0x10\n  3713: u8 [t1 + 0x6a3] = a1\n  3717: a1 = a0 >> 0x8\n  3720: u8 [t1 + 0x6a2] = a1\n  3724: u8 [t1 + 1696] = 0\n  3728: u8 [t1 + 1695] = 0\n  3732: u8 [t1 + 1694] = 0\n  3736: u8 [t1 + 1693] = 0\n  3740: u8 [t1 + 1692] = 0\n  3744: u8 [t1 + 1691] = 0\n  3748: u8 [t1 + 1690] = 0\n  3752: u8 [t1 + 1689] = 0\n  3756: u8 [t1 + 1688] = 0\n  3760: u8 [t1 + 1687] = 0\n  3764: u8 [t1 + 1686] = 0\n  3768: u8 [t1 + 1685] = 0\n  3772: u8 [t1 + 1684] = 0\n  3776: u8 [t1 + 1683] = 0\n  3780: u8 [t1 + 1682] = 0\n  3784: u8 [t1 + 1681] = 0\n  3788: u8 [t1 + 1680] = 0\n  3792: u8 [t1 + 1679] = 0\n  3796: u8 [t1 + 1678] = 0\n  3800: u8 [t1 + 1677] = 0\n  3804: u8 [t1 + 1676] = 0\n  3808: u8 [t1 + 1675] = 0\n  3812: u8 [t1 + 1674] = 0\n  3816: u8 [t1 + 1673] = 0\n  3820: u8 [t1 + 1672] = 0\n  3824: u8 [t1 + 1671] = 0\n  3828: u8 [t1 + 1670] = 0\n  3832: u8 [t1 + 1669] = 0\n  3836: u8 [t1 + 1668] = 0\n  3840: u8 [t1 + 1667] = 0\n  3844: u8 [t1 + 1666] = 0\n  3848: u8 [t1 + 1665] = 0\n  3852: u8 [t1 + 0x6b9] = t2\n  3856: u8 [t1 + 0x6b1] = a3\n  3860: u64 [sp + 0x3d0] = a2\n  3864: u8 [t1 + 0x6a9] = a2\n  3868: u64 [sp + 0x3c0] = a0\n  3872: u8 [t1 + 0x6a1] = a0\n  3876: a0 = ra << 0x38\n  3879: u64 [sp + 0x138] = a0\n  3883: a0 = a0 >> 0x3b\n  3886: a1 = sp + 0x1200\n  3890: u64 [sp + 0x1f0] = a0\n  3894: a1 = a1 - a0\n  3897: a2 = u8 [a1 + 0x19]\n  3900: a3 = u8 [a1 + 0x18]\n  3903: a4 = u8 [a1 + 0x1a]\n  3906: a5 = u8 [a1 + 0x1b]\n  3909: a2 = a2 << 0x8\n  3912: a2 = a2 | a3\n  3915: a4 = a4 << 0x10\n  3918: a5 = a5 << 0x18\n  3921: a4 = a4 | a5\n  3924: a2 = a2 | a4\n  3927: a3 = u8 [a1 + 0x1d]\n  3930: a4 = u8 [a1 + 0x1c]\n  3933: a5 = u8 [a1 + 0x1e]\n  3936: s1 = u8 [a1 + 0x1f]\n  3939: a3 = a3 << 0x8\n  3942: a3 = a3 | a4\n  3945: a5 = a5 << 0x10\n  3948: s1 = s1 << 0x18\n  3951: a5 = a5 | s1\n  3954: a3 = a3 | a5\n  3957: a3 = a3 << 0x20\n  3960: t0 = a3 | a2\n  3963: a2 = u8 [a1 + 0x11]\n  3966: a4 = u8 [a1 + 0x10]\n  3969: a5 = u8 [a1 + 0x12]\n  3972: s1 = u8 [a1 + 0x13]\n  3975: a2 = a2 << 0x8\n  3978: a2 = a2 | a4\n  3981: a5 = a5 << 0x10\n  3984: s1 = s1 << 0x18\n  3987: a5 = a5 | s1\n  3990: a2 = a2 | a5\n  3993: a4 = u8 [a1 + 0x15]\n  3996: a5 = u8 [a1 + 0x14]\n  3999: s1 = u8 [a1 + 0x16]\n  4002: a3 = u8 [a1 + 0x17]\n  4005: a4 = a4 << 0x8\n  4008: a4 = a4 | a5\n  4011: s1 = s1 << 0x10\n  4014: a3 = a3 << 0x18\n  4017: a3 = a3 | s1\n  4020: a3 = a3 | a4\n  4023: a3 = a3 << 0x20\n  4026: a2 = a2 | a3\n  4029: u64 [sp + 0x1e0] = ra\n  4033: a0 = ra & 0x7\n  4036: a3 = t0 << a0\n  4039: a4 = a2 >> 0x1\n  4042: a5 = a0 ^ 0x3f\n  4045: u64 [sp + 0x1f8] = a5\n  4049: a4 = a4 >> a5\n  4052: a3 = a3 | a4\n  4055: u64 [sp + 0x3b0] = a3\n  4059: a3 = u8 [a1 + 0x9]\n  4062: a4 = u8 [a1 + 0x8]\n  4065: a5 = u8 [a1 + 0xa]\n  4068: s1 = u8 [a1 + 0xb]\n  4071: a3 = a3 << 0x8\n  4074: a3 = a3 | a4\n  4077: a5 = a5 << 0x10\n  4080: s1 = s1 << 0x18\n  4083: a5 = a5 | s1\n  4086: t0 = a5 | a3\n  4089: a4 = u8 [a1 + 0xd]\n  4092: a5 = u8 [a1 + 0xc]\n  4095: s1 = u8 [a1 + 0xe]\n  4098: a3 = u8 [a1 + 0xf]\n  4101: a4 = a4 << 0x8\n  4104: a4 = a4 | a5\n  4107: s1 = s1 << 0x10\n  4110: a3 = a3 << 0x18\n  4113: a3 = a3 | s1\n  4116: a3 = a3 | a4\n  4119: a3 = a3 << 0x20\n  4122: a3 = a3 | t0\n  4125: ra = u64 [sp + 0x2f0]\n  4129: a2 = a2 << a0\n  4132: a4 = a3 >> 0x1\n  4135: a5 = a0 ^ 0xffffffffffffffff\n  4138: u64 [sp + 0x1e8] = a5\n  4142: a4 = a4 >> a5\n  4145: a2 = a2 | a4\n  4148: u64 [sp + 0x3b8] = a2\n  4152: a2 = u8 [a1 + 0x1]\n  4155: a4 = u8 [a1]\n  4157: a5 = u8 [a1 + 0x2]\n  4160: s1 = u8 [a1 + 0x3]\n  4163: a2 = a2 << 0x8\n  4166: a2 = a2 | a4\n  4169: a5 = a5 << 0x10\n  4172: s1 = s1 << 0x18\n  4175: a5 = a5 | s1\n  4178: a2 = a2 | a5\n  4181: a4 = u8 [a1 + 0x5]\n  4184: a5 = u8 [a1 + 0x4]\n  4187: s1 = u8 [a1 + 0x6]\n  4190: a1 = u8 [a1 + 0x7]\n  4193: a4 = a4 << 0x8\n  4196: a4 = a4 | a5\n  4199: s1 = s1 << 0x10\n  4202: a1 = a1 << 0x18\n  4205: a1 = a1 | s1\n  4208: a1 = a1 | a4\n  4211: a1 = a1 << 0x20\n  4214: a1 = a1 | a2\n  4217: a2 = a3 << a0\n  4220: a3 = a1 >> 0x1\n  4223: a4 = u64 [sp + 0x1f8]\n  4227: a3 = a3 >> a4\n  4230: s1 = u64 [sp + 0x3a8]\n  4234: a5 = u64 [sp + 0x2f8]\n  4238: a2 = a2 | a3\n  4241: u64 [sp + 0x340] = a2\n  4245: u64 [sp + 0x200] = a0\n  4249: a0 = a1 << a0\n  4252: u64 [sp + 0x338] = a0\n  4256: a0 = u64 [sp + 0x10]\n  4259: a1 = a0 >u 0\n  4261: a4 = 0x1\n  4264: u64 [sp + 0x3d8] = t2\n  4268: jump @92\n      : @90 (gas: 9)\n  4270: u64 [sp + 0x2d0] = s1\n  4274: u64 [sp + 0x2e8] = a2\n  4278: a1 = 0x1\n  4281: a0 = u64 [sp + 0x20]\n  4284: a0 = a0 & a1\n  4287: s1 = 0x20\n  4290: a4 = 0\n  4292: t2 = u64 [sp + 0x3d8]\n  4296: jump @92 if a0 != 0\n      : @91 (gas: 1)\n  4299: jump @367\n      : @92 (gas: 6)\n  4303: u64 [sp + 0x2f0] = ra\n  4307: a0 = u64 [sp + 0x18]\n  4310: a3 = i32 [a0]\n  4312: a2 = s1 + 0xbf\n  4316: a2 = a2 & 0xe0\n  4320: jump @94 if a3 >=u a2\n      : @93 (gas: 2)\n  4323: u32 [a0] = a2\n  4325: fallthrough\n      : @94 (gas: 3)\n  4326: a1 = a1 & 0x1\n  4329: t0 = u64 [sp + 0x3c8]\n  4333: jump @96 if a1 != 0\n      : @95 (gas: 1)\n  4336: jump @373\n      : @96 (gas: 3)\n  4340: u64 [sp + 0x20] = a4\n  4343: a1 = u64 [sp + 0x10]\n  4346: jump @103 if a1 == 0\n      : @97 (gas: 92)\n  4350: u64 [sp + 0x2f8] = a5\n  4354: a1 = clz t0\n  4356: a1 = a1 + 0x40\n  4359: a5 = clz t2\n  4361: a5 = a1 if t2 == 0\n  4364: a0 = u64 [sp + 0x3c0]\n  4368: a1 = clz a0\n  4370: a1 = a1 + 0x40\n  4373: a0 = u64 [sp + 0x3d0]\n  4377: a2 = clz a0\n  4379: a2 = a1 if a0 == 0\n  4382: a1 = a2 + 0x80\n  4386: a3 = t0 | t2\n  4389: a5 = a1 if a3 == 0\n  4392: a0 = a1 <u a2\n  4395: u64 [sp + 0x1d8] = a3\n  4399: a0 = 0 if a3 != 0\n  4401: ra = u64 [sp + 0x2b0]\n  4405: a1 = clz ra\n  4407: a1 = a1 + 0x40\n  4410: t1 = u64 [sp + 0x298]\n  4414: a2 = clz t1\n  4416: a2 = a1 if t1 == 0\n  4419: a1 = u64 [sp + 0x2e0]\n  4423: a1 = clz a1\n  4425: a1 = a1 + 0x40\n  4428: u64 [sp + 0x3a8] = s1\n  4432: t2 = u64 [sp + 0x2b8]\n  4436: a3 = clz t2\n  4438: a3 = a1 if t2 == 0\n  4441: a1 = a3 + 0x80\n  4445: a4 = ra | t1\n  4448: a2 = a1 if a4 == 0\n  4451: a3 = a1 <u a3\n  4454: a3 = 0 if a4 != 0\n  4456: a1 = a0 ^ a3\n  4459: s1 = a0 <u a3\n  4462: t0 = a5 <u a2\n  4465: s1 = t0 if a1 == 0\n  4468: a1 = s1 <u 0x1\n  4471: a1 = a1 + 0xffffffffffffffff\n  4474: a4 = -s1\n  4476: u64 [sp + 0x330] = a0\n  4480: a3 = a0 - a3\n  4483: a3 = a3 - t0\n  4486: u64 [sp + 0x328] = a5\n  4490: a5 = a5 - a2\n  4493: u64 [sp + 0x3a0] = a4\n  4497: a2 = a4 >u 0\n  4499: a0 = a1 >u 0\n  4501: u64 [sp + 0x390] = a1\n  4505: a0 = a2 if a1 == 0\n  4508: u64 [sp + 0x398] = a5\n  4512: a2 = a5 <u 0x100\n  4516: a2 = a2 ^ 0x1\n  4519: a4 = a3 >u 0\n  4521: a2 = a4 if a3 != 0\n  4524: a2 = a0 if s1 != 0\n  4527: a0 = u64 [sp + 0x3c0]\n  4531: a1 = u64 [sp + 0x3c8]\n  4535: a0 = a0 | a1\n  4538: a1 = u64 [sp + 0x3d0]\n  4542: a4 = u64 [sp + 0x3d8]\n  4546: a4 = a4 | a1\n  4549: a0 = a0 | a4\n  4552: a1 = u64 [sp + 0x2e0]\n  4556: a4 = a1 | ra\n  4559: s1 = t2 | t1\n  4562: a4 = a4 | s1\n  4565: a5 = u64 [sp + 0x3a8]\n  4569: s1 = a5 | 0x80\n  4573: a5 = u64 [sp + 0x8]\n  4576: s1 = s1 + a5\n  4579: a5 = a0 <u 0x1\n  4582: a0 = a4 <u 0x1\n  4585: u64 [sp + 0x320] = a5\n  4589: a0 = a0 | a5\n  4592: a5 = t1\n  4594: t1 = a1\n  4596: a0 = a0 | a2\n  4599: t0 = u64 [s1 + 0x18]\n  4602: a2 = u64 [s1 + 0x10]\n  4605: a1 = u64 [s1 + 0x8]\n  4608: s1 = u64 [s1]\n  4610: a5 = 0 if a0 != 0\n  4612: ra = 0 if a0 != 0\n  4614: a4 = t2\n  4616: a4 = 0 if a0 != 0\n  4618: t1 = 0 if a0 != 0\n  4620: u64 [sp + 0x2d8] = a2\n  4624: u64 [sp + 0x2c0] = a1\n  4628: jump @109 if a0 != 0\n      : @98 (gas: 8)\n  4632: a0 = u64 [sp + 0x398]\n  4636: a0 = a0 ^ 0xff\n  4640: a1 = u64 [sp + 0x3a0]\n  4644: a0 = a0 | a1\n  4647: t2 = u64 [sp + 0x390]\n  4651: a2 = a3 | t2\n  4654: a0 = a0 | a2\n  4657: jump @109 if a0 == 0\n      : @99 (gas: 266)\n  4661: u64 [sp + 0x290] = s1\n  4665: u64 [sp + 0x2a0] = t0\n  4669: a2 = u64 [sp + 0x398]\n  4673: a1 = a2 + 0x1\n  4676: u64 [sp + 0x3a8] = a1\n  4680: a0 = a1 <u 0x1\n  4683: a0 = a0 + a3\n  4686: u64 [sp + 0x380] = a0\n  4690: a0 = a0 | a1\n  4693: a0 = a0 <u 0x1\n  4696: a1 = u64 [sp + 0x3a0]\n  4700: a0 = a0 + a1\n  4703: u64 [sp + 0x370] = a0\n  4707: a0 = a0 <u a1\n  4710: a0 = a0 + t2\n  4713: u64 [sp + 0x378] = a0\n  4717: t0 = 0xff - a2\n  4721: ra = sp + 0x7ff\n  4725: ra = ra + 0x360\n  4729: a0 = u64 [sp + 0x2e0]\n  4733: u8 [ra + 0x661] = a0\n  4737: u8 [ra + 1632] = 0\n  4741: u8 [ra + 1631] = 0\n  4745: u8 [ra + 1630] = 0\n  4749: u8 [ra + 1629] = 0\n  4753: u8 [ra + 1628] = 0\n  4757: u8 [ra + 1627] = 0\n  4761: u8 [ra + 1626] = 0\n  4765: u8 [ra + 1625] = 0\n  4769: u8 [ra + 1624] = 0\n  4773: u8 [ra + 1623] = 0\n  4777: u8 [ra + 1622] = 0\n  4781: u8 [ra + 1621] = 0\n  4785: u8 [ra + 1620] = 0\n  4789: u8 [ra + 1619] = 0\n  4793: u8 [ra + 1618] = 0\n  4797: u8 [ra + 1617] = 0\n  4801: u8 [ra + 1616] = 0\n  4805: u8 [ra + 1615] = 0\n  4809: u8 [ra + 1614] = 0\n  4813: u8 [ra + 1613] = 0\n  4817: u8 [ra + 1612] = 0\n  4821: u8 [ra + 1611] = 0\n  4825: u8 [ra + 1610] = 0\n  4829: u8 [ra + 1609] = 0\n  4833: u8 [ra + 1608] = 0\n  4837: u8 [ra + 1607] = 0\n  4841: u8 [ra + 1606] = 0\n  4845: u8 [ra + 1605] = 0\n  4849: u8 [ra + 1604] = 0\n  4853: u8 [ra + 1603] = 0\n  4857: u8 [ra + 1602] = 0\n  4861: u8 [ra + 1601] = 0\n  4865: a1 = u64 [sp + 0x2b8]\n  4869: u8 [ra + 0x669] = a1\n  4873: a2 = a0 >> 0x38\n  4876: u64 [sp + 0x268] = a2\n  4880: u8 [ra + 0x668] = a2\n  4884: a2 = a0 >> 0x30\n  4887: u64 [sp + 0x260] = a2\n  4891: u8 [ra + 0x667] = a2\n  4895: a2 = a0 >> 0x28\n  4898: u64 [sp + 0x258] = a2\n  4902: u8 [ra + 0x666] = a2\n  4906: a2 = a0 >> 0x20\n  4909: u64 [sp + 0x250] = a2\n  4913: u8 [ra + 0x665] = a2\n  4917: a2 = a0 >> 0x18\n  4920: u64 [sp + 0x248] = a2\n  4924: u8 [ra + 0x664] = a2\n  4928: a2 = a0 >> 0x10\n  4931: u64 [sp + 0x240] = a2\n  4935: u8 [ra + 0x663] = a2\n  4939: u64 [sp + 0x2e0] = a0\n  4943: a0 = a0 >> 0x8\n  4946: u64 [sp + 0x238] = a0\n  4950: u8 [ra + 0x662] = a0\n  4954: a0 = u64 [sp + 0x2b0]\n  4958: u8 [ra + 0x671] = a0\n  4962: a2 = a1 >> 0x38\n  4965: u64 [sp + 0x230] = a2\n  4969: u8 [ra + 0x670] = a2\n  4973: a2 = a1 >> 0x30\n  4976: u64 [sp + 0x228] = a2\n  4980: u8 [ra + 0x66f] = a2\n  4984: a2 = a1 >> 0x28\n  4987: u64 [sp + 0x220] = a2\n  4991: u8 [ra + 0x66e] = a2\n  4995: a2 = a1 >> 0x20\n  4998: u64 [sp + 0x218] = a2\n  5002: u8 [ra + 0x66d] = a2\n  5006: a2 = a1 >> 0x18\n  5009: u64 [sp + 0x210] = a2\n  5013: u8 [ra + 0x66c] = a2\n  5017: a2 = a1 >> 0x10\n  5020: u64 [sp + 0x208] = a2\n  5024: u8 [ra + 0x66b] = a2\n  5028: u64 [sp + 0x2b8] = a1\n  5032: a1 = a1 >> 0x8\n  5035: u64 [sp + 0x1d0] = a1\n  5039: u8 [ra + 0x66a] = a1\n  5043: t1 = u64 [sp + 0x298]\n  5047: u8 [ra + 0x679] = t1\n  5051: a1 = a0 >> 0x38\n  5054: u64 [sp + 0x1c8] = a1\n  5058: u8 [ra + 0x678] = a1\n  5062: a1 = a0 >> 0x30\n  5065: u64 [sp + 0x1c0] = a1\n  5069: u8 [ra + 0x677] = a1\n  5073: a1 = a0 >> 0x28\n  5076: u64 [sp + 0x1b8] = a1\n  5080: u8 [ra + 0x676] = a1\n  5084: a1 = a0 >> 0x20\n  5087: u64 [sp + 0x1b0] = a1\n  5091: u8 [ra + 0x675] = a1\n  5095: a1 = a0 >> 0x18\n  5098: u64 [sp + 0x1a8] = a1\n  5102: u8 [ra + 0x674] = a1\n  5106: a1 = a0 >> 0x10\n  5109: u64 [sp + 0x358] = a1\n  5113: u8 [ra + 0x673] = a1\n  5117: u64 [sp + 0x2b0] = a0\n  5121: a0 = a0 >> 0x8\n  5124: u64 [sp + 0x350] = a0\n  5128: u8 [ra + 0x672] = a0\n  5132: a0 = t1 >> 0x38\n  5135: u64 [sp + 0x348] = a0\n  5139: u8 [ra + 0x680] = a0\n  5143: a0 = t1 >> 0x30\n  5146: u64 [sp + 0x318] = a0\n  5150: u8 [ra + 0x67f] = a0\n  5154: a0 = t1 >> 0x28\n  5157: u64 [sp + 0x310] = a0\n  5161: u8 [ra + 0x67e] = a0\n  5165: a0 = t1 >> 0x20\n  5168: u64 [sp + 0x308] = a0\n  5172: u8 [ra + 0x67d] = a0\n  5176: a0 = t1 >> 0x18\n  5179: u64 [sp + 0x300] = a0\n  5183: u8 [ra + 0x67c] = a0\n  5187: a0 = t1 >> 0x10\n  5190: u64 [sp + 0x288] = a0\n  5194: u8 [ra + 0x67b] = a0\n  5198: a0 = t1 >> 0x8\n  5201: u64 [sp + 0x278] = a0\n  5205: u8 [ra + 0x67a] = a0\n  5209: a0 = t0 << 0x38\n  5212: a0 = a0 >> 0x3b\n  5215: a4 = sp + 0x11c0\n  5219: a4 = a4 - a0\n  5222: a0 = u8 [a4 + 0x19]\n  5225: a2 = u8 [a4 + 0x18]\n  5228: a3 = u8 [a4 + 0x1a]\n  5231: a5 = u8 [a4 + 0x1b]\n  5234: a0 = a0 << 0x8\n  5237: a0 = a0 | a2\n  5240: a3 = a3 << 0x10\n  5243: a5 = a5 << 0x18\n  5246: a3 = a3 | a5\n  5249: a0 = a0 | a3\n  5252: a2 = u8 [a4 + 0x1d]\n  5255: a3 = u8 [a4 + 0x1c]\n  5258: a5 = u8 [a4 + 0x1e]\n  5261: s1 = u8 [a4 + 0x1f]\n  5264: a2 = a2 << 0x8\n  5267: a2 = a2 | a3\n  5270: a5 = a5 << 0x10\n  5273: s1 = s1 << 0x18\n  5276: a5 = a5 | s1\n  5279: a2 = a2 | a5\n  5282: a2 = a2 << 0x20\n  5285: a0 = a0 | a2\n  5288: a2 = u8 [a4 + 0x11]\n  5291: a3 = u8 [a4 + 0x10]\n  5294: a5 = u8 [a4 + 0x12]\n  5297: s1 = u8 [a4 + 0x13]\n  5300: a2 = a2 << 0x8\n  5303: a2 = a2 | a3\n  5306: a5 = a5 << 0x10\n  5309: s1 = s1 << 0x18\n  5312: a5 = a5 | s1\n  5315: a2 = a2 | a5\n  5318: a3 = u8 [a4 + 0x15]\n  5321: a5 = u8 [a4 + 0x14]\n  5324: s1 = u8 [a4 + 0x16]\n  5327: a1 = u8 [a4 + 0x17]\n  5330: a3 = a3 << 0x8\n  5333: a3 = a3 | a5\n  5336: s1 = s1 << 0x10\n  5339: a1 = a1 << 0x18\n  5342: a1 = a1 | s1\n  5345: a1 = a1 | a3\n  5348: a1 = a1 << 0x20\n  5351: t2 = a1 | a2\n  5354: a1 = t0 & 0x7\n  5357: a2 = a0 << a1\n  5360: a3 = t2 >> 0x1\n  5363: t0 = a1 ^ 0x3f\n  5366: a3 = a3 >> t0\n  5369: a2 = a2 | a3\n  5372: u64 [sp + 0x3a0] = a2\n  5376: a2 = u8 [a4 + 0x9]\n  5379: a3 = u8 [a4 + 0x8]\n  5382: s1 = u8 [a4 + 0xa]\n  5385: a0 = u8 [a4 + 0xb]\n  5388: a2 = a2 << 0x8\n  5391: a2 = a2 | a3\n  5394: s1 = s1 << 0x10\n  5397: a0 = a0 << 0x18\n  5400: a0 = a0 | s1\n  5403: a0 = a0 | a2\n  5406: a2 = u8 [a4 + 0xd]\n  5409: a3 = u8 [a4 + 0xc]\n  5412: s1 = u8 [a4 + 0xe]\n  5415: a5 = u8 [a4 + 0xf]\n  5418: a2 = a2 << 0x8\n  5421: a2 = a2 | a3\n  5424: s1 = s1 << 0x10\n  5427: a5 = a5 << 0x18\n  5430: a5 = a5 | s1\n  5433: a2 = a2 | a5\n  5436: a2 = a2 << 0x20\n  5439: s1 = a2 | a0\n  5442: a0 = s1 >> 0x1\n  5445: a2 = a1 ^ 0xffffffffffffffff\n  5448: a0 = a0 >> a2\n  5451: a2 = t2 << a1\n  5454: a0 = a0 | a2\n  5457: u64 [sp + 0x398] = a0\n  5461: a0 = u8 [a4 + 0x1]\n  5464: a2 = u8 [a4]\n  5466: a3 = u8 [a4 + 0x2]\n  5469: a5 = u8 [a4 + 0x3]\n  5472: a0 = a0 << 0x8\n  5475: a0 = a0 | a2\n  5478: a3 = a3 << 0x10\n  5481: a5 = a5 << 0x18\n  5484: a3 = a3 | a5\n  5487: a0 = a0 | a3\n  5490: a2 = u8 [a4 + 0x5]\n  5493: a3 = u8 [a4 + 0x4]\n  5496: a5 = u8 [a4 + 0x6]\n  5499: a4 = u8 [a4 + 0x7]\n  5502: a2 = a2 << 0x8\n  5505: a2 = a2 | a3\n  5508: a5 = a5 << 0x10\n  5511: a4 = a4 << 0x18\n  5514: a4 = a4 | a5\n  5517: a5 = u64 [sp + 0x378]\n  5521: a2 = a2 | a4\n  5524: a4 = u64 [sp + 0x380]\n  5528: a2 = a2 << 0x20\n  5531: a0 = a0 | a2\n  5534: a2 = a0 >> 0x1\n  5537: a2 = a2 >> t0\n  5540: t0 = u64 [sp + 0x370]\n  5544: a3 = s1 << a1\n  5547: a2 = a2 | a3\n  5550: u64 [sp + 0x388] = a2\n  5554: a2 = a4 | a5\n  5557: a3 = u64 [sp + 0x3a8]\n  5561: a3 = a3 | t0\n  5564: a2 = a2 | a3\n  5567: a0 = a0 << a1\n  5570: u64 [sp + 0x390] = a0\n  5574: jump @107 if a2 == 0\n      : @100 (gas: 224)\n  5578: u64 [sp + 872] = 0\n  5582: u64 [sp + 864] = 0\n  5586: a0 = u64 [sp + 0x268]\n  5590: u8 [ra + 0x608] = a0\n  5594: a0 = u64 [sp + 0x260]\n  5598: u8 [ra + 0x607] = a0\n  5602: a0 = u64 [sp + 0x258]\n  5606: u8 [ra + 0x606] = a0\n  5610: a0 = u64 [sp + 0x250]\n  5614: u8 [ra + 0x605] = a0\n  5618: a0 = u64 [sp + 0x248]\n  5622: u8 [ra + 0x604] = a0\n  5626: a0 = u64 [sp + 0x240]\n  5630: u8 [ra + 0x603] = a0\n  5634: a0 = u64 [sp + 0x238]\n  5638: u8 [ra + 0x602] = a0\n  5642: a0 = u64 [sp + 0x230]\n  5646: u8 [ra + 0x610] = a0\n  5650: a0 = u64 [sp + 0x228]\n  5654: u8 [ra + 0x60f] = a0\n  5658: a0 = u64 [sp + 0x220]\n  5662: u8 [ra + 0x60e] = a0\n  5666: a0 = u64 [sp + 0x218]\n  5670: u8 [ra + 0x60d] = a0\n  5674: a0 = u64 [sp + 0x210]\n  5678: u8 [ra + 0x60c] = a0\n  5682: a0 = u64 [sp + 0x208]\n  5686: u8 [ra + 0x60b] = a0\n  5690: a0 = u64 [sp + 0x1d0]\n  5694: u8 [ra + 0x60a] = a0\n  5698: a0 = u64 [sp + 0x1c8]\n  5702: u8 [ra + 0x618] = a0\n  5706: a0 = u64 [sp + 0x1c0]\n  5710: u8 [ra + 0x617] = a0\n  5714: a0 = u64 [sp + 0x1b8]\n  5718: u8 [ra + 0x616] = a0\n  5722: a0 = u64 [sp + 0x1b0]\n  5726: u8 [ra + 0x615] = a0\n  5730: a0 = u64 [sp + 0x1a8]\n  5734: u8 [ra + 0x614] = a0\n  5738: u8 [ra + 1600] = 0\n  5742: u8 [ra + 1599] = 0\n  5746: u8 [ra + 1598] = 0\n  5750: u8 [ra + 1597] = 0\n  5754: u8 [ra + 1596] = 0\n  5758: u8 [ra + 1595] = 0\n  5762: u8 [ra + 1594] = 0\n  5766: u8 [ra + 1593] = 0\n  5770: u8 [ra + 1592] = 0\n  5774: u8 [ra + 1591] = 0\n  5778: u8 [ra + 1590] = 0\n  5782: u8 [ra + 1589] = 0\n  5786: u8 [ra + 1588] = 0\n  5790: u8 [ra + 1587] = 0\n  5794: u8 [ra + 1586] = 0\n  5798: u8 [ra + 1585] = 0\n  5802: u8 [ra + 1584] = 0\n  5806: u8 [ra + 1583] = 0\n  5810: u8 [ra + 1582] = 0\n  5814: u8 [ra + 1581] = 0\n  5818: u8 [ra + 1580] = 0\n  5822: u8 [ra + 1579] = 0\n  5826: u8 [ra + 1578] = 0\n  5830: u8 [ra + 1577] = 0\n  5834: u8 [ra + 1576] = 0\n  5838: u8 [ra + 1575] = 0\n  5842: u8 [ra + 1574] = 0\n  5846: u8 [ra + 1573] = 0\n  5850: u8 [ra + 1572] = 0\n  5854: u8 [ra + 1571] = 0\n  5858: u8 [ra + 1570] = 0\n  5862: u8 [ra + 1569] = 0\n  5866: a0 = u64 [sp + 0x2e0]\n  5870: u8 [ra + 0x601] = a0\n  5874: a0 = u64 [sp + 0x2b8]\n  5878: u8 [ra + 0x609] = a0\n  5882: a0 = u64 [sp + 0x2b0]\n  5886: u8 [ra + 0x611] = a0\n  5890: u8 [ra + 0x619] = t1\n  5894: a0 = u64 [sp + 0x358]\n  5898: u8 [ra + 0x613] = a0\n  5902: a0 = u64 [sp + 0x350]\n  5906: u8 [ra + 0x612] = a0\n  5910: a0 = u64 [sp + 0x348]\n  5914: u8 [ra + 0x620] = a0\n  5918: a0 = u64 [sp + 0x318]\n  5922: u8 [ra + 0x61f] = a0\n  5926: a0 = u64 [sp + 0x310]\n  5930: u8 [ra + 0x61e] = a0\n  5934: a0 = u64 [sp + 0x308]\n  5938: u8 [ra + 0x61d] = a0\n  5942: a0 = u64 [sp + 0x300]\n  5946: u8 [ra + 0x61c] = a0\n  5950: a0 = u64 [sp + 0x288]\n  5954: u8 [ra + 0x61b] = a0\n  5958: a0 = u64 [sp + 0x278]\n  5962: u8 [ra + 0x61a] = a0\n  5966: s1 = u64 [sp + 0x3a8]\n  5970: a0 = s1 << 0x38\n  5973: a0 = a0 >> 0x3b\n  5976: a1 = sp + 0x1160\n  5980: a0 = a0 + a1\n  5983: a1 = u8 [a0 + 0x11]\n  5986: a2 = u8 [a0 + 0x10]\n  5989: a3 = u8 [a0 + 0x12]\n  5992: a4 = u8 [a0 + 0x13]\n  5995: a1 = a1 << 0x8\n  5998: a1 = a1 | a2\n  6001: a3 = a3 << 0x10\n  6004: a4 = a4 << 0x18\n  6007: a3 = a3 | a4\n  6010: a1 = a1 | a3\n  6013: a2 = u8 [a0 + 0x15]\n  6016: a3 = u8 [a0 + 0x14]\n  6019: a4 = u8 [a0 + 0x16]\n  6022: a5 = u8 [a0 + 0x17]\n  6025: a2 = a2 << 0x8\n  6028: a2 = a2 | a3\n  6031: a4 = a4 << 0x10\n  6034: a5 = a5 << 0x18\n  6037: a4 = a4 | a5\n  6040: a2 = a2 | a4\n  6043: a2 = a2 << 0x20\n  6046: t0 = a2 | a1\n  6049: a1 = s1 & 0x7\n  6052: t2 = t0 >> a1\n  6055: a2 = u8 [a0 + 0x19]\n  6058: a5 = u8 [a0 + 0x18]\n  6061: s1 = u8 [a0 + 0x1a]\n  6064: a4 = u8 [a0 + 0x1b]\n  6067: a2 = a2 << 0x8\n  6070: a2 = a2 | a5\n  6073: s1 = s1 << 0x10\n  6076: a4 = a4 << 0x18\n  6079: a4 = a4 | s1\n  6082: a2 = a2 | a4\n  6085: a4 = u8 [a0 + 0x1d]\n  6088: a5 = u8 [a0 + 0x1c]\n  6091: s1 = u8 [a0 + 0x1e]\n  6094: a3 = u8 [a0 + 0x1f]\n  6097: a4 = a4 << 0x8\n  6100: a4 = a4 | a5\n  6103: s1 = s1 << 0x10\n  6106: a3 = a3 << 0x18\n  6109: a3 = a3 | s1\n  6112: a3 = a3 | a4\n  6115: a3 = a3 << 0x20\n  6118: t1 = a3 | a2\n  6121: a2 = t1 << 0x1\n  6124: ra = a1 ^ 0x3f\n  6127: a2 = a2 << ra\n  6130: a2 = t2 | a2\n  6133: u64 [sp + 0x358] = a2\n  6137: a2 = u8 [a0 + 0x9]\n  6140: a3 = u8 [a0 + 0x8]\n  6143: a4 = u8 [a0 + 0xa]\n  6146: s1 = u8 [a0 + 0xb]\n  6149: a2 = a2 << 0x8\n  6152: a2 = a2 | a3\n  6155: a4 = a4 << 0x10\n  6158: s1 = s1 << 0x18\n  6161: a4 = a4 | s1\n  6164: a2 = a2 | a4\n  6167: a3 = u8 [a0 + 0xd]\n  6170: a4 = u8 [a0 + 0xc]\n  6173: s1 = u8 [a0 + 0xe]\n  6176: a5 = u8 [a0 + 0xf]\n  6179: a3 = a3 << 0x8\n  6182: a3 = a3 | a4\n  6185: s1 = s1 << 0x10\n  6188: a5 = a5 << 0x18\n  6191: a5 = a5 | s1\n  6194: a3 = a3 | a5\n  6197: a3 = a3 << 0x20\n  6200: t2 = a3 | a2\n  6203: a2 = t2 >> a1\n  6206: t0 = t0 << 0x1\n  6209: a4 = a1 ^ 0xffffffffffffffff\n  6212: a4 = t0 << a4\n  6215: t0 = a2 | a4\n  6218: a2 = u8 [a0 + 0x1]\n  6221: a5 = u8 [a0]\n  6223: s1 = u8 [a0 + 0x2]\n  6226: a3 = u8 [a0 + 0x3]\n  6229: a2 = a2 << 0x8\n  6232: a2 = a2 | a5\n  6235: s1 = s1 << 0x10\n  6238: a3 = a3 << 0x18\n  6241: a3 = a3 | s1\n  6244: a2 = a2 | a3\n  6247: a3 = u8 [a0 + 0x5]\n  6250: a5 = u8 [a0 + 0x4]\n  6253: s1 = u8 [a0 + 0x6]\n  6256: a0 = u8 [a0 + 0x7]\n  6259: a3 = a3 << 0x8\n  6262: a3 = a3 | a5\n  6265: s1 = s1 << 0x10\n  6268: a0 = a0 << 0x18\n  6271: a0 = a0 | s1\n  6274: a0 = a0 | a3\n  6277: a0 = a0 << 0x20\n  6280: a0 = a0 | a2\n  6283: a0 = a0 >> a1\n  6286: t2 = t2 << 0x1\n  6289: a2 = t2 << ra\n  6292: ra = a0 | a2\n  6295: t2 = t1 >> a1\n  6298: a1 = u64 [sp + 0x3c0]\n  6302: a0 = a1 <u 0x1\n  6305: a2 = u64 [sp + 0x3d0]\n  6309: a0 = a2 - a0\n  6312: u64 [sp + 0x318] = a0\n  6316: a0 = a1 | a2\n  6319: a0 = a0 <u 0x1\n  6322: a2 = u64 [sp + 0x3c8]\n  6326: a3 = a2 - a0\n  6329: u64 [sp + 0x310] = a3\n  6333: a0 = a2 <u a0\n  6336: a2 = u64 [sp + 0x3d8]\n  6340: a2 = a2 - a0\n  6343: u64 [sp + 0x308] = a2\n  6347: a1 = a1 + 0xffffffffffffffff\n  6350: u64 [sp + 0x300] = a1\n  6354: fallthrough\n      : @101 (gas: 101)\n  6355: u64 [sp + 840] = 0\n  6359: a1 = ra >> 0x3f\n  6362: a3 = t0 << 0x1\n  6365: t1 = a3 | a1\n  6368: ra = ra << 0x1\n  6371: a4 = u64 [sp + 0x3a0]\n  6375: a1 = a4 >> 0x3f\n  6378: a1 = ra | a1\n  6381: a0 = u64 [sp + 0x318]\n  6385: a2 = a0 ^ t1\n  6388: s1 = a0 <u t1\n  6391: a0 = u64 [sp + 0x300]\n  6395: a3 = a0 <u a1\n  6398: a3 = s1 if a2 != 0\n  6401: a5 = t2 << 0x1\n  6404: a0 = u64 [sp + 0x358]\n  6408: a2 = a0 >> 0x3f\n  6411: ra = a5 | a2\n  6414: u64 [sp + 0x350] = ra\n  6418: a2 = t0 >> 0x3f\n  6421: t0 = a0 << 0x1\n  6424: t2 = t0 | a2\n  6427: a2 = a4 << 0x1\n  6430: a0 = u64 [sp + 0x398]\n  6434: s1 = a0 >> 0x3f\n  6437: a2 = a2 | s1\n  6440: s1 = a0 << 0x1\n  6443: a4 = u64 [sp + 0x388]\n  6447: a0 = a4 >> 0x3f\n  6450: a0 = a0 | s1\n  6453: s1 = a4 << 0x1\n  6456: a4 = u64 [sp + 0x390]\n  6460: a5 = a4 >> 0x3f\n  6463: a5 = a5 | s1\n  6466: s1 = a4 << 0x1\n  6469: a4 = u64 [sp + 0x368]\n  6473: a4 = a4 | s1\n  6476: u64 [sp + 0x390] = a4\n  6480: a4 = u64 [sp + 0x360]\n  6484: a5 = a5 | a4\n  6487: u64 [sp + 0x388] = a5\n  6491: a0 = a0 | a4\n  6494: u64 [sp + 0x398] = a0\n  6498: a2 = a2 | a4\n  6501: u64 [sp + 0x3a0] = a2\n  6505: a2 = u64 [sp + 0x310]\n  6509: a0 = a2 - t2\n  6512: a0 = a0 <u a3\n  6515: a2 = a2 <u t2\n  6518: a3 = u64 [sp + 0x308]\n  6522: a3 = a3 - ra\n  6525: a3 = a3 - a2\n  6528: a3 = a3 - a0\n  6531: a3 = a3 >>a 0x3f\n  6534: a0 = u64 [sp + 0x3c0]\n  6538: ra = a3 & a0\n  6541: a2 = u64 [sp + 0x3d0]\n  6545: a2 = a2 & a3\n  6548: a5 = t1 ^ a2\n  6551: s1 = t1 <u a2\n  6554: t0 = a1 <u ra\n  6557: s1 = t0 if a5 == 0\n  6560: a5 = u64 [sp + 0x3c8]\n  6564: a5 = a5 & a3\n  6567: a0 = t2 - a5\n  6570: a4 = a0 - s1\n  6573: u64 [sp + 0x358] = a4\n  6577: a4 = a0 <u s1\n  6580: a5 = t2 <u a5\n  6583: s1 = u64 [sp + 0x3d8]\n  6587: s1 = s1 & a3\n  6590: a0 = u64 [sp + 0x350]\n  6594: s1 = a0 - s1\n  6597: a5 = s1 - a5\n  6600: t2 = a5 - a4\n  6603: a2 = t1 - a2\n  6606: t0 = a2 - t0\n  6609: ra = a1 - ra\n  6612: s1 = u64 [sp + 0x3a8]\n  6616: a5 = u64 [sp + 0x380]\n  6620: a0 = s1 | a5\n  6623: a0 = a0 <u 0x1\n  6626: a2 = u64 [sp + 0x370]\n  6630: a1 = a2 <u a0\n  6633: a0 = a2 - a0\n  6636: a2 = s1 <u 0x1\n  6639: a5 = a5 - a2\n  6642: a2 = u64 [sp + 0x378]\n  6646: a2 = a2 - a1\n  6649: s1 = s1 + 0xffffffffffffffff\n  6652: u64 [sp + 0x380] = a5\n  6656: u64 [sp + 0x378] = a2\n  6660: a1 = a5 | a2\n  6663: u64 [sp + 0x3a8] = s1\n  6667: a2 = s1 | a0\n  6670: a1 = a1 | a2\n  6673: a3 = a3 & 0x1\n  6676: u64 [sp + 0x368] = a3\n  6680: u64 [sp + 0x370] = a0\n  6684: u64 [sp + 864] = 0\n  6688: jump @101 if a1 != 0\n      : @102 (gas: 1)\n  6692: jump @108\n      : @103 (gas: 4)\n  6695: a4 = 0\n  6697: s1 = 0\n  6699: a3 = 0\n  6701: fallthrough\n      : @104 (gas: 35)\n  6702: u64 [sp + 0x378] = a1\n  6706: u64 [sp + 0x380] = a4\n  6710: u64 [sp + 0x388] = a3\n  6714: a4 = a4 + 0x1\n  6717: u64 [sp + 0x390] = a4\n  6721: a0 = a4 <u 0x1\n  6724: a0 = a0 + a1\n  6727: u64 [sp + 0x3a8] = a0\n  6731: a0 = a0 | a4\n  6734: a0 = a0 <u 0x1\n  6737: a0 = a0 + s1\n  6740: u64 [sp + 0x398] = a0\n  6744: a0 = a0 <u s1\n  6747: a0 = a0 + a3\n  6750: u64 [sp + 0x3a0] = a0\n  6754: a0 = a4 << 0x38\n  6757: u64 [t1 + 0x759] = a0\n  6761: u64 [t1 + 1873] = 0\n  6765: u64 [t1 + 1865] = 0\n  6769: u64 [t1 + 1857] = 0\n  6773: u64 [t1 + 1913] = 0\n  6777: u64 [t1 + 1905] = 0\n  6781: u64 [t1 + 1897] = 0\n  6785: u64 [t1 + 1889] = 0\n  6789: u32 [t1 + 1921] = 0x20\n  6794: a0 = sp + 0x1000\n  6798: i32 a1 = a0 + 0x2a0\n  6802: a0 = sp + 0x1000\n  6806: i32 a3 = a0 + 0x2c0\n  6810: a0 = sp + 0x1000\n  6814: i32 a4 = a0 + 0x2e0\n  6818: a2 = 0xffffffffffffffff\n  6821: a0 = 0\n  6823: ecalli 3 // 'get_storage'\n  6825: fallthrough\n      : @105 (gas: 14)\n  6826: t1 = sp + 0x7ff\n  6830: t1 = t1 + 0x360\n  6834: a0 = u64 [sp + 0x380]\n  6838: a0 = a0 <u 0x13\n  6841: a1 = u64 [sp + 0x378]\n  6845: a0 = 0 if a1 != 0\n  6847: a1 = u64 [sp + 0x388]\n  6851: a1 = a1 | s1\n  6854: a0 = 0 if a1 != 0\n  6856: a4 = u64 [sp + 0x390]\n  6860: a1 = u64 [sp + 0x3a8]\n  6864: s1 = u64 [sp + 0x398]\n  6868: a3 = u64 [sp + 0x3a0]\n  6872: jump @104 if a0 != 0\n      : @106 (gas: 9)\n  6876: u64 [sp + 736] = 0\n  6880: u64 [sp + 696] = 0\n  6884: u64 [sp + 688] = 0\n  6888: u64 [sp + 664] = 0\n  6892: a5 = 0\n  6894: a2 = 0\n  6896: ra = 0\n  6898: s1 = 0\n  6900: jump @90\n      : @107 (gas: 3)\n  6903: u64 [sp + 872] = 0\n  6907: u64 [sp + 840] = 0\n  6911: fallthrough\n      : @108 (gas: 23)\n  6912: a3 = u64 [sp + 0x398]\n  6916: a1 = a3 >> 0x3f\n  6919: a2 = u64 [sp + 0x3a0]\n  6923: a2 = a2 << 0x1\n  6926: a1 = a1 | a2\n  6929: a4 = u64 [sp + 0x388]\n  6933: a2 = a4 >> 0x3f\n  6936: a3 = a3 << 0x1\n  6939: a2 = a2 | a3\n  6942: a5 = u64 [sp + 0x390]\n  6946: a3 = a5 >> 0x3f\n  6949: a4 = a4 << 0x1\n  6952: a5 = a5 << 0x1\n  6955: a0 = u64 [sp + 0x368]\n  6959: t1 = a0 | a5\n  6962: a5 = u64 [sp + 0x348]\n  6966: a3 = a3 | a5\n  6969: a4 = a4 | a3\n  6972: ra = a5 | a2\n  6975: a5 = a5 | a1\n  6978: t0 = u64 [sp + 0x2a0]\n  6982: s1 = u64 [sp + 0x290]\n  6986: fallthrough\n      : @109 (gas: 64)\n  6987: u64 [sp + 0x258] = a5\n  6991: u64 [sp + 0x260] = a4\n  6995: u64 [sp + 0x268] = ra\n  6999: u64 [sp + 0x2a0] = t1\n  7003: t2 = reverse s1\n  7005: a0 = u64 [sp + 0x2c0]\n  7009: t1 = reverse a0\n  7011: a0 = u64 [sp + 0x2d8]\n  7015: ra = reverse a0\n  7017: a2 = reverse t0\n  7019: u64 [sp + 0x2c0] = a2\n  7023: a0 = clz t1\n  7025: a1 = a0 + 0x40\n  7028: a0 = clz t2\n  7030: a0 = a1 if t2 == 0\n  7033: a1 = clz a2\n  7035: a1 = a1 + 0x40\n  7038: a2 = clz ra\n  7040: a2 = a1 if ra == 0\n  7043: a1 = a2 + 0x80\n  7047: a3 = t1 | t2\n  7050: a0 = a1 if a3 == 0\n  7053: a1 = a1 <u a2\n  7056: a1 = 0 if a3 != 0\n  7058: a2 = u64 [sp + 0x330]\n  7062: a4 = a2 ^ a1\n  7065: a3 = a2 <u a1\n  7068: a5 = u64 [sp + 0x328]\n  7072: s1 = a5 <u a0\n  7075: a3 = s1 if a4 == 0\n  7078: a4 = a3 <u 0x1\n  7081: t0 = a4 + 0xffffffffffffffff\n  7084: a4 = -a3\n  7086: a1 = a2 - a1\n  7089: s1 = a1 - s1\n  7092: a5 = a5 - a0\n  7095: u64 [sp + 0x398] = a4\n  7099: a0 = a4 >u 0\n  7101: a4 = t0\n  7103: a2 = t0 >u 0\n  7105: a2 = a0 if t0 == 0\n  7108: u64 [sp + 0x3a0] = a5\n  7112: a0 = a5 <u 0x100\n  7116: a0 = a0 ^ 0x1\n  7119: a5 = s1 >u 0\n  7121: a0 = a5 if s1 != 0\n  7124: a0 = a2 if a3 != 0\n  7127: t0 = u64 [sp + 0x2c0]\n  7131: a2 = t0 | t1\n  7134: a3 = ra | t2\n  7137: a2 = a2 | a3\n  7140: a2 = a2 <u 0x1\n  7143: a1 = u64 [sp + 0x320]\n  7147: a2 = a2 | a1\n  7150: a5 = a2 | a0\n  7153: u64 [sp + 0x278] = t2\n  7157: u64 [sp + 0x288] = t1\n  7161: u64 [sp + 0x290] = ra\n  7165: a2 = t2\n  7167: a2 = 0 if a5 != 0\n  7169: t1 = 0 if a5 != 0\n  7171: ra = 0 if a5 != 0\n  7173: t0 = 0 if a5 != 0\n  7175: jump @117 if a5 != 0\n      : @110 (gas: 8)\n  7179: a0 = u64 [sp + 0x3a0]\n  7183: a5 = a0 ^ 0xff\n  7187: a3 = u64 [sp + 0x398]\n  7191: a5 = a5 | a3\n  7194: a1 = s1 | a4\n  7197: a1 = a1 | a5\n  7200: t2 = u64 [sp + 0x3d0]\n  7204: jump @118 if a1 == 0\n      : @111 (gas: 260)\n  7208: a2 = u64 [sp + 0x3a0]\n  7212: a1 = a2 + 0x1\n  7215: u64 [sp + 0x3a8] = a1\n  7219: a0 = a1 <u 0x1\n  7222: a0 = a0 + s1\n  7225: u64 [sp + 0x380] = a0\n  7229: a0 = a0 | a1\n  7232: a0 = a0 <u 0x1\n  7235: a0 = a0 + a3\n  7238: u64 [sp + 0x370] = a0\n  7242: a0 = a0 <u a3\n  7245: a0 = a0 + a4\n  7248: u64 [sp + 0x378] = a0\n  7252: t0 = 0xff - a2\n  7256: t2 = sp + 0x7ff\n  7260: t2 = t2 + 0x360\n  7264: a0 = u64 [sp + 0x2c0]\n  7268: u8 [t2 + 0x5e1] = a0\n  7272: u8 [t2 + 1504] = 0\n  7276: u8 [t2 + 1503] = 0\n  7280: u8 [t2 + 1502] = 0\n  7284: u8 [t2 + 1501] = 0\n  7288: u8 [t2 + 1500] = 0\n  7292: u8 [t2 + 1499] = 0\n  7296: u8 [t2 + 1498] = 0\n  7300: u8 [t2 + 1497] = 0\n  7304: u8 [t2 + 1496] = 0\n  7308: u8 [t2 + 1495] = 0\n  7312: u8 [t2 + 1494] = 0\n  7316: u8 [t2 + 1493] = 0\n  7320: u8 [t2 + 1492] = 0\n  7324: u8 [t2 + 1491] = 0\n  7328: u8 [t2 + 1490] = 0\n  7332: u8 [t2 + 1489] = 0\n  7336: u8 [t2 + 1488] = 0\n  7340: u8 [t2 + 1487] = 0\n  7344: u8 [t2 + 1486] = 0\n  7348: u8 [t2 + 1485] = 0\n  7352: u8 [t2 + 1484] = 0\n  7356: u8 [t2 + 1483] = 0\n  7360: u8 [t2 + 1482] = 0\n  7364: u8 [t2 + 1481] = 0\n  7368: u8 [t2 + 1480] = 0\n  7372: u8 [t2 + 1479] = 0\n  7376: u8 [t2 + 1478] = 0\n  7380: u8 [t2 + 1477] = 0\n  7384: u8 [t2 + 1476] = 0\n  7388: u8 [t2 + 1475] = 0\n  7392: u8 [t2 + 1474] = 0\n  7396: u8 [t2 + 1473] = 0\n  7400: a1 = u64 [sp + 0x290]\n  7404: u8 [t2 + 0x5e9] = a1\n  7408: a2 = a0 >> 0x38\n  7411: u64 [sp + 0x248] = a2\n  7415: u8 [t2 + 0x5e8] = a2\n  7419: a2 = a0 >> 0x30\n  7422: u64 [sp + 0x240] = a2\n  7426: u8 [t2 + 0x5e7] = a2\n  7430: a2 = a0 >> 0x28\n  7433: u64 [sp + 0x238] = a2\n  7437: u8 [t2 + 0x5e6] = a2\n  7441: a2 = a0 >> 0x20\n  7444: u64 [sp + 0x230] = a2\n  7448: u8 [t2 + 0x5e5] = a2\n  7452: a2 = a0 >> 0x18\n  7455: u64 [sp + 0x228] = a2\n  7459: u8 [t2 + 0x5e4] = a2\n  7463: a2 = a0 >> 0x10\n  7466: u64 [sp + 0x220] = a2\n  7470: u8 [t2 + 0x5e3] = a2\n  7474: a0 = a0 >> 0x8\n  7477: u64 [sp + 0x218] = a0\n  7481: u8 [t2 + 0x5e2] = a0\n  7485: a0 = u64 [sp + 0x288]\n  7489: u8 [t2 + 0x5f1] = a0\n  7493: a2 = a1 >> 0x38\n  7496: u64 [sp + 0x210] = a2\n  7500: u8 [t2 + 0x5f0] = a2\n  7504: a2 = a1 >> 0x30\n  7507: u64 [sp + 0x208] = a2\n  7511: u8 [t2 + 0x5ef] = a2\n  7515: a2 = a1 >> 0x28\n  7518: u64 [sp + 0x1d0] = a2\n  7522: u8 [t2 + 0x5ee] = a2\n  7526: a2 = a1 >> 0x20\n  7529: u64 [sp + 0x1c8] = a2\n  7533: u8 [t2 + 0x5ed] = a2\n  7537: a2 = a1 >> 0x18\n  7540: u64 [sp + 0x1c0] = a2\n  7544: u8 [t2 + 0x5ec] = a2\n  7548: a2 = a1 >> 0x10\n  7551: u64 [sp + 0x1b8] = a2\n  7555: u8 [t2 + 0x5eb] = a2\n  7559: a1 = a1 >> 0x8\n  7562: u64 [sp + 0x1b0] = a1\n  7566: u8 [t2 + 0x5ea] = a1\n  7570: ra = u64 [sp + 0x278]\n  7574: u8 [t2 + 0x5f9] = ra\n  7578: a1 = a0 >> 0x38\n  7581: u64 [sp + 0x1a8] = a1\n  7585: u8 [t2 + 0x5f8] = a1\n  7589: a1 = a0 >> 0x30\n  7592: u64 [sp + 0x1a0] = a1\n  7596: u8 [t2 + 0x5f7] = a1\n  7600: a1 = a0 >> 0x28\n  7603: u64 [sp + 0x198] = a1\n  7607: u8 [t2 + 0x5f6] = a1\n  7611: a1 = a0 >> 0x20\n  7614: u64 [sp + 0x190] = a1\n  7618: u8 [t2 + 0x5f5] = a1\n  7622: a1 = a0 >> 0x18\n  7625: u64 [sp + 0x188] = a1\n  7629: u8 [t2 + 0x5f4] = a1\n  7633: a1 = a0 >> 0x10\n  7636: u64 [sp + 0x358] = a1\n  7640: u8 [t2 + 0x5f3] = a1\n  7644: a0 = a0 >> 0x8\n  7647: u64 [sp + 0x350] = a0\n  7651: u8 [t2 + 0x5f2] = a0\n  7655: a0 = ra >> 0x38\n  7658: u64 [sp + 0x348] = a0\n  7662: u8 [t2 + 0x600] = a0\n  7666: a0 = ra >> 0x30\n  7669: u64 [sp + 0x318] = a0\n  7673: u8 [t2 + 0x5ff] = a0\n  7677: a0 = ra >> 0x28\n  7680: u64 [sp + 0x310] = a0\n  7684: u8 [t2 + 0x5fe] = a0\n  7688: a0 = ra >> 0x20\n  7691: u64 [sp + 0x308] = a0\n  7695: u8 [t2 + 0x5fd] = a0\n  7699: a0 = ra >> 0x18\n  7702: u64 [sp + 0x300] = a0\n  7706: u8 [t2 + 0x5fc] = a0\n  7710: a0 = ra >> 0x10\n  7713: u64 [sp + 0x2d8] = a0\n  7717: u8 [t2 + 0x5fb] = a0\n  7721: a0 = ra >> 0x8\n  7724: u64 [sp + 0x250] = a0\n  7728: u8 [t2 + 0x5fa] = a0\n  7732: a0 = t0 << 0x38\n  7735: a0 = a0 >> 0x3b\n  7738: a2 = sp + 0x1140\n  7742: a2 = a2 - a0\n  7745: a0 = u8 [a2 + 0x19]\n  7748: a3 = u8 [a2 + 0x18]\n  7751: a4 = u8 [a2 + 0x1a]\n  7754: a5 = u8 [a2 + 0x1b]\n  7757: a0 = a0 << 0x8\n  7760: a0 = a0 | a3\n  7763: a4 = a4 << 0x10\n  7766: a5 = a5 << 0x18\n  7769: a4 = a4 | a5\n  7772: a0 = a0 | a4\n  7775: a3 = u8 [a2 + 0x1d]\n  7778: a4 = u8 [a2 + 0x1c]\n  7781: a5 = u8 [a2 + 0x1e]\n  7784: s1 = u8 [a2 + 0x1f]\n  7787: a3 = a3 << 0x8\n  7790: a3 = a3 | a4\n  7793: a5 = a5 << 0x10\n  7796: s1 = s1 << 0x18\n  7799: a5 = a5 | s1\n  7802: a3 = a3 | a5\n  7805: a3 = a3 << 0x20\n  7808: a4 = a3 | a0\n  7811: a0 = u8 [a2 + 0x11]\n  7814: a3 = u8 [a2 + 0x10]\n  7817: a5 = u8 [a2 + 0x12]\n  7820: s1 = u8 [a2 + 0x13]\n  7823: a0 = a0 << 0x8\n  7826: a0 = a0 | a3\n  7829: a5 = a5 << 0x10\n  7832: s1 = s1 << 0x18\n  7835: a5 = a5 | s1\n  7838: a0 = a0 | a5\n  7841: a3 = u8 [a2 + 0x15]\n  7844: a5 = u8 [a2 + 0x14]\n  7847: s1 = u8 [a2 + 0x16]\n  7850: a1 = u8 [a2 + 0x17]\n  7853: a3 = a3 << 0x8\n  7856: a3 = a3 | a5\n  7859: s1 = s1 << 0x10\n  7862: a1 = a1 << 0x18\n  7865: a1 = a1 | s1\n  7868: a1 = a1 | a3\n  7871: a1 = a1 << 0x20\n  7874: t1 = a1 | a0\n  7877: a1 = t0 & 0x7\n  7880: a3 = a4 << a1\n  7883: a5 = t1 >> 0x1\n  7886: t0 = a1 ^ 0x3f\n  7889: a5 = a5 >> t0\n  7892: a3 = a3 | a5\n  7895: u64 [sp + 0x3a0] = a3\n  7899: a3 = u8 [a2 + 0x9]\n  7902: a5 = u8 [a2 + 0x8]\n  7905: s1 = u8 [a2 + 0xa]\n  7908: a4 = u8 [a2 + 0xb]\n  7911: a3 = a3 << 0x8\n  7914: a3 = a3 | a5\n  7917: s1 = s1 << 0x10\n  7920: a4 = a4 << 0x18\n  7923: a4 = a4 | s1\n  7926: a3 = a3 | a4\n  7929: a4 = u8 [a2 + 0xd]\n  7932: a5 = u8 [a2 + 0xc]\n  7935: s1 = u8 [a2 + 0xe]\n  7938: a0 = u8 [a2 + 0xf]\n  7941: a4 = a4 << 0x8\n  7944: a4 = a4 | a5\n  7947: s1 = s1 << 0x10\n  7950: a0 = a0 << 0x18\n  7953: a0 = a0 | s1\n  7956: a0 = a0 | a4\n  7959: a0 = a0 << 0x20\n  7962: a5 = a0 | a3\n  7965: a0 = a5 >> 0x1\n  7968: a3 = a1 ^ 0xffffffffffffffff\n  7971: a0 = a0 >> a3\n  7974: a3 = t1 << a1\n  7977: a0 = a0 | a3\n  7980: u64 [sp + 0x388] = a0\n  7984: a0 = u8 [a2 + 0x1]\n  7987: a3 = u8 [a2]\n  7989: a4 = u8 [a2 + 0x2]\n  7992: s1 = u8 [a2 + 0x3]\n  7995: a0 = a0 << 0x8\n  7998: a0 = a0 | a3\n  8001: a4 = a4 << 0x10\n  8004: s1 = s1 << 0x18\n  8007: a4 = a4 | s1\n  8010: a0 = a0 | a4\n  8013: a3 = u8 [a2 + 0x5]\n  8016: a4 = u8 [a2 + 0x4]\n  8019: s1 = u8 [a2 + 0x6]\n  8022: a2 = u8 [a2 + 0x7]\n  8025: a3 = a3 << 0x8\n  8028: a3 = a3 | a4\n  8031: s1 = s1 << 0x10\n  8034: a2 = a2 << 0x18\n  8037: a2 = a2 | s1\n  8040: a4 = u64 [sp + 0x380]\n  8044: a2 = a2 | a3\n  8047: a2 = a2 << 0x20\n  8050: a0 = a0 | a2\n  8053: a2 = a0 >> 0x1\n  8056: a2 = a2 >> t0\n  8059: s1 = u64 [sp + 0x370]\n  8063: a3 = a5 << a1\n  8066: a5 = u64 [sp + 0x378]\n  8070: a2 = a2 | a3\n  8073: u64 [sp + 0x390] = a2\n  8077: a2 = a4 | a5\n  8080: a3 = u64 [sp + 0x3a8]\n  8084: a3 = a3 | s1\n  8087: a2 = a2 | a3\n  8090: a0 = a0 << a1\n  8093: u64 [sp + 0x398] = a0\n  8097: jump @115 if a2 == 0\n      : @112 (gas: 225)\n  8101: u64 [sp + 872] = 0\n  8105: u64 [sp + 864] = 0\n  8109: a0 = u64 [sp + 0x248]\n  8113: u8 [t2 + 0x588] = a0\n  8117: a0 = u64 [sp + 0x240]\n  8121: u8 [t2 + 0x587] = a0\n  8125: a0 = u64 [sp + 0x238]\n  8129: u8 [t2 + 0x586] = a0\n  8133: a0 = u64 [sp + 0x230]\n  8137: u8 [t2 + 0x585] = a0\n  8141: a0 = u64 [sp + 0x228]\n  8145: u8 [t2 + 0x584] = a0\n  8149: a0 = u64 [sp + 0x220]\n  8153: u8 [t2 + 0x583] = a0\n  8157: a0 = u64 [sp + 0x218]\n  8161: u8 [t2 + 0x582] = a0\n  8165: a0 = u64 [sp + 0x210]\n  8169: u8 [t2 + 0x590] = a0\n  8173: a0 = u64 [sp + 0x208]\n  8177: u8 [t2 + 0x58f] = a0\n  8181: a0 = u64 [sp + 0x1d0]\n  8185: u8 [t2 + 0x58e] = a0\n  8189: a0 = u64 [sp + 0x1c8]\n  8193: u8 [t2 + 0x58d] = a0\n  8197: a0 = u64 [sp + 0x1c0]\n  8201: u8 [t2 + 0x58c] = a0\n  8205: a0 = u64 [sp + 0x1b8]\n  8209: u8 [t2 + 0x58b] = a0\n  8213: a0 = u64 [sp + 0x1b0]\n  8217: u8 [t2 + 0x58a] = a0\n  8221: a0 = u64 [sp + 0x1a8]\n  8225: u8 [t2 + 0x598] = a0\n  8229: a0 = u64 [sp + 0x1a0]\n  8233: u8 [t2 + 0x597] = a0\n  8237: a0 = u64 [sp + 0x198]\n  8241: u8 [t2 + 0x596] = a0\n  8245: a0 = u64 [sp + 0x190]\n  8249: u8 [t2 + 0x595] = a0\n  8253: a0 = u64 [sp + 0x188]\n  8257: u8 [t2 + 0x594] = a0\n  8261: u8 [t2 + 1472] = 0\n  8265: u8 [t2 + 1471] = 0\n  8269: u8 [t2 + 1470] = 0\n  8273: u8 [t2 + 1469] = 0\n  8277: u8 [t2 + 1468] = 0\n  8281: u8 [t2 + 1467] = 0\n  8285: u8 [t2 + 1466] = 0\n  8289: u8 [t2 + 1465] = 0\n  8293: u8 [t2 + 1464] = 0\n  8297: u8 [t2 + 1463] = 0\n  8301: u8 [t2 + 1462] = 0\n  8305: u8 [t2 + 1461] = 0\n  8309: u8 [t2 + 1460] = 0\n  8313: u8 [t2 + 1459] = 0\n  8317: u8 [t2 + 1458] = 0\n  8321: u8 [t2 + 1457] = 0\n  8325: u8 [t2 + 1456] = 0\n  8329: u8 [t2 + 1455] = 0\n  8333: u8 [t2 + 1454] = 0\n  8337: u8 [t2 + 1453] = 0\n  8341: u8 [t2 + 1452] = 0\n  8345: u8 [t2 + 1451] = 0\n  8349: u8 [t2 + 1450] = 0\n  8353: u8 [t2 + 1449] = 0\n  8357: u8 [t2 + 1448] = 0\n  8361: u8 [t2 + 1447] = 0\n  8365: u8 [t2 + 1446] = 0\n  8369: u8 [t2 + 1445] = 0\n  8373: u8 [t2 + 1444] = 0\n  8377: u8 [t2 + 1443] = 0\n  8381: u8 [t2 + 1442] = 0\n  8385: u8 [t2 + 1441] = 0\n  8389: a0 = u64 [sp + 0x2c0]\n  8393: u8 [t2 + 0x581] = a0\n  8397: a0 = u64 [sp + 0x290]\n  8401: u8 [t2 + 0x589] = a0\n  8405: a0 = u64 [sp + 0x288]\n  8409: u8 [t2 + 0x591] = a0\n  8413: u8 [t2 + 0x599] = ra\n  8417: a0 = u64 [sp + 0x358]\n  8421: u8 [t2 + 0x593] = a0\n  8425: a0 = u64 [sp + 0x350]\n  8429: u8 [t2 + 0x592] = a0\n  8433: a0 = u64 [sp + 0x348]\n  8437: u8 [t2 + 0x5a0] = a0\n  8441: a0 = u64 [sp + 0x318]\n  8445: u8 [t2 + 0x59f] = a0\n  8449: a0 = u64 [sp + 0x310]\n  8453: u8 [t2 + 0x59e] = a0\n  8457: a0 = u64 [sp + 0x308]\n  8461: u8 [t2 + 0x59d] = a0\n  8465: a0 = u64 [sp + 0x300]\n  8469: u8 [t2 + 0x59c] = a0\n  8473: a0 = u64 [sp + 0x2d8]\n  8477: u8 [t2 + 0x59b] = a0\n  8481: a0 = u64 [sp + 0x250]\n  8485: u8 [t2 + 0x59a] = a0\n  8489: s1 = u64 [sp + 0x3a8]\n  8493: a0 = s1 << 0x38\n  8496: a0 = a0 >> 0x3b\n  8499: a2 = sp + 0x10e0\n  8503: a2 = a2 + a0\n  8506: a0 = u8 [a2 + 0x11]\n  8509: a1 = u8 [a2 + 0x10]\n  8512: a3 = u8 [a2 + 0x12]\n  8515: a4 = u8 [a2 + 0x13]\n  8518: a0 = a0 << 0x8\n  8521: a0 = a0 | a1\n  8524: a3 = a3 << 0x10\n  8527: a4 = a4 << 0x18\n  8530: a3 = a3 | a4\n  8533: a0 = a0 | a3\n  8536: a1 = u8 [a2 + 0x15]\n  8539: a3 = u8 [a2 + 0x14]\n  8542: a4 = u8 [a2 + 0x16]\n  8545: a5 = u8 [a2 + 0x17]\n  8548: a1 = a1 << 0x8\n  8551: a1 = a1 | a3\n  8554: a4 = a4 << 0x10\n  8557: a5 = a5 << 0x18\n  8560: a4 = a4 | a5\n  8563: a1 = a1 | a4\n  8566: a1 = a1 << 0x20\n  8569: t2 = a1 | a0\n  8572: s1 = s1 & 0x7\n  8575: t0 = t2 >> s1\n  8578: a0 = u8 [a2 + 0x19]\n  8581: a3 = u8 [a2 + 0x18]\n  8584: a4 = u8 [a2 + 0x1a]\n  8587: a5 = u8 [a2 + 0x1b]\n  8590: a0 = a0 << 0x8\n  8593: a0 = a0 | a3\n  8596: a4 = a4 << 0x10\n  8599: a5 = a5 << 0x18\n  8602: a4 = a4 | a5\n  8605: a0 = a0 | a4\n  8608: a3 = u8 [a2 + 0x1d]\n  8611: a4 = u8 [a2 + 0x1c]\n  8614: a5 = u8 [a2 + 0x1e]\n  8617: a1 = u8 [a2 + 0x1f]\n  8620: a3 = a3 << 0x8\n  8623: a3 = a3 | a4\n  8626: a5 = a5 << 0x10\n  8629: a1 = a1 << 0x18\n  8632: a1 = a1 | a5\n  8635: a1 = a1 | a3\n  8638: a1 = a1 << 0x20\n  8641: a0 = a0 | a1\n  8644: a1 = a0 << 0x1\n  8647: t1 = s1 ^ 0x3f\n  8650: a1 = a1 << t1\n  8653: a1 = t0 | a1\n  8656: u64 [sp + 0x358] = a1\n  8660: a1 = u8 [a2 + 0x9]\n  8663: a3 = u8 [a2 + 0x8]\n  8666: a4 = u8 [a2 + 0xa]\n  8669: a5 = u8 [a2 + 0xb]\n  8672: a1 = a1 << 0x8\n  8675: a1 = a1 | a3\n  8678: a4 = a4 << 0x10\n  8681: a5 = a5 << 0x18\n  8684: a4 = a4 | a5\n  8687: t0 = a4 | a1\n  8690: a3 = u8 [a2 + 0xd]\n  8693: a4 = u8 [a2 + 0xc]\n  8696: a5 = u8 [a2 + 0xe]\n  8699: a1 = u8 [a2 + 0xf]\n  8702: a3 = a3 << 0x8\n  8705: a3 = a3 | a4\n  8708: a5 = a5 << 0x10\n  8711: a1 = a1 << 0x18\n  8714: a1 = a1 | a5\n  8717: a1 = a1 | a3\n  8720: a1 = a1 << 0x20\n  8723: t0 = a1 | t0\n  8726: a1 = t0 >> s1\n  8729: t2 = t2 << 0x1\n  8732: a3 = s1 ^ 0xffffffffffffffff\n  8735: a3 = t2 << a3\n  8738: t2 = a1 | a3\n  8741: a1 = u8 [a2 + 0x1]\n  8744: a3 = u8 [a2]\n  8746: a5 = u8 [a2 + 0x2]\n  8749: a4 = u8 [a2 + 0x3]\n  8752: a1 = a1 << 0x8\n  8755: a1 = a1 | a3\n  8758: a5 = a5 << 0x10\n  8761: a4 = a4 << 0x18\n  8764: a4 = a4 | a5\n  8767: a1 = a1 | a4\n  8770: a3 = u8 [a2 + 0x5]\n  8773: a4 = u8 [a2 + 0x4]\n  8776: a5 = u8 [a2 + 0x6]\n  8779: a2 = u8 [a2 + 0x7]\n  8782: a3 = a3 << 0x8\n  8785: a3 = a3 | a4\n  8788: a5 = a5 << 0x10\n  8791: a2 = a2 << 0x18\n  8794: a2 = a2 | a5\n  8797: a5 = u64 [sp + 0x368]\n  8801: a2 = a2 | a3\n  8804: a2 = a2 << 0x20\n  8807: a1 = a1 | a2\n  8810: a1 = a1 >> s1\n  8813: t0 = t0 << 0x1\n  8816: a2 = t0 << t1\n  8819: ra = a1 | a2\n  8822: a2 = a0 >> s1\n  8825: a3 = u64 [sp + 0x3c0]\n  8829: a0 = a3 <u 0x1\n  8832: a1 = u64 [sp + 0x3d0]\n  8836: a0 = a1 - a0\n  8839: u64 [sp + 0x310] = a0\n  8843: a0 = a3 | a1\n  8846: a0 = a0 <u 0x1\n  8849: a1 = u64 [sp + 0x3c8]\n  8853: a4 = a1 - a0\n  8856: u64 [sp + 0x308] = a4\n  8860: a0 = a1 <u a0\n  8863: a1 = u64 [sp + 0x3d8]\n  8867: a1 = a1 - a0\n  8870: u64 [sp + 0x300] = a1\n  8874: a3 = a3 + 0xffffffffffffffff\n  8877: u64 [sp + 0x2d8] = a3\n  8881: fallthrough\n      : @113 (gas: 105)\n  8882: u64 [sp + 0x368] = a5\n  8886: u64 [sp + 792] = 0\n  8890: a0 = ra >> 0x3f\n  8893: s1 = t2 << 0x1\n  8896: s1 = s1 | a0\n  8899: ra = ra << 0x1\n  8902: t1 = t2\n  8904: t2 = u64 [sp + 0x3a0]\n  8908: a0 = t2 >> 0x3f\n  8911: a1 = ra | a0\n  8914: a0 = u64 [sp + 0x310]\n  8918: a4 = a0 ^ s1\n  8921: a5 = a0 <u s1\n  8924: a0 = u64 [sp + 0x2d8]\n  8928: a3 = a0 <u a1\n  8931: ra = a1\n  8933: u64 [sp + 0x348] = a1\n  8937: a3 = a5 if a4 != 0\n  8940: a2 = a2 << 0x1\n  8943: a1 = u64 [sp + 0x358]\n  8947: a4 = a1 >> 0x3f\n  8950: t0 = a2 | a4\n  8953: u64 [sp + 0x350] = t0\n  8957: a4 = t1 >> 0x3f\n  8960: a1 = a1 << 0x1\n  8963: a4 = a4 | a1\n  8966: a1 = t2 << 0x1\n  8969: a0 = u64 [sp + 0x388]\n  8973: a5 = a0 >> 0x3f\n  8976: t2 = a1 | a5\n  8979: a5 = a0 << 0x1\n  8982: a1 = u64 [sp + 0x390]\n  8986: a2 = a1 >> 0x3f\n  8989: a2 = a2 | a5\n  8992: a1 = a1 << 0x1\n  8995: a5 = u64 [sp + 0x398]\n  8999: a0 = a5 >> 0x3f\n  9002: a0 = a0 | a1\n  9005: a5 = a5 << 0x1\n  9008: a1 = u64 [sp + 0x368]\n  9012: a5 = a5 | a1\n  9015: u64 [sp + 0x398] = a5\n  9019: a5 = u64 [sp + 0x360]\n  9023: a0 = a0 | a5\n  9026: u64 [sp + 0x390] = a0\n  9030: a0 = a5 | a2\n  9033: u64 [sp + 0x388] = a0\n  9037: a0 = a5 | t2\n  9040: u64 [sp + 0x3a0] = a0\n  9044: a1 = u64 [sp + 0x308]\n  9048: a0 = a1 - a4\n  9051: a0 = a0 <u a3\n  9054: a1 = a1 <u a4\n  9057: a2 = u64 [sp + 0x300]\n  9061: a2 = a2 - t0\n  9064: a2 = a2 - a1\n  9067: a2 = a2 - a0\n  9070: a5 = a2 >>a 0x3f\n  9073: a0 = u64 [sp + 0x3c0]\n  9077: t0 = a5 & a0\n  9080: a3 = u64 [sp + 0x3d0]\n  9084: a3 = a3 & a5\n  9087: t2 = s1 ^ a3\n  9090: a2 = s1 <u a3\n  9093: a1 = ra <u t0\n  9096: a2 = a1 if t2 == 0\n  9099: a0 = u64 [sp + 0x3c8]\n  9103: t2 = a5 & a0\n  9106: t1 = a4 - t2\n  9109: ra = t1 - a2\n  9112: u64 [sp + 0x358] = ra\n  9116: t1 = t1 <u a2\n  9119: a4 = a4 <u t2\n  9122: a2 = u64 [sp + 0x3d8]\n  9126: a2 = a2 & a5\n  9129: a0 = u64 [sp + 0x350]\n  9133: a2 = a0 - a2\n  9136: a2 = a2 - a4\n  9139: a2 = a2 - t1\n  9142: s1 = s1 - a3\n  9145: t2 = s1 - a1\n  9148: a0 = u64 [sp + 0x348]\n  9152: ra = a0 - t0\n  9155: a4 = u64 [sp + 0x3a8]\n  9159: s1 = u64 [sp + 0x380]\n  9163: a0 = a4 | s1\n  9166: a0 = a0 <u 0x1\n  9169: a3 = u64 [sp + 0x370]\n  9173: a1 = a3 <u a0\n  9176: a0 = a3 - a0\n  9179: a3 = a4 <u 0x1\n  9182: s1 = s1 - a3\n  9185: a3 = u64 [sp + 0x378]\n  9189: a3 = a3 - a1\n  9192: a4 = a4 + 0xffffffffffffffff\n  9195: u64 [sp + 0x380] = s1\n  9199: u64 [sp + 0x378] = a3\n  9203: a1 = s1 | a3\n  9206: u64 [sp + 0x3a8] = a4\n  9210: a3 = a4 | a0\n  9213: a1 = a1 | a3\n  9216: a5 = a5 & 0x1\n  9219: u64 [sp + 0x370] = a0\n  9223: u64 [sp + 864] = 0\n  9227: jump @113 if a1 != 0\n      : @114 (gas: 1)\n  9231: jump @116\n      : @115 (gas: 3)\n  9233: a5 = 0\n  9235: u64 [sp + 792] = 0\n  9239: fallthrough\n      : @116 (gas: 21)\n  9240: a2 = u64 [sp + 0x388]\n  9244: a0 = a2 >> 0x3f\n  9247: a1 = u64 [sp + 0x3a0]\n  9251: a1 = a1 << 0x1\n  9254: a1 = a1 | a0\n  9257: a4 = u64 [sp + 0x390]\n  9261: a0 = a4 >> 0x3f\n  9264: a2 = a2 << 0x1\n  9267: a3 = a2 | a0\n  9270: a0 = u64 [sp + 0x398]\n  9274: a2 = a0 >> 0x3f\n  9277: a4 = a4 << 0x1\n  9280: a0 = a0 << 0x1\n  9283: t0 = a5 | a0\n  9286: a5 = u64 [sp + 0x318]\n  9290: a2 = a2 | a5\n  9293: ra = a2 | a4\n  9296: t1 = a5 | a3\n  9299: a2 = a5 | a1\n  9302: t2 = u64 [sp + 0x3d0]\n  9306: jump @118\n      : @117 (gas: 2)\n  9308: t2 = u64 [sp + 0x3d0]\n  9312: fallthrough\n      : @118 (gas: 218)\n  9313: u64 [sp + 0x388] = t0\n  9317: u64 [sp + 0x390] = a2\n  9321: u64 [sp + 0x398] = ra\n  9325: u64 [sp + 0x3a0] = t1\n  9329: ra = u64 [sp + 0x3c0]\n  9333: a2 = u64 [sp + 0x2a0]\n  9337: a1 = ra mulhu a2\n  9340: a4 = t2 * a2\n  9343: a1 = a1 + a4\n  9346: a4 = a1 <u a4\n  9349: a5 = t2 mulhu a2\n  9352: a5 = a5 + a4\n  9355: a0 = u64 [sp + 0x260]\n  9359: a4 = ra * a0\n  9362: a1 = a1 + a4\n  9365: u64 [sp + 0x3a8] = a1\n  9369: a4 = a1 <u a4\n  9372: s1 = ra mulhu a0\n  9375: a4 = a4 + s1\n  9378: a4 = a4 + a5\n  9381: a5 = a4 <u a5\n  9384: s1 = t2 mulhu a0\n  9387: a5 = a5 + s1\n  9390: s1 = t2 * a0\n  9393: a4 = a4 + s1\n  9396: s1 = a4 <u s1\n  9399: t1 = a5 + s1\n  9402: a1 = u64 [sp + 0x268]\n  9406: s1 = a1 * t2\n  9409: a3 = a1 mulhu ra\n  9412: a3 = a3 + s1\n  9415: a5 = u64 [sp + 0x258]\n  9419: s1 = a5 * ra\n  9422: t0 = a3 + s1\n  9425: a5 = u64 [sp + 0x3c8]\n  9429: s1 = a2 mulhu a5\n  9432: a3 = a5\n  9434: a5 = u64 [sp + 0x3d8]\n  9438: a5 = a2 * a5\n  9441: a5 = a5 + s1\n  9444: s1 = a0 * a3\n  9447: a5 = a5 + s1\n  9450: t0 = t0 + a5\n  9453: a5 = a1 * ra\n  9456: s1 = a2 * a3\n  9459: s1 = s1 + a5\n  9462: a5 = s1 <u a5\n  9465: a3 = t0 + a5\n  9468: a3 = a3 + t1\n  9471: s1 = s1 + a4\n  9474: a4 = s1 <u a4\n  9477: a0 = u64 [sp + 0x298]\n  9481: a4 = a0 - a4\n  9484: a4 = a4 - a3\n  9487: u64 [sp + 0x380] = a4\n  9491: a3 = ra * a2\n  9494: a5 = u64 [sp + 0x2b8]\n  9498: a1 = u64 [sp + 0x3a8]\n  9502: a0 = a5 ^ a1\n  9505: a2 = a5 <u a1\n  9508: t1 = u64 [sp + 0x2e0]\n  9512: a4 = t1 <u a3\n  9515: a2 = a4 if a0 == 0\n  9518: a0 = u64 [sp + 0x2b0]\n  9522: a1 = a0 <u s1\n  9525: s1 = a0 - s1\n  9528: t0 = t2\n  9530: a0 = s1 <u a2\n  9533: a0 = a0 + a1\n  9536: a1 = u64 [sp + 0x380]\n  9540: a0 = a1 - a0\n  9543: u64 [sp + 0x2a0] = a0\n  9547: s1 = s1 - a2\n  9550: u64 [sp + 0x2b0] = s1\n  9554: a0 = a5 - a4\n  9557: a1 = u64 [sp + 0x3a8]\n  9561: a0 = a0 - a1\n  9564: u64 [sp + 0x2b8] = a0\n  9568: a0 = t1 - a3\n  9571: u64 [sp + 0x298] = a0\n  9575: s1 = u64 [sp + 0x388]\n  9579: a0 = ra mulhu s1\n  9582: a1 = t2 * s1\n  9585: a0 = a0 + a1\n  9588: a1 = a0 <u a1\n  9591: a2 = t2 mulhu s1\n  9594: a1 = a1 + a2\n  9597: t1 = u64 [sp + 0x398]\n  9601: a2 = ra * t1\n  9604: a4 = a2 + a0\n  9607: a0 = a4 <u a2\n  9610: a2 = ra mulhu t1\n  9613: a0 = a0 + a2\n  9616: a0 = a0 + a1\n  9619: a1 = a0 <u a1\n  9622: a2 = t2 mulhu t1\n  9625: a1 = a1 + a2\n  9628: a2 = t2 * t1\n  9631: a0 = a0 + a2\n  9634: a2 = a0 <u a2\n  9637: t2 = a1 + a2\n  9640: a5 = u64 [sp + 0x3a0]\n  9644: a2 = a5 * t0\n  9647: a3 = a5 mulhu ra\n  9650: t0 = a5\n  9652: a2 = a2 + a3\n  9655: a3 = u64 [sp + 0x390]\n  9659: a3 = a3 * ra\n  9662: a2 = a2 + a3\n  9665: a1 = u64 [sp + 0x3c8]\n  9669: a3 = s1 mulhu a1\n  9672: a5 = u64 [sp + 0x3d8]\n  9676: a5 = s1 * a5\n  9679: a3 = a3 + a5\n  9682: a5 = t1 * a1\n  9685: a3 = a3 + a5\n  9688: a2 = a2 + a3\n  9691: a3 = t0 * ra\n  9694: a5 = s1 * a1\n  9697: a5 = a5 + a3\n  9700: a3 = a5 <u a3\n  9703: a2 = a2 + a3\n  9706: a1 = t2 + a2\n  9709: a5 = a5 + a0\n  9712: a0 = a5 <u a0\n  9715: a2 = u64 [sp + 0x278]\n  9719: a0 = a2 - a0\n  9722: t0 = a0 - a1\n  9725: t2 = ra * s1\n  9728: a2 = u64 [sp + 0x290]\n  9732: a0 = a2 ^ a4\n  9735: a3 = a2 <u a4\n  9738: a1 = u64 [sp + 0x2c0]\n  9742: s1 = a1 <u t2\n  9745: a3 = s1 if a0 == 0\n  9748: a0 = u64 [sp + 0x288]\n  9752: ra = a0 <u a5\n  9755: a5 = a0 - a5\n  9758: a0 = a5 <u a3\n  9761: a0 = a0 + ra\n  9764: t0 = t0 - a0\n  9767: a5 = a5 - a3\n  9770: a2 = a2 - s1\n  9773: a2 = a2 - a4\n  9776: a1 = a1 - t2\n  9779: a3 = u64 [sp + 0x2b0]\n  9783: a3 = a3 + a5\n  9786: a4 = a3 <u a5\n  9789: a0 = u64 [sp + 0x2a0]\n  9793: a0 = a0 + t0\n  9796: a0 = a0 + a4\n  9799: a4 = u64 [sp + 0x298]\n  9803: a4 = a4 + a1\n  9806: a1 = a4 <u a1\n  9809: a5 = a4\n  9811: u64 [sp + 0x2e0] = a4\n  9815: a4 = u64 [sp + 0x2b8]\n  9819: a4 = a4 + a2\n  9822: ra = a4 + a1\n  9825: a4 = ra ^ a2\n  9828: a2 = ra <u a2\n  9831: a2 = a1 if a4 == 0\n  9834: t0 = a3 + a2\n  9837: a1 = t0 <u a3\n  9840: t1 = a0 + a1\n  9843: a1 = clz t1\n  9845: a0 = clz t0\n  9847: a0 = a0 + 0x40\n  9850: a0 = a1 if t1 != 0\n  9853: a1 = clz ra\n  9855: a2 = clz a5\n  9857: a2 = a2 + 0x40\n  9860: a2 = a1 if ra != 0\n  9863: a1 = t0 | t1\n  9866: a3 = a2 + 0x80\n  9870: a0 = a3 if a1 == 0\n  9873: a3 = a3 <u a2\n  9876: a3 = 0 if a1 != 0\n  9878: a5 = u64 [sp + 0x328]\n  9882: a1 = a5 <u a0\n  9885: a4 = u64 [sp + 0x330]\n  9889: s1 = a4 ^ a3\n  9892: a2 = a4 <u a3\n  9895: a2 = a1 if s1 == 0\n  9898: a3 = a4 - a3\n  9901: s1 = a3 - a1\n  9904: a5 = a5 - a0\n  9907: u64 [sp + 0x398] = a5\n  9911: a0 = a5 <u 0x100\n  9915: a0 = a0 ^ 0x1\n  9918: a4 = s1 >u 0\n  9920: a0 = a4 if s1 != 0\n  9923: a5 = a2 <u 0x1\n  9926: a5 = a5 + 0xffffffffffffffff\n  9929: t2 = -a2\n  9931: a4 = t2 >u 0\n  9933: a1 = a5 >u 0\n  9935: a1 = a4 if a5 == 0\n  9938: a4 = t1\n  9940: a3 = u64 [sp + 0x2e0]\n  9944: a1 = a0 if a2 == 0\n  9947: a0 = ra | t1\n  9950: a2 = a3 | t0\n  9953: a0 = a0 | a2\n  9956: a0 = a0 <u 0x1\n  9959: a2 = u64 [sp + 0x320]\n  9963: a0 = a0 | a2\n  9966: a1 = a1 | a0\n  9969: t1 = 0 if a1 != 0\n  9971: u64 [sp + 0x2c0] = t0\n  9975: t0 = 0 if a1 != 0\n  9977: u64 [sp + 0x3a0] = t0\n  9981: u64 [sp + 0x2d8] = ra\n  9985: ra = 0 if a1 != 0\n  9987: a0 = a3\n  9989: a0 = 0 if a1 != 0\n  9991: u64 [sp + 0x290] = a4\n  9995: jump @124 if a1 != 0\n      : @119 (gas: 7)\n  9999: a2 = u64 [sp + 0x398]\n 10003: a1 = a2 ^ 0xff\n 10007: a1 = a1 | t2\n 10010: a3 = s1 | a5\n 10013: a1 = a1 | a3\n 10016: a3 = u64 [sp + 0x2b0]\n 10020: jump @127 if a1 == 0\n      : @120 (gas: 258)\n 10024: a1 = a2 + 0x1\n 10027: u64 [sp + 0x3a8] = a1\n 10031: a0 = a1 <u 0x1\n 10034: a0 = a0 + s1\n 10037: u64 [sp + 0x380] = a0\n 10041: a0 = a0 | a1\n 10044: a0 = a0 <u 0x1\n 10047: a0 = a0 + t2\n 10050: u64 [sp + 0x370] = a0\n 10054: a0 = a0 <u t2\n 10057: a0 = a0 + a5\n 10060: u64 [sp + 0x378] = a0\n 10064: t0 = 0xff - a2\n 10068: t2 = sp + 0x7ff\n 10072: t2 = t2 + 0x360\n 10076: a2 = u64 [sp + 0x2d8]\n 10080: a1 = u64 [sp + 0x2e0]\n 10084: u8 [t2 + 0x561] = a1\n 10088: u8 [t2 + 1376] = 0\n 10092: u8 [t2 + 1375] = 0\n 10096: u8 [t2 + 1374] = 0\n 10100: u8 [t2 + 1373] = 0\n 10104: u8 [t2 + 1372] = 0\n 10108: u8 [t2 + 1371] = 0\n 10112: u8 [t2 + 1370] = 0\n 10116: u8 [t2 + 1369] = 0\n 10120: u8 [t2 + 1368] = 0\n 10124: u8 [t2 + 1367] = 0\n 10128: u8 [t2 + 1366] = 0\n 10132: u8 [t2 + 1365] = 0\n 10136: u8 [t2 + 1364] = 0\n 10140: u8 [t2 + 1363] = 0\n 10144: u8 [t2 + 1362] = 0\n 10148: u8 [t2 + 1361] = 0\n 10152: u8 [t2 + 1360] = 0\n 10156: u8 [t2 + 1359] = 0\n 10160: u8 [t2 + 1358] = 0\n 10164: u8 [t2 + 1357] = 0\n 10168: u8 [t2 + 1356] = 0\n 10172: u8 [t2 + 1355] = 0\n 10176: u8 [t2 + 1354] = 0\n 10180: u8 [t2 + 1353] = 0\n 10184: u8 [t2 + 1352] = 0\n 10188: u8 [t2 + 1351] = 0\n 10192: u8 [t2 + 1350] = 0\n 10196: u8 [t2 + 1349] = 0\n 10200: u8 [t2 + 1348] = 0\n 10204: u8 [t2 + 1347] = 0\n 10208: u8 [t2 + 1346] = 0\n 10212: u8 [t2 + 1345] = 0\n 10216: u8 [t2 + 0x569] = a2\n 10220: a0 = a1 >> 0x38\n 10223: u64 [sp + 0x278] = a0\n 10227: u8 [t2 + 0x568] = a0\n 10231: a0 = a1 >> 0x30\n 10234: u64 [sp + 0x268] = a0\n 10238: u8 [t2 + 0x567] = a0\n 10242: a0 = a1 >> 0x28\n 10245: u64 [sp + 0x260] = a0\n 10249: u8 [t2 + 0x566] = a0\n 10253: a0 = a1 >> 0x20\n 10256: u64 [sp + 0x258] = a0\n 10260: u8 [t2 + 0x565] = a0\n 10264: a0 = a1 >> 0x18\n 10267: u64 [sp + 0x250] = a0\n 10271: u8 [t2 + 0x564] = a0\n 10275: a0 = a1 >> 0x10\n 10278: u64 [sp + 0x248] = a0\n 10282: u8 [t2 + 0x563] = a0\n 10286: a0 = a1 >> 0x8\n 10289: u64 [sp + 0x240] = a0\n 10293: u8 [t2 + 0x562] = a0\n 10297: a1 = u64 [sp + 0x2c0]\n 10301: u8 [t2 + 0x571] = a1\n 10305: a0 = a2 >> 0x38\n 10308: u64 [sp + 0x238] = a0\n 10312: u8 [t2 + 0x570] = a0\n 10316: a0 = a2 >> 0x30\n 10319: u64 [sp + 0x230] = a0\n 10323: u8 [t2 + 0x56f] = a0\n 10327: a0 = a2 >> 0x28\n 10330: u64 [sp + 0x228] = a0\n 10334: u8 [t2 + 0x56e] = a0\n 10338: a0 = a2 >> 0x20\n 10341: u64 [sp + 0x220] = a0\n 10345: u8 [t2 + 0x56d] = a0\n 10349: a0 = a2 >> 0x18\n 10352: u64 [sp + 0x218] = a0\n 10356: u8 [t2 + 0x56c] = a0\n 10360: a0 = a2 >> 0x10\n 10363: u64 [sp + 0x210] = a0\n 10367: u8 [t2 + 0x56b] = a0\n 10371: a0 = a2 >> 0x8\n 10374: u64 [sp + 0x208] = a0\n 10378: u8 [t2 + 0x56a] = a0\n 10382: u8 [t2 + 0x579] = a4\n 10386: a0 = a1 >> 0x38\n 10389: u64 [sp + 0x1d0] = a0\n 10393: u8 [t2 + 0x578] = a0\n 10397: a0 = a1 >> 0x30\n 10400: u64 [sp + 0x1c8] = a0\n 10404: u8 [t2 + 0x577] = a0\n 10408: a0 = a1 >> 0x28\n 10411: u64 [sp + 0x1c0] = a0\n 10415: u8 [t2 + 0x576] = a0\n 10419: a0 = a1 >> 0x20\n 10422: u64 [sp + 0x1b8] = a0\n 10426: u8 [t2 + 0x575] = a0\n 10430: a0 = a1 >> 0x18\n 10433: u64 [sp + 0x1b0] = a0\n 10437: u8 [t2 + 0x574] = a0\n 10441: a0 = a1 >> 0x10\n 10444: u64 [sp + 0x360] = a0\n 10448: u8 [t2 + 0x573] = a0\n 10452: a0 = a1 >> 0x8\n 10455: u64 [sp + 0x358] = a0\n 10459: u8 [t2 + 0x572] = a0\n 10463: a0 = a4 >> 0x38\n 10466: u64 [sp + 0x350] = a0\n 10470: u8 [t2 + 0x580] = a0\n 10474: a0 = a4 >> 0x30\n 10477: u64 [sp + 0x348] = a0\n 10481: u8 [t2 + 0x57f] = a0\n 10485: a0 = a4 >> 0x28\n 10488: u64 [sp + 0x318] = a0\n 10492: u8 [t2 + 0x57e] = a0\n 10496: a0 = a4 >> 0x20\n 10499: u64 [sp + 0x310] = a0\n 10503: u8 [t2 + 0x57d] = a0\n 10507: a0 = a4 >> 0x18\n 10510: u64 [sp + 0x308] = a0\n 10514: u8 [t2 + 0x57c] = a0\n 10518: a0 = a4 >> 0x10\n 10521: u64 [sp + 0x300] = a0\n 10525: u8 [t2 + 0x57b] = a0\n 10529: a0 = a4 >> 0x8\n 10532: u64 [sp + 0x288] = a0\n 10536: u8 [t2 + 0x57a] = a0\n 10540: a1 = t0 << 0x38\n 10543: a1 = a1 >> 0x3b\n 10546: a4 = sp + 0x10c0\n 10550: a4 = a4 - a1\n 10553: a1 = u8 [a4 + 0x19]\n 10556: a2 = u8 [a4 + 0x18]\n 10559: a3 = u8 [a4 + 0x1a]\n 10562: a5 = u8 [a4 + 0x1b]\n 10565: a1 = a1 << 0x8\n 10568: a1 = a1 | a2\n 10571: a3 = a3 << 0x10\n 10574: a5 = a5 << 0x18\n 10577: a3 = a3 | a5\n 10580: a1 = a1 | a3\n 10583: a2 = u8 [a4 + 0x1d]\n 10586: a3 = u8 [a4 + 0x1c]\n 10589: a5 = u8 [a4 + 0x1e]\n 10592: s1 = u8 [a4 + 0x1f]\n 10595: a2 = a2 << 0x8\n 10598: a2 = a2 | a3\n 10601: a5 = a5 << 0x10\n 10604: s1 = s1 << 0x18\n 10607: a5 = a5 | s1\n 10610: a2 = a2 | a5\n 10613: a2 = a2 << 0x20\n 10616: a1 = a1 | a2\n 10619: a2 = u8 [a4 + 0x11]\n 10622: a3 = u8 [a4 + 0x10]\n 10625: a5 = u8 [a4 + 0x12]\n 10628: s1 = u8 [a4 + 0x13]\n 10631: a2 = a2 << 0x8\n 10634: a2 = a2 | a3\n 10637: a5 = a5 << 0x10\n 10640: s1 = s1 << 0x18\n 10643: a5 = a5 | s1\n 10646: a2 = a2 | a5\n 10649: a3 = u8 [a4 + 0x15]\n 10652: a5 = u8 [a4 + 0x14]\n 10655: s1 = u8 [a4 + 0x16]\n 10658: a0 = u8 [a4 + 0x17]\n 10661: a3 = a3 << 0x8\n 10664: a3 = a3 | a5\n 10667: s1 = s1 << 0x10\n 10670: a0 = a0 << 0x18\n 10673: a0 = a0 | s1\n 10676: a0 = a0 | a3\n 10679: a0 = a0 << 0x20\n 10682: t1 = a0 | a2\n 10685: a0 = t0 & 0x7\n 10688: a2 = a1 << a0\n 10691: a5 = t1 >> 0x1\n 10694: t0 = a0 ^ 0x3f\n 10697: a5 = a5 >> t0\n 10700: a2 = a2 | a5\n 10703: u64 [sp + 0x3a0] = a2\n 10707: a2 = u8 [a4 + 0x9]\n 10710: a5 = u8 [a4 + 0x8]\n 10713: s1 = u8 [a4 + 0xa]\n 10716: a1 = u8 [a4 + 0xb]\n 10719: a2 = a2 << 0x8\n 10722: a2 = a2 | a5\n 10725: s1 = s1 << 0x10\n 10728: a1 = a1 << 0x18\n 10731: a1 = a1 | s1\n 10734: a1 = a1 | a2\n 10737: a2 = u8 [a4 + 0xd]\n 10740: a5 = u8 [a4 + 0xc]\n 10743: s1 = u8 [a4 + 0xe]\n 10746: a3 = u8 [a4 + 0xf]\n 10749: a2 = a2 << 0x8\n 10752: a2 = a2 | a5\n 10755: s1 = s1 << 0x10\n 10758: a3 = a3 << 0x18\n 10761: a3 = a3 | s1\n 10764: a2 = a2 | a3\n 10767: a2 = a2 << 0x20\n 10770: a5 = a2 | a1\n 10773: a1 = a5 >> 0x1\n 10776: a2 = a0 ^ 0xffffffffffffffff\n 10779: a1 = a1 >> a2\n 10782: a2 = t1 << a0\n 10785: a1 = a1 | a2\n 10788: u64 [sp + 0x388] = a1\n 10792: a1 = u8 [a4 + 0x1]\n 10795: a2 = u8 [a4]\n 10797: a3 = u8 [a4 + 0x2]\n 10800: s1 = u8 [a4 + 0x3]\n 10803: a1 = a1 << 0x8\n 10806: a1 = a1 | a2\n 10809: a3 = a3 << 0x10\n 10812: s1 = s1 << 0x18\n 10815: a3 = a3 | s1\n 10818: a1 = a1 | a3\n 10821: a2 = u8 [a4 + 0x5]\n 10824: a3 = u8 [a4 + 0x4]\n 10827: s1 = u8 [a4 + 0x6]\n 10830: a4 = u8 [a4 + 0x7]\n 10833: a2 = a2 << 0x8\n 10836: a2 = a2 | a3\n 10839: s1 = s1 << 0x10\n 10842: a4 = a4 << 0x18\n 10845: a4 = a4 | s1\n 10848: s1 = u64 [sp + 0x380]\n 10852: a2 = a2 | a4\n 10855: a4 = u64 [sp + 0x370]\n 10859: a2 = a2 << 0x20\n 10862: a1 = a1 | a2\n 10865: a2 = a1 >> 0x1\n 10868: a2 = a2 >> t0\n 10871: a3 = a5 << a0\n 10874: a5 = u64 [sp + 0x378]\n 10878: a2 = a2 | a3\n 10881: u64 [sp + 0x390] = a2\n 10885: a2 = s1 | a5\n 10888: a3 = u64 [sp + 0x3a8]\n 10892: a3 = a3 | a4\n 10895: a2 = a2 | a3\n 10898: a0 = a1 << a0\n 10901: u64 [sp + 0x398] = a0\n 10905: jump @125 if a2 == 0\n      : @121 (gas: 227)\n 10909: u64 [sp + 424] = 0\n 10913: u64 [sp + 872] = 0\n 10917: a0 = u64 [sp + 0x278]\n 10921: u8 [t2 + 0x508] = a0\n 10925: a0 = u64 [sp + 0x268]\n 10929: u8 [t2 + 0x507] = a0\n 10933: a0 = u64 [sp + 0x260]\n 10937: u8 [t2 + 0x506] = a0\n 10941: a0 = u64 [sp + 0x258]\n 10945: u8 [t2 + 0x505] = a0\n 10949: a0 = u64 [sp + 0x250]\n 10953: u8 [t2 + 0x504] = a0\n 10957: a0 = u64 [sp + 0x248]\n 10961: u8 [t2 + 0x503] = a0\n 10965: a0 = u64 [sp + 0x240]\n 10969: u8 [t2 + 0x502] = a0\n 10973: a0 = u64 [sp + 0x238]\n 10977: u8 [t2 + 0x510] = a0\n 10981: a0 = u64 [sp + 0x230]\n 10985: u8 [t2 + 0x50f] = a0\n 10989: a0 = u64 [sp + 0x228]\n 10993: u8 [t2 + 0x50e] = a0\n 10997: a0 = u64 [sp + 0x220]\n 11001: u8 [t2 + 0x50d] = a0\n 11005: a0 = u64 [sp + 0x218]\n 11009: u8 [t2 + 0x50c] = a0\n 11013: a0 = u64 [sp + 0x210]\n 11017: u8 [t2 + 0x50b] = a0\n 11021: a0 = u64 [sp + 0x208]\n 11025: u8 [t2 + 0x50a] = a0\n 11029: a0 = u64 [sp + 0x1d0]\n 11033: u8 [t2 + 0x518] = a0\n 11037: a0 = u64 [sp + 0x1c8]\n 11041: u8 [t2 + 0x517] = a0\n 11045: a0 = u64 [sp + 0x1c0]\n 11049: u8 [t2 + 0x516] = a0\n 11053: a0 = u64 [sp + 0x1b8]\n 11057: u8 [t2 + 0x515] = a0\n 11061: a0 = u64 [sp + 0x1b0]\n 11065: u8 [t2 + 0x514] = a0\n 11069: u8 [t2 + 1344] = 0\n 11073: u8 [t2 + 1343] = 0\n 11077: u8 [t2 + 1342] = 0\n 11081: u8 [t2 + 1341] = 0\n 11085: u8 [t2 + 1340] = 0\n 11089: u8 [t2 + 1339] = 0\n 11093: u8 [t2 + 1338] = 0\n 11097: u8 [t2 + 1337] = 0\n 11101: u8 [t2 + 1336] = 0\n 11105: u8 [t2 + 1335] = 0\n 11109: u8 [t2 + 1334] = 0\n 11113: u8 [t2 + 1333] = 0\n 11117: u8 [t2 + 1332] = 0\n 11121: u8 [t2 + 1331] = 0\n 11125: u8 [t2 + 1330] = 0\n 11129: u8 [t2 + 1329] = 0\n 11133: u8 [t2 + 1328] = 0\n 11137: u8 [t2 + 1327] = 0\n 11141: u8 [t2 + 1326] = 0\n 11145: u8 [t2 + 1325] = 0\n 11149: u8 [t2 + 1324] = 0\n 11153: u8 [t2 + 1323] = 0\n 11157: u8 [t2 + 1322] = 0\n 11161: u8 [t2 + 1321] = 0\n 11165: u8 [t2 + 1320] = 0\n 11169: u8 [t2 + 1319] = 0\n 11173: u8 [t2 + 1318] = 0\n 11177: u8 [t2 + 1317] = 0\n 11181: u8 [t2 + 1316] = 0\n 11185: u8 [t2 + 1315] = 0\n 11189: u8 [t2 + 1314] = 0\n 11193: u8 [t2 + 1313] = 0\n 11197: a0 = u64 [sp + 0x2e0]\n 11201: u8 [t2 + 0x501] = a0\n 11205: a0 = u64 [sp + 0x2d8]\n 11209: u8 [t2 + 0x509] = a0\n 11213: a0 = u64 [sp + 0x2c0]\n 11217: u8 [t2 + 0x511] = a0\n 11221: a0 = u64 [sp + 0x290]\n 11225: u8 [t2 + 0x519] = a0\n 11229: a0 = u64 [sp + 0x360]\n 11233: u8 [t2 + 0x513] = a0\n 11237: a0 = u64 [sp + 0x358]\n 11241: u8 [t2 + 0x512] = a0\n 11245: a0 = u64 [sp + 0x350]\n 11249: u8 [t2 + 0x520] = a0\n 11253: a0 = u64 [sp + 0x348]\n 11257: u8 [t2 + 0x51f] = a0\n 11261: a0 = u64 [sp + 0x318]\n 11265: u8 [t2 + 0x51e] = a0\n 11269: a0 = u64 [sp + 0x310]\n 11273: u8 [t2 + 0x51d] = a0\n 11277: a0 = u64 [sp + 0x308]\n 11281: u8 [t2 + 0x51c] = a0\n 11285: a0 = u64 [sp + 0x300]\n 11289: u8 [t2 + 0x51b] = a0\n 11293: a0 = u64 [sp + 0x288]\n 11297: u8 [t2 + 0x51a] = a0\n 11301: s1 = u64 [sp + 0x3a8]\n 11305: a0 = s1 << 0x38\n 11308: a0 = a0 >> 0x3b\n 11311: a1 = sp + 0x1060\n 11315: a1 = a1 + a0\n 11318: a0 = u8 [a1 + 0x11]\n 11321: a2 = u8 [a1 + 0x10]\n 11324: a3 = u8 [a1 + 0x12]\n 11327: a4 = u8 [a1 + 0x13]\n 11330: a0 = a0 << 0x8\n 11333: a0 = a0 | a2\n 11336: a3 = a3 << 0x10\n 11339: a4 = a4 << 0x18\n 11342: a3 = a3 | a4\n 11345: a0 = a0 | a3\n 11348: a2 = u8 [a1 + 0x15]\n 11351: a3 = u8 [a1 + 0x14]\n 11354: a4 = u8 [a1 + 0x16]\n 11357: a5 = u8 [a1 + 0x17]\n 11360: a2 = a2 << 0x8\n 11363: a2 = a2 | a3\n 11366: a4 = a4 << 0x10\n 11369: a5 = a5 << 0x18\n 11372: a4 = a4 | a5\n 11375: a2 = a2 | a4\n 11378: a2 = a2 << 0x20\n 11381: t2 = a2 | a0\n 11384: s1 = s1 & 0x7\n 11387: t1 = t2 >> s1\n 11390: a2 = u8 [a1 + 0x19]\n 11393: a3 = u8 [a1 + 0x18]\n 11396: a4 = u8 [a1 + 0x1a]\n 11399: a5 = u8 [a1 + 0x1b]\n 11402: a2 = a2 << 0x8\n 11405: a2 = a2 | a3\n 11408: a4 = a4 << 0x10\n 11411: a5 = a5 << 0x18\n 11414: a4 = a4 | a5\n 11417: a2 = a2 | a4\n 11420: a3 = u8 [a1 + 0x1d]\n 11423: a4 = u8 [a1 + 0x1c]\n 11426: a5 = u8 [a1 + 0x1e]\n 11429: a0 = u8 [a1 + 0x1f]\n 11432: a3 = a3 << 0x8\n 11435: a3 = a3 | a4\n 11438: a5 = a5 << 0x10\n 11441: a0 = a0 << 0x18\n 11444: a0 = a0 | a5\n 11447: a0 = a0 | a3\n 11450: a0 = a0 << 0x20\n 11453: t0 = a0 | a2\n 11456: a0 = t0 << 0x1\n 11459: ra = s1 ^ 0x3f\n 11462: a0 = a0 << ra\n 11465: a0 = t1 | a0\n 11468: u64 [sp + 0x360] = a0\n 11472: a0 = u8 [a1 + 0x9]\n 11475: a3 = u8 [a1 + 0x8]\n 11478: a4 = u8 [a1 + 0xa]\n 11481: a5 = u8 [a1 + 0xb]\n 11484: a0 = a0 << 0x8\n 11487: a0 = a0 | a3\n 11490: a4 = a4 << 0x10\n 11493: a5 = a5 << 0x18\n 11496: a4 = a4 | a5\n 11499: a0 = a0 | a4\n 11502: a3 = u8 [a1 + 0xd]\n 11505: a4 = u8 [a1 + 0xc]\n 11508: a5 = u8 [a1 + 0xe]\n 11511: a2 = u8 [a1 + 0xf]\n 11514: a3 = a3 << 0x8\n 11517: a3 = a3 | a4\n 11520: a5 = a5 << 0x10\n 11523: a2 = a2 << 0x18\n 11526: a2 = a2 | a5\n 11529: a2 = a2 | a3\n 11532: a2 = a2 << 0x20\n 11535: a0 = a0 | a2\n 11538: a2 = a0 >> s1\n 11541: t2 = t2 << 0x1\n 11544: a3 = s1 ^ 0xffffffffffffffff\n 11547: a3 = t2 << a3\n 11550: t1 = a2 | a3\n 11553: a2 = u8 [a1 + 0x1]\n 11556: a3 = u8 [a1]\n 11558: a4 = u8 [a1 + 0x2]\n 11561: a5 = u8 [a1 + 0x3]\n 11564: a2 = a2 << 0x8\n 11567: a2 = a2 | a3\n 11570: a4 = a4 << 0x10\n 11573: a5 = a5 << 0x18\n 11576: a4 = a4 | a5\n 11579: a2 = a2 | a4\n 11582: a3 = u8 [a1 + 0x5]\n 11585: a4 = u8 [a1 + 0x4]\n 11588: a5 = u8 [a1 + 0x6]\n 11591: a1 = u8 [a1 + 0x7]\n 11594: a3 = a3 << 0x8\n 11597: a3 = a3 | a4\n 11600: a5 = a5 << 0x10\n 11603: a1 = a1 << 0x18\n 11606: a1 = a1 | a5\n 11609: a1 = a1 | a3\n 11612: a1 = a1 << 0x20\n 11615: a1 = a1 | a2\n 11618: a1 = a1 >> s1\n 11621: a0 = a0 << 0x1\n 11624: a0 = a0 << ra\n 11627: ra = a1 | a0\n 11630: t0 = t0 >> s1\n 11633: t2 = u64 [sp + 0x1a8]\n 11637: a1 = u64 [sp + 0x3c0]\n 11641: a0 = a1 <u 0x1\n 11644: a2 = u64 [sp + 0x3d0]\n 11648: a0 = a2 - a0\n 11651: u64 [sp + 0x318] = a0\n 11655: a0 = a1 | a2\n 11658: a0 = a0 <u 0x1\n 11661: a2 = u64 [sp + 0x3c8]\n 11665: a3 = a2 - a0\n 11668: u64 [sp + 0x310] = a3\n 11672: a0 = a2 <u a0\n 11675: a2 = u64 [sp + 0x3d8]\n 11679: a2 = a2 - a0\n 11682: u64 [sp + 0x308] = a2\n 11686: a1 = a1 + 0xffffffffffffffff\n 11689: u64 [sp + 0x300] = a1\n 11693: a3 = u64 [sp + 0x3a0]\n 11697: fallthrough\n      : @122 (gas: 103)\n 11698: u64 [sp + 840] = 0\n 11702: a0 = ra >> 0x3f\n 11705: s1 = t1 << 0x1\n 11708: s1 = s1 | a0\n 11711: ra = ra << 0x1\n 11714: a0 = a3 >> 0x3f\n 11717: a4 = ra | a0\n 11720: a1 = u64 [sp + 0x318]\n 11724: a0 = a1 ^ s1\n 11727: a2 = a1 <u s1\n 11730: a1 = u64 [sp + 0x300]\n 11734: a5 = a1 <u a4\n 11737: a1 = t1\n 11739: t1 = a4\n 11741: u64 [sp + 0x350] = a4\n 11745: a5 = a2 if a0 != 0\n 11748: t0 = t0 << 0x1\n 11751: a4 = u64 [sp + 0x360]\n 11755: a0 = a4 >> 0x3f\n 11758: ra = t0 | a0\n 11761: u64 [sp + 0x358] = ra\n 11765: a2 = a1 >> 0x3f\n 11768: a4 = a4 << 0x1\n 11771: a2 = a2 | a4\n 11774: a4 = a3 << 0x1\n 11777: a0 = u64 [sp + 0x388]\n 11781: a1 = a0 >> 0x3f\n 11784: t0 = a4 | a1\n 11787: a4 = a0 << 0x1\n 11790: a1 = u64 [sp + 0x390]\n 11794: a0 = a1 >> 0x3f\n 11797: a0 = a0 | a4\n 11800: a1 = a1 << 0x1\n 11803: a4 = u64 [sp + 0x398]\n 11807: a3 = a4 >> 0x3f\n 11810: a3 = a3 | a1\n 11813: a4 = a4 << 0x1\n 11816: a4 = t2 | a4\n 11819: u64 [sp + 0x398] = a4\n 11823: a4 = u64 [sp + 0x368]\n 11827: a3 = a3 | a4\n 11830: u64 [sp + 0x390] = a3\n 11834: a0 = a0 | a4\n 11837: u64 [sp + 0x388] = a0\n 11841: a0 = a4 | t0\n 11844: u64 [sp + 0x3a0] = a0\n 11848: a1 = u64 [sp + 0x310]\n 11852: a0 = a1 - a2\n 11855: a0 = a0 <u a5\n 11858: a1 = a1 <u a2\n 11861: a3 = u64 [sp + 0x308]\n 11865: a3 = a3 - ra\n 11868: a3 = a3 - a1\n 11871: a3 = a3 - a0\n 11874: a5 = a3 >>a 0x3f\n 11877: a0 = u64 [sp + 0x3c0]\n 11881: ra = a5 & a0\n 11884: a1 = u64 [sp + 0x3d0]\n 11888: a1 = a1 & a5\n 11891: t2 = s1 ^ a1\n 11894: a4 = s1 <u a1\n 11897: a3 = t1 <u ra\n 11900: a4 = a3 if t2 == 0\n 11903: a0 = u64 [sp + 0x3c8]\n 11907: t2 = a5 & a0\n 11910: t1 = a2 - t2\n 11913: t0 = t1 - a4\n 11916: u64 [sp + 0x360] = t0\n 11920: t1 = t1 <u a4\n 11923: a2 = a2 <u t2\n 11926: a4 = u64 [sp + 0x3d8]\n 11930: a4 = a4 & a5\n 11933: a0 = u64 [sp + 0x358]\n 11937: a4 = a0 - a4\n 11940: a4 = a4 - a2\n 11943: t0 = a4 - t1\n 11946: s1 = s1 - a1\n 11949: t1 = s1 - a3\n 11952: a0 = u64 [sp + 0x350]\n 11956: ra = a0 - ra\n 11959: a3 = u64 [sp + 0x3a8]\n 11963: a4 = u64 [sp + 0x380]\n 11967: a0 = a3 | a4\n 11970: a0 = a0 <u 0x1\n 11973: a2 = u64 [sp + 0x370]\n 11977: a1 = a2 <u a0\n 11980: a0 = a2 - a0\n 11983: a2 = a3 <u 0x1\n 11986: a4 = a4 - a2\n 11989: a2 = u64 [sp + 0x378]\n 11993: a2 = a2 - a1\n 11996: a3 = a3 + 0xffffffffffffffff\n 11999: u64 [sp + 0x380] = a4\n 12003: u64 [sp + 0x378] = a2\n 12007: a1 = a4 | a2\n 12010: u64 [sp + 0x3a8] = a3\n 12014: a2 = a3 | a0\n 12017: a3 = u64 [sp + 0x3a0]\n 12021: a1 = a1 | a2\n 12024: t2 = a5 & 0x1\n 12027: u64 [sp + 0x370] = a0\n 12031: u64 [sp + 872] = 0\n 12035: jump @122 if a1 != 0\n      : @123 (gas: 1)\n 12039: jump @126\n      : @124 (gas: 2)\n 12041: a3 = u64 [sp + 0x2b0]\n 12045: jump @127\n      : @125 (gas: 4)\n 12047: t2 = 0\n 12049: u64 [sp + 840] = 0\n 12053: a3 = u64 [sp + 0x3a0]\n 12057: fallthrough\n      : @126 (gas: 22)\n 12058: a1 = u64 [sp + 0x388]\n 12062: a0 = a1 >> 0x3f\n 12065: a2 = a3 << 0x1\n 12068: a3 = a2 | a0\n 12071: a5 = u64 [sp + 0x390]\n 12075: a0 = a5 >> 0x3f\n 12078: a2 = a1 << 0x1\n 12081: a4 = a2 | a0\n 12084: a0 = u64 [sp + 0x398]\n 12088: a2 = a0 >> 0x3f\n 12091: a5 = a5 << 0x1\n 12094: a0 = a0 << 0x1\n 12097: a0 = t2 | a0\n 12100: s1 = u64 [sp + 0x348]\n 12104: a2 = a2 | s1\n 12107: ra = a2 | a5\n 12110: a1 = s1 | a4\n 12113: u64 [sp + 0x3a0] = a1\n 12117: t1 = s1 | a3\n 12120: a3 = u64 [sp + 0x2b0]\n 12124: a4 = u64 [sp + 0x290]\n 12128: fallthrough\n      : @127 (gas: 140)\n 12129: u64 [sp + 0x390] = t1\n 12133: u64 [sp + 632] = 0\n 12137: u64 [sp + 560] = 0\n 12141: u64 [sp + 576] = 0\n 12145: u64 [sp + 568] = 0\n 12149: t1 = a0\n 12151: a0 = u64 [sp + 0x298]\n 12155: a2 = u64 [sp + 0x2e0]\n 12159: s1 = a2 <u a0\n 12162: a0 = u64 [sp + 0x2b8]\n 12166: t0 = a3\n 12168: a1 = u64 [sp + 0x2d8]\n 12172: a3 = a1 ^ a0\n 12175: a5 = a1 <u a0\n 12178: a5 = s1 if a3 == 0\n 12181: a0 = u64 [sp + 0x2a0]\n 12185: a3 = a4 ^ a0\n 12188: a4 = a4 <u a0\n 12191: a0 = u64 [sp + 0x2c0]\n 12195: s1 = a0 <u t0\n 12198: a4 = s1 if a3 == 0\n 12201: s1 = a0 ^ t0\n 12204: a3 = a3 | s1\n 12207: a4 = a5 if a3 == 0\n 12210: u64 [sp + 0x398] = a4\n 12214: t0 = u64 [sp + 0x3c0]\n 12218: a3 = t0 mulhu t1\n 12221: t2 = u64 [sp + 0x3d0]\n 12225: a5 = t2 * t1\n 12228: a3 = a3 + a5\n 12231: a5 = a3 <u a5\n 12234: s1 = t2 mulhu t1\n 12237: s1 = s1 + a5\n 12240: a5 = t0 * ra\n 12243: a3 = a3 + a5\n 12246: u64 [sp + 0x3a8] = a3\n 12250: a5 = a3 <u a5\n 12253: a4 = t0 mulhu ra\n 12256: a4 = a4 + a5\n 12259: a4 = a4 + s1\n 12262: a5 = a4 <u s1\n 12265: s1 = t2 mulhu ra\n 12268: a5 = a5 + s1\n 12271: s1 = t2 * ra\n 12274: a4 = a4 + s1\n 12277: s1 = a4 <u s1\n 12280: a5 = a5 + s1\n 12283: u64 [sp + 0x388] = a5\n 12287: a1 = u64 [sp + 0x3a0]\n 12291: s1 = a1 * t2\n 12294: a3 = a2\n 12296: a2 = a1 mulhu t0\n 12299: a2 = a2 + s1\n 12302: a0 = u64 [sp + 0x390]\n 12306: s1 = a0 * t0\n 12309: a2 = a2 + s1\n 12312: u64 [sp + 0x390] = a2\n 12316: a2 = u64 [sp + 0x3c8]\n 12320: s1 = t1 mulhu a2\n 12323: a0 = u64 [sp + 0x3d8]\n 12327: a5 = t1 * a0\n 12330: a5 = a5 + s1\n 12333: a0 = a2\n 12335: s1 = ra * a2\n 12338: a5 = a5 + s1\n 12341: a2 = u64 [sp + 0x390]\n 12345: a2 = a2 + a5\n 12348: a5 = a1 * t0\n 12351: s1 = t1 * a0\n 12354: s1 = s1 + a5\n 12357: a5 = s1 <u a5\n 12360: a2 = a2 + a5\n 12363: a0 = u64 [sp + 0x388]\n 12367: a2 = a2 + a0\n 12370: s1 = s1 + a4\n 12373: a4 = s1 <u a4\n 12376: ra = u64 [sp + 0x2c0]\n 12380: a2 = a2 + a4\n 12383: u64 [sp + 0x390] = a2\n 12387: a2 = t0 * t1\n 12390: u64 [sp + 0x3a0] = a2\n 12394: a0 = u64 [sp + 0x3a8]\n 12398: a1 = u64 [sp + 0x2d8]\n 12402: a4 = a1 ^ a0\n 12405: a5 = a1 <u a0\n 12408: a0 = a3 <u a2\n 12411: a5 = a0 if a4 == 0\n 12414: a4 = ra <u s1\n 12417: s1 = ra - s1\n 12420: a2 = s1 <u a5\n 12423: a2 = a2 + a4\n 12426: t1 = u64 [sp + 0x290]\n 12430: a4 = u64 [sp + 0x390]\n 12434: a4 = t1 - a4\n 12437: a4 = a4 - a2\n 12440: u64 [sp + 0x390] = a4\n 12444: s1 = s1 - a5\n 12447: u64 [sp + 0x388] = s1\n 12451: a2 = u64 [sp + 0x3a8]\n 12455: a2 = a1 - a2\n 12458: a2 = a2 - a0\n 12461: u64 [sp + 0x3a8] = a2\n 12465: a4 = a3 <u t0\n 12468: a3 = a1 ^ t2\n 12471: a5 = a1 <u t2\n 12474: a5 = a4 if a3 == 0\n 12477: a0 = u64 [sp + 0x3c8]\n 12481: a2 = ra - a0\n 12484: a3 = a2 - a5\n 12487: s1 = a2 <u a5\n 12490: a5 = ra <u a0\n 12493: a2 = u64 [sp + 0x3d8]\n 12497: a2 = t1 - a2\n 12500: a2 = a2 - a5\n 12503: a5 = a2 - s1\n 12506: a2 = a1 - t2\n 12509: a2 = a2 - a4\n 12512: a4 = u64 [sp + 0x398]\n 12516: a0 = u64 [sp + 0x390]\n 12520: a5 = a0 if a4 == 0\n 12523: u64 [sp + 0x298] = a5\n 12527: a0 = u64 [sp + 0x388]\n 12531: a3 = a0 if a4 == 0\n 12534: u64 [sp + 0x2b0] = a3\n 12538: a0 = u64 [sp + 0x2e0]\n 12542: a1 = u64 [sp + 0x3a0]\n 12546: a3 = a0 - a1\n 12549: a0 = a0 - t0\n 12552: a0 = a3 if a4 == 0\n 12555: u64 [sp + 0x2e0] = a0\n 12559: a0 = u64 [sp + 0x3a8]\n 12563: a2 = a0 if a4 == 0\n 12566: u64 [sp + 0x2b8] = a2\n 12570: t1 = sp + 0x7ff\n 12574: t1 = t1 + 0x360\n 12578: a5 = u64 [sp + 0x2f8]\n 12582: ra = u64 [sp + 0x2f0]\n 12586: a2 = u64 [sp + 0x2e8]\n 12590: s1 = u64 [sp + 0x2d0]\n 12594: jump @132\n      : @128 (gas: 4)\n 12597: a5 = 0\n 12599: u64 [sp + 792] = 0\n 12603: s1 = u64 [sp + 0x3a0]\n 12607: fallthrough\n      : @129 (gas: 24)\n 12608: a2 = u64 [sp + 0x398]\n 12612: a0 = a2 >> 0x3f\n 12615: a1 = s1 << 0x1\n 12618: a1 = a1 | a0\n 12621: a4 = u64 [sp + 0x388]\n 12625: a0 = a4 >> 0x3f\n 12628: a2 = a2 << 0x1\n 12631: a3 = a2 | a0\n 12634: a0 = u64 [sp + 0x390]\n 12638: a2 = a0 >> 0x3f\n 12641: a4 = a4 << 0x1\n 12644: a0 = a0 << 0x1\n 12647: a0 = a0 | a5\n 12650: u64 [sp + 0x398] = a0\n 12654: a5 = u64 [sp + 0x318]\n 12658: a2 = a2 | a5\n 12661: ra = a2 | a4\n 12664: a0 = a5 | a3\n 12667: u64 [sp + 0x3a0] = a0\n 12671: a1 = a1 | a5\n 12674: u64 [sp + 0x3a8] = a1\n 12678: t1 = u64 [sp + 0x2d0]\n 12682: t0 = u64 [sp + 0x2c0]\n 12686: fallthrough\n      : @130 (gas: 153)\n 12687: a1 = u64 [sp + 0x2d8]\n 12691: a1 = t1 <u a1\n 12694: a4 = u64 [sp + 0x2a0]\n 12698: a3 = t0 ^ a4\n 12701: a4 = t0 <u a4\n 12704: a4 = a1 if a3 == 0\n 12707: a5 = u64 [sp + 0x2e8]\n 12711: a3 = u64 [sp + 0x288]\n 12715: a1 = a5 ^ a3\n 12718: s1 = a5 <u a3\n 12721: a0 = u64 [sp + 0x2f0]\n 12725: a3 = u64 [sp + 0x290]\n 12729: a5 = a0 <u a3\n 12732: s1 = a5 if a1 == 0\n 12735: a5 = a0 ^ a3\n 12738: a1 = a1 | a5\n 12741: s1 = a4 if a1 == 0\n 12744: u64 [sp + 0x390] = s1\n 12748: a1 = u64 [sp + 0x228]\n 12752: a0 = a1 <u 0x13\n 12755: a1 = u64 [sp + 0x230]\n 12759: a0 = 0 if a1 != 0\n 12761: u64 [sp + 0x370] = a0\n 12765: s1 = ra\n 12767: a0 = u64 [sp + 0x278]\n 12771: ra = a0 <u 0x1\n 12774: a1 = a1 + ra\n 12777: u64 [sp + 0x388] = a1\n 12781: a1 = a1 | a0\n 12784: a4 = a1 <u 0x1\n 12787: a3 = u64 [sp + 0x240]\n 12791: a4 = a4 + a3\n 12794: u64 [sp + 0x380] = a4\n 12798: a1 = a4 <u a3\n 12801: a4 = u64 [sp + 0x238]\n 12805: a3 = a3 | a4\n 12808: u64 [sp + 0x368] = a3\n 12812: a1 = a1 + a4\n 12815: u64 [sp + 0x378] = a1\n 12819: a0 = u64 [sp + 0x3c0]\n 12823: t1 = u64 [sp + 0x398]\n 12827: a2 = a0 mulhu t1\n 12830: a3 = a0\n 12832: a5 = u64 [sp + 0x3a0]\n 12836: t2 = u64 [sp + 0x3d0]\n 12840: t0 = t2 * t1\n 12843: a0 = t0 + a2\n 12846: a2 = a0 <u t0\n 12849: a1 = t2 mulhu t1\n 12852: a1 = a1 + a2\n 12855: t0 = a3\n 12857: a2 = a3 * s1\n 12860: a0 = a0 + a2\n 12863: u64 [sp + 0x360] = a0\n 12867: a2 = a0 <u a2\n 12870: a4 = a3 mulhu s1\n 12873: a2 = a2 + a4\n 12876: a2 = a2 + a1\n 12879: a1 = a2 <u a1\n 12882: a4 = t2 mulhu s1\n 12885: a1 = a1 + a4\n 12888: a4 = t2 * s1\n 12891: a2 = a2 + a4\n 12894: a4 = a2 <u a4\n 12897: a1 = a1 + a4\n 12900: u64 [sp + 0x358] = a1\n 12904: a1 = a5\n 12906: a4 = a5 * t2\n 12909: a3 = a5 mulhu a3\n 12912: a3 = a3 + a4\n 12915: a4 = u64 [sp + 0x3a8]\n 12919: a4 = a4 * t0\n 12922: a3 = a3 + a4\n 12925: ra = u64 [sp + 0x3c8]\n 12929: a4 = t1 mulhu ra\n 12932: a0 = u64 [sp + 0x3d8]\n 12936: a5 = t1 * a0\n 12939: a4 = a4 + a5\n 12942: a5 = s1 * ra\n 12945: a4 = a4 + a5\n 12948: a3 = a3 + a4\n 12951: a4 = a1 * t0\n 12954: a5 = t1 * ra\n 12957: a5 = a5 + a4\n 12960: a4 = a5 <u a4\n 12963: a3 = a3 + a4\n 12966: a1 = u64 [sp + 0x358]\n 12970: a1 = a1 + a3\n 12973: a5 = a5 + a2\n 12976: a2 = a5 <u a2\n 12979: a1 = a1 + a2\n 12982: s1 = t0 * t1\n 12985: u64 [sp + 0x3a8] = s1\n 12989: t0 = u64 [sp + 0x2c0]\n 12993: a4 = u64 [sp + 0x360]\n 12997: a0 = t0 ^ a4\n 13000: a3 = t0 <u a4\n 13003: t1 = a4\n 13005: a2 = u64 [sp + 0x2d0]\n 13009: a4 = a2 <u s1\n 13012: a3 = a4 if a0 == 0\n 13015: a0 = u64 [sp + 0x2f0]\n 13019: s1 = a0 <u a5\n 13022: a5 = a0 - a5\n 13025: a0 = a5 <u a3\n 13028: a0 = a0 + s1\n 13031: s1 = u64 [sp + 0x2e8]\n 13035: a1 = s1 - a1\n 13038: a1 = a1 - a0\n 13041: u64 [sp + 0x3a0] = a1\n 13045: a5 = a5 - a3\n 13048: a0 = t0 - t1\n 13051: a0 = a0 - a4\n 13054: u64 [sp + 0x398] = a0\n 13058: a1 = u64 [sp + 0x3c0]\n 13062: a0 = a2 <u a1\n 13065: t1 = a2\n 13067: a3 = t0 ^ t2\n 13070: a4 = t0 <u t2\n 13073: a4 = a0 if a3 == 0\n 13076: a2 = u64 [sp + 0x3d8]\n 13080: a3 = s1 - a2\n 13083: a2 = u64 [sp + 0x2f0]\n 13087: s1 = a2 <u ra\n 13090: s1 = a3 - s1\n 13093: a3 = a2 - ra\n 13096: ra = a3 <u a4\n 13099: s1 = s1 - ra\n 13102: ra = a3 - a4\n 13105: a3 = t0 - t2\n 13108: a2 = a3 - a0\n 13111: a3 = u64 [sp + 0x390]\n 13115: ra = a5 if a3 == 0\n 13118: a0 = u64 [sp + 0x3a0]\n 13122: s1 = a0 if a3 == 0\n 13125: a0 = u64 [sp + 0x398]\n 13129: a2 = a0 if a3 == 0\n 13132: a4 = u64 [sp + 0x370]\n 13136: a0 = u64 [sp + 0x368]\n 13140: a4 = 0 if a0 != 0\n 13142: a0 = u64 [sp + 0x3a8]\n 13146: a0 = t1 - a0\n 13149: a5 = t1 - a1\n 13152: a5 = a0 if a3 == 0\n 13155: a0 = u64 [sp + 0x388]\n 13159: u64 [sp + 0x230] = a0\n 13163: a0 = u64 [sp + 0x380]\n 13167: u64 [sp + 0x240] = a0\n 13171: a0 = u64 [sp + 0x378]\n 13175: u64 [sp + 0x238] = a0\n 13179: t1 = sp + 0x7ff\n 13183: t1 = t1 + 0x360\n 13187: jump @132 if a4 != 0\n      : @131 (gas: 1)\n 13190: jump @90\n      : @132 (gas: 40)\n 13193: u64 [sp + 0x2e8] = a2\n 13197: u64 [sp + 0x2d0] = s1\n 13201: u64 [sp + 0x2f8] = a5\n 13205: a0 = u64 [sp + 0x298]\n 13209: u64 [sp + 0x288] = a0\n 13213: a0 = u64 [sp + 0x2b0]\n 13217: u64 [sp + 0x290] = a0\n 13221: a0 = u64 [sp + 0x2b8]\n 13225: u64 [sp + 0x2a0] = a0\n 13229: a0 = u64 [sp + 0x2e0]\n 13233: u64 [sp + 0x2d8] = a0\n 13237: a0 = u64 [sp + 0x278]\n 13241: u64 [sp + 0x2b8] = a2\n 13245: u64 [sp + 0x298] = s1\n 13249: u64 [sp + 0x2e0] = a5\n 13253: u64 [sp + 0x228] = a0\n 13257: a0 = a0 + 0x1\n 13260: u64 [sp + 0x278] = a0\n 13264: a0 = a0 << 0x38\n 13267: u64 [t1 + 0x759] = a0\n 13271: u64 [sp + 0x2b0] = ra\n 13275: u64 [t1 + 1873] = 0\n 13279: u64 [t1 + 1865] = 0\n 13283: u64 [t1 + 1857] = 0\n 13287: u64 [t1 + 1913] = 0\n 13291: u64 [t1 + 1905] = 0\n 13295: u64 [t1 + 1897] = 0\n 13299: u64 [t1 + 1889] = 0\n 13303: u32 [t1 + 1921] = 0x20\n 13308: a0 = sp + 0x1000\n 13312: i32 a1 = a0 + 0x2a0\n 13316: a0 = sp + 0x1000\n 13320: i32 a3 = a0 + 0x2c0\n 13324: a0 = sp + 0x1000\n 13328: i32 a4 = a0 + 0x2e0\n 13332: a2 = 0xffffffffffffffff\n 13335: a0 = 0\n 13337: s1 = ra\n 13339: ecalli 3 // 'get_storage'\n 13341: fallthrough\n      : @133 (gas: 73)\n 13342: t1 = sp + 0x7ff\n 13346: t1 = t1 + 0x360\n 13350: a0 = u64 [t1 + 0x779]\n 13354: u64 [sp + 0x220] = a0\n 13358: a3 = s1\n 13360: u64 [sp + 0x2f0] = s1\n 13364: a0 = clz s1\n 13366: a1 = a0 + 0x40\n 13369: s1 = u64 [sp + 0x2d0]\n 13373: a0 = clz s1\n 13375: a0 = a1 if s1 == 0\n 13378: a1 = u64 [sp + 0x2f8]\n 13382: a1 = clz a1\n 13384: a1 = a1 + 0x40\n 13387: ra = u64 [sp + 0x2e8]\n 13391: a2 = clz ra\n 13393: a2 = a1 if ra == 0\n 13396: a1 = a2 + 0x80\n 13400: a3 = a3 | s1\n 13403: t2 = s1\n 13405: a0 = a1 if a3 == 0\n 13408: a1 = a1 <u a2\n 13411: a1 = 0 if a3 != 0\n 13413: s1 = u64 [sp + 0x330]\n 13417: a2 = s1 ^ a1\n 13420: a5 = s1 <u a1\n 13423: a3 = u64 [sp + 0x328]\n 13427: a4 = a3 <u a0\n 13430: a5 = a4 if a2 == 0\n 13433: a2 = a5 <u 0x1\n 13436: t0 = a2 + 0xffffffffffffffff\n 13439: t1 = -a5\n 13441: a1 = s1 - a1\n 13444: a1 = a1 - a4\n 13447: a3 = a3 - a0\n 13450: u64 [sp + 0x3a0] = t1\n 13454: a0 = t1 >u 0\n 13456: s1 = t0 >u 0\n 13458: s1 = a0 if t0 == 0\n 13461: a0 = a1 >u 0\n 13463: t1 = a3\n 13465: a3 = a3 <u 0x100\n 13469: a3 = a3 ^ 0x1\n 13472: a3 = a0 if a1 != 0\n 13475: a4 = sp + 0x7ff\n 13479: a4 = a4 + 0x360\n 13483: a0 = u64 [a4 + 0x771]\n 13487: u64 [sp + 0x258] = a0\n 13491: a3 = s1 if a5 != 0\n 13494: s1 = u64 [sp + 0x2f8]\n 13498: a2 = u64 [sp + 0x2f0]\n 13502: a0 = s1 | a2\n 13505: a5 = ra | t2\n 13508: a0 = a0 | a5\n 13511: a5 = u64 [a4 + 0x769]\n 13515: u64 [sp + 0x250] = a5\n 13519: a0 = a0 <u 0x1\n 13522: a5 = u64 [sp + 0x320]\n 13526: a0 = a0 | a5\n 13529: a0 = a0 | a3\n 13532: a3 = u64 [a4 + 0x761]\n 13536: u64 [sp + 0x248] = a3\n 13540: t2 = 0 if a0 != 0\n 13542: u64 [sp + 0x2d0] = t2\n 13546: a3 = a2\n 13548: a3 = 0 if a0 != 0\n 13550: u64 [sp + 0x2f0] = a3\n 13554: ra = 0 if a0 != 0\n 13556: u64 [sp + 0x2e8] = ra\n 13560: a3 = s1\n 13562: a3 = 0 if a0 != 0\n 13564: u64 [sp + 0x2f8] = a3\n 13568: jump @141 if a0 != 0\n      : @134 (gas: 9)\n 13572: a0 = t1 ^ 0xff\n 13576: a5 = u64 [sp + 0x3a0]\n 13580: a0 = a0 | a5\n 13583: a3 = a1 | t0\n 13586: a0 = a0 | a3\n 13589: ra = u64 [sp + 0x270]\n 13593: t2 = u64 [sp + 0x280]\n 13597: a4 = u64 [sp + 0x2c8]\n 13601: jump @142 if a0 == 0\n      : @135 (gas: 259)\n 13605: a3 = t1 + 0x1\n 13608: u64 [sp + 0x3a8] = a3\n 13612: a0 = a3 <u 0x1\n 13615: a0 = a0 + a1\n 13618: u64 [sp + 0x380] = a0\n 13622: a0 = a0 | a3\n 13625: a0 = a0 <u 0x1\n 13628: a0 = a0 + a5\n 13631: u64 [sp + 0x368] = a0\n 13635: a0 = a0 <u a5\n 13638: a0 = a0 + t0\n 13641: u64 [sp + 0x370] = a0\n 13645: t1 = 0xff - t1\n 13649: ra = sp + 0x7ff\n 13653: ra = ra + 0x360\n 13657: a0 = u64 [sp + 0x2e0]\n 13661: u8 [ra + 0x4e1] = a0\n 13665: u8 [ra + 1248] = 0\n 13669: u8 [ra + 1247] = 0\n 13673: u8 [ra + 1246] = 0\n 13677: u8 [ra + 1245] = 0\n 13681: u8 [ra + 1244] = 0\n 13685: u8 [ra + 1243] = 0\n 13689: u8 [ra + 1242] = 0\n 13693: u8 [ra + 1241] = 0\n 13697: u8 [ra + 1240] = 0\n 13701: u8 [ra + 1239] = 0\n 13705: u8 [ra + 1238] = 0\n 13709: u8 [ra + 1237] = 0\n 13713: u8 [ra + 1236] = 0\n 13717: u8 [ra + 1235] = 0\n 13721: u8 [ra + 1234] = 0\n 13725: u8 [ra + 1233] = 0\n 13729: u8 [ra + 1232] = 0\n 13733: u8 [ra + 1231] = 0\n 13737: u8 [ra + 1230] = 0\n 13741: u8 [ra + 1229] = 0\n 13745: u8 [ra + 1228] = 0\n 13749: u8 [ra + 1227] = 0\n 13753: u8 [ra + 1226] = 0\n 13757: u8 [ra + 1225] = 0\n 13761: u8 [ra + 1224] = 0\n 13765: u8 [ra + 1223] = 0\n 13769: u8 [ra + 1222] = 0\n 13773: u8 [ra + 1221] = 0\n 13777: u8 [ra + 1220] = 0\n 13781: u8 [ra + 1219] = 0\n 13785: u8 [ra + 1218] = 0\n 13789: u8 [ra + 1217] = 0\n 13793: a1 = u64 [sp + 0x2b8]\n 13797: u8 [ra + 0x4e9] = a1\n 13801: a2 = a0 >> 0x38\n 13804: u64 [sp + 0x2e8] = a2\n 13808: u8 [ra + 0x4e8] = a2\n 13812: a2 = a0 >> 0x30\n 13815: u64 [sp + 0x2d0] = a2\n 13819: u8 [ra + 0x4e7] = a2\n 13823: a2 = a0 >> 0x28\n 13826: u64 [sp + 0x2c0] = a2\n 13830: u8 [ra + 0x4e6] = a2\n 13834: a2 = a0 >> 0x20\n 13837: u64 [sp + 0x268] = a2\n 13841: u8 [ra + 0x4e5] = a2\n 13845: a2 = a0 >> 0x18\n 13848: u64 [sp + 0x260] = a2\n 13852: u8 [ra + 0x4e4] = a2\n 13856: a2 = a0 >> 0x10\n 13859: u64 [sp + 0x218] = a2\n 13863: u8 [ra + 0x4e3] = a2\n 13867: a0 = a0 >> 0x8\n 13870: u64 [sp + 0x210] = a0\n 13874: u8 [ra + 0x4e2] = a0\n 13878: a0 = u64 [sp + 0x2b0]\n 13882: u8 [ra + 0x4f1] = a0\n 13886: a2 = a1 >> 0x38\n 13889: u64 [sp + 0x208] = a2\n 13893: u8 [ra + 0x4f0] = a2\n 13897: a2 = a1 >> 0x30\n 13900: u64 [sp + 0x1d0] = a2\n 13904: u8 [ra + 0x4ef] = a2\n 13908: a2 = a1 >> 0x28\n 13911: u64 [sp + 0x1c8] = a2\n 13915: u8 [ra + 0x4ee] = a2\n 13919: a2 = a1 >> 0x20\n 13922: u64 [sp + 0x1c0] = a2\n 13926: u8 [ra + 0x4ed] = a2\n 13930: a2 = a1 >> 0x18\n 13933: u64 [sp + 0x1b8] = a2\n 13937: u8 [ra + 0x4ec] = a2\n 13941: a2 = a1 >> 0x10\n 13944: u64 [sp + 0x1b0] = a2\n 13948: u8 [ra + 0x4eb] = a2\n 13952: a1 = a1 >> 0x8\n 13955: u64 [sp + 0x1a8] = a1\n 13959: u8 [ra + 0x4ea] = a1\n 13963: t0 = u64 [sp + 0x298]\n 13967: u8 [ra + 0x4f9] = t0\n 13971: a1 = a0 >> 0x38\n 13974: u64 [sp + 0x1a0] = a1\n 13978: u8 [ra + 0x4f8] = a1\n 13982: a1 = a0 >> 0x30\n 13985: u64 [sp + 0x198] = a1\n 13989: u8 [ra + 0x4f7] = a1\n 13993: a1 = a0 >> 0x28\n 13996: u64 [sp + 0x190] = a1\n 14000: u8 [ra + 0x4f6] = a1\n 14004: a1 = a0 >> 0x20\n 14007: u64 [sp + 0x188] = a1\n 14011: u8 [ra + 0x4f5] = a1\n 14015: a1 = a0 >> 0x18\n 14018: u64 [sp + 0x180] = a1\n 14022: u8 [ra + 0x4f4] = a1\n 14026: a1 = a0 >> 0x10\n 14029: u64 [sp + 0x358] = a1\n 14033: u8 [ra + 0x4f3] = a1\n 14037: a0 = a0 >> 0x8\n 14040: u64 [sp + 0x350] = a0\n 14044: u8 [ra + 0x4f2] = a0\n 14048: a0 = t0 >> 0x38\n 14051: u64 [sp + 0x348] = a0\n 14055: u8 [ra + 0x500] = a0\n 14059: a0 = t0 >> 0x30\n 14062: u64 [sp + 0x318] = a0\n 14066: u8 [ra + 0x4ff] = a0\n 14070: a0 = t0 >> 0x28\n 14073: u64 [sp + 0x310] = a0\n 14077: u8 [ra + 0x4fe] = a0\n 14081: a0 = t0 >> 0x20\n 14084: u64 [sp + 0x308] = a0\n 14088: u8 [ra + 0x4fd] = a0\n 14092: a0 = t0 >> 0x18\n 14095: u64 [sp + 0x300] = a0\n 14099: u8 [ra + 0x4fc] = a0\n 14103: a0 = t0 >> 0x10\n 14106: u64 [sp + 0x2f8] = a0\n 14110: u8 [ra + 0x4fb] = a0\n 14114: a0 = t0 >> 0x8\n 14117: u64 [sp + 0x2f0] = a0\n 14121: u8 [ra + 0x4fa] = a0\n 14125: a0 = t1 << 0x38\n 14128: a0 = a0 >> 0x3b\n 14131: a5 = sp + 0x1040\n 14135: a5 = a5 - a0\n 14138: a0 = u8 [a5 + 0x19]\n 14141: a1 = u8 [a5 + 0x18]\n 14144: a2 = u8 [a5 + 0x1a]\n 14147: a4 = u8 [a5 + 0x1b]\n 14150: a0 = a0 << 0x8\n 14153: a0 = a0 | a1\n 14156: a2 = a2 << 0x10\n 14159: a4 = a4 << 0x18\n 14162: a2 = a2 | a4\n 14165: a0 = a0 | a2\n 14168: a1 = u8 [a5 + 0x1d]\n 14171: a2 = u8 [a5 + 0x1c]\n 14174: a4 = u8 [a5 + 0x1e]\n 14177: s1 = u8 [a5 + 0x1f]\n 14180: a1 = a1 << 0x8\n 14183: a1 = a1 | a2\n 14186: a4 = a4 << 0x10\n 14189: s1 = s1 << 0x18\n 14192: a4 = a4 | s1\n 14195: a1 = a1 | a4\n 14198: a1 = a1 << 0x20\n 14201: a2 = a1 | a0\n 14204: a0 = u8 [a5 + 0x11]\n 14207: a1 = u8 [a5 + 0x10]\n 14210: a4 = u8 [a5 + 0x12]\n 14213: s1 = u8 [a5 + 0x13]\n 14216: a0 = a0 << 0x8\n 14219: a0 = a0 | a1\n 14222: a4 = a4 << 0x10\n 14225: s1 = s1 << 0x18\n 14228: a4 = a4 | s1\n 14231: a0 = a0 | a4\n 14234: a1 = u8 [a5 + 0x15]\n 14237: a4 = u8 [a5 + 0x14]\n 14240: s1 = u8 [a5 + 0x16]\n 14243: a3 = u8 [a5 + 0x17]\n 14246: a1 = a1 << 0x8\n 14249: a1 = a1 | a4\n 14252: s1 = s1 << 0x10\n 14255: a3 = a3 << 0x18\n 14258: a3 = a3 | s1\n 14261: a1 = a1 | a3\n 14264: a1 = a1 << 0x20\n 14267: t2 = a1 | a0\n 14270: a3 = t1 & 0x7\n 14273: a0 = a2 << a3\n 14276: a1 = t2 >> 0x1\n 14279: t1 = a3 ^ 0x3f\n 14282: a1 = a1 >> t1\n 14285: a0 = a0 | a1\n 14288: u64 [sp + 0x3a0] = a0\n 14292: a0 = u8 [a5 + 0x9]\n 14295: a1 = u8 [a5 + 0x8]\n 14298: a4 = u8 [a5 + 0xa]\n 14301: a2 = u8 [a5 + 0xb]\n 14304: a0 = a0 << 0x8\n 14307: a0 = a0 | a1\n 14310: a4 = a4 << 0x10\n 14313: a2 = a2 << 0x18\n 14316: a2 = a2 | a4\n 14319: a0 = a0 | a2\n 14322: a1 = u8 [a5 + 0xd]\n 14325: a2 = u8 [a5 + 0xc]\n 14328: a4 = u8 [a5 + 0xe]\n 14331: s1 = u8 [a5 + 0xf]\n 14334: a1 = a1 << 0x8\n 14337: a1 = a1 | a2\n 14340: a4 = a4 << 0x10\n 14343: s1 = s1 << 0x18\n 14346: a4 = a4 | s1\n 14349: a1 = a1 | a4\n 14352: a1 = a1 << 0x20\n 14355: a4 = a1 | a0\n 14358: a0 = a4 >> 0x1\n 14361: a1 = a3 ^ 0xffffffffffffffff\n 14364: a0 = a0 >> a1\n 14367: a1 = t2 << a3\n 14370: a0 = a0 | a1\n 14373: u64 [sp + 0x398] = a0\n 14377: a0 = u8 [a5 + 0x1]\n 14380: a1 = u8 [a5]\n 14382: a2 = u8 [a5 + 0x2]\n 14385: s1 = u8 [a5 + 0x3]\n 14388: a0 = a0 << 0x8\n 14391: a0 = a0 | a1\n 14394: a2 = a2 << 0x10\n 14397: s1 = s1 << 0x18\n 14400: a2 = a2 | s1\n 14403: a0 = a0 | a2\n 14406: a1 = u8 [a5 + 0x5]\n 14409: a2 = u8 [a5 + 0x4]\n 14412: s1 = u8 [a5 + 0x6]\n 14415: a5 = u8 [a5 + 0x7]\n 14418: a1 = a1 << 0x8\n 14421: a1 = a1 | a2\n 14424: s1 = s1 << 0x10\n 14427: a5 = a5 << 0x18\n 14430: a5 = a5 | s1\n 14433: a1 = a1 | a5\n 14436: a5 = u64 [sp + 0x370]\n 14440: a1 = a1 << 0x20\n 14443: a0 = a0 | a1\n 14446: a1 = a0 >> 0x1\n 14449: a1 = a1 >> t1\n 14452: s1 = u64 [sp + 0x368]\n 14456: a2 = a4 << a3\n 14459: a4 = u64 [sp + 0x380]\n 14463: a1 = a1 | a2\n 14466: u64 [sp + 0x388] = a1\n 14470: a1 = a4 | a5\n 14473: a2 = u64 [sp + 0x3a8]\n 14477: a2 = a2 | s1\n 14480: a1 = a1 | a2\n 14483: a0 = a0 << a3\n 14486: u64 [sp + 0x390] = a0\n 14490: jump @139 if a1 == 0\n      : @136 (gas: 225)\n 14494: u64 [sp + 888] = 0\n 14498: u64 [sp + 864] = 0\n 14502: a0 = u64 [sp + 0x2e8]\n 14506: u8 [ra + 0x488] = a0\n 14510: a0 = u64 [sp + 0x2d0]\n 14514: u8 [ra + 0x487] = a0\n 14518: a0 = u64 [sp + 0x2c0]\n 14522: u8 [ra + 0x486] = a0\n 14526: a0 = u64 [sp + 0x268]\n 14530: u8 [ra + 0x485] = a0\n 14534: a0 = u64 [sp + 0x260]\n 14538: u8 [ra + 0x484] = a0\n 14542: a0 = u64 [sp + 0x218]\n 14546: u8 [ra + 0x483] = a0\n 14550: a0 = u64 [sp + 0x210]\n 14554: u8 [ra + 0x482] = a0\n 14558: a0 = u64 [sp + 0x208]\n 14562: u8 [ra + 0x490] = a0\n 14566: a0 = u64 [sp + 0x1d0]\n 14570: u8 [ra + 0x48f] = a0\n 14574: a0 = u64 [sp + 0x1c8]\n 14578: u8 [ra + 0x48e] = a0\n 14582: a0 = u64 [sp + 0x1c0]\n 14586: u8 [ra + 0x48d] = a0\n 14590: a0 = u64 [sp + 0x1b8]\n 14594: u8 [ra + 0x48c] = a0\n 14598: a0 = u64 [sp + 0x1b0]\n 14602: u8 [ra + 0x48b] = a0\n 14606: a0 = u64 [sp + 0x1a8]\n 14610: u8 [ra + 0x48a] = a0\n 14614: a0 = u64 [sp + 0x1a0]\n 14618: u8 [ra + 0x498] = a0\n 14622: a0 = u64 [sp + 0x198]\n 14626: u8 [ra + 0x497] = a0\n 14630: a0 = u64 [sp + 0x190]\n 14634: u8 [ra + 0x496] = a0\n 14638: a0 = u64 [sp + 0x188]\n 14642: u8 [ra + 0x495] = a0\n 14646: a0 = u64 [sp + 0x180]\n 14650: u8 [ra + 0x494] = a0\n 14654: u8 [ra + 1216] = 0\n 14658: u8 [ra + 1215] = 0\n 14662: u8 [ra + 1214] = 0\n 14666: u8 [ra + 1213] = 0\n 14670: u8 [ra + 1212] = 0\n 14674: u8 [ra + 1211] = 0\n 14678: u8 [ra + 1210] = 0\n 14682: u8 [ra + 1209] = 0\n 14686: u8 [ra + 1208] = 0\n 14690: u8 [ra + 1207] = 0\n 14694: u8 [ra + 1206] = 0\n 14698: u8 [ra + 1205] = 0\n 14702: u8 [ra + 1204] = 0\n 14706: u8 [ra + 1203] = 0\n 14710: u8 [ra + 1202] = 0\n 14714: u8 [ra + 1201] = 0\n 14718: u8 [ra + 1200] = 0\n 14722: u8 [ra + 1199] = 0\n 14726: u8 [ra + 1198] = 0\n 14730: u8 [ra + 1197] = 0\n 14734: u8 [ra + 1196] = 0\n 14738: u8 [ra + 1195] = 0\n 14742: u8 [ra + 1194] = 0\n 14746: u8 [ra + 1193] = 0\n 14750: u8 [ra + 1192] = 0\n 14754: u8 [ra + 1191] = 0\n 14758: u8 [ra + 1190] = 0\n 14762: u8 [ra + 1189] = 0\n 14766: u8 [ra + 1188] = 0\n 14770: u8 [ra + 1187] = 0\n 14774: u8 [ra + 1186] = 0\n 14778: u8 [ra + 1185] = 0\n 14782: a0 = u64 [sp + 0x2e0]\n 14786: u8 [ra + 0x481] = a0\n 14790: a0 = u64 [sp + 0x2b8]\n 14794: u8 [ra + 0x489] = a0\n 14798: a0 = u64 [sp + 0x2b0]\n 14802: u8 [ra + 0x491] = a0\n 14806: u8 [ra + 0x499] = t0\n 14810: a0 = u64 [sp + 0x358]\n 14814: u8 [ra + 0x493] = a0\n 14818: a0 = u64 [sp + 0x350]\n 14822: u8 [ra + 0x492] = a0\n 14826: a0 = u64 [sp + 0x348]\n 14830: u8 [ra + 0x4a0] = a0\n 14834: a0 = u64 [sp + 0x318]\n 14838: u8 [ra + 0x49f] = a0\n 14842: a0 = u64 [sp + 0x310]\n 14846: u8 [ra + 0x49e] = a0\n 14850: a0 = u64 [sp + 0x308]\n 14854: u8 [ra + 0x49d] = a0\n 14858: a0 = u64 [sp + 0x300]\n 14862: u8 [ra + 0x49c] = a0\n 14866: a0 = u64 [sp + 0x2f8]\n 14870: u8 [ra + 0x49b] = a0\n 14874: a0 = u64 [sp + 0x2f0]\n 14878: u8 [ra + 0x49a] = a0\n 14882: s1 = u64 [sp + 0x3a8]\n 14886: a0 = s1 << 0x38\n 14889: a0 = a0 >> 0x3b\n 14892: a2 = sp + 0x7ff\n 14896: a2 = a2 + 0x7e1\n 14900: a2 = a2 + a0\n 14903: a0 = u8 [a2 + 0x11]\n 14906: a1 = u8 [a2 + 0x10]\n 14909: a3 = u8 [a2 + 0x12]\n 14912: a4 = u8 [a2 + 0x13]\n 14915: a0 = a0 << 0x8\n 14918: a0 = a0 | a1\n 14921: a3 = a3 << 0x10\n 14924: a4 = a4 << 0x18\n 14927: a3 = a3 | a4\n 14930: a0 = a0 | a3\n 14933: a1 = u8 [a2 + 0x15]\n 14936: a3 = u8 [a2 + 0x14]\n 14939: a4 = u8 [a2 + 0x16]\n 14942: a5 = u8 [a2 + 0x17]\n 14945: a1 = a1 << 0x8\n 14948: a1 = a1 | a3\n 14951: a4 = a4 << 0x10\n 14954: a5 = a5 << 0x18\n 14957: a4 = a4 | a5\n 14960: a1 = a1 | a4\n 14963: a1 = a1 << 0x20\n 14966: t1 = a1 | a0\n 14969: a3 = s1 & 0x7\n 14972: t2 = t1 >> a3\n 14975: a0 = u8 [a2 + 0x19]\n 14978: a4 = u8 [a2 + 0x18]\n 14981: s1 = u8 [a2 + 0x1a]\n 14984: a5 = u8 [a2 + 0x1b]\n 14987: a0 = a0 << 0x8\n 14990: a0 = a0 | a4\n 14993: s1 = s1 << 0x10\n 14996: a5 = a5 << 0x18\n 14999: a5 = a5 | s1\n 15002: a0 = a0 | a5\n 15005: a4 = u8 [a2 + 0x1d]\n 15008: a5 = u8 [a2 + 0x1c]\n 15011: s1 = u8 [a2 + 0x1e]\n 15014: a1 = u8 [a2 + 0x1f]\n 15017: a4 = a4 << 0x8\n 15020: a4 = a4 | a5\n 15023: s1 = s1 << 0x10\n 15026: a1 = a1 << 0x18\n 15029: a1 = a1 | s1\n 15032: a1 = a1 | a4\n 15035: a1 = a1 << 0x20\n 15038: t0 = a1 | a0\n 15041: a0 = t0 << 0x1\n 15044: ra = a3 ^ 0x3f\n 15047: a0 = a0 << ra\n 15050: a0 = t2 | a0\n 15053: u64 [sp + 0x358] = a0\n 15057: a0 = u8 [a2 + 0x9]\n 15060: a1 = u8 [a2 + 0x8]\n 15063: a4 = u8 [a2 + 0xa]\n 15066: a5 = u8 [a2 + 0xb]\n 15069: a0 = a0 << 0x8\n 15072: a0 = a0 | a1\n 15075: a4 = a4 << 0x10\n 15078: a5 = a5 << 0x18\n 15081: a4 = a4 | a5\n 15084: a0 = a0 | a4\n 15087: a1 = u8 [a2 + 0xd]\n 15090: a4 = u8 [a2 + 0xc]\n 15093: a5 = u8 [a2 + 0xe]\n 15096: s1 = u8 [a2 + 0xf]\n 15099: a1 = a1 << 0x8\n 15102: a1 = a1 | a4\n 15105: a5 = a5 << 0x10\n 15108: s1 = s1 << 0x18\n 15111: a5 = a5 | s1\n 15114: a1 = a1 | a5\n 15117: a1 = a1 << 0x20\n 15120: a1 = a1 | a0\n 15123: a0 = a1 >> a3\n 15126: t1 = t1 << 0x1\n 15129: a4 = a3 ^ 0xffffffffffffffff\n 15132: a4 = t1 << a4\n 15135: t1 = a0 | a4\n 15138: a0 = u8 [a2 + 0x1]\n 15141: a4 = u8 [a2]\n 15143: a5 = u8 [a2 + 0x2]\n 15146: s1 = u8 [a2 + 0x3]\n 15149: a0 = a0 << 0x8\n 15152: a0 = a0 | a4\n 15155: a5 = a5 << 0x10\n 15158: s1 = s1 << 0x18\n 15161: a5 = a5 | s1\n 15164: a0 = a0 | a5\n 15167: a4 = u8 [a2 + 0x5]\n 15170: a5 = u8 [a2 + 0x4]\n 15173: s1 = u8 [a2 + 0x6]\n 15176: a2 = u8 [a2 + 0x7]\n 15179: a4 = a4 << 0x8\n 15182: a4 = a4 | a5\n 15185: s1 = s1 << 0x10\n 15188: a2 = a2 << 0x18\n 15191: a2 = a2 | s1\n 15194: a2 = a2 | a4\n 15197: a2 = a2 << 0x20\n 15200: a0 = a0 | a2\n 15203: a0 = a0 >> a3\n 15206: a1 = a1 << 0x1\n 15209: s1 = a1 << ra\n 15212: t2 = a0 | s1\n 15215: a4 = t0 >> a3\n 15218: a1 = u64 [sp + 0x3c0]\n 15222: a0 = a1 <u 0x1\n 15225: a2 = u64 [sp + 0x3d0]\n 15229: a0 = a2 - a0\n 15232: u64 [sp + 0x318] = a0\n 15236: a0 = a1 | a2\n 15239: a0 = a0 <u 0x1\n 15242: a2 = u64 [sp + 0x3c8]\n 15246: a3 = a2 - a0\n 15249: u64 [sp + 0x310] = a3\n 15253: a0 = a2 <u a0\n 15256: a2 = u64 [sp + 0x3d8]\n 15260: a2 = a2 - a0\n 15263: u64 [sp + 0x308] = a2\n 15267: a1 = a1 + 0xffffffffffffffff\n 15270: u64 [sp + 0x300] = a1\n 15274: fallthrough\n      : @137 (gas: 103)\n 15275: u64 [sp + 840] = 0\n 15279: a1 = t2 >> 0x3f\n 15282: a5 = t1 << 0x1\n 15285: t0 = a5 | a1\n 15288: s1 = t2 << 0x1\n 15291: a2 = u64 [sp + 0x3a0]\n 15295: a1 = a2 >> 0x3f\n 15298: ra = s1 | a1\n 15301: a0 = u64 [sp + 0x318]\n 15305: a5 = a0 ^ t0\n 15308: t2 = a0 <u t0\n 15311: a0 = u64 [sp + 0x300]\n 15315: a1 = a0 <u ra\n 15318: a1 = t2 if a5 != 0\n 15321: a3 = a4 << 0x1\n 15324: a4 = u64 [sp + 0x358]\n 15328: a5 = a4 >> 0x3f\n 15331: t2 = a3 | a5\n 15334: u64 [sp + 0x350] = t2\n 15338: a5 = t1 >> 0x3f\n 15341: a4 = a4 << 0x1\n 15344: a5 = a5 | a4\n 15347: a4 = a2 << 0x1\n 15350: a2 = u64 [sp + 0x398]\n 15354: a0 = a2 >> 0x3f\n 15357: a0 = a0 | a4\n 15360: a4 = a2 << 0x1\n 15363: s1 = u64 [sp + 0x388]\n 15367: a2 = s1 >> 0x3f\n 15370: a2 = a2 | a4\n 15373: s1 = s1 << 0x1\n 15376: a4 = u64 [sp + 0x390]\n 15380: a3 = a4 >> 0x3f\n 15383: a3 = a3 | s1\n 15386: a4 = a4 << 0x1\n 15389: s1 = u64 [sp + 0x378]\n 15393: a4 = a4 | s1\n 15396: u64 [sp + 0x390] = a4\n 15400: a4 = u64 [sp + 0x360]\n 15404: a3 = a3 | a4\n 15407: u64 [sp + 0x388] = a3\n 15411: a2 = a2 | a4\n 15414: u64 [sp + 0x398] = a2\n 15418: a0 = a0 | a4\n 15421: u64 [sp + 0x3a0] = a0\n 15425: a2 = u64 [sp + 0x310]\n 15429: a0 = a2 - a5\n 15432: a0 = a0 <u a1\n 15435: a1 = a2 <u a5\n 15438: a2 = u64 [sp + 0x308]\n 15442: a2 = a2 - t2\n 15445: a2 = a2 - a1\n 15448: a1 = a2 - a0\n 15451: a1 = a1 >>a 0x3f\n 15454: a0 = u64 [sp + 0x3c0]\n 15458: a0 = a0 & a1\n 15461: a2 = u64 [sp + 0x3d0]\n 15465: a2 = a2 & a1\n 15468: t1 = t0 ^ a2\n 15471: a4 = t0 <u a2\n 15474: a3 = ra <u a0\n 15477: t2 = ra\n 15479: a4 = a3 if t1 == 0\n 15482: s1 = u64 [sp + 0x3c8]\n 15486: t1 = a1 & s1\n 15489: ra = a5 - t1\n 15492: s1 = ra - a4\n 15495: u64 [sp + 0x358] = s1\n 15499: ra = ra <u a4\n 15502: a5 = a5 <u t1\n 15505: s1 = u64 [sp + 0x3d8]\n 15509: s1 = s1 & a1\n 15512: a4 = u64 [sp + 0x350]\n 15516: s1 = a4 - s1\n 15519: s1 = s1 - a5\n 15522: s1 = s1 - ra\n 15525: a2 = t0 - a2\n 15528: t1 = a2 - a3\n 15531: t2 = t2 - a0\n 15534: a5 = u64 [sp + 0x3a8]\n 15538: a4 = u64 [sp + 0x380]\n 15542: a0 = a5 | a4\n 15545: a0 = a0 <u 0x1\n 15548: a3 = u64 [sp + 0x368]\n 15552: a2 = a3 <u a0\n 15555: a0 = a3 - a0\n 15558: a3 = a5 <u 0x1\n 15561: a4 = a4 - a3\n 15564: a3 = u64 [sp + 0x370]\n 15568: a3 = a3 - a2\n 15571: a5 = a5 + 0xffffffffffffffff\n 15574: u64 [sp + 0x380] = a4\n 15578: u64 [sp + 0x370] = a3\n 15582: a2 = a4 | a3\n 15585: a4 = s1\n 15587: u64 [sp + 0x3a8] = a5\n 15591: a3 = a5 | a0\n 15594: a2 = a2 | a3\n 15597: a1 = a1 & 0x1\n 15600: u64 [sp + 0x378] = a1\n 15604: u64 [sp + 0x368] = a0\n 15608: u64 [sp + 864] = 0\n 15612: jump @137 if a2 != 0\n      : @138 (gas: 1)\n 15616: jump @140\n      : @139 (gas: 3)\n 15618: u64 [sp + 888] = 0\n 15622: u64 [sp + 840] = 0\n 15626: fallthrough\n      : @140 (gas: 25)\n 15627: a3 = u64 [sp + 0x398]\n 15631: a0 = a3 >> 0x3f\n 15634: a1 = u64 [sp + 0x3a0]\n 15638: a1 = a1 << 0x1\n 15641: a0 = a0 | a1\n 15644: a4 = u64 [sp + 0x388]\n 15648: a1 = a4 >> 0x3f\n 15651: a3 = a3 << 0x1\n 15654: a1 = a1 | a3\n 15657: a5 = u64 [sp + 0x390]\n 15661: a3 = a5 >> 0x3f\n 15664: a4 = a4 << 0x1\n 15667: a5 = a5 << 0x1\n 15670: a2 = u64 [sp + 0x378]\n 15674: a2 = a2 | a5\n 15677: u64 [sp + 0x2f8] = a2\n 15681: a2 = u64 [sp + 0x348]\n 15685: a3 = a3 | a2\n 15688: a3 = a3 | a4\n 15691: u64 [sp + 0x2e8] = a3\n 15695: a1 = a1 | a2\n 15698: u64 [sp + 0x2f0] = a1\n 15702: a0 = a0 | a2\n 15705: u64 [sp + 0x2d0] = a0\n 15709: fallthrough\n      : @141 (gas: 4)\n 15710: ra = u64 [sp + 0x270]\n 15714: t2 = u64 [sp + 0x280]\n 15718: a4 = u64 [sp + 0x2c8]\n 15722: fallthrough\n      : @142 (gas: 53)\n 15723: a1 = u64 [sp + 0x2a8]\n 15727: a0 = a1 | t2\n 15730: a2 = a1\n 15732: a1 = a4 | ra\n 15735: a0 = a0 | a1\n 15738: a0 = a0 <u 0x1\n 15741: a1 = u64 [sp + 0x320]\n 15745: a0 = a0 | a1\n 15748: u64 [sp + 0x3a8] = a0\n 15752: a1 = clz t2\n 15754: a1 = a1 + 0x40\n 15757: a3 = clz ra\n 15759: a3 = a1 if ra == 0\n 15762: a1 = clz a2\n 15764: a1 = a1 + 0x40\n 15767: a2 = clz a4\n 15769: a2 = a1 if a4 == 0\n 15772: a1 = a2 + 0x80\n 15776: a4 = t2 | ra\n 15779: a3 = a1 if a4 == 0\n 15782: a1 = a1 <u a2\n 15785: a1 = 0 if a4 != 0\n 15787: a5 = u64 [sp + 0x330]\n 15791: a2 = a5 ^ a1\n 15794: a4 = a5 <u a1\n 15797: a0 = u64 [sp + 0x328]\n 15801: s1 = a0 <u a3\n 15804: a4 = s1 if a2 == 0\n 15807: a2 = a4 <u 0x1\n 15810: t0 = a2 + 0xffffffffffffffff\n 15813: a2 = -a4\n 15815: a1 = a5 - a1\n 15818: t1 = a1 - s1\n 15821: s1 = a0 - a3\n 15824: u64 [sp + 0x3a0] = a2\n 15828: a3 = a2 >u 0\n 15830: a2 = t0\n 15832: a0 = t0 >u 0\n 15834: a0 = a3 if t0 == 0\n 15837: a3 = t1 >u 0\n 15839: a5 = s1 <u 0x100\n 15843: a5 = a5 ^ 0x1\n 15846: a5 = a3 if t1 != 0\n 15849: a5 = a0 if a4 != 0\n 15852: a0 = u64 [sp + 0x3a8]\n 15856: a5 = a5 | a0\n 15859: ra = 0 if a5 != 0\n 15861: t2 = 0 if a5 != 0\n 15863: a0 = u64 [sp + 0x2c8]\n 15867: a0 = 0 if a5 != 0\n 15869: t0 = u64 [sp + 0x2a8]\n 15873: t0 = 0 if a5 != 0\n 15875: jump @150 if a5 != 0\n      : @143 (gas: 6)\n 15879: a5 = s1 ^ 0xff\n 15883: a4 = u64 [sp + 0x3a0]\n 15887: a5 = a5 | a4\n 15890: a1 = t1 | a2\n 15893: a1 = a1 | a5\n 15896: jump @150 if a1 == 0\n      : @144 (gas: 260)\n 15900: a1 = s1 + 0x1\n 15903: u64 [sp + 0x3a8] = a1\n 15907: a0 = a1 <u 0x1\n 15910: a0 = a0 + t1\n 15913: u64 [sp + 0x378] = a0\n 15917: a0 = a0 | a1\n 15920: a0 = a0 <u 0x1\n 15923: a0 = a0 + a4\n 15926: u64 [sp + 0x368] = a0\n 15930: a0 = a0 <u a4\n 15933: a0 = a0 + a2\n 15936: u64 [sp + 0x380] = a0\n 15940: t1 = 0xff - s1\n 15944: ra = sp + 0x7ff\n 15948: ra = ra + 0x360\n 15952: a0 = u64 [sp + 0x2a8]\n 15956: u8 [ra + 0x461] = a0\n 15960: u8 [ra + 1120] = 0\n 15964: u8 [ra + 1119] = 0\n 15968: u8 [ra + 1118] = 0\n 15972: u8 [ra + 1117] = 0\n 15976: u8 [ra + 1116] = 0\n 15980: u8 [ra + 1115] = 0\n 15984: u8 [ra + 1114] = 0\n 15988: u8 [ra + 1113] = 0\n 15992: u8 [ra + 1112] = 0\n 15996: u8 [ra + 1111] = 0\n 16000: u8 [ra + 1110] = 0\n 16004: u8 [ra + 1109] = 0\n 16008: u8 [ra + 1108] = 0\n 16012: u8 [ra + 1107] = 0\n 16016: u8 [ra + 1106] = 0\n 16020: u8 [ra + 1105] = 0\n 16024: u8 [ra + 1104] = 0\n 16028: u8 [ra + 1103] = 0\n 16032: u8 [ra + 1102] = 0\n 16036: u8 [ra + 1101] = 0\n 16040: u8 [ra + 1100] = 0\n 16044: u8 [ra + 1099] = 0\n 16048: u8 [ra + 1098] = 0\n 16052: u8 [ra + 1097] = 0\n 16056: u8 [ra + 1096] = 0\n 16060: u8 [ra + 1095] = 0\n 16064: u8 [ra + 1094] = 0\n 16068: u8 [ra + 1093] = 0\n 16072: u8 [ra + 1092] = 0\n 16076: u8 [ra + 1091] = 0\n 16080: u8 [ra + 1090] = 0\n 16084: u8 [ra + 1089] = 0\n 16088: a1 = u64 [sp + 0x2c8]\n 16092: u8 [ra + 0x469] = a1\n 16096: a2 = a0 >> 0x38\n 16099: u64 [sp + 0x260] = a2\n 16103: u8 [ra + 0x468] = a2\n 16107: a2 = a0 >> 0x30\n 16110: u64 [sp + 0x218] = a2\n 16114: u8 [ra + 0x467] = a2\n 16118: a2 = a0 >> 0x28\n 16121: u64 [sp + 0x210] = a2\n 16125: u8 [ra + 0x466] = a2\n 16129: a2 = a0 >> 0x20\n 16132: u64 [sp + 0x208] = a2\n 16136: u8 [ra + 0x465] = a2\n 16140: a2 = a0 >> 0x18\n 16143: u64 [sp + 0x1d0] = a2\n 16147: u8 [ra + 0x464] = a2\n 16151: a2 = a0 >> 0x10\n 16154: u64 [sp + 0x1c8] = a2\n 16158: u8 [ra + 0x463] = a2\n 16162: a0 = a0 >> 0x8\n 16165: u64 [sp + 0x1c0] = a0\n 16169: u8 [ra + 0x462] = a0\n 16173: a0 = u64 [sp + 0x280]\n 16177: u8 [ra + 0x471] = a0\n 16181: a2 = a1 >> 0x38\n 16184: u64 [sp + 0x1b8] = a2\n 16188: u8 [ra + 0x470] = a2\n 16192: a2 = a1 >> 0x30\n 16195: u64 [sp + 0x1b0] = a2\n 16199: u8 [ra + 0x46f] = a2\n 16203: a2 = a1 >> 0x28\n 16206: u64 [sp + 0x1a8] = a2\n 16210: u8 [ra + 0x46e] = a2\n 16214: a2 = a1 >> 0x20\n 16217: u64 [sp + 0x1a0] = a2\n 16221: u8 [ra + 0x46d] = a2\n 16225: a2 = a1 >> 0x18\n 16228: u64 [sp + 0x198] = a2\n 16232: u8 [ra + 0x46c] = a2\n 16236: a2 = a1 >> 0x10\n 16239: u64 [sp + 0x190] = a2\n 16243: u8 [ra + 0x46b] = a2\n 16247: a1 = a1 >> 0x8\n 16250: u64 [sp + 0x188] = a1\n 16254: u8 [ra + 0x46a] = a1\n 16258: t0 = u64 [sp + 0x270]\n 16262: u8 [ra + 0x479] = t0\n 16266: a1 = a0 >> 0x38\n 16269: u64 [sp + 0x180] = a1\n 16273: u8 [ra + 0x478] = a1\n 16277: a1 = a0 >> 0x30\n 16280: u64 [sp + 0x178] = a1\n 16284: u8 [ra + 0x477] = a1\n 16288: a1 = a0 >> 0x28\n 16291: u64 [sp + 0x170] = a1\n 16295: u8 [ra + 0x476] = a1\n 16299: a1 = a0 >> 0x20\n 16302: u64 [sp + 0x168] = a1\n 16306: u8 [ra + 0x475] = a1\n 16310: a1 = a0 >> 0x18\n 16313: u64 [sp + 0x160] = a1\n 16317: u8 [ra + 0x474] = a1\n 16321: a1 = a0 >> 0x10\n 16324: u64 [sp + 0x358] = a1\n 16328: u8 [ra + 0x473] = a1\n 16332: a0 = a0 >> 0x8\n 16335: u64 [sp + 0x350] = a0\n 16339: u8 [ra + 0x472] = a0\n 16343: a0 = t0 >> 0x38\n 16346: u64 [sp + 0x348] = a0\n 16350: u8 [ra + 0x480] = a0\n 16354: a0 = t0 >> 0x30\n 16357: u64 [sp + 0x318] = a0\n 16361: u8 [ra + 0x47f] = a0\n 16365: a0 = t0 >> 0x28\n 16368: u64 [sp + 0x310] = a0\n 16372: u8 [ra + 0x47e] = a0\n 16376: a0 = t0 >> 0x20\n 16379: u64 [sp + 0x308] = a0\n 16383: u8 [ra + 0x47d] = a0\n 16387: a0 = t0 >> 0x18\n 16390: u64 [sp + 0x300] = a0\n 16394: u8 [ra + 0x47c] = a0\n 16398: a0 = t0 >> 0x10\n 16401: u64 [sp + 0x2c0] = a0\n 16405: u8 [ra + 0x47b] = a0\n 16409: a0 = t0 >> 0x8\n 16412: u64 [sp + 0x268] = a0\n 16416: u8 [ra + 0x47a] = a0\n 16420: a0 = t1 << 0x38\n 16423: a0 = a0 >> 0x3b\n 16426: a5 = sp + 0x7ff\n 16430: a5 = a5 + 0x7c1\n 16434: a5 = a5 - a0\n 16437: a0 = u8 [a5 + 0x19]\n 16440: a1 = u8 [a5 + 0x18]\n 16443: a2 = u8 [a5 + 0x1a]\n 16446: a4 = u8 [a5 + 0x1b]\n 16449: a0 = a0 << 0x8\n 16452: a0 = a0 | a1\n 16455: a2 = a2 << 0x10\n 16458: a4 = a4 << 0x18\n 16461: a2 = a2 | a4\n 16464: a0 = a0 | a2\n 16467: a1 = u8 [a5 + 0x1d]\n 16470: a2 = u8 [a5 + 0x1c]\n 16473: a4 = u8 [a5 + 0x1e]\n 16476: s1 = u8 [a5 + 0x1f]\n 16479: a1 = a1 << 0x8\n 16482: a1 = a1 | a2\n 16485: a4 = a4 << 0x10\n 16488: s1 = s1 << 0x18\n 16491: a4 = a4 | s1\n 16494: a1 = a1 | a4\n 16497: a1 = a1 << 0x20\n 16500: a2 = a1 | a0\n 16503: a0 = u8 [a5 + 0x11]\n 16506: a1 = u8 [a5 + 0x10]\n 16509: a4 = u8 [a5 + 0x12]\n 16512: s1 = u8 [a5 + 0x13]\n 16515: a0 = a0 << 0x8\n 16518: a0 = a0 | a1\n 16521: a4 = a4 << 0x10\n 16524: s1 = s1 << 0x18\n 16527: a4 = a4 | s1\n 16530: a0 = a0 | a4\n 16533: a1 = u8 [a5 + 0x15]\n 16536: a4 = u8 [a5 + 0x14]\n 16539: s1 = u8 [a5 + 0x16]\n 16542: a3 = u8 [a5 + 0x17]\n 16545: a1 = a1 << 0x8\n 16548: a1 = a1 | a4\n 16551: s1 = s1 << 0x10\n 16554: a3 = a3 << 0x18\n 16557: a3 = a3 | s1\n 16560: a1 = a1 | a3\n 16563: a1 = a1 << 0x20\n 16566: t2 = a1 | a0\n 16569: a3 = t1 & 0x7\n 16572: a0 = a2 << a3\n 16575: a1 = t2 >> 0x1\n 16578: t1 = a3 ^ 0x3f\n 16581: a1 = a1 >> t1\n 16584: a0 = a0 | a1\n 16587: u64 [sp + 0x3a0] = a0\n 16591: a0 = u8 [a5 + 0x9]\n 16594: a1 = u8 [a5 + 0x8]\n 16597: a4 = u8 [a5 + 0xa]\n 16600: a2 = u8 [a5 + 0xb]\n 16603: a0 = a0 << 0x8\n 16606: a0 = a0 | a1\n 16609: a4 = a4 << 0x10\n 16612: a2 = a2 << 0x18\n 16615: a2 = a2 | a4\n 16618: a0 = a0 | a2\n 16621: a1 = u8 [a5 + 0xd]\n 16624: a2 = u8 [a5 + 0xc]\n 16627: a4 = u8 [a5 + 0xe]\n 16630: s1 = u8 [a5 + 0xf]\n 16633: a1 = a1 << 0x8\n 16636: a1 = a1 | a2\n 16639: a4 = a4 << 0x10\n 16642: s1 = s1 << 0x18\n 16645: a4 = a4 | s1\n 16648: a1 = a1 | a4\n 16651: a1 = a1 << 0x20\n 16654: a4 = a1 | a0\n 16657: a0 = a4 >> 0x1\n 16660: a1 = a3 ^ 0xffffffffffffffff\n 16663: a0 = a0 >> a1\n 16666: a1 = t2 << a3\n 16669: a0 = a0 | a1\n 16672: u64 [sp + 0x398] = a0\n 16676: a0 = u8 [a5 + 0x1]\n 16679: a1 = u8 [a5]\n 16681: a2 = u8 [a5 + 0x2]\n 16684: s1 = u8 [a5 + 0x3]\n 16687: a0 = a0 << 0x8\n 16690: a0 = a0 | a1\n 16693: a2 = a2 << 0x10\n 16696: s1 = s1 << 0x18\n 16699: a2 = a2 | s1\n 16702: a0 = a0 | a2\n 16705: a1 = u8 [a5 + 0x5]\n 16708: a2 = u8 [a5 + 0x4]\n 16711: s1 = u8 [a5 + 0x6]\n 16714: a5 = u8 [a5 + 0x7]\n 16717: a1 = a1 << 0x8\n 16720: a1 = a1 | a2\n 16723: s1 = s1 << 0x10\n 16726: a5 = a5 << 0x18\n 16729: a5 = a5 | s1\n 16732: a1 = a1 | a5\n 16735: a5 = u64 [sp + 0x368]\n 16739: a1 = a1 << 0x20\n 16742: a0 = a0 | a1\n 16745: a1 = a0 >> 0x1\n 16748: a1 = a1 >> t1\n 16751: s1 = u64 [sp + 0x378]\n 16755: a2 = a4 << a3\n 16758: a4 = u64 [sp + 0x380]\n 16762: a1 = a1 | a2\n 16765: u64 [sp + 0x388] = a1\n 16769: a1 = s1 | a4\n 16772: a2 = u64 [sp + 0x3a8]\n 16776: a2 = a2 | a5\n 16779: a1 = a1 | a2\n 16782: a0 = a0 << a3\n 16785: u64 [sp + 0x390] = a0\n 16789: jump @148 if a1 == 0\n      : @145 (gas: 225)\n 16793: u64 [sp + 880] = 0\n 16797: u64 [sp + 864] = 0\n 16801: a0 = u64 [sp + 0x260]\n 16805: u8 [ra + 0x408] = a0\n 16809: a0 = u64 [sp + 0x218]\n 16813: u8 [ra + 0x407] = a0\n 16817: a0 = u64 [sp + 0x210]\n 16821: u8 [ra + 0x406] = a0\n 16825: a0 = u64 [sp + 0x208]\n 16829: u8 [ra + 0x405] = a0\n 16833: a0 = u64 [sp + 0x1d0]\n 16837: u8 [ra + 0x404] = a0\n 16841: a0 = u64 [sp + 0x1c8]\n 16845: u8 [ra + 0x403] = a0\n 16849: a0 = u64 [sp + 0x1c0]\n 16853: u8 [ra + 0x402] = a0\n 16857: a0 = u64 [sp + 0x1b8]\n 16861: u8 [ra + 0x410] = a0\n 16865: a0 = u64 [sp + 0x1b0]\n 16869: u8 [ra + 0x40f] = a0\n 16873: a0 = u64 [sp + 0x1a8]\n 16877: u8 [ra + 0x40e] = a0\n 16881: a0 = u64 [sp + 0x1a0]\n 16885: u8 [ra + 0x40d] = a0\n 16889: a0 = u64 [sp + 0x198]\n 16893: u8 [ra + 0x40c] = a0\n 16897: a0 = u64 [sp + 0x190]\n 16901: u8 [ra + 0x40b] = a0\n 16905: a0 = u64 [sp + 0x188]\n 16909: u8 [ra + 0x40a] = a0\n 16913: a0 = u64 [sp + 0x180]\n 16917: u8 [ra + 0x418] = a0\n 16921: a0 = u64 [sp + 0x178]\n 16925: u8 [ra + 0x417] = a0\n 16929: a0 = u64 [sp + 0x170]\n 16933: u8 [ra + 0x416] = a0\n 16937: a0 = u64 [sp + 0x168]\n 16941: u8 [ra + 0x415] = a0\n 16945: a0 = u64 [sp + 0x160]\n 16949: u8 [ra + 0x414] = a0\n 16953: u8 [ra + 1088] = 0\n 16957: u8 [ra + 1087] = 0\n 16961: u8 [ra + 1086] = 0\n 16965: u8 [ra + 1085] = 0\n 16969: u8 [ra + 1084] = 0\n 16973: u8 [ra + 1083] = 0\n 16977: u8 [ra + 1082] = 0\n 16981: u8 [ra + 1081] = 0\n 16985: u8 [ra + 1080] = 0\n 16989: u8 [ra + 1079] = 0\n 16993: u8 [ra + 1078] = 0\n 16997: u8 [ra + 1077] = 0\n 17001: u8 [ra + 1076] = 0\n 17005: u8 [ra + 1075] = 0\n 17009: u8 [ra + 1074] = 0\n 17013: u8 [ra + 1073] = 0\n 17017: u8 [ra + 1072] = 0\n 17021: u8 [ra + 1071] = 0\n 17025: u8 [ra + 1070] = 0\n 17029: u8 [ra + 1069] = 0\n 17033: u8 [ra + 1068] = 0\n 17037: u8 [ra + 1067] = 0\n 17041: u8 [ra + 1066] = 0\n 17045: u8 [ra + 1065] = 0\n 17049: u8 [ra + 1064] = 0\n 17053: u8 [ra + 1063] = 0\n 17057: u8 [ra + 1062] = 0\n 17061: u8 [ra + 1061] = 0\n 17065: u8 [ra + 1060] = 0\n 17069: u8 [ra + 1059] = 0\n 17073: u8 [ra + 1058] = 0\n 17077: u8 [ra + 1057] = 0\n 17081: a0 = u64 [sp + 0x2a8]\n 17085: u8 [ra + 0x401] = a0\n 17089: a0 = u64 [sp + 0x2c8]\n 17093: u8 [ra + 0x409] = a0\n 17097: a0 = u64 [sp + 0x280]\n 17101: u8 [ra + 0x411] = a0\n 17105: u8 [ra + 0x419] = t0\n 17109: a0 = u64 [sp + 0x358]\n 17113: u8 [ra + 0x413] = a0\n 17117: a0 = u64 [sp + 0x350]\n 17121: u8 [ra + 0x412] = a0\n 17125: a0 = u64 [sp + 0x348]\n 17129: u8 [ra + 0x420] = a0\n 17133: a0 = u64 [sp + 0x318]\n 17137: u8 [ra + 0x41f] = a0\n 17141: a0 = u64 [sp + 0x310]\n 17145: u8 [ra + 0x41e] = a0\n 17149: a0 = u64 [sp + 0x308]\n 17153: u8 [ra + 0x41d] = a0\n 17157: a0 = u64 [sp + 0x300]\n 17161: u8 [ra + 0x41c] = a0\n 17165: a0 = u64 [sp + 0x2c0]\n 17169: u8 [ra + 0x41b] = a0\n 17173: a0 = u64 [sp + 0x268]\n 17177: u8 [ra + 0x41a] = a0\n 17181: s1 = u64 [sp + 0x3a8]\n 17185: a0 = s1 << 0x38\n 17188: a0 = a0 >> 0x3b\n 17191: a2 = sp + 0x7ff\n 17195: a2 = a2 + 0x761\n 17199: a2 = a2 + a0\n 17202: a0 = u8 [a2 + 0x11]\n 17205: a1 = u8 [a2 + 0x10]\n 17208: a3 = u8 [a2 + 0x12]\n 17211: a4 = u8 [a2 + 0x13]\n 17214: a0 = a0 << 0x8\n 17217: a0 = a0 | a1\n 17220: a3 = a3 << 0x10\n 17223: a4 = a4 << 0x18\n 17226: a3 = a3 | a4\n 17229: a0 = a0 | a3\n 17232: a1 = u8 [a2 + 0x15]\n 17235: a3 = u8 [a2 + 0x14]\n 17238: a4 = u8 [a2 + 0x16]\n 17241: a5 = u8 [a2 + 0x17]\n 17244: a1 = a1 << 0x8\n 17247: a1 = a1 | a3\n 17250: a4 = a4 << 0x10\n 17253: a5 = a5 << 0x18\n 17256: a4 = a4 | a5\n 17259: a1 = a1 | a4\n 17262: a1 = a1 << 0x20\n 17265: t1 = a1 | a0\n 17268: a3 = s1 & 0x7\n 17271: t2 = t1 >> a3\n 17274: a0 = u8 [a2 + 0x19]\n 17277: a4 = u8 [a2 + 0x18]\n 17280: s1 = u8 [a2 + 0x1a]\n 17283: a5 = u8 [a2 + 0x1b]\n 17286: a0 = a0 << 0x8\n 17289: a0 = a0 | a4\n 17292: s1 = s1 << 0x10\n 17295: a5 = a5 << 0x18\n 17298: a5 = a5 | s1\n 17301: a0 = a0 | a5\n 17304: a4 = u8 [a2 + 0x1d]\n 17307: a5 = u8 [a2 + 0x1c]\n 17310: s1 = u8 [a2 + 0x1e]\n 17313: a1 = u8 [a2 + 0x1f]\n 17316: a4 = a4 << 0x8\n 17319: a4 = a4 | a5\n 17322: s1 = s1 << 0x10\n 17325: a1 = a1 << 0x18\n 17328: a1 = a1 | s1\n 17331: a1 = a1 | a4\n 17334: a1 = a1 << 0x20\n 17337: t0 = a1 | a0\n 17340: a0 = t0 << 0x1\n 17343: ra = a3 ^ 0x3f\n 17346: a0 = a0 << ra\n 17349: a0 = t2 | a0\n 17352: u64 [sp + 0x358] = a0\n 17356: a0 = u8 [a2 + 0x9]\n 17359: a1 = u8 [a2 + 0x8]\n 17362: a4 = u8 [a2 + 0xa]\n 17365: a5 = u8 [a2 + 0xb]\n 17368: a0 = a0 << 0x8\n 17371: a0 = a0 | a1\n 17374: a4 = a4 << 0x10\n 17377: a5 = a5 << 0x18\n 17380: a4 = a4 | a5\n 17383: a0 = a0 | a4\n 17386: a1 = u8 [a2 + 0xd]\n 17389: a4 = u8 [a2 + 0xc]\n 17392: a5 = u8 [a2 + 0xe]\n 17395: s1 = u8 [a2 + 0xf]\n 17398: a1 = a1 << 0x8\n 17401: a1 = a1 | a4\n 17404: a5 = a5 << 0x10\n 17407: s1 = s1 << 0x18\n 17410: a5 = a5 | s1\n 17413: a1 = a1 | a5\n 17416: a1 = a1 << 0x20\n 17419: a1 = a1 | a0\n 17422: a0 = a1 >> a3\n 17425: t1 = t1 << 0x1\n 17428: a4 = a3 ^ 0xffffffffffffffff\n 17431: a4 = t1 << a4\n 17434: t1 = a0 | a4\n 17437: a0 = u8 [a2 + 0x1]\n 17440: a4 = u8 [a2]\n 17442: a5 = u8 [a2 + 0x2]\n 17445: s1 = u8 [a2 + 0x3]\n 17448: a0 = a0 << 0x8\n 17451: a0 = a0 | a4\n 17454: a5 = a5 << 0x10\n 17457: s1 = s1 << 0x18\n 17460: a5 = a5 | s1\n 17463: a0 = a0 | a5\n 17466: a4 = u8 [a2 + 0x5]\n 17469: a5 = u8 [a2 + 0x4]\n 17472: s1 = u8 [a2 + 0x6]\n 17475: a2 = u8 [a2 + 0x7]\n 17478: a4 = a4 << 0x8\n 17481: a4 = a4 | a5\n 17484: s1 = s1 << 0x10\n 17487: a2 = a2 << 0x18\n 17490: a2 = a2 | s1\n 17493: a2 = a2 | a4\n 17496: a2 = a2 << 0x20\n 17499: a0 = a0 | a2\n 17502: a0 = a0 >> a3\n 17505: a1 = a1 << 0x1\n 17508: s1 = a1 << ra\n 17511: t2 = a0 | s1\n 17514: a4 = t0 >> a3\n 17517: a1 = u64 [sp + 0x3c0]\n 17521: a0 = a1 <u 0x1\n 17524: a2 = u64 [sp + 0x3d0]\n 17528: a0 = a2 - a0\n 17531: u64 [sp + 0x318] = a0\n 17535: a0 = a1 | a2\n 17538: a0 = a0 <u 0x1\n 17541: a2 = u64 [sp + 0x3c8]\n 17545: a3 = a2 - a0\n 17548: u64 [sp + 0x310] = a3\n 17552: a0 = a2 <u a0\n 17555: a2 = u64 [sp + 0x3d8]\n 17559: a2 = a2 - a0\n 17562: u64 [sp + 0x308] = a2\n 17566: a1 = a1 + 0xffffffffffffffff\n 17569: u64 [sp + 0x300] = a1\n 17573: fallthrough\n      : @146 (gas: 103)\n 17574: u64 [sp + 840] = 0\n 17578: a1 = t2 >> 0x3f\n 17581: a5 = t1 << 0x1\n 17584: t0 = a5 | a1\n 17587: s1 = t2 << 0x1\n 17590: a2 = u64 [sp + 0x3a0]\n 17594: a1 = a2 >> 0x3f\n 17597: ra = s1 | a1\n 17600: a0 = u64 [sp + 0x318]\n 17604: a5 = a0 ^ t0\n 17607: t2 = a0 <u t0\n 17610: a0 = u64 [sp + 0x300]\n 17614: a1 = a0 <u ra\n 17617: a1 = t2 if a5 != 0\n 17620: a3 = a4 << 0x1\n 17623: a4 = u64 [sp + 0x358]\n 17627: a5 = a4 >> 0x3f\n 17630: t2 = a3 | a5\n 17633: u64 [sp + 0x350] = t2\n 17637: a5 = t1 >> 0x3f\n 17640: a4 = a4 << 0x1\n 17643: a5 = a5 | a4\n 17646: a4 = a2 << 0x1\n 17649: a2 = u64 [sp + 0x398]\n 17653: a0 = a2 >> 0x3f\n 17656: a0 = a0 | a4\n 17659: a4 = a2 << 0x1\n 17662: s1 = u64 [sp + 0x388]\n 17666: a2 = s1 >> 0x3f\n 17669: a2 = a2 | a4\n 17672: s1 = s1 << 0x1\n 17675: a4 = u64 [sp + 0x390]\n 17679: a3 = a4 >> 0x3f\n 17682: a3 = a3 | s1\n 17685: a4 = a4 << 0x1\n 17688: s1 = u64 [sp + 0x370]\n 17692: a4 = a4 | s1\n 17695: u64 [sp + 0x390] = a4\n 17699: a4 = u64 [sp + 0x360]\n 17703: a3 = a3 | a4\n 17706: u64 [sp + 0x388] = a3\n 17710: a2 = a2 | a4\n 17713: u64 [sp + 0x398] = a2\n 17717: a0 = a0 | a4\n 17720: u64 [sp + 0x3a0] = a0\n 17724: a2 = u64 [sp + 0x310]\n 17728: a0 = a2 - a5\n 17731: a0 = a0 <u a1\n 17734: a1 = a2 <u a5\n 17737: a2 = u64 [sp + 0x308]\n 17741: a2 = a2 - t2\n 17744: a2 = a2 - a1\n 17747: a1 = a2 - a0\n 17750: a1 = a1 >>a 0x3f\n 17753: a0 = u64 [sp + 0x3c0]\n 17757: a0 = a0 & a1\n 17760: a2 = u64 [sp + 0x3d0]\n 17764: a2 = a2 & a1\n 17767: t1 = t0 ^ a2\n 17770: a4 = t0 <u a2\n 17773: a3 = ra <u a0\n 17776: t2 = ra\n 17778: a4 = a3 if t1 == 0\n 17781: s1 = u64 [sp + 0x3c8]\n 17785: t1 = a1 & s1\n 17788: ra = a5 - t1\n 17791: s1 = ra - a4\n 17794: u64 [sp + 0x358] = s1\n 17798: ra = ra <u a4\n 17801: a5 = a5 <u t1\n 17804: s1 = u64 [sp + 0x3d8]\n 17808: s1 = s1 & a1\n 17811: a4 = u64 [sp + 0x350]\n 17815: s1 = a4 - s1\n 17818: s1 = s1 - a5\n 17821: s1 = s1 - ra\n 17824: a2 = t0 - a2\n 17827: t1 = a2 - a3\n 17830: t2 = t2 - a0\n 17833: a5 = u64 [sp + 0x3a8]\n 17837: a2 = u64 [sp + 0x378]\n 17841: a0 = a5 | a2\n 17844: a0 = a0 <u 0x1\n 17847: a3 = u64 [sp + 0x368]\n 17851: a4 = a3 <u a0\n 17854: a0 = a3 - a0\n 17857: a3 = a5 <u 0x1\n 17860: a2 = a2 - a3\n 17863: a3 = u64 [sp + 0x380]\n 17867: a3 = a3 - a4\n 17870: a4 = s1\n 17872: a5 = a5 + 0xffffffffffffffff\n 17875: u64 [sp + 0x380] = a3\n 17879: u64 [sp + 0x378] = a2\n 17883: a2 = a2 | a3\n 17886: u64 [sp + 0x3a8] = a5\n 17890: a3 = a5 | a0\n 17893: a2 = a2 | a3\n 17896: a1 = a1 & 0x1\n 17899: u64 [sp + 0x370] = a1\n 17903: u64 [sp + 0x368] = a0\n 17907: u64 [sp + 864] = 0\n 17911: jump @146 if a2 != 0\n      : @147 (gas: 1)\n 17915: jump @149\n      : @148 (gas: 3)\n 17917: u64 [sp + 880] = 0\n 17921: u64 [sp + 840] = 0\n 17925: fallthrough\n      : @149 (gas: 21)\n 17926: a3 = u64 [sp + 0x398]\n 17930: a0 = a3 >> 0x3f\n 17933: a1 = u64 [sp + 0x3a0]\n 17937: a1 = a1 << 0x1\n 17940: a1 = a1 | a0\n 17943: a5 = u64 [sp + 0x388]\n 17947: a0 = a5 >> 0x3f\n 17950: a3 = a3 << 0x1\n 17953: a3 = a3 | a0\n 17956: a0 = u64 [sp + 0x390]\n 17960: a4 = a0 >> 0x3f\n 17963: a5 = a5 << 0x1\n 17966: a0 = a0 << 0x1\n 17969: a2 = u64 [sp + 0x370]\n 17973: t0 = a2 | a0\n 17976: a2 = u64 [sp + 0x348]\n 17980: a4 = a4 | a2\n 17983: a0 = a4 | a5\n 17986: t2 = a2 | a3\n 17989: ra = a2 | a1\n 17992: fallthrough\n      : @150 (gas: 220)\n 17993: u64 [sp + 0x3a8] = a0\n 17997: u64 [sp + 0x388] = t0\n 18001: u64 [sp + 0x398] = t2\n 18005: u64 [sp + 0x3a0] = ra\n 18009: t2 = u64 [sp + 0x3c0]\n 18013: a1 = u64 [sp + 0x2f8]\n 18017: a3 = t2 mulhu a1\n 18020: t0 = u64 [sp + 0x3d0]\n 18024: a2 = t0 * a1\n 18027: a3 = a3 + a2\n 18030: a2 = a3 <u a2\n 18033: a5 = t0 mulhu a1\n 18036: a2 = a2 + a5\n 18039: a4 = u64 [sp + 0x2e8]\n 18043: a5 = t2 * a4\n 18046: a3 = a3 + a5\n 18049: u64 [sp + 0x380] = a3\n 18053: a5 = a3 <u a5\n 18056: s1 = t2 mulhu a4\n 18059: a5 = a5 + s1\n 18062: a5 = a5 + a2\n 18065: a2 = a5 <u a2\n 18068: s1 = t0 mulhu a4\n 18071: a2 = a2 + s1\n 18074: s1 = t0 * a4\n 18077: t1 = s1 + a5\n 18080: s1 = t1 <u s1\n 18083: a2 = a2 + s1\n 18086: u64 [sp + 0x390] = a2\n 18090: a5 = u64 [sp + 0x2f0]\n 18094: s1 = a5 * t0\n 18097: a3 = a5 mulhu t2\n 18100: a3 = a3 + s1\n 18103: a2 = u64 [sp + 0x2d0]\n 18107: s1 = a2 * t2\n 18110: a3 = a3 + s1\n 18113: ra = u64 [sp + 0x3c8]\n 18117: s1 = a1 mulhu ra\n 18120: a0 = u64 [sp + 0x3d8]\n 18124: a2 = a1 * a0\n 18127: a2 = a2 + s1\n 18130: s1 = a4 * ra\n 18133: a2 = a2 + s1\n 18136: a2 = a2 + a3\n 18139: a3 = a1 * ra\n 18142: s1 = a5 * t2\n 18145: a3 = a3 + s1\n 18148: s1 = a3 <u s1\n 18151: a3 = a3 + t1\n 18154: a5 = a3 <u t1\n 18157: a2 = a2 + s1\n 18160: t1 = u64 [sp + 0x390]\n 18164: t1 = t1 + a2\n 18167: a1 = t2 * a1\n 18170: u64 [sp + 0x390] = a1\n 18174: a0 = u64 [sp + 0x298]\n 18178: a5 = a0 - a5\n 18181: a0 = a5 - t1\n 18184: u64 [sp + 0x378] = a0\n 18188: s1 = u64 [sp + 0x2b8]\n 18192: t1 = u64 [sp + 0x380]\n 18196: a5 = s1 ^ t1\n 18199: a2 = s1 <u t1\n 18202: a0 = u64 [sp + 0x2e0]\n 18206: a4 = a0 <u a1\n 18209: a2 = a4 if a5 == 0\n 18212: a5 = u64 [sp + 0x2b0]\n 18216: a0 = a5 <u a3\n 18219: a3 = a5 - a3\n 18222: a5 = a3 <u a2\n 18225: a5 = a5 + a0\n 18228: a0 = u64 [sp + 0x378]\n 18232: a0 = a0 - a5\n 18235: u64 [sp + 0x2c0] = a0\n 18239: a3 = a3 - a2\n 18242: u64 [sp + 0x2d0] = a3\n 18246: a2 = s1 - a4\n 18249: a0 = a2 - t1\n 18252: u64 [sp + 0x268] = a0\n 18256: a0 = u64 [sp + 0x388]\n 18260: a1 = t2 mulhu a0\n 18263: a2 = t0 * a0\n 18266: a1 = a1 + a2\n 18269: a2 = a1 <u a2\n 18272: a3 = t0 mulhu a0\n 18275: a2 = a2 + a3\n 18278: a4 = u64 [sp + 0x3a8]\n 18282: a3 = t2 * a4\n 18285: t1 = a3 + a1\n 18288: a1 = t1 <u a3\n 18291: a3 = t2 mulhu a4\n 18294: a1 = a1 + a3\n 18297: a1 = a1 + a2\n 18300: a2 = a1 <u a2\n 18303: a3 = t0 mulhu a4\n 18306: a2 = a2 + a3\n 18309: a3 = t0 * a4\n 18312: a1 = a1 + a3\n 18315: a3 = a1 <u a3\n 18318: a2 = a2 + a3\n 18321: a5 = u64 [sp + 0x398]\n 18325: a3 = a5 * t0\n 18328: a4 = a5 mulhu t2\n 18331: a3 = a3 + a4\n 18334: a4 = u64 [sp + 0x3a0]\n 18338: a4 = a4 * t2\n 18341: a3 = a3 + a4\n 18344: a4 = a0 mulhu ra\n 18347: s1 = u64 [sp + 0x3d8]\n 18351: s1 = a0 * s1\n 18354: a4 = a4 + s1\n 18357: s1 = u64 [sp + 0x3a8]\n 18361: s1 = s1 * ra\n 18364: a4 = a4 + s1\n 18367: a3 = a3 + a4\n 18370: a4 = a0 * ra\n 18373: s1 = a5 * t2\n 18376: a4 = a4 + s1\n 18379: s1 = a4 <u s1\n 18382: a4 = a4 + a1\n 18385: a1 = a4 <u a1\n 18388: a3 = a3 + s1\n 18391: a2 = a2 + a3\n 18394: ra = t2 * a0\n 18397: a3 = u64 [sp + 0x270]\n 18401: a1 = a3 - a1\n 18404: t0 = a1 - a2\n 18407: a2 = u64 [sp + 0x2c8]\n 18411: a1 = a2 ^ t1\n 18414: a3 = a2 <u t1\n 18417: a0 = u64 [sp + 0x2a8]\n 18421: s1 = a0 <u ra\n 18424: a3 = s1 if a1 == 0\n 18427: a1 = u64 [sp + 0x280]\n 18431: a5 = a1 <u a4\n 18434: a4 = a1 - a4\n 18437: a1 = a4 <u a3\n 18440: t2 = a5 + a1\n 18443: a5 = u64 [sp + 0x2e0]\n 18447: a1 = u64 [sp + 0x390]\n 18451: a5 = a5 - a1\n 18454: t0 = t0 - t2\n 18457: a4 = a4 - a3\n 18460: a2 = a2 - s1\n 18463: a2 = a2 - t1\n 18466: a0 = a0 - ra\n 18469: a3 = u64 [sp + 0x2d0]\n 18473: a3 = a3 + a4\n 18476: a4 = a3 <u a4\n 18479: a1 = u64 [sp + 0x2c0]\n 18483: a1 = a1 + t0\n 18486: a1 = a1 + a4\n 18489: u64 [sp + 0x218] = a5\n 18493: a5 = a5 + a0\n 18496: a0 = a5 <u a0\n 18499: ra = a5\n 18501: a4 = u64 [sp + 0x268]\n 18505: a4 = a4 + a2\n 18508: t0 = a4 + a0\n 18511: a4 = t0 ^ a2\n 18514: a2 = t0 <u a2\n 18517: a2 = a0 if a4 == 0\n 18520: s1 = a3 + a2\n 18523: u64 [sp + 0x2f0] = s1\n 18527: a0 = s1 <u a3\n 18530: t2 = a1 + a0\n 18533: a1 = clz t2\n 18535: a0 = clz s1\n 18537: a0 = a0 + 0x40\n 18540: a0 = a1 if t2 != 0\n 18543: a1 = clz t0\n 18545: a2 = clz a5\n 18547: a2 = a2 + 0x40\n 18550: a2 = a1 if t0 != 0\n 18553: a1 = s1 | t2\n 18556: a3 = a2 + 0x80\n 18560: a0 = a3 if a1 == 0\n 18563: a2 = a3 <u a2\n 18566: a2 = 0 if a1 != 0\n 18568: a5 = u64 [sp + 0x328]\n 18572: a3 = a5 <u a0\n 18575: a4 = u64 [sp + 0x330]\n 18579: t1 = a4 ^ a2\n 18582: a1 = a4 <u a2\n 18585: a1 = a3 if t1 == 0\n 18588: a4 = a4 - a2\n 18591: t1 = a4 - a3\n 18594: a4 = a5 - a0\n 18597: a2 = a4 <u 0x100\n 18601: a2 = a2 ^ 0x1\n 18604: a3 = t1 >u 0\n 18606: a2 = a3 if t1 != 0\n 18609: a5 = a1 <u 0x1\n 18612: a5 = a5 + 0xffffffffffffffff\n 18615: a0 = -a1\n 18617: u64 [sp + 0x398] = a0\n 18621: a3 = a0 >u 0\n 18623: a0 = a5 >u 0\n 18625: a0 = a3 if a5 == 0\n 18628: a0 = a2 if a1 == 0\n 18631: a1 = t0 | t2\n 18634: a2 = ra | s1\n 18637: a1 = a1 | a2\n 18640: a1 = a1 <u 0x1\n 18643: a2 = u64 [sp + 0x320]\n 18647: a1 = a1 | a2\n 18650: a0 = a0 | a1\n 18653: a1 = t2\n 18655: a1 = 0 if a0 != 0\n 18657: u64 [sp + 0x3a8] = a1\n 18661: a1 = s1\n 18663: s1 = ra\n 18665: a1 = 0 if a0 != 0\n 18667: u64 [sp + 0x3a0] = a1\n 18671: a3 = t0\n 18673: a3 = 0 if a0 != 0\n 18675: ra = 0 if a0 != 0\n 18677: u64 [sp + 0x260] = s1\n 18681: u64 [sp + 0x2e8] = t2\n 18685: jump @158 if a0 != 0\n      : @151 (gas: 7)\n 18689: a1 = a4\n 18691: a0 = a4 ^ 0xff\n 18695: a2 = u64 [sp + 0x398]\n 18699: a0 = a0 | a2\n 18702: a4 = t1 | a5\n 18705: a0 = a0 | a4\n 18708: jump @158 if a0 == 0\n      : @152 (gas: 262)\n 18712: a2 = a1\n 18714: a1 = a1 + 0x1\n 18717: u64 [sp + 0x3a8] = a1\n 18721: a0 = a1 <u 0x1\n 18724: a0 = a0 + t1\n 18727: u64 [sp + 0x380] = a0\n 18731: a0 = a0 | a1\n 18734: a0 = a0 <u 0x1\n 18737: a1 = u64 [sp + 0x398]\n 18741: a0 = a0 + a1\n 18744: u64 [sp + 0x370] = a0\n 18748: a0 = a0 <u a1\n 18751: a0 = a0 + a5\n 18754: u64 [sp + 0x378] = a0\n 18758: a1 = t0\n 18760: t0 = 0xff - a2\n 18764: a2 = t2\n 18766: t2 = sp + 0x7ff\n 18770: t2 = t2 + 0x360\n 18774: u8 [t2 + 0x3e1] = s1\n 18778: u8 [t2 + 992] = 0\n 18782: u8 [t2 + 991] = 0\n 18786: u8 [t2 + 990] = 0\n 18790: u8 [t2 + 989] = 0\n 18794: u8 [t2 + 988] = 0\n 18798: u8 [t2 + 987] = 0\n 18802: u8 [t2 + 986] = 0\n 18806: u8 [t2 + 985] = 0\n 18810: u8 [t2 + 984] = 0\n 18814: u8 [t2 + 983] = 0\n 18818: u8 [t2 + 982] = 0\n 18822: u8 [t2 + 981] = 0\n 18826: u8 [t2 + 980] = 0\n 18830: u8 [t2 + 979] = 0\n 18834: u8 [t2 + 978] = 0\n 18838: u8 [t2 + 977] = 0\n 18842: u8 [t2 + 976] = 0\n 18846: u8 [t2 + 975] = 0\n 18850: u8 [t2 + 974] = 0\n 18854: u8 [t2 + 973] = 0\n 18858: u8 [t2 + 972] = 0\n 18862: u8 [t2 + 971] = 0\n 18866: u8 [t2 + 970] = 0\n 18870: u8 [t2 + 969] = 0\n 18874: u8 [t2 + 968] = 0\n 18878: u8 [t2 + 967] = 0\n 18882: u8 [t2 + 966] = 0\n 18886: u8 [t2 + 965] = 0\n 18890: u8 [t2 + 964] = 0\n 18894: u8 [t2 + 963] = 0\n 18898: u8 [t2 + 962] = 0\n 18902: u8 [t2 + 961] = 0\n 18906: u8 [t2 + 0x3e9] = a1\n 18910: a0 = s1 >> 0x38\n 18913: u64 [sp + 0x1d0] = a0\n 18917: u8 [t2 + 0x3e8] = a0\n 18921: a0 = s1 >> 0x30\n 18924: u64 [sp + 0x1c8] = a0\n 18928: u8 [t2 + 0x3e7] = a0\n 18932: a0 = s1 >> 0x28\n 18935: u64 [sp + 0x1c0] = a0\n 18939: u8 [t2 + 0x3e6] = a0\n 18943: a0 = s1 >> 0x20\n 18946: u64 [sp + 0x1b8] = a0\n 18950: u8 [t2 + 0x3e5] = a0\n 18954: a0 = s1 >> 0x18\n 18957: u64 [sp + 0x1b0] = a0\n 18961: u8 [t2 + 0x3e4] = a0\n 18965: a0 = s1 >> 0x10\n 18968: u64 [sp + 0x1a8] = a0\n 18972: u8 [t2 + 0x3e3] = a0\n 18976: a0 = s1 >> 0x8\n 18979: u64 [sp + 0x1a0] = a0\n 18983: u8 [t2 + 0x3e2] = a0\n 18987: ra = u64 [sp + 0x2f0]\n 18991: u8 [t2 + 0x3f1] = ra\n 18995: a0 = a1 >> 0x38\n 18998: u64 [sp + 0x198] = a0\n 19002: u8 [t2 + 0x3f0] = a0\n 19006: a0 = a1 >> 0x30\n 19009: u64 [sp + 0x190] = a0\n 19013: u8 [t2 + 0x3ef] = a0\n 19017: a0 = a1 >> 0x28\n 19020: u64 [sp + 0x188] = a0\n 19024: u8 [t2 + 0x3ee] = a0\n 19028: a0 = a1 >> 0x20\n 19031: u64 [sp + 0x180] = a0\n 19035: u8 [t2 + 0x3ed] = a0\n 19039: a0 = a1 >> 0x18\n 19042: u64 [sp + 0x178] = a0\n 19046: u8 [t2 + 0x3ec] = a0\n 19050: a0 = a1 >> 0x10\n 19053: u64 [sp + 0x170] = a0\n 19057: u8 [t2 + 0x3eb] = a0\n 19061: u64 [sp + 0x210] = a1\n 19065: a1 = a1 >> 0x8\n 19068: u64 [sp + 0x168] = a1\n 19072: u8 [t2 + 0x3ea] = a1\n 19076: u8 [t2 + 0x3f9] = a2\n 19080: a0 = ra >> 0x38\n 19083: u64 [sp + 0x160] = a0\n 19087: u8 [t2 + 0x3f8] = a0\n 19091: a0 = ra >> 0x30\n 19094: u64 [sp + 0x158] = a0\n 19098: u8 [t2 + 0x3f7] = a0\n 19102: a0 = ra >> 0x28\n 19105: u64 [sp + 0x150] = a0\n 19109: u8 [t2 + 0x3f6] = a0\n 19113: a0 = ra >> 0x20\n 19116: u64 [sp + 0x148] = a0\n 19120: u8 [t2 + 0x3f5] = a0\n 19124: a0 = ra >> 0x18\n 19127: u64 [sp + 0x140] = a0\n 19131: u8 [t2 + 0x3f4] = a0\n 19135: a0 = ra >> 0x10\n 19138: u64 [sp + 0x358] = a0\n 19142: u8 [t2 + 0x3f3] = a0\n 19146: a0 = ra >> 0x8\n 19149: u64 [sp + 0x350] = a0\n 19153: u8 [t2 + 0x3f2] = a0\n 19157: a0 = a2 >> 0x38\n 19160: u64 [sp + 0x348] = a0\n 19164: u8 [t2 + 0x400] = a0\n 19168: a0 = a2 >> 0x30\n 19171: u64 [sp + 0x318] = a0\n 19175: u8 [t2 + 0x3ff] = a0\n 19179: a0 = a2 >> 0x28\n 19182: u64 [sp + 0x310] = a0\n 19186: u8 [t2 + 0x3fe] = a0\n 19190: a0 = a2 >> 0x20\n 19193: u64 [sp + 0x308] = a0\n 19197: u8 [t2 + 0x3fd] = a0\n 19201: a0 = a2 >> 0x18\n 19204: u64 [sp + 0x300] = a0\n 19208: u8 [t2 + 0x3fc] = a0\n 19212: a0 = a2 >> 0x10\n 19215: u64 [sp + 0x2f8] = a0\n 19219: u8 [t2 + 0x3fb] = a0\n 19223: a0 = a2 >> 0x8\n 19226: u64 [sp + 0x208] = a0\n 19230: u8 [t2 + 0x3fa] = a0\n 19234: a1 = t0 << 0x38\n 19237: a1 = a1 >> 0x3b\n 19240: a3 = sp + 0x7ff\n 19244: a3 = a3 + 0x741\n 19248: a3 = a3 - a1\n 19251: a1 = u8 [a3 + 0x19]\n 19254: a2 = u8 [a3 + 0x18]\n 19257: a4 = u8 [a3 + 0x1a]\n 19260: a5 = u8 [a3 + 0x1b]\n 19263: a1 = a1 << 0x8\n 19266: a1 = a1 | a2\n 19269: a4 = a4 << 0x10\n 19272: a5 = a5 << 0x18\n 19275: a4 = a4 | a5\n 19278: a1 = a1 | a4\n 19281: a2 = u8 [a3 + 0x1d]\n 19284: a4 = u8 [a3 + 0x1c]\n 19287: a5 = u8 [a3 + 0x1e]\n 19290: s1 = u8 [a3 + 0x1f]\n 19293: a2 = a2 << 0x8\n 19296: a2 = a2 | a4\n 19299: a5 = a5 << 0x10\n 19302: s1 = s1 << 0x18\n 19305: a5 = a5 | s1\n 19308: a2 = a2 | a5\n 19311: a2 = a2 << 0x20\n 19314: a4 = a2 | a1\n 19317: a1 = u8 [a3 + 0x11]\n 19320: a2 = u8 [a3 + 0x10]\n 19323: a5 = u8 [a3 + 0x12]\n 19326: s1 = u8 [a3 + 0x13]\n 19329: a1 = a1 << 0x8\n 19332: a1 = a1 | a2\n 19335: a5 = a5 << 0x10\n 19338: s1 = s1 << 0x18\n 19341: a5 = a5 | s1\n 19344: a1 = a1 | a5\n 19347: a2 = u8 [a3 + 0x15]\n 19350: a5 = u8 [a3 + 0x14]\n 19353: s1 = u8 [a3 + 0x16]\n 19356: a0 = u8 [a3 + 0x17]\n 19359: a2 = a2 << 0x8\n 19362: a2 = a2 | a5\n 19365: s1 = s1 << 0x10\n 19368: a0 = a0 << 0x18\n 19371: a0 = a0 | s1\n 19374: a0 = a0 | a2\n 19377: a0 = a0 << 0x20\n 19380: t1 = a0 | a1\n 19383: a0 = t0 & 0x7\n 19386: a2 = a4 << a0\n 19389: a5 = t1 >> 0x1\n 19392: t0 = a0 ^ 0x3f\n 19395: a5 = a5 >> t0\n 19398: a2 = a2 | a5\n 19401: u64 [sp + 0x3a0] = a2\n 19405: a2 = u8 [a3 + 0x9]\n 19408: a5 = u8 [a3 + 0x8]\n 19411: s1 = u8 [a3 + 0xa]\n 19414: a4 = u8 [a3 + 0xb]\n 19417: a2 = a2 << 0x8\n 19420: a2 = a2 | a5\n 19423: s1 = s1 << 0x10\n 19426: a4 = a4 << 0x18\n 19429: a4 = a4 | s1\n 19432: a2 = a2 | a4\n 19435: a4 = u8 [a3 + 0xd]\n 19438: a5 = u8 [a3 + 0xc]\n 19441: s1 = u8 [a3 + 0xe]\n 19444: a1 = u8 [a3 + 0xf]\n 19447: a4 = a4 << 0x8\n 19450: a4 = a4 | a5\n 19453: s1 = s1 << 0x10\n 19456: a1 = a1 << 0x18\n 19459: a1 = a1 | s1\n 19462: a1 = a1 | a4\n 19465: a1 = a1 << 0x20\n 19468: a5 = a1 | a2\n 19471: a1 = a5 >> 0x1\n 19474: a2 = a0 ^ 0xffffffffffffffff\n 19477: a1 = a1 >> a2\n 19480: a2 = t1 << a0\n 19483: t1 = u64 [sp + 0x370]\n 19487: a1 = a1 | a2\n 19490: u64 [sp + 0x398] = a1\n 19494: a1 = u8 [a3 + 0x1]\n 19497: a2 = u8 [a3]\n 19499: a4 = u8 [a3 + 0x2]\n 19502: s1 = u8 [a3 + 0x3]\n 19505: a1 = a1 << 0x8\n 19508: a1 = a1 | a2\n 19511: a4 = a4 << 0x10\n 19514: s1 = s1 << 0x18\n 19517: a4 = a4 | s1\n 19520: a1 = a1 | a4\n 19523: a2 = u8 [a3 + 0x5]\n 19526: a4 = u8 [a3 + 0x4]\n 19529: s1 = u8 [a3 + 0x6]\n 19532: a3 = u8 [a3 + 0x7]\n 19535: a2 = a2 << 0x8\n 19538: a2 = a2 | a4\n 19541: a4 = u64 [sp + 0x380]\n 19545: s1 = s1 << 0x10\n 19548: a3 = a3 << 0x18\n 19551: a3 = a3 | s1\n 19554: a2 = a2 | a3\n 19557: a2 = a2 << 0x20\n 19560: a1 = a1 | a2\n 19563: a2 = a1 >> 0x1\n 19566: a2 = a2 >> t0\n 19569: a3 = a5 << a0\n 19572: a5 = u64 [sp + 0x378]\n 19576: a2 = a2 | a3\n 19579: u64 [sp + 0x388] = a2\n 19583: a2 = a4 | a5\n 19586: a3 = u64 [sp + 0x3a8]\n 19590: a3 = a3 | t1\n 19593: a2 = a2 | a3\n 19596: a0 = a1 << a0\n 19599: u64 [sp + 0x390] = a0\n 19603: jump @156 if a2 == 0\n      : @153 (gas: 225)\n 19607: u64 [sp + 872] = 0\n 19611: u64 [sp + 864] = 0\n 19615: a0 = u64 [sp + 0x1d0]\n 19619: u8 [t2 + 0x388] = a0\n 19623: a0 = u64 [sp + 0x1c8]\n 19627: u8 [t2 + 0x387] = a0\n 19631: a0 = u64 [sp + 0x1c0]\n 19635: u8 [t2 + 0x386] = a0\n 19639: a0 = u64 [sp + 0x1b8]\n 19643: u8 [t2 + 0x385] = a0\n 19647: a0 = u64 [sp + 0x1b0]\n 19651: u8 [t2 + 0x384] = a0\n 19655: a0 = u64 [sp + 0x1a8]\n 19659: u8 [t2 + 0x383] = a0\n 19663: a0 = u64 [sp + 0x1a0]\n 19667: u8 [t2 + 0x382] = a0\n 19671: a0 = u64 [sp + 0x198]\n 19675: u8 [t2 + 0x390] = a0\n 19679: a0 = u64 [sp + 0x190]\n 19683: u8 [t2 + 0x38f] = a0\n 19687: a0 = u64 [sp + 0x188]\n 19691: u8 [t2 + 0x38e] = a0\n 19695: a0 = u64 [sp + 0x180]\n 19699: u8 [t2 + 0x38d] = a0\n 19703: a0 = u64 [sp + 0x178]\n 19707: u8 [t2 + 0x38c] = a0\n 19711: a0 = u64 [sp + 0x170]\n 19715: u8 [t2 + 0x38b] = a0\n 19719: a0 = u64 [sp + 0x168]\n 19723: u8 [t2 + 0x38a] = a0\n 19727: a0 = u64 [sp + 0x160]\n 19731: u8 [t2 + 0x398] = a0\n 19735: a0 = u64 [sp + 0x158]\n 19739: u8 [t2 + 0x397] = a0\n 19743: a0 = u64 [sp + 0x150]\n 19747: u8 [t2 + 0x396] = a0\n 19751: a0 = u64 [sp + 0x148]\n 19755: u8 [t2 + 0x395] = a0\n 19759: a0 = u64 [sp + 0x140]\n 19763: u8 [t2 + 0x394] = a0\n 19767: u8 [t2 + 960] = 0\n 19771: u8 [t2 + 959] = 0\n 19775: u8 [t2 + 958] = 0\n 19779: u8 [t2 + 957] = 0\n 19783: u8 [t2 + 956] = 0\n 19787: u8 [t2 + 955] = 0\n 19791: u8 [t2 + 954] = 0\n 19795: u8 [t2 + 953] = 0\n 19799: u8 [t2 + 952] = 0\n 19803: u8 [t2 + 951] = 0\n 19807: u8 [t2 + 950] = 0\n 19811: u8 [t2 + 949] = 0\n 19815: u8 [t2 + 948] = 0\n 19819: u8 [t2 + 947] = 0\n 19823: u8 [t2 + 946] = 0\n 19827: u8 [t2 + 945] = 0\n 19831: u8 [t2 + 944] = 0\n 19835: u8 [t2 + 943] = 0\n 19839: u8 [t2 + 942] = 0\n 19843: u8 [t2 + 941] = 0\n 19847: u8 [t2 + 940] = 0\n 19851: u8 [t2 + 939] = 0\n 19855: u8 [t2 + 938] = 0\n 19859: u8 [t2 + 937] = 0\n 19863: u8 [t2 + 936] = 0\n 19867: u8 [t2 + 935] = 0\n 19871: u8 [t2 + 934] = 0\n 19875: u8 [t2 + 933] = 0\n 19879: u8 [t2 + 932] = 0\n 19883: u8 [t2 + 931] = 0\n 19887: u8 [t2 + 930] = 0\n 19891: u8 [t2 + 929] = 0\n 19895: a0 = u64 [sp + 0x260]\n 19899: u8 [t2 + 0x381] = a0\n 19903: a0 = u64 [sp + 0x210]\n 19907: u8 [t2 + 0x389] = a0\n 19911: u8 [t2 + 0x391] = ra\n 19915: a0 = u64 [sp + 0x2e8]\n 19919: u8 [t2 + 0x399] = a0\n 19923: a0 = u64 [sp + 0x358]\n 19927: u8 [t2 + 0x393] = a0\n 19931: a0 = u64 [sp + 0x350]\n 19935: u8 [t2 + 0x392] = a0\n 19939: a0 = u64 [sp + 0x348]\n 19943: u8 [t2 + 0x3a0] = a0\n 19947: a0 = u64 [sp + 0x318]\n 19951: u8 [t2 + 0x39f] = a0\n 19955: a0 = u64 [sp + 0x310]\n 19959: u8 [t2 + 0x39e] = a0\n 19963: a0 = u64 [sp + 0x308]\n 19967: u8 [t2 + 0x39d] = a0\n 19971: a0 = u64 [sp + 0x300]\n 19975: u8 [t2 + 0x39c] = a0\n 19979: a0 = u64 [sp + 0x2f8]\n 19983: u8 [t2 + 0x39b] = a0\n 19987: a0 = u64 [sp + 0x208]\n 19991: u8 [t2 + 0x39a] = a0\n 19995: s1 = u64 [sp + 0x3a8]\n 19999: a0 = s1 << 0x38\n 20002: a0 = a0 >> 0x3b\n 20005: a1 = sp + 0x7ff\n 20009: a1 = a1 + 0x6e1\n 20013: a0 = a0 + a1\n 20016: a1 = u8 [a0 + 0x11]\n 20019: a2 = u8 [a0 + 0x10]\n 20022: a3 = u8 [a0 + 0x12]\n 20025: a4 = u8 [a0 + 0x13]\n 20028: a1 = a1 << 0x8\n 20031: a1 = a1 | a2\n 20034: a3 = a3 << 0x10\n 20037: a4 = a4 << 0x18\n 20040: a3 = a3 | a4\n 20043: a1 = a1 | a3\n 20046: a2 = u8 [a0 + 0x15]\n 20049: a3 = u8 [a0 + 0x14]\n 20052: a4 = u8 [a0 + 0x16]\n 20055: a5 = u8 [a0 + 0x17]\n 20058: a2 = a2 << 0x8\n 20061: a2 = a2 | a3\n 20064: a4 = a4 << 0x10\n 20067: a5 = a5 << 0x18\n 20070: a4 = a4 | a5\n 20073: a2 = a2 | a4\n 20076: a2 = a2 << 0x20\n 20079: t2 = a2 | a1\n 20082: s1 = s1 & 0x7\n 20085: t0 = t2 >> s1\n 20088: a1 = u8 [a0 + 0x19]\n 20091: a2 = u8 [a0 + 0x18]\n 20094: a4 = u8 [a0 + 0x1a]\n 20097: a5 = u8 [a0 + 0x1b]\n 20100: a1 = a1 << 0x8\n 20103: a1 = a1 | a2\n 20106: a4 = a4 << 0x10\n 20109: a5 = a5 << 0x18\n 20112: a4 = a4 | a5\n 20115: a1 = a1 | a4\n 20118: a2 = u8 [a0 + 0x1d]\n 20121: a4 = u8 [a0 + 0x1c]\n 20124: a5 = u8 [a0 + 0x1e]\n 20127: a3 = u8 [a0 + 0x1f]\n 20130: a2 = a2 << 0x8\n 20133: a2 = a2 | a4\n 20136: a5 = a5 << 0x10\n 20139: a3 = a3 << 0x18\n 20142: a3 = a3 | a5\n 20145: a2 = a2 | a3\n 20148: a2 = a2 << 0x20\n 20151: a1 = a1 | a2\n 20154: a2 = a1 << 0x1\n 20157: t1 = s1 ^ 0x3f\n 20160: a2 = a2 << t1\n 20163: a2 = t0 | a2\n 20166: u64 [sp + 0x358] = a2\n 20170: a2 = u8 [a0 + 0x9]\n 20173: a3 = u8 [a0 + 0x8]\n 20176: a4 = u8 [a0 + 0xa]\n 20179: a5 = u8 [a0 + 0xb]\n 20182: a2 = a2 << 0x8\n 20185: a2 = a2 | a3\n 20188: a4 = a4 << 0x10\n 20191: a5 = a5 << 0x18\n 20194: a4 = a4 | a5\n 20197: t0 = a4 | a2\n 20200: a3 = u8 [a0 + 0xd]\n 20203: a4 = u8 [a0 + 0xc]\n 20206: a5 = u8 [a0 + 0xe]\n 20209: a2 = u8 [a0 + 0xf]\n 20212: a3 = a3 << 0x8\n 20215: a3 = a3 | a4\n 20218: a5 = a5 << 0x10\n 20221: a2 = a2 << 0x18\n 20224: a2 = a2 | a5\n 20227: a2 = a2 | a3\n 20230: a2 = a2 << 0x20\n 20233: t0 = a2 | t0\n 20236: a2 = t0 >> s1\n 20239: t2 = t2 << 0x1\n 20242: a4 = s1 ^ 0xffffffffffffffff\n 20245: a4 = t2 << a4\n 20248: t2 = a2 | a4\n 20251: a2 = u8 [a0 + 0x1]\n 20254: a4 = u8 [a0]\n 20256: a5 = u8 [a0 + 0x2]\n 20259: a3 = u8 [a0 + 0x3]\n 20262: a2 = a2 << 0x8\n 20265: a2 = a2 | a4\n 20268: a5 = a5 << 0x10\n 20271: a3 = a3 << 0x18\n 20274: a3 = a3 | a5\n 20277: a2 = a2 | a3\n 20280: a3 = u8 [a0 + 0x5]\n 20283: a4 = u8 [a0 + 0x4]\n 20286: a5 = u8 [a0 + 0x6]\n 20289: a0 = u8 [a0 + 0x7]\n 20292: a3 = a3 << 0x8\n 20295: a3 = a3 | a4\n 20298: a5 = a5 << 0x10\n 20301: a0 = a0 << 0x18\n 20304: a0 = a0 | a5\n 20307: a0 = a0 | a3\n 20310: a0 = a0 << 0x20\n 20313: a0 = a0 | a2\n 20316: a0 = a0 >> s1\n 20319: t0 = t0 << 0x1\n 20322: a2 = t0 << t1\n 20325: ra = a0 | a2\n 20328: a4 = a1 >> s1\n 20331: a1 = u64 [sp + 0x3c0]\n 20335: a0 = a1 <u 0x1\n 20338: a2 = u64 [sp + 0x3d0]\n 20342: a0 = a2 - a0\n 20345: u64 [sp + 0x310] = a0\n 20349: a0 = a1 | a2\n 20352: a0 = a0 <u 0x1\n 20355: a2 = u64 [sp + 0x3c8]\n 20359: a3 = a2 - a0\n 20362: u64 [sp + 0x308] = a3\n 20366: a0 = a2 <u a0\n 20369: a2 = u64 [sp + 0x3d8]\n 20373: a2 = a2 - a0\n 20376: u64 [sp + 0x300] = a2\n 20380: a1 = a1 + 0xffffffffffffffff\n 20383: u64 [sp + 0x2f8] = a1\n 20387: fallthrough\n      : @154 (gas: 104)\n 20388: u64 [sp + 792] = 0\n 20392: a1 = ra >> 0x3f\n 20395: s1 = t2 << 0x1\n 20398: s1 = s1 | a1\n 20401: ra = ra << 0x1\n 20404: t1 = u64 [sp + 0x3a0]\n 20408: a1 = t1 >> 0x3f\n 20411: a1 = ra | a1\n 20414: a0 = u64 [sp + 0x310]\n 20418: a3 = a0 ^ s1\n 20421: a5 = a0 <u s1\n 20424: a0 = u64 [sp + 0x2f8]\n 20428: a2 = a0 <u a1\n 20431: ra = a1\n 20433: u64 [sp + 0x348] = a1\n 20437: a2 = a5 if a3 != 0\n 20440: a0 = a4 << 0x1\n 20443: a4 = u64 [sp + 0x358]\n 20447: a3 = a4 >> 0x3f\n 20450: t0 = a0 | a3\n 20453: u64 [sp + 0x350] = t0\n 20457: a3 = t2 >> 0x3f\n 20460: a4 = a4 << 0x1\n 20463: a3 = a3 | a4\n 20466: a4 = t1 << 0x1\n 20469: a0 = u64 [sp + 0x398]\n 20473: a5 = a0 >> 0x3f\n 20476: t2 = a4 | a5\n 20479: a5 = a0 << 0x1\n 20482: a4 = u64 [sp + 0x388]\n 20486: a0 = a4 >> 0x3f\n 20489: a0 = a0 | a5\n 20492: a4 = a4 << 0x1\n 20495: a5 = u64 [sp + 0x390]\n 20499: a1 = a5 >> 0x3f\n 20502: a1 = a1 | a4\n 20505: a5 = a5 << 0x1\n 20508: a4 = u64 [sp + 0x368]\n 20512: a5 = a5 | a4\n 20515: u64 [sp + 0x390] = a5\n 20519: a5 = u64 [sp + 0x360]\n 20523: a1 = a1 | a5\n 20526: u64 [sp + 0x388] = a1\n 20530: a0 = a0 | a5\n 20533: u64 [sp + 0x398] = a0\n 20537: a0 = a5 | t2\n 20540: u64 [sp + 0x3a0] = a0\n 20544: a1 = u64 [sp + 0x308]\n 20548: a0 = a1 - a3\n 20551: a0 = a0 <u a2\n 20554: a1 = a1 <u a3\n 20557: a2 = u64 [sp + 0x300]\n 20561: a2 = a2 - t0\n 20564: a2 = a2 - a1\n 20567: a2 = a2 - a0\n 20570: a5 = a2 >>a 0x3f\n 20573: a1 = u64 [sp + 0x3c0]\n 20577: t0 = a5 & a1\n 20580: a2 = u64 [sp + 0x3d0]\n 20584: a2 = a2 & a5\n 20587: t2 = s1 ^ a2\n 20590: a4 = s1 <u a2\n 20593: a0 = ra <u t0\n 20596: a4 = a0 if t2 == 0\n 20599: a1 = u64 [sp + 0x3c8]\n 20603: t2 = a5 & a1\n 20606: t1 = a3 - t2\n 20609: ra = t1 - a4\n 20612: u64 [sp + 0x358] = ra\n 20616: t1 = t1 <u a4\n 20619: a3 = a3 <u t2\n 20622: a4 = u64 [sp + 0x3d8]\n 20626: a4 = a4 & a5\n 20629: a1 = u64 [sp + 0x350]\n 20633: a4 = a1 - a4\n 20636: a4 = a4 - a3\n 20639: a4 = a4 - t1\n 20642: s1 = s1 - a2\n 20645: t2 = s1 - a0\n 20648: a0 = u64 [sp + 0x348]\n 20652: ra = a0 - t0\n 20655: a3 = u64 [sp + 0x3a8]\n 20659: s1 = u64 [sp + 0x380]\n 20663: a0 = a3 | s1\n 20666: a0 = a0 <u 0x1\n 20669: a2 = u64 [sp + 0x370]\n 20673: a1 = a2 <u a0\n 20676: a0 = a2 - a0\n 20679: a2 = a3 <u 0x1\n 20682: s1 = s1 - a2\n 20685: a2 = u64 [sp + 0x378]\n 20689: a2 = a2 - a1\n 20692: a3 = a3 + 0xffffffffffffffff\n 20695: u64 [sp + 0x380] = s1\n 20699: u64 [sp + 0x378] = a2\n 20703: a1 = s1 | a2\n 20706: u64 [sp + 0x3a8] = a3\n 20710: a2 = a3 | a0\n 20713: a1 = a1 | a2\n 20716: a5 = a5 & 0x1\n 20719: u64 [sp + 0x368] = a5\n 20723: u64 [sp + 0x370] = a0\n 20727: u64 [sp + 864] = 0\n 20731: jump @154 if a1 != 0\n      : @155 (gas: 1)\n 20735: jump @157\n      : @156 (gas: 3)\n 20737: u64 [sp + 872] = 0\n 20741: u64 [sp + 792] = 0\n 20745: fallthrough\n      : @157 (gas: 26)\n 20746: a2 = u64 [sp + 0x398]\n 20750: a0 = a2 >> 0x3f\n 20753: a1 = u64 [sp + 0x3a0]\n 20757: a1 = a1 << 0x1\n 20760: a0 = a0 | a1\n 20763: a4 = u64 [sp + 0x388]\n 20767: a1 = a4 >> 0x3f\n 20770: a2 = a2 << 0x1\n 20773: a2 = a2 | a1\n 20776: a1 = u64 [sp + 0x390]\n 20780: a3 = a1 >> 0x3f\n 20783: a4 = a4 << 0x1\n 20786: a1 = a1 << 0x1\n 20789: a5 = u64 [sp + 0x368]\n 20793: ra = a5 | a1\n 20796: a5 = u64 [sp + 0x318]\n 20800: a3 = a3 | a5\n 20803: a3 = a3 | a4\n 20806: a2 = a2 | a5\n 20809: u64 [sp + 0x3a0] = a2\n 20813: a0 = a0 | a5\n 20816: u64 [sp + 0x3a8] = a0\n 20820: s1 = u64 [sp + 0x260]\n 20824: t0 = u64 [sp + 0x210]\n 20828: t2 = u64 [sp + 0x2e8]\n 20832: fallthrough\n      : @158 (gas: 172)\n 20833: a0 = u64 [sp + 0x218]\n 20837: a0 = s1 <u a0\n 20840: a5 = u64 [sp + 0x268]\n 20844: a4 = t0 ^ a5\n 20847: a5 = t0 <u a5\n 20850: a5 = a0 if a4 == 0\n 20853: a0 = u64 [sp + 0x2c0]\n 20857: a4 = t2 ^ a0\n 20860: a2 = t2 <u a0\n 20863: a0 = u64 [sp + 0x2d0]\n 20867: a1 = a3\n 20869: a3 = u64 [sp + 0x2f0]\n 20873: s1 = a3 <u a0\n 20876: a2 = s1 if a4 == 0\n 20879: s1 = a3 ^ a0\n 20882: a4 = a4 | s1\n 20885: a2 = a5 if a4 == 0\n 20888: u64 [sp + 0x398] = a2\n 20892: t1 = u64 [sp + 0x3c0]\n 20896: a4 = t1 mulhu ra\n 20899: t2 = u64 [sp + 0x3a0]\n 20903: a0 = u64 [sp + 0x3d0]\n 20907: a5 = a0 * ra\n 20910: a4 = a4 + a5\n 20913: a5 = a4 <u a5\n 20916: s1 = a0 mulhu ra\n 20919: a3 = a0\n 20921: s1 = s1 + a5\n 20924: a5 = t1 * a1\n 20927: a4 = a4 + a5\n 20930: u64 [sp + 0x390] = a4\n 20934: a5 = a4 <u a5\n 20937: a2 = t1 mulhu a1\n 20940: a2 = a2 + a5\n 20943: a2 = a2 + s1\n 20946: a5 = a2 <u s1\n 20949: s1 = a0 mulhu a1\n 20952: a5 = a5 + s1\n 20955: s1 = a0 * a1\n 20958: a2 = a2 + s1\n 20961: s1 = a2 <u s1\n 20964: a5 = a5 + s1\n 20967: u64 [sp + 0x388] = a5\n 20971: a0 = t2\n 20973: s1 = t2 * a3\n 20976: a5 = t2 mulhu t1\n 20979: a5 = a5 + s1\n 20982: a4 = u64 [sp + 0x3a8]\n 20986: s1 = a4 * t1\n 20989: a5 = a5 + s1\n 20992: t2 = u64 [sp + 0x3c8]\n 20996: s1 = ra mulhu t2\n 20999: a3 = u64 [sp + 0x3d8]\n 21003: a4 = ra * a3\n 21006: a4 = a4 + s1\n 21009: a3 = a1 * t2\n 21012: a3 = a3 + a4\n 21015: a3 = a3 + a5\n 21018: a4 = a0 * t1\n 21021: a5 = ra * t2\n 21024: a5 = a5 + a4\n 21027: a4 = a5 <u a4\n 21030: a3 = a3 + a4\n 21033: a5 = a5 + a2\n 21036: a2 = a5 <u a2\n 21039: a0 = u64 [sp + 0x388]\n 21043: a3 = a3 + a0\n 21046: a2 = a2 + a3\n 21049: a1 = t1 * ra\n 21052: u64 [sp + 0x388] = a1\n 21056: a0 = u64 [sp + 0x390]\n 21060: a3 = t0 ^ a0\n 21063: a4 = t0 <u a0\n 21066: ra = u64 [sp + 0x260]\n 21070: s1 = ra <u a1\n 21073: a4 = s1 if a3 == 0\n 21076: a1 = u64 [sp + 0x2f0]\n 21080: a3 = a1 <u a5\n 21083: a5 = a1 - a5\n 21086: a1 = a5 <u a4\n 21089: a1 = a1 + a3\n 21092: a3 = u64 [sp + 0x2e8]\n 21096: a3 = a3 - a2\n 21099: a3 = a3 - a1\n 21102: u64 [sp + 0x3a0] = a3\n 21106: a5 = a5 - a4\n 21109: a2 = t0 - a0\n 21112: a2 = a2 - s1\n 21115: u64 [sp + 0x3a8] = a2\n 21119: a0 = ra\n 21121: a1 = ra <u t1\n 21124: a2 = u64 [sp + 0x3d0]\n 21128: a4 = t0 ^ a2\n 21131: s1 = t0 <u a2\n 21134: ra = a2\n 21136: s1 = a1 if a4 == 0\n 21139: a2 = u64 [sp + 0x2e8]\n 21143: a3 = u64 [sp + 0x3d8]\n 21147: a4 = a2 - a3\n 21150: a3 = u64 [sp + 0x2f0]\n 21154: a2 = a3 <u t2\n 21157: a4 = a4 - a2\n 21160: a2 = a3 - t2\n 21163: a3 = a2 <u s1\n 21166: a4 = a4 - a3\n 21169: a3 = u64 [sp + 0x388]\n 21173: a3 = a0 - a3\n 21176: s1 = a2 - s1\n 21179: a2 = t0 - ra\n 21182: t0 = a2 - a1\n 21185: t2 = a0 - t1\n 21188: a0 = u64 [sp + 0x398]\n 21192: s1 = a5 if a0 == 0\n 21195: u64 [sp + 0x2f0] = s1\n 21199: a1 = u64 [sp + 0x3a0]\n 21203: a4 = a1 if a0 == 0\n 21206: t2 = a3 if a0 == 0\n 21209: a1 = u64 [sp + 0x3a8]\n 21213: t0 = a1 if a0 == 0\n 21216: a0 = clz s1\n 21218: a1 = a0 + 0x40\n 21221: a0 = clz a4\n 21223: a0 = a1 if a4 == 0\n 21226: a1 = s1 | a4\n 21229: a2 = clz t0\n 21231: a3 = clz t2\n 21233: a3 = a3 + 0x40\n 21236: a3 = a2 if t0 != 0\n 21239: a2 = a3 + 0x80\n 21243: a0 = a2 if a1 == 0\n 21246: a2 = a2 <u a3\n 21249: a2 = 0 if a1 != 0\n 21251: s1 = u64 [sp + 0x330]\n 21255: a1 = s1 ^ a2\n 21258: a5 = s1 <u a2\n 21261: a3 = u64 [sp + 0x328]\n 21265: ra = a3 <u a0\n 21268: a5 = ra if a1 == 0\n 21271: a1 = a5 <u 0x1\n 21274: t1 = a1 + 0xffffffffffffffff\n 21277: a1 = -a5\n 21279: a2 = s1 - a2\n 21282: a2 = a2 - ra\n 21285: a3 = a3 - a0\n 21288: u64 [sp + 0x3a0] = a1\n 21292: a0 = a1 >u 0\n 21294: a1 = t1\n 21296: s1 = t1 >u 0\n 21298: s1 = a0 if t1 == 0\n 21301: u64 [sp + 0x398] = a3\n 21305: a0 = a3 <u 0x100\n 21309: a0 = a0 ^ 0x1\n 21312: a3 = a2 >u 0\n 21314: a0 = a3 if a2 != 0\n 21317: a0 = s1 if a5 != 0\n 21320: ra = u64 [sp + 0x2f0]\n 21324: a3 = t2 | ra\n 21327: a5 = t0 | a4\n 21330: a3 = a3 | a5\n 21333: a3 = a3 <u 0x1\n 21336: a5 = u64 [sp + 0x320]\n 21340: a3 = a3 | a5\n 21343: u64 [sp + 0x268] = t0\n 21347: u64 [sp + 0x260] = t2\n 21351: a0 = a0 | a3\n 21354: u64 [sp + 0x2d0] = a4\n 21358: a4 = 0 if a0 != 0\n 21360: ra = 0 if a0 != 0\n 21362: t0 = 0 if a0 != 0\n 21364: t1 = t2\n 21366: t1 = 0 if a0 != 0\n 21368: jump @166 if a0 != 0\n      : @159 (gas: 8)\n 21372: s1 = u64 [sp + 0x398]\n 21376: a0 = s1 ^ 0xff\n 21380: a5 = u64 [sp + 0x3a0]\n 21384: a0 = a0 | a5\n 21387: a3 = a2 | a1\n 21390: a0 = a0 | a3\n 21393: t2 = u64 [sp + 0x330]\n 21397: jump @167 if a0 == 0\n      : @160 (gas: 260)\n 21401: a3 = s1 + 0x1\n 21404: u64 [sp + 0x3a8] = a3\n 21408: a0 = a3 <u 0x1\n 21411: a0 = a0 + a2\n 21414: u64 [sp + 0x380] = a0\n 21418: a0 = a0 | a3\n 21421: a0 = a0 <u 0x1\n 21424: a0 = a0 + a5\n 21427: u64 [sp + 0x368] = a0\n 21431: a0 = a0 <u a5\n 21434: a0 = a0 + a1\n 21437: u64 [sp + 0x370] = a0\n 21441: t1 = 0xff - s1\n 21445: ra = sp + 0x7ff\n 21449: ra = ra + 0x360\n 21453: a0 = u64 [sp + 0x260]\n 21457: u8 [ra + 0x361] = a0\n 21461: u8 [ra + 864] = 0\n 21465: u8 [ra + 863] = 0\n 21469: u8 [ra + 862] = 0\n 21473: u8 [ra + 861] = 0\n 21477: u8 [ra + 860] = 0\n 21481: u8 [ra + 859] = 0\n 21485: u8 [ra + 858] = 0\n 21489: u8 [ra + 857] = 0\n 21493: u8 [ra + 856] = 0\n 21497: u8 [ra + 855] = 0\n 21501: u8 [ra + 854] = 0\n 21505: u8 [ra + 853] = 0\n 21509: u8 [ra + 852] = 0\n 21513: u8 [ra + 851] = 0\n 21517: u8 [ra + 850] = 0\n 21521: u8 [ra + 849] = 0\n 21525: u8 [ra + 848] = 0\n 21529: u8 [ra + 847] = 0\n 21533: u8 [ra + 846] = 0\n 21537: u8 [ra + 845] = 0\n 21541: u8 [ra + 844] = 0\n 21545: u8 [ra + 843] = 0\n 21549: u8 [ra + 842] = 0\n 21553: u8 [ra + 841] = 0\n 21557: u8 [ra + 840] = 0\n 21561: u8 [ra + 839] = 0\n 21565: u8 [ra + 838] = 0\n 21569: u8 [ra + 837] = 0\n 21573: u8 [ra + 836] = 0\n 21577: u8 [ra + 835] = 0\n 21581: u8 [ra + 834] = 0\n 21585: u8 [ra + 833] = 0\n 21589: a1 = u64 [sp + 0x268]\n 21593: u8 [ra + 0x369] = a1\n 21597: a2 = a0 >> 0x38\n 21600: u64 [sp + 0x2c0] = a2\n 21604: u8 [ra + 0x368] = a2\n 21608: a2 = a0 >> 0x30\n 21611: u64 [sp + 0x218] = a2\n 21615: u8 [ra + 0x367] = a2\n 21619: a2 = a0 >> 0x28\n 21622: u64 [sp + 0x210] = a2\n 21626: u8 [ra + 0x366] = a2\n 21630: a2 = a0 >> 0x20\n 21633: u64 [sp + 0x208] = a2\n 21637: u8 [ra + 0x365] = a2\n 21641: a2 = a0 >> 0x18\n 21644: u64 [sp + 0x1d0] = a2\n 21648: u8 [ra + 0x364] = a2\n 21652: a2 = a0 >> 0x10\n 21655: u64 [sp + 0x1c8] = a2\n 21659: u8 [ra + 0x363] = a2\n 21663: a0 = a0 >> 0x8\n 21666: u64 [sp + 0x1c0] = a0\n 21670: u8 [ra + 0x362] = a0\n 21674: a0 = u64 [sp + 0x2f0]\n 21678: u8 [ra + 0x371] = a0\n 21682: a2 = a1 >> 0x38\n 21685: u64 [sp + 0x1b8] = a2\n 21689: u8 [ra + 0x370] = a2\n 21693: a2 = a1 >> 0x30\n 21696: u64 [sp + 0x1b0] = a2\n 21700: u8 [ra + 0x36f] = a2\n 21704: a2 = a1 >> 0x28\n 21707: u64 [sp + 0x1a8] = a2\n 21711: u8 [ra + 0x36e] = a2\n 21715: a2 = a1 >> 0x20\n 21718: u64 [sp + 0x1a0] = a2\n 21722: u8 [ra + 0x36d] = a2\n 21726: a2 = a1 >> 0x18\n 21729: u64 [sp + 0x198] = a2\n 21733: u8 [ra + 0x36c] = a2\n 21737: a2 = a1 >> 0x10\n 21740: u64 [sp + 0x190] = a2\n 21744: u8 [ra + 0x36b] = a2\n 21748: a1 = a1 >> 0x8\n 21751: u64 [sp + 0x188] = a1\n 21755: u8 [ra + 0x36a] = a1\n 21759: t0 = u64 [sp + 0x2d0]\n 21763: u8 [ra + 0x379] = t0\n 21767: a1 = a0 >> 0x38\n 21770: u64 [sp + 0x180] = a1\n 21774: u8 [ra + 0x378] = a1\n 21778: a1 = a0 >> 0x30\n 21781: u64 [sp + 0x178] = a1\n 21785: u8 [ra + 0x377] = a1\n 21789: a1 = a0 >> 0x28\n 21792: u64 [sp + 0x170] = a1\n 21796: u8 [ra + 0x376] = a1\n 21800: a1 = a0 >> 0x20\n 21803: u64 [sp + 0x168] = a1\n 21807: u8 [ra + 0x375] = a1\n 21811: a1 = a0 >> 0x18\n 21814: u64 [sp + 0x160] = a1\n 21818: u8 [ra + 0x374] = a1\n 21822: a1 = a0 >> 0x10\n 21825: u64 [sp + 0x358] = a1\n 21829: u8 [ra + 0x373] = a1\n 21833: a0 = a0 >> 0x8\n 21836: u64 [sp + 0x350] = a0\n 21840: u8 [ra + 0x372] = a0\n 21844: a0 = t0 >> 0x38\n 21847: u64 [sp + 0x348] = a0\n 21851: u8 [ra + 0x380] = a0\n 21855: a0 = t0 >> 0x30\n 21858: u64 [sp + 0x318] = a0\n 21862: u8 [ra + 0x37f] = a0\n 21866: a0 = t0 >> 0x28\n 21869: u64 [sp + 0x310] = a0\n 21873: u8 [ra + 0x37e] = a0\n 21877: a0 = t0 >> 0x20\n 21880: u64 [sp + 0x308] = a0\n 21884: u8 [ra + 0x37d] = a0\n 21888: a0 = t0 >> 0x18\n 21891: u64 [sp + 0x300] = a0\n 21895: u8 [ra + 0x37c] = a0\n 21899: a0 = t0 >> 0x10\n 21902: u64 [sp + 0x2f8] = a0\n 21906: u8 [ra + 0x37b] = a0\n 21910: a0 = t0 >> 0x8\n 21913: u64 [sp + 0x2e8] = a0\n 21917: u8 [ra + 0x37a] = a0\n 21921: a0 = t1 << 0x38\n 21924: a0 = a0 >> 0x3b\n 21927: a5 = sp + 0x7ff\n 21931: a5 = a5 + 0x6c1\n 21935: a5 = a5 - a0\n 21938: a0 = u8 [a5 + 0x19]\n 21941: a1 = u8 [a5 + 0x18]\n 21944: a2 = u8 [a5 + 0x1a]\n 21947: a4 = u8 [a5 + 0x1b]\n 21950: a0 = a0 << 0x8\n 21953: a0 = a0 | a1\n 21956: a2 = a2 << 0x10\n 21959: a4 = a4 << 0x18\n 21962: a2 = a2 | a4\n 21965: a0 = a0 | a2\n 21968: a1 = u8 [a5 + 0x1d]\n 21971: a2 = u8 [a5 + 0x1c]\n 21974: a4 = u8 [a5 + 0x1e]\n 21977: s1 = u8 [a5 + 0x1f]\n 21980: a1 = a1 << 0x8\n 21983: a1 = a1 | a2\n 21986: a4 = a4 << 0x10\n 21989: s1 = s1 << 0x18\n 21992: a4 = a4 | s1\n 21995: a1 = a1 | a4\n 21998: a1 = a1 << 0x20\n 22001: a1 = a1 | a0\n 22004: a0 = u8 [a5 + 0x11]\n 22007: a2 = u8 [a5 + 0x10]\n 22010: a4 = u8 [a5 + 0x12]\n 22013: s1 = u8 [a5 + 0x13]\n 22016: a0 = a0 << 0x8\n 22019: a0 = a0 | a2\n 22022: a4 = a4 << 0x10\n 22025: s1 = s1 << 0x18\n 22028: a4 = a4 | s1\n 22031: a0 = a0 | a4\n 22034: a2 = u8 [a5 + 0x15]\n 22037: a4 = u8 [a5 + 0x14]\n 22040: s1 = u8 [a5 + 0x16]\n 22043: a3 = u8 [a5 + 0x17]\n 22046: a2 = a2 << 0x8\n 22049: a2 = a2 | a4\n 22052: s1 = s1 << 0x10\n 22055: a3 = a3 << 0x18\n 22058: a3 = a3 | s1\n 22061: a2 = a2 | a3\n 22064: a2 = a2 << 0x20\n 22067: t2 = a2 | a0\n 22070: a3 = t1 & 0x7\n 22073: a0 = a1 << a3\n 22076: a2 = t2 >> 0x1\n 22079: t1 = a3 ^ 0x3f\n 22082: a2 = a2 >> t1\n 22085: a0 = a0 | a2\n 22088: u64 [sp + 0x3a0] = a0\n 22092: a0 = u8 [a5 + 0x9]\n 22095: a2 = u8 [a5 + 0x8]\n 22098: a4 = u8 [a5 + 0xa]\n 22101: a1 = u8 [a5 + 0xb]\n 22104: a0 = a0 << 0x8\n 22107: a0 = a0 | a2\n 22110: a4 = a4 << 0x10\n 22113: a1 = a1 << 0x18\n 22116: a1 = a1 | a4\n 22119: a0 = a0 | a1\n 22122: a1 = u8 [a5 + 0xd]\n 22125: a2 = u8 [a5 + 0xc]\n 22128: a4 = u8 [a5 + 0xe]\n 22131: s1 = u8 [a5 + 0xf]\n 22134: a1 = a1 << 0x8\n 22137: a1 = a1 | a2\n 22140: a4 = a4 << 0x10\n 22143: s1 = s1 << 0x18\n 22146: a4 = a4 | s1\n 22149: a1 = a1 | a4\n 22152: a1 = a1 << 0x20\n 22155: a4 = a1 | a0\n 22158: a0 = a4 >> 0x1\n 22161: a1 = a3 ^ 0xffffffffffffffff\n 22164: a0 = a0 >> a1\n 22167: a1 = t2 << a3\n 22170: a0 = a0 | a1\n 22173: u64 [sp + 0x398] = a0\n 22177: a0 = u8 [a5 + 0x1]\n 22180: a1 = u8 [a5]\n 22182: a2 = u8 [a5 + 0x2]\n 22185: s1 = u8 [a5 + 0x3]\n 22188: a0 = a0 << 0x8\n 22191: a0 = a0 | a1\n 22194: a2 = a2 << 0x10\n 22197: s1 = s1 << 0x18\n 22200: a2 = a2 | s1\n 22203: a0 = a0 | a2\n 22206: a1 = u8 [a5 + 0x5]\n 22209: a2 = u8 [a5 + 0x4]\n 22212: s1 = u8 [a5 + 0x6]\n 22215: a5 = u8 [a5 + 0x7]\n 22218: a1 = a1 << 0x8\n 22221: a1 = a1 | a2\n 22224: s1 = s1 << 0x10\n 22227: a5 = a5 << 0x18\n 22230: a5 = a5 | s1\n 22233: a1 = a1 | a5\n 22236: a5 = u64 [sp + 0x370]\n 22240: a1 = a1 << 0x20\n 22243: a0 = a0 | a1\n 22246: a1 = a0 >> 0x1\n 22249: a1 = a1 >> t1\n 22252: s1 = u64 [sp + 0x368]\n 22256: a2 = a4 << a3\n 22259: a4 = u64 [sp + 0x380]\n 22263: a1 = a1 | a2\n 22266: u64 [sp + 0x388] = a1\n 22270: a1 = a4 | a5\n 22273: a2 = u64 [sp + 0x3a8]\n 22277: a2 = a2 | s1\n 22280: a1 = a1 | a2\n 22283: a0 = a0 << a3\n 22286: u64 [sp + 0x390] = a0\n 22290: jump @164 if a1 == 0\n      : @161 (gas: 225)\n 22294: u64 [sp + 888] = 0\n 22298: u64 [sp + 864] = 0\n 22302: a0 = u64 [sp + 0x2c0]\n 22306: u8 [ra + 0x308] = a0\n 22310: a0 = u64 [sp + 0x218]\n 22314: u8 [ra + 0x307] = a0\n 22318: a0 = u64 [sp + 0x210]\n 22322: u8 [ra + 0x306] = a0\n 22326: a0 = u64 [sp + 0x208]\n 22330: u8 [ra + 0x305] = a0\n 22334: a0 = u64 [sp + 0x1d0]\n 22338: u8 [ra + 0x304] = a0\n 22342: a0 = u64 [sp + 0x1c8]\n 22346: u8 [ra + 0x303] = a0\n 22350: a0 = u64 [sp + 0x1c0]\n 22354: u8 [ra + 0x302] = a0\n 22358: a0 = u64 [sp + 0x1b8]\n 22362: u8 [ra + 0x310] = a0\n 22366: a0 = u64 [sp + 0x1b0]\n 22370: u8 [ra + 0x30f] = a0\n 22374: a0 = u64 [sp + 0x1a8]\n 22378: u8 [ra + 0x30e] = a0\n 22382: a0 = u64 [sp + 0x1a0]\n 22386: u8 [ra + 0x30d] = a0\n 22390: a0 = u64 [sp + 0x198]\n 22394: u8 [ra + 0x30c] = a0\n 22398: a0 = u64 [sp + 0x190]\n 22402: u8 [ra + 0x30b] = a0\n 22406: a0 = u64 [sp + 0x188]\n 22410: u8 [ra + 0x30a] = a0\n 22414: a0 = u64 [sp + 0x180]\n 22418: u8 [ra + 0x318] = a0\n 22422: a0 = u64 [sp + 0x178]\n 22426: u8 [ra + 0x317] = a0\n 22430: a0 = u64 [sp + 0x170]\n 22434: u8 [ra + 0x316] = a0\n 22438: a0 = u64 [sp + 0x168]\n 22442: u8 [ra + 0x315] = a0\n 22446: a0 = u64 [sp + 0x160]\n 22450: u8 [ra + 0x314] = a0\n 22454: u8 [ra + 832] = 0\n 22458: u8 [ra + 831] = 0\n 22462: u8 [ra + 830] = 0\n 22466: u8 [ra + 829] = 0\n 22470: u8 [ra + 828] = 0\n 22474: u8 [ra + 827] = 0\n 22478: u8 [ra + 826] = 0\n 22482: u8 [ra + 825] = 0\n 22486: u8 [ra + 824] = 0\n 22490: u8 [ra + 823] = 0\n 22494: u8 [ra + 822] = 0\n 22498: u8 [ra + 821] = 0\n 22502: u8 [ra + 820] = 0\n 22506: u8 [ra + 819] = 0\n 22510: u8 [ra + 818] = 0\n 22514: u8 [ra + 817] = 0\n 22518: u8 [ra + 816] = 0\n 22522: u8 [ra + 815] = 0\n 22526: u8 [ra + 814] = 0\n 22530: u8 [ra + 813] = 0\n 22534: u8 [ra + 812] = 0\n 22538: u8 [ra + 811] = 0\n 22542: u8 [ra + 810] = 0\n 22546: u8 [ra + 809] = 0\n 22550: u8 [ra + 808] = 0\n 22554: u8 [ra + 807] = 0\n 22558: u8 [ra + 806] = 0\n 22562: u8 [ra + 805] = 0\n 22566: u8 [ra + 804] = 0\n 22570: u8 [ra + 803] = 0\n 22574: u8 [ra + 802] = 0\n 22578: u8 [ra + 801] = 0\n 22582: a0 = u64 [sp + 0x260]\n 22586: u8 [ra + 0x301] = a0\n 22590: a0 = u64 [sp + 0x268]\n 22594: u8 [ra + 0x309] = a0\n 22598: a0 = u64 [sp + 0x2f0]\n 22602: u8 [ra + 0x311] = a0\n 22606: u8 [ra + 0x319] = t0\n 22610: a0 = u64 [sp + 0x358]\n 22614: u8 [ra + 0x313] = a0\n 22618: a0 = u64 [sp + 0x350]\n 22622: u8 [ra + 0x312] = a0\n 22626: a0 = u64 [sp + 0x348]\n 22630: u8 [ra + 0x320] = a0\n 22634: a0 = u64 [sp + 0x318]\n 22638: u8 [ra + 0x31f] = a0\n 22642: a0 = u64 [sp + 0x310]\n 22646: u8 [ra + 0x31e] = a0\n 22650: a0 = u64 [sp + 0x308]\n 22654: u8 [ra + 0x31d] = a0\n 22658: a0 = u64 [sp + 0x300]\n 22662: u8 [ra + 0x31c] = a0\n 22666: a0 = u64 [sp + 0x2f8]\n 22670: u8 [ra + 0x31b] = a0\n 22674: a0 = u64 [sp + 0x2e8]\n 22678: u8 [ra + 0x31a] = a0\n 22682: s1 = u64 [sp + 0x3a8]\n 22686: a0 = s1 << 0x38\n 22689: a0 = a0 >> 0x3b\n 22692: a1 = sp + 0x7ff\n 22696: a1 = a1 + 0x661\n 22700: a1 = a1 + a0\n 22703: a0 = u8 [a1 + 0x11]\n 22706: a2 = u8 [a1 + 0x10]\n 22709: a3 = u8 [a1 + 0x12]\n 22712: a4 = u8 [a1 + 0x13]\n 22715: a0 = a0 << 0x8\n 22718: a0 = a0 | a2\n 22721: a3 = a3 << 0x10\n 22724: a4 = a4 << 0x18\n 22727: a3 = a3 | a4\n 22730: a0 = a0 | a3\n 22733: a2 = u8 [a1 + 0x15]\n 22736: a3 = u8 [a1 + 0x14]\n 22739: a4 = u8 [a1 + 0x16]\n 22742: a5 = u8 [a1 + 0x17]\n 22745: a2 = a2 << 0x8\n 22748: a2 = a2 | a3\n 22751: a4 = a4 << 0x10\n 22754: a5 = a5 << 0x18\n 22757: a4 = a4 | a5\n 22760: a2 = a2 | a4\n 22763: a2 = a2 << 0x20\n 22766: t1 = a2 | a0\n 22769: a3 = s1 & 0x7\n 22772: t2 = t1 >> a3\n 22775: a0 = u8 [a1 + 0x19]\n 22778: a4 = u8 [a1 + 0x18]\n 22781: s1 = u8 [a1 + 0x1a]\n 22784: a5 = u8 [a1 + 0x1b]\n 22787: a0 = a0 << 0x8\n 22790: a0 = a0 | a4\n 22793: s1 = s1 << 0x10\n 22796: a5 = a5 << 0x18\n 22799: a5 = a5 | s1\n 22802: a0 = a0 | a5\n 22805: a4 = u8 [a1 + 0x1d]\n 22808: a5 = u8 [a1 + 0x1c]\n 22811: s1 = u8 [a1 + 0x1e]\n 22814: a2 = u8 [a1 + 0x1f]\n 22817: a4 = a4 << 0x8\n 22820: a4 = a4 | a5\n 22823: s1 = s1 << 0x10\n 22826: a2 = a2 << 0x18\n 22829: a2 = a2 | s1\n 22832: a2 = a2 | a4\n 22835: a2 = a2 << 0x20\n 22838: t0 = a2 | a0\n 22841: a0 = t0 << 0x1\n 22844: ra = a3 ^ 0x3f\n 22847: a0 = a0 << ra\n 22850: a0 = t2 | a0\n 22853: u64 [sp + 0x358] = a0\n 22857: a0 = u8 [a1 + 0x9]\n 22860: a2 = u8 [a1 + 0x8]\n 22863: a4 = u8 [a1 + 0xa]\n 22866: a5 = u8 [a1 + 0xb]\n 22869: a0 = a0 << 0x8\n 22872: a0 = a0 | a2\n 22875: a4 = a4 << 0x10\n 22878: a5 = a5 << 0x18\n 22881: a4 = a4 | a5\n 22884: a0 = a0 | a4\n 22887: a2 = u8 [a1 + 0xd]\n 22890: a4 = u8 [a1 + 0xc]\n 22893: a5 = u8 [a1 + 0xe]\n 22896: s1 = u8 [a1 + 0xf]\n 22899: a2 = a2 << 0x8\n 22902: a2 = a2 | a4\n 22905: a5 = a5 << 0x10\n 22908: s1 = s1 << 0x18\n 22911: a5 = a5 | s1\n 22914: a2 = a2 | a5\n 22917: a2 = a2 << 0x20\n 22920: a2 = a2 | a0\n 22923: a0 = a2 >> a3\n 22926: t1 = t1 << 0x1\n 22929: a4 = a3 ^ 0xffffffffffffffff\n 22932: a4 = t1 << a4\n 22935: t1 = a0 | a4\n 22938: a0 = u8 [a1 + 0x1]\n 22941: a4 = u8 [a1]\n 22943: a5 = u8 [a1 + 0x2]\n 22946: s1 = u8 [a1 + 0x3]\n 22949: a0 = a0 << 0x8\n 22952: a0 = a0 | a4\n 22955: a5 = a5 << 0x10\n 22958: s1 = s1 << 0x18\n 22961: a5 = a5 | s1\n 22964: a0 = a0 | a5\n 22967: a4 = u8 [a1 + 0x5]\n 22970: a5 = u8 [a1 + 0x4]\n 22973: s1 = u8 [a1 + 0x6]\n 22976: a1 = u8 [a1 + 0x7]\n 22979: a4 = a4 << 0x8\n 22982: a4 = a4 | a5\n 22985: s1 = s1 << 0x10\n 22988: a1 = a1 << 0x18\n 22991: a1 = a1 | s1\n 22994: a1 = a1 | a4\n 22997: a1 = a1 << 0x20\n 23000: a0 = a0 | a1\n 23003: a0 = a0 >> a3\n 23006: a2 = a2 << 0x1\n 23009: s1 = a2 << ra\n 23012: t2 = a0 | s1\n 23015: a4 = t0 >> a3\n 23018: a1 = u64 [sp + 0x3c0]\n 23022: a0 = a1 <u 0x1\n 23025: a2 = u64 [sp + 0x3d0]\n 23029: a0 = a2 - a0\n 23032: u64 [sp + 0x318] = a0\n 23036: a0 = a1 | a2\n 23039: a0 = a0 <u 0x1\n 23042: a2 = u64 [sp + 0x3c8]\n 23046: a3 = a2 - a0\n 23049: u64 [sp + 0x310] = a3\n 23053: a0 = a2 <u a0\n 23056: a2 = u64 [sp + 0x3d8]\n 23060: a2 = a2 - a0\n 23063: u64 [sp + 0x308] = a2\n 23067: a1 = a1 + 0xffffffffffffffff\n 23070: u64 [sp + 0x300] = a1\n 23074: fallthrough\n      : @162 (gas: 103)\n 23075: u64 [sp + 840] = 0\n 23079: a2 = t2 >> 0x3f\n 23082: a5 = t1 << 0x1\n 23085: t0 = a5 | a2\n 23088: s1 = t2 << 0x1\n 23091: a1 = u64 [sp + 0x3a0]\n 23095: a2 = a1 >> 0x3f\n 23098: ra = s1 | a2\n 23101: a0 = u64 [sp + 0x318]\n 23105: a5 = a0 ^ t0\n 23108: t2 = a0 <u t0\n 23111: a0 = u64 [sp + 0x300]\n 23115: a2 = a0 <u ra\n 23118: a2 = t2 if a5 != 0\n 23121: a3 = a4 << 0x1\n 23124: a4 = u64 [sp + 0x358]\n 23128: a5 = a4 >> 0x3f\n 23131: t2 = a3 | a5\n 23134: u64 [sp + 0x350] = t2\n 23138: a5 = t1 >> 0x3f\n 23141: a4 = a4 << 0x1\n 23144: a5 = a5 | a4\n 23147: a4 = a1 << 0x1\n 23150: a1 = u64 [sp + 0x398]\n 23154: a0 = a1 >> 0x3f\n 23157: a0 = a0 | a4\n 23160: a4 = a1 << 0x1\n 23163: s1 = u64 [sp + 0x388]\n 23167: a1 = s1 >> 0x3f\n 23170: a1 = a1 | a4\n 23173: s1 = s1 << 0x1\n 23176: a4 = u64 [sp + 0x390]\n 23180: a3 = a4 >> 0x3f\n 23183: a3 = a3 | s1\n 23186: a4 = a4 << 0x1\n 23189: s1 = u64 [sp + 0x378]\n 23193: a4 = a4 | s1\n 23196: u64 [sp + 0x390] = a4\n 23200: a4 = u64 [sp + 0x360]\n 23204: a3 = a3 | a4\n 23207: u64 [sp + 0x388] = a3\n 23211: a1 = a1 | a4\n 23214: u64 [sp + 0x398] = a1\n 23218: a0 = a0 | a4\n 23221: u64 [sp + 0x3a0] = a0\n 23225: a1 = u64 [sp + 0x310]\n 23229: a0 = a1 - a5\n 23232: a0 = a0 <u a2\n 23235: a1 = a1 <u a5\n 23238: a2 = u64 [sp + 0x308]\n 23242: a2 = a2 - t2\n 23245: a2 = a2 - a1\n 23248: a2 = a2 - a0\n 23251: a2 = a2 >>a 0x3f\n 23254: a0 = u64 [sp + 0x3c0]\n 23258: a0 = a0 & a2\n 23261: a1 = u64 [sp + 0x3d0]\n 23265: a1 = a1 & a2\n 23268: t1 = t0 ^ a1\n 23271: a4 = t0 <u a1\n 23274: a3 = ra <u a0\n 23277: t2 = ra\n 23279: a4 = a3 if t1 == 0\n 23282: s1 = u64 [sp + 0x3c8]\n 23286: t1 = a2 & s1\n 23289: ra = a5 - t1\n 23292: s1 = ra - a4\n 23295: u64 [sp + 0x358] = s1\n 23299: ra = ra <u a4\n 23302: a5 = a5 <u t1\n 23305: s1 = u64 [sp + 0x3d8]\n 23309: s1 = s1 & a2\n 23312: a4 = u64 [sp + 0x350]\n 23316: s1 = a4 - s1\n 23319: s1 = s1 - a5\n 23322: s1 = s1 - ra\n 23325: a1 = t0 - a1\n 23328: t1 = a1 - a3\n 23331: t2 = t2 - a0\n 23334: a5 = u64 [sp + 0x3a8]\n 23338: a4 = u64 [sp + 0x380]\n 23342: a0 = a5 | a4\n 23345: a0 = a0 <u 0x1\n 23348: a3 = u64 [sp + 0x368]\n 23352: a1 = a3 <u a0\n 23355: a0 = a3 - a0\n 23358: a3 = a5 <u 0x1\n 23361: a4 = a4 - a3\n 23364: a3 = u64 [sp + 0x370]\n 23368: a3 = a3 - a1\n 23371: a5 = a5 + 0xffffffffffffffff\n 23374: u64 [sp + 0x380] = a4\n 23378: u64 [sp + 0x370] = a3\n 23382: a1 = a4 | a3\n 23385: a4 = s1\n 23387: u64 [sp + 0x3a8] = a5\n 23391: a3 = a5 | a0\n 23394: a1 = a1 | a3\n 23397: a2 = a2 & 0x1\n 23400: u64 [sp + 0x378] = a2\n 23404: u64 [sp + 0x368] = a0\n 23408: u64 [sp + 864] = 0\n 23412: jump @162 if a1 != 0\n      : @163 (gas: 1)\n 23416: jump @165\n      : @164 (gas: 3)\n 23418: u64 [sp + 888] = 0\n 23422: u64 [sp + 840] = 0\n 23426: fallthrough\n      : @165 (gas: 22)\n 23427: a3 = u64 [sp + 0x398]\n 23431: a0 = a3 >> 0x3f\n 23434: a2 = u64 [sp + 0x3a0]\n 23438: a2 = a2 << 0x1\n 23441: a0 = a0 | a2\n 23444: a4 = u64 [sp + 0x388]\n 23448: a2 = a4 >> 0x3f\n 23451: a3 = a3 << 0x1\n 23454: a2 = a2 | a3\n 23457: a5 = u64 [sp + 0x390]\n 23461: a3 = a5 >> 0x3f\n 23464: a4 = a4 << 0x1\n 23467: a5 = a5 << 0x1\n 23470: a1 = u64 [sp + 0x378]\n 23474: t1 = a1 | a5\n 23477: a1 = u64 [sp + 0x348]\n 23481: a3 = a3 | a1\n 23484: t0 = a3 | a4\n 23487: ra = a1 | a2\n 23490: a4 = a1 | a0\n 23493: t2 = u64 [sp + 0x330]\n 23497: jump @167\n      : @166 (gas: 2)\n 23499: t2 = u64 [sp + 0x330]\n 23503: fallthrough\n      : @167 (gas: 65)\n 23504: u64 [sp + 0x2c0] = t1\n 23508: u64 [sp + 0x208] = a4\n 23512: u64 [sp + 0x210] = t0\n 23516: u64 [sp + 0x218] = ra\n 23520: a0 = u64 [sp + 0x248]\n 23524: ra = reverse a0\n 23526: a0 = u64 [sp + 0x250]\n 23530: s1 = reverse a0\n 23532: a0 = u64 [sp + 0x258]\n 23536: t0 = reverse a0\n 23538: a0 = u64 [sp + 0x220]\n 23542: a2 = reverse a0\n 23544: u64 [sp + 0x2e8] = a2\n 23548: a0 = clz s1\n 23550: a1 = a0 + 0x40\n 23553: a0 = clz ra\n 23555: a0 = a1 if ra == 0\n 23558: a1 = clz a2\n 23560: a1 = a1 + 0x40\n 23563: a2 = clz t0\n 23565: a2 = a1 if t0 == 0\n 23568: a1 = a2 + 0x80\n 23572: a3 = s1 | ra\n 23575: a0 = a1 if a3 == 0\n 23578: a2 = a1 <u a2\n 23581: a2 = 0 if a3 != 0\n 23583: a1 = t2 ^ a2\n 23586: a3 = t2 <u a2\n 23589: t1 = u64 [sp + 0x328]\n 23593: a4 = t1 <u a0\n 23596: a3 = a4 if a1 == 0\n 23599: a1 = a3 <u 0x1\n 23602: a1 = a1 + 0xffffffffffffffff\n 23605: a5 = -a3\n 23607: a2 = t2 - a2\n 23610: a4 = a2 - a4\n 23613: t1 = t1 - a0\n 23616: u64 [sp + 0x3a0] = a5\n 23620: a0 = a5 >u 0\n 23622: a2 = a1 >u 0\n 23624: a5 = a1\n 23626: a2 = a0 if a1 == 0\n 23629: a1 = a4\n 23631: a0 = t1 <u 0x100\n 23635: a0 = a0 ^ 0x1\n 23638: a4 = a4 >u 0\n 23640: a0 = a4 if a1 != 0\n 23643: a0 = a2 if a3 != 0\n 23646: t2 = u64 [sp + 0x2e8]\n 23650: a2 = t2 | s1\n 23653: a3 = t0 | ra\n 23656: a2 = a2 | a3\n 23659: a2 = a2 <u 0x1\n 23662: a3 = u64 [sp + 0x320]\n 23666: a2 = a2 | a3\n 23669: a0 = a0 | a2\n 23672: u64 [sp + 0x248] = ra\n 23676: u64 [sp + 0x250] = s1\n 23680: u64 [sp + 0x258] = t0\n 23684: ra = 0 if a0 != 0\n 23686: u64 [sp + 0x398] = ra\n 23690: s1 = 0 if a0 != 0\n 23692: t0 = 0 if a0 != 0\n 23694: t2 = 0 if a0 != 0\n 23696: jump @175 if a0 != 0\n      : @168 (gas: 7)\n 23700: a0 = t1 ^ 0xff\n 23704: a3 = u64 [sp + 0x3a0]\n 23708: a0 = a0 | a3\n 23711: a4 = a1 | a5\n 23714: a0 = a0 | a4\n 23717: a2 = u64 [sp + 0x2c0]\n 23721: jump @176 if a0 == 0\n      : @169 (gas: 260)\n 23725: a2 = t1 + 0x1\n 23728: u64 [sp + 0x3a8] = a2\n 23732: a0 = a2 <u 0x1\n 23735: a0 = a0 + a1\n 23738: u64 [sp + 0x380] = a0\n 23742: a0 = a0 | a2\n 23745: a0 = a0 <u 0x1\n 23748: a0 = a0 + a3\n 23751: u64 [sp + 0x370] = a0\n 23755: a0 = a0 <u a3\n 23758: a0 = a0 + a5\n 23761: u64 [sp + 0x378] = a0\n 23765: t0 = 0xff - t1\n 23769: t2 = sp + 0x7ff\n 23773: t2 = t2 + 0x360\n 23777: a0 = u64 [sp + 0x2e8]\n 23781: u8 [t2 + 0x2e1] = a0\n 23785: u8 [t2 + 736] = 0\n 23789: u8 [t2 + 735] = 0\n 23793: u8 [t2 + 734] = 0\n 23797: u8 [t2 + 733] = 0\n 23801: u8 [t2 + 732] = 0\n 23805: u8 [t2 + 731] = 0\n 23809: u8 [t2 + 730] = 0\n 23813: u8 [t2 + 729] = 0\n 23817: u8 [t2 + 728] = 0\n 23821: u8 [t2 + 727] = 0\n 23825: u8 [t2 + 726] = 0\n 23829: u8 [t2 + 725] = 0\n 23833: u8 [t2 + 724] = 0\n 23837: u8 [t2 + 723] = 0\n 23841: u8 [t2 + 722] = 0\n 23845: u8 [t2 + 721] = 0\n 23849: u8 [t2 + 720] = 0\n 23853: u8 [t2 + 719] = 0\n 23857: u8 [t2 + 718] = 0\n 23861: u8 [t2 + 717] = 0\n 23865: u8 [t2 + 716] = 0\n 23869: u8 [t2 + 715] = 0\n 23873: u8 [t2 + 714] = 0\n 23877: u8 [t2 + 713] = 0\n 23881: u8 [t2 + 712] = 0\n 23885: u8 [t2 + 711] = 0\n 23889: u8 [t2 + 710] = 0\n 23893: u8 [t2 + 709] = 0\n 23897: u8 [t2 + 708] = 0\n 23901: u8 [t2 + 707] = 0\n 23905: u8 [t2 + 706] = 0\n 23909: u8 [t2 + 705] = 0\n 23913: a1 = u64 [sp + 0x258]\n 23917: u8 [t2 + 0x2e9] = a1\n 23921: a2 = a0 >> 0x38\n 23924: u64 [sp + 0x1d0] = a2\n 23928: u8 [t2 + 0x2e8] = a2\n 23932: a2 = a0 >> 0x30\n 23935: u64 [sp + 0x1c8] = a2\n 23939: u8 [t2 + 0x2e7] = a2\n 23943: a2 = a0 >> 0x28\n 23946: u64 [sp + 0x1c0] = a2\n 23950: u8 [t2 + 0x2e6] = a2\n 23954: a2 = a0 >> 0x20\n 23957: u64 [sp + 0x1b8] = a2\n 23961: u8 [t2 + 0x2e5] = a2\n 23965: a2 = a0 >> 0x18\n 23968: u64 [sp + 0x1b0] = a2\n 23972: u8 [t2 + 0x2e4] = a2\n 23976: a2 = a0 >> 0x10\n 23979: u64 [sp + 0x1a8] = a2\n 23983: u8 [t2 + 0x2e3] = a2\n 23987: a0 = a0 >> 0x8\n 23990: u64 [sp + 0x1a0] = a0\n 23994: u8 [t2 + 0x2e2] = a0\n 23998: a0 = u64 [sp + 0x250]\n 24002: u8 [t2 + 0x2f1] = a0\n 24006: a2 = a1 >> 0x38\n 24009: u64 [sp + 0x198] = a2\n 24013: u8 [t2 + 0x2f0] = a2\n 24017: a2 = a1 >> 0x30\n 24020: u64 [sp + 0x190] = a2\n 24024: u8 [t2 + 0x2ef] = a2\n 24028: a2 = a1 >> 0x28\n 24031: u64 [sp + 0x188] = a2\n 24035: u8 [t2 + 0x2ee] = a2\n 24039: a2 = a1 >> 0x20\n 24042: u64 [sp + 0x180] = a2\n 24046: u8 [t2 + 0x2ed] = a2\n 24050: a2 = a1 >> 0x18\n 24053: u64 [sp + 0x178] = a2\n 24057: u8 [t2 + 0x2ec] = a2\n 24061: a2 = a1 >> 0x10\n 24064: u64 [sp + 0x170] = a2\n 24068: u8 [t2 + 0x2eb] = a2\n 24072: a1 = a1 >> 0x8\n 24075: u64 [sp + 0x168] = a1\n 24079: u8 [t2 + 0x2ea] = a1\n 24083: ra = u64 [sp + 0x248]\n 24087: u8 [t2 + 0x2f9] = ra\n 24091: a1 = a0 >> 0x38\n 24094: u64 [sp + 0x160] = a1\n 24098: u8 [t2 + 0x2f8] = a1\n 24102: a1 = a0 >> 0x30\n 24105: u64 [sp + 0x158] = a1\n 24109: u8 [t2 + 0x2f7] = a1\n 24113: a1 = a0 >> 0x28\n 24116: u64 [sp + 0x150] = a1\n 24120: u8 [t2 + 0x2f6] = a1\n 24124: a1 = a0 >> 0x20\n 24127: u64 [sp + 0x148] = a1\n 24131: u8 [t2 + 0x2f5] = a1\n 24135: a1 = a0 >> 0x18\n 24138: u64 [sp + 0x140] = a1\n 24142: u8 [t2 + 0x2f4] = a1\n 24146: a1 = a0 >> 0x10\n 24149: u64 [sp + 0x358] = a1\n 24153: u8 [t2 + 0x2f3] = a1\n 24157: a0 = a0 >> 0x8\n 24160: u64 [sp + 0x350] = a0\n 24164: u8 [t2 + 0x2f2] = a0\n 24168: a0 = ra >> 0x38\n 24171: u64 [sp + 0x348] = a0\n 24175: u8 [t2 + 0x300] = a0\n 24179: a0 = ra >> 0x30\n 24182: u64 [sp + 0x318] = a0\n 24186: u8 [t2 + 0x2ff] = a0\n 24190: a0 = ra >> 0x28\n 24193: u64 [sp + 0x310] = a0\n 24197: u8 [t2 + 0x2fe] = a0\n 24201: a0 = ra >> 0x20\n 24204: u64 [sp + 0x308] = a0\n 24208: u8 [t2 + 0x2fd] = a0\n 24212: a0 = ra >> 0x18\n 24215: u64 [sp + 0x300] = a0\n 24219: u8 [t2 + 0x2fc] = a0\n 24223: a0 = ra >> 0x10\n 24226: u64 [sp + 0x2f8] = a0\n 24230: u8 [t2 + 0x2fb] = a0\n 24234: a0 = ra >> 0x8\n 24237: u64 [sp + 0x220] = a0\n 24241: u8 [t2 + 0x2fa] = a0\n 24245: a1 = t0 << 0x38\n 24248: a1 = a1 >> 0x3b\n 24251: a2 = sp + 0x7ff\n 24255: a2 = a2 + 0x641\n 24259: a2 = a2 - a1\n 24262: a1 = u8 [a2 + 0x19]\n 24265: a3 = u8 [a2 + 0x18]\n 24268: a4 = u8 [a2 + 0x1a]\n 24271: a5 = u8 [a2 + 0x1b]\n 24274: a1 = a1 << 0x8\n 24277: a1 = a1 | a3\n 24280: a4 = a4 << 0x10\n 24283: a5 = a5 << 0x18\n 24286: a4 = a4 | a5\n 24289: a1 = a1 | a4\n 24292: a3 = u8 [a2 + 0x1d]\n 24295: a4 = u8 [a2 + 0x1c]\n 24298: a5 = u8 [a2 + 0x1e]\n 24301: s1 = u8 [a2 + 0x1f]\n 24304: a3 = a3 << 0x8\n 24307: a3 = a3 | a4\n 24310: a5 = a5 << 0x10\n 24313: s1 = s1 << 0x18\n 24316: a5 = a5 | s1\n 24319: a3 = a3 | a5\n 24322: a3 = a3 << 0x20\n 24325: a1 = a1 | a3\n 24328: a3 = u8 [a2 + 0x11]\n 24331: a4 = u8 [a2 + 0x10]\n 24334: a5 = u8 [a2 + 0x12]\n 24337: s1 = u8 [a2 + 0x13]\n 24340: a3 = a3 << 0x8\n 24343: a3 = a3 | a4\n 24346: a5 = a5 << 0x10\n 24349: s1 = s1 << 0x18\n 24352: a5 = a5 | s1\n 24355: a3 = a3 | a5\n 24358: a4 = u8 [a2 + 0x15]\n 24361: a5 = u8 [a2 + 0x14]\n 24364: s1 = u8 [a2 + 0x16]\n 24367: a0 = u8 [a2 + 0x17]\n 24370: a4 = a4 << 0x8\n 24373: a4 = a4 | a5\n 24376: s1 = s1 << 0x10\n 24379: a0 = a0 << 0x18\n 24382: a0 = a0 | s1\n 24385: a0 = a0 | a4\n 24388: a0 = a0 << 0x20\n 24391: t1 = a0 | a3\n 24394: a0 = t0 & 0x7\n 24397: a4 = a1 << a0\n 24400: a5 = t1 >> 0x1\n 24403: t0 = a0 ^ 0x3f\n 24406: a5 = a5 >> t0\n 24409: a4 = a4 | a5\n 24412: u64 [sp + 0x3a0] = a4\n 24416: a4 = u8 [a2 + 0x9]\n 24419: a5 = u8 [a2 + 0x8]\n 24422: s1 = u8 [a2 + 0xa]\n 24425: a1 = u8 [a2 + 0xb]\n 24428: a4 = a4 << 0x8\n 24431: a4 = a4 | a5\n 24434: s1 = s1 << 0x10\n 24437: a1 = a1 << 0x18\n 24440: a1 = a1 | s1\n 24443: a1 = a1 | a4\n 24446: a4 = u8 [a2 + 0xd]\n 24449: a5 = u8 [a2 + 0xc]\n 24452: s1 = u8 [a2 + 0xe]\n 24455: a3 = u8 [a2 + 0xf]\n 24458: a4 = a4 << 0x8\n 24461: a4 = a4 | a5\n 24464: s1 = s1 << 0x10\n 24467: a3 = a3 << 0x18\n 24470: a3 = a3 | s1\n 24473: a3 = a3 | a4\n 24476: a3 = a3 << 0x20\n 24479: a4 = a3 | a1\n 24482: a1 = a4 >> 0x1\n 24485: a3 = a0 ^ 0xffffffffffffffff\n 24488: a1 = a1 >> a3\n 24491: a3 = t1 << a0\n 24494: a1 = a1 | a3\n 24497: u64 [sp + 0x398] = a1\n 24501: a1 = u8 [a2 + 0x1]\n 24504: a3 = u8 [a2]\n 24506: a5 = u8 [a2 + 0x2]\n 24509: s1 = u8 [a2 + 0x3]\n 24512: a1 = a1 << 0x8\n 24515: a1 = a1 | a3\n 24518: a5 = a5 << 0x10\n 24521: s1 = s1 << 0x18\n 24524: a5 = a5 | s1\n 24527: a1 = a1 | a5\n 24530: a3 = u8 [a2 + 0x5]\n 24533: a5 = u8 [a2 + 0x4]\n 24536: s1 = u8 [a2 + 0x6]\n 24539: a2 = u8 [a2 + 0x7]\n 24542: a3 = a3 << 0x8\n 24545: a3 = a3 | a5\n 24548: a5 = u64 [sp + 0x378]\n 24552: s1 = s1 << 0x10\n 24555: a2 = a2 << 0x18\n 24558: a2 = a2 | s1\n 24561: a2 = a2 | a3\n 24564: a2 = a2 << 0x20\n 24567: a1 = a1 | a2\n 24570: a2 = a1 >> 0x1\n 24573: a2 = a2 >> t0\n 24576: s1 = u64 [sp + 0x370]\n 24580: a3 = a4 << a0\n 24583: a4 = u64 [sp + 0x380]\n 24587: a2 = a2 | a3\n 24590: u64 [sp + 0x388] = a2\n 24594: a2 = a4 | a5\n 24597: a3 = u64 [sp + 0x3a8]\n 24601: a3 = a3 | s1\n 24604: a2 = a2 | a3\n 24607: a0 = a1 << a0\n 24610: u64 [sp + 0x390] = a0\n 24614: jump @173 if a2 == 0\n      : @170 (gas: 229)\n 24618: u64 [sp + 872] = 0\n 24622: u64 [sp + 864] = 0\n 24626: a0 = u64 [sp + 0x1d0]\n 24630: u8 [t2 + 0x288] = a0\n 24634: a0 = u64 [sp + 0x1c8]\n 24638: u8 [t2 + 0x287] = a0\n 24642: a0 = u64 [sp + 0x1c0]\n 24646: u8 [t2 + 0x286] = a0\n 24650: a0 = u64 [sp + 0x1b8]\n 24654: u8 [t2 + 0x285] = a0\n 24658: a0 = u64 [sp + 0x1b0]\n 24662: u8 [t2 + 0x284] = a0\n 24666: a0 = u64 [sp + 0x1a8]\n 24670: u8 [t2 + 0x283] = a0\n 24674: a0 = u64 [sp + 0x1a0]\n 24678: u8 [t2 + 0x282] = a0\n 24682: a0 = u64 [sp + 0x198]\n 24686: u8 [t2 + 0x290] = a0\n 24690: a0 = u64 [sp + 0x190]\n 24694: u8 [t2 + 0x28f] = a0\n 24698: a0 = u64 [sp + 0x188]\n 24702: u8 [t2 + 0x28e] = a0\n 24706: a0 = u64 [sp + 0x180]\n 24710: u8 [t2 + 0x28d] = a0\n 24714: a0 = u64 [sp + 0x178]\n 24718: u8 [t2 + 0x28c] = a0\n 24722: a0 = u64 [sp + 0x170]\n 24726: u8 [t2 + 0x28b] = a0\n 24730: a0 = u64 [sp + 0x168]\n 24734: u8 [t2 + 0x28a] = a0\n 24738: a0 = u64 [sp + 0x160]\n 24742: u8 [t2 + 0x298] = a0\n 24746: a0 = u64 [sp + 0x158]\n 24750: u8 [t2 + 0x297] = a0\n 24754: a0 = u64 [sp + 0x150]\n 24758: u8 [t2 + 0x296] = a0\n 24762: a0 = u64 [sp + 0x148]\n 24766: u8 [t2 + 0x295] = a0\n 24770: a0 = u64 [sp + 0x140]\n 24774: u8 [t2 + 0x294] = a0\n 24778: u8 [t2 + 704] = 0\n 24782: u8 [t2 + 703] = 0\n 24786: u8 [t2 + 702] = 0\n 24790: u8 [t2 + 701] = 0\n 24794: u8 [t2 + 700] = 0\n 24798: u8 [t2 + 699] = 0\n 24802: u8 [t2 + 698] = 0\n 24806: u8 [t2 + 697] = 0\n 24810: u8 [t2 + 696] = 0\n 24814: u8 [t2 + 695] = 0\n 24818: u8 [t2 + 694] = 0\n 24822: u8 [t2 + 693] = 0\n 24826: u8 [t2 + 692] = 0\n 24830: u8 [t2 + 691] = 0\n 24834: u8 [t2 + 690] = 0\n 24838: u8 [t2 + 689] = 0\n 24842: u8 [t2 + 688] = 0\n 24846: u8 [t2 + 687] = 0\n 24850: u8 [t2 + 686] = 0\n 24854: u8 [t2 + 685] = 0\n 24858: u8 [t2 + 684] = 0\n 24862: u8 [t2 + 683] = 0\n 24866: u8 [t2 + 682] = 0\n 24870: u8 [t2 + 681] = 0\n 24874: u8 [t2 + 680] = 0\n 24878: u8 [t2 + 679] = 0\n 24882: u8 [t2 + 678] = 0\n 24886: u8 [t2 + 677] = 0\n 24890: u8 [t2 + 676] = 0\n 24894: u8 [t2 + 675] = 0\n 24898: u8 [t2 + 674] = 0\n 24902: u8 [t2 + 673] = 0\n 24906: a0 = u64 [sp + 0x2e8]\n 24910: u8 [t2 + 0x281] = a0\n 24914: a0 = u64 [sp + 0x258]\n 24918: u8 [t2 + 0x289] = a0\n 24922: a0 = u64 [sp + 0x250]\n 24926: u8 [t2 + 0x291] = a0\n 24930: u8 [t2 + 0x299] = ra\n 24934: a0 = u64 [sp + 0x358]\n 24938: u8 [t2 + 0x293] = a0\n 24942: a0 = u64 [sp + 0x350]\n 24946: u8 [t2 + 0x292] = a0\n 24950: a0 = u64 [sp + 0x348]\n 24954: u8 [t2 + 0x2a0] = a0\n 24958: a0 = u64 [sp + 0x318]\n 24962: u8 [t2 + 0x29f] = a0\n 24966: a0 = u64 [sp + 0x310]\n 24970: u8 [t2 + 0x29e] = a0\n 24974: a0 = u64 [sp + 0x308]\n 24978: u8 [t2 + 0x29d] = a0\n 24982: a0 = u64 [sp + 0x300]\n 24986: u8 [t2 + 0x29c] = a0\n 24990: a0 = u64 [sp + 0x2f8]\n 24994: u8 [t2 + 0x29b] = a0\n 24998: a0 = u64 [sp + 0x220]\n 25002: u8 [t2 + 0x29a] = a0\n 25006: s1 = u64 [sp + 0x3a8]\n 25010: a0 = s1 << 0x38\n 25013: a0 = a0 >> 0x3b\n 25016: a1 = sp + 0x7ff\n 25020: a1 = a1 + 0x5e1\n 25024: a1 = a1 + a0\n 25027: a0 = u8 [a1 + 0x11]\n 25030: a2 = u8 [a1 + 0x10]\n 25033: a3 = u8 [a1 + 0x12]\n 25036: a4 = u8 [a1 + 0x13]\n 25039: a0 = a0 << 0x8\n 25042: a0 = a0 | a2\n 25045: a3 = a3 << 0x10\n 25048: a4 = a4 << 0x18\n 25051: a3 = a3 | a4\n 25054: a0 = a0 | a3\n 25057: a2 = u8 [a1 + 0x15]\n 25060: a3 = u8 [a1 + 0x14]\n 25063: a4 = u8 [a1 + 0x16]\n 25066: a5 = u8 [a1 + 0x17]\n 25069: a2 = a2 << 0x8\n 25072: a2 = a2 | a3\n 25075: a4 = a4 << 0x10\n 25078: a5 = a5 << 0x18\n 25081: a4 = a4 | a5\n 25084: a2 = a2 | a4\n 25087: a2 = a2 << 0x20\n 25090: t0 = a2 | a0\n 25093: a2 = s1 & 0x7\n 25096: t1 = t0 >> a2\n 25099: a0 = u8 [a1 + 0x19]\n 25102: a4 = u8 [a1 + 0x18]\n 25105: s1 = u8 [a1 + 0x1a]\n 25108: a5 = u8 [a1 + 0x1b]\n 25111: a0 = a0 << 0x8\n 25114: a0 = a0 | a4\n 25117: s1 = s1 << 0x10\n 25120: a5 = a5 << 0x18\n 25123: a5 = a5 | s1\n 25126: a0 = a0 | a5\n 25129: a4 = u8 [a1 + 0x1d]\n 25132: a5 = u8 [a1 + 0x1c]\n 25135: s1 = u8 [a1 + 0x1e]\n 25138: a3 = u8 [a1 + 0x1f]\n 25141: a4 = a4 << 0x8\n 25144: a4 = a4 | a5\n 25147: s1 = s1 << 0x10\n 25150: a3 = a3 << 0x18\n 25153: a3 = a3 | s1\n 25156: a3 = a3 | a4\n 25159: a3 = a3 << 0x20\n 25162: a0 = a0 | a3\n 25165: u64 [sp + 0x350] = a0\n 25169: a0 = a0 << 0x1\n 25172: t2 = a2 ^ 0x3f\n 25175: a0 = a0 << t2\n 25178: a0 = t1 | a0\n 25181: u64 [sp + 0x358] = a0\n 25185: a0 = u8 [a1 + 0x9]\n 25188: a3 = u8 [a1 + 0x8]\n 25191: a5 = u8 [a1 + 0xa]\n 25194: s1 = u8 [a1 + 0xb]\n 25197: a0 = a0 << 0x8\n 25200: a0 = a0 | a3\n 25203: a5 = a5 << 0x10\n 25206: s1 = s1 << 0x18\n 25209: a5 = a5 | s1\n 25212: a0 = a0 | a5\n 25215: a3 = u8 [a1 + 0xd]\n 25218: a5 = u8 [a1 + 0xc]\n 25221: s1 = u8 [a1 + 0xe]\n 25224: a4 = u8 [a1 + 0xf]\n 25227: a3 = a3 << 0x8\n 25230: a3 = a3 | a5\n 25233: s1 = s1 << 0x10\n 25236: a4 = a4 << 0x18\n 25239: a4 = a4 | s1\n 25242: a3 = a3 | a4\n 25245: a3 = a3 << 0x20\n 25248: t1 = a3 | a0\n 25251: a0 = t1 >> a2\n 25254: t0 = t0 << 0x1\n 25257: a3 = a2 ^ 0xffffffffffffffff\n 25260: a5 = t0 << a3\n 25263: a5 = a5 | a0\n 25266: a0 = u8 [a1 + 0x1]\n 25269: a3 = u8 [a1]\n 25271: a4 = u8 [a1 + 0x2]\n 25274: s1 = u8 [a1 + 0x3]\n 25277: a0 = a0 << 0x8\n 25280: a0 = a0 | a3\n 25283: a4 = a4 << 0x10\n 25286: s1 = s1 << 0x18\n 25289: a4 = a4 | s1\n 25292: a0 = a0 | a4\n 25295: a3 = u8 [a1 + 0x5]\n 25298: a4 = u8 [a1 + 0x4]\n 25301: s1 = u8 [a1 + 0x6]\n 25304: a1 = u8 [a1 + 0x7]\n 25307: a3 = a3 << 0x8\n 25310: a3 = a3 | a4\n 25313: s1 = s1 << 0x10\n 25316: a1 = a1 << 0x18\n 25319: a1 = a1 | s1\n 25322: a1 = a1 | a3\n 25325: a1 = a1 << 0x20\n 25328: a0 = a0 | a1\n 25331: a0 = a0 >> a2\n 25334: t1 = t1 << 0x1\n 25337: a1 = t1 << t2\n 25340: a4 = u64 [sp + 0x368]\n 25344: t2 = a0 | a1\n 25347: a0 = u64 [sp + 0x350]\n 25351: t0 = a0 >> a2\n 25354: a1 = u64 [sp + 0x3c0]\n 25358: a0 = a1 <u 0x1\n 25361: a2 = u64 [sp + 0x3d0]\n 25365: a0 = a2 - a0\n 25368: u64 [sp + 0x310] = a0\n 25372: a0 = a1 | a2\n 25375: a0 = a0 <u 0x1\n 25378: a2 = u64 [sp + 0x3c8]\n 25382: a3 = a2 - a0\n 25385: u64 [sp + 0x308] = a3\n 25389: a0 = a2 <u a0\n 25392: a2 = u64 [sp + 0x3d8]\n 25396: a2 = a2 - a0\n 25399: u64 [sp + 0x300] = a2\n 25403: a1 = a1 + 0xffffffffffffffff\n 25406: u64 [sp + 0x2f8] = a1\n 25410: a1 = u64 [sp + 0x3a0]\n 25414: fallthrough\n      : @171 (gas: 104)\n 25415: u64 [sp + 0x368] = a4\n 25419: u64 [sp + 792] = 0\n 25423: a0 = t2 >> 0x3f\n 25426: s1 = a5 << 0x1\n 25429: s1 = s1 | a0\n 25432: t2 = t2 << 0x1\n 25435: a0 = a1 >> 0x3f\n 25438: a4 = t2 | a0\n 25441: a0 = u64 [sp + 0x310]\n 25445: a3 = a0 ^ s1\n 25448: a2 = a0 <u s1\n 25451: a0 = u64 [sp + 0x2f8]\n 25455: a0 = a0 <u a4\n 25458: t2 = a4\n 25460: u64 [sp + 0x348] = a4\n 25464: a0 = a2 if a3 != 0\n 25467: t0 = t0 << 0x1\n 25470: t1 = u64 [sp + 0x358]\n 25474: a2 = t1 >> 0x3f\n 25477: t0 = t0 | a2\n 25480: u64 [sp + 0x350] = t0\n 25484: a5 = a5 >> 0x3f\n 25487: t1 = t1 << 0x1\n 25490: ra = t1 | a5\n 25493: a3 = a1 << 0x1\n 25496: a2 = u64 [sp + 0x398]\n 25500: a1 = a2 >> 0x3f\n 25503: a1 = a1 | a3\n 25506: a3 = a2 << 0x1\n 25509: a4 = u64 [sp + 0x388]\n 25513: a2 = a4 >> 0x3f\n 25516: a2 = a2 | a3\n 25519: a3 = a4 << 0x1\n 25522: a5 = u64 [sp + 0x390]\n 25526: a4 = a5 >> 0x3f\n 25529: a3 = a3 | a4\n 25532: a4 = a5 << 0x1\n 25535: a5 = u64 [sp + 0x368]\n 25539: a4 = a4 | a5\n 25542: u64 [sp + 0x390] = a4\n 25546: a4 = u64 [sp + 0x360]\n 25550: a3 = a3 | a4\n 25553: u64 [sp + 0x388] = a3\n 25557: a2 = a2 | a4\n 25560: u64 [sp + 0x398] = a2\n 25564: a1 = a1 | a4\n 25567: u64 [sp + 0x3a0] = a1\n 25571: a2 = u64 [sp + 0x308]\n 25575: a1 = a2 - ra\n 25578: a0 = a1 <u a0\n 25581: a1 = a2 <u ra\n 25584: a2 = u64 [sp + 0x300]\n 25588: a2 = a2 - t0\n 25591: a2 = a2 - a1\n 25594: a0 = a2 - a0\n 25597: a0 = a0 >>a 0x3f\n 25600: a1 = u64 [sp + 0x3c0]\n 25604: a1 = a1 & a0\n 25607: a2 = u64 [sp + 0x3d0]\n 25611: a2 = a2 & a0\n 25614: a3 = s1 ^ a2\n 25617: a4 = s1 <u a2\n 25620: t1 = t2 <u a1\n 25623: a4 = t1 if a3 == 0\n 25626: a3 = u64 [sp + 0x3c8]\n 25630: t0 = a0 & a3\n 25633: a3 = ra - t0\n 25636: a5 = a3 - a4\n 25639: u64 [sp + 0x358] = a5\n 25643: t2 = a3 <u a4\n 25646: a3 = ra <u t0\n 25649: a5 = u64 [sp + 0x3d8]\n 25653: a5 = a5 & a0\n 25656: a4 = u64 [sp + 0x350]\n 25660: a5 = a4 - a5\n 25663: a5 = a5 - a3\n 25666: t0 = a5 - t2\n 25669: s1 = s1 - a2\n 25672: a5 = s1 - t1\n 25675: a2 = u64 [sp + 0x348]\n 25679: t2 = a2 - a1\n 25682: a4 = u64 [sp + 0x3a8]\n 25686: s1 = u64 [sp + 0x380]\n 25690: a1 = a4 | s1\n 25693: a1 = a1 <u 0x1\n 25696: a3 = u64 [sp + 0x370]\n 25700: a2 = a3 <u a1\n 25703: a1 = a3 - a1\n 25706: a3 = a4 <u 0x1\n 25709: s1 = s1 - a3\n 25712: a3 = u64 [sp + 0x378]\n 25716: a3 = a3 - a2\n 25719: a4 = a4 + 0xffffffffffffffff\n 25722: u64 [sp + 0x380] = s1\n 25726: u64 [sp + 0x378] = a3\n 25730: a2 = s1 | a3\n 25733: u64 [sp + 0x3a8] = a4\n 25737: a3 = a4 | a1\n 25740: a2 = a2 | a3\n 25743: a4 = a0 & 0x1\n 25746: u64 [sp + 0x370] = a1\n 25750: a1 = u64 [sp + 0x3a0]\n 25754: u64 [sp + 864] = 0\n 25758: jump @171 if a2 != 0\n      : @172 (gas: 1)\n 25762: jump @174\n      : @173 (gas: 4)\n 25764: a4 = 0\n 25766: u64 [sp + 792] = 0\n 25770: a1 = u64 [sp + 0x3a0]\n 25774: fallthrough\n      : @174 (gas: 21)\n 25775: a3 = u64 [sp + 0x398]\n 25779: a0 = a3 >> 0x3f\n 25782: a2 = a1 << 0x1\n 25785: a0 = a0 | a2\n 25788: a5 = u64 [sp + 0x388]\n 25792: a2 = a5 >> 0x3f\n 25795: a3 = a3 << 0x1\n 25798: a1 = a3 | a2\n 25801: a3 = u64 [sp + 0x390]\n 25805: a2 = a3 >> 0x3f\n 25808: a5 = a5 << 0x1\n 25811: a3 = a3 << 0x1\n 25814: t2 = a4 | a3\n 25817: a4 = u64 [sp + 0x318]\n 25821: a2 = a2 | a4\n 25824: t0 = a2 | a5\n 25827: s1 = a4 | a1\n 25830: a0 = a0 | a4\n 25833: u64 [sp + 0x398] = a0\n 25837: a2 = u64 [sp + 0x2c0]\n 25841: jump @176\n      : @175 (gas: 2)\n 25843: a2 = u64 [sp + 0x2c0]\n 25847: fallthrough\n      : @176 (gas: 220)\n 25848: u64 [sp + 0x3a8] = t0\n 25852: u64 [sp + 0x388] = t2\n 25856: u64 [sp + 0x390] = s1\n 25860: t1 = u64 [sp + 0x3c0]\n 25864: a0 = t1 mulhu a2\n 25867: t0 = u64 [sp + 0x3d0]\n 25871: a1 = t0 * a2\n 25874: a0 = a0 + a1\n 25877: a1 = a0 <u a1\n 25880: a4 = t0 mulhu a2\n 25883: a4 = a4 + a1\n 25886: a3 = u64 [sp + 0x210]\n 25890: a5 = t1 * a3\n 25893: a0 = a0 + a5\n 25896: u64 [sp + 0x3a0] = a0\n 25900: a0 = a0 <u a5\n 25903: a5 = t1 mulhu a3\n 25906: a0 = a0 + a5\n 25909: a0 = a0 + a4\n 25912: a4 = a0 <u a4\n 25915: a5 = t0 mulhu a3\n 25918: a4 = a4 + a5\n 25921: a5 = t0 * a3\n 25924: t2 = a5 + a0\n 25927: a5 = t2 <u a5\n 25930: a4 = a4 + a5\n 25933: u64 [sp + 0x380] = a4\n 25937: a1 = u64 [sp + 0x218]\n 25941: a5 = a1 * t0\n 25944: s1 = a1 mulhu t1\n 25947: a5 = a5 + s1\n 25950: a4 = u64 [sp + 0x208]\n 25954: s1 = a4 * t1\n 25957: a5 = a5 + s1\n 25960: ra = u64 [sp + 0x3c8]\n 25964: s1 = a2 mulhu ra\n 25967: a0 = u64 [sp + 0x3d8]\n 25971: a4 = a2 * a0\n 25974: a4 = a4 + s1\n 25977: s1 = a3 * ra\n 25980: a4 = a4 + s1\n 25983: a4 = a4 + a5\n 25986: a5 = a1 * t1\n 25989: s1 = a2 * ra\n 25992: s1 = s1 + a5\n 25995: a5 = s1 <u a5\n 25998: a4 = a4 + a5\n 26001: a0 = u64 [sp + 0x380]\n 26005: a4 = a4 + a0\n 26008: s1 = s1 + t2\n 26011: a0 = s1 <u t2\n 26014: a0 = a0 + a4\n 26017: a1 = u64 [sp + 0x2d0]\n 26021: a1 = a1 - a0\n 26024: u64 [sp + 0x380] = a1\n 26028: a4 = t1 * a2\n 26031: a1 = u64 [sp + 0x268]\n 26035: a0 = u64 [sp + 0x3a0]\n 26039: a5 = a1 ^ a0\n 26042: a2 = a1 <u a0\n 26045: t2 = u64 [sp + 0x260]\n 26049: a0 = t2 <u a4\n 26052: a2 = a0 if a5 == 0\n 26055: a3 = u64 [sp + 0x2f0]\n 26059: a5 = a3 <u s1\n 26062: s1 = a3 - s1\n 26065: a3 = s1 <u a2\n 26068: a3 = a3 + a5\n 26071: a5 = u64 [sp + 0x380]\n 26075: a3 = a5 - a3\n 26078: u64 [sp + 0x2c0] = a3\n 26082: s1 = s1 - a2\n 26085: u64 [sp + 0x2d0] = s1\n 26089: a2 = u64 [sp + 0x3a0]\n 26093: a1 = a1 - a2\n 26096: a1 = a1 - a0\n 26099: u64 [sp + 0x268] = a1\n 26103: a0 = t2 - a4\n 26106: u64 [sp + 0x260] = a0\n 26110: s1 = u64 [sp + 0x388]\n 26114: a0 = t1 mulhu s1\n 26117: a1 = t0 * s1\n 26120: a0 = a0 + a1\n 26123: a1 = a0 <u a1\n 26126: a2 = t0 mulhu s1\n 26129: a2 = a2 + a1\n 26132: a1 = u64 [sp + 0x3a8]\n 26136: a3 = t1 * a1\n 26139: t2 = a3 + a0\n 26142: a0 = t2 <u a3\n 26145: a3 = t1 mulhu a1\n 26148: a0 = a0 + a3\n 26151: a0 = a0 + a2\n 26154: a2 = a0 <u a2\n 26157: a3 = t0 mulhu a1\n 26160: a2 = a2 + a3\n 26163: a3 = t0 * a1\n 26166: a0 = a0 + a3\n 26169: a3 = a0 <u a3\n 26172: a2 = a2 + a3\n 26175: a1 = u64 [sp + 0x390]\n 26179: a3 = a1 * t0\n 26182: a4 = a1 mulhu t1\n 26185: t0 = a1\n 26187: a3 = a3 + a4\n 26190: a1 = u64 [sp + 0x398]\n 26194: a4 = a1 * t1\n 26197: a3 = a3 + a4\n 26200: a4 = s1 mulhu ra\n 26203: a1 = u64 [sp + 0x3d8]\n 26207: a5 = s1 * a1\n 26210: a4 = a4 + a5\n 26213: a1 = u64 [sp + 0x3a8]\n 26217: a5 = a1 * ra\n 26220: a4 = a4 + a5\n 26223: a3 = a3 + a4\n 26226: a4 = t0 * t1\n 26229: a5 = s1 * ra\n 26232: a5 = a5 + a4\n 26235: a4 = a5 <u a4\n 26238: a3 = a3 + a4\n 26241: a2 = a2 + a3\n 26244: a5 = a5 + a0\n 26247: a0 = a5 <u a0\n 26250: a1 = u64 [sp + 0x248]\n 26254: a0 = a1 - a0\n 26257: t0 = a0 - a2\n 26260: a2 = t1 * s1\n 26263: a3 = u64 [sp + 0x258]\n 26267: a0 = a3 ^ t2\n 26270: a4 = a3 <u t2\n 26273: a1 = u64 [sp + 0x2e8]\n 26277: s1 = a1 <u a2\n 26280: a4 = s1 if a0 == 0\n 26283: a0 = u64 [sp + 0x250]\n 26287: t1 = a0 <u a5\n 26290: a5 = a0 - a5\n 26293: a0 = a5 <u a4\n 26296: a0 = a0 + t1\n 26299: a0 = t0 - a0\n 26302: a5 = a5 - a4\n 26305: a3 = a3 - s1\n 26308: a3 = a3 - t2\n 26311: a1 = a1 - a2\n 26314: a2 = u64 [sp + 0x2d0]\n 26318: a2 = a2 + a5\n 26321: a4 = a2 <u a5\n 26324: a5 = u64 [sp + 0x2c0]\n 26328: a0 = a0 + a5\n 26331: a0 = a0 + a4\n 26334: a4 = u64 [sp + 0x260]\n 26338: a4 = a4 + a1\n 26341: a1 = a4 <u a1\n 26344: a5 = a4\n 26346: a4 = u64 [sp + 0x268]\n 26350: a4 = a4 + a3\n 26353: s1 = a4 + a1\n 26356: a4 = s1 ^ a3\n 26359: a3 = s1 <u a3\n 26362: a3 = a1 if a4 == 0\n 26365: ra = a2 + a3\n 26368: a1 = ra <u a2\n 26371: t0 = a0 + a1\n 26374: a1 = clz t0\n 26376: a0 = clz ra\n 26378: a0 = a0 + 0x40\n 26381: a0 = a1 if t0 != 0\n 26384: a1 = clz s1\n 26386: a2 = clz a5\n 26388: t2 = a5\n 26390: a2 = a2 + 0x40\n 26393: a2 = a1 if s1 != 0\n 26396: a1 = ra | t0\n 26399: a3 = a2 + 0x80\n 26403: a0 = a3 if a1 == 0\n 26406: a2 = a3 <u a2\n 26409: a2 = 0 if a1 != 0\n 26411: a5 = u64 [sp + 0x328]\n 26415: a3 = a5 <u a0\n 26418: a4 = u64 [sp + 0x330]\n 26422: t1 = a4 ^ a2\n 26425: a1 = a4 <u a2\n 26428: a1 = a3 if t1 == 0\n 26431: a4 = a4 - a2\n 26434: t1 = a4 - a3\n 26437: a4 = a5 - a0\n 26440: a2 = a4 <u 0x100\n 26444: a2 = a2 ^ 0x1\n 26447: a3 = t1 >u 0\n 26449: a2 = a3 if t1 != 0\n 26452: a5 = a1 <u 0x1\n 26455: a5 = a5 + 0xffffffffffffffff\n 26458: a0 = -a1\n 26460: u64 [sp + 0x398] = a0\n 26464: a3 = a0 >u 0\n 26466: a0 = a5 >u 0\n 26468: a0 = a3 if a5 == 0\n 26471: a0 = a2 if a1 == 0\n 26474: a1 = s1 | t0\n 26477: a2 = t2 | ra\n 26480: a1 = a1 | a2\n 26483: a1 = a1 <u 0x1\n 26486: a2 = u64 [sp + 0x320]\n 26490: a1 = a1 | a2\n 26493: a2 = t2\n 26495: a0 = a0 | a1\n 26498: a1 = t0\n 26500: a1 = 0 if a0 != 0\n 26502: u64 [sp + 0x3a0] = a1\n 26506: u64 [sp + 0x2e8] = ra\n 26510: ra = 0 if a0 != 0\n 26512: u64 [sp + 0x3a8] = ra\n 26516: t2 = s1\n 26518: t2 = 0 if a0 != 0\n 26520: u64 [sp + 0x2f0] = a2\n 26524: ra = a2\n 26526: ra = 0 if a0 != 0\n 26528: u64 [sp + 0x258] = s1\n 26532: u64 [sp + 0x250] = t0\n 26536: jump @184 if a0 != 0\n      : @177 (gas: 7)\n 26540: a1 = a4\n 26542: a0 = a4 ^ 0xff\n 26546: a2 = u64 [sp + 0x398]\n 26550: a0 = a0 | a2\n 26553: a4 = t1 | a5\n 26556: a0 = a0 | a4\n 26559: jump @184 if a0 == 0\n      : @178 (gas: 260)\n 26563: a3 = a1\n 26565: a1 = a1 + 0x1\n 26568: u64 [sp + 0x3a8] = a1\n 26572: a0 = a1 <u 0x1\n 26575: a0 = a0 + t1\n 26578: u64 [sp + 0x380] = a0\n 26582: a0 = a0 | a1\n 26585: a0 = a0 <u 0x1\n 26588: a0 = a0 + a2\n 26591: u64 [sp + 0x370] = a0\n 26595: a0 = a0 <u a2\n 26598: a0 = a0 + a5\n 26601: u64 [sp + 0x378] = a0\n 26605: a2 = u64 [sp + 0x2f0]\n 26609: a1 = t0\n 26611: t0 = 0xff - a3\n 26615: t2 = sp + 0x7ff\n 26619: t2 = t2 + 0x360\n 26623: u8 [t2 + 0x261] = a2\n 26627: u8 [t2 + 608] = 0\n 26631: u8 [t2 + 607] = 0\n 26635: u8 [t2 + 606] = 0\n 26639: u8 [t2 + 605] = 0\n 26643: u8 [t2 + 604] = 0\n 26647: u8 [t2 + 603] = 0\n 26651: u8 [t2 + 602] = 0\n 26655: u8 [t2 + 601] = 0\n 26659: u8 [t2 + 600] = 0\n 26663: u8 [t2 + 599] = 0\n 26667: u8 [t2 + 598] = 0\n 26671: u8 [t2 + 597] = 0\n 26675: u8 [t2 + 596] = 0\n 26679: u8 [t2 + 595] = 0\n 26683: u8 [t2 + 594] = 0\n 26687: u8 [t2 + 593] = 0\n 26691: u8 [t2 + 592] = 0\n 26695: u8 [t2 + 591] = 0\n 26699: u8 [t2 + 590] = 0\n 26703: u8 [t2 + 589] = 0\n 26707: u8 [t2 + 588] = 0\n 26711: u8 [t2 + 587] = 0\n 26715: u8 [t2 + 586] = 0\n 26719: u8 [t2 + 585] = 0\n 26723: u8 [t2 + 584] = 0\n 26727: u8 [t2 + 583] = 0\n 26731: u8 [t2 + 582] = 0\n 26735: u8 [t2 + 581] = 0\n 26739: u8 [t2 + 580] = 0\n 26743: u8 [t2 + 579] = 0\n 26747: u8 [t2 + 578] = 0\n 26751: u8 [t2 + 577] = 0\n 26755: u8 [t2 + 0x269] = s1\n 26759: a0 = a2 >> 0x38\n 26762: u64 [sp + 0x220] = a0\n 26766: u8 [t2 + 0x268] = a0\n 26770: a0 = a2 >> 0x30\n 26773: u64 [sp + 0x218] = a0\n 26777: u8 [t2 + 0x267] = a0\n 26781: a0 = a2 >> 0x28\n 26784: u64 [sp + 0x210] = a0\n 26788: u8 [t2 + 0x266] = a0\n 26792: a0 = a2 >> 0x20\n 26795: u64 [sp + 0x208] = a0\n 26799: u8 [t2 + 0x265] = a0\n 26803: a0 = a2 >> 0x18\n 26806: u64 [sp + 0x1d0] = a0\n 26810: u8 [t2 + 0x264] = a0\n 26814: a0 = a2 >> 0x10\n 26817: u64 [sp + 0x1c8] = a0\n 26821: u8 [t2 + 0x263] = a0\n 26825: a0 = a2 >> 0x8\n 26828: u64 [sp + 0x1c0] = a0\n 26832: u8 [t2 + 0x262] = a0\n 26836: a2 = u64 [sp + 0x2e8]\n 26840: u8 [t2 + 0x271] = a2\n 26844: a0 = s1 >> 0x38\n 26847: u64 [sp + 0x1b8] = a0\n 26851: u8 [t2 + 0x270] = a0\n 26855: a0 = s1 >> 0x30\n 26858: u64 [sp + 0x1b0] = a0\n 26862: u8 [t2 + 0x26f] = a0\n 26866: a0 = s1 >> 0x28\n 26869: u64 [sp + 0x1a8] = a0\n 26873: u8 [t2 + 0x26e] = a0\n 26877: a0 = s1 >> 0x20\n 26880: u64 [sp + 0x1a0] = a0\n 26884: u8 [t2 + 0x26d] = a0\n 26888: a0 = s1 >> 0x18\n 26891: u64 [sp + 0x198] = a0\n 26895: u8 [t2 + 0x26c] = a0\n 26899: a0 = s1 >> 0x10\n 26902: u64 [sp + 0x190] = a0\n 26906: u8 [t2 + 0x26b] = a0\n 26910: s1 = s1 >> 0x8\n 26913: u64 [sp + 0x188] = s1\n 26917: u8 [t2 + 0x26a] = s1\n 26921: u8 [t2 + 0x279] = a1\n 26925: a0 = a2 >> 0x38\n 26928: u64 [sp + 0x180] = a0\n 26932: u8 [t2 + 0x278] = a0\n 26936: a0 = a2 >> 0x30\n 26939: u64 [sp + 0x178] = a0\n 26943: u8 [t2 + 0x277] = a0\n 26947: a0 = a2 >> 0x28\n 26950: u64 [sp + 0x170] = a0\n 26954: u8 [t2 + 0x276] = a0\n 26958: a0 = a2 >> 0x20\n 26961: u64 [sp + 0x168] = a0\n 26965: u8 [t2 + 0x275] = a0\n 26969: a0 = a2 >> 0x18\n 26972: u64 [sp + 0x160] = a0\n 26976: u8 [t2 + 0x274] = a0\n 26980: a0 = a2 >> 0x10\n 26983: u64 [sp + 0x358] = a0\n 26987: u8 [t2 + 0x273] = a0\n 26991: a0 = a2 >> 0x8\n 26994: u64 [sp + 0x350] = a0\n 26998: u8 [t2 + 0x272] = a0\n 27002: a0 = a1 >> 0x38\n 27005: u64 [sp + 0x348] = a0\n 27009: u8 [t2 + 0x280] = a0\n 27013: a0 = a1 >> 0x30\n 27016: u64 [sp + 0x318] = a0\n 27020: u8 [t2 + 0x27f] = a0\n 27024: a0 = a1 >> 0x28\n 27027: u64 [sp + 0x310] = a0\n 27031: u8 [t2 + 0x27e] = a0\n 27035: a0 = a1 >> 0x20\n 27038: u64 [sp + 0x308] = a0\n 27042: u8 [t2 + 0x27d] = a0\n 27046: a0 = a1 >> 0x18\n 27049: u64 [sp + 0x300] = a0\n 27053: u8 [t2 + 0x27c] = a0\n 27057: a0 = a1 >> 0x10\n 27060: u64 [sp + 0x2f8] = a0\n 27064: u8 [t2 + 0x27b] = a0\n 27068: a1 = a1 >> 0x8\n 27071: u64 [sp + 0x248] = a1\n 27075: u8 [t2 + 0x27a] = a1\n 27079: a1 = t0 << 0x38\n 27082: a1 = a1 >> 0x3b\n 27085: a0 = sp + 0x7ff\n 27089: a0 = a0 + 0x5c1\n 27093: a1 = a0 - a1\n 27096: a2 = u8 [a1 + 0x19]\n 27099: a3 = u8 [a1 + 0x18]\n 27102: a4 = u8 [a1 + 0x1a]\n 27105: a5 = u8 [a1 + 0x1b]\n 27108: a2 = a2 << 0x8\n 27111: a2 = a2 | a3\n 27114: a4 = a4 << 0x10\n 27117: a5 = a5 << 0x18\n 27120: a4 = a4 | a5\n 27123: a2 = a2 | a4\n 27126: a3 = u8 [a1 + 0x1d]\n 27129: a4 = u8 [a1 + 0x1c]\n 27132: a5 = u8 [a1 + 0x1e]\n 27135: s1 = u8 [a1 + 0x1f]\n 27138: a3 = a3 << 0x8\n 27141: a3 = a3 | a4\n 27144: a5 = a5 << 0x10\n 27147: s1 = s1 << 0x18\n 27150: a5 = a5 | s1\n 27153: a3 = a3 | a5\n 27156: a3 = a3 << 0x20\n 27159: a2 = a2 | a3\n 27162: a3 = u8 [a1 + 0x11]\n 27165: a4 = u8 [a1 + 0x10]\n 27168: a5 = u8 [a1 + 0x12]\n 27171: s1 = u8 [a1 + 0x13]\n 27174: a3 = a3 << 0x8\n 27177: a3 = a3 | a4\n 27180: a5 = a5 << 0x10\n 27183: s1 = s1 << 0x18\n 27186: a5 = a5 | s1\n 27189: a3 = a3 | a5\n 27192: a4 = u8 [a1 + 0x15]\n 27195: a5 = u8 [a1 + 0x14]\n 27198: s1 = u8 [a1 + 0x16]\n 27201: a0 = u8 [a1 + 0x17]\n 27204: a4 = a4 << 0x8\n 27207: a4 = a4 | a5\n 27210: s1 = s1 << 0x10\n 27213: a0 = a0 << 0x18\n 27216: a0 = a0 | s1\n 27219: a0 = a0 | a4\n 27222: a0 = a0 << 0x20\n 27225: t1 = a0 | a3\n 27228: a0 = t0 & 0x7\n 27231: a4 = a2 << a0\n 27234: a5 = t1 >> 0x1\n 27237: t0 = a0 ^ 0x3f\n 27240: a5 = a5 >> t0\n 27243: a4 = a4 | a5\n 27246: u64 [sp + 0x3a0] = a4\n 27250: a4 = u8 [a1 + 0x9]\n 27253: a5 = u8 [a1 + 0x8]\n 27256: s1 = u8 [a1 + 0xa]\n 27259: a2 = u8 [a1 + 0xb]\n 27262: a4 = a4 << 0x8\n 27265: a4 = a4 | a5\n 27268: s1 = s1 << 0x10\n 27271: a2 = a2 << 0x18\n 27274: a2 = a2 | s1\n 27277: a2 = a2 | a4\n 27280: a4 = u8 [a1 + 0xd]\n 27283: a5 = u8 [a1 + 0xc]\n 27286: s1 = u8 [a1 + 0xe]\n 27289: a3 = u8 [a1 + 0xf]\n 27292: a4 = a4 << 0x8\n 27295: a4 = a4 | a5\n 27298: s1 = s1 << 0x10\n 27301: a3 = a3 << 0x18\n 27304: a3 = a3 | s1\n 27307: a3 = a3 | a4\n 27310: a3 = a3 << 0x20\n 27313: a5 = a3 | a2\n 27316: a2 = a5 >> 0x1\n 27319: a3 = a0 ^ 0xffffffffffffffff\n 27322: a2 = a2 >> a3\n 27325: a3 = t1 << a0\n 27328: t1 = u64 [sp + 0x370]\n 27332: a2 = a2 | a3\n 27335: u64 [sp + 0x398] = a2\n 27339: a2 = u8 [a1 + 0x1]\n 27342: a3 = u8 [a1]\n 27344: a4 = u8 [a1 + 0x2]\n 27347: s1 = u8 [a1 + 0x3]\n 27350: a2 = a2 << 0x8\n 27353: a2 = a2 | a3\n 27356: a4 = a4 << 0x10\n 27359: s1 = s1 << 0x18\n 27362: a4 = a4 | s1\n 27365: a2 = a2 | a4\n 27368: a3 = u8 [a1 + 0x5]\n 27371: a4 = u8 [a1 + 0x4]\n 27374: s1 = u8 [a1 + 0x6]\n 27377: a1 = u8 [a1 + 0x7]\n 27380: a3 = a3 << 0x8\n 27383: a3 = a3 | a4\n 27386: a4 = u64 [sp + 0x380]\n 27390: s1 = s1 << 0x10\n 27393: a1 = a1 << 0x18\n 27396: a1 = a1 | s1\n 27399: a1 = a1 | a3\n 27402: a1 = a1 << 0x20\n 27405: a1 = a1 | a2\n 27408: a2 = a1 >> 0x1\n 27411: a2 = a2 >> t0\n 27414: a3 = a5 << a0\n 27417: a5 = u64 [sp + 0x378]\n 27421: a2 = a2 | a3\n 27424: u64 [sp + 0x388] = a2\n 27428: a2 = a4 | a5\n 27431: a3 = u64 [sp + 0x3a8]\n 27435: a3 = a3 | t1\n 27438: a2 = a2 | a3\n 27441: a0 = a1 << a0\n 27444: u64 [sp + 0x390] = a0\n 27448: jump @182 if a2 == 0\n      : @179 (gas: 229)\n 27452: u64 [sp + 872] = 0\n 27456: u64 [sp + 864] = 0\n 27460: a0 = u64 [sp + 0x220]\n 27464: u8 [t2 + 0x208] = a0\n 27468: a0 = u64 [sp + 0x218]\n 27472: u8 [t2 + 0x207] = a0\n 27476: a0 = u64 [sp + 0x210]\n 27480: u8 [t2 + 0x206] = a0\n 27484: a0 = u64 [sp + 0x208]\n 27488: u8 [t2 + 0x205] = a0\n 27492: a0 = u64 [sp + 0x1d0]\n 27496: u8 [t2 + 0x204] = a0\n 27500: a0 = u64 [sp + 0x1c8]\n 27504: u8 [t2 + 0x203] = a0\n 27508: a0 = u64 [sp + 0x1c0]\n 27512: u8 [t2 + 0x202] = a0\n 27516: a0 = u64 [sp + 0x1b8]\n 27520: u8 [t2 + 0x210] = a0\n 27524: a0 = u64 [sp + 0x1b0]\n 27528: u8 [t2 + 0x20f] = a0\n 27532: a0 = u64 [sp + 0x1a8]\n 27536: u8 [t2 + 0x20e] = a0\n 27540: a0 = u64 [sp + 0x1a0]\n 27544: u8 [t2 + 0x20d] = a0\n 27548: a0 = u64 [sp + 0x198]\n 27552: u8 [t2 + 0x20c] = a0\n 27556: a0 = u64 [sp + 0x190]\n 27560: u8 [t2 + 0x20b] = a0\n 27564: a0 = u64 [sp + 0x188]\n 27568: u8 [t2 + 0x20a] = a0\n 27572: a0 = u64 [sp + 0x180]\n 27576: u8 [t2 + 0x218] = a0\n 27580: a0 = u64 [sp + 0x178]\n 27584: u8 [t2 + 0x217] = a0\n 27588: a0 = u64 [sp + 0x170]\n 27592: u8 [t2 + 0x216] = a0\n 27596: a0 = u64 [sp + 0x168]\n 27600: u8 [t2 + 0x215] = a0\n 27604: a0 = u64 [sp + 0x160]\n 27608: u8 [t2 + 0x214] = a0\n 27612: u8 [t2 + 576] = 0\n 27616: u8 [t2 + 575] = 0\n 27620: u8 [t2 + 574] = 0\n 27624: u8 [t2 + 573] = 0\n 27628: u8 [t2 + 572] = 0\n 27632: u8 [t2 + 571] = 0\n 27636: u8 [t2 + 570] = 0\n 27640: u8 [t2 + 569] = 0\n 27644: u8 [t2 + 568] = 0\n 27648: u8 [t2 + 567] = 0\n 27652: u8 [t2 + 566] = 0\n 27656: u8 [t2 + 565] = 0\n 27660: u8 [t2 + 564] = 0\n 27664: u8 [t2 + 563] = 0\n 27668: u8 [t2 + 562] = 0\n 27672: u8 [t2 + 561] = 0\n 27676: u8 [t2 + 560] = 0\n 27680: u8 [t2 + 559] = 0\n 27684: u8 [t2 + 558] = 0\n 27688: u8 [t2 + 557] = 0\n 27692: u8 [t2 + 556] = 0\n 27696: u8 [t2 + 555] = 0\n 27700: u8 [t2 + 554] = 0\n 27704: u8 [t2 + 553] = 0\n 27708: u8 [t2 + 552] = 0\n 27712: u8 [t2 + 551] = 0\n 27716: u8 [t2 + 550] = 0\n 27720: u8 [t2 + 549] = 0\n 27724: u8 [t2 + 548] = 0\n 27728: u8 [t2 + 547] = 0\n 27732: u8 [t2 + 546] = 0\n 27736: u8 [t2 + 545] = 0\n 27740: a0 = u64 [sp + 0x2f0]\n 27744: u8 [t2 + 0x201] = a0\n 27748: a0 = u64 [sp + 0x258]\n 27752: u8 [t2 + 0x209] = a0\n 27756: a0 = u64 [sp + 0x2e8]\n 27760: u8 [t2 + 0x211] = a0\n 27764: a0 = u64 [sp + 0x250]\n 27768: u8 [t2 + 0x219] = a0\n 27772: a0 = u64 [sp + 0x358]\n 27776: u8 [t2 + 0x213] = a0\n 27780: a0 = u64 [sp + 0x350]\n 27784: u8 [t2 + 0x212] = a0\n 27788: a0 = u64 [sp + 0x348]\n 27792: u8 [t2 + 0x220] = a0\n 27796: a0 = u64 [sp + 0x318]\n 27800: u8 [t2 + 0x21f] = a0\n 27804: a0 = u64 [sp + 0x310]\n 27808: u8 [t2 + 0x21e] = a0\n 27812: a0 = u64 [sp + 0x308]\n 27816: u8 [t2 + 0x21d] = a0\n 27820: a0 = u64 [sp + 0x300]\n 27824: u8 [t2 + 0x21c] = a0\n 27828: a0 = u64 [sp + 0x2f8]\n 27832: u8 [t2 + 0x21b] = a0\n 27836: a0 = u64 [sp + 0x248]\n 27840: u8 [t2 + 0x21a] = a0\n 27844: s1 = u64 [sp + 0x3a8]\n 27848: a0 = s1 << 0x38\n 27851: a0 = a0 >> 0x3b\n 27854: a1 = sp + 0x7ff\n 27858: a1 = a1 + 0x561\n 27862: a0 = a0 + a1\n 27865: a1 = u8 [a0 + 0x11]\n 27868: a2 = u8 [a0 + 0x10]\n 27871: a3 = u8 [a0 + 0x12]\n 27874: t0 = a4\n 27876: a4 = u8 [a0 + 0x13]\n 27879: a1 = a1 << 0x8\n 27882: a1 = a1 | a2\n 27885: a3 = a3 << 0x10\n 27888: a4 = a4 << 0x18\n 27891: a3 = a3 | a4\n 27894: a1 = a1 | a3\n 27897: a2 = u8 [a0 + 0x15]\n 27900: a3 = u8 [a0 + 0x14]\n 27903: a4 = u8 [a0 + 0x16]\n 27906: a5 = u8 [a0 + 0x17]\n 27909: a2 = a2 << 0x8\n 27912: a2 = a2 | a3\n 27915: a4 = a4 << 0x10\n 27918: a5 = a5 << 0x18\n 27921: a4 = a4 | a5\n 27924: a2 = a2 | a4\n 27927: a2 = a2 << 0x20\n 27930: t2 = a2 | a1\n 27933: s1 = s1 & 0x7\n 27936: ra = t2 >> s1\n 27939: a2 = u8 [a0 + 0x19]\n 27942: a3 = u8 [a0 + 0x18]\n 27945: a4 = u8 [a0 + 0x1a]\n 27948: a5 = u8 [a0 + 0x1b]\n 27951: a2 = a2 << 0x8\n 27954: a2 = a2 | a3\n 27957: a4 = a4 << 0x10\n 27960: a5 = a5 << 0x18\n 27963: a4 = a4 | a5\n 27966: a2 = a2 | a4\n 27969: a3 = u8 [a0 + 0x1d]\n 27972: a4 = u8 [a0 + 0x1c]\n 27975: a5 = u8 [a0 + 0x1e]\n 27978: a1 = u8 [a0 + 0x1f]\n 27981: a3 = a3 << 0x8\n 27984: a3 = a3 | a4\n 27987: a5 = a5 << 0x10\n 27990: a1 = a1 << 0x18\n 27993: a1 = a1 | a5\n 27996: a1 = a1 | a3\n 27999: a1 = a1 << 0x20\n 28002: a1 = a1 | a2\n 28005: u64 [sp + 0x350] = a1\n 28009: a1 = a1 << 0x1\n 28012: t1 = s1 ^ 0x3f\n 28015: a1 = a1 << t1\n 28018: a1 = ra | a1\n 28021: u64 [sp + 0x358] = a1\n 28025: a1 = u8 [a0 + 0x9]\n 28028: a2 = u8 [a0 + 0x8]\n 28031: a3 = u8 [a0 + 0xa]\n 28034: a4 = u8 [a0 + 0xb]\n 28037: a1 = a1 << 0x8\n 28040: a1 = a1 | a2\n 28043: a3 = a3 << 0x10\n 28046: a4 = a4 << 0x18\n 28049: a3 = a3 | a4\n 28052: a1 = a1 | a3\n 28055: a2 = u8 [a0 + 0xd]\n 28058: a3 = u8 [a0 + 0xc]\n 28061: a4 = u8 [a0 + 0xe]\n 28064: a5 = u8 [a0 + 0xf]\n 28067: a2 = a2 << 0x8\n 28070: a2 = a2 | a3\n 28073: a4 = a4 << 0x10\n 28076: a5 = a5 << 0x18\n 28079: a4 = a4 | a5\n 28082: a2 = a2 | a4\n 28085: a2 = a2 << 0x20\n 28088: a3 = a2 | a1\n 28091: a1 = a3 >> s1\n 28094: t2 = t2 << 0x1\n 28097: a2 = s1 ^ 0xffffffffffffffff\n 28100: a2 = t2 << a2\n 28103: ra = a1 | a2\n 28106: a1 = u8 [a0 + 0x1]\n 28109: a2 = u8 [a0]\n 28111: a4 = u8 [a0 + 0x2]\n 28114: a5 = u8 [a0 + 0x3]\n 28117: a1 = a1 << 0x8\n 28120: a1 = a1 | a2\n 28123: a4 = a4 << 0x10\n 28126: a5 = a5 << 0x18\n 28129: a4 = a4 | a5\n 28132: a1 = a1 | a4\n 28135: a2 = u8 [a0 + 0x5]\n 28138: a4 = u8 [a0 + 0x4]\n 28141: a5 = u8 [a0 + 0x6]\n 28144: a0 = u8 [a0 + 0x7]\n 28147: a2 = a2 << 0x8\n 28150: a2 = a2 | a4\n 28153: a5 = a5 << 0x10\n 28156: a0 = a0 << 0x18\n 28159: a0 = a0 | a5\n 28162: a0 = a0 | a2\n 28165: a0 = a0 << 0x20\n 28168: a0 = a0 | a1\n 28171: a0 = a0 >> s1\n 28174: a3 = a3 << 0x1\n 28177: a1 = a3 << t1\n 28180: t1 = a0 | a1\n 28183: a0 = u64 [sp + 0x350]\n 28187: a1 = a0 >> s1\n 28190: a2 = u64 [sp + 0x3c0]\n 28194: a0 = a2 <u 0x1\n 28197: a3 = u64 [sp + 0x3d0]\n 28201: a0 = a3 - a0\n 28204: u64 [sp + 0x310] = a0\n 28208: a0 = a2 | a3\n 28211: a0 = a0 <u 0x1\n 28214: a3 = u64 [sp + 0x3c8]\n 28218: a4 = a3 - a0\n 28221: u64 [sp + 0x308] = a4\n 28225: a0 = a3 <u a0\n 28228: a3 = u64 [sp + 0x3d8]\n 28232: a3 = a3 - a0\n 28235: u64 [sp + 0x300] = a3\n 28239: a2 = a2 + 0xffffffffffffffff\n 28242: u64 [sp + 0x2f8] = a2\n 28246: fallthrough\n      : @180 (gas: 105)\n 28247: u64 [sp + 0x380] = t0\n 28251: u64 [sp + 792] = 0\n 28255: a3 = t1 >> 0x3f\n 28258: s1 = ra << 0x1\n 28261: s1 = s1 | a3\n 28264: t1 = t1 << 0x1\n 28267: a5 = u64 [sp + 0x3a0]\n 28271: a3 = a5 >> 0x3f\n 28274: t0 = a1\n 28276: a1 = t1 | a3\n 28279: a0 = u64 [sp + 0x310]\n 28283: a3 = a0 ^ s1\n 28286: a2 = a0 <u s1\n 28289: a0 = u64 [sp + 0x2f8]\n 28293: a4 = a0 <u a1\n 28296: t1 = a1\n 28298: u64 [sp + 0x348] = a1\n 28302: a4 = a2 if a3 != 0\n 28305: a0 = t0 << 0x1\n 28308: a1 = u64 [sp + 0x358]\n 28312: a2 = a1 >> 0x3f\n 28315: t2 = a0 | a2\n 28318: u64 [sp + 0x350] = t2\n 28322: a2 = ra >> 0x3f\n 28325: a1 = a1 << 0x1\n 28328: a3 = a1 | a2\n 28331: a1 = a5 << 0x1\n 28334: a0 = u64 [sp + 0x398]\n 28338: a2 = a0 >> 0x3f\n 28341: ra = a1 | a2\n 28344: a2 = a0 << 0x1\n 28347: a1 = u64 [sp + 0x388]\n 28351: a0 = a1 >> 0x3f\n 28354: a0 = a0 | a2\n 28357: a2 = a1 << 0x1\n 28360: t0 = u64 [sp + 0x390]\n 28364: a5 = t0 >> 0x3f\n 28367: a2 = a2 | a5\n 28370: a5 = t0 << 0x1\n 28373: a1 = u64 [sp + 0x368]\n 28377: a1 = a1 | a5\n 28380: u64 [sp + 0x390] = a1\n 28384: a1 = u64 [sp + 0x360]\n 28388: a2 = a2 | a1\n 28391: u64 [sp + 0x388] = a2\n 28395: a0 = a0 | a1\n 28398: u64 [sp + 0x398] = a0\n 28402: a0 = a1 | ra\n 28405: u64 [sp + 0x3a0] = a0\n 28409: a1 = u64 [sp + 0x308]\n 28413: a0 = a1 - a3\n 28416: a0 = a0 <u a4\n 28419: a1 = a1 <u a3\n 28422: a2 = u64 [sp + 0x300]\n 28426: a2 = a2 - t2\n 28429: a2 = a2 - a1\n 28432: a2 = a2 - a0\n 28435: a2 = a2 >>a 0x3f\n 28438: a4 = u64 [sp + 0x3c0]\n 28442: t2 = a2 & a4\n 28445: a5 = u64 [sp + 0x3d0]\n 28449: a5 = a5 & a2\n 28452: ra = s1 ^ a5\n 28455: a1 = s1 <u a5\n 28458: a0 = t1 <u t2\n 28461: a1 = a0 if ra == 0\n 28464: a4 = u64 [sp + 0x3c8]\n 28468: ra = a2 & a4\n 28471: t0 = a3 - ra\n 28474: t1 = t0 - a1\n 28477: u64 [sp + 0x358] = t1\n 28481: t0 = t0 <u a1\n 28484: a3 = a3 <u ra\n 28487: a1 = u64 [sp + 0x3d8]\n 28491: a1 = a1 & a2\n 28494: a4 = u64 [sp + 0x350]\n 28498: a1 = a4 - a1\n 28501: a1 = a1 - a3\n 28504: a1 = a1 - t0\n 28507: t0 = u64 [sp + 0x380]\n 28511: s1 = s1 - a5\n 28514: ra = s1 - a0\n 28517: a0 = u64 [sp + 0x348]\n 28521: t1 = a0 - t2\n 28524: a5 = u64 [sp + 0x3a8]\n 28528: a0 = a5 | t0\n 28531: a0 = a0 <u 0x1\n 28534: a4 = u64 [sp + 0x370]\n 28538: a3 = a4 <u a0\n 28541: a0 = a4 - a0\n 28544: a4 = a5 <u 0x1\n 28547: t0 = t0 - a4\n 28550: a4 = u64 [sp + 0x378]\n 28554: a4 = a4 - a3\n 28557: a5 = a5 + 0xffffffffffffffff\n 28560: u64 [sp + 0x378] = a4\n 28564: a3 = t0 | a4\n 28567: u64 [sp + 0x3a8] = a5\n 28571: a4 = a5 | a0\n 28574: a3 = a3 | a4\n 28577: a2 = a2 & 0x1\n 28580: u64 [sp + 0x368] = a2\n 28584: u64 [sp + 0x370] = a0\n 28588: u64 [sp + 864] = 0\n 28592: jump @180 if a3 != 0\n      : @181 (gas: 1)\n 28596: jump @183\n      : @182 (gas: 3)\n 28598: u64 [sp + 872] = 0\n 28602: u64 [sp + 792] = 0\n 28606: fallthrough\n      : @183 (gas: 25)\n 28607: a2 = u64 [sp + 0x398]\n 28611: a0 = a2 >> 0x3f\n 28614: a1 = u64 [sp + 0x3a0]\n 28618: a1 = a1 << 0x1\n 28621: a0 = a0 | a1\n 28624: a4 = u64 [sp + 0x388]\n 28628: a1 = a4 >> 0x3f\n 28631: a2 = a2 << 0x1\n 28634: a2 = a2 | a1\n 28637: a1 = u64 [sp + 0x390]\n 28641: a3 = a1 >> 0x3f\n 28644: a4 = a4 << 0x1\n 28647: a1 = a1 << 0x1\n 28650: a5 = u64 [sp + 0x368]\n 28654: ra = a5 | a1\n 28657: a5 = u64 [sp + 0x318]\n 28661: a3 = a3 | a5\n 28664: t2 = a3 | a4\n 28667: a2 = a2 | a5\n 28670: u64 [sp + 0x3a8] = a2\n 28674: a0 = a0 | a5\n 28677: u64 [sp + 0x3a0] = a0\n 28681: s1 = u64 [sp + 0x258]\n 28685: t0 = u64 [sp + 0x250]\n 28689: fallthrough\n      : @184 (gas: 173)\n 28690: a0 = u64 [sp + 0x260]\n 28694: a1 = u64 [sp + 0x2f0]\n 28698: a0 = a1 <u a0\n 28701: a5 = u64 [sp + 0x268]\n 28705: a4 = s1 ^ a5\n 28708: a5 = s1 <u a5\n 28711: a5 = a0 if a4 == 0\n 28714: a0 = u64 [sp + 0x2c0]\n 28718: a4 = t0 ^ a0\n 28721: a2 = t0 <u a0\n 28724: a0 = u64 [sp + 0x2d0]\n 28728: a1 = u64 [sp + 0x2e8]\n 28732: s1 = a1 <u a0\n 28735: a2 = s1 if a4 == 0\n 28738: s1 = a1 ^ a0\n 28741: a4 = a4 | s1\n 28744: a2 = a5 if a4 == 0\n 28747: u64 [sp + 0x398] = a2\n 28751: a0 = u64 [sp + 0x3c0]\n 28755: a4 = a0 mulhu ra\n 28758: t1 = u64 [sp + 0x3d0]\n 28762: a5 = t1 * ra\n 28765: a4 = a4 + a5\n 28768: a5 = a4 <u a5\n 28771: s1 = t1 mulhu ra\n 28774: s1 = s1 + a5\n 28777: a5 = a0 * t2\n 28780: a4 = a4 + a5\n 28783: u64 [sp + 0x390] = a4\n 28787: a5 = a4 <u a5\n 28790: a2 = a0 mulhu t2\n 28793: a2 = a2 + a5\n 28796: a2 = a2 + s1\n 28799: a5 = a2 <u s1\n 28802: s1 = t1 mulhu t2\n 28805: a5 = a5 + s1\n 28808: s1 = t1 * t2\n 28811: a2 = a2 + s1\n 28814: s1 = a2 <u s1\n 28817: a5 = a5 + s1\n 28820: u64 [sp + 0x388] = a5\n 28824: a1 = u64 [sp + 0x3a8]\n 28828: s1 = a1 * t1\n 28831: a5 = a1 mulhu a0\n 28834: a5 = a5 + s1\n 28837: a4 = u64 [sp + 0x3a0]\n 28841: s1 = a4 * a0\n 28844: a5 = a5 + s1\n 28847: t0 = u64 [sp + 0x3c8]\n 28851: s1 = ra mulhu t0\n 28854: a3 = u64 [sp + 0x3d8]\n 28858: a4 = ra * a3\n 28861: a4 = a4 + s1\n 28864: a3 = t2 * t0\n 28867: a3 = a3 + a4\n 28870: a3 = a3 + a5\n 28873: a4 = a1 * a0\n 28876: a5 = ra * t0\n 28879: a5 = a5 + a4\n 28882: a4 = a5 <u a4\n 28885: a3 = a3 + a4\n 28888: a5 = a5 + a2\n 28891: a2 = a5 <u a2\n 28894: a1 = u64 [sp + 0x388]\n 28898: a3 = a3 + a1\n 28901: a2 = a2 + a3\n 28904: u64 [sp + 0x3a8] = a2\n 28908: a3 = a0 * ra\n 28911: u64 [sp + 0x388] = a3\n 28915: s1 = u64 [sp + 0x258]\n 28919: a2 = u64 [sp + 0x390]\n 28923: ra = s1 ^ a2\n 28926: a4 = s1 <u a2\n 28929: a1 = u64 [sp + 0x2f0]\n 28933: t2 = a1 <u a3\n 28936: a4 = t2 if ra == 0\n 28939: a1 = u64 [sp + 0x2e8]\n 28943: a3 = a1 <u a5\n 28946: a5 = a1 - a5\n 28949: a1 = a5 <u a4\n 28952: a1 = a1 + a3\n 28955: ra = u64 [sp + 0x250]\n 28959: a3 = u64 [sp + 0x3a8]\n 28963: a3 = ra - a3\n 28966: a3 = a3 - a1\n 28969: u64 [sp + 0x3a0] = a3\n 28973: a5 = a5 - a4\n 28976: u64 [sp + 0x380] = a5\n 28980: a2 = s1 - a2\n 28983: a1 = a2 - t2\n 28986: u64 [sp + 0x3a8] = a1\n 28990: a4 = u64 [sp + 0x2f0]\n 28994: a5 = a4 <u a0\n 28997: a2 = s1 ^ t1\n 29000: a1 = s1 <u t1\n 29003: a1 = a5 if a2 == 0\n 29006: a2 = u64 [sp + 0x3d8]\n 29010: t2 = ra - a2\n 29013: a3 = u64 [sp + 0x2e8]\n 29017: a2 = a3 <u t0\n 29020: t2 = t2 - a2\n 29023: a2 = a3 - t0\n 29026: a3 = a2 <u a1\n 29029: t0 = t2 - a3\n 29032: a3 = u64 [sp + 0x388]\n 29036: a3 = a4 - a3\n 29039: t2 = a2 - a1\n 29042: a2 = s1 - t1\n 29045: ra = a2 - a5\n 29048: a4 = a4 - a0\n 29051: a0 = u64 [sp + 0x398]\n 29055: a1 = u64 [sp + 0x380]\n 29059: t2 = a1 if a0 == 0\n 29062: a1 = u64 [sp + 0x3a0]\n 29066: t0 = a1 if a0 == 0\n 29069: a4 = a3 if a0 == 0\n 29072: u64 [sp + 0x2f0] = a4\n 29076: a1 = u64 [sp + 0x3a8]\n 29080: ra = a1 if a0 == 0\n 29083: a0 = clz t2\n 29085: a1 = a0 + 0x40\n 29088: a0 = clz t0\n 29090: a0 = a1 if t0 == 0\n 29093: a1 = t2 | t0\n 29096: a2 = clz ra\n 29098: a3 = clz a4\n 29100: a3 = a3 + 0x40\n 29103: a3 = a2 if ra != 0\n 29106: a2 = a3 + 0x80\n 29110: a0 = a2 if a1 == 0\n 29113: a2 = a2 <u a3\n 29116: a2 = 0 if a1 != 0\n 29118: a5 = u64 [sp + 0x330]\n 29122: s1 = a5 ^ a2\n 29125: a4 = a5 <u a2\n 29128: t1 = u64 [sp + 0x328]\n 29132: a3 = t1 <u a0\n 29135: a4 = a3 if s1 == 0\n 29138: s1 = a4 <u 0x1\n 29141: s1 = s1 + 0xffffffffffffffff\n 29144: a1 = -a4\n 29146: a5 = a5 - a2\n 29149: a3 = a5 - a3\n 29152: a5 = t1 - a0\n 29155: u64 [sp + 0x3a0] = a1\n 29159: a0 = a1 >u 0\n 29161: a1 = s1 >u 0\n 29163: t1 = s1\n 29165: a1 = a0 if s1 == 0\n 29168: a0 = a5 <u 0x100\n 29172: a0 = a0 ^ 0x1\n 29175: a2 = a3 >u 0\n 29177: a0 = a2 if a3 != 0\n 29180: a0 = a1 if a4 != 0\n 29183: s1 = u64 [sp + 0x2f0]\n 29187: a1 = s1 | t2\n 29190: a2 = ra | t0\n 29193: a1 = a1 | a2\n 29196: a1 = a1 <u 0x1\n 29199: a2 = u64 [sp + 0x320]\n 29203: a1 = a1 | a2\n 29206: a4 = a1 | a0\n 29209: u64 [sp + 0x2c0] = t0\n 29213: t0 = 0 if a4 != 0\n 29215: u64 [sp + 0x2e8] = t2\n 29219: a1 = t2\n 29221: a1 = 0 if a4 != 0\n 29223: u64 [sp + 0x2d0] = ra\n 29227: a2 = ra\n 29229: a2 = 0 if a4 != 0\n 29231: a0 = s1\n 29233: a0 = 0 if a4 != 0\n 29235: jump @192 if a4 != 0\n      : @185 (gas: 7)\n 29239: t2 = a5\n 29241: a4 = a5 ^ 0xff\n 29245: s1 = u64 [sp + 0x3a0]\n 29249: a4 = a4 | s1\n 29252: a5 = a3 | t1\n 29255: a4 = a4 | a5\n 29258: jump @192 if a4 == 0\n      : @186 (gas: 260)\n 29262: a1 = t2 + 0x1\n 29265: u64 [sp + 0x3a8] = a1\n 29269: a0 = a1 <u 0x1\n 29272: a0 = a0 + a3\n 29275: u64 [sp + 0x378] = a0\n 29279: a0 = a0 | a1\n 29282: a0 = a0 <u 0x1\n 29285: a0 = a0 + s1\n 29288: u64 [sp + 0x370] = a0\n 29292: a0 = a0 <u s1\n 29295: a0 = a0 + t1\n 29298: u64 [sp + 0x380] = a0\n 29302: t0 = 0xff - t2\n 29306: t2 = sp + 0x7ff\n 29310: t2 = t2 + 0x360\n 29314: a0 = u64 [sp + 0x2f0]\n 29318: u8 [t2 + 0x1e1] = a0\n 29322: u8 [t2 + 480] = 0\n 29326: u8 [t2 + 479] = 0\n 29330: u8 [t2 + 478] = 0\n 29334: u8 [t2 + 477] = 0\n 29338: u8 [t2 + 476] = 0\n 29342: u8 [t2 + 475] = 0\n 29346: u8 [t2 + 474] = 0\n 29350: u8 [t2 + 473] = 0\n 29354: u8 [t2 + 472] = 0\n 29358: u8 [t2 + 471] = 0\n 29362: u8 [t2 + 470] = 0\n 29366: u8 [t2 + 469] = 0\n 29370: u8 [t2 + 468] = 0\n 29374: u8 [t2 + 467] = 0\n 29378: u8 [t2 + 466] = 0\n 29382: u8 [t2 + 465] = 0\n 29386: u8 [t2 + 464] = 0\n 29390: u8 [t2 + 463] = 0\n 29394: u8 [t2 + 462] = 0\n 29398: u8 [t2 + 461] = 0\n 29402: u8 [t2 + 460] = 0\n 29406: u8 [t2 + 459] = 0\n 29410: u8 [t2 + 458] = 0\n 29414: u8 [t2 + 457] = 0\n 29418: u8 [t2 + 456] = 0\n 29422: u8 [t2 + 455] = 0\n 29426: u8 [t2 + 454] = 0\n 29430: u8 [t2 + 453] = 0\n 29434: u8 [t2 + 452] = 0\n 29438: u8 [t2 + 451] = 0\n 29442: u8 [t2 + 450] = 0\n 29446: u8 [t2 + 449] = 0\n 29450: a1 = u64 [sp + 0x2d0]\n 29454: u8 [t2 + 0x1e9] = a1\n 29458: a2 = a0 >> 0x38\n 29461: u64 [sp + 0x260] = a2\n 29465: u8 [t2 + 0x1e8] = a2\n 29469: a2 = a0 >> 0x30\n 29472: u64 [sp + 0x258] = a2\n 29476: u8 [t2 + 0x1e7] = a2\n 29480: a2 = a0 >> 0x28\n 29483: u64 [sp + 0x250] = a2\n 29487: u8 [t2 + 0x1e6] = a2\n 29491: a2 = a0 >> 0x20\n 29494: u64 [sp + 0x248] = a2\n 29498: u8 [t2 + 0x1e5] = a2\n 29502: a2 = a0 >> 0x18\n 29505: u64 [sp + 0x220] = a2\n 29509: u8 [t2 + 0x1e4] = a2\n 29513: a2 = a0 >> 0x10\n 29516: u64 [sp + 0x218] = a2\n 29520: u8 [t2 + 0x1e3] = a2\n 29524: a0 = a0 >> 0x8\n 29527: u64 [sp + 0x210] = a0\n 29531: u8 [t2 + 0x1e2] = a0\n 29535: a0 = u64 [sp + 0x2e8]\n 29539: u8 [t2 + 0x1f1] = a0\n 29543: a2 = a1 >> 0x38\n 29546: u64 [sp + 0x208] = a2\n 29550: u8 [t2 + 0x1f0] = a2\n 29554: a2 = a1 >> 0x30\n 29557: u64 [sp + 0x1d0] = a2\n 29561: u8 [t2 + 0x1ef] = a2\n 29565: a2 = a1 >> 0x28\n 29568: u64 [sp + 0x1c8] = a2\n 29572: u8 [t2 + 0x1ee] = a2\n 29576: a2 = a1 >> 0x20\n 29579: u64 [sp + 0x1c0] = a2\n 29583: u8 [t2 + 0x1ed] = a2\n 29587: a2 = a1 >> 0x18\n 29590: u64 [sp + 0x1b8] = a2\n 29594: u8 [t2 + 0x1ec] = a2\n 29598: a2 = a1 >> 0x10\n 29601: u64 [sp + 0x1b0] = a2\n 29605: u8 [t2 + 0x1eb] = a2\n 29609: a1 = a1 >> 0x8\n 29612: u64 [sp + 0x1a8] = a1\n 29616: u8 [t2 + 0x1ea] = a1\n 29620: ra = u64 [sp + 0x2c0]\n 29624: u8 [t2 + 0x1f9] = ra\n 29628: a1 = a0 >> 0x38\n 29631: u64 [sp + 0x1a0] = a1\n 29635: u8 [t2 + 0x1f8] = a1\n 29639: a1 = a0 >> 0x30\n 29642: u64 [sp + 0x198] = a1\n 29646: u8 [t2 + 0x1f7] = a1\n 29650: a1 = a0 >> 0x28\n 29653: u64 [sp + 0x190] = a1\n 29657: u8 [t2 + 0x1f6] = a1\n 29661: a1 = a0 >> 0x20\n 29664: u64 [sp + 0x188] = a1\n 29668: u8 [t2 + 0x1f5] = a1\n 29672: a1 = a0 >> 0x18\n 29675: u64 [sp + 0x180] = a1\n 29679: u8 [t2 + 0x1f4] = a1\n 29683: a1 = a0 >> 0x10\n 29686: u64 [sp + 0x358] = a1\n 29690: u8 [t2 + 0x1f3] = a1\n 29694: a0 = a0 >> 0x8\n 29697: u64 [sp + 0x350] = a0\n 29701: u8 [t2 + 0x1f2] = a0\n 29705: a0 = ra >> 0x38\n 29708: u64 [sp + 0x348] = a0\n 29712: u8 [t2 + 0x200] = a0\n 29716: a0 = ra >> 0x30\n 29719: u64 [sp + 0x318] = a0\n 29723: u8 [t2 + 0x1ff] = a0\n 29727: a0 = ra >> 0x28\n 29730: u64 [sp + 0x310] = a0\n 29734: u8 [t2 + 0x1fe] = a0\n 29738: a0 = ra >> 0x20\n 29741: u64 [sp + 0x308] = a0\n 29745: u8 [t2 + 0x1fd] = a0\n 29749: a0 = ra >> 0x18\n 29752: u64 [sp + 0x300] = a0\n 29756: u8 [t2 + 0x1fc] = a0\n 29760: a0 = ra >> 0x10\n 29763: u64 [sp + 0x2f8] = a0\n 29767: u8 [t2 + 0x1fb] = a0\n 29771: a0 = ra >> 0x8\n 29774: u64 [sp + 0x268] = a0\n 29778: u8 [t2 + 0x1fa] = a0\n 29782: a1 = t0 << 0x38\n 29785: a1 = a1 >> 0x3b\n 29788: a0 = sp + 0x7ff\n 29792: a0 = a0 + 0x541\n 29796: a1 = a0 - a1\n 29799: a2 = u8 [a1 + 0x19]\n 29802: a3 = u8 [a1 + 0x18]\n 29805: a4 = u8 [a1 + 0x1a]\n 29808: a5 = u8 [a1 + 0x1b]\n 29811: a2 = a2 << 0x8\n 29814: a2 = a2 | a3\n 29817: a4 = a4 << 0x10\n 29820: a5 = a5 << 0x18\n 29823: a4 = a4 | a5\n 29826: a2 = a2 | a4\n 29829: a3 = u8 [a1 + 0x1d]\n 29832: a4 = u8 [a1 + 0x1c]\n 29835: a5 = u8 [a1 + 0x1e]\n 29838: s1 = u8 [a1 + 0x1f]\n 29841: a3 = a3 << 0x8\n 29844: a3 = a3 | a4\n 29847: a5 = a5 << 0x10\n 29850: s1 = s1 << 0x18\n 29853: a5 = a5 | s1\n 29856: a3 = a3 | a5\n 29859: a3 = a3 << 0x20\n 29862: a2 = a2 | a3\n 29865: a3 = u8 [a1 + 0x11]\n 29868: a4 = u8 [a1 + 0x10]\n 29871: a5 = u8 [a1 + 0x12]\n 29874: s1 = u8 [a1 + 0x13]\n 29877: a3 = a3 << 0x8\n 29880: a3 = a3 | a4\n 29883: a5 = a5 << 0x10\n 29886: s1 = s1 << 0x18\n 29889: a5 = a5 | s1\n 29892: a3 = a3 | a5\n 29895: a4 = u8 [a1 + 0x15]\n 29898: a5 = u8 [a1 + 0x14]\n 29901: s1 = u8 [a1 + 0x16]\n 29904: a0 = u8 [a1 + 0x17]\n 29907: a4 = a4 << 0x8\n 29910: a4 = a4 | a5\n 29913: s1 = s1 << 0x10\n 29916: a0 = a0 << 0x18\n 29919: a0 = a0 | s1\n 29922: a0 = a0 | a4\n 29925: a0 = a0 << 0x20\n 29928: t1 = a0 | a3\n 29931: a0 = t0 & 0x7\n 29934: a4 = a2 << a0\n 29937: a5 = t1 >> 0x1\n 29940: t0 = a0 ^ 0x3f\n 29943: a5 = a5 >> t0\n 29946: a4 = a4 | a5\n 29949: u64 [sp + 0x3a0] = a4\n 29953: a4 = u8 [a1 + 0x9]\n 29956: a5 = u8 [a1 + 0x8]\n 29959: s1 = u8 [a1 + 0xa]\n 29962: a2 = u8 [a1 + 0xb]\n 29965: a4 = a4 << 0x8\n 29968: a4 = a4 | a5\n 29971: s1 = s1 << 0x10\n 29974: a2 = a2 << 0x18\n 29977: a2 = a2 | s1\n 29980: a2 = a2 | a4\n 29983: a4 = u8 [a1 + 0xd]\n 29986: a5 = u8 [a1 + 0xc]\n 29989: s1 = u8 [a1 + 0xe]\n 29992: a3 = u8 [a1 + 0xf]\n 29995: a4 = a4 << 0x8\n 29998: a4 = a4 | a5\n 30001: s1 = s1 << 0x10\n 30004: a3 = a3 << 0x18\n 30007: a3 = a3 | s1\n 30010: a3 = a3 | a4\n 30013: a3 = a3 << 0x20\n 30016: s1 = a3 | a2\n 30019: a2 = s1 >> 0x1\n 30022: a3 = a0 ^ 0xffffffffffffffff\n 30025: a2 = a2 >> a3\n 30028: a3 = t1 << a0\n 30031: a2 = a2 | a3\n 30034: u64 [sp + 0x398] = a2\n 30038: a2 = u8 [a1 + 0x1]\n 30041: a3 = u8 [a1]\n 30043: a4 = u8 [a1 + 0x2]\n 30046: a5 = u8 [a1 + 0x3]\n 30049: a2 = a2 << 0x8\n 30052: a2 = a2 | a3\n 30055: a4 = a4 << 0x10\n 30058: a5 = a5 << 0x18\n 30061: a4 = a4 | a5\n 30064: a2 = a2 | a4\n 30067: a3 = u8 [a1 + 0x5]\n 30070: a4 = u8 [a1 + 0x4]\n 30073: a5 = u8 [a1 + 0x6]\n 30076: a1 = u8 [a1 + 0x7]\n 30079: a3 = a3 << 0x8\n 30082: a3 = a3 | a4\n 30085: a4 = u64 [sp + 0x378]\n 30089: a5 = a5 << 0x10\n 30092: a1 = a1 << 0x18\n 30095: a1 = a1 | a5\n 30098: a1 = a1 | a3\n 30101: a1 = a1 << 0x20\n 30104: a1 = a1 | a2\n 30107: a2 = a1 >> 0x1\n 30110: a2 = a2 >> t0\n 30113: t0 = u64 [sp + 0x370]\n 30117: a3 = s1 << a0\n 30120: a5 = u64 [sp + 0x380]\n 30124: a2 = a2 | a3\n 30127: u64 [sp + 0x388] = a2\n 30131: a2 = a4 | a5\n 30134: a3 = u64 [sp + 0x3a8]\n 30138: a3 = a3 | t0\n 30141: a2 = a2 | a3\n 30144: a0 = a1 << a0\n 30147: u64 [sp + 0x390] = a0\n 30151: jump @190 if a2 == 0\n      : @187 (gas: 227)\n 30155: u64 [sp + 872] = 0\n 30159: u64 [sp + 864] = 0\n 30163: a0 = u64 [sp + 0x260]\n 30167: u8 [t2 + 0x188] = a0\n 30171: a0 = u64 [sp + 0x258]\n 30175: u8 [t2 + 0x187] = a0\n 30179: a0 = u64 [sp + 0x250]\n 30183: u8 [t2 + 0x186] = a0\n 30187: a0 = u64 [sp + 0x248]\n 30191: u8 [t2 + 0x185] = a0\n 30195: a0 = u64 [sp + 0x220]\n 30199: u8 [t2 + 0x184] = a0\n 30203: a0 = u64 [sp + 0x218]\n 30207: u8 [t2 + 0x183] = a0\n 30211: a0 = u64 [sp + 0x210]\n 30215: u8 [t2 + 0x182] = a0\n 30219: a0 = u64 [sp + 0x208]\n 30223: u8 [t2 + 0x190] = a0\n 30227: a0 = u64 [sp + 0x1d0]\n 30231: u8 [t2 + 0x18f] = a0\n 30235: a0 = u64 [sp + 0x1c8]\n 30239: u8 [t2 + 0x18e] = a0\n 30243: a0 = u64 [sp + 0x1c0]\n 30247: u8 [t2 + 0x18d] = a0\n 30251: a0 = u64 [sp + 0x1b8]\n 30255: u8 [t2 + 0x18c] = a0\n 30259: a0 = u64 [sp + 0x1b0]\n 30263: u8 [t2 + 0x18b] = a0\n 30267: a0 = u64 [sp + 0x1a8]\n 30271: u8 [t2 + 0x18a] = a0\n 30275: a0 = u64 [sp + 0x1a0]\n 30279: u8 [t2 + 0x198] = a0\n 30283: a0 = u64 [sp + 0x198]\n 30287: u8 [t2 + 0x197] = a0\n 30291: a0 = u64 [sp + 0x190]\n 30295: u8 [t2 + 0x196] = a0\n 30299: a0 = u64 [sp + 0x188]\n 30303: u8 [t2 + 0x195] = a0\n 30307: a0 = u64 [sp + 0x180]\n 30311: u8 [t2 + 0x194] = a0\n 30315: u8 [t2 + 448] = 0\n 30319: u8 [t2 + 447] = 0\n 30323: u8 [t2 + 446] = 0\n 30327: u8 [t2 + 445] = 0\n 30331: u8 [t2 + 444] = 0\n 30335: u8 [t2 + 443] = 0\n 30339: u8 [t2 + 442] = 0\n 30343: u8 [t2 + 441] = 0\n 30347: u8 [t2 + 440] = 0\n 30351: u8 [t2 + 439] = 0\n 30355: u8 [t2 + 438] = 0\n 30359: u8 [t2 + 437] = 0\n 30363: u8 [t2 + 436] = 0\n 30367: u8 [t2 + 435] = 0\n 30371: u8 [t2 + 434] = 0\n 30375: u8 [t2 + 433] = 0\n 30379: u8 [t2 + 432] = 0\n 30383: u8 [t2 + 431] = 0\n 30387: u8 [t2 + 430] = 0\n 30391: u8 [t2 + 429] = 0\n 30395: u8 [t2 + 428] = 0\n 30399: u8 [t2 + 427] = 0\n 30403: u8 [t2 + 426] = 0\n 30407: u8 [t2 + 425] = 0\n 30411: u8 [t2 + 424] = 0\n 30415: u8 [t2 + 423] = 0\n 30419: u8 [t2 + 422] = 0\n 30423: u8 [t2 + 421] = 0\n 30427: u8 [t2 + 420] = 0\n 30431: u8 [t2 + 419] = 0\n 30435: u8 [t2 + 418] = 0\n 30439: u8 [t2 + 417] = 0\n 30443: a0 = u64 [sp + 0x2f0]\n 30447: u8 [t2 + 0x181] = a0\n 30451: a0 = u64 [sp + 0x2d0]\n 30455: u8 [t2 + 0x189] = a0\n 30459: a0 = u64 [sp + 0x2e8]\n 30463: u8 [t2 + 0x191] = a0\n 30467: u8 [t2 + 0x199] = ra\n 30471: a0 = u64 [sp + 0x358]\n 30475: u8 [t2 + 0x193] = a0\n 30479: a0 = u64 [sp + 0x350]\n 30483: u8 [t2 + 0x192] = a0\n 30487: a0 = u64 [sp + 0x348]\n 30491: u8 [t2 + 0x1a0] = a0\n 30495: a0 = u64 [sp + 0x318]\n 30499: u8 [t2 + 0x19f] = a0\n 30503: a0 = u64 [sp + 0x310]\n 30507: u8 [t2 + 0x19e] = a0\n 30511: a0 = u64 [sp + 0x308]\n 30515: u8 [t2 + 0x19d] = a0\n 30519: a0 = u64 [sp + 0x300]\n 30523: u8 [t2 + 0x19c] = a0\n 30527: a0 = u64 [sp + 0x2f8]\n 30531: u8 [t2 + 0x19b] = a0\n 30535: a0 = u64 [sp + 0x268]\n 30539: u8 [t2 + 0x19a] = a0\n 30543: s1 = u64 [sp + 0x3a8]\n 30547: a0 = s1 << 0x38\n 30550: a0 = a0 >> 0x3b\n 30553: a1 = sp + 0x7ff\n 30557: a1 = a1 + 0x4e1\n 30561: a0 = a0 + a1\n 30564: a1 = u8 [a0 + 0x11]\n 30567: a2 = u8 [a0 + 0x10]\n 30570: a3 = u8 [a0 + 0x12]\n 30573: a4 = u8 [a0 + 0x13]\n 30576: a1 = a1 << 0x8\n 30579: a1 = a1 | a2\n 30582: a3 = a3 << 0x10\n 30585: a4 = a4 << 0x18\n 30588: a3 = a3 | a4\n 30591: a1 = a1 | a3\n 30594: a2 = u8 [a0 + 0x15]\n 30597: a3 = u8 [a0 + 0x14]\n 30600: a4 = u8 [a0 + 0x16]\n 30603: a5 = u8 [a0 + 0x17]\n 30606: a2 = a2 << 0x8\n 30609: a2 = a2 | a3\n 30612: a4 = a4 << 0x10\n 30615: a5 = a5 << 0x18\n 30618: a4 = a4 | a5\n 30621: a2 = a2 | a4\n 30624: a2 = a2 << 0x20\n 30627: t0 = a2 | a1\n 30630: a1 = s1 & 0x7\n 30633: t1 = t0 >> a1\n 30636: a2 = u8 [a0 + 0x19]\n 30639: a4 = u8 [a0 + 0x18]\n 30642: s1 = u8 [a0 + 0x1a]\n 30645: a3 = u8 [a0 + 0x1b]\n 30648: a2 = a2 << 0x8\n 30651: a2 = a2 | a4\n 30654: s1 = s1 << 0x10\n 30657: a3 = a3 << 0x18\n 30660: a3 = a3 | s1\n 30663: a2 = a2 | a3\n 30666: a3 = u8 [a0 + 0x1d]\n 30669: a4 = u8 [a0 + 0x1c]\n 30672: s1 = u8 [a0 + 0x1e]\n 30675: a5 = u8 [a0 + 0x1f]\n 30678: a3 = a3 << 0x8\n 30681: a3 = a3 | a4\n 30684: s1 = s1 << 0x10\n 30687: a5 = a5 << 0x18\n 30690: a5 = a5 | s1\n 30693: a3 = a3 | a5\n 30696: a3 = a3 << 0x20\n 30699: t2 = a3 | a2\n 30702: a3 = t2 << 0x1\n 30705: ra = a1 ^ 0x3f\n 30708: a3 = a3 << ra\n 30711: a2 = t1 | a3\n 30714: u64 [sp + 0x358] = a2\n 30718: a3 = u8 [a0 + 0x9]\n 30721: a4 = u8 [a0 + 0x8]\n 30724: a5 = u8 [a0 + 0xa]\n 30727: a2 = u8 [a0 + 0xb]\n 30730: a3 = a3 << 0x8\n 30733: a3 = a3 | a4\n 30736: a5 = a5 << 0x10\n 30739: a2 = a2 << 0x18\n 30742: a2 = a2 | a5\n 30745: a2 = a2 | a3\n 30748: a3 = u8 [a0 + 0xd]\n 30751: a4 = u8 [a0 + 0xc]\n 30754: a5 = u8 [a0 + 0xe]\n 30757: s1 = u8 [a0 + 0xf]\n 30760: a3 = a3 << 0x8\n 30763: a3 = a3 | a4\n 30766: a5 = a5 << 0x10\n 30769: s1 = s1 << 0x18\n 30772: a5 = a5 | s1\n 30775: a3 = a3 | a5\n 30778: a3 = a3 << 0x20\n 30781: t1 = a3 | a2\n 30784: a2 = t1 >> a1\n 30787: t0 = t0 << 0x1\n 30790: a3 = a1 ^ 0xffffffffffffffff\n 30793: a3 = t0 << a3\n 30796: t0 = a2 | a3\n 30799: a2 = u8 [a0 + 0x1]\n 30802: a4 = u8 [a0]\n 30804: s1 = u8 [a0 + 0x2]\n 30807: a5 = u8 [a0 + 0x3]\n 30810: a2 = a2 << 0x8\n 30813: a2 = a2 | a4\n 30816: s1 = s1 << 0x10\n 30819: a5 = a5 << 0x18\n 30822: a5 = a5 | s1\n 30825: a2 = a2 | a5\n 30828: a4 = u8 [a0 + 0x5]\n 30831: a5 = u8 [a0 + 0x4]\n 30834: s1 = u8 [a0 + 0x6]\n 30837: a0 = u8 [a0 + 0x7]\n 30840: a4 = a4 << 0x8\n 30843: a4 = a4 | a5\n 30846: a5 = u64 [sp + 0x368]\n 30850: s1 = s1 << 0x10\n 30853: a0 = a0 << 0x18\n 30856: a0 = a0 | s1\n 30859: a0 = a0 | a4\n 30862: a0 = a0 << 0x20\n 30865: a0 = a0 | a2\n 30868: a0 = a0 >> a1\n 30871: t1 = t1 << 0x1\n 30874: a2 = t1 << ra\n 30877: a3 = a0 | a2\n 30880: t2 = t2 >> a1\n 30883: a1 = u64 [sp + 0x3c0]\n 30887: a0 = a1 <u 0x1\n 30890: a2 = u64 [sp + 0x3d0]\n 30894: a0 = a2 - a0\n 30897: u64 [sp + 0x310] = a0\n 30901: a0 = a1 | a2\n 30904: a0 = a0 <u 0x1\n 30907: a2 = u64 [sp + 0x3c8]\n 30911: a4 = a2 - a0\n 30914: u64 [sp + 0x308] = a4\n 30918: a0 = a2 <u a0\n 30921: a2 = u64 [sp + 0x3d8]\n 30925: a2 = a2 - a0\n 30928: u64 [sp + 0x300] = a2\n 30932: a1 = a1 + 0xffffffffffffffff\n 30935: u64 [sp + 0x2f8] = a1\n 30939: s1 = u64 [sp + 0x3a0]\n 30943: fallthrough\n      : @188 (gas: 104)\n 30944: u64 [sp + 0x368] = a5\n 30948: u64 [sp + 792] = 0\n 30952: a0 = a3 >> 0x3f\n 30955: a2 = t0 << 0x1\n 30958: t1 = a2 | a0\n 30961: a3 = a3 << 0x1\n 30964: a2 = s1 >> 0x3f\n 30967: a2 = a2 | a3\n 30970: u64 [sp + 0x350] = a2\n 30974: a0 = u64 [sp + 0x310]\n 30978: a4 = a0 ^ t1\n 30981: a1 = a0 <u t1\n 30984: a0 = u64 [sp + 0x2f8]\n 30988: a5 = a0 <u a2\n 30991: a5 = a1 if a4 != 0\n 30994: t2 = t2 << 0x1\n 30997: a3 = t0\n 30999: t0 = u64 [sp + 0x358]\n 31003: a1 = t0 >> 0x3f\n 31006: ra = t2 | a1\n 31009: u64 [sp + 0x348] = ra\n 31013: a3 = a3 >> 0x3f\n 31016: t0 = t0 << 0x1\n 31019: t2 = t0 | a3\n 31022: a4 = s1 << 0x1\n 31025: a0 = u64 [sp + 0x398]\n 31029: s1 = a0 >> 0x3f\n 31032: a4 = a4 | s1\n 31035: s1 = a0 << 0x1\n 31038: a0 = u64 [sp + 0x388]\n 31042: a1 = a0 >> 0x3f\n 31045: a1 = a1 | s1\n 31048: s1 = a0 << 0x1\n 31051: a0 = u64 [sp + 0x390]\n 31055: a2 = a0 >> 0x3f\n 31058: a2 = a2 | s1\n 31061: s1 = a0 << 0x1\n 31064: a0 = u64 [sp + 0x368]\n 31068: a0 = a0 | s1\n 31071: u64 [sp + 0x390] = a0\n 31075: a3 = u64 [sp + 0x360]\n 31079: a2 = a2 | a3\n 31082: u64 [sp + 0x388] = a2\n 31086: a1 = a1 | a3\n 31089: u64 [sp + 0x398] = a1\n 31093: a3 = a3 | a4\n 31096: u64 [sp + 0x3a0] = a3\n 31100: a0 = u64 [sp + 0x308]\n 31104: a1 = a0 - t2\n 31107: a1 = a1 <u a5\n 31110: a2 = a0 <u t2\n 31113: a0 = u64 [sp + 0x300]\n 31117: a4 = a0 - ra\n 31120: a4 = a4 - a2\n 31123: a4 = a4 - a1\n 31126: a5 = a4 >>a 0x3f\n 31129: a1 = u64 [sp + 0x3c0]\n 31133: ra = a5 & a1\n 31136: a2 = u64 [sp + 0x3d0]\n 31140: a2 = a2 & a5\n 31143: a4 = t1 ^ a2\n 31146: s1 = t1 <u a2\n 31149: a1 = u64 [sp + 0x350]\n 31153: t0 = a1 <u ra\n 31156: s1 = t0 if a4 == 0\n 31159: a4 = u64 [sp + 0x3c8]\n 31163: a4 = a4 & a5\n 31166: a0 = t2 - a4\n 31169: a3 = a0 - s1\n 31172: u64 [sp + 0x358] = a3\n 31176: a3 = a0 <u s1\n 31179: a4 = t2 <u a4\n 31182: s1 = u64 [sp + 0x3d8]\n 31186: s1 = s1 & a5\n 31189: a0 = u64 [sp + 0x348]\n 31193: s1 = a0 - s1\n 31196: s1 = s1 - a4\n 31199: t2 = s1 - a3\n 31202: a0 = t1 - a2\n 31205: t0 = a0 - t0\n 31208: a3 = a1 - ra\n 31211: a4 = u64 [sp + 0x3a8]\n 31215: a1 = u64 [sp + 0x378]\n 31219: a0 = a4 | a1\n 31222: a0 = a0 <u 0x1\n 31225: a2 = u64 [sp + 0x370]\n 31229: s1 = a2 <u a0\n 31232: a0 = a2 - a0\n 31235: a2 = a4 <u 0x1\n 31238: a1 = a1 - a2\n 31241: a2 = u64 [sp + 0x380]\n 31245: a2 = a2 - s1\n 31248: s1 = u64 [sp + 0x3a0]\n 31252: a4 = a4 + 0xffffffffffffffff\n 31255: u64 [sp + 0x380] = a2\n 31259: u64 [sp + 0x378] = a1\n 31263: a1 = a1 | a2\n 31266: u64 [sp + 0x3a8] = a4\n 31270: a2 = a4 | a0\n 31273: a1 = a1 | a2\n 31276: a5 = a5 & 0x1\n 31279: u64 [sp + 0x370] = a0\n 31283: u64 [sp + 864] = 0\n 31287: jump @188 if a1 != 0\n      : @189 (gas: 1)\n 31291: jump @191\n      : @190 (gas: 4)\n 31293: a5 = 0\n 31295: u64 [sp + 792] = 0\n 31299: s1 = u64 [sp + 0x3a0]\n 31303: fallthrough\n      : @191 (gas: 19)\n 31304: a2 = u64 [sp + 0x398]\n 31308: a0 = a2 >> 0x3f\n 31311: a1 = s1 << 0x1\n 31314: a3 = a1 | a0\n 31317: a4 = u64 [sp + 0x388]\n 31321: a0 = a4 >> 0x3f\n 31324: a1 = a2 << 0x1\n 31327: a1 = a1 | a0\n 31330: a0 = u64 [sp + 0x390]\n 31334: a2 = a0 >> 0x3f\n 31337: a4 = a4 << 0x1\n 31340: a0 = a0 << 0x1\n 31343: a0 = a0 | a5\n 31346: a5 = u64 [sp + 0x318]\n 31350: a2 = a2 | a5\n 31353: a2 = a2 | a4\n 31356: a1 = a1 | a5\n 31359: t0 = a5 | a3\n 31362: fallthrough\n      : @192 (gas: 89)\n 31363: u64 [sp + 0x398] = a1\n 31367: u64 [sp + 0x3a0] = t0\n 31371: t0 = u64 [sp + 0x3c8]\n 31375: a3 = t0 >u 0\n 31377: t1 = u64 [sp + 0x3d8]\n 31381: ra = t1 >u 0\n 31383: ra = a3 if t1 == 0\n 31386: t2 = u64 [sp + 0x3c0]\n 31390: a3 = t2 mulhu a0\n 31393: a1 = u64 [sp + 0x3d0]\n 31397: a4 = a1 * a0\n 31400: a3 = a3 + a4\n 31403: a4 = a3 <u a4\n 31406: a5 = a1 mulhu a0\n 31409: a5 = a5 + a4\n 31412: a4 = t2 * a2\n 31415: a3 = a3 + a4\n 31418: u64 [sp + 0x3a8] = a3\n 31422: a4 = a3 <u a4\n 31425: s1 = t2 mulhu a2\n 31428: a4 = a4 + s1\n 31431: a4 = a4 + a5\n 31434: a5 = a4 <u a5\n 31437: s1 = a1 mulhu a2\n 31440: a5 = a5 + s1\n 31443: s1 = a1 * a2\n 31446: a4 = a4 + s1\n 31449: s1 = a4 <u s1\n 31452: a5 = a5 + s1\n 31455: u64 [sp + 0x390] = a5\n 31459: a3 = u64 [sp + 0x398]\n 31463: a1 = a3 * a1\n 31466: a5 = a3 mulhu t2\n 31469: a5 = a5 + a1\n 31472: a1 = u64 [sp + 0x3a0]\n 31476: s1 = a1 * t2\n 31479: a5 = a5 + s1\n 31482: s1 = a0 mulhu t0\n 31485: a1 = a0 * t1\n 31488: a1 = a1 + s1\n 31491: a2 = a2 * t0\n 31494: a1 = a1 + a2\n 31497: a1 = a1 + a5\n 31500: a2 = a3 * t2\n 31503: a5 = a0 * t0\n 31506: a5 = a5 + a2\n 31509: a2 = a5 <u a2\n 31512: a1 = a1 + a2\n 31515: a5 = a5 + a4\n 31518: a2 = a5 <u a4\n 31521: a3 = u64 [sp + 0x390]\n 31525: a1 = a1 + a3\n 31528: a1 = a1 + a2\n 31531: a0 = t2 * a0\n 31534: a2 = u64 [sp + 0x2c0]\n 31538: t0 = a2 - a1\n 31541: t2 = u64 [sp + 0x2d0]\n 31545: a1 = u64 [sp + 0x3a8]\n 31549: a2 = t2 ^ a1\n 31552: a4 = t2 <u a1\n 31555: t1 = a1\n 31557: a3 = u64 [sp + 0x2f0]\n 31561: s1 = a3 <u a0\n 31564: a4 = s1 if a2 == 0\n 31567: a1 = u64 [sp + 0x2e8]\n 31571: a2 = a1 <u a5\n 31574: a5 = a1 - a5\n 31577: a1 = a5 <u a4\n 31580: a1 = a1 + a2\n 31583: t0 = t0 - a1\n 31586: a5 = a5 - a4\n 31589: a1 = t2 - t1\n 31592: s1 = a1 - s1\n 31595: a1 = u64 [sp + 0x1d8]\n 31599: ra = 0 if a1 == 0\n 31601: t2 = a3 - a0\n 31604: u64 [sp + 0x268] = ra\n 31608: u64 [sp + 0x2f0] = t2\n 31612: u64 [sp + 0x2e8] = t0\n 31616: u64 [sp + 0x2f8] = a5\n 31620: u64 [sp + 0x2c0] = s1\n 31624: a0 = s1 * t2\n 31627: a1 = t2 mulhu t2\n 31630: a1 = a1 + a0\n 31633: a2 = a1 <u a0\n 31636: a3 = s1 mulhu t2\n 31639: a2 = a2 + a3\n 31642: a1 = a1 + a0\n 31645: jump @202 if ra != 0\n      : @193 (gas: 90)\n 31649: u64 [sp + 0x2d0] = a1\n 31653: a0 = a1 <u a0\n 31656: a0 = a0 + a3\n 31659: a0 = a0 + a2\n 31662: a1 = s1 * s1\n 31665: a3 = a1 + a0\n 31668: a4 = t2 * a5\n 31671: u64 [sp + 0x3a0] = a4\n 31675: a4 = a4 + a4\n 31678: t1 = a3 + a4\n 31681: ra = t1 <u a3\n 31684: u64 [sp + 0x3a8] = ra\n 31688: a1 = a3 <u a1\n 31691: a0 = a0 <u a2\n 31694: a2 = s1 mulhu s1\n 31697: a0 = a0 + a2\n 31700: a0 = a0 + a1\n 31703: a1 = s1 * a5\n 31706: a2 = t2 mulhu a5\n 31709: a3 = a2 + a1\n 31712: s1 = t2 * t0\n 31715: a3 = a3 + s1\n 31718: a1 = a1 + a2\n 31721: a1 = a1 + s1\n 31724: a1 = a1 + a3\n 31727: a2 = u64 [sp + 0x3a0]\n 31731: a2 = a4 <u a2\n 31734: a1 = a1 + a2\n 31737: a2 = u64 [sp + 0x3a8]\n 31741: a0 = a0 + a2\n 31744: a1 = a1 + a0\n 31747: a0 = t2 * t2\n 31750: u64 [sp + 0x268] = a0\n 31754: a3 = a0\n 31756: a2 = clz a1\n 31758: a0 = clz t1\n 31760: a0 = a0 + 0x40\n 31763: a0 = a2 if a1 != 0\n 31766: a4 = t1 | a1\n 31769: a5 = u64 [sp + 0x2d0]\n 31773: a2 = clz a5\n 31775: a3 = clz a3\n 31777: a3 = a3 + 0x40\n 31780: a3 = a2 if a5 != 0\n 31783: a2 = a3 + 0x80\n 31787: a0 = a2 if a4 == 0\n 31790: a2 = a2 <u a3\n 31793: a2 = 0 if a4 != 0\n 31795: s1 = u64 [sp + 0x328]\n 31799: t0 = s1 <u a0\n 31802: a3 = u64 [sp + 0x330]\n 31806: a4 = a3 ^ a2\n 31809: a5 = a3 <u a2\n 31812: a5 = t0 if a4 == 0\n 31815: a4 = a5 <u 0x1\n 31818: a4 = a4 + 0xffffffffffffffff\n 31821: u64 [sp + 0x3a0] = a4\n 31825: ra = -a5\n 31827: a4 = s1 - a0\n 31830: s1 = a3 - a2\n 31833: a3 = a1\n 31835: u64 [sp + 0x258] = a1\n 31839: s1 = s1 - t0\n 31842: t0 = u64 [sp + 0x3a0]\n 31846: a0 = s1 >u 0\n 31848: u64 [sp + 0x398] = a4\n 31852: a1 = a4 <u 0x100\n 31856: a1 = a1 ^ 0x1\n 31859: a1 = a0 if s1 != 0\n 31862: a0 = ra >u 0\n 31864: a2 = t0 >u 0\n 31866: a2 = a0 if t0 == 0\n 31869: a2 = a1 if a5 == 0\n 31872: a4 = u64 [sp + 0x2d0]\n 31876: a0 = a4 | a3\n 31879: a5 = u64 [sp + 0x268]\n 31883: a1 = a5 | t1\n 31886: a0 = a0 | a1\n 31889: a0 = a0 <u 0x1\n 31892: a1 = u64 [sp + 0x320]\n 31896: a0 = a0 | a1\n 31899: a0 = a0 | a2\n 31902: a3 = 0 if a0 != 0\n 31904: u64 [sp + 0x260] = t1\n 31908: a1 = t1\n 31910: a1 = 0 if a0 != 0\n 31912: a2 = a4\n 31914: a2 = 0 if a0 != 0\n 31916: a5 = 0 if a0 != 0\n 31918: jump @195 if a0 == 0\n      : @194 (gas: 1)\n 31921: jump @223\n      : @195 (gas: 6)\n 31924: t1 = u64 [sp + 0x398]\n 31928: a0 = t1 ^ 0xff\n 31932: a0 = a0 | ra\n 31935: a4 = s1 | t0\n 31938: a0 = a0 | a4\n 31941: jump @197 if a0 != 0\n      : @196 (gas: 1)\n 31944: jump @223\n      : @197 (gas: 257)\n 31947: a1 = t1 + 0x1\n 31950: u64 [sp + 0x3a8] = a1\n 31954: a0 = a1 <u 0x1\n 31957: a0 = a0 + s1\n 31960: u64 [sp + 0x380] = a0\n 31964: a0 = a0 | a1\n 31967: a0 = a0 <u 0x1\n 31970: a0 = a0 + ra\n 31973: u64 [sp + 0x370] = a0\n 31977: a0 = a0 <u ra\n 31980: a0 = a0 + t0\n 31983: u64 [sp + 0x378] = a0\n 31987: t0 = 0xff - t1\n 31991: a0 = u64 [sp + 0x268]\n 31995: u8 [sp + 0x6c0] = a0\n 31999: u8 [sp + 1727] = 0\n 32003: u8 [sp + 1726] = 0\n 32007: u8 [sp + 1725] = 0\n 32011: u8 [sp + 1724] = 0\n 32015: u8 [sp + 1723] = 0\n 32019: u8 [sp + 1722] = 0\n 32023: u8 [sp + 1721] = 0\n 32027: u8 [sp + 1720] = 0\n 32031: u8 [sp + 1719] = 0\n 32035: u8 [sp + 1718] = 0\n 32039: u8 [sp + 1717] = 0\n 32043: u8 [sp + 1716] = 0\n 32047: u8 [sp + 1715] = 0\n 32051: u8 [sp + 1714] = 0\n 32055: u8 [sp + 1713] = 0\n 32059: u8 [sp + 1712] = 0\n 32063: u8 [sp + 1711] = 0\n 32067: u8 [sp + 1710] = 0\n 32071: u8 [sp + 1709] = 0\n 32075: u8 [sp + 1708] = 0\n 32079: u8 [sp + 1707] = 0\n 32083: u8 [sp + 1706] = 0\n 32087: u8 [sp + 1705] = 0\n 32091: u8 [sp + 1704] = 0\n 32095: u8 [sp + 1703] = 0\n 32099: u8 [sp + 1702] = 0\n 32103: u8 [sp + 1701] = 0\n 32107: u8 [sp + 1700] = 0\n 32111: u8 [sp + 1699] = 0\n 32115: u8 [sp + 1698] = 0\n 32119: u8 [sp + 1697] = 0\n 32123: u8 [sp + 1696] = 0\n 32127: a1 = u64 [sp + 0x2d0]\n 32131: u8 [sp + 0x6c8] = a1\n 32135: a2 = a0 >> 0x38\n 32138: u64 [sp + 0x220] = a2\n 32142: u8 [sp + 0x6c7] = a2\n 32146: a2 = a0 >> 0x30\n 32149: u64 [sp + 0x218] = a2\n 32153: u8 [sp + 0x6c6] = a2\n 32157: a2 = a0 >> 0x28\n 32160: u64 [sp + 0x210] = a2\n 32164: u8 [sp + 0x6c5] = a2\n 32168: a2 = a0 >> 0x20\n 32171: u64 [sp + 0x208] = a2\n 32175: u8 [sp + 0x6c4] = a2\n 32179: a2 = a0 >> 0x18\n 32182: u64 [sp + 0x1d0] = a2\n 32186: u8 [sp + 0x6c3] = a2\n 32190: a2 = a0 >> 0x10\n 32193: u64 [sp + 0x1c8] = a2\n 32197: u8 [sp + 0x6c2] = a2\n 32201: a0 = a0 >> 0x8\n 32204: u64 [sp + 0x1c0] = a0\n 32208: u8 [sp + 0x6c1] = a0\n 32212: ra = u64 [sp + 0x260]\n 32216: u8 [sp + 0x6d0] = ra\n 32220: a0 = a1 >> 0x38\n 32223: u64 [sp + 0x1b8] = a0\n 32227: u8 [sp + 0x6cf] = a0\n 32231: a0 = a1 >> 0x30\n 32234: u64 [sp + 0x1b0] = a0\n 32238: u8 [sp + 0x6ce] = a0\n 32242: a0 = a1 >> 0x28\n 32245: u64 [sp + 0x1a8] = a0\n 32249: u8 [sp + 0x6cd] = a0\n 32253: a0 = a1 >> 0x20\n 32256: u64 [sp + 0x1a0] = a0\n 32260: u8 [sp + 0x6cc] = a0\n 32264: a0 = a1 >> 0x18\n 32267: u64 [sp + 0x198] = a0\n 32271: u8 [sp + 0x6cb] = a0\n 32275: a0 = a1 >> 0x10\n 32278: u64 [sp + 0x190] = a0\n 32282: u8 [sp + 0x6ca] = a0\n 32286: a1 = a1 >> 0x8\n 32289: u64 [sp + 0x188] = a1\n 32293: u8 [sp + 0x6c9] = a1\n 32297: t2 = u64 [sp + 0x258]\n 32301: u8 [sp + 0x6d8] = t2\n 32305: a0 = ra >> 0x38\n 32308: u64 [sp + 0x180] = a0\n 32312: u8 [sp + 0x6d7] = a0\n 32316: a0 = ra >> 0x30\n 32319: u64 [sp + 0x178] = a0\n 32323: u8 [sp + 0x6d6] = a0\n 32327: a0 = ra >> 0x28\n 32330: u64 [sp + 0x170] = a0\n 32334: u8 [sp + 0x6d5] = a0\n 32338: a0 = ra >> 0x20\n 32341: u64 [sp + 0x168] = a0\n 32345: u8 [sp + 0x6d4] = a0\n 32349: a0 = ra >> 0x18\n 32352: u64 [sp + 0x160] = a0\n 32356: u8 [sp + 0x6d3] = a0\n 32360: a0 = ra >> 0x10\n 32363: u64 [sp + 0x358] = a0\n 32367: u8 [sp + 0x6d2] = a0\n 32371: a0 = ra >> 0x8\n 32374: u64 [sp + 0x350] = a0\n 32378: u8 [sp + 0x6d1] = a0\n 32382: a0 = t2 >> 0x38\n 32385: u64 [sp + 0x348] = a0\n 32389: u8 [sp + 0x6df] = a0\n 32393: a0 = t2 >> 0x30\n 32396: u64 [sp + 0x318] = a0\n 32400: u8 [sp + 0x6de] = a0\n 32404: a0 = t2 >> 0x28\n 32407: u64 [sp + 0x310] = a0\n 32411: u8 [sp + 0x6dd] = a0\n 32415: a0 = t2 >> 0x20\n 32418: u64 [sp + 0x308] = a0\n 32422: u8 [sp + 0x6dc] = a0\n 32426: a0 = t2 >> 0x18\n 32429: u64 [sp + 0x300] = a0\n 32433: u8 [sp + 0x6db] = a0\n 32437: a0 = t2 >> 0x10\n 32440: u64 [sp + 0x250] = a0\n 32444: u8 [sp + 0x6da] = a0\n 32448: a0 = t2 >> 0x8\n 32451: u64 [sp + 0x248] = a0\n 32455: u8 [sp + 0x6d9] = a0\n 32459: a0 = t0 << 0x38\n 32462: a0 = a0 >> 0x3b\n 32465: a2 = sp + 0x6c0\n 32469: a2 = a2 - a0\n 32472: a0 = u8 [a2 + 0x19]\n 32475: a3 = u8 [a2 + 0x18]\n 32478: a4 = u8 [a2 + 0x1a]\n 32481: a5 = u8 [a2 + 0x1b]\n 32484: a0 = a0 << 0x8\n 32487: a0 = a0 | a3\n 32490: a4 = a4 << 0x10\n 32493: a5 = a5 << 0x18\n 32496: a4 = a4 | a5\n 32499: a0 = a0 | a4\n 32502: a3 = u8 [a2 + 0x1d]\n 32505: a4 = u8 [a2 + 0x1c]\n 32508: a5 = u8 [a2 + 0x1e]\n 32511: s1 = u8 [a2 + 0x1f]\n 32514: a3 = a3 << 0x8\n 32517: a3 = a3 | a4\n 32520: a5 = a5 << 0x10\n 32523: s1 = s1 << 0x18\n 32526: a5 = a5 | s1\n 32529: a3 = a3 | a5\n 32532: a3 = a3 << 0x20\n 32535: a3 = a3 | a0\n 32538: a0 = u8 [a2 + 0x11]\n 32541: a4 = u8 [a2 + 0x10]\n 32544: a5 = u8 [a2 + 0x12]\n 32547: s1 = u8 [a2 + 0x13]\n 32550: a0 = a0 << 0x8\n 32553: a0 = a0 | a4\n 32556: a5 = a5 << 0x10\n 32559: s1 = s1 << 0x18\n 32562: a5 = a5 | s1\n 32565: a0 = a0 | a5\n 32568: a4 = u8 [a2 + 0x15]\n 32571: a5 = u8 [a2 + 0x14]\n 32574: s1 = u8 [a2 + 0x16]\n 32577: a1 = u8 [a2 + 0x17]\n 32580: a4 = a4 << 0x8\n 32583: a4 = a4 | a5\n 32586: s1 = s1 << 0x10\n 32589: a1 = a1 << 0x18\n 32592: a1 = a1 | s1\n 32595: a1 = a1 | a4\n 32598: a1 = a1 << 0x20\n 32601: t1 = a1 | a0\n 32604: a1 = t0 & 0x7\n 32607: a0 = a3 << a1\n 32610: a5 = t1 >> 0x1\n 32613: t0 = a1 ^ 0x3f\n 32616: a5 = a5 >> t0\n 32619: a0 = a0 | a5\n 32622: u64 [sp + 0x3a0] = a0\n 32626: a0 = u8 [a2 + 0x9]\n 32629: a5 = u8 [a2 + 0x8]\n 32632: s1 = u8 [a2 + 0xa]\n 32635: a3 = u8 [a2 + 0xb]\n 32638: a0 = a0 << 0x8\n 32641: a0 = a0 | a5\n 32644: s1 = s1 << 0x10\n 32647: a3 = a3 << 0x18\n 32650: a3 = a3 | s1\n 32653: a0 = a0 | a3\n 32656: a3 = u8 [a2 + 0xd]\n 32659: a5 = u8 [a2 + 0xc]\n 32662: s1 = u8 [a2 + 0xe]\n 32665: a4 = u8 [a2 + 0xf]\n 32668: a3 = a3 << 0x8\n 32671: a3 = a3 | a5\n 32674: s1 = s1 << 0x10\n 32677: a4 = a4 << 0x18\n 32680: a4 = a4 | s1\n 32683: a3 = a3 | a4\n 32686: a3 = a3 << 0x20\n 32689: s1 = a3 | a0\n 32692: a0 = s1 >> 0x1\n 32695: a3 = a1 ^ 0xffffffffffffffff\n 32698: a0 = a0 >> a3\n 32701: a3 = t1 << a1\n 32704: a0 = a0 | a3\n 32707: u64 [sp + 0x398] = a0\n 32711: a0 = u8 [a2 + 0x1]\n 32714: a3 = u8 [a2]\n 32716: a4 = u8 [a2 + 0x2]\n 32719: a5 = u8 [a2 + 0x3]\n 32722: a0 = a0 << 0x8\n 32725: a0 = a0 | a3\n 32728: a4 = a4 << 0x10\n 32731: a5 = a5 << 0x18\n 32734: a4 = a4 | a5\n 32737: a0 = a0 | a4\n 32740: a3 = u8 [a2 + 0x5]\n 32743: a4 = u8 [a2 + 0x4]\n 32746: a5 = u8 [a2 + 0x6]\n 32749: a2 = u8 [a2 + 0x7]\n 32752: a3 = a3 << 0x8\n 32755: a3 = a3 | a4\n 32758: a5 = a5 << 0x10\n 32761: a2 = a2 << 0x18\n 32764: a2 = a2 | a5\n 32767: a5 = u64 [sp + 0x378]\n 32771: a2 = a2 | a3\n 32774: a2 = a2 << 0x20\n 32777: a0 = a0 | a2\n 32780: a2 = a0 >> 0x1\n 32783: a2 = a2 >> t0\n 32786: t0 = u64 [sp + 0x370]\n 32790: a3 = s1 << a1\n 32793: a4 = u64 [sp + 0x380]\n 32797: a2 = a2 | a3\n 32800: u64 [sp + 0x388] = a2\n 32804: a2 = a4 | a5\n 32807: a3 = u64 [sp + 0x3a8]\n 32811: a3 = a3 | t0\n 32814: a2 = a2 | a3\n 32817: a0 = a0 << a1\n 32820: u64 [sp + 0x390] = a0\n 32824: jump @199 if a2 != 0\n      : @198 (gas: 1)\n 32827: jump @221\n      : @199 (gas: 224)\n 32830: u64 [sp + 872] = 0\n 32834: u64 [sp + 864] = 0\n 32838: a0 = u64 [sp + 0x220]\n 32842: u8 [sp + 0x667] = a0\n 32846: a0 = u64 [sp + 0x218]\n 32850: u8 [sp + 0x666] = a0\n 32854: a0 = u64 [sp + 0x210]\n 32858: u8 [sp + 0x665] = a0\n 32862: a0 = u64 [sp + 0x208]\n 32866: u8 [sp + 0x664] = a0\n 32870: a0 = u64 [sp + 0x1d0]\n 32874: u8 [sp + 0x663] = a0\n 32878: a0 = u64 [sp + 0x1c8]\n 32882: u8 [sp + 0x662] = a0\n 32886: a0 = u64 [sp + 0x1c0]\n 32890: u8 [sp + 0x661] = a0\n 32894: a0 = u64 [sp + 0x1b8]\n 32898: u8 [sp + 0x66f] = a0\n 32902: a0 = u64 [sp + 0x1b0]\n 32906: u8 [sp + 0x66e] = a0\n 32910: a0 = u64 [sp + 0x1a8]\n 32914: u8 [sp + 0x66d] = a0\n 32918: a0 = u64 [sp + 0x1a0]\n 32922: u8 [sp + 0x66c] = a0\n 32926: a0 = u64 [sp + 0x198]\n 32930: u8 [sp + 0x66b] = a0\n 32934: a0 = u64 [sp + 0x190]\n 32938: u8 [sp + 0x66a] = a0\n 32942: a0 = u64 [sp + 0x188]\n 32946: u8 [sp + 0x669] = a0\n 32950: a0 = u64 [sp + 0x180]\n 32954: u8 [sp + 0x677] = a0\n 32958: a0 = u64 [sp + 0x178]\n 32962: u8 [sp + 0x676] = a0\n 32966: a0 = u64 [sp + 0x170]\n 32970: u8 [sp + 0x675] = a0\n 32974: a0 = u64 [sp + 0x168]\n 32978: u8 [sp + 0x674] = a0\n 32982: a0 = u64 [sp + 0x160]\n 32986: u8 [sp + 0x673] = a0\n 32990: u8 [sp + 1695] = 0\n 32994: u8 [sp + 1694] = 0\n 32998: u8 [sp + 1693] = 0\n 33002: u8 [sp + 1692] = 0\n 33006: u8 [sp + 1691] = 0\n 33010: u8 [sp + 1690] = 0\n 33014: u8 [sp + 1689] = 0\n 33018: u8 [sp + 1688] = 0\n 33022: u8 [sp + 1687] = 0\n 33026: u8 [sp + 1686] = 0\n 33030: u8 [sp + 1685] = 0\n 33034: u8 [sp + 1684] = 0\n 33038: u8 [sp + 1683] = 0\n 33042: u8 [sp + 1682] = 0\n 33046: u8 [sp + 1681] = 0\n 33050: u8 [sp + 1680] = 0\n 33054: u8 [sp + 1679] = 0\n 33058: u8 [sp + 1678] = 0\n 33062: u8 [sp + 1677] = 0\n 33066: u8 [sp + 1676] = 0\n 33070: u8 [sp + 1675] = 0\n 33074: u8 [sp + 1674] = 0\n 33078: u8 [sp + 1673] = 0\n 33082: u8 [sp + 1672] = 0\n 33086: u8 [sp + 1671] = 0\n 33090: u8 [sp + 1670] = 0\n 33094: u8 [sp + 1669] = 0\n 33098: u8 [sp + 1668] = 0\n 33102: u8 [sp + 1667] = 0\n 33106: u8 [sp + 1666] = 0\n 33110: u8 [sp + 1665] = 0\n 33114: u8 [sp + 1664] = 0\n 33118: a0 = u64 [sp + 0x268]\n 33122: u8 [sp + 0x660] = a0\n 33126: a0 = u64 [sp + 0x2d0]\n 33130: u8 [sp + 0x668] = a0\n 33134: u8 [sp + 0x670] = ra\n 33138: u8 [sp + 0x678] = t2\n 33142: a0 = u64 [sp + 0x358]\n 33146: u8 [sp + 0x672] = a0\n 33150: a0 = u64 [sp + 0x350]\n 33154: u8 [sp + 0x671] = a0\n 33158: a0 = u64 [sp + 0x348]\n 33162: u8 [sp + 0x67f] = a0\n 33166: a0 = u64 [sp + 0x318]\n 33170: u8 [sp + 0x67e] = a0\n 33174: a0 = u64 [sp + 0x310]\n 33178: u8 [sp + 0x67d] = a0\n 33182: a0 = u64 [sp + 0x308]\n 33186: u8 [sp + 0x67c] = a0\n 33190: a0 = u64 [sp + 0x300]\n 33194: u8 [sp + 0x67b] = a0\n 33198: a0 = u64 [sp + 0x250]\n 33202: u8 [sp + 0x67a] = a0\n 33206: a0 = u64 [sp + 0x248]\n 33210: u8 [sp + 0x679] = a0\n 33214: s1 = u64 [sp + 0x3a8]\n 33218: a0 = s1 << 0x38\n 33221: a0 = a0 >> 0x3b\n 33224: a1 = sp + 0x660\n 33228: a1 = a1 + a0\n 33231: a0 = u8 [a1 + 0x11]\n 33234: a2 = u8 [a1 + 0x10]\n 33237: a3 = u8 [a1 + 0x12]\n 33240: a4 = u8 [a1 + 0x13]\n 33243: a0 = a0 << 0x8\n 33246: a0 = a0 | a2\n 33249: a3 = a3 << 0x10\n 33252: a4 = a4 << 0x18\n 33255: a3 = a3 | a4\n 33258: a0 = a0 | a3\n 33261: a2 = u8 [a1 + 0x15]\n 33264: a3 = u8 [a1 + 0x14]\n 33267: a4 = u8 [a1 + 0x16]\n 33270: a5 = u8 [a1 + 0x17]\n 33273: a2 = a2 << 0x8\n 33276: a2 = a2 | a3\n 33279: a4 = a4 << 0x10\n 33282: a5 = a5 << 0x18\n 33285: a4 = a4 | a5\n 33288: a2 = a2 | a4\n 33291: a2 = a2 << 0x20\n 33294: t0 = a2 | a0\n 33297: a3 = s1 & 0x7\n 33300: t1 = t0 >> a3\n 33303: a4 = u8 [a1 + 0x19]\n 33306: a5 = u8 [a1 + 0x18]\n 33309: s1 = u8 [a1 + 0x1a]\n 33312: a2 = u8 [a1 + 0x1b]\n 33315: a4 = a4 << 0x8\n 33318: a4 = a4 | a5\n 33321: s1 = s1 << 0x10\n 33324: a2 = a2 << 0x18\n 33327: a2 = a2 | s1\n 33330: a2 = a2 | a4\n 33333: a4 = u8 [a1 + 0x1d]\n 33336: a5 = u8 [a1 + 0x1c]\n 33339: s1 = u8 [a1 + 0x1e]\n 33342: a0 = u8 [a1 + 0x1f]\n 33345: a4 = a4 << 0x8\n 33348: a4 = a4 | a5\n 33351: s1 = s1 << 0x10\n 33354: a0 = a0 << 0x18\n 33357: a0 = a0 | s1\n 33360: a0 = a0 | a4\n 33363: a0 = a0 << 0x20\n 33366: t2 = a0 | a2\n 33369: a0 = t2 << 0x1\n 33372: ra = a3 ^ 0x3f\n 33375: a0 = a0 << ra\n 33378: a0 = t1 | a0\n 33381: u64 [sp + 0x358] = a0\n 33385: a0 = u8 [a1 + 0x9]\n 33388: a2 = u8 [a1 + 0x8]\n 33391: a4 = u8 [a1 + 0xa]\n 33394: a5 = u8 [a1 + 0xb]\n 33397: a0 = a0 << 0x8\n 33400: a0 = a0 | a2\n 33403: a4 = a4 << 0x10\n 33406: a5 = a5 << 0x18\n 33409: a4 = a4 | a5\n 33412: a0 = a0 | a4\n 33415: a2 = u8 [a1 + 0xd]\n 33418: a4 = u8 [a1 + 0xc]\n 33421: a5 = u8 [a1 + 0xe]\n 33424: s1 = u8 [a1 + 0xf]\n 33427: a2 = a2 << 0x8\n 33430: a2 = a2 | a4\n 33433: a5 = a5 << 0x10\n 33436: s1 = s1 << 0x18\n 33439: a5 = a5 | s1\n 33442: a2 = a2 | a5\n 33445: a2 = a2 << 0x20\n 33448: t1 = a2 | a0\n 33451: a2 = t1 >> a3\n 33454: t0 = t0 << 0x1\n 33457: a4 = a3 ^ 0xffffffffffffffff\n 33460: a4 = t0 << a4\n 33463: a2 = a2 | a4\n 33466: a4 = u8 [a1 + 0x1]\n 33469: a5 = u8 [a1]\n 33471: s1 = u8 [a1 + 0x2]\n 33474: a0 = u8 [a1 + 0x3]\n 33477: a4 = a4 << 0x8\n 33480: a4 = a4 | a5\n 33483: s1 = s1 << 0x10\n 33486: a0 = a0 << 0x18\n 33489: a0 = a0 | s1\n 33492: a0 = a0 | a4\n 33495: a4 = u8 [a1 + 0x5]\n 33498: a5 = u8 [a1 + 0x4]\n 33501: s1 = u8 [a1 + 0x6]\n 33504: a1 = u8 [a1 + 0x7]\n 33507: a4 = a4 << 0x8\n 33510: a4 = a4 | a5\n 33513: s1 = s1 << 0x10\n 33516: a1 = a1 << 0x18\n 33519: a1 = a1 | s1\n 33522: a1 = a1 | a4\n 33525: a1 = a1 << 0x20\n 33528: a0 = a0 | a1\n 33531: a0 = a0 >> a3\n 33534: t1 = t1 << 0x1\n 33537: a1 = t1 << ra\n 33540: t0 = a0 | a1\n 33543: t1 = t2 >> a3\n 33546: a3 = u64 [sp + 0x3c0]\n 33550: a0 = a3 <u 0x1\n 33553: a1 = u64 [sp + 0x3d0]\n 33557: a0 = a1 - a0\n 33560: u64 [sp + 0x318] = a0\n 33564: a0 = a3 | a1\n 33567: a0 = a0 <u 0x1\n 33570: a1 = u64 [sp + 0x3c8]\n 33574: a5 = a1 - a0\n 33577: u64 [sp + 0x310] = a5\n 33581: a0 = a1 <u a0\n 33584: a1 = u64 [sp + 0x3d8]\n 33588: a1 = a1 - a0\n 33591: u64 [sp + 0x308] = a1\n 33595: a3 = a3 + 0xffffffffffffffff\n 33598: u64 [sp + 0x300] = a3\n 33602: a3 = u64 [sp + 0x388]\n 33606: fallthrough\n      : @200 (gas: 101)\n 33607: u64 [sp + 840] = 0\n 33611: a0 = t0 >> 0x3f\n 33614: s1 = a2 << 0x1\n 33617: s1 = s1 | a0\n 33620: t0 = t0 << 0x1\n 33623: a5 = u64 [sp + 0x3a0]\n 33627: a0 = a5 >> 0x3f\n 33630: t2 = t0 | a0\n 33633: a0 = u64 [sp + 0x318]\n 33637: a4 = a0 ^ s1\n 33640: a1 = a0 <u s1\n 33643: a0 = u64 [sp + 0x300]\n 33647: a0 = a0 <u t2\n 33650: a0 = a1 if a4 != 0\n 33653: t1 = t1 << 0x1\n 33656: ra = u64 [sp + 0x358]\n 33660: a1 = ra >> 0x3f\n 33663: t0 = t1 | a1\n 33666: u64 [sp + 0x350] = t0\n 33670: a2 = a2 >> 0x3f\n 33673: ra = ra << 0x1\n 33676: t1 = ra | a2\n 33679: a5 = a5 << 0x1\n 33682: a1 = u64 [sp + 0x398]\n 33686: a4 = a1 >> 0x3f\n 33689: ra = a5 | a4\n 33692: a5 = a1 << 0x1\n 33695: a1 = a3 >> 0x3f\n 33698: a1 = a1 | a5\n 33701: a4 = a3 << 0x1\n 33704: a5 = u64 [sp + 0x390]\n 33708: a3 = a5 >> 0x3f\n 33711: a3 = a3 | a4\n 33714: a5 = a5 << 0x1\n 33717: a2 = u64 [sp + 0x368]\n 33721: a2 = a2 | a5\n 33724: u64 [sp + 0x390] = a2\n 33728: a2 = u64 [sp + 0x360]\n 33732: a3 = a3 | a2\n 33735: u64 [sp + 0x388] = a3\n 33739: a1 = a1 | a2\n 33742: u64 [sp + 0x398] = a1\n 33746: a1 = a2 | ra\n 33749: u64 [sp + 0x3a0] = a1\n 33753: a2 = u64 [sp + 0x310]\n 33757: a1 = a2 - t1\n 33760: a0 = a1 <u a0\n 33763: a1 = a2 <u t1\n 33766: a2 = u64 [sp + 0x308]\n 33770: a3 = a2 - t0\n 33773: a3 = a3 - a1\n 33776: a0 = a3 - a0\n 33779: a3 = a0 >>a 0x3f\n 33782: a0 = u64 [sp + 0x3c0]\n 33786: t0 = a3 & a0\n 33789: a1 = u64 [sp + 0x3d0]\n 33793: a1 = a1 & a3\n 33796: a4 = s1 ^ a1\n 33799: a5 = s1 <u a1\n 33802: ra = t2 <u t0\n 33805: a5 = ra if a4 == 0\n 33808: a4 = u64 [sp + 0x3c8]\n 33812: a4 = a4 & a3\n 33815: a0 = t1 - a4\n 33818: a2 = a0 - a5\n 33821: u64 [sp + 0x358] = a2\n 33825: a2 = a0 <u a5\n 33828: a4 = t1 <u a4\n 33831: a5 = u64 [sp + 0x3d8]\n 33835: a5 = a5 & a3\n 33838: a0 = u64 [sp + 0x350]\n 33842: a5 = a0 - a5\n 33845: a5 = a5 - a4\n 33848: t1 = a5 - a2\n 33851: s1 = s1 - a1\n 33854: a2 = s1 - ra\n 33857: t0 = t2 - t0\n 33860: a5 = u64 [sp + 0x3a8]\n 33864: s1 = u64 [sp + 0x380]\n 33868: a1 = a5 | s1\n 33871: a1 = a1 <u 0x1\n 33874: a4 = u64 [sp + 0x370]\n 33878: a0 = a4 <u a1\n 33881: a1 = a4 - a1\n 33884: a4 = a5 <u 0x1\n 33887: s1 = s1 - a4\n 33890: a4 = u64 [sp + 0x378]\n 33894: a4 = a4 - a0\n 33897: a5 = a5 + 0xffffffffffffffff\n 33900: u64 [sp + 0x380] = s1\n 33904: u64 [sp + 0x378] = a4\n 33908: s1 = s1 | a4\n 33911: u64 [sp + 0x3a8] = a5\n 33915: a4 = a5 | a1\n 33918: s1 = s1 | a4\n 33921: a3 = a3 & 0x1\n 33924: u64 [sp + 0x368] = a3\n 33928: a3 = u64 [sp + 0x388]\n 33932: u64 [sp + 0x370] = a1\n 33936: u64 [sp + 864] = 0\n 33940: jump @200 if s1 != 0\n      : @201 (gas: 1)\n 33944: jump @222\n      : @202 (gas: 141)\n 33947: u64 [sp + 0x390] = a1\n 33951: a0 = a1 <u a0\n 33954: a0 = a0 + a3\n 33957: a0 = a0 + a2\n 33960: a1 = s1 * s1\n 33963: a4 = a1 + a0\n 33966: a1 = a4 <u a1\n 33969: a0 = a0 <u a2\n 33972: a2 = s1 mulhu s1\n 33975: a0 = a0 + a2\n 33978: t1 = a0 + a1\n 33981: a0 = a5 mulhu t2\n 33984: a1 = t0 * t2\n 33987: a3 = a1 + a0\n 33990: t0 = a0\n 33992: u64 [sp + 0x398] = a3\n 33996: s1 = a5 * s1\n 33999: a3 = a3 + s1\n 34002: a5 = a5 * t2\n 34005: ra = a5 + a4\n 34008: a0 = ra <u a5\n 34011: t1 = t1 + a0\n 34014: a2 = a3 + t1\n 34017: t1 = a2 ^ a3\n 34020: a4 = a2 <u a3\n 34023: a4 = a0 if t1 == 0\n 34026: u64 [sp + 0x3a0] = a4\n 34030: t0 = t0 + s1\n 34033: a0 = a1 + t0\n 34036: a4 = a5 + ra\n 34039: u64 [sp + 0x3a8] = a4\n 34043: a5 = a4 <u a5\n 34046: a4 = a0 + a5\n 34049: a4 = a4 + a2\n 34052: a2 = a4 ^ a0\n 34055: u64 [sp + 0x388] = a4\n 34059: a4 = a4 <u a0\n 34062: a4 = a5 if a2 == 0\n 34065: a2 = u64 [sp + 0x398]\n 34069: t2 = a2 <u a1\n 34072: a2 = a3 <u s1\n 34075: a5 = t0 <u s1\n 34078: a3 = u64 [sp + 0x2f8]\n 34082: s1 = u64 [sp + 0x2c0]\n 34086: a3 = a3 mulhu s1\n 34089: a2 = a2 + a3\n 34092: a3 = a3 + a5\n 34095: t1 = u64 [sp + 0x2e8]\n 34099: a5 = u64 [sp + 0x2f0]\n 34103: a5 = t1 mulhu a5\n 34106: t2 = t2 + a5\n 34109: a2 = a2 + t2\n 34112: a0 = a0 <u a1\n 34115: a1 = t1 * s1\n 34118: t0 = a5 + a0\n 34121: a5 = a1 + a2\n 34124: a2 = a2 <u t2\n 34127: s1 = t1 mulhu s1\n 34130: a2 = a2 + s1\n 34133: a0 = a5 <u a1\n 34136: a0 = a0 + a2\n 34139: ra = u64 [sp + 0x3a0]\n 34143: ra = ra + a5\n 34146: t0 = t0 + a3\n 34149: a2 = ra <u a5\n 34152: a0 = a0 + a2\n 34155: a2 = a1 + t0\n 34158: a4 = a4 + a2\n 34161: a5 = a2 <u a1\n 34164: a2 = a4 <u a2\n 34167: a4 = a4 + ra\n 34170: a1 = a4 <u ra\n 34173: u64 [sp + 0x398] = a1\n 34177: a3 = t0 <u a3\n 34180: a3 = a3 + s1\n 34183: a3 = a3 + a5\n 34186: a2 = a2 + a3\n 34189: a2 = a2 + a0\n 34192: a2 = a2 + a1\n 34195: a1 = u64 [sp + 0x2f8]\n 34199: s1 = t1 * a1\n 34202: a5 = a1 mulhu a1\n 34205: t2 = s1 + a5\n 34208: a3 = s1 + t2\n 34211: t0 = a1 * a1\n 34214: a5 = a1\n 34216: a4 = a4 + t0\n 34219: u64 [sp + 0x3a0] = a4\n 34223: a1 = a4 <u t0\n 34226: a4 = a3 + a1\n 34229: t0 = a4 + a2\n 34232: ra = t0 ^ a3\n 34235: a4 = t0 <u a3\n 34238: a4 = a1 if ra == 0\n 34241: a1 = a2 ^ a0\n 34244: a0 = a2 <u a0\n 34247: a2 = u64 [sp + 0x398]\n 34251: a0 = a2 if a1 == 0\n 34254: a1 = t2 <u s1\n 34257: a2 = t1 mulhu a5\n 34260: t2 = a2 + a1\n 34263: a3 = a3 <u s1\n 34266: a2 = a2 + a3\n 34269: a1 = t2 + a2\n 34272: a5 = t1 * t1\n 34275: a2 = a5 + a1\n 34278: a0 = a0 + a2\n 34281: a3 = a0 + a4\n 34284: a4 = a2 <u a5\n 34287: a2 = a0 <u a2\n 34290: ra = a3 <u a0\n 34293: a0 = a1 <u t2\n 34296: a1 = t1 mulhu t1\n 34299: a0 = a0 + a1\n 34302: a0 = a0 + a4\n 34305: a0 = a0 + a2\n 34308: t2 = a0 + ra\n 34311: a5 = t0\n 34313: t0 = a3\n 34315: a3 = u64 [sp + 0x3c8]\n 34319: a0 = t0 <u a3\n 34322: a2 = u64 [sp + 0x3d0]\n 34326: a1 = a2 ^ a5\n 34329: a2 = a5 <u a2\n 34332: a4 = u64 [sp + 0x3c0]\n 34336: s1 = u64 [sp + 0x3a0]\n 34340: a4 = s1 <u a4\n 34343: a4 = a2 if a1 != 0\n 34346: a2 = u64 [sp + 0x3d8]\n 34350: a1 = a2 ^ t2\n 34353: a2 = t2 <u a2\n 34356: a2 = a0 if a1 == 0\n 34359: a0 = a3 ^ t0\n 34362: a0 = a0 | a1\n 34365: a4 = a2 if a0 != 0\n 34368: a0 = u64 [sp + 0x1e0]\n 34372: s1 = a0 << 0x39\n 34375: ra = a0 ^ 0xffffffffffffffff\n 34378: u64 [sp + 0x250] = ra\n 34382: u64 [sp + 0x248] = s1\n 34386: jump @212 if a4 == 0\n      : @203 (gas: 317)\n 34390: a3 = sp + 0x7ff\n 34394: a3 = a3 + 0x360\n 34398: a4 = u64 [sp + 0x390]\n 34402: u8 [a3 + 0xe9] = a4\n 34406: a0 = a4 >> 0x38\n 34409: u64 [sp + 0x398] = a0\n 34413: a0 = a4 >> 0x30\n 34416: u64 [sp + 0x380] = a0\n 34420: a1 = u64 [sp + 0x138]\n 34424: a1 = a1 >> 0x3f\n 34427: a0 = u64 [sp + 0x3a8]\n 34431: a2 = u64 [sp + 0x3a0]\n 34435: a0 = a2 if a1 == 0\n 34438: t0 = a2 if a1 != 0\n 34441: a2 = a4 >> 0x28\n 34444: u64 [sp + 0x350] = a2\n 34448: t1 = u64 [sp + 0x388]\n 34452: u8 [a3 + 0xf9] = t1\n 34456: a2 = a4 >> 0x20\n 34459: u64 [sp + 0x348] = a2\n 34463: a2 = a4 >> 0x18\n 34466: u64 [sp + 0x300] = a2\n 34470: a2 = a4 >> 0x10\n 34473: u64 [sp + 0x2d0] = a2\n 34477: a2 = a4 >> 0x8\n 34480: u64 [sp + 0x220] = a2\n 34484: a4 = t1 if a1 == 0\n 34487: a2 = t1 >> 0x38\n 34490: u64 [sp + 0x3a0] = a2\n 34494: a2 = t1 >> 0x30\n 34497: u64 [sp + 0x390] = a2\n 34501: a2 = t1 >> 0x28\n 34504: u64 [sp + 0x378] = a2\n 34508: a2 = t1 >> 0x20\n 34511: u64 [sp + 0x370] = a2\n 34515: a2 = t1 >> 0x18\n 34518: u64 [sp + 0x368] = a2\n 34522: a2 = t1 >> 0x10\n 34525: u64 [sp + 0x360] = a2\n 34529: a2 = t1 >> 0x8\n 34532: u64 [sp + 0x358] = a2\n 34536: t1 = a5 if a1 == 0\n 34539: t2 = a5 if a1 != 0\n 34542: s1 = s1 >> 0x3f\n 34545: a5 = ra\n 34547: ra = a4\n 34549: ra = a0 if s1 == 0\n 34552: a0 = t1 if s1 == 0\n 34555: t2 = t0 if s1 != 0\n 34558: t0 = t1 if s1 != 0\n 34561: a2 = u64 [sp + 0x2f0]\n 34565: a2 = a2 * a2\n 34568: u8 [a3 + 0xe1] = a2\n 34572: t1 = a3\n 34574: a3 = a2 >> 0x38\n 34577: u64 [sp + 0x388] = a3\n 34581: a3 = a2 >> 0x30\n 34584: u64 [sp + 0x218] = a3\n 34588: a3 = a2 >> 0x28\n 34591: u64 [sp + 0x210] = a3\n 34595: a3 = a2 >> 0x20\n 34598: u64 [sp + 0x208] = a3\n 34602: a3 = a2 >> 0x18\n 34605: u64 [sp + 0x1d0] = a3\n 34609: a3 = a2 >> 0x10\n 34612: u64 [sp + 0x1c8] = a3\n 34616: a3 = a2 >> 0x8\n 34619: u64 [sp + 0x1c0] = a3\n 34623: a3 = u64 [sp + 0x3a8]\n 34627: a2 = a3 if a1 == 0\n 34630: a2 = a4 if s1 == 0\n 34633: a1 = ra >> 0x1\n 34636: a1 = a1 >> a5\n 34639: a4 = u64 [sp + 0x1e0]\n 34643: s1 = a0 << a4\n 34646: s1 = s1 | a1\n 34649: a1 = t2 << a4\n 34652: t2 = t1\n 34654: a3 = t0 >> 0x1\n 34657: a3 = a3 >> a5\n 34660: t1 = a1 | a3\n 34663: a1 = ra << a4\n 34666: a2 = a2 >> 0x1\n 34669: a2 = a2 >> a5\n 34672: a2 = a2 | a1\n 34675: u64 [sp + 0x310] = a2\n 34679: a1 = t0 << a4\n 34682: a0 = a0 >> 0x1\n 34685: a0 = a0 >> a5\n 34688: t0 = a1 | a0\n 34691: a0 = u64 [sp + 0x3b8]\n 34695: a0 = clz a0\n 34697: a0 = a0 + 0x40\n 34700: ra = u64 [sp + 0x3b0]\n 34704: a1 = clz ra\n 34706: a1 = a0 if ra == 0\n 34709: a0 = clz a2\n 34711: a2 = a0 + 0x40\n 34714: u64 [sp + 0x318] = s1\n 34718: a0 = clz s1\n 34720: a2 = a0 if s1 != 0\n 34723: a0 = clz t0\n 34725: a0 = a0 + 0x40\n 34728: a3 = clz t1\n 34730: a0 = a3 if t1 != 0\n 34733: a3 = a2 + 0x80\n 34737: a2 = a3 <u a2\n 34740: a5 = t0 | t1\n 34743: a0 = a3 if a5 == 0\n 34746: a2 = 0 if a5 != 0\n 34748: a3 = a1 + 0x80\n 34752: s1 = a3 <u a1\n 34755: a4 = a3 <u a0\n 34758: a5 = s1 ^ a2\n 34761: a1 = s1 <u a2\n 34764: a1 = a4 if a5 == 0\n 34767: u64 [sp + 0x260] = s1\n 34771: s1 = s1 - a2\n 34774: s1 = s1 - a4\n 34777: a2 = a1 <u 0x1\n 34780: a2 = a2 + 0xffffffffffffffff\n 34783: a4 = -a1\n 34785: u64 [sp + 0xe0] = a4\n 34789: a5 = a4 >u 0\n 34791: a4 = a2 >u 0\n 34793: u64 [sp + 0xf0] = a2\n 34797: a4 = a5 if a2 == 0\n 34800: u64 [sp + 0x258] = a3\n 34804: a3 = a3 - a0\n 34807: u64 [sp + 0xd8] = a3\n 34811: a0 = a3 <u 0x100\n 34815: a0 = a0 ^ 0x1\n 34818: a5 = s1 >u 0\n 34820: u64 [sp + 0xe8] = s1\n 34824: a0 = a5 if s1 != 0\n 34827: a0 = a4 if a1 != 0\n 34830: a1 = u64 [sp + 0x388]\n 34834: u8 [t2 + 0xe8] = a1\n 34838: a1 = u64 [sp + 0x218]\n 34842: u8 [t2 + 0xe7] = a1\n 34846: a1 = u64 [sp + 0x210]\n 34850: u8 [t2 + 0xe6] = a1\n 34854: a1 = u64 [sp + 0x208]\n 34858: u8 [t2 + 0xe5] = a1\n 34862: a1 = u64 [sp + 0x1d0]\n 34866: u8 [t2 + 0xe4] = a1\n 34870: a1 = u64 [sp + 0x1c8]\n 34874: u8 [t2 + 0xe3] = a1\n 34878: a1 = u64 [sp + 0x1c0]\n 34882: u8 [t2 + 0xe2] = a1\n 34886: a1 = u64 [sp + 0x398]\n 34890: u8 [t2 + 0xf0] = a1\n 34894: a1 = u64 [sp + 0x380]\n 34898: u8 [t2 + 0xef] = a1\n 34902: a1 = u64 [sp + 0x350]\n 34906: u8 [t2 + 0xee] = a1\n 34910: a1 = u64 [sp + 0x348]\n 34914: u8 [t2 + 0xed] = a1\n 34918: a1 = u64 [sp + 0x300]\n 34922: u8 [t2 + 0xec] = a1\n 34926: a1 = u64 [sp + 0x2d0]\n 34930: u8 [t2 + 0xeb] = a1\n 34934: a1 = u64 [sp + 0x220]\n 34938: u8 [t2 + 0xea] = a1\n 34942: a2 = u64 [sp + 0x3a8]\n 34946: a1 = a2 >> 0x38\n 34949: u8 [t2 + 0xf8] = a1\n 34953: a1 = a2 >> 0x30\n 34956: u8 [t2 + 0xf7] = a1\n 34960: a1 = a2 >> 0x28\n 34963: u8 [t2 + 0xf6] = a1\n 34967: a1 = a2 >> 0x20\n 34970: u8 [t2 + 0xf5] = a1\n 34974: a1 = a2 >> 0x18\n 34977: u8 [t2 + 0xf4] = a1\n 34981: a1 = a2 >> 0x10\n 34984: u8 [t2 + 0xf3] = a1\n 34988: u8 [t2 + 0xf1] = a2\n 34992: a1 = a2 >> 0x8\n 34995: u8 [t2 + 0xf2] = a1\n 34999: a1 = u64 [sp + 0x3a0]\n 35003: u8 [t2 + 0x100] = a1\n 35007: a1 = u64 [sp + 0x390]\n 35011: u8 [t2 + 0xff] = a1\n 35015: a1 = u64 [sp + 0x378]\n 35019: u8 [t2 + 0xfe] = a1\n 35023: a1 = u64 [sp + 0x370]\n 35027: u8 [t2 + 0xfd] = a1\n 35031: a1 = u64 [sp + 0x368]\n 35035: u8 [t2 + 0xfc] = a1\n 35039: a1 = u64 [sp + 0x360]\n 35043: u8 [t2 + 0xfb] = a1\n 35047: a1 = u64 [sp + 0x358]\n 35051: u8 [t2 + 0xfa] = a1\n 35055: s1 = u64 [sp + 0x318]\n 35059: a1 = s1 | t1\n 35062: a2 = u64 [sp + 0x310]\n 35066: a4 = a2 | t0\n 35069: a1 = a1 | a4\n 35072: a3 = u64 [sp + 0x3b8]\n 35076: a4 = a3 | ra\n 35079: a5 = a4 <u 0x1\n 35082: a1 = a1 <u 0x1\n 35085: a4 = a5 | a1\n 35088: a4 = a4 | a0\n 35091: u8 [t2 + 224] = 0\n 35095: u8 [t2 + 223] = 0\n 35099: u8 [t2 + 222] = 0\n 35103: u8 [t2 + 221] = 0\n 35107: u8 [t2 + 220] = 0\n 35111: u8 [t2 + 219] = 0\n 35115: u8 [t2 + 218] = 0\n 35119: u8 [t2 + 217] = 0\n 35123: u8 [t2 + 216] = 0\n 35127: u8 [t2 + 215] = 0\n 35131: u8 [t2 + 214] = 0\n 35135: u8 [t2 + 213] = 0\n 35139: u8 [t2 + 212] = 0\n 35143: u8 [t2 + 211] = 0\n 35147: u8 [t2 + 210] = 0\n 35151: u8 [t2 + 209] = 0\n 35155: u8 [t2 + 208] = 0\n 35159: u8 [t2 + 207] = 0\n 35163: u8 [t2 + 206] = 0\n 35167: u8 [t2 + 205] = 0\n 35171: u8 [t2 + 204] = 0\n 35175: u8 [t2 + 203] = 0\n 35179: u8 [t2 + 202] = 0\n 35183: u8 [t2 + 201] = 0\n 35187: u8 [t2 + 200] = 0\n 35191: u8 [t2 + 199] = 0\n 35195: u8 [t2 + 198] = 0\n 35199: u8 [t2 + 197] = 0\n 35203: u8 [t2 + 196] = 0\n 35207: u8 [t2 + 195] = 0\n 35211: u8 [t2 + 194] = 0\n 35215: u8 [t2 + 193] = 0\n 35219: a0 = u64 [sp + 0x1f0]\n 35223: a1 = sp + 0x7ff\n 35227: a1 = a1 + 0x441\n 35231: a0 = a1 - a0\n 35234: u64 [sp + 0x308] = t0\n 35238: a1 = u8 [a0 + 0x18]\n 35241: u64 [sp + 0x118] = a1\n 35245: a1 = u8 [a0 + 0x19]\n 35248: u64 [sp + 0xf8] = a1\n 35252: a1 = u8 [a0 + 0x1a]\n 35255: u64 [sp + 0x108] = a1\n 35259: a1 = u8 [a0 + 0x1b]\n 35262: u64 [sp + 0x100] = a1\n 35266: a1 = u8 [a0 + 0x1c]\n 35269: u64 [sp + 0x130] = a1\n 35273: a1 = u8 [a0 + 0x1d]\n 35276: u64 [sp + 0x110] = a1\n 35280: a1 = u8 [a0 + 0x1e]\n 35283: u64 [sp + 0x128] = a1\n 35287: a1 = u8 [a0 + 0x1f]\n 35290: u64 [sp + 0x120] = a1\n 35294: a1 = u8 [a0 + 0x10]\n 35297: u64 [sp + 0x160] = a1\n 35301: a1 = u8 [a0 + 0x11]\n 35304: u64 [sp + 0x140] = a1\n 35308: a1 = u8 [a0 + 0x12]\n 35311: u64 [sp + 0x150] = a1\n 35315: a1 = u8 [a0 + 0x13]\n 35318: u64 [sp + 0x148] = a1\n 35322: a1 = u8 [a0 + 0x14]\n 35325: u64 [sp + 0x178] = a1\n 35329: a1 = u8 [a0 + 0x15]\n 35332: u64 [sp + 0x158] = a1\n 35336: a1 = u8 [a0 + 0x16]\n 35339: u64 [sp + 0x170] = a1\n 35343: a1 = u8 [a0 + 0x17]\n 35346: u64 [sp + 0x168] = a1\n 35350: a1 = u8 [a0 + 0x8]\n 35353: u64 [sp + 0x1a0] = a1\n 35357: a1 = u8 [a0 + 0x9]\n 35360: u64 [sp + 0x180] = a1\n 35364: a1 = u8 [a0 + 0xa]\n 35367: u64 [sp + 0x190] = a1\n 35371: a1 = u8 [a0 + 0xb]\n 35374: u64 [sp + 0x188] = a1\n 35378: a1 = u8 [a0 + 0xc]\n 35381: u64 [sp + 0x1b8] = a1\n 35385: a1 = u8 [a0 + 0xd]\n 35388: u64 [sp + 0x198] = a1\n 35392: a1 = u8 [a0 + 0xe]\n 35395: u64 [sp + 0x1b0] = a1\n 35399: a1 = u8 [a0 + 0xf]\n 35402: u64 [sp + 0x1a8] = a1\n 35406: a1 = u8 [a0]\n 35408: u64 [sp + 0x208] = a1\n 35412: a1 = u8 [a0 + 0x1]\n 35415: u64 [sp + 0x1c0] = a1\n 35419: a1 = u8 [a0 + 0x2]\n 35422: u64 [sp + 0x1d0] = a1\n 35426: a1 = u8 [a0 + 0x3]\n 35429: u64 [sp + 0x1c8] = a1\n 35433: a1 = u8 [a0 + 0x4]\n 35436: u64 [sp + 0x2d0] = a1\n 35440: a1 = u8 [a0 + 0x5]\n 35443: u64 [sp + 0x210] = a1\n 35447: a1 = u8 [a0 + 0x6]\n 35450: ra = u8 [a0 + 0x7]\n 35453: u64 [sp + 0x300] = t1\n 35457: t1 = 0 if a4 != 0\n 35459: u64 [sp + 0x388] = t1\n 35463: t0 = 0 if a4 != 0\n 35465: u64 [sp + 0x3a8] = t0\n 35469: t1 = s1\n 35471: t1 = 0 if a4 != 0\n 35473: a3 = a2\n 35475: a3 = 0 if a4 != 0\n 35477: t0 = a3\n 35479: u64 [sp + 0x220] = a5\n 35483: u64 [sp + 0x218] = a1\n 35487: jump @205 if a4 == 0\n      : @204 (gas: 1)\n 35490: jump @244\n      : @205 (gas: 9)\n 35493: a2 = u64 [sp + 0xd8]\n 35497: a4 = a2 ^ 0xff\n 35501: s1 = u64 [sp + 0xe0]\n 35505: a4 = a4 | s1\n 35508: t2 = u64 [sp + 0xf0]\n 35512: a3 = u64 [sp + 0xe8]\n 35516: a5 = a3 | t2\n 35519: a4 = a4 | a5\n 35522: jump @207 if a4 != 0\n      : @206 (gas: 1)\n 35525: jump @244\n      : @207 (gas: 261)\n 35528: u64 [sp + 0xd0] = ra\n 35532: a1 = a2 + 0x1\n 35535: u64 [sp + 0x3a8] = a1\n 35539: a0 = a1 <u 0x1\n 35542: a0 = a0 + a3\n 35545: u64 [sp + 0x388] = a0\n 35549: a0 = a0 | a1\n 35552: a0 = a0 <u 0x1\n 35555: a0 = a0 + s1\n 35558: u64 [sp + 0x378] = a0\n 35562: a0 = a0 <u s1\n 35565: a0 = a0 + t2\n 35568: u64 [sp + 0x380] = a0\n 35572: a1 = u64 [sp + 0x318]\n 35576: t0 = 0xff - a2\n 35580: ra = sp + 0x7ff\n 35584: ra = ra + 0x360\n 35588: t2 = u64 [sp + 0x310]\n 35592: u8 [ra + 0xa1] = t2\n 35596: u8 [ra + 160] = 0\n 35600: u8 [ra + 159] = 0\n 35604: u8 [ra + 158] = 0\n 35608: u8 [ra + 157] = 0\n 35612: u8 [ra + 156] = 0\n 35616: u8 [ra + 155] = 0\n 35620: u8 [ra + 154] = 0\n 35624: u8 [ra + 153] = 0\n 35628: u8 [ra + 152] = 0\n 35632: u8 [ra + 151] = 0\n 35636: u8 [ra + 150] = 0\n 35640: u8 [ra + 149] = 0\n 35644: u8 [ra + 148] = 0\n 35648: u8 [ra + 147] = 0\n 35652: u8 [ra + 146] = 0\n 35656: u8 [ra + 145] = 0\n 35660: u8 [ra + 144] = 0\n 35664: u8 [ra + 143] = 0\n 35668: u8 [ra + 142] = 0\n 35672: u8 [ra + 141] = 0\n 35676: u8 [ra + 140] = 0\n 35680: u8 [ra + 139] = 0\n 35684: u8 [ra + 138] = 0\n 35688: u8 [ra + 137] = 0\n 35692: u8 [ra + 136] = 0\n 35696: u8 [ra + 135] = 0\n 35700: u8 [ra + 134] = 0\n 35704: u8 [ra + 133] = 0\n 35708: u8 [ra + 132] = 0\n 35712: u8 [ra + 131] = 0\n 35716: u8 [ra + 130] = 0\n 35720: u8 [ra + 129] = 0\n 35724: u8 [ra + 0xa9] = a1\n 35728: a0 = t2 >> 0x38\n 35731: u64 [sp + 0xb8] = a0\n 35735: u8 [ra + 0xa8] = a0\n 35739: a0 = t2 >> 0x30\n 35742: u64 [sp + 0xb0] = a0\n 35746: u8 [ra + 0xa7] = a0\n 35750: a0 = t2 >> 0x28\n 35753: u64 [sp + 0xa8] = a0\n 35757: u8 [ra + 0xa6] = a0\n 35761: a0 = t2 >> 0x20\n 35764: u64 [sp + 0xa0] = a0\n 35768: u8 [ra + 0xa5] = a0\n 35772: a0 = t2 >> 0x18\n 35775: u64 [sp + 0x98] = a0\n 35779: u8 [ra + 0xa4] = a0\n 35783: a0 = t2 >> 0x10\n 35786: u64 [sp + 0x90] = a0\n 35790: u8 [ra + 0xa3] = a0\n 35794: a0 = t2 >> 0x8\n 35797: u64 [sp + 0x88] = a0\n 35801: u8 [ra + 0xa2] = a0\n 35805: a0 = u64 [sp + 0x308]\n 35809: u8 [ra + 0xb1] = a0\n 35813: a2 = a1 >> 0x38\n 35816: u64 [sp + 0x80] = a2\n 35820: u8 [ra + 0xb0] = a2\n 35824: a2 = a1 >> 0x30\n 35827: u64 [sp + 0x78] = a2\n 35830: u8 [ra + 0xaf] = a2\n 35834: a2 = a1 >> 0x28\n 35837: u64 [sp + 0x70] = a2\n 35840: u8 [ra + 0xae] = a2\n 35844: a2 = a1 >> 0x20\n 35847: u64 [sp + 0x68] = a2\n 35850: u8 [ra + 0xad] = a2\n 35854: a2 = a1 >> 0x18\n 35857: u64 [sp + 0x60] = a2\n 35860: u8 [ra + 0xac] = a2\n 35864: a2 = a1 >> 0x10\n 35867: u64 [sp + 0x58] = a2\n 35870: u8 [ra + 0xab] = a2\n 35874: a1 = a1 >> 0x8\n 35877: u64 [sp + 0x50] = a1\n 35880: u8 [ra + 0xaa] = a1\n 35884: a2 = u64 [sp + 0x300]\n 35888: u8 [ra + 0xb9] = a2\n 35892: a1 = a0 >> 0x38\n 35895: u64 [sp + 0x48] = a1\n 35898: u8 [ra + 0xb8] = a1\n 35902: a1 = a0 >> 0x30\n 35905: u64 [sp + 0x40] = a1\n 35908: u8 [ra + 0xb7] = a1\n 35912: a1 = a0 >> 0x28\n 35915: u64 [sp + 0x38] = a1\n 35918: u8 [ra + 0xb6] = a1\n 35922: a1 = a0 >> 0x20\n 35925: u64 [sp + 0x30] = a1\n 35928: u8 [ra + 0xb5] = a1\n 35932: a1 = a0 >> 0x18\n 35935: u64 [sp + 0x28] = a1\n 35938: u8 [ra + 0xb4] = a1\n 35942: a1 = a0 >> 0x10\n 35945: u64 [sp + 0x358] = a1\n 35949: u8 [ra + 0xb3] = a1\n 35953: a0 = a0 >> 0x8\n 35956: u64 [sp + 0x350] = a0\n 35960: u8 [ra + 0xb2] = a0\n 35964: a0 = a2 >> 0x38\n 35967: u64 [sp + 0x348] = a0\n 35971: u8 [ra + 0xc0] = a0\n 35975: a0 = a2 >> 0x30\n 35978: u64 [sp + 0xf0] = a0\n 35982: u8 [ra + 0xbf] = a0\n 35986: a0 = a2 >> 0x28\n 35989: u64 [sp + 0xe8] = a0\n 35993: u8 [ra + 0xbe] = a0\n 35997: a0 = a2 >> 0x20\n 36000: u64 [sp + 0xe0] = a0\n 36004: u8 [ra + 0xbd] = a0\n 36008: a0 = a2 >> 0x18\n 36011: u64 [sp + 0xd8] = a0\n 36015: u8 [ra + 0xbc] = a0\n 36019: a0 = a2 >> 0x10\n 36022: u64 [sp + 0xc8] = a0\n 36026: u8 [ra + 0xbb] = a0\n 36030: a0 = a2 >> 0x8\n 36033: u64 [sp + 0xc0] = a0\n 36037: u8 [ra + 0xba] = a0\n 36041: a1 = t0 << 0x38\n 36044: a1 = a1 >> 0x3b\n 36047: a0 = sp + 0x7ff\n 36051: a0 = a0 + 0x401\n 36055: a1 = a0 - a1\n 36058: a2 = u8 [a1 + 0x19]\n 36061: a3 = u8 [a1 + 0x18]\n 36064: a4 = u8 [a1 + 0x1a]\n 36067: a5 = u8 [a1 + 0x1b]\n 36070: a2 = a2 << 0x8\n 36073: a2 = a2 | a3\n 36076: a4 = a4 << 0x10\n 36079: a5 = a5 << 0x18\n 36082: a4 = a4 | a5\n 36085: a2 = a2 | a4\n 36088: a3 = u8 [a1 + 0x1d]\n 36091: a4 = u8 [a1 + 0x1c]\n 36094: a5 = u8 [a1 + 0x1e]\n 36097: s1 = u8 [a1 + 0x1f]\n 36100: a3 = a3 << 0x8\n 36103: a3 = a3 | a4\n 36106: a5 = a5 << 0x10\n 36109: s1 = s1 << 0x18\n 36112: a5 = a5 | s1\n 36115: a3 = a3 | a5\n 36118: a3 = a3 << 0x20\n 36121: a2 = a2 | a3\n 36124: a3 = u8 [a1 + 0x11]\n 36127: a4 = u8 [a1 + 0x10]\n 36130: a5 = u8 [a1 + 0x12]\n 36133: s1 = u8 [a1 + 0x13]\n 36136: a3 = a3 << 0x8\n 36139: a3 = a3 | a4\n 36142: a5 = a5 << 0x10\n 36145: s1 = s1 << 0x18\n 36148: a5 = a5 | s1\n 36151: a3 = a3 | a5\n 36154: a4 = u8 [a1 + 0x15]\n 36157: a5 = u8 [a1 + 0x14]\n 36160: s1 = u8 [a1 + 0x16]\n 36163: a0 = u8 [a1 + 0x17]\n 36166: a4 = a4 << 0x8\n 36169: a4 = a4 | a5\n 36172: s1 = s1 << 0x10\n 36175: a0 = a0 << 0x18\n 36178: a0 = a0 | s1\n 36181: a0 = a0 | a4\n 36184: a0 = a0 << 0x20\n 36187: t1 = a0 | a3\n 36190: a0 = t0 & 0x7\n 36193: a4 = a2 << a0\n 36196: a5 = t1 >> 0x1\n 36199: t0 = a0 ^ 0x3f\n 36202: a5 = a5 >> t0\n 36205: a4 = a4 | a5\n 36208: u64 [sp + 0x3a0] = a4\n 36212: a4 = u8 [a1 + 0x9]\n 36215: a5 = u8 [a1 + 0x8]\n 36218: s1 = u8 [a1 + 0xa]\n 36221: a2 = u8 [a1 + 0xb]\n 36224: a4 = a4 << 0x8\n 36227: a4 = a4 | a5\n 36230: s1 = s1 << 0x10\n 36233: a2 = a2 << 0x18\n 36236: a2 = a2 | s1\n 36239: a2 = a2 | a4\n 36242: a4 = u8 [a1 + 0xd]\n 36245: a5 = u8 [a1 + 0xc]\n 36248: s1 = u8 [a1 + 0xe]\n 36251: a3 = u8 [a1 + 0xf]\n 36254: a4 = a4 << 0x8\n 36257: a4 = a4 | a5\n 36260: s1 = s1 << 0x10\n 36263: a3 = a3 << 0x18\n 36266: a3 = a3 | s1\n 36269: a3 = a3 | a4\n 36272: a3 = a3 << 0x20\n 36275: a4 = a3 | a2\n 36278: a2 = a4 >> 0x1\n 36281: a3 = a0 ^ 0xffffffffffffffff\n 36284: a2 = a2 >> a3\n 36287: a3 = t1 << a0\n 36290: a2 = a2 | a3\n 36293: u64 [sp + 0x398] = a2\n 36297: a2 = u8 [a1 + 0x1]\n 36300: a3 = u8 [a1]\n 36302: a5 = u8 [a1 + 0x2]\n 36305: s1 = u8 [a1 + 0x3]\n 36308: a2 = a2 << 0x8\n 36311: a2 = a2 | a3\n 36314: a5 = a5 << 0x10\n 36317: s1 = s1 << 0x18\n 36320: a5 = a5 | s1\n 36323: a2 = a2 | a5\n 36326: a3 = u8 [a1 + 0x5]\n 36329: a5 = u8 [a1 + 0x4]\n 36332: s1 = u8 [a1 + 0x6]\n 36335: a1 = u8 [a1 + 0x7]\n 36338: a3 = a3 << 0x8\n 36341: a3 = a3 | a5\n 36344: s1 = s1 << 0x10\n 36347: a1 = a1 << 0x18\n 36350: a1 = a1 | s1\n 36353: a5 = u64 [sp + 0x388]\n 36357: a1 = a1 | a3\n 36360: a1 = a1 << 0x20\n 36363: a1 = a1 | a2\n 36366: a2 = a1 >> 0x1\n 36369: a2 = a2 >> t0\n 36372: s1 = u64 [sp + 0x378]\n 36376: a3 = a4 << a0\n 36379: a4 = u64 [sp + 0x380]\n 36383: a2 = a2 | a3\n 36386: u64 [sp + 0x390] = a2\n 36390: a2 = a5 | a4\n 36393: a3 = u64 [sp + 0x3a8]\n 36397: a3 = a3 | s1\n 36400: a2 = a2 | a3\n 36403: a0 = a1 << a0\n 36406: u64 [sp + 0x368] = a0\n 36410: jump @209 if a2 != 0\n      : @208 (gas: 1)\n 36413: jump @242\n      : @209 (gas: 219)\n 36416: u64 [sp + 880] = 0\n 36420: u64 [sp + 864] = 0\n 36424: a1 = u64 [sp + 0xb8]\n 36428: u8 [ra + 0x48] = a1\n 36431: a1 = u64 [sp + 0xb0]\n 36435: u8 [ra + 0x47] = a1\n 36438: a1 = u64 [sp + 0xa8]\n 36442: u8 [ra + 0x46] = a1\n 36445: a1 = u64 [sp + 0xa0]\n 36449: u8 [ra + 0x45] = a1\n 36452: a1 = u64 [sp + 0x98]\n 36456: u8 [ra + 0x44] = a1\n 36459: a1 = u64 [sp + 0x90]\n 36463: u8 [ra + 0x43] = a1\n 36466: a1 = u64 [sp + 0x88]\n 36470: u8 [ra + 0x42] = a1\n 36473: a1 = u64 [sp + 0x80]\n 36477: u8 [ra + 0x50] = a1\n 36480: a1 = u64 [sp + 0x78]\n 36483: u8 [ra + 0x4f] = a1\n 36486: a1 = u64 [sp + 0x70]\n 36489: u8 [ra + 0x4e] = a1\n 36492: a1 = u64 [sp + 0x68]\n 36495: u8 [ra + 0x4d] = a1\n 36498: a1 = u64 [sp + 0x60]\n 36501: u8 [ra + 0x4c] = a1\n 36504: a1 = u64 [sp + 0x58]\n 36507: u8 [ra + 0x4b] = a1\n 36510: a1 = u64 [sp + 0x50]\n 36513: u8 [ra + 0x4a] = a1\n 36516: a1 = u64 [sp + 0x48]\n 36519: u8 [ra + 0x58] = a1\n 36522: a1 = u64 [sp + 0x40]\n 36525: u8 [ra + 0x57] = a1\n 36528: a1 = u64 [sp + 0x38]\n 36531: u8 [ra + 0x56] = a1\n 36534: a1 = u64 [sp + 0x30]\n 36537: u8 [ra + 0x55] = a1\n 36540: a1 = u64 [sp + 0x28]\n 36543: u8 [ra + 0x54] = a1\n 36546: u8 [ra + 128] = 0\n 36550: u8 [ra + 127] = 0\n 36553: u8 [ra + 126] = 0\n 36556: u8 [ra + 125] = 0\n 36559: u8 [ra + 124] = 0\n 36562: u8 [ra + 123] = 0\n 36565: u8 [ra + 122] = 0\n 36568: u8 [ra + 121] = 0\n 36571: u8 [ra + 120] = 0\n 36574: u8 [ra + 119] = 0\n 36577: u8 [ra + 118] = 0\n 36580: u8 [ra + 117] = 0\n 36583: u8 [ra + 116] = 0\n 36586: u8 [ra + 115] = 0\n 36589: u8 [ra + 114] = 0\n 36592: u8 [ra + 113] = 0\n 36595: u8 [ra + 112] = 0\n 36598: u8 [ra + 111] = 0\n 36601: u8 [ra + 110] = 0\n 36604: u8 [ra + 109] = 0\n 36607: u8 [ra + 108] = 0\n 36610: u8 [ra + 107] = 0\n 36613: u8 [ra + 106] = 0\n 36616: u8 [ra + 105] = 0\n 36619: u8 [ra + 104] = 0\n 36622: u8 [ra + 103] = 0\n 36625: u8 [ra + 102] = 0\n 36628: u8 [ra + 101] = 0\n 36631: u8 [ra + 100] = 0\n 36634: u8 [ra + 99] = 0\n 36637: u8 [ra + 98] = 0\n 36640: u8 [ra + 97] = 0\n 36643: u8 [ra + 0x41] = t2\n 36646: a0 = u64 [sp + 0x318]\n 36650: u8 [ra + 0x49] = a0\n 36653: a0 = u64 [sp + 0x308]\n 36657: u8 [ra + 0x51] = a0\n 36660: a0 = u64 [sp + 0x300]\n 36664: u8 [ra + 0x59] = a0\n 36667: a0 = u64 [sp + 0x358]\n 36671: u8 [ra + 0x53] = a0\n 36674: a0 = u64 [sp + 0x350]\n 36678: u8 [ra + 0x52] = a0\n 36681: a0 = u64 [sp + 0x348]\n 36685: u8 [ra + 0x60] = a0\n 36688: a0 = u64 [sp + 0xf0]\n 36692: u8 [ra + 0x5f] = a0\n 36695: a0 = u64 [sp + 0xe8]\n 36699: u8 [ra + 0x5e] = a0\n 36702: a0 = u64 [sp + 0xe0]\n 36706: u8 [ra + 0x5d] = a0\n 36709: a0 = u64 [sp + 0xd8]\n 36713: u8 [ra + 0x5c] = a0\n 36716: a0 = u64 [sp + 0xc8]\n 36720: u8 [ra + 0x5b] = a0\n 36723: a0 = u64 [sp + 0xc0]\n 36727: u8 [ra + 0x5a] = a0\n 36730: s1 = u64 [sp + 0x3a8]\n 36734: a0 = s1 << 0x38\n 36737: a0 = a0 >> 0x3b\n 36740: a1 = sp + 0x7ff\n 36744: a1 = a1 + 0x3a1\n 36748: a0 = a0 + a1\n 36751: a1 = u8 [a0 + 0x11]\n 36754: a2 = u8 [a0 + 0x10]\n 36757: a3 = u8 [a0 + 0x12]\n 36760: a4 = u8 [a0 + 0x13]\n 36763: a1 = a1 << 0x8\n 36766: a1 = a1 | a2\n 36769: a3 = a3 << 0x10\n 36772: a4 = a4 << 0x18\n 36775: a3 = a3 | a4\n 36778: a1 = a1 | a3\n 36781: a2 = u8 [a0 + 0x15]\n 36784: a3 = u8 [a0 + 0x14]\n 36787: a4 = u8 [a0 + 0x16]\n 36790: a5 = u8 [a0 + 0x17]\n 36793: a2 = a2 << 0x8\n 36796: a2 = a2 | a3\n 36799: a4 = a4 << 0x10\n 36802: a5 = a5 << 0x18\n 36805: a4 = a4 | a5\n 36808: a2 = a2 | a4\n 36811: a2 = a2 << 0x20\n 36814: ra = a2 | a1\n 36817: t1 = s1 & 0x7\n 36820: t0 = ra >> t1\n 36823: a2 = u8 [a0 + 0x19]\n 36826: a3 = u8 [a0 + 0x18]\n 36829: a5 = u8 [a0 + 0x1a]\n 36832: a4 = u8 [a0 + 0x1b]\n 36835: a2 = a2 << 0x8\n 36838: a2 = a2 | a3\n 36841: a5 = a5 << 0x10\n 36844: a4 = a4 << 0x18\n 36847: a4 = a4 | a5\n 36850: a2 = a2 | a4\n 36853: a3 = u8 [a0 + 0x1d]\n 36856: a4 = u8 [a0 + 0x1c]\n 36859: a5 = u8 [a0 + 0x1e]\n 36862: s1 = u8 [a0 + 0x1f]\n 36865: a3 = a3 << 0x8\n 36868: a3 = a3 | a4\n 36871: a5 = a5 << 0x10\n 36874: s1 = s1 << 0x18\n 36877: a5 = a5 | s1\n 36880: a3 = a3 | a5\n 36883: a3 = a3 << 0x20\n 36886: t2 = a3 | a2\n 36889: a4 = t2 << 0x1\n 36892: a2 = t1 ^ 0x3f\n 36895: a4 = a4 << a2\n 36898: t0 = t0 | a4\n 36901: a4 = u8 [a0 + 0x9]\n 36904: a5 = u8 [a0 + 0x8]\n 36907: s1 = u8 [a0 + 0xa]\n 36910: a3 = u8 [a0 + 0xb]\n 36913: a4 = a4 << 0x8\n 36916: a4 = a4 | a5\n 36919: s1 = s1 << 0x10\n 36922: a3 = a3 << 0x18\n 36925: a3 = a3 | s1\n 36928: a3 = a3 | a4\n 36931: a4 = u8 [a0 + 0xd]\n 36934: a5 = u8 [a0 + 0xc]\n 36937: s1 = u8 [a0 + 0xe]\n 36940: a1 = u8 [a0 + 0xf]\n 36943: a4 = a4 << 0x8\n 36946: a4 = a4 | a5\n 36949: s1 = s1 << 0x10\n 36952: a1 = a1 << 0x18\n 36955: a1 = a1 | s1\n 36958: a1 = a1 | a4\n 36961: a1 = a1 << 0x20\n 36964: s1 = a1 | a3\n 36967: a1 = s1 >> t1\n 36970: ra = ra << 0x1\n 36973: a3 = t1 ^ 0xffffffffffffffff\n 36976: a4 = ra << a3\n 36979: a4 = a4 | a1\n 36982: a1 = u8 [a0 + 0x1]\n 36985: a3 = u8 [a0]\n 36987: a5 = u8 [a0 + 0x2]\n 36990: ra = u8 [a0 + 0x3]\n 36993: a1 = a1 << 0x8\n 36996: a1 = a1 | a3\n 36999: a5 = a5 << 0x10\n 37002: ra = ra << 0x18\n 37005: a3 = ra | a5\n 37008: ra = a3 | a1\n 37011: a3 = u8 [a0 + 0x5]\n 37014: a5 = u8 [a0 + 0x4]\n 37017: a1 = u8 [a0 + 0x6]\n 37020: a0 = u8 [a0 + 0x7]\n 37023: a3 = a3 << 0x8\n 37026: a3 = a3 | a5\n 37029: a1 = a1 << 0x10\n 37032: a0 = a0 << 0x18\n 37035: a0 = a0 | a1\n 37038: a0 = a0 | a3\n 37041: a0 = a0 << 0x20\n 37044: a0 = a0 | ra\n 37047: a0 = a0 >> t1\n 37050: s1 = s1 << 0x1\n 37053: a1 = s1 << a2\n 37056: ra = a0 | a1\n 37059: t1 = t2 >> t1\n 37062: a1 = u64 [sp + 0x3b8]\n 37066: a0 = a1 <u 0x1\n 37069: a2 = u64 [sp + 0x3b0]\n 37073: a0 = a2 - a0\n 37076: u64 [sp + 0x358] = a0\n 37080: a0 = a1 | a2\n 37083: a0 = a0 >u 0\n 37085: a0 = a0 + 0xffffffffffffffff\n 37088: u64 [sp + 0x350] = a0\n 37092: a1 = a1 + 0xffffffffffffffff\n 37095: u64 [sp + 0x348] = a1\n 37099: fallthrough\n      : @210 (gas: 87)\n 37100: a3 = ra >> 0x3f\n 37103: a5 = a4 << 0x1\n 37106: a3 = a3 | a5\n 37109: ra = ra << 0x1\n 37112: s1 = u64 [sp + 0x3a0]\n 37116: a5 = s1 >> 0x3f\n 37119: ra = ra | a5\n 37122: a1 = u64 [sp + 0x358]\n 37126: a0 = a1 ^ a3\n 37129: a1 = a1 <u a3\n 37132: a2 = u64 [sp + 0x348]\n 37136: a5 = a2 <u ra\n 37139: a5 = a1 if a0 != 0\n 37142: t1 = t1 << 0x1\n 37145: a0 = t0 >> 0x3f\n 37148: t1 = t1 | a0\n 37151: a4 = a4 >> 0x3f\n 37154: t0 = t0 << 0x1\n 37157: a4 = t0 | a4\n 37160: a0 = s1 << 0x1\n 37163: a1 = u64 [sp + 0x398]\n 37167: a2 = a1 >> 0x3f\n 37170: t0 = a0 | a2\n 37173: a2 = a1 << 0x1\n 37176: a0 = u64 [sp + 0x390]\n 37180: a1 = a0 >> 0x3f\n 37183: a1 = a1 | a2\n 37186: a2 = a0 << 0x1\n 37189: s1 = u64 [sp + 0x368]\n 37193: a0 = s1 >> 0x3f\n 37196: a0 = a0 | a2\n 37199: a2 = s1 << 0x1\n 37202: s1 = u64 [sp + 0x370]\n 37206: a2 = a2 | s1\n 37209: u64 [sp + 0x368] = a2\n 37213: a2 = u64 [sp + 0x360]\n 37217: a0 = a0 | a2\n 37220: u64 [sp + 0x390] = a0\n 37224: a1 = a1 | a2\n 37227: u64 [sp + 0x398] = a1\n 37231: a0 = a2 | t0\n 37234: u64 [sp + 0x3a0] = a0\n 37238: a2 = u64 [sp + 0x350]\n 37242: a0 = a2 - a4\n 37245: a0 = a0 <u a5\n 37248: a1 = a2 <u a4\n 37251: a2 = a2 - t1\n 37254: a2 = a2 - a1\n 37257: a2 = a2 - a0\n 37260: a5 = a2 >>a 0x3f\n 37263: a0 = u64 [sp + 0x3b8]\n 37267: a0 = a0 & a5\n 37270: a1 = u64 [sp + 0x3b0]\n 37274: a1 = a1 & a5\n 37277: t0 = a3 ^ a1\n 37280: s1 = a3 <u a1\n 37283: a2 = ra <u a0\n 37286: s1 = a2 if t0 == 0\n 37289: t0 = a4 - s1\n 37292: a4 = a4 <u s1\n 37295: t1 = t1 - a4\n 37298: a3 = a3 - a1\n 37301: a4 = a3 - a2\n 37304: ra = ra - a0\n 37307: a3 = u64 [sp + 0x3a8]\n 37311: s1 = u64 [sp + 0x388]\n 37315: a0 = a3 | s1\n 37318: a0 = a0 <u 0x1\n 37321: a2 = u64 [sp + 0x378]\n 37325: a1 = a2 <u a0\n 37328: a0 = a2 - a0\n 37331: a2 = a3 <u 0x1\n 37334: s1 = s1 - a2\n 37337: a2 = u64 [sp + 0x380]\n 37341: a2 = a2 - a1\n 37344: a3 = a3 + 0xffffffffffffffff\n 37347: u64 [sp + 0x388] = s1\n 37351: u64 [sp + 0x380] = a2\n 37355: a1 = s1 | a2\n 37358: u64 [sp + 0x3a8] = a3\n 37362: a2 = a3 | a0\n 37365: a1 = a1 | a2\n 37368: a5 = a5 & 0x1\n 37371: u64 [sp + 0x370] = a5\n 37375: u64 [sp + 0x378] = a0\n 37379: u64 [sp + 864] = 0\n 37383: jump @210 if a1 != 0\n      : @211 (gas: 1)\n 37387: jump @243\n      : @212 (gas: 12)\n 37390: a4 = u64 [sp + 0x330]\n 37394: a0 = a4 >u 0\n 37396: a3 = u64 [sp + 0x328]\n 37400: a1 = a3 <u 0x100\n 37404: a1 = a1 ^ 0x1\n 37407: a1 = a0 if a4 != 0\n 37410: a2 = u64 [sp + 0x320]\n 37414: a2 = a2 | a1\n 37417: a0 = a2 + 0xffffffffffffffff\n 37420: a1 = a2 >u 0\n 37422: a1 = a1 + 0xffffffffffffffff\n 37425: jump @214 if a2 == 0\n      : @213 (gas: 1)\n 37428: jump @241\n      : @214 (gas: 6)\n 37431: a2 = a3 ^ 0xff\n 37435: a3 = a2 | a4\n 37438: t1 = a1\n 37440: a5 = a1\n 37442: t2 = u64 [sp + 0x3d8]\n 37446: jump @216 if a3 != 0\n      : @215 (gas: 1)\n 37449: jump @256\n      : @216 (gas: 200)\n 37452: a1 = u64 [sp + 0x328]\n 37456: t1 = 0xff - a1\n 37460: ra = sp + 0x7ff\n 37464: ra = ra + 0x360\n 37468: u8 [ra + 353] = 0xffffffffffffffff\n 37473: u8 [ra + 352] = 0\n 37477: u8 [ra + 351] = 0\n 37481: u8 [ra + 350] = 0\n 37485: u8 [ra + 349] = 0\n 37489: u8 [ra + 348] = 0\n 37493: u8 [ra + 347] = 0\n 37497: u8 [ra + 346] = 0\n 37501: u8 [ra + 345] = 0\n 37505: u8 [ra + 344] = 0\n 37509: u8 [ra + 343] = 0\n 37513: u8 [ra + 342] = 0\n 37517: u8 [ra + 341] = 0\n 37521: u8 [ra + 340] = 0\n 37525: u8 [ra + 339] = 0\n 37529: u8 [ra + 338] = 0\n 37533: u8 [ra + 337] = 0\n 37537: u8 [ra + 336] = 0\n 37541: u8 [ra + 335] = 0\n 37545: u8 [ra + 334] = 0\n 37549: u8 [ra + 333] = 0\n 37553: u8 [ra + 332] = 0\n 37557: u8 [ra + 331] = 0\n 37561: u8 [ra + 330] = 0\n 37565: u8 [ra + 329] = 0\n 37569: u8 [ra + 328] = 0\n 37573: u8 [ra + 327] = 0\n 37577: u8 [ra + 326] = 0\n 37581: u8 [ra + 325] = 0\n 37585: u8 [ra + 324] = 0\n 37589: u8 [ra + 323] = 0\n 37593: u8 [ra + 322] = 0\n 37597: u8 [ra + 321] = 0\n 37601: u8 [ra + 361] = 0xffffffffffffffff\n 37606: u8 [ra + 360] = 0xff\n 37612: u8 [ra + 359] = 0xffff\n 37619: u8 [ra + 358] = 0xffffff\n 37627: a4 = 0xffffffff\n 37637: u8 [ra + 0x165] = a4\n 37641: a5 = 0xffffffffff\n 37651: u8 [ra + 0x164] = a5\n 37655: a0 = 0xffffffffffff\n 37665: u8 [ra + 0x163] = a0\n 37669: t0 = 0xffffffffffffff\n 37679: u8 [ra + 0x162] = t0\n 37683: u8 [ra + 369] = 0xffffffffffffffff\n 37688: u8 [ra + 368] = 0xff\n 37694: u8 [ra + 367] = 0xffff\n 37701: u8 [ra + 366] = 0xffffff\n 37709: u8 [ra + 0x16d] = a4\n 37713: u8 [ra + 0x16c] = a5\n 37717: u8 [ra + 0x16b] = a0\n 37721: u8 [ra + 0x16a] = t0\n 37725: u8 [ra + 377] = 0xffffffffffffffff\n 37730: u8 [ra + 376] = 0xff\n 37736: u8 [ra + 375] = 0xffff\n 37743: u8 [ra + 374] = 0xffffff\n 37751: u8 [ra + 0x175] = a4\n 37755: u8 [ra + 0x174] = a5\n 37759: u8 [ra + 0x173] = a0\n 37763: u8 [ra + 0x172] = t0\n 37767: u64 [sp + 904] = 0xff\n 37773: u8 [ra + 384] = 0xff\n 37779: u64 [sp + 872] = 0xffff\n 37786: u8 [ra + 383] = 0xffff\n 37793: u64 [sp + 864] = 0xffffff\n 37801: u8 [ra + 382] = 0xffffff\n 37809: u64 [sp + 0x358] = a4\n 37813: u8 [ra + 0x17d] = a4\n 37817: u64 [sp + 0x350] = a5\n 37821: u8 [ra + 0x17c] = a5\n 37825: u64 [sp + 0x348] = a0\n 37829: u8 [ra + 0x17b] = a0\n 37833: u8 [ra + 0x17a] = t0\n 37837: a2 = t1 << 0x38\n 37840: a2 = a2 >> 0x3b\n 37843: a0 = sp + 0x7ff\n 37847: a0 = a0 + 0x4c1\n 37851: a2 = a0 - a2\n 37854: a3 = u8 [a2 + 0x19]\n 37857: a4 = u8 [a2 + 0x18]\n 37860: a5 = u8 [a2 + 0x1a]\n 37863: s1 = u8 [a2 + 0x1b]\n 37866: a3 = a3 << 0x8\n 37869: a3 = a3 | a4\n 37872: a5 = a5 << 0x10\n 37875: s1 = s1 << 0x18\n 37878: a5 = a5 | s1\n 37881: a3 = a3 | a5\n 37884: a4 = u8 [a2 + 0x1d]\n 37887: a5 = u8 [a2 + 0x1c]\n 37890: s1 = u8 [a2 + 0x1e]\n 37893: a0 = u8 [a2 + 0x1f]\n 37896: a4 = a4 << 0x8\n 37899: a4 = a4 | a5\n 37902: s1 = s1 << 0x10\n 37905: a0 = a0 << 0x18\n 37908: a0 = a0 | s1\n 37911: a0 = a0 | a4\n 37914: a0 = a0 << 0x20\n 37917: a3 = a3 | a0\n 37920: a0 = u8 [a2 + 0x11]\n 37923: a4 = u8 [a2 + 0x10]\n 37926: a5 = u8 [a2 + 0x12]\n 37929: s1 = u8 [a2 + 0x13]\n 37932: a0 = a0 << 0x8\n 37935: a0 = a0 | a4\n 37938: a5 = a5 << 0x10\n 37941: s1 = s1 << 0x18\n 37944: a5 = a5 | s1\n 37947: a0 = a0 | a5\n 37950: a4 = u8 [a2 + 0x15]\n 37953: a5 = u8 [a2 + 0x14]\n 37956: s1 = u8 [a2 + 0x16]\n 37959: a1 = u8 [a2 + 0x17]\n 37962: a4 = a4 << 0x8\n 37965: a4 = a4 | a5\n 37968: s1 = s1 << 0x10\n 37971: a1 = a1 << 0x18\n 37974: a1 = a1 | s1\n 37977: a1 = a1 | a4\n 37980: a1 = a1 << 0x20\n 37983: t2 = a1 | a0\n 37986: a1 = t1 & 0x7\n 37989: a0 = a3 << a1\n 37992: a5 = t2 >> 0x1\n 37995: t1 = a1 ^ 0x3f\n 37998: a5 = a5 >> t1\n 38001: a0 = a0 | a5\n 38004: u64 [sp + 0x3a8] = a0\n 38008: a0 = u8 [a2 + 0x9]\n 38011: a5 = u8 [a2 + 0x8]\n 38014: s1 = u8 [a2 + 0xa]\n 38017: a3 = u8 [a2 + 0xb]\n 38020: a0 = a0 << 0x8\n 38023: a0 = a0 | a5\n 38026: s1 = s1 << 0x10\n 38029: a3 = a3 << 0x18\n 38032: a3 = a3 | s1\n 38035: a0 = a0 | a3\n 38038: a3 = u8 [a2 + 0xd]\n 38041: a5 = u8 [a2 + 0xc]\n 38044: s1 = u8 [a2 + 0xe]\n 38047: a4 = u8 [a2 + 0xf]\n 38050: a3 = a3 << 0x8\n 38053: a3 = a3 | a5\n 38056: s1 = s1 << 0x10\n 38059: a4 = a4 << 0x18\n 38062: a4 = a4 | s1\n 38065: a3 = a3 | a4\n 38068: a3 = a3 << 0x20\n 38071: a5 = a3 | a0\n 38074: a0 = a5 >> 0x1\n 38077: a3 = a1 ^ 0xffffffffffffffff\n 38080: a0 = a0 >> a3\n 38083: a3 = t2 << a1\n 38086: a0 = a0 | a3\n 38089: u64 [sp + 0x390] = a0\n 38093: a0 = u8 [a2 + 0x1]\n 38096: a3 = u8 [a2]\n 38098: a4 = u8 [a2 + 0x2]\n 38101: s1 = u8 [a2 + 0x3]\n 38104: a0 = a0 << 0x8\n 38107: a0 = a0 | a3\n 38110: a4 = a4 << 0x10\n 38113: s1 = s1 << 0x18\n 38116: a4 = a4 | s1\n 38119: a0 = a0 | a4\n 38122: a3 = u8 [a2 + 0x5]\n 38125: a4 = u8 [a2 + 0x4]\n 38128: s1 = u8 [a2 + 0x6]\n 38131: a2 = u8 [a2 + 0x7]\n 38134: a3 = a3 << 0x8\n 38137: a3 = a3 | a4\n 38140: s1 = s1 << 0x10\n 38143: a2 = a2 << 0x18\n 38146: a2 = a2 | s1\n 38149: a2 = a2 | a3\n 38152: a2 = a2 << 0x20\n 38155: a0 = a0 | a2\n 38158: a2 = a0 >> 0x1\n 38161: a2 = a2 >> t1\n 38164: a3 = a5 << a1\n 38167: a2 = a2 | a3\n 38170: u64 [sp + 0x3a0] = a2\n 38174: a4 = u64 [sp + 0x328]\n 38178: t1 = a4 + 0x1\n 38181: a2 = t1 <u 0x1\n 38184: a3 = u64 [sp + 0x330]\n 38188: s1 = a3 + a2\n 38191: a2 = t1 | s1\n 38194: a3 = a2 <u 0x1\n 38197: a2 = a2 | a3\n 38200: a0 = a0 << a1\n 38203: u64 [sp + 0x398] = a0\n 38207: jump @218 if a2 != 0\n      : @217 (gas: 1)\n 38210: jump @254\n      : @218 (gas: 206)\n 38213: u64 [sp + 720] = 0\n 38217: u64 [sp + 888] = 0\n 38221: u64 [sp + 896] = 0\n 38225: u8 [ra + 320] = 0\n 38229: u8 [ra + 319] = 0\n 38233: u8 [ra + 318] = 0\n 38237: u8 [ra + 317] = 0\n 38241: u8 [ra + 316] = 0\n 38245: u8 [ra + 315] = 0\n 38249: u8 [ra + 314] = 0\n 38253: u8 [ra + 313] = 0\n 38257: u8 [ra + 312] = 0\n 38261: u8 [ra + 311] = 0\n 38265: u8 [ra + 310] = 0\n 38269: u8 [ra + 309] = 0\n 38273: u8 [ra + 308] = 0\n 38277: u8 [ra + 307] = 0\n 38281: u8 [ra + 306] = 0\n 38285: u8 [ra + 305] = 0\n 38289: u8 [ra + 304] = 0\n 38293: u8 [ra + 303] = 0\n 38297: u8 [ra + 302] = 0\n 38301: u8 [ra + 301] = 0\n 38305: u8 [ra + 300] = 0\n 38309: u8 [ra + 299] = 0\n 38313: u8 [ra + 298] = 0\n 38317: u8 [ra + 297] = 0\n 38321: u8 [ra + 296] = 0\n 38325: u8 [ra + 295] = 0\n 38329: u8 [ra + 294] = 0\n 38333: u8 [ra + 293] = 0\n 38337: u8 [ra + 292] = 0\n 38341: u8 [ra + 291] = 0\n 38345: u8 [ra + 290] = 0\n 38349: u8 [ra + 289] = 0\n 38353: u8 [ra + 257] = 0xffffffffffffffff\n 38358: u8 [ra + 265] = 0xffffffffffffffff\n 38363: a1 = u64 [sp + 0x388]\n 38367: u8 [ra + 0x108] = a1\n 38371: a2 = u64 [sp + 0x368]\n 38375: u8 [ra + 0x107] = a2\n 38379: a5 = u64 [sp + 0x360]\n 38383: u8 [ra + 0x106] = a5\n 38387: u64 [sp + 0x370] = a3\n 38391: a3 = u64 [sp + 0x358]\n 38395: u8 [ra + 0x105] = a3\n 38399: t2 = u64 [sp + 0x350]\n 38403: u8 [ra + 0x104] = t2\n 38407: a4 = u64 [sp + 0x348]\n 38411: u8 [ra + 0x103] = a4\n 38415: u8 [ra + 0x102] = t0\n 38419: u8 [ra + 273] = 0xffffffffffffffff\n 38424: u8 [ra + 0x110] = a1\n 38428: u8 [ra + 0x10f] = a2\n 38432: u8 [ra + 0x10e] = a5\n 38436: u8 [ra + 0x10d] = a3\n 38440: u8 [ra + 0x10c] = t2\n 38444: u8 [ra + 0x10b] = a4\n 38448: u8 [ra + 0x10a] = t0\n 38452: u8 [ra + 281] = 0xffffffffffffffff\n 38457: u8 [ra + 0x118] = a1\n 38461: u8 [ra + 0x117] = a2\n 38465: u8 [ra + 0x116] = a5\n 38469: u8 [ra + 0x115] = a3\n 38473: u8 [ra + 0x114] = t2\n 38477: u8 [ra + 0x113] = a4\n 38481: u8 [ra + 0x112] = t0\n 38485: u8 [ra + 0x120] = a1\n 38489: u8 [ra + 0x11f] = a2\n 38493: u8 [ra + 0x11e] = a5\n 38497: u8 [ra + 0x11d] = a3\n 38501: u8 [ra + 0x11c] = t2\n 38505: u8 [ra + 0x11b] = a4\n 38509: u8 [ra + 0x11a] = t0\n 38513: a0 = t1 << 0x38\n 38516: a0 = a0 >> 0x3b\n 38519: a1 = sp + 0x7ff\n 38523: a1 = a1 + 0x461\n 38527: a1 = a1 + a0\n 38530: a0 = u8 [a1 + 0x11]\n 38533: a2 = u8 [a1 + 0x10]\n 38536: ra = s1\n 38538: a3 = u8 [a1 + 0x12]\n 38541: a4 = u8 [a1 + 0x13]\n 38544: a0 = a0 << 0x8\n 38547: a0 = a0 | a2\n 38550: a3 = a3 << 0x10\n 38553: a4 = a4 << 0x18\n 38556: a3 = a3 | a4\n 38559: a0 = a0 | a3\n 38562: a2 = u8 [a1 + 0x15]\n 38565: a3 = u8 [a1 + 0x14]\n 38568: a4 = u8 [a1 + 0x16]\n 38571: a5 = u8 [a1 + 0x17]\n 38574: a2 = a2 << 0x8\n 38577: a2 = a2 | a3\n 38580: a4 = a4 << 0x10\n 38583: a5 = a5 << 0x18\n 38586: a4 = a4 | a5\n 38589: a2 = a2 | a4\n 38592: a2 = a2 << 0x20\n 38595: t0 = a2 | a0\n 38598: u64 [sp + 0x388] = t1\n 38602: a3 = t1 & 0x7\n 38605: a0 = u8 [a1 + 0x19]\n 38608: a4 = u8 [a1 + 0x18]\n 38611: a5 = u8 [a1 + 0x1a]\n 38614: s1 = u8 [a1 + 0x1b]\n 38617: a0 = a0 << 0x8\n 38620: a0 = a0 | a4\n 38623: a5 = a5 << 0x10\n 38626: s1 = s1 << 0x18\n 38629: a4 = u8 [a1 + 0x1d]\n 38632: a5 = a5 | s1\n 38635: a0 = a0 | a5\n 38638: a5 = u8 [a1 + 0x1c]\n 38641: a4 = a4 << 0x8\n 38644: s1 = u8 [a1 + 0x1e]\n 38647: a2 = u8 [a1 + 0x1f]\n 38650: a4 = a4 | a5\n 38653: a5 = t0 >> a3\n 38656: s1 = s1 << 0x10\n 38659: a2 = a2 << 0x18\n 38662: a2 = a2 | s1\n 38665: a2 = a2 | a4\n 38668: a2 = a2 << 0x20\n 38671: t1 = a2 | a0\n 38674: a0 = t1 << 0x1\n 38677: a2 = a3 ^ 0x3f\n 38680: u64 [sp + 0x360] = a2\n 38684: a0 = a0 << a2\n 38687: a0 = a0 | a5\n 38690: u64 [sp + 0x368] = a0\n 38694: a0 = u8 [a1 + 0x9]\n 38697: a2 = u8 [a1 + 0x8]\n 38700: a4 = u8 [a1 + 0xa]\n 38703: a5 = u8 [a1 + 0xb]\n 38706: a0 = a0 << 0x8\n 38709: a0 = a0 | a2\n 38712: a4 = a4 << 0x10\n 38715: a5 = a5 << 0x18\n 38718: a4 = a4 | a5\n 38721: a0 = a0 | a4\n 38724: a2 = u8 [a1 + 0xd]\n 38727: a4 = u8 [a1 + 0xc]\n 38730: a5 = u8 [a1 + 0xe]\n 38733: s1 = u8 [a1 + 0xf]\n 38736: a2 = a2 << 0x8\n 38739: a2 = a2 | a4\n 38742: a5 = a5 << 0x10\n 38745: s1 = s1 << 0x18\n 38748: a5 = a5 | s1\n 38751: a2 = a2 | a5\n 38754: a2 = a2 << 0x20\n 38757: t2 = a2 | a0\n 38760: t0 = t0 << 0x1\n 38763: a0 = a3 ^ 0xffffffffffffffff\n 38766: a0 = t0 << a0\n 38769: a2 = t2 >> a3\n 38772: a2 = a2 | a0\n 38775: a0 = u8 [a1 + 0x1]\n 38778: a4 = u8 [a1]\n 38780: a5 = u8 [a1 + 0x2]\n 38783: s1 = u8 [a1 + 0x3]\n 38786: a0 = a0 << 0x8\n 38789: a0 = a0 | a4\n 38792: a5 = a5 << 0x10\n 38795: s1 = s1 << 0x18\n 38798: a5 = a5 | s1\n 38801: a0 = a0 | a5\n 38804: a4 = u8 [a1 + 0x5]\n 38807: a5 = u8 [a1 + 0x4]\n 38810: s1 = u8 [a1 + 0x6]\n 38813: a1 = u8 [a1 + 0x7]\n 38816: a4 = a4 << 0x8\n 38819: a4 = a4 | a5\n 38822: a5 = u64 [sp + 0x2d0]\n 38826: s1 = s1 << 0x10\n 38829: a1 = a1 << 0x18\n 38832: a1 = a1 | s1\n 38835: a1 = a1 | a4\n 38838: a1 = a1 << 0x20\n 38841: a0 = a0 | a1\n 38844: a0 = a0 >> a3\n 38847: t2 = t2 << 0x1\n 38850: a1 = u64 [sp + 0x360]\n 38854: s1 = t2 << a1\n 38857: s1 = s1 | a0\n 38860: t1 = t1 >> a3\n 38863: a3 = u64 [sp + 0x3c0]\n 38867: a0 = a3 <u 0x1\n 38870: a1 = u64 [sp + 0x3d0]\n 38874: a0 = a1 - a0\n 38877: u64 [sp + 0x318] = a0\n 38881: a0 = a3 | a1\n 38884: a0 = a0 <u 0x1\n 38887: a1 = u64 [sp + 0x3c8]\n 38891: a4 = a1 - a0\n 38894: u64 [sp + 0x310] = a4\n 38898: a0 = a1 <u a0\n 38901: a1 = u64 [sp + 0x3d8]\n 38905: a1 = a1 - a0\n 38908: u64 [sp + 0x308] = a1\n 38912: a3 = a3 + 0xffffffffffffffff\n 38915: u64 [sp + 0x300] = a3\n 38919: fallthrough\n      : @219 (gas: 102)\n 38920: u64 [sp + 0x360] = ra\n 38924: u64 [sp + 840] = 0\n 38928: a1 = s1 >> 0x3f\n 38931: ra = a5\n 38933: a5 = a2 << 0x1\n 38936: a1 = a1 | a5\n 38939: s1 = s1 << 0x1\n 38942: a3 = u64 [sp + 0x3a8]\n 38946: a5 = a3 >> 0x3f\n 38949: t2 = s1 | a5\n 38952: a0 = u64 [sp + 0x318]\n 38956: t0 = a0 ^ a1\n 38959: a4 = a0 <u a1\n 38962: a0 = u64 [sp + 0x300]\n 38966: a5 = a0 <u t2\n 38969: u64 [sp + 0x350] = t2\n 38973: a5 = a4 if t0 != 0\n 38976: t1 = t1 << 0x1\n 38979: a0 = u64 [sp + 0x368]\n 38983: a4 = a0 >> 0x3f\n 38986: t0 = t1 | a4\n 38989: u64 [sp + 0x358] = t0\n 38993: a2 = a2 >> 0x3f\n 38996: a0 = a0 << 0x1\n 38999: a2 = a2 | a0\n 39002: a0 = a3 << 0x1\n 39005: a3 = u64 [sp + 0x390]\n 39009: a4 = a3 >> 0x3f\n 39012: a0 = a0 | a4\n 39015: s1 = a3 << 0x1\n 39018: a4 = u64 [sp + 0x3a0]\n 39022: a3 = a4 >> 0x3f\n 39025: a3 = a3 | s1\n 39028: a4 = a4 << 0x1\n 39031: s1 = u64 [sp + 0x398]\n 39035: t1 = s1 >> 0x3f\n 39038: a4 = a4 | t1\n 39041: s1 = s1 << 0x1\n 39044: s1 = ra | s1\n 39047: u64 [sp + 0x398] = s1\n 39051: s1 = u64 [sp + 0x378]\n 39055: a4 = a4 | s1\n 39058: u64 [sp + 0x3a0] = a4\n 39062: a3 = a3 | s1\n 39065: u64 [sp + 0x390] = a3\n 39069: a0 = a0 | s1\n 39072: u64 [sp + 0x3a8] = a0\n 39076: a3 = u64 [sp + 0x310]\n 39080: a0 = a3 - a2\n 39083: a0 = a0 <u a5\n 39086: a3 = a3 <u a2\n 39089: a4 = u64 [sp + 0x308]\n 39093: a4 = a4 - t0\n 39096: a4 = a4 - a3\n 39099: a4 = a4 - a0\n 39102: a5 = a4 >>a 0x3f\n 39105: a4 = u64 [sp + 0x3c0]\n 39109: ra = a5 & a4\n 39112: s1 = u64 [sp + 0x3d0]\n 39116: s1 = s1 & a5\n 39119: t1 = a1 ^ s1\n 39122: a3 = a1 <u s1\n 39125: a0 = t2 <u ra\n 39128: a3 = a0 if t1 == 0\n 39131: a4 = u64 [sp + 0x3c8]\n 39135: t1 = a5 & a4\n 39138: t2 = a2 - t1\n 39141: t0 = t2 - a3\n 39144: u64 [sp + 0x368] = t0\n 39148: t2 = t2 <u a3\n 39151: a2 = a2 <u t1\n 39154: a3 = u64 [sp + 0x3d8]\n 39158: a3 = a3 & a5\n 39161: a4 = u64 [sp + 0x358]\n 39165: a3 = a4 - a3\n 39168: a3 = a3 - a2\n 39171: t1 = a3 - t2\n 39174: a1 = a1 - s1\n 39177: a2 = a1 - a0\n 39180: a0 = u64 [sp + 0x350]\n 39184: s1 = a0 - ra\n 39187: ra = u64 [sp + 0x360]\n 39191: a3 = u64 [sp + 0x388]\n 39195: a0 = a3 | ra\n 39198: a0 = a0 <u 0x1\n 39201: a4 = u64 [sp + 0x370]\n 39205: a1 = a4 <u a0\n 39208: a0 = a4 - a0\n 39211: a4 = a3 <u 0x1\n 39214: ra = ra - a4\n 39217: a4 = u64 [sp + 0x380]\n 39221: a4 = a4 - a1\n 39224: a3 = a3 + 0xffffffffffffffff\n 39227: u64 [sp + 0x380] = a4\n 39231: a1 = ra | a4\n 39234: u64 [sp + 0x388] = a3\n 39238: a4 = a3 | a0\n 39241: a1 = a1 | a4\n 39244: a5 = a5 & 0x1\n 39247: u64 [sp + 0x370] = a0\n 39251: u64 [sp + 888] = 0\n 39255: jump @219 if a1 != 0\n      : @220 (gas: 1)\n 39259: jump @255\n      : @221 (gas: 4)\n 39262: u64 [sp + 872] = 0\n 39266: u64 [sp + 840] = 0\n 39270: a3 = u64 [sp + 0x388]\n 39274: fallthrough\n      : @222 (gas: 20)\n 39275: a2 = u64 [sp + 0x398]\n 39279: a0 = a2 >> 0x3f\n 39282: a1 = u64 [sp + 0x3a0]\n 39286: a1 = a1 << 0x1\n 39289: a0 = a0 | a1\n 39292: a1 = a3 >> 0x3f\n 39295: a2 = a2 << 0x1\n 39298: a1 = a1 | a2\n 39301: a5 = u64 [sp + 0x390]\n 39305: a2 = a5 >> 0x3f\n 39308: a3 = a3 << 0x1\n 39311: a5 = a5 << 0x1\n 39314: a4 = u64 [sp + 0x368]\n 39318: a5 = a5 | a4\n 39321: a4 = u64 [sp + 0x348]\n 39325: a2 = a2 | a4\n 39328: a2 = a2 | a3\n 39331: a1 = a1 | a4\n 39334: a3 = a4 | a0\n 39337: fallthrough\n      : @223 (gas: 65)\n 39338: u64 [sp + 0x3a8] = a3\n 39342: t1 = u64 [sp + 0x3c0]\n 39346: a0 = t1 mulhu a5\n 39349: ra = u64 [sp + 0x3d0]\n 39353: a3 = ra * a5\n 39356: a0 = a0 + a3\n 39359: a3 = a0 <u a3\n 39362: a4 = ra mulhu a5\n 39365: a3 = a3 + a4\n 39368: a4 = t1 * a2\n 39371: t2 = a4 + a0\n 39374: a4 = t2 <u a4\n 39377: s1 = t1 mulhu a2\n 39380: a4 = a4 + s1\n 39383: a4 = a4 + a3\n 39386: a3 = a4 <u a3\n 39389: s1 = ra mulhu a2\n 39392: a3 = a3 + s1\n 39395: s1 = ra * a2\n 39398: a4 = a4 + s1\n 39401: s1 = a4 <u s1\n 39404: t0 = a3 + s1\n 39407: s1 = a1 * ra\n 39410: a3 = a1 mulhu t1\n 39413: a3 = a3 + s1\n 39416: a0 = u64 [sp + 0x3a8]\n 39420: s1 = a0 * t1\n 39423: ra = a3 + s1\n 39426: a3 = u64 [sp + 0x3c8]\n 39430: s1 = a5 mulhu a3\n 39433: a0 = u64 [sp + 0x3d8]\n 39437: a0 = a5 * a0\n 39440: a0 = a0 + s1\n 39443: a2 = a2 * a3\n 39446: a0 = a0 + a2\n 39449: a0 = a0 + ra\n 39452: a2 = a5 * a3\n 39455: a1 = a1 * t1\n 39458: a2 = a2 + a1\n 39461: a1 = a2 <u a1\n 39464: a0 = a0 + a1\n 39467: a2 = a2 + a4\n 39470: a1 = a2 <u a4\n 39473: a0 = a0 + t0\n 39476: a0 = a0 + a1\n 39479: a1 = t1 * a5\n 39482: a3 = u64 [sp + 0x258]\n 39486: t0 = a3 - a0\n 39489: a0 = u64 [sp + 0x2d0]\n 39493: s1 = a0 ^ t2\n 39496: a4 = a0 <u t2\n 39499: a3 = u64 [sp + 0x268]\n 39503: a5 = a3 <u a1\n 39506: a4 = a5 if s1 == 0\n 39509: s1 = u64 [sp + 0x260]\n 39513: t1 = s1 <u a2\n 39516: s1 = s1 - a2\n 39519: a2 = s1 <u a4\n 39522: a2 = a2 + t1\n 39525: t1 = t0 - a2\n 39528: t0 = s1 - a4\n 39531: a0 = a0 - t2\n 39534: a0 = a0 - a5\n 39537: s1 = a3 - a1\n 39540: fallthrough\n      : @224 (gas: 90)\n 39541: a1 = a0 * s1\n 39544: a2 = s1 mulhu s1\n 39547: a2 = a2 + a1\n 39550: a3 = a2 <u a1\n 39553: a4 = a0 mulhu s1\n 39556: a3 = a3 + a4\n 39559: ra = a1 + a2\n 39562: a1 = ra <u a1\n 39565: a1 = a1 + a4\n 39568: a1 = a1 + a3\n 39571: a2 = a0 * a0\n 39574: a4 = a2 + a1\n 39577: t2 = s1 * t0\n 39580: a5 = t2 + t2\n 39583: a1 = a1 <u a3\n 39586: a3 = a0 mulhu a0\n 39589: a1 = a1 + a3\n 39592: a3 = t1\n 39594: t1 = a4 + a5\n 39597: a2 = a4 <u a2\n 39600: a4 = t1 <u a4\n 39603: u64 [sp + 0x3a8] = a4\n 39607: a1 = a1 + a2\n 39610: a0 = a0 * t0\n 39613: a2 = s1 mulhu t0\n 39616: a4 = a2 + a0\n 39619: a3 = s1 * a3\n 39622: a4 = a4 + a3\n 39625: a0 = a0 + a2\n 39628: a0 = a0 + a3\n 39631: a0 = a0 + a4\n 39634: a2 = a5 <u t2\n 39637: a0 = a0 + a2\n 39640: a2 = u64 [sp + 0x3a8]\n 39644: a1 = a1 + a2\n 39647: t0 = a1 + a0\n 39650: a3 = s1 * s1\n 39653: u64 [sp + 0x2d0] = a3\n 39657: a1 = clz t0\n 39659: a0 = clz t1\n 39661: a0 = a0 + 0x40\n 39664: a0 = a1 if t0 != 0\n 39667: a1 = t1 | t0\n 39670: a2 = clz ra\n 39672: a3 = clz a3\n 39674: a3 = a3 + 0x40\n 39677: a3 = a2 if ra != 0\n 39680: a2 = a3 + 0x80\n 39684: a0 = a2 if a1 == 0\n 39687: a2 = a2 <u a3\n 39690: a2 = 0 if a1 != 0\n 39692: a5 = u64 [sp + 0x328]\n 39696: a1 = a5 <u a0\n 39699: a3 = u64 [sp + 0x330]\n 39703: a4 = a3 ^ a2\n 39706: s1 = a3 <u a2\n 39709: s1 = a1 if a4 == 0\n 39712: a4 = s1 <u 0x1\n 39715: t2 = a4 + 0xffffffffffffffff\n 39718: a4 = -s1\n 39720: a0 = a5 - a0\n 39723: a5 = a3 - a2\n 39726: a3 = a0\n 39728: a5 = a5 - a1\n 39731: a0 = a5 >u 0\n 39733: a1 = a3 <u 0x100\n 39737: a1 = a1 ^ 0x1\n 39740: a1 = a0 if a5 != 0\n 39743: a0 = a4 >u 0\n 39745: a2 = t2 >u 0\n 39747: a2 = a0 if t2 == 0\n 39750: a2 = a1 if s1 == 0\n 39753: a0 = ra | t0\n 39756: s1 = u64 [sp + 0x2d0]\n 39760: a1 = s1 | t1\n 39763: a0 = a0 | a1\n 39766: a0 = a0 <u 0x1\n 39769: a1 = u64 [sp + 0x320]\n 39773: a0 = a0 | a1\n 39776: u64 [sp + 0x258] = t0\n 39780: a0 = a0 | a2\n 39783: a1 = t0\n 39785: a1 = 0 if a0 != 0\n 39787: u64 [sp + 0x260] = t1\n 39791: t1 = 0 if a0 != 0\n 39793: u64 [sp + 0x268] = ra\n 39797: a2 = ra\n 39799: a2 = 0 if a0 != 0\n 39801: s1 = 0 if a0 != 0\n 39803: jump @232 if a0 != 0\n      : @225 (gas: 6)\n 39807: a0 = a3 ^ 0xff\n 39811: t0 = a4\n 39813: a0 = a0 | a4\n 39816: a4 = a5 | t2\n 39819: a0 = a0 | a4\n 39822: jump @232 if a0 == 0\n      : @226 (gas: 257)\n 39826: a1 = a3 + 0x1\n 39829: u64 [sp + 0x3a8] = a1\n 39833: a0 = a1 <u 0x1\n 39836: a0 = a0 + a5\n 39839: u64 [sp + 0x378] = a0\n 39843: a0 = a0 | a1\n 39846: a0 = a0 <u 0x1\n 39849: a0 = a0 + t0\n 39852: u64 [sp + 0x370] = a0\n 39856: a0 = a0 <u t0\n 39859: a0 = a0 + t2\n 39862: u64 [sp + 0x380] = a0\n 39866: t0 = 0xff - a3\n 39870: a0 = u64 [sp + 0x2d0]\n 39874: u8 [sp + 0x640] = a0\n 39878: u8 [sp + 1599] = 0\n 39882: u8 [sp + 1598] = 0\n 39886: u8 [sp + 1597] = 0\n 39890: u8 [sp + 1596] = 0\n 39894: u8 [sp + 1595] = 0\n 39898: u8 [sp + 1594] = 0\n 39902: u8 [sp + 1593] = 0\n 39906: u8 [sp + 1592] = 0\n 39910: u8 [sp + 1591] = 0\n 39914: u8 [sp + 1590] = 0\n 39918: u8 [sp + 1589] = 0\n 39922: u8 [sp + 1588] = 0\n 39926: u8 [sp + 1587] = 0\n 39930: u8 [sp + 1586] = 0\n 39934: u8 [sp + 1585] = 0\n 39938: u8 [sp + 1584] = 0\n 39942: u8 [sp + 1583] = 0\n 39946: u8 [sp + 1582] = 0\n 39950: u8 [sp + 1581] = 0\n 39954: u8 [sp + 1580] = 0\n 39958: u8 [sp + 1579] = 0\n 39962: u8 [sp + 1578] = 0\n 39966: u8 [sp + 1577] = 0\n 39970: u8 [sp + 1576] = 0\n 39974: u8 [sp + 1575] = 0\n 39978: u8 [sp + 1574] = 0\n 39982: u8 [sp + 1573] = 0\n 39986: u8 [sp + 1572] = 0\n 39990: u8 [sp + 1571] = 0\n 39994: u8 [sp + 1570] = 0\n 39998: u8 [sp + 1569] = 0\n 40002: u8 [sp + 1568] = 0\n 40006: a1 = u64 [sp + 0x268]\n 40010: u8 [sp + 0x648] = a1\n 40014: a2 = a0 >> 0x38\n 40017: u64 [sp + 0x220] = a2\n 40021: u8 [sp + 0x647] = a2\n 40025: a2 = a0 >> 0x30\n 40028: u64 [sp + 0x218] = a2\n 40032: u8 [sp + 0x646] = a2\n 40036: a2 = a0 >> 0x28\n 40039: u64 [sp + 0x210] = a2\n 40043: u8 [sp + 0x645] = a2\n 40047: a2 = a0 >> 0x20\n 40050: u64 [sp + 0x208] = a2\n 40054: u8 [sp + 0x644] = a2\n 40058: a2 = a0 >> 0x18\n 40061: u64 [sp + 0x1d0] = a2\n 40065: u8 [sp + 0x643] = a2\n 40069: a2 = a0 >> 0x10\n 40072: u64 [sp + 0x1c8] = a2\n 40076: u8 [sp + 0x642] = a2\n 40080: a0 = a0 >> 0x8\n 40083: u64 [sp + 0x1c0] = a0\n 40087: u8 [sp + 0x641] = a0\n 40091: ra = u64 [sp + 0x260]\n 40095: u8 [sp + 0x650] = ra\n 40099: a0 = a1 >> 0x38\n 40102: u64 [sp + 0x1b8] = a0\n 40106: u8 [sp + 0x64f] = a0\n 40110: a0 = a1 >> 0x30\n 40113: u64 [sp + 0x1b0] = a0\n 40117: u8 [sp + 0x64e] = a0\n 40121: a0 = a1 >> 0x28\n 40124: u64 [sp + 0x1a8] = a0\n 40128: u8 [sp + 0x64d] = a0\n 40132: a0 = a1 >> 0x20\n 40135: u64 [sp + 0x1a0] = a0\n 40139: u8 [sp + 0x64c] = a0\n 40143: a0 = a1 >> 0x18\n 40146: u64 [sp + 0x198] = a0\n 40150: u8 [sp + 0x64b] = a0\n 40154: a0 = a1 >> 0x10\n 40157: u64 [sp + 0x190] = a0\n 40161: u8 [sp + 0x64a] = a0\n 40165: a1 = a1 >> 0x8\n 40168: u64 [sp + 0x188] = a1\n 40172: u8 [sp + 0x649] = a1\n 40176: t2 = u64 [sp + 0x258]\n 40180: u8 [sp + 0x658] = t2\n 40184: a0 = ra >> 0x38\n 40187: u64 [sp + 0x180] = a0\n 40191: u8 [sp + 0x657] = a0\n 40195: a0 = ra >> 0x30\n 40198: u64 [sp + 0x178] = a0\n 40202: u8 [sp + 0x656] = a0\n 40206: a0 = ra >> 0x28\n 40209: u64 [sp + 0x170] = a0\n 40213: u8 [sp + 0x655] = a0\n 40217: a0 = ra >> 0x20\n 40220: u64 [sp + 0x168] = a0\n 40224: u8 [sp + 0x654] = a0\n 40228: a0 = ra >> 0x18\n 40231: u64 [sp + 0x160] = a0\n 40235: u8 [sp + 0x653] = a0\n 40239: a0 = ra >> 0x10\n 40242: u64 [sp + 0x358] = a0\n 40246: u8 [sp + 0x652] = a0\n 40250: a0 = ra >> 0x8\n 40253: u64 [sp + 0x350] = a0\n 40257: u8 [sp + 0x651] = a0\n 40261: a0 = t2 >> 0x38\n 40264: u64 [sp + 0x348] = a0\n 40268: u8 [sp + 0x65f] = a0\n 40272: a0 = t2 >> 0x30\n 40275: u64 [sp + 0x318] = a0\n 40279: u8 [sp + 0x65e] = a0\n 40283: a0 = t2 >> 0x28\n 40286: u64 [sp + 0x310] = a0\n 40290: u8 [sp + 0x65d] = a0\n 40294: a0 = t2 >> 0x20\n 40297: u64 [sp + 0x308] = a0\n 40301: u8 [sp + 0x65c] = a0\n 40305: a0 = t2 >> 0x18\n 40308: u64 [sp + 0x300] = a0\n 40312: u8 [sp + 0x65b] = a0\n 40316: a0 = t2 >> 0x10\n 40319: u64 [sp + 0x250] = a0\n 40323: u8 [sp + 0x65a] = a0\n 40327: a0 = t2 >> 0x8\n 40330: u64 [sp + 0x248] = a0\n 40334: u8 [sp + 0x659] = a0\n 40338: a0 = t0 << 0x38\n 40341: a0 = a0 >> 0x3b\n 40344: a2 = sp + 0x640\n 40348: a2 = a2 - a0\n 40351: a0 = u8 [a2 + 0x19]\n 40354: a3 = u8 [a2 + 0x18]\n 40357: a4 = u8 [a2 + 0x1a]\n 40360: a5 = u8 [a2 + 0x1b]\n 40363: a0 = a0 << 0x8\n 40366: a0 = a0 | a3\n 40369: a4 = a4 << 0x10\n 40372: a5 = a5 << 0x18\n 40375: a4 = a4 | a5\n 40378: a0 = a0 | a4\n 40381: a3 = u8 [a2 + 0x1d]\n 40384: a4 = u8 [a2 + 0x1c]\n 40387: a5 = u8 [a2 + 0x1e]\n 40390: s1 = u8 [a2 + 0x1f]\n 40393: a3 = a3 << 0x8\n 40396: a3 = a3 | a4\n 40399: a5 = a5 << 0x10\n 40402: s1 = s1 << 0x18\n 40405: a5 = a5 | s1\n 40408: a3 = a3 | a5\n 40411: a3 = a3 << 0x20\n 40414: a3 = a3 | a0\n 40417: a0 = u8 [a2 + 0x11]\n 40420: a4 = u8 [a2 + 0x10]\n 40423: a5 = u8 [a2 + 0x12]\n 40426: s1 = u8 [a2 + 0x13]\n 40429: a0 = a0 << 0x8\n 40432: a0 = a0 | a4\n 40435: a5 = a5 << 0x10\n 40438: s1 = s1 << 0x18\n 40441: a5 = a5 | s1\n 40444: a0 = a0 | a5\n 40447: a4 = u8 [a2 + 0x15]\n 40450: a5 = u8 [a2 + 0x14]\n 40453: s1 = u8 [a2 + 0x16]\n 40456: a1 = u8 [a2 + 0x17]\n 40459: a4 = a4 << 0x8\n 40462: a4 = a4 | a5\n 40465: s1 = s1 << 0x10\n 40468: a1 = a1 << 0x18\n 40471: a1 = a1 | s1\n 40474: a1 = a1 | a4\n 40477: a1 = a1 << 0x20\n 40480: t1 = a1 | a0\n 40483: a1 = t0 & 0x7\n 40486: a0 = a3 << a1\n 40489: a5 = t1 >> 0x1\n 40492: t0 = a1 ^ 0x3f\n 40495: a5 = a5 >> t0\n 40498: a0 = a0 | a5\n 40501: u64 [sp + 0x3a0] = a0\n 40505: a0 = u8 [a2 + 0x9]\n 40508: a5 = u8 [a2 + 0x8]\n 40511: s1 = u8 [a2 + 0xa]\n 40514: a3 = u8 [a2 + 0xb]\n 40517: a0 = a0 << 0x8\n 40520: a0 = a0 | a5\n 40523: s1 = s1 << 0x10\n 40526: a3 = a3 << 0x18\n 40529: a3 = a3 | s1\n 40532: a0 = a0 | a3\n 40535: a3 = u8 [a2 + 0xd]\n 40538: a5 = u8 [a2 + 0xc]\n 40541: s1 = u8 [a2 + 0xe]\n 40544: a4 = u8 [a2 + 0xf]\n 40547: a3 = a3 << 0x8\n 40550: a3 = a3 | a5\n 40553: s1 = s1 << 0x10\n 40556: a4 = a4 << 0x18\n 40559: a4 = a4 | s1\n 40562: a3 = a3 | a4\n 40565: a3 = a3 << 0x20\n 40568: s1 = a3 | a0\n 40571: a0 = s1 >> 0x1\n 40574: a3 = a1 ^ 0xffffffffffffffff\n 40577: a0 = a0 >> a3\n 40580: a3 = t1 << a1\n 40583: a0 = a0 | a3\n 40586: u64 [sp + 0x398] = a0\n 40590: a0 = u8 [a2 + 0x1]\n 40593: a3 = u8 [a2]\n 40595: a4 = u8 [a2 + 0x2]\n 40598: a5 = u8 [a2 + 0x3]\n 40601: a0 = a0 << 0x8\n 40604: a0 = a0 | a3\n 40607: a4 = a4 << 0x10\n 40610: a5 = a5 << 0x18\n 40613: a4 = a4 | a5\n 40616: a0 = a0 | a4\n 40619: a3 = u8 [a2 + 0x5]\n 40622: a4 = u8 [a2 + 0x4]\n 40625: a5 = u8 [a2 + 0x6]\n 40628: a2 = u8 [a2 + 0x7]\n 40631: a3 = a3 << 0x8\n 40634: a3 = a3 | a4\n 40637: a4 = u64 [sp + 0x380]\n 40641: a5 = a5 << 0x10\n 40644: a2 = a2 << 0x18\n 40647: a2 = a2 | a5\n 40650: a5 = u64 [sp + 0x378]\n 40654: a2 = a2 | a3\n 40657: a2 = a2 << 0x20\n 40660: a0 = a0 | a2\n 40663: a2 = a0 >> 0x1\n 40666: a2 = a2 >> t0\n 40669: t0 = u64 [sp + 0x370]\n 40673: a3 = s1 << a1\n 40676: a2 = a2 | a3\n 40679: u64 [sp + 0x388] = a2\n 40683: a2 = a5 | a4\n 40686: a3 = u64 [sp + 0x3a8]\n 40690: a3 = a3 | t0\n 40693: a2 = a2 | a3\n 40696: a0 = a0 << a1\n 40699: u64 [sp + 0x390] = a0\n 40703: jump @230 if a2 == 0\n      : @227 (gas: 225)\n 40707: u64 [sp + 872] = 0\n 40711: u64 [sp + 864] = 0\n 40715: a0 = u64 [sp + 0x220]\n 40719: u8 [sp + 0x5e7] = a0\n 40723: a0 = u64 [sp + 0x218]\n 40727: u8 [sp + 0x5e6] = a0\n 40731: a0 = u64 [sp + 0x210]\n 40735: u8 [sp + 0x5e5] = a0\n 40739: a0 = u64 [sp + 0x208]\n 40743: u8 [sp + 0x5e4] = a0\n 40747: a0 = u64 [sp + 0x1d0]\n 40751: u8 [sp + 0x5e3] = a0\n 40755: a0 = u64 [sp + 0x1c8]\n 40759: u8 [sp + 0x5e2] = a0\n 40763: a0 = u64 [sp + 0x1c0]\n 40767: u8 [sp + 0x5e1] = a0\n 40771: a0 = u64 [sp + 0x1b8]\n 40775: u8 [sp + 0x5ef] = a0\n 40779: a0 = u64 [sp + 0x1b0]\n 40783: u8 [sp + 0x5ee] = a0\n 40787: a0 = u64 [sp + 0x1a8]\n 40791: u8 [sp + 0x5ed] = a0\n 40795: a0 = u64 [sp + 0x1a0]\n 40799: u8 [sp + 0x5ec] = a0\n 40803: a0 = u64 [sp + 0x198]\n 40807: u8 [sp + 0x5eb] = a0\n 40811: a0 = u64 [sp + 0x190]\n 40815: u8 [sp + 0x5ea] = a0\n 40819: a0 = u64 [sp + 0x188]\n 40823: u8 [sp + 0x5e9] = a0\n 40827: a0 = u64 [sp + 0x180]\n 40831: u8 [sp + 0x5f7] = a0\n 40835: a0 = u64 [sp + 0x178]\n 40839: u8 [sp + 0x5f6] = a0\n 40843: a0 = u64 [sp + 0x170]\n 40847: u8 [sp + 0x5f5] = a0\n 40851: a0 = u64 [sp + 0x168]\n 40855: u8 [sp + 0x5f4] = a0\n 40859: a0 = u64 [sp + 0x160]\n 40863: u8 [sp + 0x5f3] = a0\n 40867: u8 [sp + 1567] = 0\n 40871: u8 [sp + 1566] = 0\n 40875: u8 [sp + 1565] = 0\n 40879: u8 [sp + 1564] = 0\n 40883: u8 [sp + 1563] = 0\n 40887: u8 [sp + 1562] = 0\n 40891: u8 [sp + 1561] = 0\n 40895: u8 [sp + 1560] = 0\n 40899: u8 [sp + 1559] = 0\n 40903: u8 [sp + 1558] = 0\n 40907: u8 [sp + 1557] = 0\n 40911: u8 [sp + 1556] = 0\n 40915: u8 [sp + 1555] = 0\n 40919: u8 [sp + 1554] = 0\n 40923: u8 [sp + 1553] = 0\n 40927: u8 [sp + 1552] = 0\n 40931: u8 [sp + 1551] = 0\n 40935: u8 [sp + 1550] = 0\n 40939: u8 [sp + 1549] = 0\n 40943: u8 [sp + 1548] = 0\n 40947: u8 [sp + 1547] = 0\n 40951: u8 [sp + 1546] = 0\n 40955: u8 [sp + 1545] = 0\n 40959: u8 [sp + 1544] = 0\n 40963: u8 [sp + 1543] = 0\n 40967: u8 [sp + 1542] = 0\n 40971: u8 [sp + 1541] = 0\n 40975: u8 [sp + 1540] = 0\n 40979: u8 [sp + 1539] = 0\n 40983: u8 [sp + 1538] = 0\n 40987: u8 [sp + 1537] = 0\n 40991: u8 [sp + 1536] = 0\n 40995: a0 = u64 [sp + 0x2d0]\n 40999: u8 [sp + 0x5e0] = a0\n 41003: a0 = u64 [sp + 0x268]\n 41007: u8 [sp + 0x5e8] = a0\n 41011: u8 [sp + 0x5f0] = ra\n 41015: u8 [sp + 0x5f8] = t2\n 41019: a0 = u64 [sp + 0x358]\n 41023: u8 [sp + 0x5f2] = a0\n 41027: a0 = u64 [sp + 0x350]\n 41031: u8 [sp + 0x5f1] = a0\n 41035: a0 = u64 [sp + 0x348]\n 41039: u8 [sp + 0x5ff] = a0\n 41043: a0 = u64 [sp + 0x318]\n 41047: u8 [sp + 0x5fe] = a0\n 41051: a0 = u64 [sp + 0x310]\n 41055: u8 [sp + 0x5fd] = a0\n 41059: a0 = u64 [sp + 0x308]\n 41063: u8 [sp + 0x5fc] = a0\n 41067: a0 = u64 [sp + 0x300]\n 41071: u8 [sp + 0x5fb] = a0\n 41075: a0 = u64 [sp + 0x250]\n 41079: u8 [sp + 0x5fa] = a0\n 41083: a0 = u64 [sp + 0x248]\n 41087: u8 [sp + 0x5f9] = a0\n 41091: s1 = u64 [sp + 0x3a8]\n 41095: a0 = s1 << 0x38\n 41098: a0 = a0 >> 0x3b\n 41101: a1 = sp + 0x5e0\n 41105: a1 = a1 + a0\n 41108: a0 = u8 [a1 + 0x11]\n 41111: a2 = u8 [a1 + 0x10]\n 41114: a3 = u8 [a1 + 0x12]\n 41117: a4 = u8 [a1 + 0x13]\n 41120: a0 = a0 << 0x8\n 41123: a0 = a0 | a2\n 41126: a3 = a3 << 0x10\n 41129: a4 = a4 << 0x18\n 41132: a3 = a3 | a4\n 41135: a0 = a0 | a3\n 41138: a2 = u8 [a1 + 0x15]\n 41141: a3 = u8 [a1 + 0x14]\n 41144: a4 = u8 [a1 + 0x16]\n 41147: a5 = u8 [a1 + 0x17]\n 41150: a2 = a2 << 0x8\n 41153: a2 = a2 | a3\n 41156: a4 = a4 << 0x10\n 41159: a5 = a5 << 0x18\n 41162: a4 = a4 | a5\n 41165: a2 = a2 | a4\n 41168: a2 = a2 << 0x20\n 41171: t0 = a2 | a0\n 41174: a3 = s1 & 0x7\n 41177: t1 = t0 >> a3\n 41180: a0 = u8 [a1 + 0x19]\n 41183: a4 = u8 [a1 + 0x18]\n 41186: s1 = u8 [a1 + 0x1a]\n 41189: a2 = u8 [a1 + 0x1b]\n 41192: a0 = a0 << 0x8\n 41195: a0 = a0 | a4\n 41198: s1 = s1 << 0x10\n 41201: a2 = a2 << 0x18\n 41204: a2 = a2 | s1\n 41207: a0 = a0 | a2\n 41210: a2 = u8 [a1 + 0x1d]\n 41213: a4 = u8 [a1 + 0x1c]\n 41216: s1 = u8 [a1 + 0x1e]\n 41219: a5 = u8 [a1 + 0x1f]\n 41222: a2 = a2 << 0x8\n 41225: a2 = a2 | a4\n 41228: s1 = s1 << 0x10\n 41231: a5 = a5 << 0x18\n 41234: a5 = a5 | s1\n 41237: a2 = a2 | a5\n 41240: a2 = a2 << 0x20\n 41243: t2 = a2 | a0\n 41246: a0 = t2 << 0x1\n 41249: ra = a3 ^ 0x3f\n 41252: a0 = a0 << ra\n 41255: a0 = t1 | a0\n 41258: u64 [sp + 0x358] = a0\n 41262: a0 = u8 [a1 + 0x9]\n 41265: a2 = u8 [a1 + 0x8]\n 41268: a5 = u8 [a1 + 0xa]\n 41271: a4 = u8 [a1 + 0xb]\n 41274: a0 = a0 << 0x8\n 41277: a0 = a0 | a2\n 41280: a5 = a5 << 0x10\n 41283: a4 = a4 << 0x18\n 41286: a4 = a4 | a5\n 41289: a0 = a0 | a4\n 41292: a2 = u8 [a1 + 0xd]\n 41295: a4 = u8 [a1 + 0xc]\n 41298: a5 = u8 [a1 + 0xe]\n 41301: s1 = u8 [a1 + 0xf]\n 41304: a2 = a2 << 0x8\n 41307: a2 = a2 | a4\n 41310: a5 = a5 << 0x10\n 41313: s1 = s1 << 0x18\n 41316: a5 = a5 | s1\n 41319: a2 = a2 | a5\n 41322: a2 = a2 << 0x20\n 41325: t1 = a2 | a0\n 41328: a0 = t1 >> a3\n 41331: t0 = t0 << 0x1\n 41334: a2 = a3 ^ 0xffffffffffffffff\n 41337: a2 = t0 << a2\n 41340: a2 = a2 | a0\n 41343: a0 = u8 [a1 + 0x1]\n 41346: a4 = u8 [a1]\n 41348: s1 = u8 [a1 + 0x2]\n 41351: a5 = u8 [a1 + 0x3]\n 41354: a0 = a0 << 0x8\n 41357: a0 = a0 | a4\n 41360: s1 = s1 << 0x10\n 41363: a5 = a5 << 0x18\n 41366: a5 = a5 | s1\n 41369: a0 = a0 | a5\n 41372: a4 = u8 [a1 + 0x5]\n 41375: a5 = u8 [a1 + 0x4]\n 41378: s1 = u8 [a1 + 0x6]\n 41381: a1 = u8 [a1 + 0x7]\n 41384: a4 = a4 << 0x8\n 41387: a4 = a4 | a5\n 41390: s1 = s1 << 0x10\n 41393: a1 = a1 << 0x18\n 41396: a1 = a1 | s1\n 41399: s1 = u64 [sp + 0x368]\n 41403: a1 = a1 | a4\n 41406: a1 = a1 << 0x20\n 41409: a0 = a0 | a1\n 41412: a0 = a0 >> a3\n 41415: t1 = t1 << 0x1\n 41418: a1 = t1 << ra\n 41421: t0 = a0 | a1\n 41424: t1 = t2 >> a3\n 41427: a1 = u64 [sp + 0x3c0]\n 41431: a0 = a1 <u 0x1\n 41434: a3 = u64 [sp + 0x3d0]\n 41438: a0 = a3 - a0\n 41441: u64 [sp + 0x318] = a0\n 41445: a0 = a1 | a3\n 41448: a0 = a0 <u 0x1\n 41451: a3 = u64 [sp + 0x3c8]\n 41455: a4 = a3 - a0\n 41458: u64 [sp + 0x310] = a4\n 41462: a0 = a3 <u a0\n 41465: a3 = u64 [sp + 0x3d8]\n 41469: a3 = a3 - a0\n 41472: u64 [sp + 0x308] = a3\n 41476: a1 = a1 + 0xffffffffffffffff\n 41479: u64 [sp + 0x300] = a1\n 41483: a4 = u64 [sp + 0x3a0]\n 41487: fallthrough\n      : @228 (gas: 101)\n 41488: u64 [sp + 0x368] = s1\n 41492: u64 [sp + 840] = 0\n 41496: a3 = t0 >> 0x3f\n 41499: s1 = a2 << 0x1\n 41502: s1 = s1 | a3\n 41505: t0 = t0 << 0x1\n 41508: a3 = a4 >> 0x3f\n 41511: t2 = t0 | a3\n 41514: a1 = u64 [sp + 0x318]\n 41518: a0 = a1 ^ s1\n 41521: a1 = a1 <u s1\n 41524: a3 = u64 [sp + 0x300]\n 41528: a5 = a3 <u t2\n 41531: a5 = a1 if a0 != 0\n 41534: t1 = t1 << 0x1\n 41537: ra = u64 [sp + 0x358]\n 41541: a0 = ra >> 0x3f\n 41544: t0 = t1 | a0\n 41547: u64 [sp + 0x350] = t0\n 41551: a2 = a2 >> 0x3f\n 41554: ra = ra << 0x1\n 41557: t1 = ra | a2\n 41560: a0 = a4 << 0x1\n 41563: a1 = u64 [sp + 0x398]\n 41567: a4 = a1 >> 0x3f\n 41570: a0 = a0 | a4\n 41573: a4 = a1 << 0x1\n 41576: a2 = u64 [sp + 0x388]\n 41580: a1 = a2 >> 0x3f\n 41583: a1 = a1 | a4\n 41586: a4 = a2 << 0x1\n 41589: a2 = u64 [sp + 0x390]\n 41593: a3 = a2 >> 0x3f\n 41596: a3 = a3 | a4\n 41599: a4 = a2 << 0x1\n 41602: a2 = u64 [sp + 0x368]\n 41606: a2 = a2 | a4\n 41609: u64 [sp + 0x390] = a2\n 41613: a2 = u64 [sp + 0x360]\n 41617: a3 = a3 | a2\n 41620: u64 [sp + 0x388] = a3\n 41624: a1 = a1 | a2\n 41627: u64 [sp + 0x398] = a1\n 41631: a0 = a0 | a2\n 41634: u64 [sp + 0x3a0] = a0\n 41638: a1 = u64 [sp + 0x310]\n 41642: a0 = a1 - t1\n 41645: a0 = a0 <u a5\n 41648: a1 = a1 <u t1\n 41651: a2 = u64 [sp + 0x308]\n 41655: a3 = a2 - t0\n 41658: a3 = a3 - a1\n 41661: a3 = a3 - a0\n 41664: a5 = a3 >>a 0x3f\n 41667: a0 = u64 [sp + 0x3c0]\n 41671: t0 = a5 & a0\n 41674: a1 = u64 [sp + 0x3d0]\n 41678: a1 = a1 & a5\n 41681: a3 = s1 ^ a1\n 41684: a4 = s1 <u a1\n 41687: ra = t2 <u t0\n 41690: a4 = ra if a3 == 0\n 41693: a3 = u64 [sp + 0x3c8]\n 41697: a3 = a3 & a5\n 41700: a0 = t1 - a3\n 41703: a2 = a0 - a4\n 41706: u64 [sp + 0x358] = a2\n 41710: a2 = a0 <u a4\n 41713: a3 = t1 <u a3\n 41716: a4 = u64 [sp + 0x3d8]\n 41720: a4 = a4 & a5\n 41723: a0 = u64 [sp + 0x350]\n 41727: a4 = a0 - a4\n 41730: a4 = a4 - a3\n 41733: t1 = a4 - a2\n 41736: s1 = s1 - a1\n 41739: a2 = s1 - ra\n 41742: t0 = t2 - t0\n 41745: a4 = u64 [sp + 0x3a8]\n 41749: a1 = u64 [sp + 0x378]\n 41753: a0 = a4 | a1\n 41756: a0 = a0 <u 0x1\n 41759: a3 = u64 [sp + 0x370]\n 41763: s1 = a3 <u a0\n 41766: a0 = a3 - a0\n 41769: a3 = a4 <u 0x1\n 41772: a1 = a1 - a3\n 41775: a3 = u64 [sp + 0x380]\n 41779: a3 = a3 - s1\n 41782: a4 = a4 + 0xffffffffffffffff\n 41785: u64 [sp + 0x380] = a3\n 41789: u64 [sp + 0x378] = a1\n 41793: a1 = a1 | a3\n 41796: u64 [sp + 0x3a8] = a4\n 41800: a3 = a4 | a0\n 41803: a4 = u64 [sp + 0x3a0]\n 41807: a1 = a1 | a3\n 41810: s1 = a5 & 0x1\n 41813: u64 [sp + 0x370] = a0\n 41817: u64 [sp + 864] = 0\n 41821: jump @228 if a1 != 0\n      : @229 (gas: 1)\n 41825: jump @231\n      : @230 (gas: 4)\n 41827: s1 = 0\n 41829: u64 [sp + 840] = 0\n 41833: a4 = u64 [sp + 0x3a0]\n 41837: fallthrough\n      : @231 (gas: 19)\n 41838: a2 = u64 [sp + 0x398]\n 41842: a0 = a2 >> 0x3f\n 41845: a1 = a4 << 0x1\n 41848: a0 = a0 | a1\n 41851: a3 = u64 [sp + 0x388]\n 41855: a1 = a3 >> 0x3f\n 41858: a2 = a2 << 0x1\n 41861: a1 = a1 | a2\n 41864: a5 = u64 [sp + 0x390]\n 41868: a2 = a5 >> 0x3f\n 41871: a3 = a3 << 0x1\n 41874: a5 = a5 << 0x1\n 41877: s1 = s1 | a5\n 41880: a4 = u64 [sp + 0x348]\n 41884: a2 = a2 | a4\n 41887: a2 = a2 | a3\n 41890: t1 = a4 | a1\n 41893: a1 = a4 | a0\n 41896: fallthrough\n      : @232 (gas: 166)\n 41897: u64 [sp + 0x3a8] = a1\n 41901: t0 = u64 [sp + 0x3c0]\n 41905: a0 = t0 mulhu s1\n 41908: a1 = u64 [sp + 0x3d0]\n 41912: a3 = a1 * s1\n 41915: a0 = a0 + a3\n 41918: a3 = a0 <u a3\n 41921: a4 = a1 mulhu s1\n 41924: a3 = a3 + a4\n 41927: a5 = t0 * a2\n 41930: t2 = a5 + a0\n 41933: a0 = t2 <u a5\n 41936: a5 = t0 mulhu a2\n 41939: a0 = a0 + a5\n 41942: a0 = a0 + a3\n 41945: a3 = a0 <u a3\n 41948: a5 = a1 mulhu a2\n 41951: a3 = a3 + a5\n 41954: a5 = a1 * a2\n 41957: a0 = a0 + a5\n 41960: a5 = a0 <u a5\n 41963: ra = a3 + a5\n 41966: a5 = t1 * a1\n 41969: a3 = t1 mulhu t0\n 41972: a3 = a3 + a5\n 41975: a1 = u64 [sp + 0x3a8]\n 41979: a5 = a1 * t0\n 41982: a1 = a3 + a5\n 41985: a3 = u64 [sp + 0x3c8]\n 41989: a5 = s1 mulhu a3\n 41992: a4 = u64 [sp + 0x3d8]\n 41996: a4 = s1 * a4\n 41999: a4 = a4 + a5\n 42002: a2 = a2 * a3\n 42005: a2 = a2 + a4\n 42008: a2 = a2 + a1\n 42011: a1 = t1 * t0\n 42014: a3 = s1 * a3\n 42017: a3 = a3 + a1\n 42020: a1 = a3 <u a1\n 42023: a1 = a1 + a2\n 42026: ra = ra + a1\n 42029: a1 = a0 + a3\n 42032: a0 = a1 <u a0\n 42035: a0 = a0 + ra\n 42038: a2 = u64 [sp + 0x258]\n 42042: t1 = a2 - a0\n 42045: ra = t0 * s1\n 42048: a0 = u64 [sp + 0x268]\n 42052: a3 = a0 ^ t2\n 42055: a4 = a0 <u t2\n 42058: a2 = u64 [sp + 0x2d0]\n 42062: a5 = a2 <u ra\n 42065: a4 = a5 if a3 == 0\n 42068: a3 = u64 [sp + 0x260]\n 42072: t0 = a3 <u a1\n 42075: a3 = a3 - a1\n 42078: s1 = a3 <u a4\n 42081: a1 = t0 + s1\n 42084: s1 = t1 - a1\n 42087: a3 = a3 - a4\n 42090: a1 = a0 - t2\n 42093: t2 = a1 - a5\n 42096: t1 = a2 - ra\n 42099: a1 = u64 [sp + 0x2c0]\n 42103: a2 = a3 * a1\n 42106: a0 = u64 [sp + 0x2f0]\n 42110: a4 = a3 mulhu a0\n 42113: a2 = a2 + a4\n 42116: t0 = s1 * a0\n 42119: a4 = u64 [sp + 0x2f8]\n 42123: a5 = t1 mulhu a4\n 42126: s1 = u64 [sp + 0x2e8]\n 42130: s1 = t1 * s1\n 42133: a5 = a5 + s1\n 42136: s1 = t2 * a4\n 42139: a5 = a5 + s1\n 42142: a5 = a5 + a2\n 42145: a3 = a3 * a0\n 42148: a2 = t1 * a4\n 42151: a2 = a2 + a3\n 42154: a3 = a2 <u a3\n 42157: a3 = a3 + a5\n 42160: ra = a3 + t0\n 42163: a4 = a0 mulhu t1\n 42166: a5 = a1 * t1\n 42169: a4 = a4 + a5\n 42172: s1 = a0 * t2\n 42175: t0 = s1 + a4\n 42178: s1 = t0 <u s1\n 42181: a3 = a0 mulhu t2\n 42184: a3 = a3 + s1\n 42187: a4 = a4 <u a5\n 42190: a5 = a1 mulhu t1\n 42193: s1 = a5 + a4\n 42196: a4 = s1 + a3\n 42199: a5 = a1 * t2\n 42202: a3 = a5 + a4\n 42205: a5 = a3 <u a5\n 42208: a4 = a4 <u s1\n 42211: a1 = a1 mulhu t2\n 42214: a1 = a1 + a4\n 42217: a1 = a1 + a5\n 42220: t2 = a3 + a2\n 42223: a2 = t2 <u a3\n 42226: a1 = a1 + a2\n 42229: ra = ra + a1\n 42232: a3 = a0 * t1\n 42235: u64 [sp + 0x2c0] = a3\n 42239: a1 = clz ra\n 42241: a0 = clz t2\n 42243: a0 = a0 + 0x40\n 42246: a0 = a1 if ra != 0\n 42249: a1 = t2 | ra\n 42252: u64 [sp + 0x2d0] = t0\n 42256: a2 = clz t0\n 42258: a3 = clz a3\n 42260: a3 = a3 + 0x40\n 42263: a3 = a2 if t0 != 0\n 42266: a2 = a3 + 0x80\n 42270: a0 = a2 if a1 == 0\n 42273: a3 = a2 <u a3\n 42276: a3 = 0 if a1 != 0\n 42278: a5 = u64 [sp + 0x328]\n 42282: a1 = a5 <u a0\n 42285: a2 = u64 [sp + 0x330]\n 42289: a4 = a2 ^ a3\n 42292: s1 = a2 <u a3\n 42295: s1 = a1 if a4 == 0\n 42298: a4 = s1 <u 0x1\n 42301: a4 = a4 + 0xffffffffffffffff\n 42304: u64 [sp + 0x3a0] = a4\n 42308: t0 = -s1\n 42310: a4 = a5 - a0\n 42313: a5 = a2 - a3\n 42316: t1 = t2\n 42318: t2 = u64 [sp + 0x3a0]\n 42322: u64 [sp + 0x2e8] = t1\n 42326: a5 = a5 - a1\n 42329: a0 = a5 >u 0\n 42331: u64 [sp + 0x398] = a4\n 42335: a1 = a4 <u 0x100\n 42339: a1 = a1 ^ 0x1\n 42342: a1 = a0 if a5 != 0\n 42345: u64 [sp + 0x390] = t0\n 42349: a0 = t0 >u 0\n 42351: a3 = t2 >u 0\n 42353: a3 = a0 if t2 == 0\n 42356: a3 = a1 if s1 == 0\n 42359: a4 = u64 [sp + 0x2d0]\n 42363: a0 = a4 | ra\n 42366: s1 = u64 [sp + 0x2c0]\n 42370: a1 = s1 | t1\n 42373: a0 = a0 | a1\n 42376: a0 = a0 <u 0x1\n 42379: a1 = u64 [sp + 0x320]\n 42383: a0 = a0 | a1\n 42386: u64 [sp + 0x268] = ra\n 42390: a0 = a0 | a3\n 42393: a2 = ra\n 42395: a2 = 0 if a0 != 0\n 42397: t1 = 0 if a0 != 0\n 42399: a3 = a4\n 42401: a3 = 0 if a0 != 0\n 42403: s1 = 0 if a0 != 0\n 42405: jump @240 if a0 != 0\n      : @233 (gas: 7)\n 42409: t0 = u64 [sp + 0x398]\n 42413: a0 = t0 ^ 0xff\n 42417: ra = u64 [sp + 0x390]\n 42421: a0 = a0 | ra\n 42424: a4 = a5 | t2\n 42427: a0 = a0 | a4\n 42430: jump @240 if a0 == 0\n      : @234 (gas: 257)\n 42434: a1 = t0 + 0x1\n 42437: u64 [sp + 0x3a8] = a1\n 42441: a0 = a1 <u 0x1\n 42444: a0 = a0 + a5\n 42447: u64 [sp + 0x378] = a0\n 42451: a0 = a0 | a1\n 42454: a0 = a0 <u 0x1\n 42457: a0 = a0 + ra\n 42460: u64 [sp + 0x370] = a0\n 42464: a0 = a0 <u ra\n 42467: a0 = a0 + t2\n 42470: u64 [sp + 0x380] = a0\n 42474: t0 = 0xff - t0\n 42478: a0 = u64 [sp + 0x2c0]\n 42482: u8 [sp + 0x5c0] = a0\n 42486: u8 [sp + 1471] = 0\n 42490: u8 [sp + 1470] = 0\n 42494: u8 [sp + 1469] = 0\n 42498: u8 [sp + 1468] = 0\n 42502: u8 [sp + 1467] = 0\n 42506: u8 [sp + 1466] = 0\n 42510: u8 [sp + 1465] = 0\n 42514: u8 [sp + 1464] = 0\n 42518: u8 [sp + 1463] = 0\n 42522: u8 [sp + 1462] = 0\n 42526: u8 [sp + 1461] = 0\n 42530: u8 [sp + 1460] = 0\n 42534: u8 [sp + 1459] = 0\n 42538: u8 [sp + 1458] = 0\n 42542: u8 [sp + 1457] = 0\n 42546: u8 [sp + 1456] = 0\n 42550: u8 [sp + 1455] = 0\n 42554: u8 [sp + 1454] = 0\n 42558: u8 [sp + 1453] = 0\n 42562: u8 [sp + 1452] = 0\n 42566: u8 [sp + 1451] = 0\n 42570: u8 [sp + 1450] = 0\n 42574: u8 [sp + 1449] = 0\n 42578: u8 [sp + 1448] = 0\n 42582: u8 [sp + 1447] = 0\n 42586: u8 [sp + 1446] = 0\n 42590: u8 [sp + 1445] = 0\n 42594: u8 [sp + 1444] = 0\n 42598: u8 [sp + 1443] = 0\n 42602: u8 [sp + 1442] = 0\n 42606: u8 [sp + 1441] = 0\n 42610: u8 [sp + 1440] = 0\n 42614: a1 = u64 [sp + 0x2d0]\n 42618: u8 [sp + 0x5c8] = a1\n 42622: a2 = a0 >> 0x38\n 42625: u64 [sp + 0x260] = a2\n 42629: u8 [sp + 0x5c7] = a2\n 42633: a2 = a0 >> 0x30\n 42636: u64 [sp + 0x258] = a2\n 42640: u8 [sp + 0x5c6] = a2\n 42644: a2 = a0 >> 0x28\n 42647: u64 [sp + 0x250] = a2\n 42651: u8 [sp + 0x5c5] = a2\n 42655: a2 = a0 >> 0x20\n 42658: u64 [sp + 0x248] = a2\n 42662: u8 [sp + 0x5c4] = a2\n 42666: a2 = a0 >> 0x18\n 42669: u64 [sp + 0x220] = a2\n 42673: u8 [sp + 0x5c3] = a2\n 42677: a2 = a0 >> 0x10\n 42680: u64 [sp + 0x218] = a2\n 42684: u8 [sp + 0x5c2] = a2\n 42688: a0 = a0 >> 0x8\n 42691: u64 [sp + 0x210] = a0\n 42695: u8 [sp + 0x5c1] = a0\n 42699: ra = u64 [sp + 0x2e8]\n 42703: u8 [sp + 0x5d0] = ra\n 42707: a0 = a1 >> 0x38\n 42710: u64 [sp + 0x208] = a0\n 42714: u8 [sp + 0x5cf] = a0\n 42718: a0 = a1 >> 0x30\n 42721: u64 [sp + 0x1d0] = a0\n 42725: u8 [sp + 0x5ce] = a0\n 42729: a0 = a1 >> 0x28\n 42732: u64 [sp + 0x1c8] = a0\n 42736: u8 [sp + 0x5cd] = a0\n 42740: a0 = a1 >> 0x20\n 42743: u64 [sp + 0x1c0] = a0\n 42747: u8 [sp + 0x5cc] = a0\n 42751: a0 = a1 >> 0x18\n 42754: u64 [sp + 0x1b8] = a0\n 42758: u8 [sp + 0x5cb] = a0\n 42762: a0 = a1 >> 0x10\n 42765: u64 [sp + 0x1b0] = a0\n 42769: u8 [sp + 0x5ca] = a0\n 42773: a1 = a1 >> 0x8\n 42776: u64 [sp + 0x1a8] = a1\n 42780: u8 [sp + 0x5c9] = a1\n 42784: t2 = u64 [sp + 0x268]\n 42788: u8 [sp + 0x5d8] = t2\n 42792: a0 = ra >> 0x38\n 42795: u64 [sp + 0x1a0] = a0\n 42799: u8 [sp + 0x5d7] = a0\n 42803: a0 = ra >> 0x30\n 42806: u64 [sp + 0x198] = a0\n 42810: u8 [sp + 0x5d6] = a0\n 42814: a0 = ra >> 0x28\n 42817: u64 [sp + 0x190] = a0\n 42821: u8 [sp + 0x5d5] = a0\n 42825: a0 = ra >> 0x20\n 42828: u64 [sp + 0x188] = a0\n 42832: u8 [sp + 0x5d4] = a0\n 42836: a0 = ra >> 0x18\n 42839: u64 [sp + 0x180] = a0\n 42843: u8 [sp + 0x5d3] = a0\n 42847: a0 = ra >> 0x10\n 42850: u64 [sp + 0x358] = a0\n 42854: u8 [sp + 0x5d2] = a0\n 42858: a0 = ra >> 0x8\n 42861: u64 [sp + 0x350] = a0\n 42865: u8 [sp + 0x5d1] = a0\n 42869: a0 = t2 >> 0x38\n 42872: u64 [sp + 0x348] = a0\n 42876: u8 [sp + 0x5df] = a0\n 42880: a0 = t2 >> 0x30\n 42883: u64 [sp + 0x318] = a0\n 42887: u8 [sp + 0x5de] = a0\n 42891: a0 = t2 >> 0x28\n 42894: u64 [sp + 0x310] = a0\n 42898: u8 [sp + 0x5dd] = a0\n 42902: a0 = t2 >> 0x20\n 42905: u64 [sp + 0x308] = a0\n 42909: u8 [sp + 0x5dc] = a0\n 42913: a0 = t2 >> 0x18\n 42916: u64 [sp + 0x300] = a0\n 42920: u8 [sp + 0x5db] = a0\n 42924: a0 = t2 >> 0x10\n 42927: u64 [sp + 0x2f8] = a0\n 42931: u8 [sp + 0x5da] = a0\n 42935: a0 = t2 >> 0x8\n 42938: u64 [sp + 0x2f0] = a0\n 42942: u8 [sp + 0x5d9] = a0\n 42946: a0 = t0 << 0x38\n 42949: a0 = a0 >> 0x3b\n 42952: a3 = sp + 0x5c0\n 42956: a3 = a3 - a0\n 42959: a0 = u8 [a3 + 0x19]\n 42962: a2 = u8 [a3 + 0x18]\n 42965: a4 = u8 [a3 + 0x1a]\n 42968: a5 = u8 [a3 + 0x1b]\n 42971: a0 = a0 << 0x8\n 42974: a0 = a0 | a2\n 42977: a4 = a4 << 0x10\n 42980: a5 = a5 << 0x18\n 42983: a4 = a4 | a5\n 42986: a0 = a0 | a4\n 42989: a2 = u8 [a3 + 0x1d]\n 42992: a4 = u8 [a3 + 0x1c]\n 42995: a5 = u8 [a3 + 0x1e]\n 42998: s1 = u8 [a3 + 0x1f]\n 43001: a2 = a2 << 0x8\n 43004: a2 = a2 | a4\n 43007: a5 = a5 << 0x10\n 43010: s1 = s1 << 0x18\n 43013: a5 = a5 | s1\n 43016: a2 = a2 | a5\n 43019: a2 = a2 << 0x20\n 43022: a2 = a2 | a0\n 43025: a0 = u8 [a3 + 0x11]\n 43028: a4 = u8 [a3 + 0x10]\n 43031: a5 = u8 [a3 + 0x12]\n 43034: s1 = u8 [a3 + 0x13]\n 43037: a0 = a0 << 0x8\n 43040: a0 = a0 | a4\n 43043: a5 = a5 << 0x10\n 43046: s1 = s1 << 0x18\n 43049: a5 = a5 | s1\n 43052: a0 = a0 | a5\n 43055: a4 = u8 [a3 + 0x15]\n 43058: a5 = u8 [a3 + 0x14]\n 43061: s1 = u8 [a3 + 0x16]\n 43064: a1 = u8 [a3 + 0x17]\n 43067: a4 = a4 << 0x8\n 43070: a4 = a4 | a5\n 43073: s1 = s1 << 0x10\n 43076: a1 = a1 << 0x18\n 43079: a1 = a1 | s1\n 43082: a1 = a1 | a4\n 43085: a1 = a1 << 0x20\n 43088: t1 = a1 | a0\n 43091: a1 = t0 & 0x7\n 43094: a0 = a2 << a1\n 43097: a5 = t1 >> 0x1\n 43100: t0 = a1 ^ 0x3f\n 43103: a5 = a5 >> t0\n 43106: a0 = a0 | a5\n 43109: u64 [sp + 0x3a0] = a0\n 43113: a0 = u8 [a3 + 0x9]\n 43116: a5 = u8 [a3 + 0x8]\n 43119: s1 = u8 [a3 + 0xa]\n 43122: a2 = u8 [a3 + 0xb]\n 43125: a0 = a0 << 0x8\n 43128: a0 = a0 | a5\n 43131: s1 = s1 << 0x10\n 43134: a2 = a2 << 0x18\n 43137: a2 = a2 | s1\n 43140: a0 = a0 | a2\n 43143: a2 = u8 [a3 + 0xd]\n 43146: a5 = u8 [a3 + 0xc]\n 43149: s1 = u8 [a3 + 0xe]\n 43152: a4 = u8 [a3 + 0xf]\n 43155: a2 = a2 << 0x8\n 43158: a2 = a2 | a5\n 43161: s1 = s1 << 0x10\n 43164: a4 = a4 << 0x18\n 43167: a4 = a4 | s1\n 43170: a2 = a2 | a4\n 43173: a2 = a2 << 0x20\n 43176: s1 = a2 | a0\n 43179: a0 = s1 >> 0x1\n 43182: a2 = a1 ^ 0xffffffffffffffff\n 43185: a0 = a0 >> a2\n 43188: a2 = t1 << a1\n 43191: a0 = a0 | a2\n 43194: u64 [sp + 0x398] = a0\n 43198: a0 = u8 [a3 + 0x1]\n 43201: a2 = u8 [a3]\n 43203: a4 = u8 [a3 + 0x2]\n 43206: a5 = u8 [a3 + 0x3]\n 43209: a0 = a0 << 0x8\n 43212: a0 = a0 | a2\n 43215: a4 = a4 << 0x10\n 43218: a5 = a5 << 0x18\n 43221: a4 = a4 | a5\n 43224: a0 = a0 | a4\n 43227: a2 = u8 [a3 + 0x5]\n 43230: a4 = u8 [a3 + 0x4]\n 43233: a5 = u8 [a3 + 0x6]\n 43236: a3 = u8 [a3 + 0x7]\n 43239: a2 = a2 << 0x8\n 43242: a2 = a2 | a4\n 43245: a4 = u64 [sp + 0x380]\n 43249: a5 = a5 << 0x10\n 43252: a3 = a3 << 0x18\n 43255: a3 = a3 | a5\n 43258: a5 = u64 [sp + 0x378]\n 43262: a2 = a2 | a3\n 43265: a2 = a2 << 0x20\n 43268: a0 = a0 | a2\n 43271: a2 = a0 >> 0x1\n 43274: a2 = a2 >> t0\n 43277: t0 = u64 [sp + 0x370]\n 43281: a3 = s1 << a1\n 43284: a2 = a2 | a3\n 43287: u64 [sp + 0x388] = a2\n 43291: a2 = a5 | a4\n 43294: a3 = u64 [sp + 0x3a8]\n 43298: a3 = a3 | t0\n 43301: a2 = a2 | a3\n 43304: a0 = a0 << a1\n 43307: u64 [sp + 0x390] = a0\n 43311: jump @238 if a2 == 0\n      : @235 (gas: 224)\n 43315: u64 [sp + 872] = 0\n 43319: u64 [sp + 864] = 0\n 43323: a0 = u64 [sp + 0x260]\n 43327: u8 [sp + 0x567] = a0\n 43331: a0 = u64 [sp + 0x258]\n 43335: u8 [sp + 0x566] = a0\n 43339: a0 = u64 [sp + 0x250]\n 43343: u8 [sp + 0x565] = a0\n 43347: a0 = u64 [sp + 0x248]\n 43351: u8 [sp + 0x564] = a0\n 43355: a0 = u64 [sp + 0x220]\n 43359: u8 [sp + 0x563] = a0\n 43363: a0 = u64 [sp + 0x218]\n 43367: u8 [sp + 0x562] = a0\n 43371: a0 = u64 [sp + 0x210]\n 43375: u8 [sp + 0x561] = a0\n 43379: a0 = u64 [sp + 0x208]\n 43383: u8 [sp + 0x56f] = a0\n 43387: a0 = u64 [sp + 0x1d0]\n 43391: u8 [sp + 0x56e] = a0\n 43395: a0 = u64 [sp + 0x1c8]\n 43399: u8 [sp + 0x56d] = a0\n 43403: a0 = u64 [sp + 0x1c0]\n 43407: u8 [sp + 0x56c] = a0\n 43411: a0 = u64 [sp + 0x1b8]\n 43415: u8 [sp + 0x56b] = a0\n 43419: a0 = u64 [sp + 0x1b0]\n 43423: u8 [sp + 0x56a] = a0\n 43427: a0 = u64 [sp + 0x1a8]\n 43431: u8 [sp + 0x569] = a0\n 43435: a0 = u64 [sp + 0x1a0]\n 43439: u8 [sp + 0x577] = a0\n 43443: a0 = u64 [sp + 0x198]\n 43447: u8 [sp + 0x576] = a0\n 43451: a0 = u64 [sp + 0x190]\n 43455: u8 [sp + 0x575] = a0\n 43459: a0 = u64 [sp + 0x188]\n 43463: u8 [sp + 0x574] = a0\n 43467: a0 = u64 [sp + 0x180]\n 43471: u8 [sp + 0x573] = a0\n 43475: u8 [sp + 1439] = 0\n 43479: u8 [sp + 1438] = 0\n 43483: u8 [sp + 1437] = 0\n 43487: u8 [sp + 1436] = 0\n 43491: u8 [sp + 1435] = 0\n 43495: u8 [sp + 1434] = 0\n 43499: u8 [sp + 1433] = 0\n 43503: u8 [sp + 1432] = 0\n 43507: u8 [sp + 1431] = 0\n 43511: u8 [sp + 1430] = 0\n 43515: u8 [sp + 1429] = 0\n 43519: u8 [sp + 1428] = 0\n 43523: u8 [sp + 1427] = 0\n 43527: u8 [sp + 1426] = 0\n 43531: u8 [sp + 1425] = 0\n 43535: u8 [sp + 1424] = 0\n 43539: u8 [sp + 1423] = 0\n 43543: u8 [sp + 1422] = 0\n 43547: u8 [sp + 1421] = 0\n 43551: u8 [sp + 1420] = 0\n 43555: u8 [sp + 1419] = 0\n 43559: u8 [sp + 1418] = 0\n 43563: u8 [sp + 1417] = 0\n 43567: u8 [sp + 1416] = 0\n 43571: u8 [sp + 1415] = 0\n 43575: u8 [sp + 1414] = 0\n 43579: u8 [sp + 1413] = 0\n 43583: u8 [sp + 1412] = 0\n 43587: u8 [sp + 1411] = 0\n 43591: u8 [sp + 1410] = 0\n 43595: u8 [sp + 1409] = 0\n 43599: u8 [sp + 1408] = 0\n 43603: a0 = u64 [sp + 0x2c0]\n 43607: u8 [sp + 0x560] = a0\n 43611: a0 = u64 [sp + 0x2d0]\n 43615: u8 [sp + 0x568] = a0\n 43619: u8 [sp + 0x570] = ra\n 43623: u8 [sp + 0x578] = t2\n 43627: a0 = u64 [sp + 0x358]\n 43631: u8 [sp + 0x572] = a0\n 43635: a0 = u64 [sp + 0x350]\n 43639: u8 [sp + 0x571] = a0\n 43643: a0 = u64 [sp + 0x348]\n 43647: u8 [sp + 0x57f] = a0\n 43651: a0 = u64 [sp + 0x318]\n 43655: u8 [sp + 0x57e] = a0\n 43659: a0 = u64 [sp + 0x310]\n 43663: u8 [sp + 0x57d] = a0\n 43667: a0 = u64 [sp + 0x308]\n 43671: u8 [sp + 0x57c] = a0\n 43675: a0 = u64 [sp + 0x300]\n 43679: u8 [sp + 0x57b] = a0\n 43683: a0 = u64 [sp + 0x2f8]\n 43687: u8 [sp + 0x57a] = a0\n 43691: a0 = u64 [sp + 0x2f0]\n 43695: u8 [sp + 0x579] = a0\n 43699: s1 = u64 [sp + 0x3a8]\n 43703: a0 = s1 << 0x38\n 43706: a0 = a0 >> 0x3b\n 43709: a1 = sp + 0x560\n 43713: a1 = a1 + a0\n 43716: a0 = u8 [a1 + 0x11]\n 43719: a2 = u8 [a1 + 0x10]\n 43722: a3 = u8 [a1 + 0x12]\n 43725: a4 = u8 [a1 + 0x13]\n 43728: a0 = a0 << 0x8\n 43731: a0 = a0 | a2\n 43734: a3 = a3 << 0x10\n 43737: a4 = a4 << 0x18\n 43740: a3 = a3 | a4\n 43743: a0 = a0 | a3\n 43746: a2 = u8 [a1 + 0x15]\n 43749: a3 = u8 [a1 + 0x14]\n 43752: a4 = u8 [a1 + 0x16]\n 43755: a5 = u8 [a1 + 0x17]\n 43758: a2 = a2 << 0x8\n 43761: a2 = a2 | a3\n 43764: a4 = a4 << 0x10\n 43767: a5 = a5 << 0x18\n 43770: a4 = a4 | a5\n 43773: a2 = a2 | a4\n 43776: a2 = a2 << 0x20\n 43779: t0 = a2 | a0\n 43782: a0 = s1 & 0x7\n 43785: t1 = t0 >> a0\n 43788: a2 = u8 [a1 + 0x19]\n 43791: a4 = u8 [a1 + 0x18]\n 43794: s1 = u8 [a1 + 0x1a]\n 43797: a3 = u8 [a1 + 0x1b]\n 43800: a2 = a2 << 0x8\n 43803: a2 = a2 | a4\n 43806: s1 = s1 << 0x10\n 43809: a3 = a3 << 0x18\n 43812: a3 = a3 | s1\n 43815: a2 = a2 | a3\n 43818: a3 = u8 [a1 + 0x1d]\n 43821: a4 = u8 [a1 + 0x1c]\n 43824: s1 = u8 [a1 + 0x1e]\n 43827: a5 = u8 [a1 + 0x1f]\n 43830: a3 = a3 << 0x8\n 43833: a3 = a3 | a4\n 43836: s1 = s1 << 0x10\n 43839: a5 = a5 << 0x18\n 43842: a5 = a5 | s1\n 43845: a3 = a3 | a5\n 43848: a3 = a3 << 0x20\n 43851: t2 = a3 | a2\n 43854: a2 = t2 << 0x1\n 43857: ra = a0 ^ 0x3f\n 43860: a2 = a2 << ra\n 43863: a2 = t1 | a2\n 43866: u64 [sp + 0x358] = a2\n 43870: a2 = u8 [a1 + 0x9]\n 43873: a3 = u8 [a1 + 0x8]\n 43876: a5 = u8 [a1 + 0xa]\n 43879: a4 = u8 [a1 + 0xb]\n 43882: a2 = a2 << 0x8\n 43885: a2 = a2 | a3\n 43888: a5 = a5 << 0x10\n 43891: a4 = a4 << 0x18\n 43894: a4 = a4 | a5\n 43897: a2 = a2 | a4\n 43900: a3 = u8 [a1 + 0xd]\n 43903: a4 = u8 [a1 + 0xc]\n 43906: a5 = u8 [a1 + 0xe]\n 43909: s1 = u8 [a1 + 0xf]\n 43912: a3 = a3 << 0x8\n 43915: a3 = a3 | a4\n 43918: a5 = a5 << 0x10\n 43921: s1 = s1 << 0x18\n 43924: a5 = a5 | s1\n 43927: a3 = a3 | a5\n 43930: a3 = a3 << 0x20\n 43933: t1 = a3 | a2\n 43936: a2 = t1 >> a0\n 43939: t0 = t0 << 0x1\n 43942: a3 = a0 ^ 0xffffffffffffffff\n 43945: a3 = t0 << a3\n 43948: a3 = a3 | a2\n 43951: a2 = u8 [a1 + 0x1]\n 43954: a4 = u8 [a1]\n 43956: s1 = u8 [a1 + 0x2]\n 43959: a5 = u8 [a1 + 0x3]\n 43962: a2 = a2 << 0x8\n 43965: a2 = a2 | a4\n 43968: s1 = s1 << 0x10\n 43971: a5 = a5 << 0x18\n 43974: a5 = a5 | s1\n 43977: a2 = a2 | a5\n 43980: a4 = u8 [a1 + 0x5]\n 43983: a5 = u8 [a1 + 0x4]\n 43986: s1 = u8 [a1 + 0x6]\n 43989: a1 = u8 [a1 + 0x7]\n 43992: a4 = a4 << 0x8\n 43995: a4 = a4 | a5\n 43998: s1 = s1 << 0x10\n 44001: a1 = a1 << 0x18\n 44004: a1 = a1 | s1\n 44007: s1 = u64 [sp + 0x368]\n 44011: a1 = a1 | a4\n 44014: a1 = a1 << 0x20\n 44017: a1 = a1 | a2\n 44020: a1 = a1 >> a0\n 44023: t1 = t1 << 0x1\n 44026: a2 = t1 << ra\n 44029: t0 = a1 | a2\n 44032: t1 = t2 >> a0\n 44035: a1 = u64 [sp + 0x3c0]\n 44039: a0 = a1 <u 0x1\n 44042: a2 = u64 [sp + 0x3d0]\n 44046: a0 = a2 - a0\n 44049: u64 [sp + 0x310] = a0\n 44053: a0 = a1 | a2\n 44056: a0 = a0 <u 0x1\n 44059: a2 = u64 [sp + 0x3c8]\n 44063: a4 = a2 - a0\n 44066: u64 [sp + 0x308] = a4\n 44070: a0 = a2 <u a0\n 44073: a2 = u64 [sp + 0x3d8]\n 44077: a2 = a2 - a0\n 44080: u64 [sp + 0x300] = a2\n 44084: a1 = a1 + 0xffffffffffffffff\n 44087: u64 [sp + 0x2f8] = a1\n 44091: fallthrough\n      : @236 (gas: 104)\n 44092: u64 [sp + 0x368] = s1\n 44096: u64 [sp + 792] = 0\n 44100: a4 = t0 >> 0x3f\n 44103: s1 = a3 << 0x1\n 44106: s1 = s1 | a4\n 44109: t0 = t0 << 0x1\n 44112: t2 = a3\n 44114: a3 = u64 [sp + 0x3a0]\n 44118: a4 = a3 >> 0x3f\n 44121: a4 = t0 | a4\n 44124: u64 [sp + 0x350] = a4\n 44128: a1 = u64 [sp + 0x310]\n 44132: a0 = a1 ^ s1\n 44135: a1 = a1 <u s1\n 44138: a2 = u64 [sp + 0x2f8]\n 44142: a5 = a2 <u a4\n 44145: a5 = a1 if a0 != 0\n 44148: t1 = t1 << 0x1\n 44151: ra = u64 [sp + 0x358]\n 44155: a0 = ra >> 0x3f\n 44158: t0 = t1 | a0\n 44161: u64 [sp + 0x348] = t0\n 44165: a0 = t2 >> 0x3f\n 44168: ra = ra << 0x1\n 44171: t1 = ra | a0\n 44174: a0 = a3 << 0x1\n 44177: a1 = u64 [sp + 0x398]\n 44181: a2 = a1 >> 0x3f\n 44184: a0 = a0 | a2\n 44187: a2 = a1 << 0x1\n 44190: a3 = u64 [sp + 0x388]\n 44194: a1 = a3 >> 0x3f\n 44197: a1 = a1 | a2\n 44200: a2 = a3 << 0x1\n 44203: a3 = u64 [sp + 0x390]\n 44207: a4 = a3 >> 0x3f\n 44210: a2 = a2 | a4\n 44213: a4 = a3 << 0x1\n 44216: a3 = u64 [sp + 0x368]\n 44220: a3 = a3 | a4\n 44223: u64 [sp + 0x390] = a3\n 44227: a3 = u64 [sp + 0x360]\n 44231: a2 = a2 | a3\n 44234: u64 [sp + 0x388] = a2\n 44238: a1 = a1 | a3\n 44241: u64 [sp + 0x398] = a1\n 44245: a0 = a0 | a3\n 44248: u64 [sp + 0x3a0] = a0\n 44252: a1 = u64 [sp + 0x308]\n 44256: a0 = a1 - t1\n 44259: a0 = a0 <u a5\n 44262: a1 = a1 <u t1\n 44265: a2 = u64 [sp + 0x300]\n 44269: a2 = a2 - t0\n 44272: a2 = a2 - a1\n 44275: a2 = a2 - a0\n 44278: a5 = a2 >>a 0x3f\n 44281: a0 = u64 [sp + 0x3c0]\n 44285: t0 = a5 & a0\n 44288: a1 = u64 [sp + 0x3d0]\n 44292: a1 = a1 & a5\n 44295: a2 = s1 ^ a1\n 44298: a4 = s1 <u a1\n 44301: t2 = u64 [sp + 0x350]\n 44305: ra = t2 <u t0\n 44308: a4 = ra if a2 == 0\n 44311: a2 = u64 [sp + 0x3c8]\n 44315: a2 = a2 & a5\n 44318: a0 = t1 - a2\n 44321: a3 = a0 - a4\n 44324: u64 [sp + 0x358] = a3\n 44328: a3 = a0 <u a4\n 44331: a2 = t1 <u a2\n 44334: a4 = u64 [sp + 0x3d8]\n 44338: a4 = a4 & a5\n 44341: a0 = u64 [sp + 0x348]\n 44345: a4 = a0 - a4\n 44348: a4 = a4 - a2\n 44351: t1 = a4 - a3\n 44354: s1 = s1 - a1\n 44357: a3 = s1 - ra\n 44360: t0 = t2 - t0\n 44363: a4 = u64 [sp + 0x3a8]\n 44367: a1 = u64 [sp + 0x378]\n 44371: a0 = a4 | a1\n 44374: a0 = a0 <u 0x1\n 44377: a2 = u64 [sp + 0x370]\n 44381: s1 = a2 <u a0\n 44384: a0 = a2 - a0\n 44387: a2 = a4 <u 0x1\n 44390: a1 = a1 - a2\n 44393: a2 = u64 [sp + 0x380]\n 44397: a2 = a2 - s1\n 44400: a4 = a4 + 0xffffffffffffffff\n 44403: u64 [sp + 0x380] = a2\n 44407: u64 [sp + 0x378] = a1\n 44411: a1 = a1 | a2\n 44414: u64 [sp + 0x3a8] = a4\n 44418: a2 = a4 | a0\n 44421: a1 = a1 | a2\n 44424: s1 = a5 & 0x1\n 44427: u64 [sp + 0x370] = a0\n 44431: u64 [sp + 864] = 0\n 44435: jump @236 if a1 != 0\n      : @237 (gas: 1)\n 44439: jump @239\n      : @238 (gas: 3)\n 44441: s1 = 0\n 44443: u64 [sp + 792] = 0\n 44447: fallthrough\n      : @239 (gas: 20)\n 44448: a3 = u64 [sp + 0x398]\n 44452: a0 = a3 >> 0x3f\n 44455: a1 = u64 [sp + 0x3a0]\n 44459: a1 = a1 << 0x1\n 44462: a0 = a0 | a1\n 44465: a4 = u64 [sp + 0x388]\n 44469: a1 = a4 >> 0x3f\n 44472: a3 = a3 << 0x1\n 44475: a1 = a1 | a3\n 44478: a5 = u64 [sp + 0x390]\n 44482: a3 = a5 >> 0x3f\n 44485: a4 = a4 << 0x1\n 44488: a5 = a5 << 0x1\n 44491: s1 = s1 | a5\n 44494: a2 = u64 [sp + 0x318]\n 44498: a3 = a3 | a2\n 44501: a3 = a3 | a4\n 44504: t1 = a2 | a1\n 44507: a2 = a2 | a0\n 44510: fallthrough\n      : @240 (gas: 69)\n 44511: u64 [sp + 0x3a8] = a2\n 44515: t0 = u64 [sp + 0x3c0]\n 44519: a0 = t0 mulhu s1\n 44522: a1 = u64 [sp + 0x3d0]\n 44526: a2 = a1 * s1\n 44529: a0 = a0 + a2\n 44532: a2 = a0 <u a2\n 44535: a4 = a1 mulhu s1\n 44538: a2 = a2 + a4\n 44541: a5 = t0 * a3\n 44544: t2 = a5 + a0\n 44547: a0 = t2 <u a5\n 44550: a5 = t0 mulhu a3\n 44553: a0 = a0 + a5\n 44556: a0 = a0 + a2\n 44559: a2 = a0 <u a2\n 44562: a5 = a1 mulhu a3\n 44565: a2 = a2 + a5\n 44568: a5 = a1 * a3\n 44571: a0 = a0 + a5\n 44574: a5 = a0 <u a5\n 44577: ra = a2 + a5\n 44580: a5 = t1 * a1\n 44583: a2 = t1 mulhu t0\n 44586: a2 = a2 + a5\n 44589: a1 = u64 [sp + 0x3a8]\n 44593: a5 = a1 * t0\n 44596: a2 = a2 + a5\n 44599: a1 = u64 [sp + 0x3c8]\n 44603: a5 = s1 mulhu a1\n 44606: a4 = u64 [sp + 0x3d8]\n 44610: a4 = s1 * a4\n 44613: a4 = a4 + a5\n 44616: a3 = a3 * a1\n 44619: a3 = a3 + a4\n 44622: a2 = a2 + a3\n 44625: a3 = s1 * a1\n 44628: a1 = t1 * t0\n 44631: a3 = a3 + a1\n 44634: a1 = a3 <u a1\n 44637: a1 = a1 + a2\n 44640: a3 = a3 + a0\n 44643: a0 = a3 <u a0\n 44646: a1 = a1 + ra\n 44649: a0 = a0 + a1\n 44652: t0 = t0 * s1\n 44655: a1 = u64 [sp + 0x268]\n 44659: a0 = a1 - a0\n 44662: a1 = u64 [sp + 0x2d0]\n 44666: a2 = a1 ^ t2\n 44669: a4 = a1 <u t2\n 44672: t1 = u64 [sp + 0x2c0]\n 44676: a5 = t1 <u t0\n 44679: a4 = a5 if a2 == 0\n 44682: s1 = u64 [sp + 0x2e8]\n 44686: a2 = s1 <u a3\n 44689: a3 = s1 - a3\n 44692: s1 = a3 <u a4\n 44695: a2 = a2 + s1\n 44698: a0 = a0 - a2\n 44701: u64 [sp + 0x2e8] = a0\n 44705: a3 = a3 - a4\n 44708: u64 [sp + 0x2f0] = a3\n 44712: a0 = a1 - t2\n 44715: a0 = a0 - a5\n 44718: u64 [sp + 0x2d0] = a0\n 44722: a0 = t1 - t0\n 44725: u64 [sp + 0x2c0] = a0\n 44729: jump @340\n      : @241 (gas: 4)\n 44732: t1 = a1\n 44734: a5 = a1\n 44736: t2 = u64 [sp + 0x3d8]\n 44740: jump @256\n      : @242 (gas: 2)\n 44743: u64 [sp + 880] = 0\n 44747: fallthrough\n      : @243 (gas: 23)\n 44748: a3 = u64 [sp + 0x398]\n 44752: a0 = a3 >> 0x3f\n 44755: a1 = u64 [sp + 0x3a0]\n 44759: a1 = a1 << 0x1\n 44762: a1 = a1 | a0\n 44765: a5 = u64 [sp + 0x390]\n 44769: a0 = a5 >> 0x3f\n 44772: a3 = a3 << 0x1\n 44775: a3 = a3 | a0\n 44778: a0 = u64 [sp + 0x368]\n 44782: a4 = a0 >> 0x3f\n 44785: a5 = a5 << 0x1\n 44788: a0 = a0 << 0x1\n 44791: a2 = u64 [sp + 0x370]\n 44795: t0 = a2 | a0\n 44798: a4 = a4 | 0\n 44800: t1 = a4 | a5\n 44803: a0 = a3 | 0\n 44805: u64 [sp + 0x3a8] = a0\n 44809: a0 = a1 | 0\n 44811: u64 [sp + 0x388] = a0\n 44815: ra = u64 [sp + 0xd0]\n 44819: fallthrough\n      : @244 (gas: 174)\n 44820: a2 = u64 [sp + 0xf8]\n 44824: a2 = a2 << 0x8\n 44827: a1 = u64 [sp + 0x118]\n 44831: a2 = a2 | a1\n 44834: a3 = u64 [sp + 0x108]\n 44838: a3 = a3 << 0x10\n 44841: a4 = u64 [sp + 0x100]\n 44845: a4 = a4 << 0x18\n 44848: a3 = a3 | a4\n 44851: a2 = a2 | a3\n 44854: a3 = u64 [sp + 0x110]\n 44858: a3 = a3 << 0x8\n 44861: a1 = u64 [sp + 0x130]\n 44865: a3 = a3 | a1\n 44868: a4 = u64 [sp + 0x128]\n 44872: a4 = a4 << 0x10\n 44875: a5 = u64 [sp + 0x120]\n 44879: a5 = a5 << 0x18\n 44882: a4 = a4 | a5\n 44885: a3 = a3 | a4\n 44888: a3 = a3 << 0x20\n 44891: a2 = a2 | a3\n 44894: a3 = u64 [sp + 0x140]\n 44898: a3 = a3 << 0x8\n 44901: a1 = u64 [sp + 0x160]\n 44905: a3 = a3 | a1\n 44908: a4 = u64 [sp + 0x150]\n 44912: a4 = a4 << 0x10\n 44915: a5 = u64 [sp + 0x148]\n 44919: a5 = a5 << 0x18\n 44922: a4 = a4 | a5\n 44925: a3 = a3 | a4\n 44928: a4 = u64 [sp + 0x158]\n 44932: a4 = a4 << 0x8\n 44935: a1 = u64 [sp + 0x178]\n 44939: a4 = a4 | a1\n 44942: a5 = u64 [sp + 0x170]\n 44946: a5 = a5 << 0x10\n 44949: s1 = u64 [sp + 0x168]\n 44953: s1 = s1 << 0x18\n 44956: a5 = a5 | s1\n 44959: a4 = a4 | a5\n 44962: a4 = a4 << 0x20\n 44965: a3 = a3 | a4\n 44968: a1 = u64 [sp + 0x200]\n 44972: a2 = a2 << a1\n 44975: a0 = a1\n 44977: a4 = a3 >> 0x1\n 44980: a1 = u64 [sp + 0x1f8]\n 44984: a4 = a4 >> a1\n 44987: a2 = a2 | a4\n 44990: u64 [sp + 0x380] = a2\n 44994: a2 = u64 [sp + 0x180]\n 44998: a2 = a2 << 0x8\n 45001: a4 = u64 [sp + 0x1a0]\n 45005: a2 = a2 | a4\n 45008: a4 = u64 [sp + 0x190]\n 45012: a4 = a4 << 0x10\n 45015: a5 = u64 [sp + 0x188]\n 45019: a5 = a5 << 0x18\n 45022: a4 = a4 | a5\n 45025: a2 = a2 | a4\n 45028: a4 = u64 [sp + 0x198]\n 45032: a4 = a4 << 0x8\n 45035: a5 = u64 [sp + 0x1b8]\n 45039: a4 = a4 | a5\n 45042: a5 = u64 [sp + 0x1b0]\n 45046: a5 = a5 << 0x10\n 45049: s1 = u64 [sp + 0x1a8]\n 45053: s1 = s1 << 0x18\n 45056: a5 = a5 | s1\n 45059: a4 = a4 | a5\n 45062: a4 = a4 << 0x20\n 45065: a2 = a2 | a4\n 45068: a3 = a3 << a0\n 45071: a4 = a2 >> 0x1\n 45074: a5 = u64 [sp + 0x1e8]\n 45078: a4 = a4 >> a5\n 45081: a3 = a3 | a4\n 45084: u64 [sp + 0x378] = a3\n 45088: a3 = u64 [sp + 0x1c0]\n 45092: a3 = a3 << 0x8\n 45095: a4 = u64 [sp + 0x208]\n 45099: a3 = a3 | a4\n 45102: a4 = u64 [sp + 0x1d0]\n 45106: a4 = a4 << 0x10\n 45109: a5 = u64 [sp + 0x1c8]\n 45113: a5 = a5 << 0x18\n 45116: a4 = a4 | a5\n 45119: a2 = a2 << a0\n 45122: a3 = a3 | a4\n 45125: a4 = u64 [sp + 0x210]\n 45129: a4 = a4 << 0x8\n 45132: a0 = u64 [sp + 0x2d0]\n 45136: a4 = a4 | a0\n 45139: a5 = u64 [sp + 0x218]\n 45143: a5 = a5 << 0x10\n 45146: s1 = ra << 0x18\n 45149: a5 = a5 | s1\n 45152: a4 = a4 | a5\n 45155: a4 = a4 << 0x20\n 45158: a3 = a3 | a4\n 45161: u64 [sp + 0x398] = a3\n 45165: a3 = a3 >> 0x1\n 45168: a3 = a3 >> a1\n 45171: a2 = a2 | a3\n 45174: u64 [sp + 0x218] = a2\n 45178: a0 = u64 [sp + 0x3b8]\n 45182: t2 = t0\n 45184: a2 = t0 mulhu a0\n 45187: a3 = t1 * a0\n 45190: a2 = a2 + a3\n 45193: a3 = a2 <u a3\n 45196: a5 = t1 mulhu a0\n 45199: a4 = a5 + a3\n 45202: a1 = u64 [sp + 0x3b0]\n 45206: a5 = t0 * a1\n 45209: t0 = a5 + a2\n 45212: a5 = t0 <u a5\n 45215: s1 = t2 mulhu a1\n 45218: a5 = a5 + s1\n 45221: a3 = a4 + a5\n 45224: s1 = t1 * a1\n 45227: a5 = s1 + a3\n 45230: s1 = a5 <u s1\n 45233: a3 = a3 <u a4\n 45236: a4 = t1 mulhu a1\n 45239: a3 = a3 + a4\n 45242: a3 = a3 + s1\n 45245: a2 = u64 [sp + 0x3a8]\n 45249: a4 = a0 mulhu a2\n 45252: ra = u64 [sp + 0x388]\n 45256: s1 = a0 * ra\n 45259: a4 = a4 + s1\n 45262: s1 = a1 * a2\n 45265: a4 = a4 + s1\n 45268: s1 = a0 * a2\n 45271: s1 = s1 + a5\n 45274: a5 = s1 <u a5\n 45277: a3 = a3 + a4\n 45280: a3 = a3 + a5\n 45283: a4 = t2 * a0\n 45286: a1 = u64 [sp + 0x300]\n 45290: a1 = a1 - a3\n 45293: a3 = u64 [sp + 0x318]\n 45297: a0 = t0\n 45299: u64 [sp + 0x390] = t0\n 45303: t0 = a3 ^ t0\n 45306: a3 = a3 <u a0\n 45309: a0 = u64 [sp + 0x310]\n 45313: a0 = a0 <u a4\n 45316: a3 = a0 if t0 == 0\n 45319: a5 = u64 [sp + 0x308]\n 45323: t0 = a5 <u s1\n 45326: a5 = a5 - s1\n 45329: s1 = a5 <u a3\n 45332: t0 = t0 + s1\n 45335: s1 = t2\n 45337: a1 = a1 - t0\n 45340: u64 [sp + 0x3a0] = a1\n 45344: a1 = a5 - a3\n 45347: a3 = a2\n 45349: a2 = u64 [sp + 0x390]\n 45353: a5 = u64 [sp + 0x318]\n 45357: a2 = a5 - a2\n 45360: t0 = a2 - a0\n 45363: a0 = u64 [sp + 0x200]\n 45367: a2 = u64 [sp + 0x398]\n 45371: a0 = a2 << a0\n 45374: u64 [sp + 0x210] = a0\n 45378: a0 = t1\n 45380: a2 = u64 [sp + 0x310]\n 45384: t2 = a2 - a4\n 45387: jump @246\n      : @245 (gas: 36)\n 45389: a4 = u64 [sp + 0x3b8]\n 45393: a4 = a4 + t2\n 45396: a0 = a4 <u t2\n 45399: a2 = u64 [sp + 0x3b0]\n 45403: a2 = a2 + t0\n 45406: a2 = a2 + a0\n 45409: a1 = a2 ^ t0\n 45412: a3 = a2 <u t0\n 45415: a3 = a0 if a1 == 0\n 45418: a0 = a2 + 0x1\n 45421: a1 = a2 <u 0xffffffffffffffff\n 45424: t1 = a4 <u 0xffffffffffffffff\n 45427: t1 = a1 if a0 != 0\n 45430: a0 = s1 <u 0x1\n 45433: a1 = a5\n 45435: a5 = a5 - a0\n 45438: a0 = s1 | a1\n 45441: a0 = a0 <u 0x1\n 45444: a1 = u64 [sp + 0x3a8]\n 45448: t2 = a1 <u a0\n 45451: t0 = a1 - a0\n 45454: ra = ra - t2\n 45457: a0 = u64 [sp + 0x390]\n 45461: a1 = a0 + a3\n 45464: a3 = a1 <u a0\n 45467: a0 = u64 [sp + 0x3a0]\n 45471: a0 = a0 + a3\n 45474: u64 [sp + 0x3a0] = a0\n 45478: a3 = a1 | a0\n 45481: t1 = 0 if a3 != 0\n 45483: s1 = s1 + 0xffffffffffffffff\n 45486: a0 = a5\n 45488: a3 = t0\n 45490: t2 = a4\n 45492: t0 = a2\n 45494: jump @248 if t1 == 0\n      : @246 (gas: 13)\n 45498: u64 [sp + 0x3a8] = a3\n 45502: u64 [sp + 0x390] = a1\n 45506: a2 = a3 >u 0\n 45508: a4 = ra >u 0\n 45510: a4 = a2 if ra == 0\n 45513: a2 = a0 + 0x1\n 45516: a5 = a0\n 45518: a0 = s1 + 0x1\n 45521: a0 = a0 <u 0x1\n 45524: a0 = 0 if a2 != 0\n 45526: a2 = a3 | ra\n 45529: a0 = a4 if a2 != 0\n 45532: jump @245 if a0 != 0\n      : @247 (gas: 56)\n 45536: a3 = u64 [sp + 0x338]\n 45540: a0 = s1 mulhu a3\n 45543: a2 = a5 * a3\n 45546: a0 = a0 + a2\n 45549: a2 = a0 <u a2\n 45552: a4 = a5 mulhu a3\n 45555: u64 [sp + 0x398] = a5\n 45559: a5 = a4 + a2\n 45562: t1 = s1\n 45564: s1 = u64 [sp + 0x340]\n 45568: a4 = t1 * s1\n 45571: u64 [sp + 0x388] = ra\n 45575: ra = a4 + a0\n 45578: a4 = ra <u a4\n 45581: a1 = t1 mulhu s1\n 45584: a1 = a1 + a4\n 45587: a2 = a5 + a1\n 45590: a0 = u64 [sp + 0x398]\n 45594: a4 = a0 * s1\n 45597: a1 = a4 + a2\n 45600: a4 = a1 <u a4\n 45603: a2 = a2 <u a5\n 45606: a0 = u64 [sp + 0x398]\n 45610: a5 = a0 mulhu s1\n 45613: a2 = a2 + a5\n 45616: a2 = a2 + a4\n 45619: a0 = u64 [sp + 0x3a8]\n 45623: a4 = a3 mulhu a0\n 45626: a5 = u64 [sp + 0x388]\n 45630: a5 = a3 * a5\n 45633: a4 = a4 + a5\n 45636: a5 = s1 * a0\n 45639: s1 = t1\n 45641: a4 = a4 + a5\n 45644: a5 = a3 * a0\n 45647: a5 = a5 + a1\n 45650: a1 = a5 <u a1\n 45653: a2 = a2 + a4\n 45656: a1 = a1 + a2\n 45659: a2 = t1 * a3\n 45662: a3 = u64 [sp + 0x380]\n 45666: a4 = ra ^ a3\n 45669: a0 = a3 <u ra\n 45672: ra = u64 [sp + 0x388]\n 45676: a3 = u64 [sp + 0x378]\n 45680: a2 = a3 <u a2\n 45683: a2 = a0 if a4 != 0\n 45686: a0 = a1 ^ t0\n 45689: a1 = t0 <u a1\n 45692: a4 = t2 <u a5\n 45695: a4 = a1 if a0 != 0\n 45698: a5 = a5 ^ t2\n 45701: a0 = a0 | a5\n 45704: a5 = u64 [sp + 0x398]\n 45708: a2 = a4 if a0 != 0\n 45711: jump @245 if a2 != 0\n      : @248 (gas: 110)\n 45715: a2 = a5 & 0xffffffffffffffff\n 45718: a1 = s1 & 0xffffffffffffffff\n 45721: t1 = u64 [sp + 0x338]\n 45725: a0 = a1 mulhu t1\n 45728: a3 = a2 * t1\n 45731: a0 = a0 + a3\n 45734: a3 = a0 <u a3\n 45737: a4 = a2 mulhu t1\n 45740: t0 = a4 + a3\n 45743: a3 = u64 [sp + 0x340]\n 45747: a4 = a1 * a3\n 45750: t2 = a4 + a0\n 45753: a4 = t2 <u a4\n 45756: s1 = u64 [sp + 0x3b8]\n 45760: a5 = a1 mulhu a3\n 45763: a4 = a4 + a5\n 45766: a4 = a4 + t0\n 45769: t0 = a4 <u t0\n 45772: a5 = a2 mulhu a3\n 45775: t0 = t0 + a5\n 45778: a5 = a2 * a3\n 45781: a4 = a4 + a5\n 45784: a5 = a4 <u a5\n 45787: a3 = t0 + a5\n 45790: a2 = s1 * a2\n 45793: a5 = s1 mulhu a1\n 45796: a2 = a2 + a5\n 45799: a5 = u64 [sp + 0x3b0]\n 45803: a5 = a5 * a1\n 45806: a2 = a2 + a5\n 45809: a2 = a2 + a3\n 45812: a3 = s1 * a1\n 45815: a3 = a3 + a4\n 45818: a4 = a3 <u a4\n 45821: a2 = a2 + a4\n 45824: a1 = a1 * t1\n 45827: a4 = u64 [sp + 0x318]\n 45831: t0 = a4 - a2\n 45834: a0 = u64 [sp + 0x380]\n 45838: a2 = a0 ^ t2\n 45841: a5 = a0 <u t2\n 45844: a4 = u64 [sp + 0x378]\n 45848: s1 = a4 <u a1\n 45851: a5 = s1 if a2 == 0\n 45854: a2 = u64 [sp + 0x310]\n 45858: t1 = a2 <u a3\n 45861: a3 = a2 - a3\n 45864: a2 = a3 <u a5\n 45867: a2 = a2 + t1\n 45870: ra = t0 - a2\n 45873: t0 = a3 - a5\n 45876: a0 = a0 - t2\n 45879: t2 = a0 - s1\n 45882: t1 = a4 - a1\n 45885: a1 = clz ra\n 45887: a0 = clz t0\n 45889: a0 = a0 + 0x40\n 45892: a0 = a1 if ra != 0\n 45895: a1 = t0 | ra\n 45898: a2 = clz t2\n 45900: a3 = clz t1\n 45902: a3 = a3 + 0x40\n 45905: a3 = a2 if t2 != 0\n 45908: a2 = a3 + 0x80\n 45912: a0 = a2 if a1 == 0\n 45915: a2 = a2 <u a3\n 45918: a2 = 0 if a1 != 0\n 45920: a4 = u64 [sp + 0x258]\n 45924: a1 = a4 <u a0\n 45927: a5 = u64 [sp + 0x260]\n 45931: a3 = a5 ^ a2\n 45934: s1 = a5 <u a2\n 45937: s1 = a1 if a3 == 0\n 45940: a4 = a4 - a0\n 45943: a3 = s1 <u 0x1\n 45946: a3 = a3 + 0xffffffffffffffff\n 45949: a5 = a5 - a2\n 45952: a5 = a5 - a1\n 45955: a0 = a5 >u 0\n 45957: u64 [sp + 0x3a0] = a4\n 45961: a1 = a4 <u 0x100\n 45965: a1 = a1 ^ 0x1\n 45968: a1 = a0 if a5 != 0\n 45971: a4 = -s1\n 45973: a0 = a4 >u 0\n 45975: a2 = a3 >u 0\n 45977: u64 [sp + 0x390] = a3\n 45981: a2 = a0 if a3 == 0\n 45984: a2 = a1 if s1 == 0\n 45987: a0 = t2 | ra\n 45990: a1 = t1 | t0\n 45993: a0 = a0 | a1\n 45996: a0 = a0 <u 0x1\n 45999: a1 = u64 [sp + 0x220]\n 46003: a0 = a0 | a1\n 46006: a1 = t1\n 46008: s1 = a0 | a2\n 46011: u64 [sp + 0x2d0] = ra\n 46015: u64 [sp + 0x300] = t0\n 46019: t1 = t2\n 46021: u64 [sp + 0x308] = t2\n 46025: ra = 0 if s1 != 0\n 46027: u64 [sp + 0x388] = ra\n 46031: t0 = 0 if s1 != 0\n 46033: u64 [sp + 0x398] = t0\n 46037: t1 = 0 if s1 != 0\n 46039: ra = a1\n 46041: ra = 0 if s1 != 0\n 46043: u64 [sp + 0x310] = a1\n 46047: jump @259 if s1 != 0\n      : @249 (gas: 7)\n 46051: a1 = u64 [sp + 0x3a0]\n 46055: s1 = a1 ^ 0xff\n 46059: s1 = s1 | a4\n 46062: t0 = u64 [sp + 0x390]\n 46066: a3 = a5 | t0\n 46069: a3 = a3 | s1\n 46072: jump @259 if a3 == 0\n      : @250 (gas: 260)\n 46076: a2 = a1 + 0x1\n 46079: u64 [sp + 0x3a8] = a2\n 46083: a0 = a2 <u 0x1\n 46086: a0 = a0 + a5\n 46089: u64 [sp + 0x378] = a0\n 46093: a0 = a0 | a2\n 46096: a0 = a0 <u 0x1\n 46099: a0 = a0 + a4\n 46102: u64 [sp + 0x370] = a0\n 46106: a0 = a0 <u a4\n 46109: a0 = a0 + t0\n 46112: u64 [sp + 0x380] = a0\n 46116: t0 = 0xff - a1\n 46120: t2 = sp + 0x7ff\n 46124: t2 = t2 + 0x360\n 46128: a1 = u64 [sp + 0x310]\n 46132: u8 [t2 + 0x21] = a1\n 46135: u8 [t2 + 32] = 0\n 46138: u8 [t2 + 31] = 0\n 46141: u8 [t2 + 30] = 0\n 46144: u8 [t2 + 29] = 0\n 46147: u8 [t2 + 28] = 0\n 46150: u8 [t2 + 27] = 0\n 46153: u8 [t2 + 26] = 0\n 46156: u8 [t2 + 25] = 0\n 46159: u8 [t2 + 24] = 0\n 46162: u8 [t2 + 23] = 0\n 46165: u8 [t2 + 22] = 0\n 46168: u8 [t2 + 21] = 0\n 46171: u8 [t2 + 20] = 0\n 46174: u8 [t2 + 19] = 0\n 46177: u8 [t2 + 18] = 0\n 46180: u8 [t2 + 17] = 0\n 46183: u8 [t2 + 16] = 0\n 46186: u8 [t2 + 15] = 0\n 46189: u8 [t2 + 14] = 0\n 46192: u8 [t2 + 13] = 0\n 46195: u8 [t2 + 12] = 0\n 46198: u8 [t2 + 11] = 0\n 46201: u8 [t2 + 10] = 0\n 46204: u8 [t2 + 9] = 0\n 46207: u8 [t2 + 8] = 0\n 46210: u8 [t2 + 7] = 0\n 46213: u8 [t2 + 6] = 0\n 46216: u8 [t2 + 5] = 0\n 46219: u8 [t2 + 4] = 0\n 46222: u8 [t2 + 3] = 0\n 46225: u8 [t2 + 2] = 0\n 46228: u8 [t2 + 1] = 0\n 46231: a0 = u64 [sp + 0x308]\n 46235: u8 [t2 + 0x29] = a0\n 46238: a2 = a1 >> 0x38\n 46241: u64 [sp + 0x1d0] = a2\n 46245: u8 [t2 + 0x28] = a2\n 46248: a2 = a1 >> 0x30\n 46251: u64 [sp + 0x1c8] = a2\n 46255: u8 [t2 + 0x27] = a2\n 46258: a2 = a1 >> 0x28\n 46261: u64 [sp + 0x1c0] = a2\n 46265: u8 [t2 + 0x26] = a2\n 46268: a2 = a1 >> 0x20\n 46271: u64 [sp + 0x1b8] = a2\n 46275: u8 [t2 + 0x25] = a2\n 46278: a2 = a1 >> 0x18\n 46281: u64 [sp + 0x1b0] = a2\n 46285: u8 [t2 + 0x24] = a2\n 46288: a2 = a1 >> 0x10\n 46291: u64 [sp + 0x1a8] = a2\n 46295: u8 [t2 + 0x23] = a2\n 46298: a2 = a1 >> 0x8\n 46301: u64 [sp + 0x1a0] = a2\n 46305: u8 [t2 + 0x22] = a2\n 46308: a2 = u64 [sp + 0x300]\n 46312: u8 [t2 + 0x31] = a2\n 46315: a3 = a0 >> 0x38\n 46318: u64 [sp + 0x198] = a3\n 46322: u8 [t2 + 0x30] = a3\n 46325: a3 = a0 >> 0x30\n 46328: u64 [sp + 0x190] = a3\n 46332: u8 [t2 + 0x2f] = a3\n 46335: a3 = a0 >> 0x28\n 46338: u64 [sp + 0x188] = a3\n 46342: u8 [t2 + 0x2e] = a3\n 46345: a3 = a0 >> 0x20\n 46348: u64 [sp + 0x180] = a3\n 46352: u8 [t2 + 0x2d] = a3\n 46355: a3 = a0 >> 0x18\n 46358: u64 [sp + 0x178] = a3\n 46362: u8 [t2 + 0x2c] = a3\n 46365: a3 = a0 >> 0x10\n 46368: u64 [sp + 0x170] = a3\n 46372: u8 [t2 + 0x2b] = a3\n 46375: a0 = a0 >> 0x8\n 46378: u64 [sp + 0x168] = a0\n 46382: u8 [t2 + 0x2a] = a0\n 46385: ra = u64 [sp + 0x2d0]\n 46389: u8 [t2 + 0x39] = ra\n 46392: a0 = a2 >> 0x38\n 46395: u64 [sp + 0x160] = a0\n 46399: u8 [t2 + 0x38] = a0\n 46402: a0 = a2 >> 0x30\n 46405: u64 [sp + 0x158] = a0\n 46409: u8 [t2 + 0x37] = a0\n 46412: a0 = a2 >> 0x28\n 46415: u64 [sp + 0x150] = a0\n 46419: u8 [t2 + 0x36] = a0\n 46422: a0 = a2 >> 0x20\n 46425: u64 [sp + 0x148] = a0\n 46429: u8 [t2 + 0x35] = a0\n 46432: a0 = a2 >> 0x18\n 46435: u64 [sp + 0x140] = a0\n 46439: u8 [t2 + 0x34] = a0\n 46442: a0 = a2 >> 0x10\n 46445: u64 [sp + 0x360] = a0\n 46449: u8 [t2 + 0x33] = a0\n 46452: a2 = a2 >> 0x8\n 46455: u64 [sp + 0x358] = a2\n 46459: u8 [t2 + 0x32] = a2\n 46462: a0 = ra >> 0x38\n 46465: u64 [sp + 0x350] = a0\n 46469: u8 [t2 + 0x40] = a0\n 46472: a0 = ra >> 0x30\n 46475: u64 [sp + 0x348] = a0\n 46479: u8 [t2 + 0x3f] = a0\n 46482: a0 = ra >> 0x28\n 46485: u64 [sp + 0x318] = a0\n 46489: u8 [t2 + 0x3e] = a0\n 46492: a0 = ra >> 0x20\n 46495: u64 [sp + 0x260] = a0\n 46499: u8 [t2 + 0x3d] = a0\n 46502: a0 = ra >> 0x18\n 46505: u64 [sp + 0x258] = a0\n 46509: u8 [t2 + 0x3c] = a0\n 46512: a0 = ra >> 0x10\n 46515: u64 [sp + 0x220] = a0\n 46519: u8 [t2 + 0x3b] = a0\n 46522: a0 = ra >> 0x8\n 46525: u64 [sp + 0x208] = a0\n 46529: u8 [t2 + 0x3a] = a0\n 46532: a0 = t0 << 0x38\n 46535: a0 = a0 >> 0x3b\n 46538: a2 = sp + 0x7ff\n 46542: a2 = a2 + 0x381\n 46546: a2 = a2 - a0\n 46549: a0 = u8 [a2 + 0x19]\n 46552: a3 = u8 [a2 + 0x18]\n 46555: a4 = u8 [a2 + 0x1a]\n 46558: a5 = u8 [a2 + 0x1b]\n 46561: a0 = a0 << 0x8\n 46564: a0 = a0 | a3\n 46567: a4 = a4 << 0x10\n 46570: a5 = a5 << 0x18\n 46573: a4 = a4 | a5\n 46576: a0 = a0 | a4\n 46579: a3 = u8 [a2 + 0x1d]\n 46582: a4 = u8 [a2 + 0x1c]\n 46585: a5 = u8 [a2 + 0x1e]\n 46588: s1 = u8 [a2 + 0x1f]\n 46591: a3 = a3 << 0x8\n 46594: a3 = a3 | a4\n 46597: a5 = a5 << 0x10\n 46600: s1 = s1 << 0x18\n 46603: a5 = a5 | s1\n 46606: a3 = a3 | a5\n 46609: a3 = a3 << 0x20\n 46612: a3 = a3 | a0\n 46615: a0 = u8 [a2 + 0x11]\n 46618: a4 = u8 [a2 + 0x10]\n 46621: a5 = u8 [a2 + 0x12]\n 46624: s1 = u8 [a2 + 0x13]\n 46627: a0 = a0 << 0x8\n 46630: a0 = a0 | a4\n 46633: a5 = a5 << 0x10\n 46636: s1 = s1 << 0x18\n 46639: a5 = a5 | s1\n 46642: a0 = a0 | a5\n 46645: a4 = u8 [a2 + 0x15]\n 46648: a5 = u8 [a2 + 0x14]\n 46651: s1 = u8 [a2 + 0x16]\n 46654: a1 = u8 [a2 + 0x17]\n 46657: a4 = a4 << 0x8\n 46660: a4 = a4 | a5\n 46663: s1 = s1 << 0x10\n 46666: a1 = a1 << 0x18\n 46669: a1 = a1 | s1\n 46672: a1 = a1 | a4\n 46675: a1 = a1 << 0x20\n 46678: t1 = a1 | a0\n 46681: a1 = t0 & 0x7\n 46684: a0 = a3 << a1\n 46687: a5 = t1 >> 0x1\n 46690: t0 = a1 ^ 0x3f\n 46693: a5 = a5 >> t0\n 46696: a0 = a0 | a5\n 46699: u64 [sp + 0x3a0] = a0\n 46703: a0 = u8 [a2 + 0x9]\n 46706: a5 = u8 [a2 + 0x8]\n 46709: s1 = u8 [a2 + 0xa]\n 46712: a3 = u8 [a2 + 0xb]\n 46715: a0 = a0 << 0x8\n 46718: a0 = a0 | a5\n 46721: s1 = s1 << 0x10\n 46724: a3 = a3 << 0x18\n 46727: a3 = a3 | s1\n 46730: a0 = a0 | a3\n 46733: a3 = u8 [a2 + 0xd]\n 46736: a5 = u8 [a2 + 0xc]\n 46739: s1 = u8 [a2 + 0xe]\n 46742: a4 = u8 [a2 + 0xf]\n 46745: a3 = a3 << 0x8\n 46748: a3 = a3 | a5\n 46751: s1 = s1 << 0x10\n 46754: a4 = a4 << 0x18\n 46757: a4 = a4 | s1\n 46760: a3 = a3 | a4\n 46763: a3 = a3 << 0x20\n 46766: a5 = a3 | a0\n 46769: a0 = a5 >> 0x1\n 46772: a3 = a1 ^ 0xffffffffffffffff\n 46775: a0 = a0 >> a3\n 46778: a3 = t1 << a1\n 46781: a0 = a0 | a3\n 46784: u64 [sp + 0x398] = a0\n 46788: a0 = u8 [a2 + 0x1]\n 46791: a3 = u8 [a2]\n 46793: a4 = u8 [a2 + 0x2]\n 46796: s1 = u8 [a2 + 0x3]\n 46799: a0 = a0 << 0x8\n 46802: a0 = a0 | a3\n 46805: a4 = a4 << 0x10\n 46808: s1 = s1 << 0x18\n 46811: a4 = a4 | s1\n 46814: a0 = a0 | a4\n 46817: a3 = u8 [a2 + 0x5]\n 46820: a4 = u8 [a2 + 0x4]\n 46823: s1 = u8 [a2 + 0x6]\n 46826: a2 = u8 [a2 + 0x7]\n 46829: a3 = a3 << 0x8\n 46832: a3 = a3 | a4\n 46835: a4 = u64 [sp + 0x380]\n 46839: s1 = s1 << 0x10\n 46842: a2 = a2 << 0x18\n 46845: a2 = a2 | s1\n 46848: a2 = a2 | a3\n 46851: a2 = a2 << 0x20\n 46854: a0 = a0 | a2\n 46857: a2 = a0 >> 0x1\n 46860: a2 = a2 >> t0\n 46863: s1 = u64 [sp + 0x370]\n 46867: a3 = a5 << a1\n 46870: a5 = u64 [sp + 0x378]\n 46874: a2 = a2 | a3\n 46877: u64 [sp + 0x388] = a2\n 46881: a2 = a5 | a4\n 46884: a3 = u64 [sp + 0x3a8]\n 46888: a3 = a3 | s1\n 46891: a2 = a2 | a3\n 46894: a0 = a0 << a1\n 46897: u64 [sp + 0x390] = a0\n 46901: jump @257 if a2 == 0\n      : @251 (gas: 257)\n 46905: u64 [sp + 304] = 0\n 46909: u64 [sp + 872] = 0\n 46913: a0 = u64 [sp + 0x1d0]\n 46917: a1 = sp + 0x1000\n 46921: u8 [a1 + 0xfffffffffffffb27] = a0\n 46925: a0 = u64 [sp + 0x1c8]\n 46929: a1 = sp + 0x1000\n 46933: u8 [a1 + 0xfffffffffffffb26] = a0\n 46937: a0 = u64 [sp + 0x1c0]\n 46941: a1 = sp + 0x1000\n 46945: u8 [a1 + 0xfffffffffffffb25] = a0\n 46949: a0 = u64 [sp + 0x1b8]\n 46953: a1 = sp + 0x1000\n 46957: u8 [a1 + 0xfffffffffffffb24] = a0\n 46961: a0 = u64 [sp + 0x1b0]\n 46965: a1 = sp + 0x1000\n 46969: u8 [a1 + 0xfffffffffffffb23] = a0\n 46973: a0 = u64 [sp + 0x1a8]\n 46977: a1 = sp + 0x1000\n 46981: u8 [a1 + 0xfffffffffffffb22] = a0\n 46985: a0 = u64 [sp + 0x1a0]\n 46989: a1 = sp + 0x1000\n 46993: u8 [a1 + 0xfffffffffffffb21] = a0\n 46997: a0 = u64 [sp + 0x198]\n 47001: a1 = sp + 0x1000\n 47005: u8 [a1 + 0xfffffffffffffb2f] = a0\n 47009: a0 = u64 [sp + 0x190]\n 47013: a1 = sp + 0x1000\n 47017: u8 [a1 + 0xfffffffffffffb2e] = a0\n 47021: a0 = u64 [sp + 0x188]\n 47025: a1 = sp + 0x1000\n 47029: u8 [a1 + 0xfffffffffffffb2d] = a0\n 47033: a0 = u64 [sp + 0x180]\n 47037: a1 = sp + 0x1000\n 47041: u8 [a1 + 0xfffffffffffffb2c] = a0\n 47045: a0 = u64 [sp + 0x178]\n 47049: a1 = sp + 0x1000\n 47053: u8 [a1 + 0xfffffffffffffb2b] = a0\n 47057: a0 = u64 [sp + 0x170]\n 47061: a1 = sp + 0x1000\n 47065: u8 [a1 + 0xfffffffffffffb2a] = a0\n 47069: a0 = u64 [sp + 0x168]\n 47073: a1 = sp + 0x1000\n 47077: u8 [a1 + 0xfffffffffffffb29] = a0\n 47081: a0 = u64 [sp + 0x160]\n 47085: a1 = sp + 0x1000\n 47089: u8 [a1 + 0xfffffffffffffb37] = a0\n 47093: a0 = u64 [sp + 0x158]\n 47097: a1 = sp + 0x1000\n 47101: u8 [a1 + 0xfffffffffffffb36] = a0\n 47105: a0 = u64 [sp + 0x150]\n 47109: a1 = sp + 0x1000\n 47113: u8 [a1 + 0xfffffffffffffb35] = a0\n 47117: a0 = u64 [sp + 0x148]\n 47121: a1 = sp + 0x1000\n 47125: u8 [a1 + 0xfffffffffffffb34] = a0\n 47129: a0 = u64 [sp + 0x140]\n 47133: a1 = sp + 0x1000\n 47137: u8 [a1 + 0xfffffffffffffb33] = a0\n 47141: u8 [t2 + 0] = 0\n 47143: u8 [t2 + 4294967295] = 0\n 47146: u8 [t2 + 4294967294] = 0\n 47149: u8 [t2 + 4294967293] = 0\n 47152: u8 [t2 + 4294967292] = 0\n 47155: u8 [t2 + 4294967291] = 0\n 47158: u8 [t2 + 4294967290] = 0\n 47161: u8 [t2 + 4294967289] = 0\n 47164: u8 [t2 + 4294967288] = 0\n 47167: u8 [t2 + 4294967287] = 0\n 47170: u8 [t2 + 4294967286] = 0\n 47173: u8 [t2 + 4294967285] = 0\n 47176: u8 [t2 + 4294967284] = 0\n 47179: u8 [t2 + 4294967283] = 0\n 47182: u8 [t2 + 4294967282] = 0\n 47185: u8 [t2 + 4294967281] = 0\n 47188: u8 [t2 + 4294967280] = 0\n 47191: u8 [t2 + 4294967279] = 0\n 47194: u8 [t2 + 4294967278] = 0\n 47197: u8 [t2 + 4294967277] = 0\n 47200: u8 [t2 + 4294967276] = 0\n 47203: u8 [t2 + 4294967275] = 0\n 47206: u8 [t2 + 4294967274] = 0\n 47209: u8 [t2 + 4294967273] = 0\n 47212: u8 [t2 + 4294967272] = 0\n 47215: u8 [t2 + 4294967271] = 0\n 47218: u8 [t2 + 4294967270] = 0\n 47221: u8 [t2 + 4294967269] = 0\n 47224: u8 [t2 + 4294967268] = 0\n 47227: u8 [t2 + 4294967267] = 0\n 47230: u8 [t2 + 4294967266] = 0\n 47233: u8 [t2 + 4294967265] = 0\n 47236: a0 = u64 [sp + 0x310]\n 47240: a1 = sp + 0x1000\n 47244: u8 [a1 + 0xfffffffffffffb20] = a0\n 47248: a0 = u64 [sp + 0x308]\n 47252: a1 = sp + 0x1000\n 47256: u8 [a1 + 0xfffffffffffffb28] = a0\n 47260: a0 = u64 [sp + 0x300]\n 47264: a1 = sp + 0x1000\n 47268: u8 [a1 + 0xfffffffffffffb30] = a0\n 47272: a0 = sp + 0x1000\n 47276: u8 [a0 + 0xfffffffffffffb38] = ra\n 47280: a0 = u64 [sp + 0x360]\n 47284: a1 = sp + 0x1000\n 47288: u8 [a1 + 0xfffffffffffffb32] = a0\n 47292: a0 = u64 [sp + 0x358]\n 47296: a1 = sp + 0x1000\n 47300: u8 [a1 + 0xfffffffffffffb31] = a0\n 47304: a0 = u64 [sp + 0x350]\n 47308: a1 = sp + 0x1000\n 47312: u8 [a1 + 0xfffffffffffffb3f] = a0\n 47316: a0 = u64 [sp + 0x348]\n 47320: a1 = sp + 0x1000\n 47324: u8 [a1 + 0xfffffffffffffb3e] = a0\n 47328: a0 = u64 [sp + 0x318]\n 47332: a1 = sp + 0x1000\n 47336: u8 [a1 + 0xfffffffffffffb3d] = a0\n 47340: a0 = u64 [sp + 0x260]\n 47344: a1 = sp + 0x1000\n 47348: u8 [a1 + 0xfffffffffffffb3c] = a0\n 47352: a0 = u64 [sp + 0x258]\n 47356: a1 = sp + 0x1000\n 47360: u8 [a1 + 0xfffffffffffffb3b] = a0\n 47364: a0 = u64 [sp + 0x220]\n 47368: a1 = sp + 0x1000\n 47372: u8 [a1 + 0xfffffffffffffb3a] = a0\n 47376: a0 = u64 [sp + 0x208]\n 47380: a1 = sp + 0x1000\n 47384: u8 [a1 + 0xfffffffffffffb39] = a0\n 47388: s1 = u64 [sp + 0x3a8]\n 47392: a0 = s1 << 0x38\n 47395: a0 = a0 >> 0x3b\n 47398: a1 = sp + 0x7ff\n 47402: a1 = a1 + 0x321\n 47406: a1 = a1 + a0\n 47409: a0 = u8 [a1 + 0x11]\n 47412: a2 = u8 [a1 + 0x10]\n 47415: a3 = u8 [a1 + 0x12]\n 47418: ra = a4\n 47420: a4 = u8 [a1 + 0x13]\n 47423: a0 = a0 << 0x8\n 47426: a0 = a0 | a2\n 47429: a3 = a3 << 0x10\n 47432: a4 = a4 << 0x18\n 47435: a3 = a3 | a4\n 47438: a0 = a0 | a3\n 47441: a2 = u8 [a1 + 0x15]\n 47444: a3 = u8 [a1 + 0x14]\n 47447: a4 = u8 [a1 + 0x16]\n 47450: a5 = u8 [a1 + 0x17]\n 47453: a2 = a2 << 0x8\n 47456: a2 = a2 | a3\n 47459: a4 = a4 << 0x10\n 47462: a5 = a5 << 0x18\n 47465: a4 = a4 | a5\n 47468: a2 = a2 | a4\n 47471: a2 = a2 << 0x20\n 47474: t1 = a2 | a0\n 47477: a2 = s1 & 0x7\n 47480: t0 = t1 >> a2\n 47483: a0 = u8 [a1 + 0x19]\n 47486: a4 = u8 [a1 + 0x18]\n 47489: s1 = u8 [a1 + 0x1a]\n 47492: a3 = u8 [a1 + 0x1b]\n 47495: a0 = a0 << 0x8\n 47498: a0 = a0 | a4\n 47501: s1 = s1 << 0x10\n 47504: a3 = a3 << 0x18\n 47507: a3 = a3 | s1\n 47510: a0 = a0 | a3\n 47513: a3 = u8 [a1 + 0x1d]\n 47516: a4 = u8 [a1 + 0x1c]\n 47519: s1 = u8 [a1 + 0x1e]\n 47522: a5 = u8 [a1 + 0x1f]\n 47525: a3 = a3 << 0x8\n 47528: a3 = a3 | a4\n 47531: s1 = s1 << 0x10\n 47534: a5 = a5 << 0x18\n 47537: a5 = a5 | s1\n 47540: a3 = a3 | a5\n 47543: a3 = a3 << 0x20\n 47546: a0 = a0 | a3\n 47549: u64 [sp + 0x358] = a0\n 47553: a0 = a0 << 0x1\n 47556: t2 = a2 ^ 0x3f\n 47559: a0 = a0 << t2\n 47562: a0 = t0 | a0\n 47565: u64 [sp + 0x360] = a0\n 47569: a0 = u8 [a1 + 0x9]\n 47572: a3 = u8 [a1 + 0x8]\n 47575: a5 = u8 [a1 + 0xa]\n 47578: a4 = u8 [a1 + 0xb]\n 47581: a0 = a0 << 0x8\n 47584: a0 = a0 | a3\n 47587: a5 = a5 << 0x10\n 47590: a4 = a4 << 0x18\n 47593: a4 = a4 | a5\n 47596: a0 = a0 | a4\n 47599: a3 = u8 [a1 + 0xd]\n 47602: a4 = u8 [a1 + 0xc]\n 47605: a5 = u8 [a1 + 0xe]\n 47608: s1 = u8 [a1 + 0xf]\n 47611: a3 = a3 << 0x8\n 47614: a3 = a3 | a4\n 47617: a5 = a5 << 0x10\n 47620: s1 = s1 << 0x18\n 47623: a5 = a5 | s1\n 47626: a3 = a3 | a5\n 47629: a3 = a3 << 0x20\n 47632: a5 = a3 | a0\n 47635: a0 = a5 >> a2\n 47638: t1 = t1 << 0x1\n 47641: a3 = a2 ^ 0xffffffffffffffff\n 47644: a3 = t1 << a3\n 47647: a3 = a3 | a0\n 47650: a0 = u8 [a1 + 0x1]\n 47653: a4 = u8 [a1]\n 47655: s1 = u8 [a1 + 0x2]\n 47658: t1 = u8 [a1 + 0x3]\n 47661: a0 = a0 << 0x8\n 47664: a0 = a0 | a4\n 47667: s1 = s1 << 0x10\n 47670: t1 = t1 << 0x18\n 47673: a4 = t1 | s1\n 47676: t1 = a4 | a0\n 47679: a4 = u8 [a1 + 0x5]\n 47682: s1 = u8 [a1 + 0x4]\n 47685: a0 = u8 [a1 + 0x6]\n 47688: a1 = u8 [a1 + 0x7]\n 47691: a4 = a4 << 0x8\n 47694: a4 = a4 | s1\n 47697: a0 = a0 << 0x10\n 47700: a1 = a1 << 0x18\n 47703: a0 = a0 | a1\n 47706: a0 = a0 | a4\n 47709: a0 = a0 << 0x20\n 47712: a0 = a0 | t1\n 47715: a0 = a0 >> a2\n 47718: a5 = a5 << 0x1\n 47721: a1 = a5 << t2\n 47724: a5 = u64 [sp + 0x130]\n 47728: t1 = a0 | a1\n 47731: a0 = u64 [sp + 0x358]\n 47735: t0 = a0 >> a2\n 47738: a1 = u64 [sp + 0x3b8]\n 47742: a0 = a1 <u 0x1\n 47745: a2 = u64 [sp + 0x3b0]\n 47749: a0 = a2 - a0\n 47752: u64 [sp + 0x350] = a0\n 47756: a0 = a1 | a2\n 47759: a0 = a0 >u 0\n 47761: a0 = a0 + 0xffffffffffffffff\n 47764: u64 [sp + 0x348] = a0\n 47768: a1 = a1 + 0xffffffffffffffff\n 47771: u64 [sp + 0x318] = a1\n 47775: s1 = u64 [sp + 0x3a0]\n 47779: fallthrough\n      : @252 (gas: 89)\n 47780: u64 [sp + 0x380] = ra\n 47784: u64 [sp + 856] = 0\n 47788: a0 = t1 >> 0x3f\n 47791: a1 = a3 << 0x1\n 47794: a1 = a1 | a0\n 47797: t1 = t1 << 0x1\n 47800: a0 = s1 >> 0x3f\n 47803: ra = a5\n 47805: a5 = t1 | a0\n 47808: a0 = u64 [sp + 0x350]\n 47812: a4 = a0 ^ a1\n 47815: a2 = a0 <u a1\n 47818: a0 = u64 [sp + 0x318]\n 47822: a0 = a0 <u a5\n 47825: a0 = a2 if a4 != 0\n 47828: t2 = t0 << 0x1\n 47831: t0 = u64 [sp + 0x360]\n 47835: a2 = t0 >> 0x3f\n 47838: t1 = t2 | a2\n 47841: a3 = a3 >> 0x3f\n 47844: t0 = t0 << 0x1\n 47847: t0 = t0 | a3\n 47850: a4 = s1 << 0x1\n 47853: a2 = u64 [sp + 0x398]\n 47857: s1 = a2 >> 0x3f\n 47860: t2 = a4 | s1\n 47863: s1 = a2 << 0x1\n 47866: a3 = u64 [sp + 0x388]\n 47870: a2 = a3 >> 0x3f\n 47873: a2 = a2 | s1\n 47876: a3 = a3 << 0x1\n 47879: s1 = u64 [sp + 0x390]\n 47883: a4 = s1 >> 0x3f\n 47886: a4 = a4 | a3\n 47889: s1 = s1 << 0x1\n 47892: s1 = ra | s1\n 47895: u64 [sp + 0x390] = s1\n 47899: ra = u64 [sp + 0x380]\n 47903: s1 = u64 [sp + 0x368]\n 47907: a4 = a4 | s1\n 47910: u64 [sp + 0x388] = a4\n 47914: a2 = a2 | s1\n 47917: u64 [sp + 0x398] = a2\n 47921: a2 = s1 | t2\n 47924: u64 [sp + 0x3a0] = a2\n 47928: a3 = u64 [sp + 0x348]\n 47932: a2 = a3 - t0\n 47935: a0 = a2 <u a0\n 47938: a2 = a3 <u t0\n 47941: a4 = a3 - t1\n 47944: a4 = a4 - a2\n 47947: a0 = a4 - a0\n 47950: a0 = a0 >>a 0x3f\n 47953: a2 = u64 [sp + 0x3b8]\n 47957: a2 = a2 & a0\n 47960: a4 = u64 [sp + 0x3b0]\n 47964: a4 = a4 & a0\n 47967: a3 = a1 ^ a4\n 47970: s1 = a1 <u a4\n 47973: t2 = a5 <u a2\n 47976: s1 = t2 if a3 == 0\n 47979: a3 = t0 - s1\n 47982: u64 [sp + 0x360] = a3\n 47986: a3 = t0 <u s1\n 47989: t0 = t1 - a3\n 47992: a1 = a1 - a4\n 47995: a3 = a1 - t2\n 47998: t1 = a5 - a2\n 48001: a5 = u64 [sp + 0x3a8]\n 48005: s1 = u64 [sp + 0x378]\n 48009: a1 = a5 | s1\n 48012: a1 = a1 <u 0x1\n 48015: a4 = u64 [sp + 0x370]\n 48019: a2 = a4 <u a1\n 48022: a1 = a4 - a1\n 48025: a4 = a5 <u 0x1\n 48028: s1 = s1 - a4\n 48031: ra = ra - a2\n 48034: a5 = a5 + 0xffffffffffffffff\n 48037: u64 [sp + 0x378] = s1\n 48041: a2 = s1 | ra\n 48044: s1 = u64 [sp + 0x3a0]\n 48048: u64 [sp + 0x3a8] = a5\n 48052: a4 = a5 | a1\n 48055: a2 = a2 | a4\n 48058: a5 = a0 & 0x1\n 48061: u64 [sp + 0x370] = a1\n 48065: u64 [sp + 872] = 0\n 48069: jump @252 if a2 != 0\n      : @253 (gas: 1)\n 48073: jump @258\n      : @254 (gas: 3)\n 48076: a5 = 0\n 48078: u64 [sp + 840] = 0\n 48082: fallthrough\n      : @255 (gas: 21)\n 48083: a2 = u64 [sp + 0x390]\n 48087: a0 = a2 >> 0x3f\n 48090: a1 = u64 [sp + 0x3a8]\n 48094: a1 = a1 << 0x1\n 48097: a3 = a1 | a0\n 48100: a4 = u64 [sp + 0x3a0]\n 48104: a0 = a4 >> 0x3f\n 48107: a1 = a2 << 0x1\n 48110: a2 = a1 | a0\n 48113: a0 = u64 [sp + 0x398]\n 48117: a1 = a0 >> 0x3f\n 48120: a4 = a4 << 0x1\n 48123: a0 = a0 << 0x1\n 48126: a0 = a0 | a5\n 48129: a5 = u64 [sp + 0x348]\n 48133: a1 = a1 | a5\n 48136: a1 = a1 | a4\n 48139: t1 = a5 | a2\n 48142: a5 = a5 | a3\n 48145: t2 = u64 [sp + 0x3d8]\n 48149: fallthrough\n      : @256 (gas: 62)\n 48150: u64 [sp + 0x3a8] = a5\n 48154: ra = u64 [sp + 0x3c0]\n 48158: a3 = ra mulhu a0\n 48161: t0 = u64 [sp + 0x3d0]\n 48165: a5 = t0 * a0\n 48168: a3 = a3 + a5\n 48171: a5 = a3 <u a5\n 48174: s1 = t0 mulhu a0\n 48177: s1 = s1 + a5\n 48180: a5 = ra * a1\n 48183: a3 = a3 + a5\n 48186: a5 = a3 <u a5\n 48189: a4 = ra mulhu a1\n 48192: a4 = a4 + a5\n 48195: a4 = a4 + s1\n 48198: a5 = t0 * a1\n 48201: a2 = a5 + a4\n 48204: a5 = a2 <u a5\n 48207: a4 = a4 <u s1\n 48210: s1 = t0 mulhu a1\n 48213: a4 = a4 + s1\n 48216: a4 = a4 + a5\n 48219: u64 [sp + 0x3a0] = a4\n 48223: a5 = t1 * t0\n 48226: s1 = t1 mulhu ra\n 48229: a5 = a5 + s1\n 48232: a4 = u64 [sp + 0x3a8]\n 48236: s1 = a4 * ra\n 48239: t0 = a5 + s1\n 48242: a5 = u64 [sp + 0x3c8]\n 48246: s1 = a0 mulhu a5\n 48249: a4 = a0 * t2\n 48252: a4 = a4 + s1\n 48255: a1 = a1 * a5\n 48258: a1 = a1 + a4\n 48261: a4 = a0 * a5\n 48264: s1 = t1 * ra\n 48267: a4 = a4 + s1\n 48270: a1 = a1 + t0\n 48273: a5 = a2 + a4\n 48276: t0 = a5 <u a2\n 48279: a4 = a4 <u s1\n 48282: a1 = a1 + a4\n 48285: a2 = u64 [sp + 0x3a0]\n 48289: a1 = a1 + a2\n 48292: t2 = ra * a0\n 48295: a0 = 0xffffffffffffffff - t0\n 48298: t0 = a0 - a1\n 48301: t1 = a5 >u 0xffffffffffffffff\n 48304: a1 = a3 ^ 0xffffffffffffffff\n 48307: s1 = a3 >u 0xffffffffffffffff\n 48310: a0 = t2 >u 0xffffffffffffffff\n 48313: s1 = a0 if a1 == 0\n 48316: a4 = 0xffffffffffffffff - a5\n 48319: a5 = a4 <u s1\n 48322: a1 = t1 + a5\n 48325: t1 = t0 - a1\n 48328: t0 = a4 - s1\n 48331: a0 = 0xffffffffffffffff - a0\n 48334: a0 = a0 - a3\n 48337: s1 = 0xffffffffffffffff - t2\n 48340: jump @275\n      : @257 (gas: 4)\n 48343: a5 = 0\n 48345: u64 [sp + 856] = 0\n 48349: s1 = u64 [sp + 0x3a0]\n 48353: fallthrough\n      : @258 (gas: 21)\n 48354: a2 = u64 [sp + 0x398]\n 48358: a0 = a2 >> 0x3f\n 48361: a1 = s1 << 0x1\n 48364: a1 = a1 | a0\n 48367: a4 = u64 [sp + 0x388]\n 48371: a0 = a4 >> 0x3f\n 48374: a2 = a2 << 0x1\n 48377: a2 = a2 | a0\n 48380: a0 = u64 [sp + 0x390]\n 48384: a3 = a0 >> 0x3f\n 48387: a4 = a4 << 0x1\n 48390: a0 = a0 << 0x1\n 48393: ra = a5 | a0\n 48396: a5 = u64 [sp + 0x358]\n 48400: a3 = a3 | a5\n 48403: t1 = a3 | a4\n 48406: a0 = a5 | a2\n 48409: u64 [sp + 0x398] = a0\n 48413: a0 = a5 | a1\n 48416: u64 [sp + 0x388] = a0\n 48420: fallthrough\n      : @259 (gas: 71)\n 48421: a2 = u64 [sp + 0x3b8]\n 48425: a3 = ra mulhu a2\n 48428: a4 = t1 * a2\n 48431: a3 = a3 + a4\n 48434: a4 = a3 <u a4\n 48437: a5 = t1 mulhu a2\n 48440: t0 = a5 + a4\n 48443: a0 = u64 [sp + 0x3b0]\n 48447: a4 = ra * a0\n 48450: t2 = a4 + a3\n 48453: a3 = t2 <u a4\n 48456: a4 = ra mulhu a0\n 48459: a3 = a3 + a4\n 48462: a4 = t0 + a3\n 48465: s1 = t1 * a0\n 48468: a3 = s1 + a4\n 48471: a1 = u64 [sp + 0x398]\n 48475: a5 = a2 * a1\n 48478: a5 = a5 + a3\n 48481: s1 = a3 <u s1\n 48484: a3 = a5 <u a3\n 48487: u64 [sp + 0x3a8] = a3\n 48491: a4 = a4 <u t0\n 48494: a3 = t1 mulhu a0\n 48497: a3 = a3 + a4\n 48500: t0 = a3 + s1\n 48503: a4 = a2 mulhu a1\n 48506: a3 = u64 [sp + 0x388]\n 48510: s1 = a2 * a3\n 48513: a4 = a4 + s1\n 48516: s1 = a0 * a1\n 48519: a4 = a4 + s1\n 48522: a3 = t0 + a4\n 48525: a2 = ra * a2\n 48528: u64 [sp + 0x380] = a2\n 48532: a0 = u64 [sp + 0x2d0]\n 48536: a4 = u64 [sp + 0x3a8]\n 48540: s1 = a0 - a4\n 48543: s1 = s1 - a3\n 48546: u64 [sp + 0x3a8] = s1\n 48550: a0 = u64 [sp + 0x308]\n 48554: u64 [sp + 0x390] = t2\n 48558: s1 = a0 ^ t2\n 48561: a3 = a0 <u t2\n 48564: t2 = u64 [sp + 0x310]\n 48568: a4 = t2 <u a2\n 48571: a3 = a4 if s1 == 0\n 48574: a2 = u64 [sp + 0x300]\n 48578: s1 = a2 <u a5\n 48581: a5 = a2 - a5\n 48584: t0 = a5 <u a3\n 48587: t0 = t0 + s1\n 48590: s1 = a1\n 48592: a1 = u64 [sp + 0x3a8]\n 48596: a1 = a1 - t0\n 48599: u64 [sp + 0x3a0] = a1\n 48603: a2 = a5 - a3\n 48606: a3 = a0 - a4\n 48609: a0 = u64 [sp + 0x390]\n 48613: a3 = a3 - a0\n 48616: a0 = u64 [sp + 0x380]\n 48620: a0 = t2 - a0\n 48623: u64 [sp + 0x3a8] = a0\n 48627: a1 = u64 [sp + 0x210]\n 48631: a1 = a1 & 0xffffffffffffffff\n 48634: u64 [sp + 0x380] = a1\n 48638: a1 = u64 [sp + 0x218]\n 48642: a0 = a1 & 0xffffffffffffffff\n 48645: u64 [sp + 0x378] = a0\n 48649: a1 = u64 [sp + 0x388]\n 48653: jump @261\n      : @260 (gas: 35)\n 48655: a4 = u64 [sp + 0x3b8]\n 48659: a0 = u64 [sp + 0x3a8]\n 48663: a4 = a4 + a0\n 48666: a0 = a4 <u a0\n 48669: a5 = u64 [sp + 0x3b0]\n 48673: a5 = a5 + a3\n 48676: a5 = a5 + a0\n 48679: a2 = a5 ^ a3\n 48682: a3 = a5 <u a3\n 48685: a3 = a0 if a2 == 0\n 48688: a0 = a5 + 0x1\n 48691: a2 = a5 <u 0xffffffffffffffff\n 48694: t2 = a4 <u 0xffffffffffffffff\n 48697: t2 = a2 if a0 != 0\n 48700: a0 = ra <u 0x1\n 48703: t0 = t1 - a0\n 48706: a0 = ra | t1\n 48709: a0 = a0 <u 0x1\n 48712: a2 = s1 <u a0\n 48715: a0 = s1 - a0\n 48718: a1 = a1 - a2\n 48721: s1 = u64 [sp + 0x390]\n 48725: a2 = s1 + a3\n 48728: a3 = a2 <u s1\n 48731: s1 = u64 [sp + 0x3a0]\n 48735: s1 = s1 + a3\n 48738: u64 [sp + 0x3a0] = s1\n 48742: a3 = a2 | s1\n 48745: t2 = 0 if a3 != 0\n 48747: ra = ra + 0xffffffffffffffff\n 48750: t1 = t0\n 48752: s1 = a0\n 48754: u64 [sp + 0x3a8] = a4\n 48758: a3 = a5\n 48760: jump @264 if t2 == 0\n      : @261 (gas: 11)\n 48764: u64 [sp + 0x390] = a2\n 48768: a4 = s1 >u 0\n 48770: a5 = a1 >u 0\n 48772: a5 = a4 if a1 == 0\n 48775: a4 = t1 + 0x1\n 48778: a0 = ra + 0x1\n 48781: a0 = a0 <u 0x1\n 48784: a0 = 0 if a4 != 0\n 48786: a4 = s1 | a1\n 48789: a0 = a5 if a4 != 0\n 48792: jump @260 if a0 != 0\n      : @262 (gas: 56)\n 48796: t2 = s1\n 48798: s1 = u64 [sp + 0x338]\n 48802: a0 = ra mulhu s1\n 48805: a4 = t1 * s1\n 48808: a0 = a0 + a4\n 48811: a4 = a0 <u a4\n 48814: a5 = t1 mulhu s1\n 48817: a2 = a5 + a4\n 48820: u64 [sp + 0x388] = a1\n 48824: a1 = u64 [sp + 0x340]\n 48828: a4 = ra * a1\n 48831: u64 [sp + 0x398] = t1\n 48835: t1 = a4 + a0\n 48838: a4 = t1 <u a4\n 48841: a0 = ra mulhu a1\n 48844: a0 = a0 + a4\n 48847: a5 = a2 + a0\n 48850: a0 = u64 [sp + 0x398]\n 48854: a4 = a0 * a1\n 48857: a0 = a4 + a5\n 48860: a4 = a0 <u a4\n 48863: a2 = a5 <u a2\n 48866: a5 = u64 [sp + 0x398]\n 48870: a5 = a5 mulhu a1\n 48873: a2 = a2 + a5\n 48876: a2 = a2 + a4\n 48879: a4 = s1 mulhu t2\n 48882: a5 = u64 [sp + 0x388]\n 48886: a5 = s1 * a5\n 48889: a4 = a4 + a5\n 48892: a5 = a1 * t2\n 48895: a1 = u64 [sp + 0x388]\n 48899: a4 = a4 + a5\n 48902: a5 = s1 * t2\n 48905: a5 = a5 + a0\n 48908: a0 = a5 <u a0\n 48911: a2 = a2 + a4\n 48914: a0 = a0 + a2\n 48917: t0 = ra * s1\n 48920: s1 = t2\n 48922: a2 = u64 [sp + 0x378]\n 48926: a4 = t1 ^ a2\n 48929: t2 = a2 <u t1\n 48932: t1 = u64 [sp + 0x398]\n 48936: a2 = u64 [sp + 0x380]\n 48940: a2 = a2 <u t0\n 48943: a2 = t2 if a4 != 0\n 48946: t0 = a0 ^ a3\n 48949: t2 = a3 <u a0\n 48952: a4 = u64 [sp + 0x3a8]\n 48956: a0 = a4 <u a5\n 48959: a0 = t2 if t0 != 0\n 48962: a5 = a5 ^ a4\n 48965: a4 = a5 | t0\n 48968: a2 = a0 if a4 != 0\n 48971: jump @260 if a2 != 0\n      : @263 (gas: 2)\n 48975: t0 = t1\n 48977: fallthrough\n      : @264 (gas: 374)\n 48978: a1 = t0 & 0xffffffffffffffff\n 48981: a0 = ra & 0xffffffffffffffff\n 48984: t1 = u64 [sp + 0x338]\n 48988: a2 = a0 mulhu t1\n 48991: a3 = a1 * t1\n 48994: a2 = a2 + a3\n 48997: a3 = a2 <u a3\n 49000: a4 = a1 mulhu t1\n 49003: t0 = a4 + a3\n 49006: s1 = u64 [sp + 0x340]\n 49010: a4 = a0 * s1\n 49013: ra = a4 + a2\n 49016: a4 = ra <u a4\n 49019: a5 = a0 mulhu s1\n 49022: a4 = a4 + a5\n 49025: a3 = t0 + a4\n 49028: a5 = a1 * s1\n 49031: a4 = a5 + a3\n 49034: a3 = a3 <u t0\n 49037: s1 = a1 mulhu s1\n 49040: t0 = s1 + a3\n 49043: a3 = u64 [sp + 0x3b8]\n 49047: s1 = a3 * a0\n 49050: s1 = s1 + a4\n 49053: a5 = a4 <u a5\n 49056: a4 = s1 <u a4\n 49059: t0 = t0 + a5\n 49062: a1 = a3 * a1\n 49065: a5 = a3 mulhu a0\n 49068: a1 = a1 + a5\n 49071: a5 = u64 [sp + 0x3b0]\n 49075: a5 = a5 * a0\n 49078: a1 = a1 + a5\n 49081: a1 = a1 + t0\n 49084: t0 = a1 + a4\n 49087: t2 = a0 * t1\n 49090: a1 = u64 [sp + 0x310]\n 49094: a0 = a1 <u s1\n 49097: a4 = u64 [sp + 0x308]\n 49101: t1 = a4 - a0\n 49104: a4 = u64 [sp + 0x378]\n 49108: a0 = a4 ^ ra\n 49111: a5 = a4 <u ra\n 49114: a3 = u64 [sp + 0x380]\n 49118: a2 = a3 <u t2\n 49121: a5 = a2 if a0 == 0\n 49124: a1 = a1 - s1\n 49127: s1 = a1 <u a5\n 49130: a0 = t1 - s1\n 49133: a0 = a0 - t0\n 49136: a1 = a1 - a5\n 49139: a4 = a4 - a2\n 49142: a2 = a4 - ra\n 49145: a3 = a3 - t2\n 49148: a4 = sp + 0x1000\n 49152: u8 [a4 + 4294966047] = 0\n 49156: a4 = sp + 0x1000\n 49160: u8 [a4 + 4294966046] = 0\n 49164: a4 = sp + 0x1000\n 49168: u8 [a4 + 4294966045] = 0\n 49172: a4 = sp + 0x1000\n 49176: u8 [a4 + 4294966044] = 0\n 49180: a4 = sp + 0x1000\n 49184: u8 [a4 + 4294966043] = 0\n 49188: a4 = sp + 0x1000\n 49192: u8 [a4 + 4294966042] = 0\n 49196: a4 = sp + 0x1000\n 49200: u8 [a4 + 4294966041] = 0\n 49204: a4 = sp + 0x1000\n 49208: u8 [a4 + 4294966040] = 0\n 49212: a4 = sp + 0x1000\n 49216: u8 [a4 + 4294966039] = 0\n 49220: a4 = sp + 0x1000\n 49224: u8 [a4 + 4294966038] = 0\n 49228: a4 = sp + 0x1000\n 49232: u8 [a4 + 4294966037] = 0\n 49236: a4 = sp + 0x1000\n 49240: u8 [a4 + 4294966036] = 0\n 49244: a4 = sp + 0x1000\n 49248: u8 [a4 + 4294966035] = 0\n 49252: a4 = sp + 0x1000\n 49256: u8 [a4 + 4294966034] = 0\n 49260: a4 = sp + 0x1000\n 49264: u8 [a4 + 4294966033] = 0\n 49268: a4 = sp + 0x1000\n 49272: u8 [a4 + 4294966032] = 0\n 49276: a4 = sp + 0x1000\n 49280: u8 [a4 + 4294966031] = 0\n 49284: a4 = sp + 0x1000\n 49288: u8 [a4 + 4294966030] = 0\n 49292: a4 = sp + 0x1000\n 49296: u8 [a4 + 4294966029] = 0\n 49300: a4 = sp + 0x1000\n 49304: u8 [a4 + 4294966028] = 0\n 49308: a4 = sp + 0x1000\n 49312: u8 [a4 + 4294966027] = 0\n 49316: a4 = sp + 0x1000\n 49320: u8 [a4 + 4294966026] = 0\n 49324: a4 = sp + 0x1000\n 49328: u8 [a4 + 4294966025] = 0\n 49332: a4 = sp + 0x1000\n 49336: u8 [a4 + 4294966024] = 0\n 49340: a4 = sp + 0x1000\n 49344: u8 [a4 + 4294966023] = 0\n 49348: a4 = sp + 0x1000\n 49352: u8 [a4 + 4294966022] = 0\n 49356: a4 = sp + 0x1000\n 49360: u8 [a4 + 4294966021] = 0\n 49364: a4 = sp + 0x1000\n 49368: u8 [a4 + 4294966020] = 0\n 49372: a4 = sp + 0x1000\n 49376: u8 [a4 + 4294966019] = 0\n 49380: a4 = sp + 0x1000\n 49384: u8 [a4 + 4294966018] = 0\n 49388: a4 = sp + 0x1000\n 49392: u8 [a4 + 4294966017] = 0\n 49396: a4 = sp + 0x1000\n 49400: u8 [a4 + 4294966016] = 0\n 49404: a4 = sp + 0x1000\n 49408: u8 [a4 + 0xfffffffffffffae0] = a3\n 49412: a4 = a3 >> 0x38\n 49415: a5 = sp + 0x1000\n 49419: u8 [a5 + 0xfffffffffffffae7] = a4\n 49423: a4 = a3 >> 0x30\n 49426: a5 = sp + 0x1000\n 49430: u8 [a5 + 0xfffffffffffffae6] = a4\n 49434: a4 = a3 >> 0x28\n 49437: a5 = sp + 0x1000\n 49441: u8 [a5 + 0xfffffffffffffae5] = a4\n 49445: a4 = a3 >> 0x20\n 49448: a5 = sp + 0x1000\n 49452: u8 [a5 + 0xfffffffffffffae4] = a4\n 49456: a4 = a3 >> 0x18\n 49459: a5 = sp + 0x1000\n 49463: u8 [a5 + 0xfffffffffffffae3] = a4\n 49467: a4 = a3 >> 0x10\n 49470: a5 = sp + 0x1000\n 49474: u8 [a5 + 0xfffffffffffffae2] = a4\n 49478: a3 = a3 >> 0x8\n 49481: a4 = sp + 0x1000\n 49485: u8 [a4 + 0xfffffffffffffae1] = a3\n 49489: a3 = sp + 0x1000\n 49493: u8 [a3 + 0xfffffffffffffae8] = a2\n 49497: a3 = a2 >> 0x38\n 49500: a4 = sp + 0x1000\n 49504: u8 [a4 + 0xfffffffffffffaef] = a3\n 49508: a3 = a2 >> 0x30\n 49511: a4 = sp + 0x1000\n 49515: u8 [a4 + 0xfffffffffffffaee] = a3\n 49519: a3 = a2 >> 0x28\n 49522: a4 = sp + 0x1000\n 49526: u8 [a4 + 0xfffffffffffffaed] = a3\n 49530: a3 = a2 >> 0x20\n 49533: a4 = sp + 0x1000\n 49537: u8 [a4 + 0xfffffffffffffaec] = a3\n 49541: a3 = a2 >> 0x18\n 49544: a4 = sp + 0x1000\n 49548: u8 [a4 + 0xfffffffffffffaeb] = a3\n 49552: a3 = a2 >> 0x10\n 49555: a4 = sp + 0x1000\n 49559: u8 [a4 + 0xfffffffffffffaea] = a3\n 49563: a2 = a2 >> 0x8\n 49566: a3 = sp + 0x1000\n 49570: u8 [a3 + 0xfffffffffffffae9] = a2\n 49574: a2 = sp + 0x1000\n 49578: u8 [a2 + 0xfffffffffffffaf0] = a1\n 49582: a2 = a1 >> 0x38\n 49585: a3 = sp + 0x1000\n 49589: u8 [a3 + 0xfffffffffffffaf7] = a2\n 49593: a2 = a1 >> 0x30\n 49596: a3 = sp + 0x1000\n 49600: u8 [a3 + 0xfffffffffffffaf6] = a2\n 49604: a2 = a1 >> 0x28\n 49607: a3 = sp + 0x1000\n 49611: u8 [a3 + 0xfffffffffffffaf5] = a2\n 49615: a2 = a1 >> 0x20\n 49618: a3 = sp + 0x1000\n 49622: u8 [a3 + 0xfffffffffffffaf4] = a2\n 49626: a2 = a1 >> 0x18\n 49629: a3 = sp + 0x1000\n 49633: u8 [a3 + 0xfffffffffffffaf3] = a2\n 49637: a2 = a1 >> 0x10\n 49640: a3 = sp + 0x1000\n 49644: u8 [a3 + 0xfffffffffffffaf2] = a2\n 49648: a1 = a1 >> 0x8\n 49651: a2 = sp + 0x1000\n 49655: u8 [a2 + 0xfffffffffffffaf1] = a1\n 49659: a1 = sp + 0x1000\n 49663: u8 [a1 + 0xfffffffffffffaf8] = a0\n 49667: a1 = a0 >> 0x38\n 49670: a2 = sp + 0x1000\n 49674: u8 [a2 + 0xfffffffffffffaff] = a1\n 49678: a1 = a0 >> 0x30\n 49681: a2 = sp + 0x1000\n 49685: u8 [a2 + 0xfffffffffffffafe] = a1\n 49689: a1 = a0 >> 0x28\n 49692: a2 = sp + 0x1000\n 49696: u8 [a2 + 0xfffffffffffffafd] = a1\n 49700: a1 = a0 >> 0x20\n 49703: a2 = sp + 0x1000\n 49707: u8 [a2 + 0xfffffffffffffafc] = a1\n 49711: a1 = a0 >> 0x18\n 49714: a2 = sp + 0x1000\n 49718: u8 [a2 + 0xfffffffffffffafb] = a1\n 49722: a1 = a0 >> 0x10\n 49725: a2 = sp + 0x1000\n 49729: u8 [a2 + 0xfffffffffffffafa] = a1\n 49733: a0 = a0 >> 0x8\n 49736: a1 = sp + 0x1000\n 49740: u8 [a1 + 0xfffffffffffffaf9] = a0\n 49744: a0 = u64 [sp + 0x1f0]\n 49748: a1 = sp + 0x7ff\n 49752: a1 = a1 + 0x2e1\n 49756: a0 = a0 + a1\n 49759: a1 = u8 [a0 + 0x1]\n 49762: a2 = u8 [a0]\n 49764: a3 = u8 [a0 + 0x2]\n 49767: a4 = u8 [a0 + 0x3]\n 49770: a1 = a1 << 0x8\n 49773: a1 = a1 | a2\n 49776: a3 = a3 << 0x10\n 49779: a4 = a4 << 0x18\n 49782: a3 = a3 | a4\n 49785: a1 = a1 | a3\n 49788: a2 = u8 [a0 + 0x5]\n 49791: a3 = u8 [a0 + 0x4]\n 49794: a4 = u8 [a0 + 0x6]\n 49797: a5 = u8 [a0 + 0x7]\n 49800: a2 = a2 << 0x8\n 49803: a2 = a2 | a3\n 49806: a4 = a4 << 0x10\n 49809: a5 = a5 << 0x18\n 49812: a4 = a4 | a5\n 49815: a2 = a2 | a4\n 49818: a2 = a2 << 0x20\n 49821: a1 = a1 | a2\n 49824: t1 = u64 [sp + 0x200]\n 49828: a2 = a1 >> t1\n 49831: a1 = u8 [a0 + 0x9]\n 49834: a3 = u8 [a0 + 0x8]\n 49837: a4 = u8 [a0 + 0xa]\n 49840: a5 = u8 [a0 + 0xb]\n 49843: a1 = a1 << 0x8\n 49846: a1 = a1 | a3\n 49849: a4 = a4 << 0x10\n 49852: a5 = a5 << 0x18\n 49855: a4 = a4 | a5\n 49858: a1 = a1 | a4\n 49861: a3 = u8 [a0 + 0xd]\n 49864: a4 = u8 [a0 + 0xc]\n 49867: a5 = u8 [a0 + 0xe]\n 49870: s1 = u8 [a0 + 0xf]\n 49873: a3 = a3 << 0x8\n 49876: a3 = a3 | a4\n 49879: a5 = a5 << 0x10\n 49882: s1 = s1 << 0x18\n 49885: a5 = a5 | s1\n 49888: a3 = a3 | a5\n 49891: a3 = a3 << 0x20\n 49894: t0 = a3 | a1\n 49897: a3 = t0 << 0x1\n 49900: t2 = u64 [sp + 0x1f8]\n 49904: a3 = a3 << t2\n 49907: a2 = a2 | a3\n 49910: u64 [sp + 0x260] = a2\n 49914: a2 = u8 [a0 + 0x11]\n 49917: a3 = u8 [a0 + 0x10]\n 49920: a4 = u8 [a0 + 0x12]\n 49923: a5 = u8 [a0 + 0x13]\n 49926: a2 = a2 << 0x8\n 49929: a2 = a2 | a3\n 49932: a4 = a4 << 0x10\n 49935: a5 = a5 << 0x18\n 49938: a4 = a4 | a5\n 49941: a2 = a2 | a4\n 49944: a3 = u8 [a0 + 0x15]\n 49947: a4 = u8 [a0 + 0x14]\n 49950: a5 = u8 [a0 + 0x16]\n 49953: s1 = u8 [a0 + 0x17]\n 49956: a3 = a3 << 0x8\n 49959: a3 = a3 | a4\n 49962: a5 = a5 << 0x10\n 49965: s1 = s1 << 0x18\n 49968: a5 = a5 | s1\n 49971: a3 = a3 | a5\n 49974: a3 = a3 << 0x20\n 49977: a2 = a2 | a3\n 49980: a3 = a2 >> t1\n 49983: a4 = u8 [a0 + 0x19]\n 49986: a5 = u8 [a0 + 0x18]\n 49989: s1 = u8 [a0 + 0x1a]\n 49992: a1 = u8 [a0 + 0x1b]\n 49995: a4 = a4 << 0x8\n 49998: a4 = a4 | a5\n 50001: s1 = s1 << 0x10\n 50004: a1 = a1 << 0x18\n 50007: a1 = a1 | s1\n 50010: a1 = a1 | a4\n 50013: a4 = u8 [a0 + 0x1d]\n 50016: a5 = u8 [a0 + 0x1c]\n 50019: s1 = u8 [a0 + 0x1e]\n 50022: a0 = u8 [a0 + 0x1f]\n 50025: a4 = a4 << 0x8\n 50028: a4 = a4 | a5\n 50031: s1 = s1 << 0x10\n 50034: a0 = a0 << 0x18\n 50037: a0 = a0 | s1\n 50040: a0 = a0 | a4\n 50043: a0 = a0 << 0x20\n 50046: a0 = a0 | a1\n 50049: a1 = a0 << 0x1\n 50052: a1 = a1 << t2\n 50055: ra = a3 | a1\n 50058: a1 = t0 >> t1\n 50061: a2 = a2 << 0x1\n 50064: a3 = u64 [sp + 0x1e8]\n 50068: a2 = a2 << a3\n 50071: t0 = a1 | a2\n 50074: t1 = a0 >> t1\n 50077: a0 = clz t0\n 50079: a1 = u64 [sp + 0x260]\n 50083: a1 = clz a1\n 50085: a1 = a1 + 0x40\n 50088: a1 = a0 if t0 != 0\n 50091: a0 = a1 + 0x80\n 50095: a1 = a0 <u a1\n 50098: a2 = ra | t1\n 50101: a1 = 0 if a2 != 0\n 50103: a3 = clz ra\n 50105: a3 = a3 + 0x40\n 50108: s1 = clz t1\n 50110: s1 = a3 if t1 == 0\n 50113: s1 = a0 if a2 == 0\n 50116: a5 = u64 [sp + 0x330]\n 50120: a4 = a5 ^ a1\n 50123: a2 = a5 <u a1\n 50126: a0 = u64 [sp + 0x328]\n 50130: a3 = a0 <u s1\n 50133: a2 = a3 if a4 == 0\n 50136: a4 = a2 <u 0x1\n 50139: t2 = a4 + 0xffffffffffffffff\n 50142: a4 = -a2\n 50144: a5 = a5 - a1\n 50147: a5 = a5 - a3\n 50150: a1 = a0 - s1\n 50153: u64 [sp + 0x3a0] = a4\n 50157: a0 = a4 >u 0\n 50159: a3 = t2 >u 0\n 50161: a3 = a0 if t2 == 0\n 50164: a0 = a1 <u 0x100\n 50168: a0 = a0 ^ 0x1\n 50171: s1 = a5 >u 0\n 50173: a0 = s1 if a5 != 0\n 50176: a0 = a3 if a2 != 0\n 50179: a4 = u64 [sp + 0x260]\n 50183: a2 = a4 | ra\n 50186: a3 = t0 | t1\n 50189: a2 = a2 | a3\n 50192: a2 = a2 <u 0x1\n 50195: a3 = u64 [sp + 0x320]\n 50199: a2 = a2 | a3\n 50202: a0 = a0 | a2\n 50205: u64 [sp + 0x218] = t1\n 50209: t1 = 0 if a0 != 0\n 50211: s1 = t1\n 50213: u64 [sp + 0x220] = ra\n 50217: t1 = ra\n 50219: t1 = 0 if a0 != 0\n 50221: u64 [sp + 0x258] = t0\n 50225: a3 = t0\n 50227: a3 = 0 if a0 != 0\n 50229: t0 = a4\n 50231: t0 = 0 if a0 != 0\n 50233: jump @270 if a0 != 0\n      : @265 (gas: 7)\n 50237: a0 = a1 ^ 0xff\n 50241: a2 = u64 [sp + 0x3a0]\n 50245: a0 = a0 | a2\n 50248: a4 = a5 | t2\n 50251: a0 = a0 | a4\n 50254: ra = s1\n 50256: jump @273 if a0 == 0\n      : @266 (gas: 323)\n 50260: a2 = a1 + 0x1\n 50263: u64 [sp + 0x3a8] = a2\n 50267: a0 = a2 <u 0x1\n 50270: a0 = a0 + a5\n 50273: u64 [sp + 0x378] = a0\n 50277: a0 = a0 | a2\n 50280: a0 = a0 <u 0x1\n 50283: a2 = u64 [sp + 0x3a0]\n 50287: a0 = a0 + a2\n 50290: u64 [sp + 0x370] = a0\n 50294: a0 = a0 <u a2\n 50297: a0 = a0 + t2\n 50300: u64 [sp + 0x380] = a0\n 50304: t0 = 0xff - a1\n 50308: a0 = u64 [sp + 0x260]\n 50312: a1 = sp + 0x1000\n 50316: u8 [a1 + 0xfffffffffffffac0] = a0\n 50320: a1 = sp + 0x1000\n 50324: u8 [a1 + 4294965951] = 0\n 50328: a1 = sp + 0x1000\n 50332: u8 [a1 + 4294965950] = 0\n 50336: a1 = sp + 0x1000\n 50340: u8 [a1 + 4294965949] = 0\n 50344: a1 = sp + 0x1000\n 50348: u8 [a1 + 4294965948] = 0\n 50352: a1 = sp + 0x1000\n 50356: u8 [a1 + 4294965947] = 0\n 50360: a1 = sp + 0x1000\n 50364: u8 [a1 + 4294965946] = 0\n 50368: a1 = sp + 0x1000\n 50372: u8 [a1 + 4294965945] = 0\n 50376: a1 = sp + 0x1000\n 50380: u8 [a1 + 4294965944] = 0\n 50384: a1 = sp + 0x1000\n 50388: u8 [a1 + 4294965943] = 0\n 50392: a1 = sp + 0x1000\n 50396: u8 [a1 + 4294965942] = 0\n 50400: a1 = sp + 0x1000\n 50404: u8 [a1 + 4294965941] = 0\n 50408: a1 = sp + 0x1000\n 50412: u8 [a1 + 4294965940] = 0\n 50416: a1 = sp + 0x1000\n 50420: u8 [a1 + 4294965939] = 0\n 50424: a1 = sp + 0x1000\n 50428: u8 [a1 + 4294965938] = 0\n 50432: a1 = sp + 0x1000\n 50436: u8 [a1 + 4294965937] = 0\n 50440: a1 = sp + 0x1000\n 50444: u8 [a1 + 4294965936] = 0\n 50448: a1 = sp + 0x1000\n 50452: u8 [a1 + 4294965935] = 0\n 50456: a1 = sp + 0x1000\n 50460: u8 [a1 + 4294965934] = 0\n 50464: a1 = sp + 0x1000\n 50468: u8 [a1 + 4294965933] = 0\n 50472: a1 = sp + 0x1000\n 50476: u8 [a1 + 4294965932] = 0\n 50480: a1 = sp + 0x1000\n 50484: u8 [a1 + 4294965931] = 0\n 50488: a1 = sp + 0x1000\n 50492: u8 [a1 + 4294965930] = 0\n 50496: a1 = sp + 0x1000\n 50500: u8 [a1 + 4294965929] = 0\n 50504: a1 = sp + 0x1000\n 50508: u8 [a1 + 4294965928] = 0\n 50512: a1 = sp + 0x1000\n 50516: u8 [a1 + 4294965927] = 0\n 50520: a1 = sp + 0x1000\n 50524: u8 [a1 + 4294965926] = 0\n 50528: a1 = sp + 0x1000\n 50532: u8 [a1 + 4294965925] = 0\n 50536: a1 = sp + 0x1000\n 50540: u8 [a1 + 4294965924] = 0\n 50544: a1 = sp + 0x1000\n 50548: u8 [a1 + 4294965923] = 0\n 50552: a1 = sp + 0x1000\n 50556: u8 [a1 + 4294965922] = 0\n 50560: a1 = sp + 0x1000\n 50564: u8 [a1 + 4294965921] = 0\n 50568: a1 = sp + 0x1000\n 50572: u8 [a1 + 4294965920] = 0\n 50576: a1 = u64 [sp + 0x258]\n 50580: a2 = sp + 0x1000\n 50584: u8 [a2 + 0xfffffffffffffac8] = a1\n 50588: a2 = a0 >> 0x38\n 50591: u64 [sp + 0x208] = a2\n 50595: a3 = sp + 0x1000\n 50599: u8 [a3 + 0xfffffffffffffac7] = a2\n 50603: a2 = a0 >> 0x30\n 50606: u64 [sp + 0x1d0] = a2\n 50610: a3 = sp + 0x1000\n 50614: u8 [a3 + 0xfffffffffffffac6] = a2\n 50618: a2 = a0 >> 0x28\n 50621: u64 [sp + 0x1c8] = a2\n 50625: a3 = sp + 0x1000\n 50629: u8 [a3 + 0xfffffffffffffac5] = a2\n 50633: a2 = a0 >> 0x20\n 50636: u64 [sp + 0x1c0] = a2\n 50640: a3 = sp + 0x1000\n 50644: u8 [a3 + 0xfffffffffffffac4] = a2\n 50648: a2 = a0 >> 0x18\n 50651: u64 [sp + 0x1b8] = a2\n 50655: a3 = sp + 0x1000\n 50659: u8 [a3 + 0xfffffffffffffac3] = a2\n 50663: a2 = a0 >> 0x10\n 50666: u64 [sp + 0x1b0] = a2\n 50670: a3 = sp + 0x1000\n 50674: u8 [a3 + 0xfffffffffffffac2] = a2\n 50678: a0 = a0 >> 0x8\n 50681: u64 [sp + 0x1a8] = a0\n 50685: a2 = sp + 0x1000\n 50689: u8 [a2 + 0xfffffffffffffac1] = a0\n 50693: t2 = u64 [sp + 0x220]\n 50697: a0 = sp + 0x1000\n 50701: u8 [a0 + 0xfffffffffffffad0] = t2\n 50705: a0 = a1 >> 0x38\n 50708: u64 [sp + 0x1a0] = a0\n 50712: a2 = sp + 0x1000\n 50716: u8 [a2 + 0xfffffffffffffacf] = a0\n 50720: a0 = a1 >> 0x30\n 50723: u64 [sp + 0x198] = a0\n 50727: a2 = sp + 0x1000\n 50731: u8 [a2 + 0xffffffffffffface] = a0\n 50735: a0 = a1 >> 0x28\n 50738: u64 [sp + 0x190] = a0\n 50742: a2 = sp + 0x1000\n 50746: u8 [a2 + 0xfffffffffffffacd] = a0\n 50750: a0 = a1 >> 0x20\n 50753: u64 [sp + 0x188] = a0\n 50757: a2 = sp + 0x1000\n 50761: u8 [a2 + 0xfffffffffffffacc] = a0\n 50765: a0 = a1 >> 0x18\n 50768: u64 [sp + 0x180] = a0\n 50772: a2 = sp + 0x1000\n 50776: u8 [a2 + 0xfffffffffffffacb] = a0\n 50780: a0 = a1 >> 0x10\n 50783: u64 [sp + 0x178] = a0\n 50787: a2 = sp + 0x1000\n 50791: u8 [a2 + 0xfffffffffffffaca] = a0\n 50795: a1 = a1 >> 0x8\n 50798: u64 [sp + 0x170] = a1\n 50802: a0 = sp + 0x1000\n 50806: u8 [a0 + 0xfffffffffffffac9] = a1\n 50810: ra = u64 [sp + 0x218]\n 50814: a0 = sp + 0x1000\n 50818: u8 [a0 + 0xfffffffffffffad8] = ra\n 50822: a0 = t2 >> 0x38\n 50825: u64 [sp + 0x168] = a0\n 50829: a1 = sp + 0x1000\n 50833: u8 [a1 + 0xfffffffffffffad7] = a0\n 50837: a0 = t2 >> 0x30\n 50840: u64 [sp + 0x160] = a0\n 50844: a1 = sp + 0x1000\n 50848: u8 [a1 + 0xfffffffffffffad6] = a0\n 50852: a0 = t2 >> 0x28\n 50855: u64 [sp + 0x158] = a0\n 50859: a1 = sp + 0x1000\n 50863: u8 [a1 + 0xfffffffffffffad5] = a0\n 50867: a0 = t2 >> 0x20\n 50870: u64 [sp + 0x150] = a0\n 50874: a1 = sp + 0x1000\n 50878: u8 [a1 + 0xfffffffffffffad4] = a0\n 50882: a0 = t2 >> 0x18\n 50885: u64 [sp + 0x148] = a0\n 50889: a1 = sp + 0x1000\n 50893: u8 [a1 + 0xfffffffffffffad3] = a0\n 50897: a0 = t2 >> 0x10\n 50900: u64 [sp + 0x358] = a0\n 50904: a1 = sp + 0x1000\n 50908: u8 [a1 + 0xfffffffffffffad2] = a0\n 50912: a0 = t2 >> 0x8\n 50915: u64 [sp + 0x350] = a0\n 50919: a1 = sp + 0x1000\n 50923: u8 [a1 + 0xfffffffffffffad1] = a0\n 50927: a0 = ra >> 0x38\n 50930: u64 [sp + 0x348] = a0\n 50934: a1 = sp + 0x1000\n 50938: u8 [a1 + 0xfffffffffffffadf] = a0\n 50942: a0 = ra >> 0x30\n 50945: u64 [sp + 0x318] = a0\n 50949: a1 = sp + 0x1000\n 50953: u8 [a1 + 0xfffffffffffffade] = a0\n 50957: a0 = ra >> 0x28\n 50960: u64 [sp + 0x310] = a0\n 50964: a1 = sp + 0x1000\n 50968: u8 [a1 + 0xfffffffffffffadd] = a0\n 50972: a0 = ra >> 0x20\n 50975: u64 [sp + 0x308] = a0\n 50979: a1 = sp + 0x1000\n 50983: u8 [a1 + 0xfffffffffffffadc] = a0\n 50987: a0 = ra >> 0x18\n 50990: u64 [sp + 0x300] = a0\n 50994: a1 = sp + 0x1000\n 50998: u8 [a1 + 0xfffffffffffffadb] = a0\n 51002: a0 = ra >> 0x10\n 51005: u64 [sp + 0x2d0] = a0\n 51009: a1 = sp + 0x1000\n 51013: u8 [a1 + 0xfffffffffffffada] = a0\n 51017: a0 = ra >> 0x8\n 51020: u64 [sp + 0x210] = a0\n 51024: a1 = sp + 0x1000\n 51028: u8 [a1 + 0xfffffffffffffad9] = a0\n 51032: a0 = t0 << 0x38\n 51035: a0 = a0 >> 0x3b\n 51038: a3 = sp + 0x7ff\n 51042: a3 = a3 + 0x2c1\n 51046: a3 = a3 - a0\n 51049: a0 = u8 [a3 + 0x19]\n 51052: a1 = u8 [a3 + 0x18]\n 51055: a4 = u8 [a3 + 0x1a]\n 51058: a5 = u8 [a3 + 0x1b]\n 51061: a0 = a0 << 0x8\n 51064: a0 = a0 | a1\n 51067: a4 = a4 << 0x10\n 51070: a5 = a5 << 0x18\n 51073: a4 = a4 | a5\n 51076: a0 = a0 | a4\n 51079: a1 = u8 [a3 + 0x1d]\n 51082: a4 = u8 [a3 + 0x1c]\n 51085: a5 = u8 [a3 + 0x1e]\n 51088: s1 = u8 [a3 + 0x1f]\n 51091: a1 = a1 << 0x8\n 51094: a1 = a1 | a4\n 51097: a5 = a5 << 0x10\n 51100: s1 = s1 << 0x18\n 51103: a5 = a5 | s1\n 51106: a1 = a1 | a5\n 51109: a1 = a1 << 0x20\n 51112: a1 = a1 | a0\n 51115: a0 = u8 [a3 + 0x11]\n 51118: a4 = u8 [a3 + 0x10]\n 51121: a5 = u8 [a3 + 0x12]\n 51124: s1 = u8 [a3 + 0x13]\n 51127: a0 = a0 << 0x8\n 51130: a0 = a0 | a4\n 51133: a5 = a5 << 0x10\n 51136: s1 = s1 << 0x18\n 51139: a5 = a5 | s1\n 51142: a0 = a0 | a5\n 51145: a4 = u8 [a3 + 0x15]\n 51148: a5 = u8 [a3 + 0x14]\n 51151: s1 = u8 [a3 + 0x16]\n 51154: a2 = u8 [a3 + 0x17]\n 51157: a4 = a4 << 0x8\n 51160: a4 = a4 | a5\n 51163: s1 = s1 << 0x10\n 51166: a2 = a2 << 0x18\n 51169: a2 = a2 | s1\n 51172: a2 = a2 | a4\n 51175: a2 = a2 << 0x20\n 51178: t1 = a2 | a0\n 51181: a2 = t0 & 0x7\n 51184: a0 = a1 << a2\n 51187: a5 = t1 >> 0x1\n 51190: t0 = a2 ^ 0x3f\n 51193: a5 = a5 >> t0\n 51196: a0 = a0 | a5\n 51199: u64 [sp + 0x3a0] = a0\n 51203: a0 = u8 [a3 + 0x9]\n 51206: a5 = u8 [a3 + 0x8]\n 51209: s1 = u8 [a3 + 0xa]\n 51212: a1 = u8 [a3 + 0xb]\n 51215: a0 = a0 << 0x8\n 51218: a0 = a0 | a5\n 51221: s1 = s1 << 0x10\n 51224: a1 = a1 << 0x18\n 51227: a1 = a1 | s1\n 51230: a0 = a0 | a1\n 51233: a1 = u8 [a3 + 0xd]\n 51236: a5 = u8 [a3 + 0xc]\n 51239: s1 = u8 [a3 + 0xe]\n 51242: a4 = u8 [a3 + 0xf]\n 51245: a1 = a1 << 0x8\n 51248: a1 = a1 | a5\n 51251: s1 = s1 << 0x10\n 51254: a4 = a4 << 0x18\n 51257: a4 = a4 | s1\n 51260: a1 = a1 | a4\n 51263: a1 = a1 << 0x20\n 51266: s1 = a1 | a0\n 51269: a0 = s1 >> 0x1\n 51272: a1 = a2 ^ 0xffffffffffffffff\n 51275: a0 = a0 >> a1\n 51278: a1 = t1 << a2\n 51281: a0 = a0 | a1\n 51284: u64 [sp + 0x398] = a0\n 51288: a0 = u8 [a3 + 0x1]\n 51291: a1 = u8 [a3]\n 51293: a4 = u8 [a3 + 0x2]\n 51296: a5 = u8 [a3 + 0x3]\n 51299: a0 = a0 << 0x8\n 51302: a0 = a0 | a1\n 51305: a4 = a4 << 0x10\n 51308: a5 = a5 << 0x18\n 51311: a4 = a4 | a5\n 51314: a0 = a0 | a4\n 51317: a1 = u8 [a3 + 0x5]\n 51320: a4 = u8 [a3 + 0x4]\n 51323: a5 = u8 [a3 + 0x6]\n 51326: a3 = u8 [a3 + 0x7]\n 51329: a1 = a1 << 0x8\n 51332: a1 = a1 | a4\n 51335: a4 = u64 [sp + 0x380]\n 51339: a5 = a5 << 0x10\n 51342: a3 = a3 << 0x18\n 51345: a3 = a3 | a5\n 51348: a5 = u64 [sp + 0x378]\n 51352: a1 = a1 | a3\n 51355: a1 = a1 << 0x20\n 51358: a0 = a0 | a1\n 51361: a1 = a0 >> 0x1\n 51364: a1 = a1 >> t0\n 51367: t0 = u64 [sp + 0x370]\n 51371: a3 = s1 << a2\n 51374: a1 = a1 | a3\n 51377: u64 [sp + 0x388] = a1\n 51381: a1 = a5 | a4\n 51384: a3 = u64 [sp + 0x3a8]\n 51388: a3 = a3 | t0\n 51391: a1 = a1 | a3\n 51394: a0 = a0 << a2\n 51397: u64 [sp + 0x390] = a0\n 51401: jump @271 if a1 == 0\n      : @267 (gas: 289)\n 51405: u64 [sp + 872] = 0\n 51409: u64 [sp + 864] = 0\n 51413: a0 = u64 [sp + 0x208]\n 51417: a1 = sp + 0x1000\n 51421: u8 [a1 + 0xfffffffffffffa67] = a0\n 51425: a0 = u64 [sp + 0x1d0]\n 51429: a1 = sp + 0x1000\n 51433: u8 [a1 + 0xfffffffffffffa66] = a0\n 51437: a0 = u64 [sp + 0x1c8]\n 51441: a1 = sp + 0x1000\n 51445: u8 [a1 + 0xfffffffffffffa65] = a0\n 51449: a0 = u64 [sp + 0x1c0]\n 51453: a1 = sp + 0x1000\n 51457: u8 [a1 + 0xfffffffffffffa64] = a0\n 51461: a0 = u64 [sp + 0x1b8]\n 51465: a1 = sp + 0x1000\n 51469: u8 [a1 + 0xfffffffffffffa63] = a0\n 51473: a0 = u64 [sp + 0x1b0]\n 51477: a1 = sp + 0x1000\n 51481: u8 [a1 + 0xfffffffffffffa62] = a0\n 51485: a0 = u64 [sp + 0x1a8]\n 51489: a1 = sp + 0x1000\n 51493: u8 [a1 + 0xfffffffffffffa61] = a0\n 51497: a0 = u64 [sp + 0x1a0]\n 51501: a1 = sp + 0x1000\n 51505: u8 [a1 + 0xfffffffffffffa6f] = a0\n 51509: a0 = u64 [sp + 0x198]\n 51513: a1 = sp + 0x1000\n 51517: u8 [a1 + 0xfffffffffffffa6e] = a0\n 51521: a0 = u64 [sp + 0x190]\n 51525: a1 = sp + 0x1000\n 51529: u8 [a1 + 0xfffffffffffffa6d] = a0\n 51533: a0 = u64 [sp + 0x188]\n 51537: a1 = sp + 0x1000\n 51541: u8 [a1 + 0xfffffffffffffa6c] = a0\n 51545: a0 = u64 [sp + 0x180]\n 51549: a1 = sp + 0x1000\n 51553: u8 [a1 + 0xfffffffffffffa6b] = a0\n 51557: a0 = u64 [sp + 0x178]\n 51561: a1 = sp + 0x1000\n 51565: u8 [a1 + 0xfffffffffffffa6a] = a0\n 51569: a0 = u64 [sp + 0x170]\n 51573: a1 = sp + 0x1000\n 51577: u8 [a1 + 0xfffffffffffffa69] = a0\n 51581: a0 = u64 [sp + 0x168]\n 51585: a1 = sp + 0x1000\n 51589: u8 [a1 + 0xfffffffffffffa77] = a0\n 51593: a0 = u64 [sp + 0x160]\n 51597: a1 = sp + 0x1000\n 51601: u8 [a1 + 0xfffffffffffffa76] = a0\n 51605: a0 = u64 [sp + 0x158]\n 51609: a1 = sp + 0x1000\n 51613: u8 [a1 + 0xfffffffffffffa75] = a0\n 51617: a0 = u64 [sp + 0x150]\n 51621: a1 = sp + 0x1000\n 51625: u8 [a1 + 0xfffffffffffffa74] = a0\n 51629: a0 = u64 [sp + 0x148]\n 51633: a1 = sp + 0x1000\n 51637: u8 [a1 + 0xfffffffffffffa73] = a0\n 51641: a0 = sp + 0x1000\n 51645: u8 [a0 + 4294965919] = 0\n 51649: a0 = sp + 0x1000\n 51653: u8 [a0 + 4294965918] = 0\n 51657: a0 = sp + 0x1000\n 51661: u8 [a0 + 4294965917] = 0\n 51665: a0 = sp + 0x1000\n 51669: u8 [a0 + 4294965916] = 0\n 51673: a0 = sp + 0x1000\n 51677: u8 [a0 + 4294965915] = 0\n 51681: a0 = sp + 0x1000\n 51685: u8 [a0 + 4294965914] = 0\n 51689: a0 = sp + 0x1000\n 51693: u8 [a0 + 4294965913] = 0\n 51697: a0 = sp + 0x1000\n 51701: u8 [a0 + 4294965912] = 0\n 51705: a0 = sp + 0x1000\n 51709: u8 [a0 + 4294965911] = 0\n 51713: a0 = sp + 0x1000\n 51717: u8 [a0 + 4294965910] = 0\n 51721: a0 = sp + 0x1000\n 51725: u8 [a0 + 4294965909] = 0\n 51729: a0 = sp + 0x1000\n 51733: u8 [a0 + 4294965908] = 0\n 51737: a0 = sp + 0x1000\n 51741: u8 [a0 + 4294965907] = 0\n 51745: a0 = sp + 0x1000\n 51749: u8 [a0 + 4294965906] = 0\n 51753: a0 = sp + 0x1000\n 51757: u8 [a0 + 4294965905] = 0\n 51761: a0 = sp + 0x1000\n 51765: u8 [a0 + 4294965904] = 0\n 51769: a0 = sp + 0x1000\n 51773: u8 [a0 + 4294965903] = 0\n 51777: a0 = sp + 0x1000\n 51781: u8 [a0 + 4294965902] = 0\n 51785: a0 = sp + 0x1000\n 51789: u8 [a0 + 4294965901] = 0\n 51793: a0 = sp + 0x1000\n 51797: u8 [a0 + 4294965900] = 0\n 51801: a0 = sp + 0x1000\n 51805: u8 [a0 + 4294965899] = 0\n 51809: a0 = sp + 0x1000\n 51813: u8 [a0 + 4294965898] = 0\n 51817: a0 = sp + 0x1000\n 51821: u8 [a0 + 4294965897] = 0\n 51825: a0 = sp + 0x1000\n 51829: u8 [a0 + 4294965896] = 0\n 51833: a0 = sp + 0x1000\n 51837: u8 [a0 + 4294965895] = 0\n 51841: a0 = sp + 0x1000\n 51845: u8 [a0 + 4294965894] = 0\n 51849: a0 = sp + 0x1000\n 51853: u8 [a0 + 4294965893] = 0\n 51857: a0 = sp + 0x1000\n 51861: u8 [a0 + 4294965892] = 0\n 51865: a0 = sp + 0x1000\n 51869: u8 [a0 + 4294965891] = 0\n 51873: a0 = sp + 0x1000\n 51877: u8 [a0 + 4294965890] = 0\n 51881: a0 = sp + 0x1000\n 51885: u8 [a0 + 4294965889] = 0\n 51889: a0 = sp + 0x1000\n 51893: u8 [a0 + 4294965888] = 0\n 51897: a0 = u64 [sp + 0x260]\n 51901: a1 = sp + 0x1000\n 51905: u8 [a1 + 0xfffffffffffffa60] = a0\n 51909: a0 = u64 [sp + 0x258]\n 51913: a1 = sp + 0x1000\n 51917: u8 [a1 + 0xfffffffffffffa68] = a0\n 51921: a0 = sp + 0x1000\n 51925: u8 [a0 + 0xfffffffffffffa70] = t2\n 51929: a0 = sp + 0x1000\n 51933: u8 [a0 + 0xfffffffffffffa78] = ra\n 51937: a0 = u64 [sp + 0x358]\n 51941: a1 = sp + 0x1000\n 51945: u8 [a1 + 0xfffffffffffffa72] = a0\n 51949: a0 = u64 [sp + 0x350]\n 51953: a1 = sp + 0x1000\n 51957: u8 [a1 + 0xfffffffffffffa71] = a0\n 51961: a0 = u64 [sp + 0x348]\n 51965: a1 = sp + 0x1000\n 51969: u8 [a1 + 0xfffffffffffffa7f] = a0\n 51973: a0 = u64 [sp + 0x318]\n 51977: a1 = sp + 0x1000\n 51981: u8 [a1 + 0xfffffffffffffa7e] = a0\n 51985: a0 = u64 [sp + 0x310]\n 51989: a1 = sp + 0x1000\n 51993: u8 [a1 + 0xfffffffffffffa7d] = a0\n 51997: a0 = u64 [sp + 0x308]\n 52001: a1 = sp + 0x1000\n 52005: u8 [a1 + 0xfffffffffffffa7c] = a0\n 52009: a0 = u64 [sp + 0x300]\n 52013: a1 = sp + 0x1000\n 52017: u8 [a1 + 0xfffffffffffffa7b] = a0\n 52021: a0 = u64 [sp + 0x2d0]\n 52025: a1 = sp + 0x1000\n 52029: u8 [a1 + 0xfffffffffffffa7a] = a0\n 52033: a0 = u64 [sp + 0x210]\n 52037: a1 = sp + 0x1000\n 52041: u8 [a1 + 0xfffffffffffffa79] = a0\n 52045: s1 = u64 [sp + 0x3a8]\n 52049: a0 = s1 << 0x38\n 52052: a0 = a0 >> 0x3b\n 52055: a1 = sp + 0x7ff\n 52059: a1 = a1 + 0x261\n 52063: a1 = a1 + a0\n 52066: a0 = u8 [a1 + 0x11]\n 52069: a2 = u8 [a1 + 0x10]\n 52072: a3 = u8 [a1 + 0x12]\n 52075: a4 = u8 [a1 + 0x13]\n 52078: a0 = a0 << 0x8\n 52081: a0 = a0 | a2\n 52084: a3 = a3 << 0x10\n 52087: a4 = a4 << 0x18\n 52090: a3 = a3 | a4\n 52093: a0 = a0 | a3\n 52096: a2 = u8 [a1 + 0x15]\n 52099: a3 = u8 [a1 + 0x14]\n 52102: a4 = u8 [a1 + 0x16]\n 52105: a5 = u8 [a1 + 0x17]\n 52108: a2 = a2 << 0x8\n 52111: a2 = a2 | a3\n 52114: a4 = a4 << 0x10\n 52117: a5 = a5 << 0x18\n 52120: a4 = a4 | a5\n 52123: a2 = a2 | a4\n 52126: a2 = a2 << 0x20\n 52129: t2 = a2 | a0\n 52132: a4 = s1 & 0x7\n 52135: ra = t2 >> a4\n 52138: a2 = u8 [a1 + 0x19]\n 52141: a3 = u8 [a1 + 0x18]\n 52144: a5 = u8 [a1 + 0x1a]\n 52147: s1 = u8 [a1 + 0x1b]\n 52150: a2 = a2 << 0x8\n 52153: a2 = a2 | a3\n 52156: a5 = a5 << 0x10\n 52159: s1 = s1 << 0x18\n 52162: a5 = a5 | s1\n 52165: a2 = a2 | a5\n 52168: a3 = u8 [a1 + 0x1d]\n 52171: a5 = u8 [a1 + 0x1c]\n 52174: s1 = u8 [a1 + 0x1e]\n 52177: a0 = u8 [a1 + 0x1f]\n 52180: a3 = a3 << 0x8\n 52183: a3 = a3 | a5\n 52186: s1 = s1 << 0x10\n 52189: a0 = a0 << 0x18\n 52192: a0 = a0 | s1\n 52195: a0 = a0 | a3\n 52198: a0 = a0 << 0x20\n 52201: t0 = a0 | a2\n 52204: a0 = t0 << 0x1\n 52207: t1 = a4 ^ 0x3f\n 52210: a0 = a0 << t1\n 52213: a0 = ra | a0\n 52216: u64 [sp + 0x358] = a0\n 52220: a0 = u8 [a1 + 0x9]\n 52223: a2 = u8 [a1 + 0x8]\n 52226: a3 = u8 [a1 + 0xa]\n 52229: a5 = u8 [a1 + 0xb]\n 52232: a0 = a0 << 0x8\n 52235: a0 = a0 | a2\n 52238: a3 = a3 << 0x10\n 52241: a5 = a5 << 0x18\n 52244: a3 = a3 | a5\n 52247: a0 = a0 | a3\n 52250: a2 = u8 [a1 + 0xd]\n 52253: a3 = u8 [a1 + 0xc]\n 52256: a5 = u8 [a1 + 0xe]\n 52259: s1 = u8 [a1 + 0xf]\n 52262: a2 = a2 << 0x8\n 52265: a2 = a2 | a3\n 52268: a5 = a5 << 0x10\n 52271: s1 = s1 << 0x18\n 52274: a5 = a5 | s1\n 52277: a2 = a2 | a5\n 52280: a2 = a2 << 0x20\n 52283: a0 = a0 | a2\n 52286: a2 = a0 >> a4\n 52289: t2 = t2 << 0x1\n 52292: a3 = a4 ^ 0xffffffffffffffff\n 52295: a3 = t2 << a3\n 52298: ra = a2 | a3\n 52301: a2 = u8 [a1 + 0x1]\n 52304: a3 = u8 [a1]\n 52306: a5 = u8 [a1 + 0x2]\n 52309: s1 = u8 [a1 + 0x3]\n 52312: a2 = a2 << 0x8\n 52315: a2 = a2 | a3\n 52318: a5 = a5 << 0x10\n 52321: s1 = s1 << 0x18\n 52324: a5 = a5 | s1\n 52327: a2 = a2 | a5\n 52330: a3 = u8 [a1 + 0x5]\n 52333: a5 = u8 [a1 + 0x4]\n 52336: s1 = u8 [a1 + 0x6]\n 52339: a1 = u8 [a1 + 0x7]\n 52342: a3 = a3 << 0x8\n 52345: a3 = a3 | a5\n 52348: s1 = s1 << 0x10\n 52351: a1 = a1 << 0x18\n 52354: a1 = a1 | s1\n 52357: a1 = a1 | a3\n 52360: a1 = a1 << 0x20\n 52363: a1 = a1 | a2\n 52366: a1 = a1 >> a4\n 52369: a0 = a0 << 0x1\n 52372: a0 = a0 << t1\n 52375: t1 = a1 | a0\n 52378: t0 = t0 >> a4\n 52381: a2 = u64 [sp + 0x3c0]\n 52385: a0 = a2 <u 0x1\n 52388: a1 = u64 [sp + 0x3d0]\n 52392: a0 = a1 - a0\n 52395: u64 [sp + 0x310] = a0\n 52399: a0 = a2 | a1\n 52402: a0 = a0 <u 0x1\n 52405: a1 = u64 [sp + 0x3c8]\n 52409: a3 = a1 - a0\n 52412: u64 [sp + 0x308] = a3\n 52416: a0 = a1 <u a0\n 52419: a1 = u64 [sp + 0x3d8]\n 52423: a1 = a1 - a0\n 52426: u64 [sp + 0x300] = a1\n 52430: a2 = a2 + 0xffffffffffffffff\n 52433: u64 [sp + 0x2d0] = a2\n 52437: a4 = u64 [sp + 0x388]\n 52441: fallthrough\n      : @268 (gas: 105)\n 52442: u64 [sp + 792] = 0\n 52446: a0 = t1 >> 0x3f\n 52449: s1 = ra << 0x1\n 52452: s1 = s1 | a0\n 52455: t1 = t1 << 0x1\n 52458: t2 = u64 [sp + 0x3a0]\n 52462: a0 = t2 >> 0x3f\n 52465: a2 = t1 | a0\n 52468: u64 [sp + 0x350] = a2\n 52472: a1 = u64 [sp + 0x310]\n 52476: a0 = a1 ^ s1\n 52479: a5 = a1 <u s1\n 52482: a1 = u64 [sp + 0x2d0]\n 52486: a3 = a1 <u a2\n 52489: a3 = a5 if a0 != 0\n 52492: t0 = t0 << 0x1\n 52495: a2 = u64 [sp + 0x358]\n 52499: a0 = a2 >> 0x3f\n 52502: t1 = t0 | a0\n 52505: u64 [sp + 0x348] = t1\n 52509: a0 = ra >> 0x3f\n 52512: a2 = a2 << 0x1\n 52515: a0 = a0 | a2\n 52518: a2 = t2 << 0x1\n 52521: a5 = u64 [sp + 0x398]\n 52525: a1 = a5 >> 0x3f\n 52528: t0 = a2 | a1\n 52531: a2 = a5 << 0x1\n 52534: a5 = a4 >> 0x3f\n 52537: a2 = a2 | a5\n 52540: a1 = a4 << 0x1\n 52543: a5 = u64 [sp + 0x390]\n 52547: a4 = a5 >> 0x3f\n 52550: a4 = a4 | a1\n 52553: a5 = a5 << 0x1\n 52556: a1 = u64 [sp + 0x368]\n 52560: a5 = a5 | a1\n 52563: u64 [sp + 0x390] = a5\n 52567: a5 = u64 [sp + 0x360]\n 52571: a4 = a4 | a5\n 52574: u64 [sp + 0x388] = a4\n 52578: a2 = a2 | a5\n 52581: u64 [sp + 0x398] = a2\n 52585: a1 = a5 | t0\n 52588: u64 [sp + 0x3a0] = a1\n 52592: a2 = u64 [sp + 0x308]\n 52596: a1 = a2 - a0\n 52599: a1 = a1 <u a3\n 52602: a2 = a2 <u a0\n 52605: a3 = u64 [sp + 0x300]\n 52609: a3 = a3 - t1\n 52612: a3 = a3 - a2\n 52615: a3 = a3 - a1\n 52618: a3 = a3 >>a 0x3f\n 52621: a1 = u64 [sp + 0x3c0]\n 52625: a1 = a1 & a3\n 52628: u64 [sp + 0x368] = a1\n 52632: a4 = u64 [sp + 0x3d0]\n 52636: a4 = a4 & a3\n 52639: ra = s1 ^ a4\n 52642: a5 = s1 <u a4\n 52645: t1 = u64 [sp + 0x350]\n 52649: a2 = t1 <u a1\n 52652: a5 = a2 if ra == 0\n 52655: a1 = u64 [sp + 0x3c8]\n 52659: ra = a3 & a1\n 52662: t2 = a0 - ra\n 52665: t0 = t2 - a5\n 52668: u64 [sp + 0x358] = t0\n 52672: t2 = t2 <u a5\n 52675: a0 = a0 <u ra\n 52678: a5 = u64 [sp + 0x3d8]\n 52682: a5 = a5 & a3\n 52685: a1 = u64 [sp + 0x348]\n 52689: a5 = a1 - a5\n 52692: a5 = a5 - a0\n 52695: t0 = a5 - t2\n 52698: s1 = s1 - a4\n 52701: ra = s1 - a2\n 52704: a0 = u64 [sp + 0x368]\n 52708: t1 = t1 - a0\n 52711: a4 = u64 [sp + 0x3a8]\n 52715: a5 = u64 [sp + 0x378]\n 52719: a0 = a4 | a5\n 52722: a0 = a0 <u 0x1\n 52725: a2 = u64 [sp + 0x370]\n 52729: a1 = a2 <u a0\n 52732: a0 = a2 - a0\n 52735: a2 = a4 <u 0x1\n 52738: a5 = a5 - a2\n 52741: a2 = u64 [sp + 0x380]\n 52745: a2 = a2 - a1\n 52748: a4 = a4 + 0xffffffffffffffff\n 52751: u64 [sp + 0x380] = a2\n 52755: u64 [sp + 0x378] = a5\n 52759: a1 = a5 | a2\n 52762: u64 [sp + 0x3a8] = a4\n 52766: a2 = a4 | a0\n 52769: a4 = u64 [sp + 0x388]\n 52773: a1 = a1 | a2\n 52776: a3 = a3 & 0x1\n 52779: u64 [sp + 0x368] = a3\n 52783: u64 [sp + 0x370] = a0\n 52787: u64 [sp + 864] = 0\n 52791: jump @268 if a1 != 0\n      : @269 (gas: 1)\n 52795: jump @272\n      : @270 (gas: 2)\n 52797: ra = s1\n 52799: jump @273\n      : @271 (gas: 4)\n 52801: u64 [sp + 872] = 0\n 52805: u64 [sp + 792] = 0\n 52809: a4 = u64 [sp + 0x388]\n 52813: fallthrough\n      : @272 (gas: 20)\n 52814: a3 = u64 [sp + 0x398]\n 52818: a0 = a3 >> 0x3f\n 52821: a2 = u64 [sp + 0x3a0]\n 52825: a2 = a2 << 0x1\n 52828: a0 = a0 | a2\n 52831: a2 = a4 >> 0x3f\n 52834: a3 = a3 << 0x1\n 52837: a2 = a2 | a3\n 52840: a5 = u64 [sp + 0x390]\n 52844: a3 = a5 >> 0x3f\n 52847: a4 = a4 << 0x1\n 52850: a5 = a5 << 0x1\n 52853: a1 = u64 [sp + 0x368]\n 52857: t0 = a1 | a5\n 52860: a1 = u64 [sp + 0x318]\n 52864: a3 = a3 | a1\n 52867: a3 = a3 | a4\n 52870: t1 = a1 | a2\n 52873: ra = a1 | a0\n 52876: fallthrough\n      : @273 (gas: 67)\n 52877: s1 = u64 [sp + 0x3c0]\n 52881: a0 = s1 mulhu t0\n 52884: a2 = u64 [sp + 0x3d0]\n 52888: a1 = a2 * t0\n 52891: a0 = a0 + a1\n 52894: a1 = a0 <u a1\n 52897: a4 = a2 mulhu t0\n 52900: a1 = a1 + a4\n 52903: a5 = s1 * a3\n 52906: t2 = a5 + a0\n 52909: a0 = t2 <u a5\n 52912: a5 = s1 mulhu a3\n 52915: a0 = a0 + a5\n 52918: a0 = a0 + a1\n 52921: a1 = a0 <u a1\n 52924: a5 = a2 mulhu a3\n 52927: a1 = a1 + a5\n 52930: a5 = a2 * a3\n 52933: a0 = a0 + a5\n 52936: a5 = a0 <u a5\n 52939: a1 = a1 + a5\n 52942: u64 [sp + 0x3a8] = a1\n 52946: a5 = t1 * a2\n 52949: a1 = t1 mulhu s1\n 52952: a1 = a1 + a5\n 52955: a5 = ra * s1\n 52958: a1 = a1 + a5\n 52961: ra = u64 [sp + 0x3c8]\n 52965: a5 = t0 mulhu ra\n 52968: a2 = u64 [sp + 0x3d8]\n 52972: a4 = t0 * a2\n 52975: a4 = a4 + a5\n 52978: a3 = a3 * ra\n 52981: a3 = a3 + a4\n 52984: a1 = a1 + a3\n 52987: a2 = t1 * s1\n 52990: a3 = t0 * ra\n 52993: a3 = a3 + a2\n 52996: a2 = a3 <u a2\n 52999: a1 = a1 + a2\n 53002: a3 = a3 + a0\n 53005: a0 = a3 <u a0\n 53008: a2 = u64 [sp + 0x3a8]\n 53012: a1 = a1 + a2\n 53015: t0 = s1 * t0\n 53018: a2 = u64 [sp + 0x218]\n 53022: a0 = a2 - a0\n 53025: t1 = a0 - a1\n 53028: a0 = u64 [sp + 0x258]\n 53032: a1 = a0 ^ t2\n 53035: a4 = a0 <u t2\n 53038: a2 = u64 [sp + 0x260]\n 53042: a5 = a2 <u t0\n 53045: a4 = a5 if a1 == 0\n 53048: s1 = u64 [sp + 0x220]\n 53052: a1 = s1 <u a3\n 53055: s1 = s1 - a3\n 53058: a3 = s1 <u a4\n 53061: a1 = a1 + a3\n 53064: t1 = t1 - a1\n 53067: a1 = s1 - a4\n 53070: a0 = a0 - a5\n 53073: a0 = a0 - t2\n 53076: s1 = a2 - t0\n 53079: t0 = a1\n 53081: a1 = u64 [sp + 0x268]\n 53085: jump @275 if a1 != 0\n      : @274 (gas: 1)\n 53088: jump @224\n      : @275 (gas: 141)\n 53091: u64 [sp + 0x3a8] = t1\n 53095: u64 [sp + 0x3a0] = s1\n 53099: a1 = a0 * s1\n 53102: a2 = s1 mulhu s1\n 53105: a2 = a2 + a1\n 53108: a3 = a2 <u a1\n 53111: a4 = a0 mulhu s1\n 53114: a3 = a3 + a4\n 53117: a2 = a2 + a1\n 53120: u64 [sp + 0x380] = a2\n 53124: a1 = a2 <u a1\n 53127: a1 = a1 + a4\n 53130: a1 = a1 + a3\n 53133: a2 = a0 * a0\n 53136: ra = t0\n 53138: t0 = a2 + a1\n 53141: a2 = t0 <u a2\n 53144: a1 = a1 <u a3\n 53147: a3 = a0 mulhu a0\n 53150: a1 = a1 + a3\n 53153: a2 = a2 + a1\n 53156: a1 = ra mulhu s1\n 53159: u64 [sp + 0x388] = a1\n 53163: a4 = t1 * s1\n 53166: t1 = a4 + a1\n 53169: u64 [sp + 0x390] = t1\n 53173: a3 = ra * s1\n 53176: a5 = a3 + t0\n 53179: t0 = a5 <u a3\n 53182: a2 = a2 + t0\n 53185: t2 = ra * a0\n 53188: t1 = t1 + t2\n 53191: a2 = a2 + t1\n 53194: a1 = a2 ^ t1\n 53197: s1 = a2 <u t1\n 53200: s1 = t0 if a1 == 0\n 53203: u64 [sp + 0x398] = s1\n 53207: t0 = u64 [sp + 0x388]\n 53211: t0 = t0 + t2\n 53214: s1 = a3 + a5\n 53217: u64 [sp + 0x388] = s1\n 53221: a1 = s1 <u a3\n 53224: a5 = a4 + t0\n 53227: a3 = a5 + a1\n 53230: a3 = a3 + a2\n 53233: a2 = a3 ^ a5\n 53236: u64 [sp + 0x378] = a3\n 53240: a3 = a3 <u a5\n 53243: a3 = a1 if a2 == 0\n 53246: s1 = t1 <u t2\n 53249: a2 = t0 <u t2\n 53252: a1 = ra mulhu a0\n 53255: s1 = s1 + a1\n 53258: t1 = a1 + a2\n 53261: a1 = u64 [sp + 0x390]\n 53265: a2 = a1 <u a4\n 53268: a4 = a5 <u a4\n 53271: a1 = u64 [sp + 0x3a8]\n 53275: a5 = u64 [sp + 0x3a0]\n 53279: a5 = a1 mulhu a5\n 53282: a2 = a2 + a5\n 53285: t0 = a5 + a4\n 53288: s1 = s1 + a2\n 53291: a2 = s1 <u a2\n 53294: a5 = a1 * a0\n 53297: s1 = s1 + a5\n 53300: a0 = a1 mulhu a0\n 53303: t2 = a1\n 53305: a2 = a2 + a0\n 53308: a4 = s1 <u a5\n 53311: a1 = a2 + a4\n 53314: a4 = u64 [sp + 0x398]\n 53318: a4 = a4 + s1\n 53321: a2 = a4 <u s1\n 53324: a2 = a2 + a1\n 53327: t0 = t0 + t1\n 53330: a1 = t0 <u t1\n 53333: a0 = a0 + a1\n 53336: t0 = t0 + a5\n 53339: a3 = a3 + t0\n 53342: a1 = t0 <u a5\n 53345: a5 = a3 <u t0\n 53348: a3 = a3 + a4\n 53351: t1 = a3 <u a4\n 53354: a0 = a0 + a1\n 53357: a0 = a0 + a5\n 53360: a0 = a0 + a2\n 53363: a5 = a0 + t1\n 53366: a4 = t2 * ra\n 53369: a1 = ra mulhu ra\n 53372: s1 = a4 + a1\n 53375: a1 = ra * ra\n 53378: a3 = a3 + a1\n 53381: u64 [sp + 0x398] = a3\n 53385: a3 = a3 <u a1\n 53388: a0 = a4 + s1\n 53391: t2 = a0 + a3\n 53394: t2 = t2 + a5\n 53397: t0 = t2 ^ a0\n 53400: a1 = t2 <u a0\n 53403: a1 = a3 if t0 == 0\n 53406: a3 = a5 ^ a2\n 53409: a2 = a5 <u a2\n 53412: a2 = t1 if a3 == 0\n 53415: a3 = s1 <u a4\n 53418: a0 = a0 <u a4\n 53421: a5 = u64 [sp + 0x3a8]\n 53425: a4 = a5 mulhu ra\n 53428: a3 = a3 + a4\n 53431: a0 = a0 + a4\n 53434: a0 = a0 + a3\n 53437: a4 = a5 * a5\n 53440: a3 = a0 <u a3\n 53443: a0 = a0 + a4\n 53446: a2 = a2 + a0\n 53449: t0 = a2 + a1\n 53452: a1 = a0 <u a4\n 53455: a0 = a2 <u a0\n 53458: a2 = t0 <u a2\n 53461: a4 = a5 mulhu a5\n 53464: ra = u64 [sp + 0x398]\n 53468: a3 = a3 + a4\n 53471: a1 = a1 + a3\n 53474: a0 = a0 + a1\n 53477: s1 = a0 + a2\n 53480: a5 = u64 [sp + 0x3c8]\n 53484: a0 = t0 <u a5\n 53487: a1 = u64 [sp + 0x3d0]\n 53491: a2 = a1 ^ t2\n 53494: a3 = t2 <u a1\n 53497: a1 = u64 [sp + 0x3c0]\n 53501: a4 = ra <u a1\n 53504: a4 = a3 if a2 != 0\n 53507: a1 = u64 [sp + 0x3d8]\n 53511: a2 = a1 ^ s1\n 53514: a3 = s1 <u a1\n 53517: a3 = a0 if a2 == 0\n 53520: a0 = a5 ^ t0\n 53523: a0 = a0 | a2\n 53526: a4 = a3 if a0 != 0\n 53529: jump @282 if a4 == 0\n      : @276 (gas: 381)\n 53533: a1 = u64 [sp + 0x380]\n 53537: a0 = sp + 0x1000\n 53541: u8 [a0 + 0xfffffffffffffa48] = a1\n 53545: a0 = a1 >> 0x38\n 53548: u64 [sp + 0x3a8] = a0\n 53552: a0 = u64 [sp + 0x138]\n 53556: t1 = a0 >> 0x3f\n 53559: a3 = t2\n 53561: t2 = u64 [sp + 0x388]\n 53565: a2 = t2\n 53567: a2 = ra if t1 == 0\n 53570: t0 = ra if t1 != 0\n 53573: a0 = a1 >> 0x30\n 53576: u64 [sp + 0x350] = a0\n 53580: a0 = u64 [sp + 0x378]\n 53584: a4 = sp + 0x1000\n 53588: u8 [a4 + 0xfffffffffffffa58] = a0\n 53592: a4 = a1 >> 0x28\n 53595: u64 [sp + 0x348] = a4\n 53599: a4 = a1 >> 0x20\n 53602: u64 [sp + 0x318] = a4\n 53606: a4 = a1 >> 0x18\n 53609: u64 [sp + 0x310] = a4\n 53613: a4 = a1 >> 0x10\n 53616: u64 [sp + 0x308] = a4\n 53620: a4 = a1 >> 0x8\n 53623: u64 [sp + 0x218] = a4\n 53627: a1 = a0 if t1 == 0\n 53630: a4 = a0 >> 0x38\n 53633: u64 [sp + 0x398] = a4\n 53637: a4 = a0 >> 0x30\n 53640: u64 [sp + 0x390] = a4\n 53644: a4 = a0 >> 0x28\n 53647: u64 [sp + 0x380] = a4\n 53651: a4 = a0 >> 0x20\n 53654: u64 [sp + 0x370] = a4\n 53658: a4 = a0 >> 0x18\n 53661: u64 [sp + 0x368] = a4\n 53665: a4 = a0 >> 0x10\n 53668: u64 [sp + 0x360] = a4\n 53672: a4 = a0 >> 0x8\n 53675: u64 [sp + 0x358] = a4\n 53679: a0 = a3 if t1 == 0\n 53682: s1 = a3 if t1 != 0\n 53685: a5 = u64 [sp + 0x248]\n 53689: a5 = a5 >> 0x3f\n 53692: a4 = a1\n 53694: a4 = a2 if a5 == 0\n 53697: a2 = a0 if a5 == 0\n 53700: s1 = t0 if a5 != 0\n 53703: t0 = a0 if a5 != 0\n 53706: a0 = u64 [sp + 0x3a0]\n 53710: a0 = a0 * a0\n 53713: a3 = sp + 0x1000\n 53717: u8 [a3 + 0xfffffffffffffa40] = a0\n 53721: a3 = a0 >> 0x38\n 53724: u64 [sp + 0x3a0] = a3\n 53728: a3 = a0 >> 0x30\n 53731: u64 [sp + 0x378] = a3\n 53735: a3 = a0 >> 0x28\n 53738: u64 [sp + 0x210] = a3\n 53742: a3 = a0 >> 0x20\n 53745: u64 [sp + 0x208] = a3\n 53749: a3 = a0 >> 0x18\n 53752: u64 [sp + 0x1d0] = a3\n 53756: a3 = a0 >> 0x10\n 53759: u64 [sp + 0x1c8] = a3\n 53763: a3 = a0 >> 0x8\n 53766: u64 [sp + 0x1c0] = a3\n 53770: a0 = t2 if t1 == 0\n 53773: a0 = a1 if a5 == 0\n 53776: a5 = a4 >> 0x1\n 53779: a1 = u64 [sp + 0x250]\n 53783: a5 = a5 >> a1\n 53786: t1 = s1\n 53788: s1 = u64 [sp + 0x1e0]\n 53792: a3 = a2 << s1\n 53795: ra = a3 | a5\n 53798: a5 = t1 << s1\n 53801: a3 = t0 >> 0x1\n 53804: a3 = a3 >> a1\n 53807: a3 = a3 | a5\n 53810: u64 [sp + 0x268] = a3\n 53814: a3 = a4 << s1\n 53817: a0 = a0 >> 0x1\n 53820: a0 = a0 >> a1\n 53823: a3 = a3 | a0\n 53826: u64 [sp + 0x300] = a3\n 53830: a0 = t0 << s1\n 53833: a2 = a2 >> 0x1\n 53836: a1 = a2 >> a1\n 53839: t1 = a0 | a1\n 53842: a0 = u64 [sp + 0x3b8]\n 53846: a0 = clz a0\n 53848: a0 = a0 + 0x40\n 53851: a4 = u64 [sp + 0x3b0]\n 53855: a2 = clz a4\n 53857: a2 = a0 if a4 == 0\n 53860: a0 = clz a3\n 53862: a0 = a0 + 0x40\n 53865: u64 [sp + 0x2d0] = ra\n 53869: a1 = clz ra\n 53871: a0 = a1 if ra != 0\n 53874: a1 = clz t1\n 53876: a5 = a1 + 0x40\n 53879: ra = u64 [sp + 0x268]\n 53883: a1 = clz ra\n 53885: a5 = a1 if ra != 0\n 53888: a1 = a0 + 0x80\n 53892: a3 = a1 <u a0\n 53895: a0 = t1 | ra\n 53898: a5 = a1 if a0 == 0\n 53901: a3 = 0 if a0 != 0\n 53903: a1 = a2 + 0x80\n 53907: s1 = a1 <u a2\n 53910: a2 = a1 <u a5\n 53913: t0 = s1 ^ a3\n 53916: a0 = s1 <u a3\n 53919: a0 = a2 if t0 == 0\n 53922: u64 [sp + 0x258] = s1\n 53926: s1 = s1 - a3\n 53929: s1 = s1 - a2\n 53932: a2 = a0 <u 0x1\n 53935: a2 = a2 + 0xffffffffffffffff\n 53938: a3 = -a0\n 53940: u64 [sp + 0xd0] = a3\n 53944: t0 = a3 >u 0\n 53946: a3 = a2 >u 0\n 53948: u64 [sp + 0xd8] = a2\n 53952: a3 = t0 if a2 == 0\n 53955: u64 [sp + 0x220] = a1\n 53959: a1 = a1 - a5\n 53962: u64 [sp + 0xc0] = a1\n 53966: a1 = a1 <u 0x100\n 53970: a5 = a1 ^ 0x1\n 53973: a1 = s1 >u 0\n 53975: u64 [sp + 0xc8] = s1\n 53979: a5 = a1 if s1 != 0\n 53982: a5 = a3 if a0 != 0\n 53985: a0 = u64 [sp + 0x3a0]\n 53989: a1 = sp + 0x1000\n 53993: u8 [a1 + 0xfffffffffffffa47] = a0\n 53997: a0 = u64 [sp + 0x378]\n 54001: a1 = sp + 0x1000\n 54005: u8 [a1 + 0xfffffffffffffa46] = a0\n 54009: a0 = u64 [sp + 0x210]\n 54013: a1 = sp + 0x1000\n 54017: u8 [a1 + 0xfffffffffffffa45] = a0\n 54021: a0 = u64 [sp + 0x208]\n 54025: a1 = sp + 0x1000\n 54029: u8 [a1 + 0xfffffffffffffa44] = a0\n 54033: a0 = u64 [sp + 0x1d0]\n 54037: a1 = sp + 0x1000\n 54041: u8 [a1 + 0xfffffffffffffa43] = a0\n 54045: a0 = u64 [sp + 0x1c8]\n 54049: a1 = sp + 0x1000\n 54053: u8 [a1 + 0xfffffffffffffa42] = a0\n 54057: a0 = u64 [sp + 0x1c0]\n 54061: a1 = sp + 0x1000\n 54065: u8 [a1 + 0xfffffffffffffa41] = a0\n 54069: a0 = u64 [sp + 0x3a8]\n 54073: a1 = sp + 0x1000\n 54077: u8 [a1 + 0xfffffffffffffa4f] = a0\n 54081: a0 = u64 [sp + 0x350]\n 54085: a1 = sp + 0x1000\n 54089: u8 [a1 + 0xfffffffffffffa4e] = a0\n 54093: a0 = u64 [sp + 0x348]\n 54097: a1 = sp + 0x1000\n 54101: u8 [a1 + 0xfffffffffffffa4d] = a0\n 54105: a0 = u64 [sp + 0x318]\n 54109: a1 = sp + 0x1000\n 54113: u8 [a1 + 0xfffffffffffffa4c] = a0\n 54117: a0 = u64 [sp + 0x310]\n 54121: a1 = sp + 0x1000\n 54125: u8 [a1 + 0xfffffffffffffa4b] = a0\n 54129: a0 = u64 [sp + 0x308]\n 54133: a1 = sp + 0x1000\n 54137: u8 [a1 + 0xfffffffffffffa4a] = a0\n 54141: a0 = u64 [sp + 0x218]\n 54145: a1 = sp + 0x1000\n 54149: u8 [a1 + 0xfffffffffffffa49] = a0\n 54153: a0 = t2 >> 0x38\n 54156: a1 = sp + 0x1000\n 54160: u8 [a1 + 0xfffffffffffffa57] = a0\n 54164: a0 = t2 >> 0x30\n 54167: a1 = sp + 0x1000\n 54171: u8 [a1 + 0xfffffffffffffa56] = a0\n 54175: a0 = t2 >> 0x28\n 54178: a1 = sp + 0x1000\n 54182: u8 [a1 + 0xfffffffffffffa55] = a0\n 54186: a0 = t2 >> 0x20\n 54189: a1 = sp + 0x1000\n 54193: u8 [a1 + 0xfffffffffffffa54] = a0\n 54197: a0 = t2 >> 0x18\n 54200: a1 = sp + 0x1000\n 54204: u8 [a1 + 0xfffffffffffffa53] = a0\n 54208: a0 = t2 >> 0x10\n 54211: a1 = sp + 0x1000\n 54215: u8 [a1 + 0xfffffffffffffa52] = a0\n 54219: a0 = sp + 0x1000\n 54223: u8 [a0 + 0xfffffffffffffa50] = t2\n 54227: a0 = t2 >> 0x8\n 54230: a1 = sp + 0x1000\n 54234: u8 [a1 + 0xfffffffffffffa51] = a0\n 54238: a0 = u64 [sp + 0x398]\n 54242: a1 = sp + 0x1000\n 54246: u8 [a1 + 0xfffffffffffffa5f] = a0\n 54250: a0 = u64 [sp + 0x390]\n 54254: a1 = sp + 0x1000\n 54258: u8 [a1 + 0xfffffffffffffa5e] = a0\n 54262: a0 = u64 [sp + 0x380]\n 54266: a1 = sp + 0x1000\n 54270: u8 [a1 + 0xfffffffffffffa5d] = a0\n 54274: a0 = u64 [sp + 0x370]\n 54278: a1 = sp + 0x1000\n 54282: u8 [a1 + 0xfffffffffffffa5c] = a0\n 54286: a0 = u64 [sp + 0x368]\n 54290: a1 = sp + 0x1000\n 54294: u8 [a1 + 0xfffffffffffffa5b] = a0\n 54298: a0 = u64 [sp + 0x360]\n 54302: a1 = sp + 0x1000\n 54306: u8 [a1 + 0xfffffffffffffa5a] = a0\n 54310: a0 = u64 [sp + 0x358]\n 54314: a1 = sp + 0x1000\n 54318: u8 [a1 + 0xfffffffffffffa59] = a0\n 54322: s1 = u64 [sp + 0x2d0]\n 54326: a0 = s1 | ra\n 54329: a2 = u64 [sp + 0x300]\n 54333: a1 = a2 | t1\n 54336: a0 = a0 | a1\n 54339: a1 = u64 [sp + 0x3b8]\n 54343: a1 = a1 | a4\n 54346: a1 = a1 <u 0x1\n 54349: a0 = a0 <u 0x1\n 54352: u64 [sp + 0x218] = a1\n 54356: a0 = a0 | a1\n 54359: a5 = a5 | a0\n 54362: a0 = sp + 0x1000\n 54366: u8 [a0 + 4294965823] = 0\n 54370: a0 = sp + 0x1000\n 54374: u8 [a0 + 4294965822] = 0\n 54378: a0 = sp + 0x1000\n 54382: u8 [a0 + 4294965821] = 0\n 54386: a0 = sp + 0x1000\n 54390: u8 [a0 + 4294965820] = 0\n 54394: a0 = sp + 0x1000\n 54398: u8 [a0 + 4294965819] = 0\n 54402: a0 = sp + 0x1000\n 54406: u8 [a0 + 4294965818] = 0\n 54410: a0 = sp + 0x1000\n 54414: u8 [a0 + 4294965817] = 0\n 54418: a0 = sp + 0x1000\n 54422: u8 [a0 + 4294965816] = 0\n 54426: a0 = sp + 0x1000\n 54430: u8 [a0 + 4294965815] = 0\n 54434: a0 = sp + 0x1000\n 54438: u8 [a0 + 4294965814] = 0\n 54442: a0 = sp + 0x1000\n 54446: u8 [a0 + 4294965813] = 0\n 54450: a0 = sp + 0x1000\n 54454: u8 [a0 + 4294965812] = 0\n 54458: a0 = sp + 0x1000\n 54462: u8 [a0 + 4294965811] = 0\n 54466: a0 = sp + 0x1000\n 54470: u8 [a0 + 4294965810] = 0\n 54474: a0 = sp + 0x1000\n 54478: u8 [a0 + 4294965809] = 0\n 54482: a0 = sp + 0x1000\n 54486: u8 [a0 + 4294965808] = 0\n 54490: a0 = sp + 0x1000\n 54494: u8 [a0 + 4294965807] = 0\n 54498: a0 = sp + 0x1000\n 54502: u8 [a0 + 4294965806] = 0\n 54506: a0 = sp + 0x1000\n 54510: u8 [a0 + 4294965805] = 0\n 54514: a0 = sp + 0x1000\n 54518: u8 [a0 + 4294965804] = 0\n 54522: a0 = sp + 0x1000\n 54526: u8 [a0 + 4294965803] = 0\n 54530: a0 = sp + 0x1000\n 54534: u8 [a0 + 4294965802] = 0\n 54538: a0 = sp + 0x1000\n 54542: u8 [a0 + 4294965801] = 0\n 54546: a0 = sp + 0x1000\n 54550: u8 [a0 + 4294965800] = 0\n 54554: a0 = sp + 0x1000\n 54558: u8 [a0 + 4294965799] = 0\n 54562: a0 = sp + 0x1000\n 54566: u8 [a0 + 4294965798] = 0\n 54570: a0 = sp + 0x1000\n 54574: u8 [a0 + 4294965797] = 0\n 54578: a0 = sp + 0x1000\n 54582: u8 [a0 + 4294965796] = 0\n 54586: a0 = sp + 0x1000\n 54590: u8 [a0 + 4294965795] = 0\n 54594: a0 = sp + 0x1000\n 54598: u8 [a0 + 4294965794] = 0\n 54602: a0 = sp + 0x1000\n 54606: u8 [a0 + 4294965793] = 0\n 54610: a0 = sp + 0x1000\n 54614: u8 [a0 + 4294965792] = 0\n 54618: a0 = u64 [sp + 0x1f0]\n 54622: a1 = sp + 0x7ff\n 54626: a1 = a1 + 0x241\n 54630: a0 = a1 - a0\n 54633: t2 = ra\n 54635: a1 = u8 [a0 + 0x18]\n 54638: u64 [sp + 0x100] = a1\n 54642: a1 = u8 [a0 + 0x19]\n 54645: u64 [sp + 0xe0] = a1\n 54649: a1 = u8 [a0 + 0x1a]\n 54652: u64 [sp + 0xf0] = a1\n 54656: a1 = u8 [a0 + 0x1b]\n 54659: u64 [sp + 0xe8] = a1\n 54663: a1 = u8 [a0 + 0x1c]\n 54666: u64 [sp + 0x118] = a1\n 54670: a1 = u8 [a0 + 0x1d]\n 54673: u64 [sp + 0xf8] = a1\n 54677: a1 = u8 [a0 + 0x1e]\n 54680: u64 [sp + 0x110] = a1\n 54684: a1 = u8 [a0 + 0x1f]\n 54687: u64 [sp + 0x108] = a1\n 54691: a1 = u8 [a0 + 0x10]\n 54694: u64 [sp + 0x148] = a1\n 54698: a1 = u8 [a0 + 0x11]\n 54701: u64 [sp + 0x120] = a1\n 54705: a1 = u8 [a0 + 0x12]\n 54708: u64 [sp + 0x130] = a1\n 54712: a1 = u8 [a0 + 0x13]\n 54715: u64 [sp + 0x128] = a1\n 54719: a1 = u8 [a0 + 0x14]\n 54722: u64 [sp + 0x160] = a1\n 54726: a1 = u8 [a0 + 0x15]\n 54729: u64 [sp + 0x140] = a1\n 54733: a1 = u8 [a0 + 0x16]\n 54736: u64 [sp + 0x158] = a1\n 54740: a1 = u8 [a0 + 0x17]\n 54743: u64 [sp + 0x150] = a1\n 54747: a1 = u8 [a0 + 0x8]\n 54750: u64 [sp + 0x188] = a1\n 54754: a1 = u8 [a0 + 0x9]\n 54757: u64 [sp + 0x168] = a1\n 54761: a1 = u8 [a0 + 0xa]\n 54764: u64 [sp + 0x178] = a1\n 54768: a1 = u8 [a0 + 0xb]\n 54771: u64 [sp + 0x170] = a1\n 54775: a1 = u8 [a0 + 0xc]\n 54778: u64 [sp + 0x1a0] = a1\n 54782: a1 = u8 [a0 + 0xd]\n 54785: u64 [sp + 0x180] = a1\n 54789: a1 = u8 [a0 + 0xe]\n 54792: u64 [sp + 0x198] = a1\n 54796: a1 = u8 [a0 + 0xf]\n 54799: u64 [sp + 0x190] = a1\n 54803: t0 = u8 [a0]\n 54805: a1 = u8 [a0 + 0x1]\n 54808: u64 [sp + 0x1a8] = a1\n 54812: ra = u8 [a0 + 0x2]\n 54815: a1 = u8 [a0 + 0x3]\n 54818: u64 [sp + 0x1b0] = a1\n 54822: a1 = u8 [a0 + 0x4]\n 54825: a4 = u8 [a0 + 0x5]\n 54828: a3 = u8 [a0 + 0x6]\n 54831: a0 = u8 [a0 + 0x7]\n 54834: t2 = 0 if a5 != 0\n 54836: u64 [sp + 0x388] = t2\n 54840: t2 = t1\n 54842: t1 = 0 if a5 != 0\n 54844: u64 [sp + 0x3a8] = t1\n 54848: s1 = 0 if a5 != 0\n 54850: u64 [sp + 0x3a0] = s1\n 54854: a2 = 0 if a5 != 0\n 54856: u64 [sp + 0x370] = a2\n 54860: u64 [sp + 0x260] = t2\n 54864: u64 [sp + 0x210] = a1\n 54868: u64 [sp + 0x208] = a3\n 54872: u64 [sp + 0x1d0] = a0\n 54876: u64 [sp + 0x1c8] = a4\n 54880: u64 [sp + 0x1c0] = t0\n 54884: u64 [sp + 0x1b8] = ra\n 54888: jump @283 if a5 != 0\n      : @277 (gas: 11)\n 54892: a2 = u64 [sp + 0xc0]\n 54896: a3 = a2 ^ 0xff\n 54900: a4 = u64 [sp + 0xd0]\n 54904: a3 = a3 | a4\n 54907: t0 = u64 [sp + 0xd8]\n 54911: s1 = u64 [sp + 0xc8]\n 54915: a5 = s1 | t0\n 54918: a3 = a3 | a5\n 54921: t1 = t2\n 54923: t2 = u64 [sp + 0x388]\n 54927: jump @286 if a3 == 0\n      : @278 (gas: 321)\n 54931: a1 = a2 + 0x1\n 54934: u64 [sp + 0x3a8] = a1\n 54938: a0 = a1 <u 0x1\n 54941: a0 = a0 + s1\n 54944: u64 [sp + 0x380] = a0\n 54948: a0 = a0 | a1\n 54951: a0 = a0 <u 0x1\n 54954: a0 = a0 + a4\n 54957: u64 [sp + 0x378] = a0\n 54961: a0 = a0 <u a4\n 54964: a0 = a0 + t0\n 54967: u64 [sp + 0x370] = a0\n 54971: t0 = 0xff - a2\n 54975: a0 = u64 [sp + 0x300]\n 54979: a1 = sp + 0x1000\n 54983: u8 [a1 + 0xfffffffffffffa00] = a0\n 54987: a1 = sp + 0x1000\n 54991: u8 [a1 + 4294965759] = 0\n 54995: a1 = sp + 0x1000\n 54999: u8 [a1 + 4294965758] = 0\n 55003: a1 = sp + 0x1000\n 55007: u8 [a1 + 4294965757] = 0\n 55011: a1 = sp + 0x1000\n 55015: u8 [a1 + 4294965756] = 0\n 55019: a1 = sp + 0x1000\n 55023: u8 [a1 + 4294965755] = 0\n 55027: a1 = sp + 0x1000\n 55031: u8 [a1 + 4294965754] = 0\n 55035: a1 = sp + 0x1000\n 55039: u8 [a1 + 4294965753] = 0\n 55043: a1 = sp + 0x1000\n 55047: u8 [a1 + 4294965752] = 0\n 55051: a1 = sp + 0x1000\n 55055: u8 [a1 + 4294965751] = 0\n 55059: a1 = sp + 0x1000\n 55063: u8 [a1 + 4294965750] = 0\n 55067: a1 = sp + 0x1000\n 55071: u8 [a1 + 4294965749] = 0\n 55075: a1 = sp + 0x1000\n 55079: u8 [a1 + 4294965748] = 0\n 55083: a1 = sp + 0x1000\n 55087: u8 [a1 + 4294965747] = 0\n 55091: a1 = sp + 0x1000\n 55095: u8 [a1 + 4294965746] = 0\n 55099: a1 = sp + 0x1000\n 55103: u8 [a1 + 4294965745] = 0\n 55107: a1 = sp + 0x1000\n 55111: u8 [a1 + 4294965744] = 0\n 55115: a1 = sp + 0x1000\n 55119: u8 [a1 + 4294965743] = 0\n 55123: a1 = sp + 0x1000\n 55127: u8 [a1 + 4294965742] = 0\n 55131: a1 = sp + 0x1000\n 55135: u8 [a1 + 4294965741] = 0\n 55139: a1 = sp + 0x1000\n 55143: u8 [a1 + 4294965740] = 0\n 55147: a1 = sp + 0x1000\n 55151: u8 [a1 + 4294965739] = 0\n 55155: a1 = sp + 0x1000\n 55159: u8 [a1 + 4294965738] = 0\n 55163: a1 = sp + 0x1000\n 55167: u8 [a1 + 4294965737] = 0\n 55171: a1 = sp + 0x1000\n 55175: u8 [a1 + 4294965736] = 0\n 55179: a1 = sp + 0x1000\n 55183: u8 [a1 + 4294965735] = 0\n 55187: a1 = sp + 0x1000\n 55191: u8 [a1 + 4294965734] = 0\n 55195: a1 = sp + 0x1000\n 55199: u8 [a1 + 4294965733] = 0\n 55203: a1 = sp + 0x1000\n 55207: u8 [a1 + 4294965732] = 0\n 55211: a1 = sp + 0x1000\n 55215: u8 [a1 + 4294965731] = 0\n 55219: a1 = sp + 0x1000\n 55223: u8 [a1 + 4294965730] = 0\n 55227: a1 = sp + 0x1000\n 55231: u8 [a1 + 4294965729] = 0\n 55235: a1 = sp + 0x1000\n 55239: u8 [a1 + 4294965728] = 0\n 55243: t2 = u64 [sp + 0x2d0]\n 55247: a1 = sp + 0x1000\n 55251: u8 [a1 + 0xfffffffffffffa08] = t2\n 55255: a1 = a0 >> 0x38\n 55258: u64 [sp + 0xc0] = a1\n 55262: a2 = sp + 0x1000\n 55266: u8 [a2 + 0xfffffffffffffa07] = a1\n 55270: a1 = a0 >> 0x30\n 55273: u64 [sp + 0xb8] = a1\n 55277: a2 = sp + 0x1000\n 55281: u8 [a2 + 0xfffffffffffffa06] = a1\n 55285: a1 = a0 >> 0x28\n 55288: u64 [sp + 0xb0] = a1\n 55292: a2 = sp + 0x1000\n 55296: u8 [a2 + 0xfffffffffffffa05] = a1\n 55300: a1 = a0 >> 0x20\n 55303: u64 [sp + 0xa8] = a1\n 55307: a2 = sp + 0x1000\n 55311: u8 [a2 + 0xfffffffffffffa04] = a1\n 55315: a1 = a0 >> 0x18\n 55318: u64 [sp + 0xa0] = a1\n 55322: a2 = sp + 0x1000\n 55326: u8 [a2 + 0xfffffffffffffa03] = a1\n 55330: a1 = a0 >> 0x10\n 55333: u64 [sp + 0x98] = a1\n 55337: a2 = sp + 0x1000\n 55341: u8 [a2 + 0xfffffffffffffa02] = a1\n 55345: a0 = a0 >> 0x8\n 55348: u64 [sp + 0x90] = a0\n 55352: a1 = sp + 0x1000\n 55356: u8 [a1 + 0xfffffffffffffa01] = a0\n 55360: a0 = sp + 0x1000\n 55364: u8 [a0 + 0xfffffffffffffa10] = t1\n 55368: a0 = t2 >> 0x38\n 55371: u64 [sp + 0x88] = a0\n 55375: a1 = sp + 0x1000\n 55379: u8 [a1 + 0xfffffffffffffa0f] = a0\n 55383: a0 = t2 >> 0x30\n 55386: u64 [sp + 0x80] = a0\n 55390: a1 = sp + 0x1000\n 55394: u8 [a1 + 0xfffffffffffffa0e] = a0\n 55398: a0 = t2 >> 0x28\n 55401: u64 [sp + 0x78] = a0\n 55404: a1 = sp + 0x1000\n 55408: u8 [a1 + 0xfffffffffffffa0d] = a0\n 55412: a0 = t2 >> 0x20\n 55415: u64 [sp + 0x70] = a0\n 55418: a1 = sp + 0x1000\n 55422: u8 [a1 + 0xfffffffffffffa0c] = a0\n 55426: a0 = t2 >> 0x18\n 55429: u64 [sp + 0x68] = a0\n 55432: a1 = sp + 0x1000\n 55436: u8 [a1 + 0xfffffffffffffa0b] = a0\n 55440: a0 = t2 >> 0x10\n 55443: u64 [sp + 0x60] = a0\n 55446: a1 = sp + 0x1000\n 55450: u8 [a1 + 0xfffffffffffffa0a] = a0\n 55454: a0 = t2 >> 0x8\n 55457: u64 [sp + 0x58] = a0\n 55460: a1 = sp + 0x1000\n 55464: u8 [a1 + 0xfffffffffffffa09] = a0\n 55468: ra = u64 [sp + 0x268]\n 55472: a0 = sp + 0x1000\n 55476: u8 [a0 + 0xfffffffffffffa18] = ra\n 55480: a0 = t1 >> 0x38\n 55483: u64 [sp + 0x50] = a0\n 55486: a1 = sp + 0x1000\n 55490: u8 [a1 + 0xfffffffffffffa17] = a0\n 55494: a0 = t1 >> 0x30\n 55497: u64 [sp + 0x48] = a0\n 55500: a1 = sp + 0x1000\n 55504: u8 [a1 + 0xfffffffffffffa16] = a0\n 55508: a0 = t1 >> 0x28\n 55511: u64 [sp + 0x40] = a0\n 55514: a1 = sp + 0x1000\n 55518: u8 [a1 + 0xfffffffffffffa15] = a0\n 55522: a0 = t1 >> 0x20\n 55525: u64 [sp + 0x38] = a0\n 55528: a1 = sp + 0x1000\n 55532: u8 [a1 + 0xfffffffffffffa14] = a0\n 55536: a0 = t1 >> 0x18\n 55539: u64 [sp + 0x30] = a0\n 55542: a1 = sp + 0x1000\n 55546: u8 [a1 + 0xfffffffffffffa13] = a0\n 55550: a0 = t1 >> 0x10\n 55553: u64 [sp + 0x358] = a0\n 55557: a1 = sp + 0x1000\n 55561: u8 [a1 + 0xfffffffffffffa12] = a0\n 55565: a0 = t1 >> 0x8\n 55568: u64 [sp + 0x350] = a0\n 55572: a1 = sp + 0x1000\n 55576: u8 [a1 + 0xfffffffffffffa11] = a0\n 55580: a0 = ra >> 0x38\n 55583: u64 [sp + 0x348] = a0\n 55587: a1 = sp + 0x1000\n 55591: u8 [a1 + 0xfffffffffffffa1f] = a0\n 55595: a0 = ra >> 0x30\n 55598: u64 [sp + 0x318] = a0\n 55602: a1 = sp + 0x1000\n 55606: u8 [a1 + 0xfffffffffffffa1e] = a0\n 55610: a0 = ra >> 0x28\n 55613: u64 [sp + 0x310] = a0\n 55617: a1 = sp + 0x1000\n 55621: u8 [a1 + 0xfffffffffffffa1d] = a0\n 55625: a0 = ra >> 0x20\n 55628: u64 [sp + 0x308] = a0\n 55632: a1 = sp + 0x1000\n 55636: u8 [a1 + 0xfffffffffffffa1c] = a0\n 55640: a0 = ra >> 0x18\n 55643: u64 [sp + 0xd8] = a0\n 55647: a1 = sp + 0x1000\n 55651: u8 [a1 + 0xfffffffffffffa1b] = a0\n 55655: a0 = ra >> 0x10\n 55658: u64 [sp + 0xd0] = a0\n 55662: a1 = sp + 0x1000\n 55666: u8 [a1 + 0xfffffffffffffa1a] = a0\n 55670: a0 = ra >> 0x8\n 55673: u64 [sp + 0xc8] = a0\n 55677: a1 = sp + 0x1000\n 55681: u8 [a1 + 0xfffffffffffffa19] = a0\n 55685: a0 = t0 << 0x38\n 55688: a0 = a0 >> 0x3b\n 55691: a2 = sp + 0x7ff\n 55695: a2 = a2 + 0x201\n 55699: a2 = a2 - a0\n 55702: a0 = u8 [a2 + 0x19]\n 55705: a3 = u8 [a2 + 0x18]\n 55708: a4 = u8 [a2 + 0x1a]\n 55711: a5 = u8 [a2 + 0x1b]\n 55714: a0 = a0 << 0x8\n 55717: a0 = a0 | a3\n 55720: a4 = a4 << 0x10\n 55723: a5 = a5 << 0x18\n 55726: a4 = a4 | a5\n 55729: a0 = a0 | a4\n 55732: a3 = u8 [a2 + 0x1d]\n 55735: a4 = u8 [a2 + 0x1c]\n 55738: a5 = u8 [a2 + 0x1e]\n 55741: s1 = u8 [a2 + 0x1f]\n 55744: a3 = a3 << 0x8\n 55747: a3 = a3 | a4\n 55750: a5 = a5 << 0x10\n 55753: s1 = s1 << 0x18\n 55756: a5 = a5 | s1\n 55759: a3 = a3 | a5\n 55762: a3 = a3 << 0x20\n 55765: a3 = a3 | a0\n 55768: a0 = u8 [a2 + 0x11]\n 55771: a4 = u8 [a2 + 0x10]\n 55774: a5 = u8 [a2 + 0x12]\n 55777: s1 = u8 [a2 + 0x13]\n 55780: a0 = a0 << 0x8\n 55783: a0 = a0 | a4\n 55786: a5 = a5 << 0x10\n 55789: s1 = s1 << 0x18\n 55792: a5 = a5 | s1\n 55795: a0 = a0 | a5\n 55798: a4 = u8 [a2 + 0x15]\n 55801: a5 = u8 [a2 + 0x14]\n 55804: s1 = u8 [a2 + 0x16]\n 55807: a1 = u8 [a2 + 0x17]\n 55810: a4 = a4 << 0x8\n 55813: a4 = a4 | a5\n 55816: s1 = s1 << 0x10\n 55819: a1 = a1 << 0x18\n 55822: a1 = a1 | s1\n 55825: a1 = a1 | a4\n 55828: a1 = a1 << 0x20\n 55831: t1 = a1 | a0\n 55834: a1 = t0 & 0x7\n 55837: a0 = a3 << a1\n 55840: a5 = t1 >> 0x1\n 55843: t0 = a1 ^ 0x3f\n 55846: a5 = a5 >> t0\n 55849: a0 = a0 | a5\n 55852: u64 [sp + 0x3a0] = a0\n 55856: a0 = u8 [a2 + 0x9]\n 55859: a5 = u8 [a2 + 0x8]\n 55862: s1 = u8 [a2 + 0xa]\n 55865: a3 = u8 [a2 + 0xb]\n 55868: a0 = a0 << 0x8\n 55871: a0 = a0 | a5\n 55874: s1 = s1 << 0x10\n 55877: a3 = a3 << 0x18\n 55880: a3 = a3 | s1\n 55883: a0 = a0 | a3\n 55886: a3 = u8 [a2 + 0xd]\n 55889: a5 = u8 [a2 + 0xc]\n 55892: s1 = u8 [a2 + 0xe]\n 55895: a4 = u8 [a2 + 0xf]\n 55898: a3 = a3 << 0x8\n 55901: a3 = a3 | a5\n 55904: s1 = s1 << 0x10\n 55907: a4 = a4 << 0x18\n 55910: a4 = a4 | s1\n 55913: a3 = a3 | a4\n 55916: a3 = a3 << 0x20\n 55919: a5 = a3 | a0\n 55922: a0 = a5 >> 0x1\n 55925: a3 = a1 ^ 0xffffffffffffffff\n 55928: a0 = a0 >> a3\n 55931: a3 = t1 << a1\n 55934: a0 = a0 | a3\n 55937: u64 [sp + 0x398] = a0\n 55941: a0 = u8 [a2 + 0x1]\n 55944: a3 = u8 [a2]\n 55946: a4 = u8 [a2 + 0x2]\n 55949: s1 = u8 [a2 + 0x3]\n 55952: a0 = a0 << 0x8\n 55955: a0 = a0 | a3\n 55958: a4 = a4 << 0x10\n 55961: s1 = s1 << 0x18\n 55964: a4 = a4 | s1\n 55967: a0 = a0 | a4\n 55970: a3 = u8 [a2 + 0x5]\n 55973: a4 = u8 [a2 + 0x4]\n 55976: s1 = u8 [a2 + 0x6]\n 55979: a2 = u8 [a2 + 0x7]\n 55982: a3 = a3 << 0x8\n 55985: a3 = a3 | a4\n 55988: a4 = u64 [sp + 0x370]\n 55992: s1 = s1 << 0x10\n 55995: a2 = a2 << 0x18\n 55998: a2 = a2 | s1\n 56001: a2 = a2 | a3\n 56004: a2 = a2 << 0x20\n 56007: a0 = a0 | a2\n 56010: a2 = a0 >> 0x1\n 56013: a2 = a2 >> t0\n 56016: t1 = u64 [sp + 0x380]\n 56020: a3 = a5 << a1\n 56023: a5 = u64 [sp + 0x378]\n 56027: a2 = a2 | a3\n 56030: u64 [sp + 0x388] = a2\n 56034: a2 = t1 | a4\n 56037: a3 = u64 [sp + 0x3a8]\n 56041: a3 = a3 | a5\n 56044: a2 = a2 | a3\n 56047: a0 = a0 << a1\n 56050: u64 [sp + 0x390] = a0\n 56054: jump @284 if a2 == 0\n      : @279 (gas: 284)\n 56058: u64 [sp + 872] = 0\n 56062: u64 [sp + 864] = 0\n 56066: a0 = u64 [sp + 0xc0]\n 56070: a1 = sp + 0x1000\n 56074: u8 [a1 + 0xfffffffffffff9a7] = a0\n 56078: a0 = u64 [sp + 0xb8]\n 56082: a1 = sp + 0x1000\n 56086: u8 [a1 + 0xfffffffffffff9a6] = a0\n 56090: a0 = u64 [sp + 0xb0]\n 56094: a1 = sp + 0x1000\n 56098: u8 [a1 + 0xfffffffffffff9a5] = a0\n 56102: a0 = u64 [sp + 0xa8]\n 56106: a1 = sp + 0x1000\n 56110: u8 [a1 + 0xfffffffffffff9a4] = a0\n 56114: a0 = u64 [sp + 0xa0]\n 56118: a1 = sp + 0x1000\n 56122: u8 [a1 + 0xfffffffffffff9a3] = a0\n 56126: a0 = u64 [sp + 0x98]\n 56130: a1 = sp + 0x1000\n 56134: u8 [a1 + 0xfffffffffffff9a2] = a0\n 56138: a0 = u64 [sp + 0x90]\n 56142: a1 = sp + 0x1000\n 56146: u8 [a1 + 0xfffffffffffff9a1] = a0\n 56150: a0 = u64 [sp + 0x88]\n 56154: a1 = sp + 0x1000\n 56158: u8 [a1 + 0xfffffffffffff9af] = a0\n 56162: a0 = u64 [sp + 0x80]\n 56166: a1 = sp + 0x1000\n 56170: u8 [a1 + 0xfffffffffffff9ae] = a0\n 56174: a0 = u64 [sp + 0x78]\n 56177: a1 = sp + 0x1000\n 56181: u8 [a1 + 0xfffffffffffff9ad] = a0\n 56185: a0 = u64 [sp + 0x70]\n 56188: a1 = sp + 0x1000\n 56192: u8 [a1 + 0xfffffffffffff9ac] = a0\n 56196: a0 = u64 [sp + 0x68]\n 56199: a1 = sp + 0x1000\n 56203: u8 [a1 + 0xfffffffffffff9ab] = a0\n 56207: a0 = u64 [sp + 0x60]\n 56210: a1 = sp + 0x1000\n 56214: u8 [a1 + 0xfffffffffffff9aa] = a0\n 56218: a0 = u64 [sp + 0x58]\n 56221: a1 = sp + 0x1000\n 56225: u8 [a1 + 0xfffffffffffff9a9] = a0\n 56229: a0 = u64 [sp + 0x50]\n 56232: a1 = sp + 0x1000\n 56236: u8 [a1 + 0xfffffffffffff9b7] = a0\n 56240: a0 = u64 [sp + 0x48]\n 56243: a1 = sp + 0x1000\n 56247: u8 [a1 + 0xfffffffffffff9b6] = a0\n 56251: a0 = u64 [sp + 0x40]\n 56254: a1 = sp + 0x1000\n 56258: u8 [a1 + 0xfffffffffffff9b5] = a0\n 56262: a0 = u64 [sp + 0x38]\n 56265: a1 = sp + 0x1000\n 56269: u8 [a1 + 0xfffffffffffff9b4] = a0\n 56273: a0 = u64 [sp + 0x30]\n 56276: a1 = sp + 0x1000\n 56280: u8 [a1 + 0xfffffffffffff9b3] = a0\n 56284: a0 = sp + 0x1000\n 56288: u8 [a0 + 4294965727] = 0\n 56292: a0 = sp + 0x1000\n 56296: u8 [a0 + 4294965726] = 0\n 56300: a0 = sp + 0x1000\n 56304: u8 [a0 + 4294965725] = 0\n 56308: a0 = sp + 0x1000\n 56312: u8 [a0 + 4294965724] = 0\n 56316: a0 = sp + 0x1000\n 56320: u8 [a0 + 4294965723] = 0\n 56324: a0 = sp + 0x1000\n 56328: u8 [a0 + 4294965722] = 0\n 56332: a0 = sp + 0x1000\n 56336: u8 [a0 + 4294965721] = 0\n 56340: a0 = sp + 0x1000\n 56344: u8 [a0 + 4294965720] = 0\n 56348: a0 = sp + 0x1000\n 56352: u8 [a0 + 4294965719] = 0\n 56356: a0 = sp + 0x1000\n 56360: u8 [a0 + 4294965718] = 0\n 56364: a0 = sp + 0x1000\n 56368: u8 [a0 + 4294965717] = 0\n 56372: a0 = sp + 0x1000\n 56376: u8 [a0 + 4294965716] = 0\n 56380: a0 = sp + 0x1000\n 56384: u8 [a0 + 4294965715] = 0\n 56388: a0 = sp + 0x1000\n 56392: u8 [a0 + 4294965714] = 0\n 56396: a0 = sp + 0x1000\n 56400: u8 [a0 + 4294965713] = 0\n 56404: a0 = sp + 0x1000\n 56408: u8 [a0 + 4294965712] = 0\n 56412: a0 = sp + 0x1000\n 56416: u8 [a0 + 4294965711] = 0\n 56420: a0 = sp + 0x1000\n 56424: u8 [a0 + 4294965710] = 0\n 56428: a0 = sp + 0x1000\n 56432: u8 [a0 + 4294965709] = 0\n 56436: a0 = sp + 0x1000\n 56440: u8 [a0 + 4294965708] = 0\n 56444: a0 = sp + 0x1000\n 56448: u8 [a0 + 4294965707] = 0\n 56452: a0 = sp + 0x1000\n 56456: u8 [a0 + 4294965706] = 0\n 56460: a0 = sp + 0x1000\n 56464: u8 [a0 + 4294965705] = 0\n 56468: a0 = sp + 0x1000\n 56472: u8 [a0 + 4294965704] = 0\n 56476: a0 = sp + 0x1000\n 56480: u8 [a0 + 4294965703] = 0\n 56484: a0 = sp + 0x1000\n 56488: u8 [a0 + 4294965702] = 0\n 56492: a0 = sp + 0x1000\n 56496: u8 [a0 + 4294965701] = 0\n 56500: a0 = sp + 0x1000\n 56504: u8 [a0 + 4294965700] = 0\n 56508: a0 = sp + 0x1000\n 56512: u8 [a0 + 4294965699] = 0\n 56516: a0 = sp + 0x1000\n 56520: u8 [a0 + 4294965698] = 0\n 56524: a0 = sp + 0x1000\n 56528: u8 [a0 + 4294965697] = 0\n 56532: a0 = sp + 0x1000\n 56536: u8 [a0 + 4294965696] = 0\n 56540: a0 = u64 [sp + 0x300]\n 56544: a1 = sp + 0x1000\n 56548: u8 [a1 + 0xfffffffffffff9a0] = a0\n 56552: a0 = sp + 0x1000\n 56556: u8 [a0 + 0xfffffffffffff9a8] = t2\n 56560: a0 = u64 [sp + 0x260]\n 56564: a1 = sp + 0x1000\n 56568: u8 [a1 + 0xfffffffffffff9b0] = a0\n 56572: a0 = sp + 0x1000\n 56576: u8 [a0 + 0xfffffffffffff9b8] = ra\n 56580: a0 = u64 [sp + 0x358]\n 56584: a1 = sp + 0x1000\n 56588: u8 [a1 + 0xfffffffffffff9b2] = a0\n 56592: a0 = u64 [sp + 0x350]\n 56596: a1 = sp + 0x1000\n 56600: u8 [a1 + 0xfffffffffffff9b1] = a0\n 56604: a0 = u64 [sp + 0x348]\n 56608: a1 = sp + 0x1000\n 56612: u8 [a1 + 0xfffffffffffff9bf] = a0\n 56616: a0 = u64 [sp + 0x318]\n 56620: a1 = sp + 0x1000\n 56624: u8 [a1 + 0xfffffffffffff9be] = a0\n 56628: a0 = u64 [sp + 0x310]\n 56632: a1 = sp + 0x1000\n 56636: u8 [a1 + 0xfffffffffffff9bd] = a0\n 56640: a0 = u64 [sp + 0x308]\n 56644: a1 = sp + 0x1000\n 56648: u8 [a1 + 0xfffffffffffff9bc] = a0\n 56652: a0 = u64 [sp + 0xd8]\n 56656: a1 = sp + 0x1000\n 56660: u8 [a1 + 0xfffffffffffff9bb] = a0\n 56664: a0 = u64 [sp + 0xd0]\n 56668: a1 = sp + 0x1000\n 56672: u8 [a1 + 0xfffffffffffff9ba] = a0\n 56676: a0 = u64 [sp + 0xc8]\n 56680: a1 = sp + 0x1000\n 56684: u8 [a1 + 0xfffffffffffff9b9] = a0\n 56688: s1 = u64 [sp + 0x3a8]\n 56692: a0 = s1 << 0x38\n 56695: a0 = a0 >> 0x3b\n 56698: a3 = sp + 0x7ff\n 56702: a3 = a3 + 0x1a1\n 56706: a3 = a3 + a0\n 56709: a0 = u8 [a3 + 0x11]\n 56712: a1 = u8 [a3 + 0x10]\n 56715: a2 = u8 [a3 + 0x12]\n 56718: a4 = u8 [a3 + 0x13]\n 56721: a0 = a0 << 0x8\n 56724: a0 = a0 | a1\n 56727: a2 = a2 << 0x10\n 56730: a4 = a4 << 0x18\n 56733: a2 = a2 | a4\n 56736: a0 = a0 | a2\n 56739: a1 = u8 [a3 + 0x15]\n 56742: a2 = u8 [a3 + 0x14]\n 56745: a4 = u8 [a3 + 0x16]\n 56748: a5 = u8 [a3 + 0x17]\n 56751: a1 = a1 << 0x8\n 56754: a1 = a1 | a2\n 56757: a4 = a4 << 0x10\n 56760: a5 = a5 << 0x18\n 56763: a4 = a4 | a5\n 56766: a1 = a1 | a4\n 56769: a1 = a1 << 0x20\n 56772: ra = a1 | a0\n 56775: t0 = s1 & 0x7\n 56778: a2 = ra >> t0\n 56781: a0 = u8 [a3 + 0x19]\n 56784: a4 = u8 [a3 + 0x18]\n 56787: a5 = u8 [a3 + 0x1a]\n 56790: s1 = u8 [a3 + 0x1b]\n 56793: a0 = a0 << 0x8\n 56796: a0 = a0 | a4\n 56799: a5 = a5 << 0x10\n 56802: s1 = s1 << 0x18\n 56805: a5 = a5 | s1\n 56808: a0 = a0 | a5\n 56811: a4 = u8 [a3 + 0x1d]\n 56814: a5 = u8 [a3 + 0x1c]\n 56817: s1 = u8 [a3 + 0x1e]\n 56820: a1 = u8 [a3 + 0x1f]\n 56823: a4 = a4 << 0x8\n 56826: a4 = a4 | a5\n 56829: s1 = s1 << 0x10\n 56832: a1 = a1 << 0x18\n 56835: a1 = a1 | s1\n 56838: a1 = a1 | a4\n 56841: a1 = a1 << 0x20\n 56844: t2 = a1 | a0\n 56847: a1 = t2 << 0x1\n 56850: a0 = t0 ^ 0x3f\n 56853: a1 = a1 << a0\n 56856: a1 = a1 | a2\n 56859: u64 [sp + 0x358] = a1\n 56863: a1 = u8 [a3 + 0x9]\n 56866: a2 = u8 [a3 + 0x8]\n 56869: a4 = u8 [a3 + 0xa]\n 56872: a5 = u8 [a3 + 0xb]\n 56875: a1 = a1 << 0x8\n 56878: a1 = a1 | a2\n 56881: a4 = a4 << 0x10\n 56884: a5 = a5 << 0x18\n 56887: a4 = a4 | a5\n 56890: a1 = a1 | a4\n 56893: a2 = u8 [a3 + 0xd]\n 56896: a4 = u8 [a3 + 0xc]\n 56899: a5 = u8 [a3 + 0xe]\n 56902: s1 = u8 [a3 + 0xf]\n 56905: a2 = a2 << 0x8\n 56908: a2 = a2 | a4\n 56911: a5 = a5 << 0x10\n 56914: s1 = s1 << 0x18\n 56917: a5 = a5 | s1\n 56920: a2 = a2 | a5\n 56923: a2 = a2 << 0x20\n 56926: a2 = a2 | a1\n 56929: a1 = a2 >> t0\n 56932: ra = ra << 0x1\n 56935: a4 = t0 ^ 0xffffffffffffffff\n 56938: a4 = ra << a4\n 56941: a1 = a1 | a4\n 56944: a4 = u8 [a3 + 0x1]\n 56947: a5 = u8 [a3]\n 56949: s1 = u8 [a3 + 0x2]\n 56952: ra = u8 [a3 + 0x3]\n 56955: a4 = a4 << 0x8\n 56958: a4 = a4 | a5\n 56961: s1 = s1 << 0x10\n 56964: ra = ra << 0x18\n 56967: a5 = ra | s1\n 56970: ra = a5 | a4\n 56973: a5 = u8 [a3 + 0x5]\n 56976: s1 = u8 [a3 + 0x4]\n 56979: a4 = u8 [a3 + 0x6]\n 56982: a3 = u8 [a3 + 0x7]\n 56985: a5 = a5 << 0x8\n 56988: a5 = a5 | s1\n 56991: a4 = a4 << 0x10\n 56994: a3 = a3 << 0x18\n 56997: a3 = a3 | a4\n 57000: a3 = a3 | a5\n 57003: a5 = u64 [sp + 0x368]\n 57007: a3 = a3 << 0x20\n 57010: a3 = a3 | ra\n 57013: a3 = a3 >> t0\n 57016: a2 = a2 << 0x1\n 57019: a0 = a2 << a0\n 57022: ra = a3 | a0\n 57025: a4 = t2 >> t0\n 57028: a2 = u64 [sp + 0x3b8]\n 57032: a0 = a2 <u 0x1\n 57035: a3 = u64 [sp + 0x3b0]\n 57039: a0 = a3 - a0\n 57042: u64 [sp + 0x318] = a0\n 57046: a0 = a2 | a3\n 57049: a0 = a0 >u 0\n 57051: a0 = a0 + 0xffffffffffffffff\n 57054: u64 [sp + 0x310] = a0\n 57058: a2 = a2 + 0xffffffffffffffff\n 57061: u64 [sp + 0x308] = a2\n 57065: fallthrough\n      : @280 (gas: 95)\n 57066: u64 [sp + 0x368] = a5\n 57070: u64 [sp + 0x380] = t1\n 57074: u64 [sp + 840] = 0\n 57078: a0 = ra >> 0x3f\n 57081: a3 = a1 << 0x1\n 57084: t1 = a3 | a0\n 57087: ra = ra << 0x1\n 57090: t2 = u64 [sp + 0x3a0]\n 57094: a0 = t2 >> 0x3f\n 57097: s1 = ra | a0\n 57100: a0 = u64 [sp + 0x318]\n 57104: a2 = a0 ^ t1\n 57107: a5 = a0 <u t1\n 57110: a0 = u64 [sp + 0x308]\n 57114: a0 = a0 <u s1\n 57117: a0 = a5 if a2 != 0\n 57120: a3 = a4 << 0x1\n 57123: a4 = u64 [sp + 0x358]\n 57127: a2 = a4 >> 0x3f\n 57130: t0 = a3 | a2\n 57133: u64 [sp + 0x350] = t0\n 57137: a1 = a1 >> 0x3f\n 57140: a4 = a4 << 0x1\n 57143: a3 = a4 | a1\n 57146: a4 = t2 << 0x1\n 57149: a1 = u64 [sp + 0x398]\n 57153: a5 = a1 >> 0x3f\n 57156: ra = a4 | a5\n 57159: a5 = a1 << 0x1\n 57162: a1 = u64 [sp + 0x388]\n 57166: a2 = a1 >> 0x3f\n 57169: a2 = a2 | a5\n 57172: a5 = a1 << 0x1\n 57175: a1 = u64 [sp + 0x390]\n 57179: a4 = a1 >> 0x3f\n 57182: a4 = a4 | a5\n 57185: a5 = a1 << 0x1\n 57188: a1 = u64 [sp + 0x368]\n 57192: a1 = a1 | a5\n 57195: u64 [sp + 0x390] = a1\n 57199: a5 = u64 [sp + 0x360]\n 57203: a4 = a4 | a5\n 57206: u64 [sp + 0x388] = a4\n 57210: a2 = a2 | a5\n 57213: u64 [sp + 0x398] = a2\n 57217: a1 = a5 | ra\n 57220: u64 [sp + 0x3a0] = a1\n 57224: a1 = u64 [sp + 0x310]\n 57228: a2 = a1 - a3\n 57231: a0 = a2 <u a0\n 57234: a2 = a1 <u a3\n 57237: a4 = a1 - t0\n 57240: a4 = a4 - a2\n 57243: a4 = a4 - a0\n 57246: a5 = a4 >>a 0x3f\n 57249: a0 = u64 [sp + 0x3b8]\n 57253: ra = a5 & a0\n 57256: a2 = u64 [sp + 0x3b0]\n 57260: a2 = a2 & a5\n 57263: a1 = t1 ^ a2\n 57266: a4 = t1 <u a2\n 57269: a0 = s1 <u ra\n 57272: a4 = a0 if a1 == 0\n 57275: t0 = u64 [sp + 0x370]\n 57279: t2 = u64 [sp + 0x380]\n 57283: a1 = a3 - a4\n 57286: u64 [sp + 0x358] = a1\n 57290: a1 = a3 <u a4\n 57293: a3 = u64 [sp + 0x350]\n 57297: a1 = a3 - a1\n 57300: u64 [sp + 0x368] = a1\n 57304: a1 = t1 - a2\n 57307: a1 = a1 - a0\n 57310: ra = s1 - ra\n 57313: a4 = u64 [sp + 0x3a8]\n 57317: a0 = a4 | t2\n 57320: a0 = a0 <u 0x1\n 57323: a3 = u64 [sp + 0x378]\n 57327: a2 = a3 <u a0\n 57330: a0 = a3 - a0\n 57333: a3 = a4 <u 0x1\n 57336: t2 = t2 - a3\n 57339: t0 = t0 - a2\n 57342: a4 = a4 + 0xffffffffffffffff\n 57345: u64 [sp + 0x370] = t0\n 57349: t1 = t2\n 57351: a2 = t2 | t0\n 57354: u64 [sp + 0x3a8] = a4\n 57358: a3 = a4 | a0\n 57361: a4 = u64 [sp + 0x368]\n 57365: a2 = a2 | a3\n 57368: a5 = a5 & 0x1\n 57371: u64 [sp + 0x378] = a0\n 57375: u64 [sp + 864] = 0\n 57379: jump @280 if a2 != 0\n      : @281 (gas: 1)\n 57383: jump @285\n      : @282 (gas: 5)\n 57385: a0 = 0xffffffffffffffff\n 57388: ra = 0xffffffffffffffff\n 57391: a1 = 0xffffffffffffffff\n 57394: t1 = 0xffffffffffffffff\n 57397: jump @304\n      : @283 (gas: 2)\n 57400: t2 = u64 [sp + 0x388]\n 57404: jump @286\n      : @284 (gas: 3)\n 57406: a5 = 0\n 57408: u64 [sp + 840] = 0\n 57412: fallthrough\n      : @285 (gas: 23)\n 57413: a2 = u64 [sp + 0x398]\n 57417: a0 = a2 >> 0x3f\n 57420: a1 = u64 [sp + 0x3a0]\n 57424: a1 = a1 << 0x1\n 57427: a1 = a1 | a0\n 57430: a4 = u64 [sp + 0x388]\n 57434: a0 = a4 >> 0x3f\n 57437: a2 = a2 << 0x1\n 57440: a2 = a2 | a0\n 57443: a0 = u64 [sp + 0x390]\n 57447: a3 = a0 >> 0x3f\n 57450: a4 = a4 << 0x1\n 57453: a0 = a0 << 0x1\n 57456: a0 = a0 | a5\n 57459: u64 [sp + 0x370] = a0\n 57463: a5 = u64 [sp + 0x348]\n 57467: a3 = a3 | a5\n 57470: a3 = a3 | a4\n 57473: u64 [sp + 0x3a0] = a3\n 57477: a0 = a5 | a2\n 57480: u64 [sp + 0x3a8] = a0\n 57484: t2 = a5 | a1\n 57487: fallthrough\n      : @286 (gas: 179)\n 57488: a2 = u64 [sp + 0xe0]\n 57492: a2 = a2 << 0x8\n 57495: a0 = u64 [sp + 0x100]\n 57499: a2 = a2 | a0\n 57502: a3 = u64 [sp + 0xf0]\n 57506: a3 = a3 << 0x10\n 57509: a4 = u64 [sp + 0xe8]\n 57513: a4 = a4 << 0x18\n 57516: a3 = a3 | a4\n 57519: a2 = a2 | a3\n 57522: a3 = u64 [sp + 0xf8]\n 57526: a3 = a3 << 0x8\n 57529: a0 = u64 [sp + 0x118]\n 57533: a3 = a3 | a0\n 57536: a4 = u64 [sp + 0x110]\n 57540: a4 = a4 << 0x10\n 57543: a5 = u64 [sp + 0x108]\n 57547: a5 = a5 << 0x18\n 57550: a4 = a4 | a5\n 57553: a3 = a3 | a4\n 57556: a3 = a3 << 0x20\n 57559: a2 = a2 | a3\n 57562: a3 = u64 [sp + 0x120]\n 57566: a3 = a3 << 0x8\n 57569: a0 = u64 [sp + 0x148]\n 57573: a3 = a3 | a0\n 57576: a4 = u64 [sp + 0x130]\n 57580: a4 = a4 << 0x10\n 57583: a5 = u64 [sp + 0x128]\n 57587: a5 = a5 << 0x18\n 57590: a4 = a4 | a5\n 57593: a3 = a3 | a4\n 57596: a4 = u64 [sp + 0x140]\n 57600: a4 = a4 << 0x8\n 57603: a0 = u64 [sp + 0x160]\n 57607: a4 = a4 | a0\n 57610: a5 = u64 [sp + 0x158]\n 57614: a5 = a5 << 0x10\n 57617: s1 = u64 [sp + 0x150]\n 57621: s1 = s1 << 0x18\n 57624: a5 = a5 | s1\n 57627: a4 = a4 | a5\n 57630: a4 = a4 << 0x20\n 57633: a3 = a3 | a4\n 57636: a0 = u64 [sp + 0x200]\n 57640: a2 = a2 << a0\n 57643: t0 = a0\n 57645: a4 = a3 >> 0x1\n 57648: a1 = u64 [sp + 0x1f8]\n 57652: a4 = a4 >> a1\n 57655: a2 = a2 | a4\n 57658: u64 [sp + 0x380] = a2\n 57662: a2 = u64 [sp + 0x168]\n 57666: a2 = a2 << 0x8\n 57669: a0 = u64 [sp + 0x188]\n 57673: a2 = a2 | a0\n 57676: a4 = u64 [sp + 0x178]\n 57680: a4 = a4 << 0x10\n 57683: a5 = u64 [sp + 0x170]\n 57687: a5 = a5 << 0x18\n 57690: a4 = a4 | a5\n 57693: a2 = a2 | a4\n 57696: a4 = u64 [sp + 0x180]\n 57700: a4 = a4 << 0x8\n 57703: a0 = u64 [sp + 0x1a0]\n 57707: a4 = a4 | a0\n 57710: a5 = u64 [sp + 0x198]\n 57714: a5 = a5 << 0x10\n 57717: s1 = u64 [sp + 0x190]\n 57721: s1 = s1 << 0x18\n 57724: a5 = a5 | s1\n 57727: a4 = a4 | a5\n 57730: a4 = a4 << 0x20\n 57733: a2 = a2 | a4\n 57736: a3 = a3 << t0\n 57739: a4 = a2 >> 0x1\n 57742: a5 = u64 [sp + 0x1e8]\n 57746: a4 = a4 >> a5\n 57749: a3 = a3 | a4\n 57752: u64 [sp + 0x378] = a3\n 57756: a3 = u64 [sp + 0x1a8]\n 57760: a3 = a3 << 0x8\n 57763: a0 = u64 [sp + 0x1c0]\n 57767: a3 = a3 | a0\n 57770: a4 = u64 [sp + 0x1b8]\n 57774: a4 = a4 << 0x10\n 57777: a5 = u64 [sp + 0x1b0]\n 57781: a5 = a5 << 0x18\n 57784: a4 = a4 | a5\n 57787: a2 = a2 << t0\n 57790: a3 = a3 | a4\n 57793: a4 = u64 [sp + 0x1c8]\n 57797: a4 = a4 << 0x8\n 57800: a0 = u64 [sp + 0x210]\n 57804: a4 = a4 | a0\n 57807: a5 = u64 [sp + 0x208]\n 57811: a5 = a5 << 0x10\n 57814: s1 = u64 [sp + 0x1d0]\n 57818: s1 = s1 << 0x18\n 57821: a5 = a5 | s1\n 57824: a4 = a4 | a5\n 57827: a4 = a4 << 0x20\n 57830: a3 = a3 | a4\n 57833: u64 [sp + 0x388] = a3\n 57837: a3 = a3 >> 0x1\n 57840: a3 = a3 >> a1\n 57843: a2 = a2 | a3\n 57846: u64 [sp + 0x210] = a2\n 57850: t0 = u64 [sp + 0x3b8]\n 57854: ra = u64 [sp + 0x370]\n 57858: a2 = ra mulhu t0\n 57861: a0 = u64 [sp + 0x3a0]\n 57865: a3 = a0 * t0\n 57868: a2 = a2 + a3\n 57871: a3 = a2 <u a3\n 57874: a4 = a0 mulhu t0\n 57877: a5 = a4 + a3\n 57880: a1 = u64 [sp + 0x3b0]\n 57884: a4 = ra * a1\n 57887: t1 = a4 + a2\n 57890: a4 = t1 <u a4\n 57893: s1 = ra mulhu a1\n 57896: a4 = a4 + s1\n 57899: a3 = a5 + a4\n 57902: u64 [sp + 0x3a0] = a0\n 57906: s1 = a0 * a1\n 57909: a4 = s1 + a3\n 57912: s1 = a4 <u s1\n 57915: a3 = a3 <u a5\n 57918: a5 = a0 mulhu a1\n 57921: a3 = a3 + a5\n 57924: a3 = a3 + s1\n 57927: a0 = u64 [sp + 0x3a8]\n 57931: a5 = t0 mulhu a0\n 57934: s1 = t0 * t2\n 57937: a5 = a5 + s1\n 57940: s1 = a1 * a0\n 57943: a5 = a5 + s1\n 57946: s1 = t0 * a0\n 57949: s1 = s1 + a4\n 57952: a4 = s1 <u a4\n 57955: a3 = a3 + a5\n 57958: a3 = a3 + a4\n 57961: a1 = ra * t0\n 57964: u64 [sp + 0x368] = a1\n 57968: a2 = u64 [sp + 0x268]\n 57972: a2 = a2 - a3\n 57975: u64 [sp + 0x398] = a2\n 57979: a2 = u64 [sp + 0x2d0]\n 57983: u64 [sp + 0x360] = t1\n 57987: t0 = a2 ^ t1\n 57990: a3 = a2 <u t1\n 57993: a4 = u64 [sp + 0x300]\n 57997: a5 = a4 <u a1\n 58000: a3 = a5 if t0 == 0\n 58003: t1 = u64 [sp + 0x260]\n 58007: a4 = t1 <u s1\n 58010: s1 = t1 - s1\n 58013: t1 = s1 <u a3\n 58016: a4 = a4 + t1\n 58019: a1 = u64 [sp + 0x398]\n 58023: a4 = a1 - a4\n 58026: u64 [sp + 0x398] = a4\n 58030: a4 = ra\n 58032: s1 = s1 - a3\n 58035: u64 [sp + 0x390] = s1\n 58039: a3 = a0\n 58041: a0 = u64 [sp + 0x360]\n 58045: a2 = a2 - a0\n 58048: t0 = a2 - a5\n 58051: a0 = u64 [sp + 0x200]\n 58055: a1 = u64 [sp + 0x388]\n 58059: a0 = a1 << a0\n 58062: u64 [sp + 0x268] = a0\n 58066: a0 = u64 [sp + 0x3a0]\n 58070: a1 = u64 [sp + 0x368]\n 58074: a2 = u64 [sp + 0x300]\n 58078: ra = a2 - a1\n 58081: jump @288\n      : @287 (gas: 37)\n 58083: a5 = u64 [sp + 0x3b8]\n 58087: a5 = a5 + ra\n 58090: a0 = a5 <u ra\n 58093: a2 = u64 [sp + 0x3b0]\n 58097: a2 = a2 + t0\n 58100: a2 = a2 + a0\n 58103: a1 = a2 ^ t0\n 58106: a3 = a2 <u t0\n 58109: a3 = a0 if a1 == 0\n 58112: a0 = a2 + 0x1\n 58115: a1 = a2 <u 0xffffffffffffffff\n 58118: t1 = a5 <u 0xffffffffffffffff\n 58121: t1 = a1 if a0 != 0\n 58124: a0 = a4 <u 0x1\n 58127: a1 = s1\n 58129: s1 = s1 - a0\n 58132: a0 = a4 | a1\n 58135: a0 = a0 <u 0x1\n 58138: a1 = u64 [sp + 0x3a8]\n 58142: ra = a1 <u a0\n 58145: t0 = a1 - a0\n 58148: t2 = t2 - ra\n 58151: a0 = u64 [sp + 0x390]\n 58155: a1 = a0 + a3\n 58158: a3 = a1 <u a0\n 58161: a0 = u64 [sp + 0x398]\n 58165: a0 = a0 + a3\n 58168: u64 [sp + 0x398] = a0\n 58172: a3 = a1 | a0\n 58175: t1 = 0 if a3 != 0\n 58177: a4 = a4 + 0xffffffffffffffff\n 58180: a0 = s1\n 58182: a3 = t0\n 58184: ra = a5\n 58186: t0 = a2\n 58188: u64 [sp + 0x390] = a1\n 58192: jump @290 if t1 == 0\n      : @288 (gas: 12)\n 58196: u64 [sp + 0x3a8] = a3\n 58200: a2 = a3 >u 0\n 58202: a5 = t2 >u 0\n 58204: a5 = a2 if t2 == 0\n 58207: a2 = a0 + 0x1\n 58210: s1 = a0\n 58212: a0 = a4 + 0x1\n 58215: a0 = a0 <u 0x1\n 58218: a0 = 0 if a2 != 0\n 58220: a2 = a3 | t2\n 58223: a0 = a5 if a2 != 0\n 58226: jump @287 if a0 != 0\n      : @289 (gas: 56)\n 58230: a3 = u64 [sp + 0x338]\n 58234: a0 = a4 mulhu a3\n 58237: a2 = s1 * a3\n 58240: a0 = a0 + a2\n 58243: a2 = a0 <u a2\n 58246: a5 = s1 mulhu a3\n 58249: u64 [sp + 0x3a0] = s1\n 58253: s1 = a5 + a2\n 58256: t1 = a4\n 58258: a4 = u64 [sp + 0x340]\n 58262: a5 = t1 * a4\n 58265: u64 [sp + 0x388] = t2\n 58269: t2 = a5 + a0\n 58272: a5 = t2 <u a5\n 58275: a1 = t1 mulhu a4\n 58278: a1 = a1 + a5\n 58281: a2 = s1 + a1\n 58284: a0 = u64 [sp + 0x3a0]\n 58288: a5 = a0 * a4\n 58291: a1 = a5 + a2\n 58294: a5 = a1 <u a5\n 58297: a2 = a2 <u s1\n 58300: a0 = u64 [sp + 0x3a0]\n 58304: s1 = a0 mulhu a4\n 58307: a2 = a2 + s1\n 58310: a2 = a2 + a5\n 58313: a0 = u64 [sp + 0x3a8]\n 58317: a5 = a3 mulhu a0\n 58320: s1 = u64 [sp + 0x388]\n 58324: s1 = a3 * s1\n 58327: a5 = a5 + s1\n 58330: s1 = a4 * a0\n 58333: a4 = t1\n 58335: a5 = a5 + s1\n 58338: s1 = a3 * a0\n 58341: s1 = s1 + a1\n 58344: a1 = s1 <u a1\n 58347: a2 = a2 + a5\n 58350: a1 = a1 + a2\n 58353: a2 = t1 * a3\n 58356: a3 = u64 [sp + 0x380]\n 58360: a5 = t2 ^ a3\n 58363: a0 = a3 <u t2\n 58366: t2 = u64 [sp + 0x388]\n 58370: a3 = u64 [sp + 0x378]\n 58374: a2 = a3 <u a2\n 58377: a2 = a0 if a5 != 0\n 58380: a0 = a1 ^ t0\n 58383: a1 = t0 <u a1\n 58386: a5 = ra <u s1\n 58389: a5 = a1 if a0 != 0\n 58392: s1 = s1 ^ ra\n 58395: a0 = a0 | s1\n 58398: s1 = u64 [sp + 0x3a0]\n 58402: a2 = a5 if a0 != 0\n 58405: jump @287 if a2 != 0\n      : @290 (gas: 110)\n 58409: a2 = s1 & 0xffffffffffffffff\n 58412: a1 = a4 & 0xffffffffffffffff\n 58415: t1 = u64 [sp + 0x338]\n 58419: a0 = a1 mulhu t1\n 58422: a3 = a2 * t1\n 58425: a0 = a0 + a3\n 58428: a3 = a0 <u a3\n 58431: a4 = a2 mulhu t1\n 58434: t0 = a4 + a3\n 58437: a3 = u64 [sp + 0x340]\n 58441: a4 = a1 * a3\n 58444: t2 = a4 + a0\n 58447: a4 = t2 <u a4\n 58450: a5 = a1 mulhu a3\n 58453: a4 = a4 + a5\n 58456: a4 = a4 + t0\n 58459: t0 = a4 <u t0\n 58462: a5 = a2 mulhu a3\n 58465: t0 = t0 + a5\n 58468: a5 = a2 * a3\n 58471: a4 = a4 + a5\n 58474: a5 = a4 <u a5\n 58477: t0 = t0 + a5\n 58480: a3 = u64 [sp + 0x3b8]\n 58484: a2 = a3 * a2\n 58487: a5 = a3 mulhu a1\n 58490: a2 = a2 + a5\n 58493: a0 = u64 [sp + 0x3b0]\n 58497: a5 = a0 * a1\n 58500: a2 = a2 + a5\n 58503: a2 = a2 + t0\n 58506: a3 = a3 * a1\n 58509: a3 = a3 + a4\n 58512: a4 = a3 <u a4\n 58515: a2 = a2 + a4\n 58518: a1 = a1 * t1\n 58521: a4 = u64 [sp + 0x2d0]\n 58525: t0 = a4 - a2\n 58528: a0 = u64 [sp + 0x380]\n 58532: a2 = a0 ^ t2\n 58535: a5 = a0 <u t2\n 58538: a4 = u64 [sp + 0x378]\n 58542: s1 = a4 <u a1\n 58545: a5 = s1 if a2 == 0\n 58548: a2 = u64 [sp + 0x300]\n 58552: t1 = a2 <u a3\n 58555: a3 = a2 - a3\n 58558: a2 = a3 <u a5\n 58561: a2 = a2 + t1\n 58564: ra = t0 - a2\n 58567: t0 = a3 - a5\n 58570: a0 = a0 - t2\n 58573: t2 = a0 - s1\n 58576: u64 [sp + 0x308] = t2\n 58580: t1 = a4 - a1\n 58583: a1 = clz ra\n 58585: a0 = clz t0\n 58587: a0 = a0 + 0x40\n 58590: a0 = a1 if ra != 0\n 58593: a1 = t0 | ra\n 58596: a2 = clz t2\n 58598: a3 = clz t1\n 58600: a3 = a3 + 0x40\n 58603: a3 = a2 if t2 != 0\n 58606: a2 = a3 + 0x80\n 58610: a0 = a2 if a1 == 0\n 58613: a2 = a2 <u a3\n 58616: a2 = 0 if a1 != 0\n 58618: a4 = u64 [sp + 0x220]\n 58622: a1 = a4 <u a0\n 58625: s1 = u64 [sp + 0x258]\n 58629: a3 = s1 ^ a2\n 58632: a5 = s1 <u a2\n 58635: a5 = a1 if a3 == 0\n 58638: a4 = a4 - a0\n 58641: a3 = a5 <u 0x1\n 58644: a3 = a3 + 0xffffffffffffffff\n 58647: s1 = s1 - a2\n 58650: s1 = s1 - a1\n 58653: a0 = s1 >u 0\n 58655: u64 [sp + 0x3a0] = a4\n 58659: a1 = a4 <u 0x100\n 58663: a1 = a1 ^ 0x1\n 58666: a1 = a0 if s1 != 0\n 58669: a4 = -a5\n 58671: a0 = a4 >u 0\n 58673: a2 = a3 >u 0\n 58675: u64 [sp + 0x390] = a3\n 58679: a2 = a0 if a3 == 0\n 58682: a2 = a1 if a5 == 0\n 58685: a0 = t2 | ra\n 58688: a1 = t1 | t0\n 58691: a0 = a0 | a1\n 58694: a0 = a0 <u 0x1\n 58697: a1 = u64 [sp + 0x218]\n 58701: a0 = a0 | a1\n 58704: a1 = t1\n 58706: a5 = a0 | a2\n 58709: u64 [sp + 0x2d0] = ra\n 58713: u64 [sp + 0x300] = t0\n 58717: ra = 0 if a5 != 0\n 58719: u64 [sp + 0x388] = ra\n 58723: t0 = 0 if a5 != 0\n 58725: u64 [sp + 0x398] = t0\n 58729: t1 = t2\n 58731: t1 = 0 if a5 != 0\n 58733: ra = a1\n 58735: ra = 0 if a5 != 0\n 58737: u64 [sp + 0x310] = a1\n 58741: jump @298 if a5 != 0\n      : @291 (gas: 7)\n 58745: a1 = u64 [sp + 0x3a0]\n 58749: a5 = a1 ^ 0xff\n 58753: a5 = a5 | a4\n 58756: t0 = u64 [sp + 0x390]\n 58760: a3 = s1 | t0\n 58763: a3 = a3 | a5\n 58766: jump @298 if a3 == 0\n      : @292 (gas: 322)\n 58770: a2 = a1 + 0x1\n 58773: u64 [sp + 0x3a8] = a2\n 58777: a0 = a2 <u 0x1\n 58780: a0 = a0 + s1\n 58783: u64 [sp + 0x380] = a0\n 58787: a0 = a0 | a2\n 58790: a0 = a0 <u 0x1\n 58793: a0 = a0 + a4\n 58796: u64 [sp + 0x370] = a0\n 58800: a0 = a0 <u a4\n 58803: a0 = a0 + t0\n 58806: u64 [sp + 0x378] = a0\n 58810: t0 = 0xff - a1\n 58814: a1 = u64 [sp + 0x310]\n 58818: a0 = sp + 0x1000\n 58822: u8 [a0 + 0xfffffffffffff980] = a1\n 58826: a0 = sp + 0x1000\n 58830: u8 [a0 + 4294965631] = 0\n 58834: a0 = sp + 0x1000\n 58838: u8 [a0 + 4294965630] = 0\n 58842: a0 = sp + 0x1000\n 58846: u8 [a0 + 4294965629] = 0\n 58850: a0 = sp + 0x1000\n 58854: u8 [a0 + 4294965628] = 0\n 58858: a0 = sp + 0x1000\n 58862: u8 [a0 + 4294965627] = 0\n 58866: a0 = sp + 0x1000\n 58870: u8 [a0 + 4294965626] = 0\n 58874: a0 = sp + 0x1000\n 58878: u8 [a0 + 4294965625] = 0\n 58882: a0 = sp + 0x1000\n 58886: u8 [a0 + 4294965624] = 0\n 58890: a0 = sp + 0x1000\n 58894: u8 [a0 + 4294965623] = 0\n 58898: a0 = sp + 0x1000\n 58902: u8 [a0 + 4294965622] = 0\n 58906: a0 = sp + 0x1000\n 58910: u8 [a0 + 4294965621] = 0\n 58914: a0 = sp + 0x1000\n 58918: u8 [a0 + 4294965620] = 0\n 58922: a0 = sp + 0x1000\n 58926: u8 [a0 + 4294965619] = 0\n 58930: a0 = sp + 0x1000\n 58934: u8 [a0 + 4294965618] = 0\n 58938: a0 = sp + 0x1000\n 58942: u8 [a0 + 4294965617] = 0\n 58946: a0 = sp + 0x1000\n 58950: u8 [a0 + 4294965616] = 0\n 58954: a0 = sp + 0x1000\n 58958: u8 [a0 + 4294965615] = 0\n 58962: a0 = sp + 0x1000\n 58966: u8 [a0 + 4294965614] = 0\n 58970: a0 = sp + 0x1000\n 58974: u8 [a0 + 4294965613] = 0\n 58978: a0 = sp + 0x1000\n 58982: u8 [a0 + 4294965612] = 0\n 58986: a0 = sp + 0x1000\n 58990: u8 [a0 + 4294965611] = 0\n 58994: a0 = sp + 0x1000\n 58998: u8 [a0 + 4294965610] = 0\n 59002: a0 = sp + 0x1000\n 59006: u8 [a0 + 4294965609] = 0\n 59010: a0 = sp + 0x1000\n 59014: u8 [a0 + 4294965608] = 0\n 59018: a0 = sp + 0x1000\n 59022: u8 [a0 + 4294965607] = 0\n 59026: a0 = sp + 0x1000\n 59030: u8 [a0 + 4294965606] = 0\n 59034: a0 = sp + 0x1000\n 59038: u8 [a0 + 4294965605] = 0\n 59042: a0 = sp + 0x1000\n 59046: u8 [a0 + 4294965604] = 0\n 59050: a0 = sp + 0x1000\n 59054: u8 [a0 + 4294965603] = 0\n 59058: a0 = sp + 0x1000\n 59062: u8 [a0 + 4294965602] = 0\n 59066: a0 = sp + 0x1000\n 59070: u8 [a0 + 4294965601] = 0\n 59074: a0 = sp + 0x1000\n 59078: u8 [a0 + 4294965600] = 0\n 59082: a0 = u64 [sp + 0x308]\n 59086: a2 = sp + 0x1000\n 59090: u8 [a2 + 0xfffffffffffff988] = a0\n 59094: a2 = a1 >> 0x38\n 59097: u64 [sp + 0x208] = a2\n 59101: a3 = sp + 0x1000\n 59105: u8 [a3 + 0xfffffffffffff987] = a2\n 59109: a2 = a1 >> 0x30\n 59112: u64 [sp + 0x1d0] = a2\n 59116: a3 = sp + 0x1000\n 59120: u8 [a3 + 0xfffffffffffff986] = a2\n 59124: a2 = a1 >> 0x28\n 59127: u64 [sp + 0x1c8] = a2\n 59131: a3 = sp + 0x1000\n 59135: u8 [a3 + 0xfffffffffffff985] = a2\n 59139: a2 = a1 >> 0x20\n 59142: u64 [sp + 0x1c0] = a2\n 59146: a3 = sp + 0x1000\n 59150: u8 [a3 + 0xfffffffffffff984] = a2\n 59154: a2 = a1 >> 0x18\n 59157: u64 [sp + 0x1b8] = a2\n 59161: a3 = sp + 0x1000\n 59165: u8 [a3 + 0xfffffffffffff983] = a2\n 59169: a2 = a1 >> 0x10\n 59172: u64 [sp + 0x1b0] = a2\n 59176: a3 = sp + 0x1000\n 59180: u8 [a3 + 0xfffffffffffff982] = a2\n 59184: a2 = a1 >> 0x8\n 59187: u64 [sp + 0x1a8] = a2\n 59191: a1 = sp + 0x1000\n 59195: u8 [a1 + 0xfffffffffffff981] = a2\n 59199: t2 = u64 [sp + 0x300]\n 59203: a1 = sp + 0x1000\n 59207: u8 [a1 + 0xfffffffffffff990] = t2\n 59211: a2 = a0 >> 0x38\n 59214: u64 [sp + 0x1a0] = a2\n 59218: a1 = sp + 0x1000\n 59222: u8 [a1 + 0xfffffffffffff98f] = a2\n 59226: a2 = a0 >> 0x30\n 59229: u64 [sp + 0x198] = a2\n 59233: a1 = sp + 0x1000\n 59237: u8 [a1 + 0xfffffffffffff98e] = a2\n 59241: a2 = a0 >> 0x28\n 59244: u64 [sp + 0x190] = a2\n 59248: a1 = sp + 0x1000\n 59252: u8 [a1 + 0xfffffffffffff98d] = a2\n 59256: a2 = a0 >> 0x20\n 59259: u64 [sp + 0x188] = a2\n 59263: a1 = sp + 0x1000\n 59267: u8 [a1 + 0xfffffffffffff98c] = a2\n 59271: a2 = a0 >> 0x18\n 59274: u64 [sp + 0x180] = a2\n 59278: a1 = sp + 0x1000\n 59282: u8 [a1 + 0xfffffffffffff98b] = a2\n 59286: a2 = a0 >> 0x10\n 59289: u64 [sp + 0x178] = a2\n 59293: a1 = sp + 0x1000\n 59297: u8 [a1 + 0xfffffffffffff98a] = a2\n 59301: a0 = a0 >> 0x8\n 59304: u64 [sp + 0x170] = a0\n 59308: a1 = sp + 0x1000\n 59312: u8 [a1 + 0xfffffffffffff989] = a0\n 59316: ra = u64 [sp + 0x2d0]\n 59320: a0 = sp + 0x1000\n 59324: u8 [a0 + 0xfffffffffffff998] = ra\n 59328: a0 = t2 >> 0x38\n 59331: u64 [sp + 0x168] = a0\n 59335: a1 = sp + 0x1000\n 59339: u8 [a1 + 0xfffffffffffff997] = a0\n 59343: a0 = t2 >> 0x30\n 59346: u64 [sp + 0x160] = a0\n 59350: a1 = sp + 0x1000\n 59354: u8 [a1 + 0xfffffffffffff996] = a0\n 59358: a0 = t2 >> 0x28\n 59361: u64 [sp + 0x158] = a0\n 59365: a1 = sp + 0x1000\n 59369: u8 [a1 + 0xfffffffffffff995] = a0\n 59373: a0 = t2 >> 0x20\n 59376: u64 [sp + 0x150] = a0\n 59380: a1 = sp + 0x1000\n 59384: u8 [a1 + 0xfffffffffffff994] = a0\n 59388: a0 = t2 >> 0x18\n 59391: u64 [sp + 0x148] = a0\n 59395: a1 = sp + 0x1000\n 59399: u8 [a1 + 0xfffffffffffff993] = a0\n 59403: a0 = t2 >> 0x10\n 59406: u64 [sp + 0x360] = a0\n 59410: a1 = sp + 0x1000\n 59414: u8 [a1 + 0xfffffffffffff992] = a0\n 59418: a0 = t2 >> 0x8\n 59421: u64 [sp + 0x358] = a0\n 59425: a1 = sp + 0x1000\n 59429: u8 [a1 + 0xfffffffffffff991] = a0\n 59433: a0 = ra >> 0x38\n 59436: u64 [sp + 0x350] = a0\n 59440: a1 = sp + 0x1000\n 59444: u8 [a1 + 0xfffffffffffff99f] = a0\n 59448: a0 = ra >> 0x30\n 59451: u64 [sp + 0x348] = a0\n 59455: a1 = sp + 0x1000\n 59459: u8 [a1 + 0xfffffffffffff99e] = a0\n 59463: a0 = ra >> 0x28\n 59466: u64 [sp + 0x318] = a0\n 59470: a1 = sp + 0x1000\n 59474: u8 [a1 + 0xfffffffffffff99d] = a0\n 59478: a0 = ra >> 0x20\n 59481: u64 [sp + 0x260] = a0\n 59485: a1 = sp + 0x1000\n 59489: u8 [a1 + 0xfffffffffffff99c] = a0\n 59493: a0 = ra >> 0x18\n 59496: u64 [sp + 0x258] = a0\n 59500: a1 = sp + 0x1000\n 59504: u8 [a1 + 0xfffffffffffff99b] = a0\n 59508: a0 = ra >> 0x10\n 59511: u64 [sp + 0x220] = a0\n 59515: a1 = sp + 0x1000\n 59519: u8 [a1 + 0xfffffffffffff99a] = a0\n 59523: a0 = ra >> 0x8\n 59526: u64 [sp + 0x218] = a0\n 59530: a1 = sp + 0x1000\n 59534: u8 [a1 + 0xfffffffffffff999] = a0\n 59538: a0 = t0 << 0x38\n 59541: a0 = a0 >> 0x3b\n 59544: a3 = sp + 0x7ff\n 59548: a3 = a3 + 0x181\n 59552: a3 = a3 - a0\n 59555: a0 = u8 [a3 + 0x19]\n 59558: a2 = u8 [a3 + 0x18]\n 59561: a4 = u8 [a3 + 0x1a]\n 59564: a5 = u8 [a3 + 0x1b]\n 59567: a0 = a0 << 0x8\n 59570: a0 = a0 | a2\n 59573: a4 = a4 << 0x10\n 59576: a5 = a5 << 0x18\n 59579: a4 = a4 | a5\n 59582: a0 = a0 | a4\n 59585: a2 = u8 [a3 + 0x1d]\n 59588: a4 = u8 [a3 + 0x1c]\n 59591: a5 = u8 [a3 + 0x1e]\n 59594: s1 = u8 [a3 + 0x1f]\n 59597: a2 = a2 << 0x8\n 59600: a2 = a2 | a4\n 59603: a5 = a5 << 0x10\n 59606: s1 = s1 << 0x18\n 59609: a5 = a5 | s1\n 59612: a2 = a2 | a5\n 59615: a2 = a2 << 0x20\n 59618: a2 = a2 | a0\n 59621: a0 = u8 [a3 + 0x11]\n 59624: a4 = u8 [a3 + 0x10]\n 59627: a5 = u8 [a3 + 0x12]\n 59630: s1 = u8 [a3 + 0x13]\n 59633: a0 = a0 << 0x8\n 59636: a0 = a0 | a4\n 59639: a5 = a5 << 0x10\n 59642: s1 = s1 << 0x18\n 59645: a5 = a5 | s1\n 59648: a0 = a0 | a5\n 59651: a4 = u8 [a3 + 0x15]\n 59654: a5 = u8 [a3 + 0x14]\n 59657: s1 = u8 [a3 + 0x16]\n 59660: a1 = u8 [a3 + 0x17]\n 59663: a4 = a4 << 0x8\n 59666: a4 = a4 | a5\n 59669: s1 = s1 << 0x10\n 59672: a1 = a1 << 0x18\n 59675: a1 = a1 | s1\n 59678: a1 = a1 | a4\n 59681: a1 = a1 << 0x20\n 59684: t1 = a1 | a0\n 59687: a1 = t0 & 0x7\n 59690: a0 = a2 << a1\n 59693: a5 = t1 >> 0x1\n 59696: t0 = a1 ^ 0x3f\n 59699: a5 = a5 >> t0\n 59702: a0 = a0 | a5\n 59705: u64 [sp + 0x3a0] = a0\n 59709: a0 = u8 [a3 + 0x9]\n 59712: a5 = u8 [a3 + 0x8]\n 59715: s1 = u8 [a3 + 0xa]\n 59718: a2 = u8 [a3 + 0xb]\n 59721: a0 = a0 << 0x8\n 59724: a0 = a0 | a5\n 59727: s1 = s1 << 0x10\n 59730: a2 = a2 << 0x18\n 59733: a2 = a2 | s1\n 59736: a0 = a0 | a2\n 59739: a2 = u8 [a3 + 0xd]\n 59742: a5 = u8 [a3 + 0xc]\n 59745: s1 = u8 [a3 + 0xe]\n 59748: a4 = u8 [a3 + 0xf]\n 59751: a2 = a2 << 0x8\n 59754: a2 = a2 | a5\n 59757: s1 = s1 << 0x10\n 59760: a4 = a4 << 0x18\n 59763: a4 = a4 | s1\n 59766: a2 = a2 | a4\n 59769: a2 = a2 << 0x20\n 59772: a5 = a2 | a0\n 59775: a0 = a5 >> 0x1\n 59778: a2 = a1 ^ 0xffffffffffffffff\n 59781: a0 = a0 >> a2\n 59784: a2 = t1 << a1\n 59787: a0 = a0 | a2\n 59790: u64 [sp + 0x398] = a0\n 59794: a0 = u8 [a3 + 0x1]\n 59797: a2 = u8 [a3]\n 59799: a4 = u8 [a3 + 0x2]\n 59802: s1 = u8 [a3 + 0x3]\n 59805: a0 = a0 << 0x8\n 59808: a0 = a0 | a2\n 59811: a4 = a4 << 0x10\n 59814: s1 = s1 << 0x18\n 59817: a4 = a4 | s1\n 59820: a0 = a0 | a4\n 59823: a2 = u8 [a3 + 0x5]\n 59826: a4 = u8 [a3 + 0x4]\n 59829: s1 = u8 [a3 + 0x6]\n 59832: a3 = u8 [a3 + 0x7]\n 59835: a2 = a2 << 0x8\n 59838: a2 = a2 | a4\n 59841: s1 = s1 << 0x10\n 59844: a3 = a3 << 0x18\n 59847: a3 = a3 | s1\n 59850: a4 = u64 [sp + 0x380]\n 59854: a2 = a2 | a3\n 59857: a2 = a2 << 0x20\n 59860: a0 = a0 | a2\n 59863: a2 = a0 >> 0x1\n 59866: a2 = a2 >> t0\n 59869: s1 = u64 [sp + 0x370]\n 59873: a3 = a5 << a1\n 59876: a5 = u64 [sp + 0x378]\n 59880: a2 = a2 | a3\n 59883: u64 [sp + 0x388] = a2\n 59887: a2 = a4 | a5\n 59890: a3 = u64 [sp + 0x3a8]\n 59894: a3 = a3 | s1\n 59897: a2 = a2 | a3\n 59900: a0 = a0 << a1\n 59903: u64 [sp + 0x390] = a0\n 59907: jump @296 if a2 == 0\n      : @293 (gas: 287)\n 59911: u64 [sp + 320] = 0\n 59915: u64 [sp + 872] = 0\n 59919: a0 = u64 [sp + 0x208]\n 59923: a1 = sp + 0x1000\n 59927: u8 [a1 + 0xfffffffffffff927] = a0\n 59931: a0 = u64 [sp + 0x1d0]\n 59935: a1 = sp + 0x1000\n 59939: u8 [a1 + 0xfffffffffffff926] = a0\n 59943: a0 = u64 [sp + 0x1c8]\n 59947: a1 = sp + 0x1000\n 59951: u8 [a1 + 0xfffffffffffff925] = a0\n 59955: a0 = u64 [sp + 0x1c0]\n 59959: a1 = sp + 0x1000\n 59963: u8 [a1 + 0xfffffffffffff924] = a0\n 59967: a0 = u64 [sp + 0x1b8]\n 59971: a1 = sp + 0x1000\n 59975: u8 [a1 + 0xfffffffffffff923] = a0\n 59979: a0 = u64 [sp + 0x1b0]\n 59983: a1 = sp + 0x1000\n 59987: u8 [a1 + 0xfffffffffffff922] = a0\n 59991: a0 = u64 [sp + 0x1a8]\n 59995: a1 = sp + 0x1000\n 59999: u8 [a1 + 0xfffffffffffff921] = a0\n 60003: a0 = u64 [sp + 0x1a0]\n 60007: a1 = sp + 0x1000\n 60011: u8 [a1 + 0xfffffffffffff92f] = a0\n 60015: a0 = u64 [sp + 0x198]\n 60019: a1 = sp + 0x1000\n 60023: u8 [a1 + 0xfffffffffffff92e] = a0\n 60027: a0 = u64 [sp + 0x190]\n 60031: a1 = sp + 0x1000\n 60035: u8 [a1 + 0xfffffffffffff92d] = a0\n 60039: a0 = u64 [sp + 0x188]\n 60043: a1 = sp + 0x1000\n 60047: u8 [a1 + 0xfffffffffffff92c] = a0\n 60051: a0 = u64 [sp + 0x180]\n 60055: a1 = sp + 0x1000\n 60059: u8 [a1 + 0xfffffffffffff92b] = a0\n 60063: a0 = u64 [sp + 0x178]\n 60067: a1 = sp + 0x1000\n 60071: u8 [a1 + 0xfffffffffffff92a] = a0\n 60075: a0 = u64 [sp + 0x170]\n 60079: a1 = sp + 0x1000\n 60083: u8 [a1 + 0xfffffffffffff929] = a0\n 60087: a0 = u64 [sp + 0x168]\n 60091: a1 = sp + 0x1000\n 60095: u8 [a1 + 0xfffffffffffff937] = a0\n 60099: a0 = u64 [sp + 0x160]\n 60103: a1 = sp + 0x1000\n 60107: u8 [a1 + 0xfffffffffffff936] = a0\n 60111: a0 = u64 [sp + 0x158]\n 60115: a1 = sp + 0x1000\n 60119: u8 [a1 + 0xfffffffffffff935] = a0\n 60123: a0 = u64 [sp + 0x150]\n 60127: a1 = sp + 0x1000\n 60131: u8 [a1 + 0xfffffffffffff934] = a0\n 60135: a0 = u64 [sp + 0x148]\n 60139: a1 = sp + 0x1000\n 60143: u8 [a1 + 0xfffffffffffff933] = a0\n 60147: a0 = sp + 0x1000\n 60151: u8 [a0 + 4294965599] = 0\n 60155: a0 = sp + 0x1000\n 60159: u8 [a0 + 4294965598] = 0\n 60163: a0 = sp + 0x1000\n 60167: u8 [a0 + 4294965597] = 0\n 60171: a0 = sp + 0x1000\n 60175: u8 [a0 + 4294965596] = 0\n 60179: a0 = sp + 0x1000\n 60183: u8 [a0 + 4294965595] = 0\n 60187: a0 = sp + 0x1000\n 60191: u8 [a0 + 4294965594] = 0\n 60195: a0 = sp + 0x1000\n 60199: u8 [a0 + 4294965593] = 0\n 60203: a0 = sp + 0x1000\n 60207: u8 [a0 + 4294965592] = 0\n 60211: a0 = sp + 0x1000\n 60215: u8 [a0 + 4294965591] = 0\n 60219: a0 = sp + 0x1000\n 60223: u8 [a0 + 4294965590] = 0\n 60227: a0 = sp + 0x1000\n 60231: u8 [a0 + 4294965589] = 0\n 60235: a0 = sp + 0x1000\n 60239: u8 [a0 + 4294965588] = 0\n 60243: a0 = sp + 0x1000\n 60247: u8 [a0 + 4294965587] = 0\n 60251: a0 = sp + 0x1000\n 60255: u8 [a0 + 4294965586] = 0\n 60259: a0 = sp + 0x1000\n 60263: u8 [a0 + 4294965585] = 0\n 60267: a0 = sp + 0x1000\n 60271: u8 [a0 + 4294965584] = 0\n 60275: a0 = sp + 0x1000\n 60279: u8 [a0 + 4294965583] = 0\n 60283: a0 = sp + 0x1000\n 60287: u8 [a0 + 4294965582] = 0\n 60291: a0 = sp + 0x1000\n 60295: u8 [a0 + 4294965581] = 0\n 60299: a0 = sp + 0x1000\n 60303: u8 [a0 + 4294965580] = 0\n 60307: a0 = sp + 0x1000\n 60311: u8 [a0 + 4294965579] = 0\n 60315: a0 = sp + 0x1000\n 60319: u8 [a0 + 4294965578] = 0\n 60323: a0 = sp + 0x1000\n 60327: u8 [a0 + 4294965577] = 0\n 60331: a0 = sp + 0x1000\n 60335: u8 [a0 + 4294965576] = 0\n 60339: a0 = sp + 0x1000\n 60343: u8 [a0 + 4294965575] = 0\n 60347: a0 = sp + 0x1000\n 60351: u8 [a0 + 4294965574] = 0\n 60355: a0 = sp + 0x1000\n 60359: u8 [a0 + 4294965573] = 0\n 60363: a0 = sp + 0x1000\n 60367: u8 [a0 + 4294965572] = 0\n 60371: a0 = sp + 0x1000\n 60375: u8 [a0 + 4294965571] = 0\n 60379: a0 = sp + 0x1000\n 60383: u8 [a0 + 4294965570] = 0\n 60387: a0 = sp + 0x1000\n 60391: u8 [a0 + 4294965569] = 0\n 60395: a0 = sp + 0x1000\n 60399: u8 [a0 + 4294965568] = 0\n 60403: a0 = u64 [sp + 0x310]\n 60407: a1 = sp + 0x1000\n 60411: u8 [a1 + 0xfffffffffffff920] = a0\n 60415: a0 = u64 [sp + 0x308]\n 60419: a1 = sp + 0x1000\n 60423: u8 [a1 + 0xfffffffffffff928] = a0\n 60427: a0 = sp + 0x1000\n 60431: u8 [a0 + 0xfffffffffffff930] = t2\n 60435: a0 = sp + 0x1000\n 60439: u8 [a0 + 0xfffffffffffff938] = ra\n 60443: a0 = u64 [sp + 0x360]\n 60447: a1 = sp + 0x1000\n 60451: u8 [a1 + 0xfffffffffffff932] = a0\n 60455: a0 = u64 [sp + 0x358]\n 60459: a1 = sp + 0x1000\n 60463: u8 [a1 + 0xfffffffffffff931] = a0\n 60467: a0 = u64 [sp + 0x350]\n 60471: a1 = sp + 0x1000\n 60475: u8 [a1 + 0xfffffffffffff93f] = a0\n 60479: a0 = u64 [sp + 0x348]\n 60483: a1 = sp + 0x1000\n 60487: u8 [a1 + 0xfffffffffffff93e] = a0\n 60491: a0 = u64 [sp + 0x318]\n 60495: a1 = sp + 0x1000\n 60499: u8 [a1 + 0xfffffffffffff93d] = a0\n 60503: a0 = u64 [sp + 0x260]\n 60507: a1 = sp + 0x1000\n 60511: u8 [a1 + 0xfffffffffffff93c] = a0\n 60515: a0 = u64 [sp + 0x258]\n 60519: a1 = sp + 0x1000\n 60523: u8 [a1 + 0xfffffffffffff93b] = a0\n 60527: a0 = u64 [sp + 0x220]\n 60531: a1 = sp + 0x1000\n 60535: u8 [a1 + 0xfffffffffffff93a] = a0\n 60539: a0 = u64 [sp + 0x218]\n 60543: a1 = sp + 0x1000\n 60547: u8 [a1 + 0xfffffffffffff939] = a0\n 60551: ra = a4\n 60553: s1 = u64 [sp + 0x3a8]\n 60557: a0 = s1 << 0x38\n 60560: a0 = a0 >> 0x3b\n 60563: a1 = sp + 0x7ff\n 60567: a1 = a1 + 0x121\n 60571: a1 = a1 + a0\n 60574: a0 = u8 [a1 + 0x11]\n 60577: a2 = u8 [a1 + 0x10]\n 60580: a3 = u8 [a1 + 0x12]\n 60583: a4 = u8 [a1 + 0x13]\n 60586: a0 = a0 << 0x8\n 60589: a0 = a0 | a2\n 60592: a3 = a3 << 0x10\n 60595: a4 = a4 << 0x18\n 60598: a3 = a3 | a4\n 60601: a0 = a0 | a3\n 60604: a2 = u8 [a1 + 0x15]\n 60607: a3 = u8 [a1 + 0x14]\n 60610: a4 = u8 [a1 + 0x16]\n 60613: a5 = u8 [a1 + 0x17]\n 60616: a2 = a2 << 0x8\n 60619: a2 = a2 | a3\n 60622: a4 = a4 << 0x10\n 60625: a5 = a5 << 0x18\n 60628: a4 = a4 | a5\n 60631: a2 = a2 | a4\n 60634: a2 = a2 << 0x20\n 60637: t0 = a2 | a0\n 60640: a2 = s1 & 0x7\n 60643: t1 = t0 >> a2\n 60646: a0 = u8 [a1 + 0x19]\n 60649: a4 = u8 [a1 + 0x18]\n 60652: a5 = u8 [a1 + 0x1a]\n 60655: a3 = u8 [a1 + 0x1b]\n 60658: a0 = a0 << 0x8\n 60661: a0 = a0 | a4\n 60664: a5 = a5 << 0x10\n 60667: a3 = a3 << 0x18\n 60670: a3 = a3 | a5\n 60673: a0 = a0 | a3\n 60676: a3 = u8 [a1 + 0x1d]\n 60679: a4 = u8 [a1 + 0x1c]\n 60682: a5 = u8 [a1 + 0x1e]\n 60685: s1 = u8 [a1 + 0x1f]\n 60688: a3 = a3 << 0x8\n 60691: a3 = a3 | a4\n 60694: a5 = a5 << 0x10\n 60697: s1 = s1 << 0x18\n 60700: a5 = a5 | s1\n 60703: a3 = a3 | a5\n 60706: a3 = a3 << 0x20\n 60709: a0 = a0 | a3\n 60712: u64 [sp + 0x358] = a0\n 60716: a0 = a0 << 0x1\n 60719: t2 = a2 ^ 0x3f\n 60722: a0 = a0 << t2\n 60725: a0 = t1 | a0\n 60728: u64 [sp + 0x360] = a0\n 60732: a0 = u8 [a1 + 0x9]\n 60735: a3 = u8 [a1 + 0x8]\n 60738: s1 = u8 [a1 + 0xa]\n 60741: a4 = u8 [a1 + 0xb]\n 60744: a0 = a0 << 0x8\n 60747: a0 = a0 | a3\n 60750: s1 = s1 << 0x10\n 60753: a4 = a4 << 0x18\n 60756: a4 = a4 | s1\n 60759: a0 = a0 | a4\n 60762: a3 = u8 [a1 + 0xd]\n 60765: a4 = u8 [a1 + 0xc]\n 60768: s1 = u8 [a1 + 0xe]\n 60771: a5 = u8 [a1 + 0xf]\n 60774: a3 = a3 << 0x8\n 60777: a3 = a3 | a4\n 60780: s1 = s1 << 0x10\n 60783: a5 = a5 << 0x18\n 60786: a5 = a5 | s1\n 60789: a3 = a3 | a5\n 60792: a3 = a3 << 0x20\n 60795: t1 = a3 | a0\n 60798: a0 = t1 >> a2\n 60801: t0 = t0 << 0x1\n 60804: a3 = a2 ^ 0xffffffffffffffff\n 60807: a3 = t0 << a3\n 60810: a3 = a3 | a0\n 60813: a0 = u8 [a1 + 0x1]\n 60816: a4 = u8 [a1]\n 60818: a5 = u8 [a1 + 0x2]\n 60821: s1 = u8 [a1 + 0x3]\n 60824: a0 = a0 << 0x8\n 60827: a0 = a0 | a4\n 60830: a5 = a5 << 0x10\n 60833: s1 = s1 << 0x18\n 60836: a5 = a5 | s1\n 60839: a0 = a0 | a5\n 60842: a4 = u8 [a1 + 0x5]\n 60845: a5 = u8 [a1 + 0x4]\n 60848: s1 = u8 [a1 + 0x6]\n 60851: a1 = u8 [a1 + 0x7]\n 60854: a4 = a4 << 0x8\n 60857: a4 = a4 | a5\n 60860: s1 = s1 << 0x10\n 60863: a1 = a1 << 0x18\n 60866: a1 = a1 | s1\n 60869: a1 = a1 | a4\n 60872: a1 = a1 << 0x20\n 60875: a0 = a0 | a1\n 60878: a0 = a0 >> a2\n 60881: t1 = t1 << 0x1\n 60884: a1 = t1 << t2\n 60887: t2 = u64 [sp + 0x140]\n 60891: t0 = a0 | a1\n 60894: a0 = u64 [sp + 0x358]\n 60898: t1 = a0 >> a2\n 60901: a1 = u64 [sp + 0x3b8]\n 60905: a0 = a1 <u 0x1\n 60908: a2 = u64 [sp + 0x3b0]\n 60912: a0 = a2 - a0\n 60915: u64 [sp + 0x350] = a0\n 60919: a0 = a1 | a2\n 60922: a0 = a0 >u 0\n 60924: a0 = a0 + 0xffffffffffffffff\n 60927: u64 [sp + 0x348] = a0\n 60931: a1 = a1 + 0xffffffffffffffff\n 60934: u64 [sp + 0x318] = a1\n 60938: fallthrough\n      : @294 (gas: 89)\n 60939: u64 [sp + 0x380] = ra\n 60943: u64 [sp + 856] = 0\n 60947: a0 = t0 >> 0x3f\n 60950: a2 = a3 << 0x1\n 60953: a2 = a2 | a0\n 60956: t0 = t0 << 0x1\n 60959: a1 = u64 [sp + 0x3a0]\n 60963: a0 = a1 >> 0x3f\n 60966: s1 = t0 | a0\n 60969: a0 = u64 [sp + 0x350]\n 60973: a4 = a0 ^ a2\n 60976: a5 = a0 <u a2\n 60979: a0 = u64 [sp + 0x318]\n 60983: a0 = a0 <u s1\n 60986: a0 = a5 if a4 != 0\n 60989: ra = t2\n 60991: t2 = t1 << 0x1\n 60994: t1 = u64 [sp + 0x360]\n 60998: a4 = t1 >> 0x3f\n 61001: t0 = t2 | a4\n 61004: a3 = a3 >> 0x3f\n 61007: t1 = t1 << 0x1\n 61010: t1 = t1 | a3\n 61013: a4 = a1 << 0x1\n 61016: a3 = u64 [sp + 0x398]\n 61020: a1 = a3 >> 0x3f\n 61023: t2 = a4 | a1\n 61026: a4 = a3 << 0x1\n 61029: a3 = u64 [sp + 0x388]\n 61033: a5 = a3 >> 0x3f\n 61036: a4 = a4 | a5\n 61039: a3 = a3 << 0x1\n 61042: a5 = u64 [sp + 0x390]\n 61046: a1 = a5 >> 0x3f\n 61049: a1 = a1 | a3\n 61052: a5 = a5 << 0x1\n 61055: a5 = ra | a5\n 61058: u64 [sp + 0x390] = a5\n 61062: ra = u64 [sp + 0x380]\n 61066: a5 = u64 [sp + 0x368]\n 61070: a1 = a1 | a5\n 61073: u64 [sp + 0x388] = a1\n 61077: a4 = a4 | a5\n 61080: u64 [sp + 0x398] = a4\n 61084: a1 = a5 | t2\n 61087: u64 [sp + 0x3a0] = a1\n 61091: a3 = u64 [sp + 0x348]\n 61095: a1 = a3 - t1\n 61098: a0 = a1 <u a0\n 61101: a1 = a3 <u t1\n 61104: a4 = a3 - t0\n 61107: a4 = a4 - a1\n 61110: a0 = a4 - a0\n 61113: a0 = a0 >>a 0x3f\n 61116: a1 = u64 [sp + 0x3b8]\n 61120: a1 = a1 & a0\n 61123: a4 = u64 [sp + 0x3b0]\n 61127: a4 = a4 & a0\n 61130: a3 = a2 ^ a4\n 61133: a5 = a2 <u a4\n 61136: t2 = s1 <u a1\n 61139: a5 = t2 if a3 == 0\n 61142: a3 = t1 - a5\n 61145: u64 [sp + 0x360] = a3\n 61149: a3 = t1 <u a5\n 61152: t1 = t0 - a3\n 61155: a2 = a2 - a4\n 61158: a3 = a2 - t2\n 61161: t0 = s1 - a1\n 61164: a5 = u64 [sp + 0x3a8]\n 61168: a1 = a5 | ra\n 61171: a1 = a1 <u 0x1\n 61174: a4 = u64 [sp + 0x370]\n 61178: a2 = a4 <u a1\n 61181: a1 = a4 - a1\n 61184: a4 = a5 <u 0x1\n 61187: ra = ra - a4\n 61190: a4 = u64 [sp + 0x378]\n 61194: a4 = a4 - a2\n 61197: a5 = a5 + 0xffffffffffffffff\n 61200: u64 [sp + 0x378] = a4\n 61204: a2 = ra | a4\n 61207: u64 [sp + 0x3a8] = a5\n 61211: a4 = a5 | a1\n 61214: a2 = a2 | a4\n 61217: t2 = a0 & 0x1\n 61220: u64 [sp + 0x370] = a1\n 61224: u64 [sp + 872] = 0\n 61228: jump @294 if a2 != 0\n      : @295 (gas: 1)\n 61232: jump @297\n      : @296 (gas: 3)\n 61234: t2 = 0\n 61236: u64 [sp + 856] = 0\n 61240: fallthrough\n      : @297 (gas: 22)\n 61241: a1 = u64 [sp + 0x398]\n 61245: a0 = a1 >> 0x3f\n 61248: a2 = u64 [sp + 0x3a0]\n 61252: a2 = a2 << 0x1\n 61255: a3 = a2 | a0\n 61258: a5 = u64 [sp + 0x388]\n 61262: a0 = a5 >> 0x3f\n 61265: a2 = a1 << 0x1\n 61268: a2 = a2 | a0\n 61271: a0 = u64 [sp + 0x390]\n 61275: a4 = a0 >> 0x3f\n 61278: a5 = a5 << 0x1\n 61281: a0 = a0 << 0x1\n 61284: ra = t2 | a0\n 61287: a1 = u64 [sp + 0x358]\n 61291: a4 = a4 | a1\n 61294: t1 = a4 | a5\n 61297: a0 = a1 | a2\n 61300: u64 [sp + 0x398] = a0\n 61304: a0 = a1 | a3\n 61307: u64 [sp + 0x388] = a0\n 61311: fallthrough\n      : @298 (gas: 71)\n 61312: a2 = u64 [sp + 0x3b8]\n 61316: a3 = ra mulhu a2\n 61319: a4 = t1 * a2\n 61322: a3 = a3 + a4\n 61325: a4 = a3 <u a4\n 61328: a5 = t1 mulhu a2\n 61331: t0 = a5 + a4\n 61334: a0 = u64 [sp + 0x3b0]\n 61338: a4 = ra * a0\n 61341: t2 = a4 + a3\n 61344: a3 = t2 <u a4\n 61347: a4 = ra mulhu a0\n 61350: a3 = a3 + a4\n 61353: a4 = t0 + a3\n 61356: s1 = t1 * a0\n 61359: a3 = s1 + a4\n 61362: a1 = u64 [sp + 0x398]\n 61366: a5 = a2 * a1\n 61369: a5 = a5 + a3\n 61372: s1 = a3 <u s1\n 61375: a3 = a5 <u a3\n 61378: u64 [sp + 0x3a8] = a3\n 61382: a4 = a4 <u t0\n 61385: a3 = t1 mulhu a0\n 61388: a3 = a3 + a4\n 61391: t0 = a3 + s1\n 61394: a4 = a2 mulhu a1\n 61397: a3 = u64 [sp + 0x388]\n 61401: s1 = a2 * a3\n 61404: a4 = a4 + s1\n 61407: s1 = a0 * a1\n 61410: a4 = a4 + s1\n 61413: a3 = t0 + a4\n 61416: a2 = ra * a2\n 61419: u64 [sp + 0x380] = a2\n 61423: a0 = u64 [sp + 0x2d0]\n 61427: a4 = u64 [sp + 0x3a8]\n 61431: s1 = a0 - a4\n 61434: s1 = s1 - a3\n 61437: u64 [sp + 0x3a8] = s1\n 61441: a0 = u64 [sp + 0x308]\n 61445: u64 [sp + 0x390] = t2\n 61449: s1 = a0 ^ t2\n 61452: a3 = a0 <u t2\n 61455: t2 = u64 [sp + 0x310]\n 61459: a4 = t2 <u a2\n 61462: a3 = a4 if s1 == 0\n 61465: a2 = u64 [sp + 0x300]\n 61469: s1 = a2 <u a5\n 61472: a5 = a2 - a5\n 61475: t0 = a5 <u a3\n 61478: t0 = t0 + s1\n 61481: s1 = a1\n 61483: a1 = u64 [sp + 0x3a8]\n 61487: a1 = a1 - t0\n 61490: u64 [sp + 0x3a0] = a1\n 61494: a2 = a5 - a3\n 61497: a3 = a0 - a4\n 61500: a0 = u64 [sp + 0x390]\n 61504: a3 = a3 - a0\n 61507: a0 = u64 [sp + 0x380]\n 61511: a0 = t2 - a0\n 61514: u64 [sp + 0x3a8] = a0\n 61518: a1 = u64 [sp + 0x268]\n 61522: a1 = a1 & 0xffffffffffffffff\n 61525: u64 [sp + 0x380] = a1\n 61529: a1 = u64 [sp + 0x210]\n 61533: a0 = a1 & 0xffffffffffffffff\n 61536: u64 [sp + 0x378] = a0\n 61540: a1 = u64 [sp + 0x388]\n 61544: jump @300\n      : @299 (gas: 35)\n 61546: a4 = u64 [sp + 0x3b8]\n 61550: a0 = u64 [sp + 0x3a8]\n 61554: a4 = a4 + a0\n 61557: a0 = a4 <u a0\n 61560: a5 = u64 [sp + 0x3b0]\n 61564: a5 = a5 + a3\n 61567: a5 = a5 + a0\n 61570: a2 = a5 ^ a3\n 61573: a3 = a5 <u a3\n 61576: a3 = a0 if a2 == 0\n 61579: a0 = a5 + 0x1\n 61582: a2 = a5 <u 0xffffffffffffffff\n 61585: t2 = a4 <u 0xffffffffffffffff\n 61588: t2 = a2 if a0 != 0\n 61591: a0 = ra <u 0x1\n 61594: t0 = t1 - a0\n 61597: a0 = ra | t1\n 61600: a0 = a0 <u 0x1\n 61603: a2 = s1 <u a0\n 61606: a0 = s1 - a0\n 61609: a1 = a1 - a2\n 61612: s1 = u64 [sp + 0x390]\n 61616: a2 = s1 + a3\n 61619: a3 = a2 <u s1\n 61622: s1 = u64 [sp + 0x3a0]\n 61626: s1 = s1 + a3\n 61629: u64 [sp + 0x3a0] = s1\n 61633: a3 = a2 | s1\n 61636: t2 = 0 if a3 != 0\n 61638: ra = ra + 0xffffffffffffffff\n 61641: t1 = t0\n 61643: s1 = a0\n 61645: u64 [sp + 0x3a8] = a4\n 61649: a3 = a5\n 61651: jump @303 if t2 == 0\n      : @300 (gas: 11)\n 61655: u64 [sp + 0x390] = a2\n 61659: a4 = s1 >u 0\n 61661: a5 = a1 >u 0\n 61663: a5 = a4 if a1 == 0\n 61666: a4 = t1 + 0x1\n 61669: a0 = ra + 0x1\n 61672: a0 = a0 <u 0x1\n 61675: a0 = 0 if a4 != 0\n 61677: a4 = s1 | a1\n 61680: a0 = a5 if a4 != 0\n 61683: jump @299 if a0 != 0\n      : @301 (gas: 56)\n 61687: t2 = s1\n 61689: s1 = u64 [sp + 0x338]\n 61693: a0 = ra mulhu s1\n 61696: a4 = t1 * s1\n 61699: a0 = a0 + a4\n 61702: a4 = a0 <u a4\n 61705: a5 = t1 mulhu s1\n 61708: a2 = a5 + a4\n 61711: u64 [sp + 0x388] = a1\n 61715: a1 = u64 [sp + 0x340]\n 61719: a4 = ra * a1\n 61722: u64 [sp + 0x398] = t1\n 61726: t1 = a4 + a0\n 61729: a4 = t1 <u a4\n 61732: a0 = ra mulhu a1\n 61735: a0 = a0 + a4\n 61738: a5 = a2 + a0\n 61741: a0 = u64 [sp + 0x398]\n 61745: a4 = a0 * a1\n 61748: a0 = a4 + a5\n 61751: a4 = a0 <u a4\n 61754: a2 = a5 <u a2\n 61757: a5 = u64 [sp + 0x398]\n 61761: a5 = a5 mulhu a1\n 61764: a2 = a2 + a5\n 61767: a2 = a2 + a4\n 61770: a4 = s1 mulhu t2\n 61773: a5 = u64 [sp + 0x388]\n 61777: a5 = s1 * a5\n 61780: a4 = a4 + a5\n 61783: a5 = a1 * t2\n 61786: a1 = u64 [sp + 0x388]\n 61790: a4 = a4 + a5\n 61793: a5 = s1 * t2\n 61796: a5 = a5 + a0\n 61799: a0 = a5 <u a0\n 61802: a2 = a2 + a4\n 61805: a0 = a0 + a2\n 61808: t0 = ra * s1\n 61811: s1 = t2\n 61813: a2 = u64 [sp + 0x378]\n 61817: a4 = t1 ^ a2\n 61820: t2 = a2 <u t1\n 61823: t1 = u64 [sp + 0x398]\n 61827: a2 = u64 [sp + 0x380]\n 61831: a2 = a2 <u t0\n 61834: a2 = t2 if a4 != 0\n 61837: t0 = a0 ^ a3\n 61840: t2 = a3 <u a0\n 61843: a4 = u64 [sp + 0x3a8]\n 61847: a0 = a4 <u a5\n 61850: a0 = t2 if t0 != 0\n 61853: a5 = a5 ^ a4\n 61856: a4 = a5 | t0\n 61859: a2 = a0 if a4 != 0\n 61862: jump @299 if a2 != 0\n      : @302 (gas: 2)\n 61866: t0 = t1\n 61868: fallthrough\n      : @303 (gas: 321)\n 61869: a1 = t0 & 0xffffffffffffffff\n 61872: a0 = ra & 0xffffffffffffffff\n 61875: t1 = u64 [sp + 0x338]\n 61879: a2 = a0 mulhu t1\n 61882: a3 = a1 * t1\n 61885: a2 = a2 + a3\n 61888: a3 = a2 <u a3\n 61891: a4 = a1 mulhu t1\n 61894: t0 = a4 + a3\n 61897: s1 = u64 [sp + 0x340]\n 61901: a4 = a0 * s1\n 61904: ra = a4 + a2\n 61907: a4 = ra <u a4\n 61910: a5 = a0 mulhu s1\n 61913: a4 = a4 + a5\n 61916: a3 = t0 + a4\n 61919: a5 = a1 * s1\n 61922: a4 = a5 + a3\n 61925: a3 = a3 <u t0\n 61928: s1 = a1 mulhu s1\n 61931: t0 = s1 + a3\n 61934: a3 = u64 [sp + 0x3b8]\n 61938: s1 = a3 * a0\n 61941: s1 = s1 + a4\n 61944: a5 = a4 <u a5\n 61947: a4 = s1 <u a4\n 61950: t0 = t0 + a5\n 61953: a1 = a3 * a1\n 61956: a5 = a3 mulhu a0\n 61959: a1 = a1 + a5\n 61962: a5 = u64 [sp + 0x3b0]\n 61966: a5 = a5 * a0\n 61969: a1 = a1 + a5\n 61972: a1 = a1 + t0\n 61975: t0 = a1 + a4\n 61978: t2 = a0 * t1\n 61981: a1 = u64 [sp + 0x310]\n 61985: a0 = a1 <u s1\n 61988: a4 = u64 [sp + 0x308]\n 61992: t1 = a4 - a0\n 61995: a4 = u64 [sp + 0x378]\n 61999: a0 = a4 ^ ra\n 62002: a5 = a4 <u ra\n 62005: a3 = u64 [sp + 0x380]\n 62009: a2 = a3 <u t2\n 62012: a5 = a2 if a0 == 0\n 62015: a1 = a1 - s1\n 62018: s1 = a1 <u a5\n 62021: a0 = t1 - s1\n 62024: a0 = a0 - t0\n 62027: a1 = a1 - a5\n 62030: a4 = a4 - a2\n 62033: a2 = a4 - ra\n 62036: a3 = a3 - t2\n 62039: a4 = sp + 0x1000\n 62043: u8 [a4 + 4294965535] = 0\n 62047: a4 = sp + 0x1000\n 62051: u8 [a4 + 4294965534] = 0\n 62055: a4 = sp + 0x1000\n 62059: u8 [a4 + 4294965533] = 0\n 62063: a4 = sp + 0x1000\n 62067: u8 [a4 + 4294965532] = 0\n 62071: a4 = sp + 0x1000\n 62075: u8 [a4 + 4294965531] = 0\n 62079: a4 = sp + 0x1000\n 62083: u8 [a4 + 4294965530] = 0\n 62087: a4 = sp + 0x1000\n 62091: u8 [a4 + 4294965529] = 0\n 62095: a4 = sp + 0x1000\n 62099: u8 [a4 + 4294965528] = 0\n 62103: a4 = sp + 0x1000\n 62107: u8 [a4 + 4294965527] = 0\n 62111: a4 = sp + 0x1000\n 62115: u8 [a4 + 4294965526] = 0\n 62119: a4 = sp + 0x1000\n 62123: u8 [a4 + 4294965525] = 0\n 62127: a4 = sp + 0x1000\n 62131: u8 [a4 + 4294965524] = 0\n 62135: a4 = sp + 0x1000\n 62139: u8 [a4 + 4294965523] = 0\n 62143: a4 = sp + 0x1000\n 62147: u8 [a4 + 4294965522] = 0\n 62151: a4 = sp + 0x1000\n 62155: u8 [a4 + 4294965521] = 0\n 62159: a4 = sp + 0x1000\n 62163: u8 [a4 + 4294965520] = 0\n 62167: a4 = sp + 0x1000\n 62171: u8 [a4 + 4294965519] = 0\n 62175: a4 = sp + 0x1000\n 62179: u8 [a4 + 4294965518] = 0\n 62183: a4 = sp + 0x1000\n 62187: u8 [a4 + 4294965517] = 0\n 62191: a4 = sp + 0x1000\n 62195: u8 [a4 + 4294965516] = 0\n 62199: a4 = sp + 0x1000\n 62203: u8 [a4 + 4294965515] = 0\n 62207: a4 = sp + 0x1000\n 62211: u8 [a4 + 4294965514] = 0\n 62215: a4 = sp + 0x1000\n 62219: u8 [a4 + 4294965513] = 0\n 62223: a4 = sp + 0x1000\n 62227: u8 [a4 + 4294965512] = 0\n 62231: a4 = sp + 0x1000\n 62235: u8 [a4 + 4294965511] = 0\n 62239: a4 = sp + 0x1000\n 62243: u8 [a4 + 4294965510] = 0\n 62247: a4 = sp + 0x1000\n 62251: u8 [a4 + 4294965509] = 0\n 62255: a4 = sp + 0x1000\n 62259: u8 [a4 + 4294965508] = 0\n 62263: a4 = sp + 0x1000\n 62267: u8 [a4 + 4294965507] = 0\n 62271: a4 = sp + 0x1000\n 62275: u8 [a4 + 4294965506] = 0\n 62279: a4 = sp + 0x1000\n 62283: u8 [a4 + 4294965505] = 0\n 62287: a4 = sp + 0x1000\n 62291: u8 [a4 + 4294965504] = 0\n 62295: a4 = sp + 0x1000\n 62299: u8 [a4 + 0xfffffffffffff8e0] = a3\n 62303: a4 = a3 >> 0x38\n 62306: a5 = sp + 0x1000\n 62310: u8 [a5 + 0xfffffffffffff8e7] = a4\n 62314: a4 = a3 >> 0x30\n 62317: a5 = sp + 0x1000\n 62321: u8 [a5 + 0xfffffffffffff8e6] = a4\n 62325: a4 = a3 >> 0x28\n 62328: a5 = sp + 0x1000\n 62332: u8 [a5 + 0xfffffffffffff8e5] = a4\n 62336: a4 = a3 >> 0x20\n 62339: a5 = sp + 0x1000\n 62343: u8 [a5 + 0xfffffffffffff8e4] = a4\n 62347: a4 = a3 >> 0x18\n 62350: a5 = sp + 0x1000\n 62354: u8 [a5 + 0xfffffffffffff8e3] = a4\n 62358: a4 = a3 >> 0x10\n 62361: a5 = sp + 0x1000\n 62365: u8 [a5 + 0xfffffffffffff8e2] = a4\n 62369: a3 = a3 >> 0x8\n 62372: a4 = sp + 0x1000\n 62376: u8 [a4 + 0xfffffffffffff8e1] = a3\n 62380: a3 = sp + 0x1000\n 62384: u8 [a3 + 0xfffffffffffff8e8] = a2\n 62388: a3 = a2 >> 0x38\n 62391: a4 = sp + 0x1000\n 62395: u8 [a4 + 0xfffffffffffff8ef] = a3\n 62399: a3 = a2 >> 0x30\n 62402: a4 = sp + 0x1000\n 62406: u8 [a4 + 0xfffffffffffff8ee] = a3\n 62410: a3 = a2 >> 0x28\n 62413: a4 = sp + 0x1000\n 62417: u8 [a4 + 0xfffffffffffff8ed] = a3\n 62421: a3 = a2 >> 0x20\n 62424: a4 = sp + 0x1000\n 62428: u8 [a4 + 0xfffffffffffff8ec] = a3\n 62432: a3 = a2 >> 0x18\n 62435: a4 = sp + 0x1000\n 62439: u8 [a4 + 0xfffffffffffff8eb] = a3\n 62443: a3 = a2 >> 0x10\n 62446: a4 = sp + 0x1000\n 62450: u8 [a4 + 0xfffffffffffff8ea] = a3\n 62454: a2 = a2 >> 0x8\n 62457: a3 = sp + 0x1000\n 62461: u8 [a3 + 0xfffffffffffff8e9] = a2\n 62465: a2 = sp + 0x1000\n 62469: u8 [a2 + 0xfffffffffffff8f0] = a1\n 62473: a2 = a1 >> 0x38\n 62476: a3 = sp + 0x1000\n 62480: u8 [a3 + 0xfffffffffffff8f7] = a2\n 62484: a2 = a1 >> 0x30\n 62487: a3 = sp + 0x1000\n 62491: u8 [a3 + 0xfffffffffffff8f6] = a2\n 62495: a2 = a1 >> 0x28\n 62498: a3 = sp + 0x1000\n 62502: u8 [a3 + 0xfffffffffffff8f5] = a2\n 62506: a2 = a1 >> 0x20\n 62509: a3 = sp + 0x1000\n 62513: u8 [a3 + 0xfffffffffffff8f4] = a2\n 62517: a2 = a1 >> 0x18\n 62520: a3 = sp + 0x1000\n 62524: u8 [a3 + 0xfffffffffffff8f3] = a2\n 62528: a2 = a1 >> 0x10\n 62531: a3 = sp + 0x1000\n 62535: u8 [a3 + 0xfffffffffffff8f2] = a2\n 62539: a1 = a1 >> 0x8\n 62542: a2 = sp + 0x1000\n 62546: u8 [a2 + 0xfffffffffffff8f1] = a1\n 62550: a1 = sp + 0x1000\n 62554: u8 [a1 + 0xfffffffffffff8f8] = a0\n 62558: a1 = a0 >> 0x38\n 62561: a2 = sp + 0x1000\n 62565: u8 [a2 + 0xfffffffffffff8ff] = a1\n 62569: a1 = a0 >> 0x30\n 62572: a2 = sp + 0x1000\n 62576: u8 [a2 + 0xfffffffffffff8fe] = a1\n 62580: a1 = a0 >> 0x28\n 62583: a2 = sp + 0x1000\n 62587: u8 [a2 + 0xfffffffffffff8fd] = a1\n 62591: a1 = a0 >> 0x20\n 62594: a2 = sp + 0x1000\n 62598: u8 [a2 + 0xfffffffffffff8fc] = a1\n 62602: a1 = a0 >> 0x18\n 62605: a2 = sp + 0x1000\n 62609: u8 [a2 + 0xfffffffffffff8fb] = a1\n 62613: a1 = a0 >> 0x10\n 62616: a2 = sp + 0x1000\n 62620: u8 [a2 + 0xfffffffffffff8fa] = a1\n 62624: a0 = a0 >> 0x8\n 62627: a1 = sp + 0x1000\n 62631: u8 [a1 + 0xfffffffffffff8f9] = a0\n 62635: a0 = u64 [sp + 0x1f0]\n 62639: a1 = sp + 0x7ff\n 62643: a1 = a1 + 0xe1\n 62647: a0 = a0 + a1\n 62650: a1 = u8 [a0 + 0x11]\n 62653: a2 = u8 [a0 + 0x10]\n 62656: a3 = u8 [a0 + 0x12]\n 62659: a4 = u8 [a0 + 0x13]\n 62662: a1 = a1 << 0x8\n 62665: a1 = a1 | a2\n 62668: a3 = a3 << 0x10\n 62671: a4 = a4 << 0x18\n 62674: a3 = a3 | a4\n 62677: a1 = a1 | a3\n 62680: a2 = u8 [a0 + 0x15]\n 62683: a3 = u8 [a0 + 0x14]\n 62686: a4 = u8 [a0 + 0x16]\n 62689: a5 = u8 [a0 + 0x17]\n 62692: a2 = a2 << 0x8\n 62695: a2 = a2 | a3\n 62698: a4 = a4 << 0x10\n 62701: a5 = a5 << 0x18\n 62704: a4 = a4 | a5\n 62707: a2 = a2 | a4\n 62710: a2 = a2 << 0x20\n 62713: t0 = a2 | a1\n 62716: t1 = u64 [sp + 0x200]\n 62720: a3 = t0 >> t1\n 62723: a1 = u8 [a0 + 0x19]\n 62726: a4 = u8 [a0 + 0x18]\n 62729: a5 = u8 [a0 + 0x1a]\n 62732: s1 = u8 [a0 + 0x1b]\n 62735: a1 = a1 << 0x8\n 62738: a1 = a1 | a4\n 62741: a5 = a5 << 0x10\n 62744: s1 = s1 << 0x18\n 62747: a5 = a5 | s1\n 62750: a1 = a1 | a5\n 62753: a4 = u8 [a0 + 0x1d]\n 62756: a5 = u8 [a0 + 0x1c]\n 62759: s1 = u8 [a0 + 0x1e]\n 62762: a2 = u8 [a0 + 0x1f]\n 62765: a4 = a4 << 0x8\n 62768: a4 = a4 | a5\n 62771: s1 = s1 << 0x10\n 62774: a2 = a2 << 0x18\n 62777: a2 = a2 | s1\n 62780: a2 = a2 | a4\n 62783: a2 = a2 << 0x20\n 62786: t2 = a2 | a1\n 62789: a2 = t2 << 0x1\n 62792: a1 = u64 [sp + 0x1f8]\n 62796: a2 = a2 << a1\n 62799: a2 = a2 | a3\n 62802: u64 [sp + 0x2d0] = a2\n 62806: a2 = u8 [a0 + 0x9]\n 62809: a3 = u8 [a0 + 0x8]\n 62812: a4 = u8 [a0 + 0xa]\n 62815: a5 = u8 [a0 + 0xb]\n 62818: a2 = a2 << 0x8\n 62821: a2 = a2 | a3\n 62824: a4 = a4 << 0x10\n 62827: a5 = a5 << 0x18\n 62830: a4 = a4 | a5\n 62833: a2 = a2 | a4\n 62836: a3 = u8 [a0 + 0xd]\n 62839: a4 = u8 [a0 + 0xc]\n 62842: a5 = u8 [a0 + 0xe]\n 62845: s1 = u8 [a0 + 0xf]\n 62848: a3 = a3 << 0x8\n 62851: a3 = a3 | a4\n 62854: a5 = a5 << 0x10\n 62857: s1 = s1 << 0x18\n 62860: a5 = a5 | s1\n 62863: a3 = a3 | a5\n 62866: a3 = a3 << 0x20\n 62869: a3 = a3 | a2\n 62872: a2 = a3 >> t1\n 62875: t0 = t0 << 0x1\n 62878: a4 = u64 [sp + 0x1e8]\n 62882: a4 = t0 << a4\n 62885: ra = a2 | a4\n 62888: a2 = u8 [a0 + 0x1]\n 62891: a4 = u8 [a0]\n 62893: a5 = u8 [a0 + 0x2]\n 62896: s1 = u8 [a0 + 0x3]\n 62899: a2 = a2 << 0x8\n 62902: a2 = a2 | a4\n 62905: a5 = a5 << 0x10\n 62908: s1 = s1 << 0x18\n 62911: a5 = a5 | s1\n 62914: a2 = a2 | a5\n 62917: a4 = u8 [a0 + 0x5]\n 62920: a5 = u8 [a0 + 0x4]\n 62923: s1 = u8 [a0 + 0x6]\n 62926: a0 = u8 [a0 + 0x7]\n 62929: a4 = a4 << 0x8\n 62932: a4 = a4 | a5\n 62935: s1 = s1 << 0x10\n 62938: a0 = a0 << 0x18\n 62941: a0 = a0 | s1\n 62944: a0 = a0 | a4\n 62947: a0 = a0 << 0x20\n 62950: a0 = a0 | a2\n 62953: a0 = a0 >> t1\n 62956: a3 = a3 << 0x1\n 62959: a2 = a3 << a1\n 62962: a1 = u64 [sp + 0x2d0]\n 62966: a0 = a0 | a2\n 62969: t1 = t2 >> t1\n 62972: fallthrough\n      : @304 (gas: 61)\n 62973: a2 = a0\n 62975: a0 = a0 | a1\n 62978: a3 = a2\n 62980: u64 [sp + 0x258] = a2\n 62984: t2 = a1\n 62986: a1 = ra | t1\n 62989: a0 = a0 | a1\n 62992: a0 = a0 <u 0x1\n 62995: a1 = u64 [sp + 0x320]\n 62999: a0 = a0 | a1\n 63002: u64 [sp + 0x3a8] = a0\n 63006: a1 = clz t2\n 63008: a2 = a1 + 0x40\n 63011: a1 = clz t1\n 63013: a1 = a2 if t1 == 0\n 63016: a2 = clz a3\n 63018: a2 = a2 + 0x40\n 63021: a3 = clz ra\n 63023: a3 = a2 if ra == 0\n 63026: a2 = a3 + 0x80\n 63030: a4 = t2 | t1\n 63033: a1 = a2 if a4 == 0\n 63036: a2 = a2 <u a3\n 63039: a2 = 0 if a4 != 0\n 63041: a3 = u64 [sp + 0x330]\n 63045: a4 = a3 ^ a2\n 63048: a5 = a3 <u a2\n 63051: a0 = u64 [sp + 0x328]\n 63055: s1 = a0 <u a1\n 63058: a5 = s1 if a4 == 0\n 63061: a4 = a5 <u 0x1\n 63064: t0 = a4 + 0xffffffffffffffff\n 63067: a4 = -a5\n 63069: a3 = a3 - a2\n 63072: s1 = a3 - s1\n 63075: a0 = a0 - a1\n 63078: a3 = a4\n 63080: a1 = a4 >u 0\n 63082: a4 = t0\n 63084: a2 = t0 >u 0\n 63086: a2 = a1 if t0 == 0\n 63089: a1 = s1 >u 0\n 63091: u64 [sp + 0x3a0] = a0\n 63095: a0 = a0 <u 0x100\n 63099: a0 = a0 ^ 0x1\n 63102: a0 = a1 if s1 != 0\n 63105: a0 = a2 if a5 != 0\n 63108: a5 = u64 [sp + 0x3a8]\n 63112: a5 = a5 | a0\n 63115: u64 [sp + 0x260] = t1\n 63119: t1 = 0 if a5 != 0\n 63121: u64 [sp + 0x2d0] = t2\n 63125: t0 = t2\n 63127: t0 = 0 if a5 != 0\n 63129: u64 [sp + 0x268] = ra\n 63133: a2 = ra\n 63135: a2 = 0 if a5 != 0\n 63137: ra = u64 [sp + 0x258]\n 63141: a0 = ra\n 63143: a0 = 0 if a5 != 0\n 63145: jump @312 if a5 != 0\n      : @305 (gas: 7)\n 63149: a1 = u64 [sp + 0x3a0]\n 63153: a5 = a1 ^ 0xff\n 63157: t2 = a3\n 63159: a5 = a5 | a3\n 63162: a3 = s1 | a4\n 63165: a3 = a3 | a5\n 63168: jump @312 if a3 == 0\n      : @306 (gas: 322)\n 63172: a2 = u64 [sp + 0x3a0]\n 63176: a1 = a2 + 0x1\n 63179: u64 [sp + 0x3a8] = a1\n 63183: a0 = a1 <u 0x1\n 63186: a0 = a0 + s1\n 63189: u64 [sp + 0x380] = a0\n 63193: a0 = a0 | a1\n 63196: a0 = a0 <u 0x1\n 63199: a0 = a0 + t2\n 63202: u64 [sp + 0x370] = a0\n 63206: a0 = a0 <u t2\n 63209: a0 = a0 + a4\n 63212: u64 [sp + 0x378] = a0\n 63216: t0 = 0xff - a2\n 63220: a0 = sp + 0x1000\n 63224: u8 [a0 + 0xfffffffffffff8c0] = ra\n 63228: a0 = sp + 0x1000\n 63232: u8 [a0 + 4294965439] = 0\n 63236: a0 = sp + 0x1000\n 63240: u8 [a0 + 4294965438] = 0\n 63244: a0 = sp + 0x1000\n 63248: u8 [a0 + 4294965437] = 0\n 63252: a0 = sp + 0x1000\n 63256: u8 [a0 + 4294965436] = 0\n 63260: a0 = sp + 0x1000\n 63264: u8 [a0 + 4294965435] = 0\n 63268: a0 = sp + 0x1000\n 63272: u8 [a0 + 4294965434] = 0\n 63276: a0 = sp + 0x1000\n 63280: u8 [a0 + 4294965433] = 0\n 63284: a0 = sp + 0x1000\n 63288: u8 [a0 + 4294965432] = 0\n 63292: a0 = sp + 0x1000\n 63296: u8 [a0 + 4294965431] = 0\n 63300: a0 = sp + 0x1000\n 63304: u8 [a0 + 4294965430] = 0\n 63308: a0 = sp + 0x1000\n 63312: u8 [a0 + 4294965429] = 0\n 63316: a0 = sp + 0x1000\n 63320: u8 [a0 + 4294965428] = 0\n 63324: a0 = sp + 0x1000\n 63328: u8 [a0 + 4294965427] = 0\n 63332: a0 = sp + 0x1000\n 63336: u8 [a0 + 4294965426] = 0\n 63340: a0 = sp + 0x1000\n 63344: u8 [a0 + 4294965425] = 0\n 63348: a0 = sp + 0x1000\n 63352: u8 [a0 + 4294965424] = 0\n 63356: a0 = sp + 0x1000\n 63360: u8 [a0 + 4294965423] = 0\n 63364: a0 = sp + 0x1000\n 63368: u8 [a0 + 4294965422] = 0\n 63372: a0 = sp + 0x1000\n 63376: u8 [a0 + 4294965421] = 0\n 63380: a0 = sp + 0x1000\n 63384: u8 [a0 + 4294965420] = 0\n 63388: a0 = sp + 0x1000\n 63392: u8 [a0 + 4294965419] = 0\n 63396: a0 = sp + 0x1000\n 63400: u8 [a0 + 4294965418] = 0\n 63404: a0 = sp + 0x1000\n 63408: u8 [a0 + 4294965417] = 0\n 63412: a0 = sp + 0x1000\n 63416: u8 [a0 + 4294965416] = 0\n 63420: a0 = sp + 0x1000\n 63424: u8 [a0 + 4294965415] = 0\n 63428: a0 = sp + 0x1000\n 63432: u8 [a0 + 4294965414] = 0\n 63436: a0 = sp + 0x1000\n 63440: u8 [a0 + 4294965413] = 0\n 63444: a0 = sp + 0x1000\n 63448: u8 [a0 + 4294965412] = 0\n 63452: a0 = sp + 0x1000\n 63456: u8 [a0 + 4294965411] = 0\n 63460: a0 = sp + 0x1000\n 63464: u8 [a0 + 4294965410] = 0\n 63468: a0 = sp + 0x1000\n 63472: u8 [a0 + 4294965409] = 0\n 63476: a0 = sp + 0x1000\n 63480: u8 [a0 + 4294965408] = 0\n 63484: a0 = u64 [sp + 0x268]\n 63488: a1 = sp + 0x1000\n 63492: u8 [a1 + 0xfffffffffffff8c8] = a0\n 63496: a1 = ra >> 0x38\n 63499: u64 [sp + 0x210] = a1\n 63503: a2 = sp + 0x1000\n 63507: u8 [a2 + 0xfffffffffffff8c7] = a1\n 63511: a1 = ra >> 0x30\n 63514: u64 [sp + 0x208] = a1\n 63518: a2 = sp + 0x1000\n 63522: u8 [a2 + 0xfffffffffffff8c6] = a1\n 63526: a1 = ra >> 0x28\n 63529: u64 [sp + 0x1d0] = a1\n 63533: a2 = sp + 0x1000\n 63537: u8 [a2 + 0xfffffffffffff8c5] = a1\n 63541: a1 = ra >> 0x20\n 63544: u64 [sp + 0x1c8] = a1\n 63548: a2 = sp + 0x1000\n 63552: u8 [a2 + 0xfffffffffffff8c4] = a1\n 63556: a1 = ra >> 0x18\n 63559: u64 [sp + 0x1c0] = a1\n 63563: a2 = sp + 0x1000\n 63567: u8 [a2 + 0xfffffffffffff8c3] = a1\n 63571: a1 = ra >> 0x10\n 63574: u64 [sp + 0x1b8] = a1\n 63578: a2 = sp + 0x1000\n 63582: u8 [a2 + 0xfffffffffffff8c2] = a1\n 63586: a1 = ra >> 0x8\n 63589: u64 [sp + 0x1b0] = a1\n 63593: a2 = sp + 0x1000\n 63597: u8 [a2 + 0xfffffffffffff8c1] = a1\n 63601: t2 = u64 [sp + 0x2d0]\n 63605: a1 = sp + 0x1000\n 63609: u8 [a1 + 0xfffffffffffff8d0] = t2\n 63613: a1 = a0 >> 0x38\n 63616: u64 [sp + 0x1a8] = a1\n 63620: a2 = sp + 0x1000\n 63624: u8 [a2 + 0xfffffffffffff8cf] = a1\n 63628: a1 = a0 >> 0x30\n 63631: u64 [sp + 0x1a0] = a1\n 63635: a2 = sp + 0x1000\n 63639: u8 [a2 + 0xfffffffffffff8ce] = a1\n 63643: a1 = a0 >> 0x28\n 63646: u64 [sp + 0x198] = a1\n 63650: a2 = sp + 0x1000\n 63654: u8 [a2 + 0xfffffffffffff8cd] = a1\n 63658: a1 = a0 >> 0x20\n 63661: u64 [sp + 0x190] = a1\n 63665: a2 = sp + 0x1000\n 63669: u8 [a2 + 0xfffffffffffff8cc] = a1\n 63673: a1 = a0 >> 0x18\n 63676: u64 [sp + 0x188] = a1\n 63680: a2 = sp + 0x1000\n 63684: u8 [a2 + 0xfffffffffffff8cb] = a1\n 63688: a1 = a0 >> 0x10\n 63691: u64 [sp + 0x180] = a1\n 63695: a2 = sp + 0x1000\n 63699: u8 [a2 + 0xfffffffffffff8ca] = a1\n 63703: a0 = a0 >> 0x8\n 63706: u64 [sp + 0x178] = a0\n 63710: a1 = sp + 0x1000\n 63714: u8 [a1 + 0xfffffffffffff8c9] = a0\n 63718: a0 = u64 [sp + 0x260]\n 63722: a1 = sp + 0x1000\n 63726: u8 [a1 + 0xfffffffffffff8d8] = a0\n 63730: a1 = t2 >> 0x38\n 63733: u64 [sp + 0x170] = a1\n 63737: a2 = sp + 0x1000\n 63741: u8 [a2 + 0xfffffffffffff8d7] = a1\n 63745: a1 = t2 >> 0x30\n 63748: u64 [sp + 0x168] = a1\n 63752: a2 = sp + 0x1000\n 63756: u8 [a2 + 0xfffffffffffff8d6] = a1\n 63760: a1 = t2 >> 0x28\n 63763: u64 [sp + 0x160] = a1\n 63767: a2 = sp + 0x1000\n 63771: u8 [a2 + 0xfffffffffffff8d5] = a1\n 63775: a1 = t2 >> 0x20\n 63778: u64 [sp + 0x158] = a1\n 63782: a2 = sp + 0x1000\n 63786: u8 [a2 + 0xfffffffffffff8d4] = a1\n 63790: a1 = t2 >> 0x18\n 63793: u64 [sp + 0x150] = a1\n 63797: a2 = sp + 0x1000\n 63801: u8 [a2 + 0xfffffffffffff8d3] = a1\n 63805: a1 = t2 >> 0x10\n 63808: u64 [sp + 0x358] = a1\n 63812: a2 = sp + 0x1000\n 63816: u8 [a2 + 0xfffffffffffff8d2] = a1\n 63820: a1 = t2 >> 0x8\n 63823: u64 [sp + 0x350] = a1\n 63827: a2 = sp + 0x1000\n 63831: u8 [a2 + 0xfffffffffffff8d1] = a1\n 63835: a1 = a0 >> 0x38\n 63838: u64 [sp + 0x348] = a1\n 63842: a2 = sp + 0x1000\n 63846: u8 [a2 + 0xfffffffffffff8df] = a1\n 63850: a1 = a0 >> 0x30\n 63853: u64 [sp + 0x318] = a1\n 63857: a2 = sp + 0x1000\n 63861: u8 [a2 + 0xfffffffffffff8de] = a1\n 63865: a1 = a0 >> 0x28\n 63868: u64 [sp + 0x310] = a1\n 63872: a2 = sp + 0x1000\n 63876: u8 [a2 + 0xfffffffffffff8dd] = a1\n 63880: a1 = a0 >> 0x20\n 63883: u64 [sp + 0x308] = a1\n 63887: a2 = sp + 0x1000\n 63891: u8 [a2 + 0xfffffffffffff8dc] = a1\n 63895: a1 = a0 >> 0x18\n 63898: u64 [sp + 0x300] = a1\n 63902: a2 = sp + 0x1000\n 63906: u8 [a2 + 0xfffffffffffff8db] = a1\n 63910: a1 = a0 >> 0x10\n 63913: u64 [sp + 0x220] = a1\n 63917: a2 = sp + 0x1000\n 63921: u8 [a2 + 0xfffffffffffff8da] = a1\n 63925: a0 = a0 >> 0x8\n 63928: u64 [sp + 0x218] = a0\n 63932: a1 = sp + 0x1000\n 63936: u8 [a1 + 0xfffffffffffff8d9] = a0\n 63940: a0 = t0 << 0x38\n 63943: a0 = a0 >> 0x3b\n 63946: a2 = sp + 0x7ff\n 63950: a2 = a2 + 0xc1\n 63954: a2 = a2 - a0\n 63957: a0 = u8 [a2 + 0x19]\n 63960: a3 = u8 [a2 + 0x18]\n 63963: a4 = u8 [a2 + 0x1a]\n 63966: a5 = u8 [a2 + 0x1b]\n 63969: a0 = a0 << 0x8\n 63972: a0 = a0 | a3\n 63975: a4 = a4 << 0x10\n 63978: a5 = a5 << 0x18\n 63981: a4 = a4 | a5\n 63984: a0 = a0 | a4\n 63987: a3 = u8 [a2 + 0x1d]\n 63990: a4 = u8 [a2 + 0x1c]\n 63993: a5 = u8 [a2 + 0x1e]\n 63996: s1 = u8 [a2 + 0x1f]\n 63999: a3 = a3 << 0x8\n 64002: a3 = a3 | a4\n 64005: a5 = a5 << 0x10\n 64008: s1 = s1 << 0x18\n 64011: a5 = a5 | s1\n 64014: a3 = a3 | a5\n 64017: a3 = a3 << 0x20\n 64020: a4 = a3 | a0\n 64023: a0 = u8 [a2 + 0x11]\n 64026: a3 = u8 [a2 + 0x10]\n 64029: a5 = u8 [a2 + 0x12]\n 64032: s1 = u8 [a2 + 0x13]\n 64035: a0 = a0 << 0x8\n 64038: a0 = a0 | a3\n 64041: a5 = a5 << 0x10\n 64044: s1 = s1 << 0x18\n 64047: a5 = a5 | s1\n 64050: a0 = a0 | a5\n 64053: a3 = u8 [a2 + 0x15]\n 64056: a5 = u8 [a2 + 0x14]\n 64059: s1 = u8 [a2 + 0x16]\n 64062: a1 = u8 [a2 + 0x17]\n 64065: a3 = a3 << 0x8\n 64068: a3 = a3 | a5\n 64071: s1 = s1 << 0x10\n 64074: a1 = a1 << 0x18\n 64077: a1 = a1 | s1\n 64080: a1 = a1 | a3\n 64083: a1 = a1 << 0x20\n 64086: t1 = a1 | a0\n 64089: a1 = t0 & 0x7\n 64092: a0 = a4 << a1\n 64095: a3 = t1 >> 0x1\n 64098: t0 = a1 ^ 0x3f\n 64101: a3 = a3 >> t0\n 64104: a0 = a0 | a3\n 64107: u64 [sp + 0x3a0] = a0\n 64111: a0 = u8 [a2 + 0x9]\n 64114: a3 = u8 [a2 + 0x8]\n 64117: s1 = u8 [a2 + 0xa]\n 64120: a4 = u8 [a2 + 0xb]\n 64123: a0 = a0 << 0x8\n 64126: a0 = a0 | a3\n 64129: s1 = s1 << 0x10\n 64132: a4 = a4 << 0x18\n 64135: a4 = a4 | s1\n 64138: a0 = a0 | a4\n 64141: a3 = u8 [a2 + 0xd]\n 64144: a4 = u8 [a2 + 0xc]\n 64147: s1 = u8 [a2 + 0xe]\n 64150: a5 = u8 [a2 + 0xf]\n 64153: a3 = a3 << 0x8\n 64156: a3 = a3 | a4\n 64159: s1 = s1 << 0x10\n 64162: a5 = a5 << 0x18\n 64165: a5 = a5 | s1\n 64168: a3 = a3 | a5\n 64171: a3 = a3 << 0x20\n 64174: s1 = a3 | a0\n 64177: a0 = s1 >> 0x1\n 64180: a3 = a1 ^ 0xffffffffffffffff\n 64183: a0 = a0 >> a3\n 64186: a3 = t1 << a1\n 64189: a0 = a0 | a3\n 64192: u64 [sp + 0x398] = a0\n 64196: a0 = u8 [a2 + 0x1]\n 64199: a3 = u8 [a2]\n 64201: a4 = u8 [a2 + 0x2]\n 64204: a5 = u8 [a2 + 0x3]\n 64207: a0 = a0 << 0x8\n 64210: a0 = a0 | a3\n 64213: a4 = a4 << 0x10\n 64216: a5 = a5 << 0x18\n 64219: a4 = a4 | a5\n 64222: a0 = a0 | a4\n 64225: a3 = u8 [a2 + 0x5]\n 64228: a4 = u8 [a2 + 0x4]\n 64231: a5 = u8 [a2 + 0x6]\n 64234: a2 = u8 [a2 + 0x7]\n 64237: a3 = a3 << 0x8\n 64240: a3 = a3 | a4\n 64243: a5 = a5 << 0x10\n 64246: a2 = a2 << 0x18\n 64249: a2 = a2 | a5\n 64252: a5 = u64 [sp + 0x378]\n 64256: a2 = a2 | a3\n 64259: a2 = a2 << 0x20\n 64262: a0 = a0 | a2\n 64265: a2 = a0 >> 0x1\n 64268: a2 = a2 >> t0\n 64271: t0 = u64 [sp + 0x370]\n 64275: a3 = s1 << a1\n 64278: a4 = u64 [sp + 0x380]\n 64282: a2 = a2 | a3\n 64285: u64 [sp + 0x388] = a2\n 64289: a2 = a4 | a5\n 64292: a3 = u64 [sp + 0x3a8]\n 64296: a3 = a3 | t0\n 64299: a2 = a2 | a3\n 64302: a0 = a0 << a1\n 64305: u64 [sp + 0x390] = a0\n 64309: jump @310 if a2 == 0\n      : @307 (gas: 288)\n 64313: u64 [sp + 872] = 0\n 64317: u64 [sp + 864] = 0\n 64321: a0 = u64 [sp + 0x210]\n 64325: a1 = sp + 0x1000\n 64329: u8 [a1 + 0xfffffffffffff867] = a0\n 64333: a0 = u64 [sp + 0x208]\n 64337: a1 = sp + 0x1000\n 64341: u8 [a1 + 0xfffffffffffff866] = a0\n 64345: a0 = u64 [sp + 0x1d0]\n 64349: a1 = sp + 0x1000\n 64353: u8 [a1 + 0xfffffffffffff865] = a0\n 64357: a0 = u64 [sp + 0x1c8]\n 64361: a1 = sp + 0x1000\n 64365: u8 [a1 + 0xfffffffffffff864] = a0\n 64369: a0 = u64 [sp + 0x1c0]\n 64373: a1 = sp + 0x1000\n 64377: u8 [a1 + 0xfffffffffffff863] = a0\n 64381: a0 = u64 [sp + 0x1b8]\n 64385: a1 = sp + 0x1000\n 64389: u8 [a1 + 0xfffffffffffff862] = a0\n 64393: a0 = u64 [sp + 0x1b0]\n 64397: a1 = sp + 0x1000\n 64401: u8 [a1 + 0xfffffffffffff861] = a0\n 64405: a0 = u64 [sp + 0x1a8]\n 64409: a1 = sp + 0x1000\n 64413: u8 [a1 + 0xfffffffffffff86f] = a0\n 64417: a0 = u64 [sp + 0x1a0]\n 64421: a1 = sp + 0x1000\n 64425: u8 [a1 + 0xfffffffffffff86e] = a0\n 64429: a0 = u64 [sp + 0x198]\n 64433: a1 = sp + 0x1000\n 64437: u8 [a1 + 0xfffffffffffff86d] = a0\n 64441: a0 = u64 [sp + 0x190]\n 64445: a1 = sp + 0x1000\n 64449: u8 [a1 + 0xfffffffffffff86c] = a0\n 64453: a0 = u64 [sp + 0x188]\n 64457: a1 = sp + 0x1000\n 64461: u8 [a1 + 0xfffffffffffff86b] = a0\n 64465: a0 = u64 [sp + 0x180]\n 64469: a1 = sp + 0x1000\n 64473: u8 [a1 + 0xfffffffffffff86a] = a0\n 64477: a0 = u64 [sp + 0x178]\n 64481: a1 = sp + 0x1000\n 64485: u8 [a1 + 0xfffffffffffff869] = a0\n 64489: a0 = u64 [sp + 0x170]\n 64493: a1 = sp + 0x1000\n 64497: u8 [a1 + 0xfffffffffffff877] = a0\n 64501: a0 = u64 [sp + 0x168]\n 64505: a1 = sp + 0x1000\n 64509: u8 [a1 + 0xfffffffffffff876] = a0\n 64513: a0 = u64 [sp + 0x160]\n 64517: a1 = sp + 0x1000\n 64521: u8 [a1 + 0xfffffffffffff875] = a0\n 64525: a0 = u64 [sp + 0x158]\n 64529: a1 = sp + 0x1000\n 64533: u8 [a1 + 0xfffffffffffff874] = a0\n 64537: a0 = u64 [sp + 0x150]\n 64541: a1 = sp + 0x1000\n 64545: u8 [a1 + 0xfffffffffffff873] = a0\n 64549: a0 = sp + 0x1000\n 64553: u8 [a0 + 4294965407] = 0\n 64557: a0 = sp + 0x1000\n 64561: u8 [a0 + 4294965406] = 0\n 64565: a0 = sp + 0x1000\n 64569: u8 [a0 + 4294965405] = 0\n 64573: a0 = sp + 0x1000\n 64577: u8 [a0 + 4294965404] = 0\n 64581: a0 = sp + 0x1000\n 64585: u8 [a0 + 4294965403] = 0\n 64589: a0 = sp + 0x1000\n 64593: u8 [a0 + 4294965402] = 0\n 64597: a0 = sp + 0x1000\n 64601: u8 [a0 + 4294965401] = 0\n 64605: a0 = sp + 0x1000\n 64609: u8 [a0 + 4294965400] = 0\n 64613: a0 = sp + 0x1000\n 64617: u8 [a0 + 4294965399] = 0\n 64621: a0 = sp + 0x1000\n 64625: u8 [a0 + 4294965398] = 0\n 64629: a0 = sp + 0x1000\n 64633: u8 [a0 + 4294965397] = 0\n 64637: a0 = sp + 0x1000\n 64641: u8 [a0 + 4294965396] = 0\n 64645: a0 = sp + 0x1000\n 64649: u8 [a0 + 4294965395] = 0\n 64653: a0 = sp + 0x1000\n 64657: u8 [a0 + 4294965394] = 0\n 64661: a0 = sp + 0x1000\n 64665: u8 [a0 + 4294965393] = 0\n 64669: a0 = sp + 0x1000\n 64673: u8 [a0 + 4294965392] = 0\n 64677: a0 = sp + 0x1000\n 64681: u8 [a0 + 4294965391] = 0\n 64685: a0 = sp + 0x1000\n 64689: u8 [a0 + 4294965390] = 0\n 64693: a0 = sp + 0x1000\n 64697: u8 [a0 + 4294965389] = 0\n 64701: a0 = sp + 0x1000\n 64705: u8 [a0 + 4294965388] = 0\n 64709: a0 = sp + 0x1000\n 64713: u8 [a0 + 4294965387] = 0\n 64717: a0 = sp + 0x1000\n 64721: u8 [a0 + 4294965386] = 0\n 64725: a0 = sp + 0x1000\n 64729: u8 [a0 + 4294965385] = 0\n 64733: a0 = sp + 0x1000\n 64737: u8 [a0 + 4294965384] = 0\n 64741: a0 = sp + 0x1000\n 64745: u8 [a0 + 4294965383] = 0\n 64749: a0 = sp + 0x1000\n 64753: u8 [a0 + 4294965382] = 0\n 64757: a0 = sp + 0x1000\n 64761: u8 [a0 + 4294965381] = 0\n 64765: a0 = sp + 0x1000\n 64769: u8 [a0 + 4294965380] = 0\n 64773: a0 = sp + 0x1000\n 64777: u8 [a0 + 4294965379] = 0\n 64781: a0 = sp + 0x1000\n 64785: u8 [a0 + 4294965378] = 0\n 64789: a0 = sp + 0x1000\n 64793: u8 [a0 + 4294965377] = 0\n 64797: a0 = sp + 0x1000\n 64801: u8 [a0 + 4294965376] = 0\n 64805: a0 = sp + 0x1000\n 64809: u8 [a0 + 0xfffffffffffff860] = ra\n 64813: a0 = u64 [sp + 0x268]\n 64817: a1 = sp + 0x1000\n 64821: u8 [a1 + 0xfffffffffffff868] = a0\n 64825: a0 = sp + 0x1000\n 64829: u8 [a0 + 0xfffffffffffff870] = t2\n 64833: a0 = u64 [sp + 0x260]\n 64837: a1 = sp + 0x1000\n 64841: u8 [a1 + 0xfffffffffffff878] = a0\n 64845: a0 = u64 [sp + 0x358]\n 64849: a1 = sp + 0x1000\n 64853: u8 [a1 + 0xfffffffffffff872] = a0\n 64857: a0 = u64 [sp + 0x350]\n 64861: a1 = sp + 0x1000\n 64865: u8 [a1 + 0xfffffffffffff871] = a0\n 64869: a0 = u64 [sp + 0x348]\n 64873: a1 = sp + 0x1000\n 64877: u8 [a1 + 0xfffffffffffff87f] = a0\n 64881: a0 = u64 [sp + 0x318]\n 64885: a1 = sp + 0x1000\n 64889: u8 [a1 + 0xfffffffffffff87e] = a0\n 64893: a0 = u64 [sp + 0x310]\n 64897: a1 = sp + 0x1000\n 64901: u8 [a1 + 0xfffffffffffff87d] = a0\n 64905: a0 = u64 [sp + 0x308]\n 64909: a1 = sp + 0x1000\n 64913: u8 [a1 + 0xfffffffffffff87c] = a0\n 64917: a0 = u64 [sp + 0x300]\n 64921: a1 = sp + 0x1000\n 64925: u8 [a1 + 0xfffffffffffff87b] = a0\n 64929: a0 = u64 [sp + 0x220]\n 64933: a1 = sp + 0x1000\n 64937: u8 [a1 + 0xfffffffffffff87a] = a0\n 64941: a0 = u64 [sp + 0x218]\n 64945: a1 = sp + 0x1000\n 64949: u8 [a1 + 0xfffffffffffff879] = a0\n 64953: s1 = u64 [sp + 0x3a8]\n 64957: a0 = s1 << 0x38\n 64960: a0 = a0 >> 0x3b\n 64963: a1 = sp + 0x7ff\n 64967: a1 = a1 + 0x61\n 64970: a1 = a1 + a0\n 64973: a0 = u8 [a1 + 0x11]\n 64976: a2 = u8 [a1 + 0x10]\n 64979: a3 = u8 [a1 + 0x12]\n 64982: a4 = u8 [a1 + 0x13]\n 64985: a0 = a0 << 0x8\n 64988: a0 = a0 | a2\n 64991: a3 = a3 << 0x10\n 64994: a4 = a4 << 0x18\n 64997: a3 = a3 | a4\n 65000: a0 = a0 | a3\n 65003: a2 = u8 [a1 + 0x15]\n 65006: a3 = u8 [a1 + 0x14]\n 65009: a4 = u8 [a1 + 0x16]\n 65012: a5 = u8 [a1 + 0x17]\n 65015: a2 = a2 << 0x8\n 65018: a2 = a2 | a3\n 65021: a4 = a4 << 0x10\n 65024: a5 = a5 << 0x18\n 65027: a4 = a4 | a5\n 65030: a2 = a2 | a4\n 65033: a2 = a2 << 0x20\n 65036: t0 = a2 | a0\n 65039: a2 = s1 & 0x7\n 65042: t1 = t0 >> a2\n 65045: a0 = u8 [a1 + 0x19]\n 65048: a4 = u8 [a1 + 0x18]\n 65051: s1 = u8 [a1 + 0x1a]\n 65054: a5 = u8 [a1 + 0x1b]\n 65057: a0 = a0 << 0x8\n 65060: a0 = a0 | a4\n 65063: s1 = s1 << 0x10\n 65066: a5 = a5 << 0x18\n 65069: a5 = a5 | s1\n 65072: a0 = a0 | a5\n 65075: a4 = u8 [a1 + 0x1d]\n 65078: a5 = u8 [a1 + 0x1c]\n 65081: s1 = u8 [a1 + 0x1e]\n 65084: a3 = u8 [a1 + 0x1f]\n 65087: a4 = a4 << 0x8\n 65090: a4 = a4 | a5\n 65093: s1 = s1 << 0x10\n 65096: a3 = a3 << 0x18\n 65099: a3 = a3 | s1\n 65102: a3 = a3 | a4\n 65105: a3 = a3 << 0x20\n 65108: t2 = a3 | a0\n 65111: a0 = t2 << 0x1\n 65114: ra = a2 ^ 0x3f\n 65117: a0 = a0 << ra\n 65120: a0 = t1 | a0\n 65123: u64 [sp + 0x358] = a0\n 65127: a0 = u8 [a1 + 0x9]\n 65130: a3 = u8 [a1 + 0x8]\n 65133: a5 = u8 [a1 + 0xa]\n 65136: a4 = u8 [a1 + 0xb]\n 65139: a0 = a0 << 0x8\n 65142: a0 = a0 | a3\n 65145: a5 = a5 << 0x10\n 65148: a4 = a4 << 0x18\n 65151: a4 = a4 | a5\n 65154: a0 = a0 | a4\n 65157: a3 = u8 [a1 + 0xd]\n 65160: a4 = u8 [a1 + 0xc]\n 65163: a5 = u8 [a1 + 0xe]\n 65166: s1 = u8 [a1 + 0xf]\n 65169: a3 = a3 << 0x8\n 65172: a3 = a3 | a4\n 65175: a5 = a5 << 0x10\n 65178: s1 = s1 << 0x18\n 65181: a5 = a5 | s1\n 65184: a3 = a3 | a5\n 65187: a3 = a3 << 0x20\n 65190: t1 = a3 | a0\n 65193: a0 = t1 >> a2\n 65196: t0 = t0 << 0x1\n 65199: a4 = a2 ^ 0xffffffffffffffff\n 65202: a5 = t0 << a4\n 65205: a5 = a5 | a0\n 65208: a0 = u8 [a1 + 0x1]\n 65211: a4 = u8 [a1]\n 65213: s1 = u8 [a1 + 0x2]\n 65216: a3 = u8 [a1 + 0x3]\n 65219: a0 = a0 << 0x8\n 65222: a0 = a0 | a4\n 65225: s1 = s1 << 0x10\n 65228: a3 = a3 << 0x18\n 65231: a3 = a3 | s1\n 65234: a0 = a0 | a3\n 65237: a3 = u8 [a1 + 0x5]\n 65240: a4 = u8 [a1 + 0x4]\n 65243: s1 = u8 [a1 + 0x6]\n 65246: a1 = u8 [a1 + 0x7]\n 65249: a3 = a3 << 0x8\n 65252: a3 = a3 | a4\n 65255: s1 = s1 << 0x10\n 65258: a1 = a1 << 0x18\n 65261: a1 = a1 | s1\n 65264: a1 = a1 | a3\n 65267: a1 = a1 << 0x20\n 65270: a0 = a0 | a1\n 65273: a0 = a0 >> a2\n 65276: t1 = t1 << 0x1\n 65279: a1 = t1 << ra\n 65282: t0 = a0 | a1\n 65285: t1 = t2 >> a2\n 65288: a2 = u64 [sp + 0x3c0]\n 65292: a0 = a2 <u 0x1\n 65295: a1 = u64 [sp + 0x3d0]\n 65299: a0 = a1 - a0\n 65302: u64 [sp + 0x318] = a0\n 65306: a0 = a2 | a1\n 65309: a0 = a0 <u 0x1\n 65312: a1 = u64 [sp + 0x3c8]\n 65316: a3 = a1 - a0\n 65319: u64 [sp + 0x310] = a3\n 65323: a0 = a1 <u a0\n 65326: a1 = u64 [sp + 0x3d8]\n 65330: a1 = a1 - a0\n 65333: u64 [sp + 0x308] = a1\n 65337: a2 = a2 + 0xffffffffffffffff\n 65340: u64 [sp + 0x300] = a2\n 65344: fallthrough\n      : @308 (gas: 101)\n 65345: u64 [sp + 840] = 0\n 65349: a1 = t0 >> 0x3f\n 65352: s1 = a5 << 0x1\n 65355: s1 = s1 | a1\n 65358: t0 = t0 << 0x1\n 65361: a4 = u64 [sp + 0x3a0]\n 65365: a1 = a4 >> 0x3f\n 65368: t2 = t0 | a1\n 65371: a1 = u64 [sp + 0x318]\n 65375: a0 = a1 ^ s1\n 65378: a2 = a1 <u s1\n 65381: a1 = u64 [sp + 0x300]\n 65385: a3 = a1 <u t2\n 65388: a3 = a2 if a0 != 0\n 65391: t1 = t1 << 0x1\n 65394: ra = u64 [sp + 0x358]\n 65398: a0 = ra >> 0x3f\n 65401: t0 = t1 | a0\n 65404: u64 [sp + 0x350] = t0\n 65408: a5 = a5 >> 0x3f\n 65411: ra = ra << 0x1\n 65414: t1 = ra | a5\n 65417: a0 = a4 << 0x1\n 65420: a1 = u64 [sp + 0x398]\n 65424: a4 = a1 >> 0x3f\n 65427: a5 = a0 | a4\n 65430: a4 = a1 << 0x1\n 65433: a0 = u64 [sp + 0x388]\n 65437: a2 = a0 >> 0x3f\n 65440: a2 = a2 | a4\n 65443: a0 = a0 << 0x1\n 65446: a4 = u64 [sp + 0x390]\n 65450: a1 = a4 >> 0x3f\n 65453: a1 = a1 | a0\n 65456: a4 = a4 << 0x1\n 65459: a0 = u64 [sp + 0x368]\n 65463: a4 = a4 | a0\n 65466: u64 [sp + 0x390] = a4\n 65470: a4 = u64 [sp + 0x360]\n 65474: a1 = a1 | a4\n 65477: u64 [sp + 0x388] = a1\n 65481: a2 = a2 | a4\n 65484: u64 [sp + 0x398] = a2\n 65488: a0 = a4 | a5\n 65491: u64 [sp + 0x3a0] = a0\n 65495: a1 = u64 [sp + 0x310]\n 65499: a0 = a1 - t1\n 65502: a0 = a0 <u a3\n 65505: a1 = a1 <u t1\n 65508: a2 = u64 [sp + 0x308]\n 65512: a2 = a2 - t0\n 65515: a2 = a2 - a1\n 65518: a2 = a2 - a0\n 65521: a3 = a2 >>a 0x3f\n 65524: a0 = u64 [sp + 0x3c0]\n 65528: t0 = a3 & a0\n 65531: a1 = u64 [sp + 0x3d0]\n 65535: a1 = a1 & a3\n 65538: a2 = s1 ^ a1\n 65541: a4 = s1 <u a1\n 65544: ra = t2 <u t0\n 65547: a4 = ra if a2 == 0\n 65550: a2 = u64 [sp + 0x3c8]\n 65554: a2 = a2 & a3\n 65557: a0 = t1 - a2\n 65560: a5 = a0 - a4\n 65563: u64 [sp + 0x358] = a5\n 65567: a4 = a0 <u a4\n 65570: a2 = t1 <u a2\n 65573: a5 = u64 [sp + 0x3d8]\n 65577: a5 = a5 & a3\n 65580: a0 = u64 [sp + 0x350]\n 65584: a5 = a0 - a5\n 65587: a5 = a5 - a2\n 65590: t1 = a5 - a4\n 65593: s1 = s1 - a1\n 65596: a5 = s1 - ra\n 65599: t0 = t2 - t0\n 65602: a4 = u64 [sp + 0x3a8]\n 65606: s1 = u64 [sp + 0x380]\n 65610: a0 = a4 | s1\n 65613: a0 = a0 <u 0x1\n 65616: a2 = u64 [sp + 0x370]\n 65620: a1 = a2 <u a0\n 65623: a0 = a2 - a0\n 65626: a2 = a4 <u 0x1\n 65629: s1 = s1 - a2\n 65632: a2 = u64 [sp + 0x378]\n 65636: a2 = a2 - a1\n 65639: a4 = a4 + 0xffffffffffffffff\n 65642: u64 [sp + 0x380] = s1\n 65646: u64 [sp + 0x378] = a2\n 65650: a1 = s1 | a2\n 65653: u64 [sp + 0x3a8] = a4\n 65657: a2 = a4 | a0\n 65660: a1 = a1 | a2\n 65663: a3 = a3 & 0x1\n 65666: u64 [sp + 0x368] = a3\n 65670: u64 [sp + 0x370] = a0\n 65674: u64 [sp + 864] = 0\n 65678: jump @308 if a1 != 0\n      : @309 (gas: 1)\n 65682: jump @311\n      : @310 (gas: 3)\n 65684: u64 [sp + 872] = 0\n 65688: u64 [sp + 840] = 0\n 65692: fallthrough\n      : @311 (gas: 22)\n 65693: a2 = u64 [sp + 0x398]\n 65697: a0 = a2 >> 0x3f\n 65700: a1 = u64 [sp + 0x3a0]\n 65704: a1 = a1 << 0x1\n 65707: a3 = a1 | a0\n 65710: a5 = u64 [sp + 0x388]\n 65714: a0 = a5 >> 0x3f\n 65717: a1 = a2 << 0x1\n 65720: a1 = a1 | a0\n 65723: a0 = u64 [sp + 0x390]\n 65727: a2 = a0 >> 0x3f\n 65730: a5 = a5 << 0x1\n 65733: a0 = a0 << 0x1\n 65736: a4 = u64 [sp + 0x368]\n 65740: a0 = a0 | a4\n 65743: a4 = u64 [sp + 0x348]\n 65747: a2 = a2 | a4\n 65750: a2 = a2 | a5\n 65753: t0 = a4 | a1\n 65756: t1 = a4 | a3\n 65759: ra = u64 [sp + 0x258]\n 65763: fallthrough\n      : @312 (gas: 244)\n 65764: a1 = u64 [sp + 0x3c0]\n 65768: a3 = a1 mulhu a0\n 65771: s1 = u64 [sp + 0x3d0]\n 65775: a4 = s1 * a0\n 65778: a3 = a3 + a4\n 65781: a4 = a3 <u a4\n 65784: a5 = s1 mulhu a0\n 65787: a5 = a5 + a4\n 65790: a4 = a1 * a2\n 65793: t2 = a4 + a3\n 65796: a3 = t2 <u a4\n 65799: a4 = a1 mulhu a2\n 65802: a3 = a3 + a4\n 65805: a3 = a3 + a5\n 65808: a4 = a3 <u a5\n 65811: a5 = s1 mulhu a2\n 65814: a4 = a4 + a5\n 65817: a5 = s1 * a2\n 65820: a3 = a3 + a5\n 65823: a5 = a3 <u a5\n 65826: a4 = a4 + a5\n 65829: u64 [sp + 0x3a8] = a4\n 65833: a5 = t0 * s1\n 65836: a4 = t0 mulhu a1\n 65839: a4 = a4 + a5\n 65842: a5 = t1 * a1\n 65845: t1 = a4 + a5\n 65848: a5 = u64 [sp + 0x3c8]\n 65852: a4 = a0 mulhu a5\n 65855: s1 = u64 [sp + 0x3d8]\n 65859: s1 = a0 * s1\n 65862: a4 = a4 + s1\n 65865: a2 = a2 * a5\n 65868: a2 = a2 + a4\n 65871: a2 = a2 + t1\n 65874: s1 = a1\n 65876: a1 = t0 * a1\n 65879: a4 = a0 * a5\n 65882: a4 = a4 + a1\n 65885: a1 = a4 <u a1\n 65888: a1 = a1 + a2\n 65891: a2 = u64 [sp + 0x3a8]\n 65895: a1 = a1 + a2\n 65898: a4 = a4 + a3\n 65901: a2 = a4 <u a3\n 65904: a3 = u64 [sp + 0x260]\n 65908: a2 = a3 - a2\n 65911: a0 = s1 * a0\n 65914: t0 = a2 - a1\n 65917: a2 = u64 [sp + 0x268]\n 65921: a1 = a2 ^ t2\n 65924: a5 = a2 <u t2\n 65927: s1 = ra <u a0\n 65930: a5 = s1 if a1 == 0\n 65933: a3 = u64 [sp + 0x2d0]\n 65937: a1 = a3 <u a4\n 65940: a4 = a3 - a4\n 65943: a3 = a4 <u a5\n 65946: a1 = a1 + a3\n 65949: a1 = t0 - a1\n 65952: u64 [sp + 0x398] = a1\n 65956: a5 = a4 - a5\n 65959: a1 = a2 - s1\n 65962: t2 = a1 - t2\n 65965: t0 = ra - a0\n 65968: a4 = u64 [sp + 0x2f0]\n 65972: a0 = a4 mulhu t0\n 65975: t1 = u64 [sp + 0x2c0]\n 65979: a1 = t1 * t0\n 65982: a0 = a0 + a1\n 65985: a2 = a4 * t2\n 65988: a3 = a2 + a0\n 65991: u64 [sp + 0x350] = a3\n 65995: a2 = a3 <u a2\n 65998: s1 = a4 mulhu t2\n 66001: a2 = a2 + s1\n 66004: a0 = a0 <u a1\n 66007: a1 = t1 mulhu t0\n 66010: a0 = a0 + a1\n 66013: a2 = a2 + a0\n 66016: a0 = a2 <u a0\n 66019: a1 = t1 mulhu t2\n 66022: a0 = a0 + a1\n 66025: a1 = t1 * t2\n 66028: u64 [sp + 0x3a0] = t2\n 66032: a2 = a2 + a1\n 66035: a1 = a2 <u a1\n 66038: a0 = a0 + a1\n 66041: ra = a4 mulhu a5\n 66044: a1 = t1 * a5\n 66047: u64 [sp + 0x378] = a1\n 66051: a3 = a5\n 66053: u64 [sp + 0x3a8] = a5\n 66057: ra = ra + a1\n 66060: a5 = u64 [sp + 0x2f8]\n 66064: s1 = a5 mulhu t0\n 66067: a1 = u64 [sp + 0x2e8]\n 66071: a1 = a1 * t0\n 66074: u64 [sp + 0x388] = a1\n 66078: a1 = a1 + s1\n 66081: u64 [sp + 0x380] = a1\n 66085: t2 = a5 * t2\n 66088: u64 [sp + 0x370] = t2\n 66092: t2 = t2 + a1\n 66095: a1 = t2 + a0\n 66098: a0 = a5 * t0\n 66101: a2 = a2 + a0\n 66104: a5 = a2 <u a0\n 66107: u64 [sp + 0x368] = a5\n 66111: a5 = a5 + a1\n 66114: a1 = a4 * a3\n 66117: a2 = a2 + a1\n 66120: u64 [sp + 0x358] = a2\n 66124: a2 = a2 <u a1\n 66127: a3 = u64 [sp + 0x398]\n 66131: a1 = a4 * a3\n 66134: u64 [sp + 0x360] = a1\n 66138: a1 = a1 + ra\n 66141: a0 = a1 + a5\n 66144: a0 = a0 + a2\n 66147: s1 = a0 ^ a1\n 66150: u64 [sp + 0x348] = a0\n 66154: a0 = a0 <u a1\n 66157: a0 = a2 if s1 == 0\n 66160: u64 [sp + 0x390] = a0\n 66164: a0 = a5 ^ t2\n 66167: a2 = a5 <u t2\n 66170: a5 = u64 [sp + 0x368]\n 66174: a2 = a5 if a0 == 0\n 66177: a0 = u64 [sp + 0x360]\n 66181: a0 = a1 <u a0\n 66184: a1 = a4 mulhu a3\n 66187: a4 = a3\n 66189: a0 = a0 + a1\n 66192: a1 = u64 [sp + 0x378]\n 66196: a1 = ra <u a1\n 66199: a3 = u64 [sp + 0x3a8]\n 66203: a3 = t1 mulhu a3\n 66206: a3 = a3 + a1\n 66209: a1 = u64 [sp + 0x370]\n 66213: a1 = t2 <u a1\n 66216: a5 = u64 [sp + 0x3a0]\n 66220: ra = u64 [sp + 0x2f8]\n 66224: a5 = ra mulhu a5\n 66227: a1 = a1 + a5\n 66230: a5 = u64 [sp + 0x388]\n 66234: s1 = u64 [sp + 0x380]\n 66238: s1 = s1 <u a5\n 66241: u64 [sp + 0x380] = t0\n 66245: t2 = u64 [sp + 0x2e8]\n 66249: a5 = t2 mulhu t0\n 66252: s1 = s1 + a5\n 66255: a0 = a0 + a3\n 66258: a3 = a0 <u a3\n 66261: a5 = t1 mulhu a4\n 66264: a3 = a3 + a5\n 66267: a5 = t1 * a4\n 66270: t0 = a4\n 66272: a0 = a0 + a5\n 66275: a5 = a0 <u a5\n 66278: a3 = a3 + a5\n 66281: t1 = u64 [sp + 0x390]\n 66285: t1 = t1 + a0\n 66288: a0 = t1 <u a0\n 66291: a0 = a0 + a3\n 66294: a1 = a1 + s1\n 66297: a3 = a1 <u s1\n 66300: a4 = u64 [sp + 0x3a0]\n 66304: a5 = t2 mulhu a4\n 66307: a3 = a3 + a5\n 66310: a4 = t2 * a4\n 66313: a1 = a1 + a4\n 66316: a4 = a1 <u a4\n 66319: a3 = a3 + a4\n 66322: a2 = a2 + a1\n 66325: a1 = a2 <u a1\n 66328: a1 = a1 + a3\n 66331: t1 = t1 + a2\n 66334: a5 = t1 <u a2\n 66337: u64 [sp + 0x388] = a5\n 66341: a0 = a0 + a1\n 66344: a5 = a5 + a0\n 66347: a2 = u64 [sp + 0x3a8]\n 66351: a3 = ra\n 66353: a0 = ra mulhu a2\n 66356: ra = t2 * a2\n 66359: u64 [sp + 0x390] = ra\n 66363: ra = ra + a0\n 66366: a0 = a3 * a2\n 66369: s1 = a3\n 66371: t1 = t1 + a0\n 66374: u64 [sp + 0x3a0] = t1\n 66378: a4 = t1 <u a0\n 66381: a3 = a3 * t0\n 66384: a2 = a3 + ra\n 66387: t0 = a2 + a4\n 66390: t0 = t0 + a5\n 66393: t1 = t0 ^ a2\n 66396: a0 = t0 <u a2\n 66399: a0 = a4 if t1 == 0\n 66402: a4 = a5 ^ a1\n 66405: a1 = a5 <u a1\n 66408: a5 = u64 [sp + 0x388]\n 66412: a1 = a5 if a4 == 0\n 66415: a2 = a2 <u a3\n 66418: a5 = u64 [sp + 0x398]\n 66422: a3 = s1 mulhu a5\n 66425: a2 = a2 + a3\n 66428: a3 = u64 [sp + 0x390]\n 66432: a3 = ra <u a3\n 66435: a4 = u64 [sp + 0x3a8]\n 66439: a4 = t2 mulhu a4\n 66442: a3 = a3 + a4\n 66445: a4 = t2 * a5\n 66448: a5 = t2 mulhu a5\n 66451: a2 = a2 + a3\n 66454: a3 = a2 <u a3\n 66457: a5 = a5 + a3\n 66460: a3 = u64 [sp + 0x3a0]\n 66464: a2 = a2 + a4\n 66467: a1 = a1 + a2\n 66470: ra = a1 + a0\n 66473: a0 = a2 <u a4\n 66476: a2 = a1 <u a2\n 66479: a1 = ra <u a1\n 66482: a0 = a0 + a5\n 66485: a0 = a0 + a2\n 66488: a5 = a0 + a1\n 66491: a1 = u64 [sp + 0x3d0]\n 66495: a0 = a1 ^ t0\n 66498: a1 = t0 <u a1\n 66501: a2 = u64 [sp + 0x3c0]\n 66505: a2 = a3 <u a2\n 66508: a2 = a1 if a0 != 0\n 66511: s1 = u64 [sp + 0x3c8]\n 66515: a0 = ra <u s1\n 66518: a4 = u64 [sp + 0x3d8]\n 66522: a1 = a4 ^ a5\n 66525: a4 = a5 <u a4\n 66528: a4 = a0 if a1 == 0\n 66531: a0 = s1 ^ ra\n 66534: a0 = a0 | a1\n 66537: a2 = a4 if a0 != 0\n 66540: jump @319 if a2 == 0\n      : @313 (gas: 381)\n 66544: a0 = u64 [sp + 0x380]\n 66548: a1 = u64 [sp + 0x2f0]\n 66552: t1 = a1 * a0\n 66555: s1 = u64 [sp + 0x138]\n 66559: s1 = s1 >> 0x3f\n 66562: a0 = t0\n 66564: t0 = u64 [sp + 0x358]\n 66568: a1 = t0\n 66570: a1 = a3 if s1 == 0\n 66573: ra = a3 if s1 != 0\n 66576: a2 = u64 [sp + 0x350]\n 66580: a3 = sp + 0x1000\n 66584: u8 [a3 + 0xfffffffffffff848] = a2\n 66588: a3 = u64 [sp + 0x348]\n 66592: a4 = sp + 0x1000\n 66596: u8 [a4 + 0xfffffffffffff858] = a3\n 66600: a4 = a2 >> 0x38\n 66603: u64 [sp + 0x370] = a4\n 66607: a4 = a2 >> 0x30\n 66610: u64 [sp + 0x368] = a4\n 66614: a4 = a2 >> 0x28\n 66617: u64 [sp + 0x360] = a4\n 66621: a4 = a2 >> 0x20\n 66624: u64 [sp + 0x318] = a4\n 66628: a4 = a2 >> 0x18\n 66631: u64 [sp + 0x310] = a4\n 66635: a4 = a2 >> 0x10\n 66638: u64 [sp + 0x2f0] = a4\n 66642: a4 = a2 >> 0x8\n 66645: u64 [sp + 0x2c0] = a4\n 66649: a2 = a3 if s1 == 0\n 66652: a4 = a3 >> 0x38\n 66655: u64 [sp + 0x3a8] = a4\n 66659: a4 = a3 >> 0x30\n 66662: u64 [sp + 0x3a0] = a4\n 66666: a4 = a3 >> 0x28\n 66669: u64 [sp + 0x398] = a4\n 66673: a4 = a3 >> 0x20\n 66676: u64 [sp + 0x390] = a4\n 66680: a4 = a3 >> 0x18\n 66683: u64 [sp + 0x388] = a4\n 66687: a4 = a3 >> 0x10\n 66690: u64 [sp + 0x380] = a4\n 66694: a4 = a3 >> 0x8\n 66697: u64 [sp + 0x378] = a4\n 66701: a3 = a0 if s1 == 0\n 66704: a5 = a0 if s1 != 0\n 66707: a4 = u64 [sp + 0x248]\n 66711: a4 = a4 >> 0x3f\n 66714: a0 = a2\n 66716: a0 = a1 if a4 == 0\n 66719: a1 = a3 if a4 == 0\n 66722: a5 = ra if a4 != 0\n 66725: ra = a3 if a4 != 0\n 66728: a3 = sp + 0x1000\n 66732: u8 [a3 + 0xfffffffffffff840] = t1\n 66736: a3 = t1 >> 0x38\n 66739: u64 [sp + 0x350] = a3\n 66743: a3 = t1 >> 0x30\n 66746: u64 [sp + 0x348] = a3\n 66750: a3 = t1 >> 0x28\n 66753: u64 [sp + 0x268] = a3\n 66757: a3 = t1 >> 0x20\n 66760: u64 [sp + 0x260] = a3\n 66764: a3 = t1 >> 0x18\n 66767: u64 [sp + 0x258] = a3\n 66771: a3 = t1 >> 0x10\n 66774: u64 [sp + 0x248] = a3\n 66778: a3 = t1 >> 0x8\n 66781: u64 [sp + 0x220] = a3\n 66785: t1 = t0 if s1 == 0\n 66788: t1 = a2 if a4 == 0\n 66791: a4 = a0 >> 0x1\n 66794: a2 = u64 [sp + 0x250]\n 66798: a4 = a4 >> a2\n 66801: a3 = u64 [sp + 0x1e0]\n 66805: s1 = a1 << a3\n 66808: s1 = s1 | a4\n 66811: a4 = a5 << a3\n 66814: a5 = ra >> 0x1\n 66817: a5 = a5 >> a2\n 66820: t2 = a4 | a5\n 66823: a4 = a0 << a3\n 66826: a0 = t1 >> 0x1\n 66829: a0 = a0 >> a2\n 66832: a4 = a4 | a0\n 66835: u64 [sp + 0x308] = a4\n 66839: a1 = a1 >> 0x1\n 66842: a0 = a1 >> a2\n 66845: a1 = ra << a3\n 66848: a5 = a1 | a0\n 66851: a0 = u64 [sp + 0x3b8]\n 66855: a0 = clz a0\n 66857: a0 = a0 + 0x40\n 66860: t1 = u64 [sp + 0x3b0]\n 66864: a1 = clz t1\n 66866: a1 = a0 if t1 == 0\n 66869: a0 = clz a4\n 66871: a2 = a0 + 0x40\n 66874: u64 [sp + 0x300] = s1\n 66878: a0 = clz s1\n 66880: a2 = a0 if s1 != 0\n 66883: u64 [sp + 0x2f8] = a5\n 66887: a0 = clz a5\n 66889: a0 = a0 + 0x40\n 66892: a3 = clz t2\n 66894: a0 = a3 if t2 != 0\n 66897: a3 = a2 + 0x80\n 66901: a4 = a3 <u a2\n 66904: a2 = a5 | t2\n 66907: a0 = a3 if a2 == 0\n 66910: a4 = 0 if a2 != 0\n 66912: s1 = a1 + 0x80\n 66916: a5 = s1 <u a1\n 66919: a1 = s1 <u a0\n 66922: a3 = a5 ^ a4\n 66925: a2 = a5 <u a4\n 66928: a2 = a1 if a3 == 0\n 66931: u64 [sp + 0x2e8] = a5\n 66935: a3 = a5 - a4\n 66938: a3 = a3 - a1\n 66941: ra = a2 <u 0x1\n 66944: ra = ra + 0xffffffffffffffff\n 66947: a1 = -a2\n 66949: u64 [sp + 0x110] = a1\n 66953: a4 = a1 >u 0\n 66955: a5 = ra >u 0\n 66957: u64 [sp + 0x118] = ra\n 66961: a5 = a4 if ra == 0\n 66964: u64 [sp + 0x2d0] = s1\n 66968: s1 = s1 - a0\n 66971: u64 [sp + 0x108] = s1\n 66975: a0 = s1 <u 0x100\n 66979: a0 = a0 ^ 0x1\n 66982: s1 = a3 >u 0\n 66984: u64 [sp + 0x100] = a3\n 66988: a0 = s1 if a3 != 0\n 66991: a0 = a5 if a2 != 0\n 66994: a1 = u64 [sp + 0x350]\n 66998: a2 = sp + 0x1000\n 67002: u8 [a2 + 0xfffffffffffff847] = a1\n 67006: a1 = u64 [sp + 0x348]\n 67010: a2 = sp + 0x1000\n 67014: u8 [a2 + 0xfffffffffffff846] = a1\n 67018: a1 = u64 [sp + 0x268]\n 67022: a2 = sp + 0x1000\n 67026: u8 [a2 + 0xfffffffffffff845] = a1\n 67030: a1 = u64 [sp + 0x260]\n 67034: a2 = sp + 0x1000\n 67038: u8 [a2 + 0xfffffffffffff844] = a1\n 67042: a1 = u64 [sp + 0x258]\n 67046: a2 = sp + 0x1000\n 67050: u8 [a2 + 0xfffffffffffff843] = a1\n 67054: a1 = u64 [sp + 0x248]\n 67058: a2 = sp + 0x1000\n 67062: u8 [a2 + 0xfffffffffffff842] = a1\n 67066: a1 = u64 [sp + 0x220]\n 67070: a2 = sp + 0x1000\n 67074: u8 [a2 + 0xfffffffffffff841] = a1\n 67078: a1 = u64 [sp + 0x370]\n 67082: a2 = sp + 0x1000\n 67086: u8 [a2 + 0xfffffffffffff84f] = a1\n 67090: a1 = u64 [sp + 0x368]\n 67094: a2 = sp + 0x1000\n 67098: u8 [a2 + 0xfffffffffffff84e] = a1\n 67102: a1 = u64 [sp + 0x360]\n 67106: a2 = sp + 0x1000\n 67110: u8 [a2 + 0xfffffffffffff84d] = a1\n 67114: a1 = u64 [sp + 0x318]\n 67118: a2 = sp + 0x1000\n 67122: u8 [a2 + 0xfffffffffffff84c] = a1\n 67126: a1 = u64 [sp + 0x310]\n 67130: a2 = sp + 0x1000\n 67134: u8 [a2 + 0xfffffffffffff84b] = a1\n 67138: a1 = u64 [sp + 0x2f0]\n 67142: a2 = sp + 0x1000\n 67146: u8 [a2 + 0xfffffffffffff84a] = a1\n 67150: a1 = u64 [sp + 0x2c0]\n 67154: a2 = sp + 0x1000\n 67158: u8 [a2 + 0xfffffffffffff849] = a1\n 67162: a2 = t0 >> 0x38\n 67165: a1 = sp + 0x1000\n 67169: u8 [a1 + 0xfffffffffffff857] = a2\n 67173: a2 = t0 >> 0x30\n 67176: a1 = sp + 0x1000\n 67180: u8 [a1 + 0xfffffffffffff856] = a2\n 67184: a2 = t0 >> 0x28\n 67187: a1 = sp + 0x1000\n 67191: u8 [a1 + 0xfffffffffffff855] = a2\n 67195: a2 = t0 >> 0x20\n 67198: a1 = sp + 0x1000\n 67202: u8 [a1 + 0xfffffffffffff854] = a2\n 67206: a2 = t0 >> 0x18\n 67209: a1 = sp + 0x1000\n 67213: u8 [a1 + 0xfffffffffffff853] = a2\n 67217: a2 = t0 >> 0x10\n 67220: a1 = sp + 0x1000\n 67224: u8 [a1 + 0xfffffffffffff852] = a2\n 67228: a1 = sp + 0x1000\n 67232: u8 [a1 + 0xfffffffffffff850] = t0\n 67236: a2 = t0 >> 0x8\n 67239: a1 = sp + 0x1000\n 67243: u8 [a1 + 0xfffffffffffff851] = a2\n 67247: a1 = u64 [sp + 0x3a8]\n 67251: a2 = sp + 0x1000\n 67255: u8 [a2 + 0xfffffffffffff85f] = a1\n 67259: a1 = u64 [sp + 0x3a0]\n 67263: a2 = sp + 0x1000\n 67267: u8 [a2 + 0xfffffffffffff85e] = a1\n 67271: a1 = u64 [sp + 0x398]\n 67275: a2 = sp + 0x1000\n 67279: u8 [a2 + 0xfffffffffffff85d] = a1\n 67283: a1 = u64 [sp + 0x390]\n 67287: a2 = sp + 0x1000\n 67291: u8 [a2 + 0xfffffffffffff85c] = a1\n 67295: a1 = u64 [sp + 0x388]\n 67299: a2 = sp + 0x1000\n 67303: u8 [a2 + 0xfffffffffffff85b] = a1\n 67307: a1 = u64 [sp + 0x380]\n 67311: a2 = sp + 0x1000\n 67315: u8 [a2 + 0xfffffffffffff85a] = a1\n 67319: a1 = u64 [sp + 0x378]\n 67323: a2 = sp + 0x1000\n 67327: u8 [a2 + 0xfffffffffffff859] = a1\n 67331: ra = u64 [sp + 0x300]\n 67335: a2 = ra | t2\n 67338: a4 = u64 [sp + 0x308]\n 67342: a1 = u64 [sp + 0x2f8]\n 67346: a5 = a4 | a1\n 67349: a2 = a2 | a5\n 67352: a3 = u64 [sp + 0x3b8]\n 67356: a5 = a3 | t1\n 67359: t1 = t2\n 67361: s1 = a5 <u 0x1\n 67364: a2 = a2 <u 0x1\n 67367: a5 = s1 | a2\n 67370: a5 = a5 | a0\n 67373: a0 = sp + 0x1000\n 67377: u8 [a0 + 4294965311] = 0\n 67381: a0 = sp + 0x1000\n 67385: u8 [a0 + 4294965310] = 0\n 67389: a0 = sp + 0x1000\n 67393: u8 [a0 + 4294965309] = 0\n 67397: a0 = sp + 0x1000\n 67401: u8 [a0 + 4294965308] = 0\n 67405: a0 = sp + 0x1000\n 67409: u8 [a0 + 4294965307] = 0\n 67413: a0 = sp + 0x1000\n 67417: u8 [a0 + 4294965306] = 0\n 67421: a0 = sp + 0x1000\n 67425: u8 [a0 + 4294965305] = 0\n 67429: a0 = sp + 0x1000\n 67433: u8 [a0 + 4294965304] = 0\n 67437: a0 = sp + 0x1000\n 67441: u8 [a0 + 4294965303] = 0\n 67445: a0 = sp + 0x1000\n 67449: u8 [a0 + 4294965302] = 0\n 67453: a0 = sp + 0x1000\n 67457: u8 [a0 + 4294965301] = 0\n 67461: a0 = sp + 0x1000\n 67465: u8 [a0 + 4294965300] = 0\n 67469: a0 = sp + 0x1000\n 67473: u8 [a0 + 4294965299] = 0\n 67477: a0 = sp + 0x1000\n 67481: u8 [a0 + 4294965298] = 0\n 67485: a0 = sp + 0x1000\n 67489: u8 [a0 + 4294965297] = 0\n 67493: a0 = sp + 0x1000\n 67497: u8 [a0 + 4294965296] = 0\n 67501: a0 = sp + 0x1000\n 67505: u8 [a0 + 4294965295] = 0\n 67509: a0 = sp + 0x1000\n 67513: u8 [a0 + 4294965294] = 0\n 67517: a0 = sp + 0x1000\n 67521: u8 [a0 + 4294965293] = 0\n 67525: a0 = sp + 0x1000\n 67529: u8 [a0 + 4294965292] = 0\n 67533: a0 = sp + 0x1000\n 67537: u8 [a0 + 4294965291] = 0\n 67541: a0 = sp + 0x1000\n 67545: u8 [a0 + 4294965290] = 0\n 67549: a0 = sp + 0x1000\n 67553: u8 [a0 + 4294965289] = 0\n 67557: a0 = sp + 0x1000\n 67561: u8 [a0 + 4294965288] = 0\n 67565: a0 = sp + 0x1000\n 67569: u8 [a0 + 4294965287] = 0\n 67573: a0 = sp + 0x1000\n 67577: u8 [a0 + 4294965286] = 0\n 67581: a0 = sp + 0x1000\n 67585: u8 [a0 + 4294965285] = 0\n 67589: a0 = sp + 0x1000\n 67593: u8 [a0 + 4294965284] = 0\n 67597: a0 = sp + 0x1000\n 67601: u8 [a0 + 4294965283] = 0\n 67605: a0 = sp + 0x1000\n 67609: u8 [a0 + 4294965282] = 0\n 67613: a0 = sp + 0x1000\n 67617: u8 [a0 + 4294965281] = 0\n 67621: a0 = sp + 0x1000\n 67625: u8 [a0 + 4294965280] = 0\n 67629: a0 = u64 [sp + 0x1f0]\n 67633: a2 = sp + 0x7ff\n 67637: a2 = a2 + 0x41\n 67640: a0 = a2 - a0\n 67643: t2 = a1\n 67645: a2 = u8 [a0 + 0x18]\n 67648: u64 [sp + 0x148] = a2\n 67652: a2 = u8 [a0 + 0x19]\n 67655: u64 [sp + 0x120] = a2\n 67659: a2 = u8 [a0 + 0x1a]\n 67662: u64 [sp + 0x130] = a2\n 67666: a2 = u8 [a0 + 0x1b]\n 67669: u64 [sp + 0x128] = a2\n 67673: a2 = u8 [a0 + 0x1c]\n 67676: u64 [sp + 0x160] = a2\n 67680: a2 = u8 [a0 + 0x1d]\n 67683: u64 [sp + 0x140] = a2\n 67687: a2 = u8 [a0 + 0x1e]\n 67690: u64 [sp + 0x158] = a2\n 67694: a2 = u8 [a0 + 0x1f]\n 67697: u64 [sp + 0x150] = a2\n 67701: a2 = u8 [a0 + 0x10]\n 67704: u64 [sp + 0x188] = a2\n 67708: a2 = u8 [a0 + 0x11]\n 67711: u64 [sp + 0x168] = a2\n 67715: a2 = u8 [a0 + 0x12]\n 67718: u64 [sp + 0x178] = a2\n 67722: a2 = u8 [a0 + 0x13]\n 67725: u64 [sp + 0x170] = a2\n 67729: a2 = u8 [a0 + 0x14]\n 67732: u64 [sp + 0x1a0] = a2\n 67736: a2 = u8 [a0 + 0x15]\n 67739: u64 [sp + 0x180] = a2\n 67743: a2 = u8 [a0 + 0x16]\n 67746: u64 [sp + 0x198] = a2\n 67750: a2 = u8 [a0 + 0x17]\n 67753: u64 [sp + 0x190] = a2\n 67757: a2 = u8 [a0 + 0x8]\n 67760: u64 [sp + 0x1c8] = a2\n 67764: a2 = u8 [a0 + 0x9]\n 67767: u64 [sp + 0x1a8] = a2\n 67771: a2 = u8 [a0 + 0xa]\n 67774: u64 [sp + 0x1b8] = a2\n 67778: a2 = u8 [a0 + 0xb]\n 67781: u64 [sp + 0x1b0] = a2\n 67785: a2 = u8 [a0 + 0xc]\n 67788: u64 [sp + 0x210] = a2\n 67792: a2 = u8 [a0 + 0xd]\n 67795: u64 [sp + 0x1c0] = a2\n 67799: a2 = u8 [a0 + 0xe]\n 67802: u64 [sp + 0x208] = a2\n 67806: a2 = u8 [a0 + 0xf]\n 67809: u64 [sp + 0x1d0] = a2\n 67813: a2 = u8 [a0]\n 67815: u64 [sp + 0x250] = a2\n 67819: a2 = u8 [a0 + 0x1]\n 67822: u64 [sp + 0x218] = a2\n 67826: a2 = u8 [a0 + 0x2]\n 67829: u64 [sp + 0x248] = a2\n 67833: a2 = u8 [a0 + 0x3]\n 67836: u64 [sp + 0x220] = a2\n 67840: a1 = u8 [a0 + 0x4]\n 67843: u64 [sp + 0x268] = a1\n 67847: a2 = u8 [a0 + 0x5]\n 67850: u64 [sp + 0x258] = a2\n 67854: a2 = u8 [a0 + 0x6]\n 67857: t0 = u8 [a0 + 0x7]\n 67860: u64 [sp + 0x2f0] = t1\n 67864: a1 = t1\n 67866: a1 = 0 if a5 != 0\n 67868: u64 [sp + 0x388] = a1\n 67872: t2 = 0 if a5 != 0\n 67874: u64 [sp + 0x3a8] = t2\n 67878: ra = 0 if a5 != 0\n 67880: t1 = ra\n 67882: a4 = 0 if a5 != 0\n 67884: t2 = a4\n 67886: u64 [sp + 0x2c0] = s1\n 67890: u64 [sp + 0x260] = a2\n 67894: jump @322 if a5 != 0\n      : @314 (gas: 9)\n 67898: a3 = u64 [sp + 0x108]\n 67902: a5 = a3 ^ 0xff\n 67906: a4 = u64 [sp + 0x110]\n 67910: a5 = a5 | a4\n 67913: ra = u64 [sp + 0x118]\n 67917: a2 = u64 [sp + 0x100]\n 67921: s1 = a2 | ra\n 67924: a5 = a5 | s1\n 67927: jump @322 if a5 == 0\n      : @315 (gas: 291)\n 67931: u64 [sp + 0xf8] = t0\n 67935: a1 = a3 + 0x1\n 67938: u64 [sp + 0x3a8] = a1\n 67942: a0 = a1 <u 0x1\n 67945: a0 = a0 + a2\n 67948: u64 [sp + 0x380] = a0\n 67952: a0 = a0 | a1\n 67955: a0 = a0 <u 0x1\n 67958: a0 = a0 + a4\n 67961: u64 [sp + 0x370] = a0\n 67965: a0 = a0 <u a4\n 67968: a0 = a0 + ra\n 67971: u64 [sp + 0x378] = a0\n 67975: t0 = 0xff - a3\n 67979: a0 = u64 [sp + 0x308]\n 67983: a1 = sp + 0x1000\n 67987: u8 [a1 + 0xfffffffffffff800] = a0\n 67991: u8 [sp + 2047] = 0\n 67995: u8 [sp + 2046] = 0\n 67999: u8 [sp + 2045] = 0\n 68003: u8 [sp + 2044] = 0\n 68007: u8 [sp + 2043] = 0\n 68011: u8 [sp + 2042] = 0\n 68015: u8 [sp + 2041] = 0\n 68019: u8 [sp + 2040] = 0\n 68023: u8 [sp + 2039] = 0\n 68027: u8 [sp + 2038] = 0\n 68031: u8 [sp + 2037] = 0\n 68035: u8 [sp + 2036] = 0\n 68039: u8 [sp + 2035] = 0\n 68043: u8 [sp + 2034] = 0\n 68047: u8 [sp + 2033] = 0\n 68051: u8 [sp + 2032] = 0\n 68055: u8 [sp + 2031] = 0\n 68059: u8 [sp + 2030] = 0\n 68063: u8 [sp + 2029] = 0\n 68067: u8 [sp + 2028] = 0\n 68071: u8 [sp + 2027] = 0\n 68075: u8 [sp + 2026] = 0\n 68079: u8 [sp + 2025] = 0\n 68083: u8 [sp + 2024] = 0\n 68087: u8 [sp + 2023] = 0\n 68091: u8 [sp + 2022] = 0\n 68095: u8 [sp + 2021] = 0\n 68099: u8 [sp + 2020] = 0\n 68103: u8 [sp + 2019] = 0\n 68107: u8 [sp + 2018] = 0\n 68111: u8 [sp + 2017] = 0\n 68115: u8 [sp + 2016] = 0\n 68119: ra = u64 [sp + 0x300]\n 68123: a1 = sp + 0x1000\n 68127: u8 [a1 + 0xfffffffffffff808] = ra\n 68131: a1 = a0 >> 0x38\n 68134: u64 [sp + 0xf0] = a1\n 68138: a2 = sp + 0x1000\n 68142: u8 [a2 + 0xfffffffffffff807] = a1\n 68146: a1 = a0 >> 0x30\n 68149: u64 [sp + 0xe8] = a1\n 68153: a2 = sp + 0x1000\n 68157: u8 [a2 + 0xfffffffffffff806] = a1\n 68161: a1 = a0 >> 0x28\n 68164: u64 [sp + 0xe0] = a1\n 68168: a2 = sp + 0x1000\n 68172: u8 [a2 + 0xfffffffffffff805] = a1\n 68176: a1 = a0 >> 0x20\n 68179: u64 [sp + 0xd8] = a1\n 68183: a2 = sp + 0x1000\n 68187: u8 [a2 + 0xfffffffffffff804] = a1\n 68191: a1 = a0 >> 0x18\n 68194: u64 [sp + 0xd0] = a1\n 68198: a2 = sp + 0x1000\n 68202: u8 [a2 + 0xfffffffffffff803] = a1\n 68206: a1 = a0 >> 0x10\n 68209: u64 [sp + 0xc8] = a1\n 68213: a2 = sp + 0x1000\n 68217: u8 [a2 + 0xfffffffffffff802] = a1\n 68221: a0 = a0 >> 0x8\n 68224: u64 [sp + 0xc0] = a0\n 68228: a1 = sp + 0x1000\n 68232: u8 [a1 + 0xfffffffffffff801] = a0\n 68236: t2 = u64 [sp + 0x2f8]\n 68240: a0 = sp + 0x1000\n 68244: u8 [a0 + 0xfffffffffffff810] = t2\n 68248: a0 = ra >> 0x38\n 68251: u64 [sp + 0xb8] = a0\n 68255: a1 = sp + 0x1000\n 68259: u8 [a1 + 0xfffffffffffff80f] = a0\n 68263: a0 = ra >> 0x30\n 68266: u64 [sp + 0xb0] = a0\n 68270: a1 = sp + 0x1000\n 68274: u8 [a1 + 0xfffffffffffff80e] = a0\n 68278: a0 = ra >> 0x28\n 68281: u64 [sp + 0xa8] = a0\n 68285: a1 = sp + 0x1000\n 68289: u8 [a1 + 0xfffffffffffff80d] = a0\n 68293: a0 = ra >> 0x20\n 68296: u64 [sp + 0xa0] = a0\n 68300: a1 = sp + 0x1000\n 68304: u8 [a1 + 0xfffffffffffff80c] = a0\n 68308: a0 = ra >> 0x18\n 68311: u64 [sp + 0x98] = a0\n 68315: a1 = sp + 0x1000\n 68319: u8 [a1 + 0xfffffffffffff80b] = a0\n 68323: a0 = ra >> 0x10\n 68326: u64 [sp + 0x90] = a0\n 68330: a1 = sp + 0x1000\n 68334: u8 [a1 + 0xfffffffffffff80a] = a0\n 68338: a0 = ra >> 0x8\n 68341: u64 [sp + 0x88] = a0\n 68345: a1 = sp + 0x1000\n 68349: u8 [a1 + 0xfffffffffffff809] = a0\n 68353: a1 = u64 [sp + 0x2f0]\n 68357: a0 = sp + 0x1000\n 68361: u8 [a0 + 0xfffffffffffff818] = a1\n 68365: a0 = t2 >> 0x38\n 68368: u64 [sp + 0x80] = a0\n 68372: a2 = sp + 0x1000\n 68376: u8 [a2 + 0xfffffffffffff817] = a0\n 68380: a0 = t2 >> 0x30\n 68383: u64 [sp + 0x78] = a0\n 68386: a2 = sp + 0x1000\n 68390: u8 [a2 + 0xfffffffffffff816] = a0\n 68394: a0 = t2 >> 0x28\n 68397: u64 [sp + 0x70] = a0\n 68400: a2 = sp + 0x1000\n 68404: u8 [a2 + 0xfffffffffffff815] = a0\n 68408: a0 = t2 >> 0x20\n 68411: u64 [sp + 0x68] = a0\n 68414: a2 = sp + 0x1000\n 68418: u8 [a2 + 0xfffffffffffff814] = a0\n 68422: a0 = t2 >> 0x18\n 68425: u64 [sp + 0x60] = a0\n 68428: a2 = sp + 0x1000\n 68432: u8 [a2 + 0xfffffffffffff813] = a0\n 68436: a0 = t2 >> 0x10\n 68439: u64 [sp + 0x358] = a0\n 68443: a2 = sp + 0x1000\n 68447: u8 [a2 + 0xfffffffffffff812] = a0\n 68451: a0 = t2 >> 0x8\n 68454: u64 [sp + 0x350] = a0\n 68458: a2 = sp + 0x1000\n 68462: u8 [a2 + 0xfffffffffffff811] = a0\n 68466: a0 = a1 >> 0x38\n 68469: u64 [sp + 0x348] = a0\n 68473: a2 = sp + 0x1000\n 68477: u8 [a2 + 0xfffffffffffff81f] = a0\n 68481: a0 = a1 >> 0x30\n 68484: u64 [sp + 0x318] = a0\n 68488: a2 = sp + 0x1000\n 68492: u8 [a2 + 0xfffffffffffff81e] = a0\n 68496: a0 = a1 >> 0x28\n 68499: u64 [sp + 0x310] = a0\n 68503: a2 = sp + 0x1000\n 68507: u8 [a2 + 0xfffffffffffff81d] = a0\n 68511: a0 = a1 >> 0x20\n 68514: u64 [sp + 0x118] = a0\n 68518: a2 = sp + 0x1000\n 68522: u8 [a2 + 0xfffffffffffff81c] = a0\n 68526: a0 = a1 >> 0x18\n 68529: u64 [sp + 0x110] = a0\n 68533: a2 = sp + 0x1000\n 68537: u8 [a2 + 0xfffffffffffff81b] = a0\n 68541: a0 = a1 >> 0x10\n 68544: u64 [sp + 0x108] = a0\n 68548: a2 = sp + 0x1000\n 68552: u8 [a2 + 0xfffffffffffff81a] = a0\n 68556: a0 = a1 >> 0x8\n 68559: u64 [sp + 0x100] = a0\n 68563: a1 = sp + 0x1000\n 68567: u8 [a1 + 0xfffffffffffff819] = a0\n 68571: a1 = t0 << 0x38\n 68574: a1 = a1 >> 0x3b\n 68577: a0 = sp + 0x7ff\n 68581: a0 = a0 + 0x1\n 68584: a1 = a0 - a1\n 68587: a2 = u8 [a1 + 0x19]\n 68590: a3 = u8 [a1 + 0x18]\n 68593: a4 = u8 [a1 + 0x1a]\n 68596: a5 = u8 [a1 + 0x1b]\n 68599: a2 = a2 << 0x8\n 68602: a2 = a2 | a3\n 68605: a4 = a4 << 0x10\n 68608: a5 = a5 << 0x18\n 68611: a4 = a4 | a5\n 68614: a2 = a2 | a4\n 68617: a3 = u8 [a1 + 0x1d]\n 68620: a4 = u8 [a1 + 0x1c]\n 68623: a5 = u8 [a1 + 0x1e]\n 68626: s1 = u8 [a1 + 0x1f]\n 68629: a3 = a3 << 0x8\n 68632: a3 = a3 | a4\n 68635: a5 = a5 << 0x10\n 68638: s1 = s1 << 0x18\n 68641: a5 = a5 | s1\n 68644: a3 = a3 | a5\n 68647: a3 = a3 << 0x20\n 68650: a2 = a2 | a3\n 68653: a3 = u8 [a1 + 0x11]\n 68656: a4 = u8 [a1 + 0x10]\n 68659: a5 = u8 [a1 + 0x12]\n 68662: s1 = u8 [a1 + 0x13]\n 68665: a3 = a3 << 0x8\n 68668: a3 = a3 | a4\n 68671: a5 = a5 << 0x10\n 68674: s1 = s1 << 0x18\n 68677: a5 = a5 | s1\n 68680: a3 = a3 | a5\n 68683: a4 = u8 [a1 + 0x15]\n 68686: a5 = u8 [a1 + 0x14]\n 68689: s1 = u8 [a1 + 0x16]\n 68692: a0 = u8 [a1 + 0x17]\n 68695: a4 = a4 << 0x8\n 68698: a4 = a4 | a5\n 68701: s1 = s1 << 0x10\n 68704: a0 = a0 << 0x18\n 68707: a0 = a0 | s1\n 68710: a0 = a0 | a4\n 68713: a0 = a0 << 0x20\n 68716: t1 = a0 | a3\n 68719: a0 = t0 & 0x7\n 68722: a4 = a2 << a0\n 68725: a5 = t1 >> 0x1\n 68728: t0 = a0 ^ 0x3f\n 68731: a5 = a5 >> t0\n 68734: a4 = a4 | a5\n 68737: u64 [sp + 0x3a0] = a4\n 68741: a4 = u8 [a1 + 0x9]\n 68744: a5 = u8 [a1 + 0x8]\n 68747: s1 = u8 [a1 + 0xa]\n 68750: a2 = u8 [a1 + 0xb]\n 68753: a4 = a4 << 0x8\n 68756: a4 = a4 | a5\n 68759: s1 = s1 << 0x10\n 68762: a2 = a2 << 0x18\n 68765: a2 = a2 | s1\n 68768: a2 = a2 | a4\n 68771: a4 = u8 [a1 + 0xd]\n 68774: a5 = u8 [a1 + 0xc]\n 68777: s1 = u8 [a1 + 0xe]\n 68780: a3 = u8 [a1 + 0xf]\n 68783: a4 = a4 << 0x8\n 68786: a4 = a4 | a5\n 68789: s1 = s1 << 0x10\n 68792: a3 = a3 << 0x18\n 68795: a3 = a3 | s1\n 68798: a3 = a3 | a4\n 68801: a3 = a3 << 0x20\n 68804: a4 = a3 | a2\n 68807: a2 = a4 >> 0x1\n 68810: a3 = a0 ^ 0xffffffffffffffff\n 68813: a2 = a2 >> a3\n 68816: a3 = t1 << a0\n 68819: a2 = a2 | a3\n 68822: u64 [sp + 0x398] = a2\n 68826: a2 = u8 [a1 + 0x1]\n 68829: a3 = u8 [a1]\n 68831: a5 = u8 [a1 + 0x2]\n 68834: s1 = u8 [a1 + 0x3]\n 68837: a2 = a2 << 0x8\n 68840: a2 = a2 | a3\n 68843: a5 = a5 << 0x10\n 68846: s1 = s1 << 0x18\n 68849: a5 = a5 | s1\n 68852: a2 = a2 | a5\n 68855: a3 = u8 [a1 + 0x5]\n 68858: a5 = u8 [a1 + 0x4]\n 68861: s1 = u8 [a1 + 0x6]\n 68864: a1 = u8 [a1 + 0x7]\n 68867: a3 = a3 << 0x8\n 68870: a3 = a3 | a5\n 68873: a5 = u64 [sp + 0x378]\n 68877: s1 = s1 << 0x10\n 68880: a1 = a1 << 0x18\n 68883: a1 = a1 | s1\n 68886: a1 = a1 | a3\n 68889: a1 = a1 << 0x20\n 68892: a1 = a1 | a2\n 68895: a2 = a1 >> 0x1\n 68898: a2 = a2 >> t0\n 68901: s1 = u64 [sp + 0x370]\n 68905: a3 = a4 << a0\n 68908: a4 = u64 [sp + 0x380]\n 68912: a2 = a2 | a3\n 68915: u64 [sp + 0x388] = a2\n 68919: a2 = a4 | a5\n 68922: a3 = u64 [sp + 0x3a8]\n 68926: a3 = a3 | s1\n 68929: a2 = a2 | a3\n 68932: a0 = a1 << a0\n 68935: u64 [sp + 0x390] = a0\n 68939: jump @320 if a2 == 0\n      : @316 (gas: 219)\n 68943: u64 [sp + 872] = 0\n 68947: u64 [sp + 864] = 0\n 68951: a0 = u64 [sp + 0xf0]\n 68955: u8 [sp + 0x7a7] = a0\n 68959: a0 = u64 [sp + 0xe8]\n 68963: u8 [sp + 0x7a6] = a0\n 68967: a0 = u64 [sp + 0xe0]\n 68971: u8 [sp + 0x7a5] = a0\n 68975: a0 = u64 [sp + 0xd8]\n 68979: u8 [sp + 0x7a4] = a0\n 68983: a0 = u64 [sp + 0xd0]\n 68987: u8 [sp + 0x7a3] = a0\n 68991: a0 = u64 [sp + 0xc8]\n 68995: u8 [sp + 0x7a2] = a0\n 68999: a0 = u64 [sp + 0xc0]\n 69003: u8 [sp + 0x7a1] = a0\n 69007: a0 = u64 [sp + 0xb8]\n 69011: u8 [sp + 0x7af] = a0\n 69015: a0 = u64 [sp + 0xb0]\n 69019: u8 [sp + 0x7ae] = a0\n 69023: a0 = u64 [sp + 0xa8]\n 69027: u8 [sp + 0x7ad] = a0\n 69031: a0 = u64 [sp + 0xa0]\n 69035: u8 [sp + 0x7ac] = a0\n 69039: a0 = u64 [sp + 0x98]\n 69043: u8 [sp + 0x7ab] = a0\n 69047: a0 = u64 [sp + 0x90]\n 69051: u8 [sp + 0x7aa] = a0\n 69055: a0 = u64 [sp + 0x88]\n 69059: u8 [sp + 0x7a9] = a0\n 69063: a0 = u64 [sp + 0x80]\n 69067: u8 [sp + 0x7b7] = a0\n 69071: a0 = u64 [sp + 0x78]\n 69074: u8 [sp + 0x7b6] = a0\n 69078: a0 = u64 [sp + 0x70]\n 69081: u8 [sp + 0x7b5] = a0\n 69085: a0 = u64 [sp + 0x68]\n 69088: u8 [sp + 0x7b4] = a0\n 69092: a0 = u64 [sp + 0x60]\n 69095: u8 [sp + 0x7b3] = a0\n 69099: u8 [sp + 2015] = 0\n 69103: u8 [sp + 2014] = 0\n 69107: u8 [sp + 2013] = 0\n 69111: u8 [sp + 2012] = 0\n 69115: u8 [sp + 2011] = 0\n 69119: u8 [sp + 2010] = 0\n 69123: u8 [sp + 2009] = 0\n 69127: u8 [sp + 2008] = 0\n 69131: u8 [sp + 2007] = 0\n 69135: u8 [sp + 2006] = 0\n 69139: u8 [sp + 2005] = 0\n 69143: u8 [sp + 2004] = 0\n 69147: u8 [sp + 2003] = 0\n 69151: u8 [sp + 2002] = 0\n 69155: u8 [sp + 2001] = 0\n 69159: u8 [sp + 2000] = 0\n 69163: u8 [sp + 1999] = 0\n 69167: u8 [sp + 1998] = 0\n 69171: u8 [sp + 1997] = 0\n 69175: u8 [sp + 1996] = 0\n 69179: u8 [sp + 1995] = 0\n 69183: u8 [sp + 1994] = 0\n 69187: u8 [sp + 1993] = 0\n 69191: u8 [sp + 1992] = 0\n 69195: u8 [sp + 1991] = 0\n 69199: u8 [sp + 1990] = 0\n 69203: u8 [sp + 1989] = 0\n 69207: u8 [sp + 1988] = 0\n 69211: u8 [sp + 1987] = 0\n 69215: u8 [sp + 1986] = 0\n 69219: u8 [sp + 1985] = 0\n 69223: u8 [sp + 1984] = 0\n 69227: a0 = u64 [sp + 0x308]\n 69231: u8 [sp + 0x7a0] = a0\n 69235: u8 [sp + 0x7a8] = ra\n 69239: u8 [sp + 0x7b0] = t2\n 69243: a0 = u64 [sp + 0x2f0]\n 69247: u8 [sp + 0x7b8] = a0\n 69251: a0 = u64 [sp + 0x358]\n 69255: u8 [sp + 0x7b2] = a0\n 69259: a0 = u64 [sp + 0x350]\n 69263: u8 [sp + 0x7b1] = a0\n 69267: a0 = u64 [sp + 0x348]\n 69271: u8 [sp + 0x7bf] = a0\n 69275: a0 = u64 [sp + 0x318]\n 69279: u8 [sp + 0x7be] = a0\n 69283: a0 = u64 [sp + 0x310]\n 69287: u8 [sp + 0x7bd] = a0\n 69291: a0 = u64 [sp + 0x118]\n 69295: u8 [sp + 0x7bc] = a0\n 69299: a0 = u64 [sp + 0x110]\n 69303: u8 [sp + 0x7bb] = a0\n 69307: a0 = u64 [sp + 0x108]\n 69311: u8 [sp + 0x7ba] = a0\n 69315: a0 = u64 [sp + 0x100]\n 69319: u8 [sp + 0x7b9] = a0\n 69323: s1 = u64 [sp + 0x3a8]\n 69327: a0 = s1 << 0x38\n 69330: a0 = a0 >> 0x3b\n 69333: a1 = sp + 0x7a0\n 69337: a0 = a0 + a1\n 69340: a1 = u8 [a0 + 0x11]\n 69343: a2 = u8 [a0 + 0x10]\n 69346: a3 = u8 [a0 + 0x12]\n 69349: a4 = u8 [a0 + 0x13]\n 69352: a1 = a1 << 0x8\n 69355: a1 = a1 | a2\n 69358: a3 = a3 << 0x10\n 69361: a4 = a4 << 0x18\n 69364: a3 = a3 | a4\n 69367: a1 = a1 | a3\n 69370: a2 = u8 [a0 + 0x15]\n 69373: a3 = u8 [a0 + 0x14]\n 69376: a4 = u8 [a0 + 0x16]\n 69379: a5 = u8 [a0 + 0x17]\n 69382: a2 = a2 << 0x8\n 69385: a2 = a2 | a3\n 69388: a4 = a4 << 0x10\n 69391: a5 = a5 << 0x18\n 69394: a4 = a4 | a5\n 69397: a2 = a2 | a4\n 69400: a2 = a2 << 0x20\n 69403: t0 = a2 | a1\n 69406: a3 = s1 & 0x7\n 69409: t1 = t0 >> a3\n 69412: a2 = u8 [a0 + 0x19]\n 69415: a4 = u8 [a0 + 0x18]\n 69418: a5 = u8 [a0 + 0x1a]\n 69421: s1 = u8 [a0 + 0x1b]\n 69424: a2 = a2 << 0x8\n 69427: a2 = a2 | a4\n 69430: a5 = a5 << 0x10\n 69433: s1 = s1 << 0x18\n 69436: a5 = a5 | s1\n 69439: a2 = a2 | a5\n 69442: a4 = u8 [a0 + 0x1d]\n 69445: a5 = u8 [a0 + 0x1c]\n 69448: s1 = u8 [a0 + 0x1e]\n 69451: a1 = u8 [a0 + 0x1f]\n 69454: a4 = a4 << 0x8\n 69457: a4 = a4 | a5\n 69460: s1 = s1 << 0x10\n 69463: a1 = a1 << 0x18\n 69466: a1 = a1 | s1\n 69469: a1 = a1 | a4\n 69472: a1 = a1 << 0x20\n 69475: ra = a1 | a2\n 69478: a1 = ra << 0x1\n 69481: t2 = a3 ^ 0x3f\n 69484: a1 = a1 << t2\n 69487: a1 = t1 | a1\n 69490: u64 [sp + 0x358] = a1\n 69494: a1 = u8 [a0 + 0x9]\n 69497: a2 = u8 [a0 + 0x8]\n 69500: a4 = u8 [a0 + 0xa]\n 69503: a5 = u8 [a0 + 0xb]\n 69506: a1 = a1 << 0x8\n 69509: a1 = a1 | a2\n 69512: a4 = a4 << 0x10\n 69515: a5 = a5 << 0x18\n 69518: a4 = a4 | a5\n 69521: a1 = a1 | a4\n 69524: a2 = u8 [a0 + 0xd]\n 69527: a4 = u8 [a0 + 0xc]\n 69530: a5 = u8 [a0 + 0xe]\n 69533: s1 = u8 [a0 + 0xf]\n 69536: a2 = a2 << 0x8\n 69539: a2 = a2 | a4\n 69542: a5 = a5 << 0x10\n 69545: s1 = s1 << 0x18\n 69548: a5 = a5 | s1\n 69551: a2 = a2 | a5\n 69554: a2 = a2 << 0x20\n 69557: a2 = a2 | a1\n 69560: a1 = a2 >> a3\n 69563: t0 = t0 << 0x1\n 69566: a4 = a3 ^ 0xffffffffffffffff\n 69569: a4 = t0 << a4\n 69572: t1 = a1 | a4\n 69575: a1 = u8 [a0 + 0x1]\n 69578: a4 = u8 [a0]\n 69580: a5 = u8 [a0 + 0x2]\n 69583: s1 = u8 [a0 + 0x3]\n 69586: a1 = a1 << 0x8\n 69589: a1 = a1 | a4\n 69592: a5 = a5 << 0x10\n 69595: s1 = s1 << 0x18\n 69598: a5 = a5 | s1\n 69601: a1 = a1 | a5\n 69604: a4 = u8 [a0 + 0x5]\n 69607: a5 = u8 [a0 + 0x4]\n 69610: s1 = u8 [a0 + 0x6]\n 69613: a0 = u8 [a0 + 0x7]\n 69616: a4 = a4 << 0x8\n 69619: a4 = a4 | a5\n 69622: s1 = s1 << 0x10\n 69625: a0 = a0 << 0x18\n 69628: a0 = a0 | s1\n 69631: a0 = a0 | a4\n 69634: a0 = a0 << 0x20\n 69637: a0 = a0 | a1\n 69640: a0 = a0 >> a3\n 69643: a2 = a2 << 0x1\n 69646: s1 = a2 << t2\n 69649: s1 = s1 | a0\n 69652: ra = ra >> a3\n 69655: a0 = u64 [sp + 0x3b8]\n 69659: a1 = a0 <u 0x1\n 69662: a2 = u64 [sp + 0x3b0]\n 69666: a1 = a2 - a1\n 69669: u64 [sp + 0x348] = a1\n 69673: a1 = a0 | a2\n 69676: a1 = a1 >u 0\n 69678: a1 = a1 + 0xffffffffffffffff\n 69681: u64 [sp + 0x318] = a1\n 69685: a0 = a0 + 0xffffffffffffffff\n 69688: u64 [sp + 0x310] = a0\n 69692: a4 = u64 [sp + 0x388]\n 69696: fallthrough\n      : @317 (gas: 90)\n 69697: u64 [sp + 848] = 0\n 69701: a2 = s1 >> 0x3f\n 69704: a3 = t1 << 0x1\n 69707: t2 = a3 | a2\n 69710: s1 = s1 << 0x1\n 69713: a5 = u64 [sp + 0x3a0]\n 69717: a2 = a5 >> 0x3f\n 69720: a2 = a2 | s1\n 69723: a0 = u64 [sp + 0x348]\n 69727: a3 = a0 ^ t2\n 69730: s1 = a0 <u t2\n 69733: a0 = u64 [sp + 0x310]\n 69737: t0 = a0 <u a2\n 69740: t0 = s1 if a3 != 0\n 69743: a0 = ra << 0x1\n 69746: a1 = u64 [sp + 0x358]\n 69750: a3 = a1 >> 0x3f\n 69753: ra = a0 | a3\n 69756: a3 = t1 >> 0x3f\n 69759: a1 = a1 << 0x1\n 69762: t1 = a1 | a3\n 69765: a1 = a5 << 0x1\n 69768: a0 = u64 [sp + 0x398]\n 69772: s1 = a0 >> 0x3f\n 69775: a1 = a1 | s1\n 69778: s1 = a0 << 0x1\n 69781: a5 = a4 >> 0x3f\n 69784: a5 = a5 | s1\n 69787: s1 = a4 << 0x1\n 69790: a0 = u64 [sp + 0x390]\n 69794: a4 = a0 >> 0x3f\n 69797: a4 = a4 | s1\n 69800: s1 = a0 << 0x1\n 69803: a3 = u64 [sp + 0x368]\n 69807: a3 = a3 | s1\n 69810: u64 [sp + 0x390] = a3\n 69814: a3 = u64 [sp + 0x360]\n 69818: a4 = a4 | a3\n 69821: u64 [sp + 0x388] = a4\n 69825: a5 = a5 | a3\n 69828: u64 [sp + 0x398] = a5\n 69832: a1 = a1 | a3\n 69835: u64 [sp + 0x3a0] = a1\n 69839: a0 = u64 [sp + 0x318]\n 69843: a1 = a0 - t1\n 69846: a1 = a1 <u t0\n 69849: a4 = a0 <u t1\n 69852: a5 = a0 - ra\n 69855: a5 = a5 - a4\n 69858: a5 = a5 - a1\n 69861: a5 = a5 >>a 0x3f\n 69864: a4 = u64 [sp + 0x3b8]\n 69868: a4 = a4 & a5\n 69871: s1 = u64 [sp + 0x3b0]\n 69875: s1 = s1 & a5\n 69878: t0 = t2 ^ s1\n 69881: a1 = t2 <u s1\n 69884: a3 = a2 <u a4\n 69887: a1 = a3 if t0 == 0\n 69890: a0 = t1 - a1\n 69893: u64 [sp + 0x358] = a0\n 69897: a1 = t1 <u a1\n 69900: ra = ra - a1\n 69903: a1 = t2 - s1\n 69906: t1 = a1 - a3\n 69909: s1 = a2 - a4\n 69912: a4 = u64 [sp + 0x3a8]\n 69916: a0 = u64 [sp + 0x380]\n 69920: a1 = a4 | a0\n 69923: a1 = a1 <u 0x1\n 69926: a3 = u64 [sp + 0x370]\n 69930: a2 = a3 <u a1\n 69933: a1 = a3 - a1\n 69936: a3 = a4 <u 0x1\n 69939: a0 = a0 - a3\n 69942: a3 = u64 [sp + 0x378]\n 69946: a3 = a3 - a2\n 69949: a4 = a4 + 0xffffffffffffffff\n 69952: u64 [sp + 0x380] = a0\n 69956: u64 [sp + 0x378] = a3\n 69960: a2 = a0 | a3\n 69963: u64 [sp + 0x3a8] = a4\n 69967: a3 = a4 | a1\n 69970: a4 = u64 [sp + 0x388]\n 69974: a2 = a2 | a3\n 69977: a5 = a5 & 0x1\n 69980: u64 [sp + 0x368] = a5\n 69984: u64 [sp + 0x370] = a1\n 69988: u64 [sp + 864] = 0\n 69992: jump @317 if a2 != 0\n      : @318 (gas: 1)\n 69996: jump @321\n      : @319 (gas: 5)\n 69998: u64 [sp + 704] = 0xffffffffffffffff\n 70003: u64 [sp + 720] = 0xffffffffffffffff\n 70008: u64 [sp + 752] = 0xffffffffffffffff\n 70013: u64 [sp + 744] = 0xffffffffffffffff\n 70018: jump @340\n      : @320 (gas: 4)\n 70021: u64 [sp + 872] = 0\n 70025: u64 [sp + 848] = 0\n 70029: a4 = u64 [sp + 0x388]\n 70033: fallthrough\n      : @321 (gas: 23)\n 70034: a2 = u64 [sp + 0x398]\n 70038: a0 = a2 >> 0x3f\n 70041: a1 = u64 [sp + 0x3a0]\n 70045: a1 = a1 << 0x1\n 70048: a1 = a1 | a0\n 70051: a0 = a4 >> 0x3f\n 70054: a2 = a2 << 0x1\n 70057: a2 = a2 | a0\n 70060: a0 = u64 [sp + 0x390]\n 70064: a3 = a0 >> 0x3f\n 70067: a4 = a4 << 0x1\n 70070: a0 = a0 << 0x1\n 70073: a5 = u64 [sp + 0x368]\n 70077: t2 = a5 | a0\n 70080: a5 = u64 [sp + 0x350]\n 70084: a3 = a3 | a5\n 70087: t1 = a3 | a4\n 70090: a0 = a5 | a2\n 70093: u64 [sp + 0x3a8] = a0\n 70097: a0 = a5 | a1\n 70100: u64 [sp + 0x388] = a0\n 70104: t0 = u64 [sp + 0xf8]\n 70108: fallthrough\n      : @322 (gas: 180)\n 70109: a1 = u64 [sp + 0x120]\n 70113: a1 = a1 << 0x8\n 70116: a2 = u64 [sp + 0x148]\n 70120: a1 = a1 | a2\n 70123: a3 = u64 [sp + 0x130]\n 70127: a3 = a3 << 0x10\n 70130: a4 = u64 [sp + 0x128]\n 70134: a4 = a4 << 0x18\n 70137: a3 = a3 | a4\n 70140: a1 = a1 | a3\n 70143: a3 = u64 [sp + 0x140]\n 70147: a3 = a3 << 0x8\n 70150: a2 = u64 [sp + 0x160]\n 70154: a3 = a3 | a2\n 70157: a4 = u64 [sp + 0x158]\n 70161: a4 = a4 << 0x10\n 70164: a5 = u64 [sp + 0x150]\n 70168: a5 = a5 << 0x18\n 70171: a4 = a4 | a5\n 70174: a3 = a3 | a4\n 70177: a3 = a3 << 0x20\n 70180: a1 = a1 | a3\n 70183: a3 = u64 [sp + 0x168]\n 70187: a3 = a3 << 0x8\n 70190: a2 = u64 [sp + 0x188]\n 70194: a3 = a3 | a2\n 70197: a4 = u64 [sp + 0x178]\n 70201: a4 = a4 << 0x10\n 70204: a5 = u64 [sp + 0x170]\n 70208: a5 = a5 << 0x18\n 70211: a4 = a4 | a5\n 70214: a3 = a3 | a4\n 70217: a4 = u64 [sp + 0x180]\n 70221: a4 = a4 << 0x8\n 70224: a2 = u64 [sp + 0x1a0]\n 70228: a4 = a4 | a2\n 70231: a5 = u64 [sp + 0x198]\n 70235: a5 = a5 << 0x10\n 70238: s1 = u64 [sp + 0x190]\n 70242: s1 = s1 << 0x18\n 70245: a5 = a5 | s1\n 70248: a4 = a4 | a5\n 70251: a4 = a4 << 0x20\n 70254: a3 = a3 | a4\n 70257: a2 = u64 [sp + 0x200]\n 70261: a1 = a1 << a2\n 70264: a0 = a2\n 70266: a4 = a3 >> 0x1\n 70269: a2 = u64 [sp + 0x1f8]\n 70273: a4 = a4 >> a2\n 70276: a1 = a1 | a4\n 70279: u64 [sp + 0x380] = a1\n 70283: a1 = u64 [sp + 0x1a8]\n 70287: a1 = a1 << 0x8\n 70290: a4 = u64 [sp + 0x1c8]\n 70294: a1 = a1 | a4\n 70297: a4 = u64 [sp + 0x1b8]\n 70301: a4 = a4 << 0x10\n 70304: a5 = u64 [sp + 0x1b0]\n 70308: a5 = a5 << 0x18\n 70311: a4 = a4 | a5\n 70314: a1 = a1 | a4\n 70317: a4 = u64 [sp + 0x1c0]\n 70321: a4 = a4 << 0x8\n 70324: a5 = u64 [sp + 0x210]\n 70328: a4 = a4 | a5\n 70331: a5 = u64 [sp + 0x208]\n 70335: a5 = a5 << 0x10\n 70338: s1 = u64 [sp + 0x1d0]\n 70342: s1 = s1 << 0x18\n 70345: a5 = a5 | s1\n 70348: a4 = a4 | a5\n 70351: a4 = a4 << 0x20\n 70354: a1 = a1 | a4\n 70357: a3 = a3 << a0\n 70360: a4 = a1 >> 0x1\n 70363: a5 = u64 [sp + 0x1e8]\n 70367: a4 = a4 >> a5\n 70370: a3 = a3 | a4\n 70373: u64 [sp + 0x378] = a3\n 70377: a3 = u64 [sp + 0x218]\n 70381: a3 = a3 << 0x8\n 70384: a4 = u64 [sp + 0x250]\n 70388: a3 = a3 | a4\n 70391: a4 = u64 [sp + 0x248]\n 70395: a4 = a4 << 0x10\n 70398: a5 = u64 [sp + 0x220]\n 70402: a5 = a5 << 0x18\n 70405: a4 = a4 | a5\n 70408: a1 = a1 << a0\n 70411: a3 = a3 | a4\n 70414: a4 = u64 [sp + 0x258]\n 70418: a4 = a4 << 0x8\n 70421: a0 = u64 [sp + 0x268]\n 70425: a4 = a4 | a0\n 70428: a5 = u64 [sp + 0x260]\n 70432: a5 = a5 << 0x10\n 70435: s1 = t0 << 0x18\n 70438: a5 = a5 | s1\n 70441: a4 = a4 | a5\n 70444: a4 = a4 << 0x20\n 70447: a3 = a3 | a4\n 70450: u64 [sp + 0x390] = a3\n 70454: a3 = a3 >> 0x1\n 70457: a3 = a3 >> a2\n 70460: a1 = a1 | a3\n 70463: u64 [sp + 0x268] = a1\n 70467: a5 = u64 [sp + 0x3b8]\n 70471: ra = t2\n 70473: a1 = t2 mulhu a5\n 70476: a2 = t1\n 70478: a3 = t1 * a5\n 70481: a1 = a1 + a3\n 70484: a3 = a1 <u a3\n 70487: a4 = t1 mulhu a5\n 70490: s1 = a4 + a3\n 70493: a0 = u64 [sp + 0x3b0]\n 70497: a3 = t2 * a0\n 70500: t1 = a3 + a1\n 70503: a1 = t1 <u a3\n 70506: a3 = t2 mulhu a0\n 70509: a1 = a1 + a3\n 70512: a4 = s1 + a1\n 70515: a3 = a2 * a0\n 70518: a1 = a3 + a4\n 70521: a3 = a1 <u a3\n 70524: a4 = a4 <u s1\n 70527: s1 = a2 mulhu a0\n 70530: a4 = a4 + s1\n 70533: a3 = a3 + a4\n 70536: t0 = u64 [sp + 0x3a8]\n 70540: a4 = a5 mulhu t0\n 70543: t2 = u64 [sp + 0x388]\n 70547: s1 = a5 * t2\n 70550: a4 = a4 + s1\n 70553: s1 = a0 * t0\n 70556: a4 = a4 + s1\n 70559: s1 = a5 * t0\n 70562: s1 = s1 + a1\n 70565: a1 = s1 <u a1\n 70568: a3 = a3 + a4\n 70571: a3 = a3 + a1\n 70574: a1 = ra * a5\n 70577: u64 [sp + 0x370] = a1\n 70581: a0 = u64 [sp + 0x2f0]\n 70585: a0 = a0 - a3\n 70588: u64 [sp + 0x3a0] = a0\n 70592: a0 = u64 [sp + 0x300]\n 70596: u64 [sp + 0x368] = t1\n 70600: a3 = a0 ^ t1\n 70603: u64 [sp + 0x398] = a3\n 70607: a4 = a0 <u t1\n 70610: a3 = u64 [sp + 0x308]\n 70614: a5 = a3 <u a1\n 70617: a1 = u64 [sp + 0x398]\n 70621: a4 = a5 if a1 == 0\n 70624: t1 = u64 [sp + 0x2f8]\n 70628: a1 = t1 <u s1\n 70631: s1 = t1 - s1\n 70634: t1 = s1 <u a4\n 70637: a1 = a1 + t1\n 70640: a3 = u64 [sp + 0x3a0]\n 70644: a1 = a3 - a1\n 70647: u64 [sp + 0x3a0] = a1\n 70651: a1 = ra\n 70653: s1 = s1 - a4\n 70656: u64 [sp + 0x398] = s1\n 70660: a3 = u64 [sp + 0x368]\n 70664: a4 = a0 - a3\n 70667: ra = a4 - a5\n 70670: a4 = t0\n 70672: a0 = u64 [sp + 0x200]\n 70676: a5 = u64 [sp + 0x390]\n 70680: a0 = a5 << a0\n 70683: u64 [sp + 0x2f8] = a0\n 70687: a0 = a2\n 70689: a2 = u64 [sp + 0x370]\n 70693: a3 = u64 [sp + 0x308]\n 70697: t0 = a3 - a2\n 70700: jump @324\n      : @323 (gas: 37)\n 70702: a5 = u64 [sp + 0x3b8]\n 70706: a5 = a5 + t0\n 70709: a0 = a5 <u t0\n 70712: a3 = u64 [sp + 0x3b0]\n 70716: a3 = a3 + ra\n 70719: a3 = a3 + a0\n 70722: a2 = a3 ^ ra\n 70725: a4 = a3 <u ra\n 70728: a4 = a0 if a2 == 0\n 70731: a0 = a3 + 0x1\n 70734: a2 = a3 <u 0xffffffffffffffff\n 70737: t1 = a5 <u 0xffffffffffffffff\n 70740: t1 = a2 if a0 != 0\n 70743: a0 = a1 <u 0x1\n 70746: a2 = s1\n 70748: s1 = s1 - a0\n 70751: a0 = a1 | a2\n 70754: a0 = a0 <u 0x1\n 70757: a2 = u64 [sp + 0x3a8]\n 70761: ra = a2 <u a0\n 70764: t0 = a2 - a0\n 70767: t2 = t2 - ra\n 70770: a0 = u64 [sp + 0x398]\n 70774: a2 = a0 + a4\n 70777: a4 = a2 <u a0\n 70780: a0 = u64 [sp + 0x3a0]\n 70784: a0 = a0 + a4\n 70787: u64 [sp + 0x3a0] = a0\n 70791: a4 = a2 | a0\n 70794: t1 = 0 if a4 != 0\n 70796: a1 = a1 + 0xffffffffffffffff\n 70799: a0 = s1\n 70801: a4 = t0\n 70803: t0 = a5\n 70805: ra = a3\n 70807: u64 [sp + 0x398] = a2\n 70811: jump @326 if t1 == 0\n      : @324 (gas: 12)\n 70815: u64 [sp + 0x3a8] = a4\n 70819: a3 = a4 >u 0\n 70821: a5 = t2 >u 0\n 70823: a5 = a3 if t2 == 0\n 70826: a3 = a0 + 0x1\n 70829: s1 = a0\n 70831: a0 = a1 + 0x1\n 70834: a0 = a0 <u 0x1\n 70837: a0 = 0 if a3 != 0\n 70839: a3 = a4 | t2\n 70842: a0 = a5 if a3 != 0\n 70845: jump @323 if a0 != 0\n      : @325 (gas: 56)\n 70849: a4 = u64 [sp + 0x338]\n 70853: a0 = a1 mulhu a4\n 70856: a3 = s1 * a4\n 70859: a0 = a0 + a3\n 70862: a3 = a0 <u a3\n 70865: a5 = s1 mulhu a4\n 70868: u64 [sp + 0x390] = s1\n 70872: s1 = a5 + a3\n 70875: t1 = a1\n 70877: a1 = u64 [sp + 0x340]\n 70881: a5 = t1 * a1\n 70884: u64 [sp + 0x388] = t2\n 70888: t2 = a5 + a0\n 70891: a5 = t2 <u a5\n 70894: a2 = t1 mulhu a1\n 70897: a2 = a2 + a5\n 70900: a3 = s1 + a2\n 70903: a0 = u64 [sp + 0x390]\n 70907: a5 = a0 * a1\n 70910: a2 = a5 + a3\n 70913: a5 = a2 <u a5\n 70916: a3 = a3 <u s1\n 70919: a0 = u64 [sp + 0x390]\n 70923: s1 = a0 mulhu a1\n 70926: a3 = a3 + s1\n 70929: a3 = a3 + a5\n 70932: a0 = u64 [sp + 0x3a8]\n 70936: a5 = a4 mulhu a0\n 70939: s1 = u64 [sp + 0x388]\n 70943: s1 = a4 * s1\n 70946: a5 = a5 + s1\n 70949: s1 = a1 * a0\n 70952: a1 = t1\n 70954: a5 = a5 + s1\n 70957: s1 = a4 * a0\n 70960: s1 = s1 + a2\n 70963: a2 = s1 <u a2\n 70966: a3 = a3 + a5\n 70969: a2 = a2 + a3\n 70972: a3 = t1 * a4\n 70975: a4 = u64 [sp + 0x380]\n 70979: a5 = t2 ^ a4\n 70982: a0 = a4 <u t2\n 70985: t2 = u64 [sp + 0x388]\n 70989: a4 = u64 [sp + 0x378]\n 70993: a3 = a4 <u a3\n 70996: a3 = a0 if a5 != 0\n 70999: a0 = a2 ^ ra\n 71002: a2 = ra <u a2\n 71005: a5 = t0 <u s1\n 71008: a5 = a2 if a0 != 0\n 71011: s1 = s1 ^ t0\n 71014: a0 = a0 | s1\n 71017: s1 = u64 [sp + 0x390]\n 71021: a3 = a5 if a0 != 0\n 71024: jump @323 if a3 != 0\n      : @326 (gas: 110)\n 71028: a2 = s1 & 0xffffffffffffffff\n 71031: a1 = a1 & 0xffffffffffffffff\n 71034: t1 = u64 [sp + 0x338]\n 71038: a0 = a1 mulhu t1\n 71041: a3 = a2 * t1\n 71044: a0 = a0 + a3\n 71047: a3 = a0 <u a3\n 71050: a4 = a2 mulhu t1\n 71053: t0 = a4 + a3\n 71056: a3 = u64 [sp + 0x340]\n 71060: a4 = a1 * a3\n 71063: ra = a4 + a0\n 71066: a4 = ra <u a4\n 71069: a5 = a1 mulhu a3\n 71072: a4 = a4 + a5\n 71075: a4 = a4 + t0\n 71078: t0 = a4 <u t0\n 71081: a5 = a2 mulhu a3\n 71084: t0 = t0 + a5\n 71087: a5 = a2 * a3\n 71090: a4 = a4 + a5\n 71093: a5 = a4 <u a5\n 71096: t0 = t0 + a5\n 71099: a3 = u64 [sp + 0x3b8]\n 71103: a2 = a3 * a2\n 71106: a5 = a3 mulhu a1\n 71109: a2 = a2 + a5\n 71112: a0 = u64 [sp + 0x3b0]\n 71116: a5 = a0 * a1\n 71119: a2 = a2 + a5\n 71122: a2 = a2 + t0\n 71125: a3 = a3 * a1\n 71128: a3 = a3 + a4\n 71131: a4 = a3 <u a4\n 71134: a2 = a2 + a4\n 71137: a1 = a1 * t1\n 71140: a4 = u64 [sp + 0x300]\n 71144: t0 = a4 - a2\n 71147: a0 = u64 [sp + 0x380]\n 71151: a2 = a0 ^ ra\n 71154: a5 = a0 <u ra\n 71157: a4 = u64 [sp + 0x378]\n 71161: s1 = a4 <u a1\n 71164: a5 = s1 if a2 == 0\n 71167: a2 = u64 [sp + 0x308]\n 71171: t1 = a2 <u a3\n 71174: a3 = a2 - a3\n 71177: a2 = a3 <u a5\n 71180: a2 = a2 + t1\n 71183: t2 = t0 - a2\n 71186: t0 = a3 - a5\n 71189: a0 = a0 - ra\n 71192: ra = a0 - s1\n 71195: u64 [sp + 0x318] = ra\n 71199: t1 = a4 - a1\n 71202: a1 = clz t2\n 71204: a0 = clz t0\n 71206: a0 = a0 + 0x40\n 71209: a0 = a1 if t2 != 0\n 71212: a1 = t0 | t2\n 71215: a2 = clz ra\n 71217: a3 = clz t1\n 71219: a3 = a3 + 0x40\n 71222: a3 = a2 if ra != 0\n 71225: a2 = a3 + 0x80\n 71229: a0 = a2 if a1 == 0\n 71232: a2 = a2 <u a3\n 71235: a2 = 0 if a1 != 0\n 71237: a4 = u64 [sp + 0x2d0]\n 71241: a1 = a4 <u a0\n 71244: s1 = u64 [sp + 0x2e8]\n 71248: a3 = s1 ^ a2\n 71251: a5 = s1 <u a2\n 71254: a5 = a1 if a3 == 0\n 71257: a4 = a4 - a0\n 71260: a3 = a5 <u 0x1\n 71263: a3 = a3 + 0xffffffffffffffff\n 71266: s1 = s1 - a2\n 71269: s1 = s1 - a1\n 71272: a0 = s1 >u 0\n 71274: u64 [sp + 0x3a0] = a4\n 71278: a1 = a4 <u 0x100\n 71282: a1 = a1 ^ 0x1\n 71285: a1 = a0 if s1 != 0\n 71288: a4 = -a5\n 71290: a0 = a4 >u 0\n 71292: a2 = a3 >u 0\n 71294: u64 [sp + 0x390] = a3\n 71298: a2 = a0 if a3 == 0\n 71301: a2 = a1 if a5 == 0\n 71304: a0 = ra | t2\n 71307: a1 = t1 | t0\n 71310: a0 = a0 | a1\n 71313: a0 = a0 <u 0x1\n 71316: a1 = u64 [sp + 0x2c0]\n 71320: a0 = a0 | a1\n 71323: a1 = t1\n 71325: a5 = a0 | a2\n 71328: u64 [sp + 0x308] = t2\n 71332: u64 [sp + 0x310] = t0\n 71336: t2 = 0 if a5 != 0\n 71338: u64 [sp + 0x388] = t2\n 71342: t0 = 0 if a5 != 0\n 71344: u64 [sp + 0x398] = t0\n 71348: t1 = ra\n 71350: t1 = 0 if a5 != 0\n 71352: ra = a1\n 71354: ra = 0 if a5 != 0\n 71356: u64 [sp + 0x348] = a1\n 71360: jump @334 if a5 != 0\n      : @327 (gas: 7)\n 71364: a1 = u64 [sp + 0x3a0]\n 71368: a5 = a1 ^ 0xff\n 71372: a5 = a5 | a4\n 71375: t0 = u64 [sp + 0x390]\n 71379: a3 = s1 | t0\n 71382: a3 = a3 | a5\n 71385: jump @334 if a3 == 0\n      : @328 (gas: 257)\n 71389: a2 = a1 + 0x1\n 71392: u64 [sp + 0x3a8] = a2\n 71396: a0 = a2 <u 0x1\n 71399: a0 = a0 + s1\n 71402: u64 [sp + 0x380] = a0\n 71406: a0 = a0 | a2\n 71409: a0 = a0 <u 0x1\n 71412: a0 = a0 + a4\n 71415: u64 [sp + 0x378] = a0\n 71419: a0 = a0 <u a4\n 71422: a0 = a0 + t0\n 71425: u64 [sp + 0x388] = a0\n 71429: t0 = 0xff - a1\n 71433: a1 = u64 [sp + 0x348]\n 71437: u8 [sp + 0x780] = a1\n 71441: u8 [sp + 1919] = 0\n 71445: u8 [sp + 1918] = 0\n 71449: u8 [sp + 1917] = 0\n 71453: u8 [sp + 1916] = 0\n 71457: u8 [sp + 1915] = 0\n 71461: u8 [sp + 1914] = 0\n 71465: u8 [sp + 1913] = 0\n 71469: u8 [sp + 1912] = 0\n 71473: u8 [sp + 1911] = 0\n 71477: u8 [sp + 1910] = 0\n 71481: u8 [sp + 1909] = 0\n 71485: u8 [sp + 1908] = 0\n 71489: u8 [sp + 1907] = 0\n 71493: u8 [sp + 1906] = 0\n 71497: u8 [sp + 1905] = 0\n 71501: u8 [sp + 1904] = 0\n 71505: u8 [sp + 1903] = 0\n 71509: u8 [sp + 1902] = 0\n 71513: u8 [sp + 1901] = 0\n 71517: u8 [sp + 1900] = 0\n 71521: u8 [sp + 1899] = 0\n 71525: u8 [sp + 1898] = 0\n 71529: u8 [sp + 1897] = 0\n 71533: u8 [sp + 1896] = 0\n 71537: u8 [sp + 1895] = 0\n 71541: u8 [sp + 1894] = 0\n 71545: u8 [sp + 1893] = 0\n 71549: u8 [sp + 1892] = 0\n 71553: u8 [sp + 1891] = 0\n 71557: u8 [sp + 1890] = 0\n 71561: u8 [sp + 1889] = 0\n 71565: u8 [sp + 1888] = 0\n 71569: a0 = u64 [sp + 0x318]\n 71573: u8 [sp + 0x788] = a0\n 71577: a2 = a1 >> 0x38\n 71580: u64 [sp + 0x258] = a2\n 71584: u8 [sp + 0x787] = a2\n 71588: a2 = a1 >> 0x30\n 71591: u64 [sp + 0x250] = a2\n 71595: u8 [sp + 0x786] = a2\n 71599: a2 = a1 >> 0x28\n 71602: u64 [sp + 0x248] = a2\n 71606: u8 [sp + 0x785] = a2\n 71610: a2 = a1 >> 0x20\n 71613: u64 [sp + 0x220] = a2\n 71617: u8 [sp + 0x784] = a2\n 71621: a2 = a1 >> 0x18\n 71624: u64 [sp + 0x218] = a2\n 71628: u8 [sp + 0x783] = a2\n 71632: a2 = a1 >> 0x10\n 71635: u64 [sp + 0x210] = a2\n 71639: u8 [sp + 0x782] = a2\n 71643: a2 = a1 >> 0x8\n 71646: u64 [sp + 0x208] = a2\n 71650: u8 [sp + 0x781] = a2\n 71654: t2 = u64 [sp + 0x310]\n 71658: u8 [sp + 0x790] = t2\n 71662: a2 = a0 >> 0x38\n 71665: u64 [sp + 0x1d0] = a2\n 71669: u8 [sp + 0x78f] = a2\n 71673: a2 = a0 >> 0x30\n 71676: u64 [sp + 0x1c8] = a2\n 71680: u8 [sp + 0x78e] = a2\n 71684: a2 = a0 >> 0x28\n 71687: u64 [sp + 0x1c0] = a2\n 71691: u8 [sp + 0x78d] = a2\n 71695: a2 = a0 >> 0x20\n 71698: u64 [sp + 0x1b8] = a2\n 71702: u8 [sp + 0x78c] = a2\n 71706: a2 = a0 >> 0x18\n 71709: u64 [sp + 0x1b0] = a2\n 71713: u8 [sp + 0x78b] = a2\n 71717: a2 = a0 >> 0x10\n 71720: u64 [sp + 0x1a8] = a2\n 71724: u8 [sp + 0x78a] = a2\n 71728: a0 = a0 >> 0x8\n 71731: u64 [sp + 0x1a0] = a0\n 71735: u8 [sp + 0x789] = a0\n 71739: ra = u64 [sp + 0x308]\n 71743: u8 [sp + 0x798] = ra\n 71747: a0 = t2 >> 0x38\n 71750: u64 [sp + 0x198] = a0\n 71754: u8 [sp + 0x797] = a0\n 71758: a0 = t2 >> 0x30\n 71761: u64 [sp + 0x190] = a0\n 71765: u8 [sp + 0x796] = a0\n 71769: a0 = t2 >> 0x28\n 71772: u64 [sp + 0x188] = a0\n 71776: u8 [sp + 0x795] = a0\n 71780: a0 = t2 >> 0x20\n 71783: u64 [sp + 0x180] = a0\n 71787: u8 [sp + 0x794] = a0\n 71791: a0 = t2 >> 0x18\n 71794: u64 [sp + 0x178] = a0\n 71798: u8 [sp + 0x793] = a0\n 71802: a0 = t2 >> 0x10\n 71805: u64 [sp + 0x368] = a0\n 71809: u8 [sp + 0x792] = a0\n 71813: a0 = t2 >> 0x8\n 71816: u64 [sp + 0x360] = a0\n 71820: u8 [sp + 0x791] = a0\n 71824: a0 = ra >> 0x38\n 71827: u64 [sp + 0x358] = a0\n 71831: u8 [sp + 0x79f] = a0\n 71835: a0 = ra >> 0x30\n 71838: u64 [sp + 0x350] = a0\n 71842: u8 [sp + 0x79e] = a0\n 71846: a0 = ra >> 0x28\n 71849: u64 [sp + 0x2f0] = a0\n 71853: u8 [sp + 0x79d] = a0\n 71857: a0 = ra >> 0x20\n 71860: u64 [sp + 0x2e8] = a0\n 71864: u8 [sp + 0x79c] = a0\n 71868: a0 = ra >> 0x18\n 71871: u64 [sp + 0x2d0] = a0\n 71875: u8 [sp + 0x79b] = a0\n 71879: a0 = ra >> 0x10\n 71882: u64 [sp + 0x2c0] = a0\n 71886: u8 [sp + 0x79a] = a0\n 71890: a0 = ra >> 0x8\n 71893: u64 [sp + 0x260] = a0\n 71897: u8 [sp + 0x799] = a0\n 71901: a1 = t0 << 0x38\n 71904: a1 = a1 >> 0x3b\n 71907: a0 = sp + 0x780\n 71911: a1 = a0 - a1\n 71914: a2 = u8 [a1 + 0x19]\n 71917: a3 = u8 [a1 + 0x18]\n 71920: a4 = u8 [a1 + 0x1a]\n 71923: a5 = u8 [a1 + 0x1b]\n 71926: a2 = a2 << 0x8\n 71929: a2 = a2 | a3\n 71932: a4 = a4 << 0x10\n 71935: a5 = a5 << 0x18\n 71938: a4 = a4 | a5\n 71941: a2 = a2 | a4\n 71944: a3 = u8 [a1 + 0x1d]\n 71947: a4 = u8 [a1 + 0x1c]\n 71950: a5 = u8 [a1 + 0x1e]\n 71953: s1 = u8 [a1 + 0x1f]\n 71956: a3 = a3 << 0x8\n 71959: a3 = a3 | a4\n 71962: a5 = a5 << 0x10\n 71965: s1 = s1 << 0x18\n 71968: a5 = a5 | s1\n 71971: a3 = a3 | a5\n 71974: a3 = a3 << 0x20\n 71977: a4 = a3 | a2\n 71980: a2 = u8 [a1 + 0x11]\n 71983: a3 = u8 [a1 + 0x10]\n 71986: a5 = u8 [a1 + 0x12]\n 71989: s1 = u8 [a1 + 0x13]\n 71992: a2 = a2 << 0x8\n 71995: a2 = a2 | a3\n 71998: a5 = a5 << 0x10\n 72001: s1 = s1 << 0x18\n 72004: a5 = a5 | s1\n 72007: a2 = a2 | a5\n 72010: a3 = u8 [a1 + 0x15]\n 72013: a5 = u8 [a1 + 0x14]\n 72016: s1 = u8 [a1 + 0x16]\n 72019: a0 = u8 [a1 + 0x17]\n 72022: a3 = a3 << 0x8\n 72025: a3 = a3 | a5\n 72028: s1 = s1 << 0x10\n 72031: a0 = a0 << 0x18\n 72034: a0 = a0 | s1\n 72037: a0 = a0 | a3\n 72040: a0 = a0 << 0x20\n 72043: t1 = a0 | a2\n 72046: a0 = t0 & 0x7\n 72049: a2 = a4 << a0\n 72052: a5 = t1 >> 0x1\n 72055: t0 = a0 ^ 0x3f\n 72058: a5 = a5 >> t0\n 72061: a2 = a2 | a5\n 72064: u64 [sp + 0x300] = a2\n 72068: a2 = u8 [a1 + 0x9]\n 72071: a5 = u8 [a1 + 0x8]\n 72074: s1 = u8 [a1 + 0xa]\n 72077: a4 = u8 [a1 + 0xb]\n 72080: a2 = a2 << 0x8\n 72083: a2 = a2 | a5\n 72086: s1 = s1 << 0x10\n 72089: a4 = a4 << 0x18\n 72092: a4 = a4 | s1\n 72095: a2 = a2 | a4\n 72098: a4 = u8 [a1 + 0xd]\n 72101: a5 = u8 [a1 + 0xc]\n 72104: s1 = u8 [a1 + 0xe]\n 72107: a3 = u8 [a1 + 0xf]\n 72110: a4 = a4 << 0x8\n 72113: a4 = a4 | a5\n 72116: s1 = s1 << 0x10\n 72119: a3 = a3 << 0x18\n 72122: a3 = a3 | s1\n 72125: a3 = a3 | a4\n 72128: a3 = a3 << 0x20\n 72131: a5 = a3 | a2\n 72134: a2 = a5 >> 0x1\n 72137: a3 = a0 ^ 0xffffffffffffffff\n 72140: a2 = a2 >> a3\n 72143: a3 = t1 << a0\n 72146: a2 = a2 | a3\n 72149: u64 [sp + 0x3a0] = a2\n 72153: a2 = u8 [a1 + 0x1]\n 72156: a3 = u8 [a1]\n 72158: a4 = u8 [a1 + 0x2]\n 72161: s1 = u8 [a1 + 0x3]\n 72164: a2 = a2 << 0x8\n 72167: a2 = a2 | a3\n 72170: a4 = a4 << 0x10\n 72173: s1 = s1 << 0x18\n 72176: a4 = a4 | s1\n 72179: a2 = a2 | a4\n 72182: a3 = u8 [a1 + 0x5]\n 72185: a4 = u8 [a1 + 0x4]\n 72188: s1 = u8 [a1 + 0x6]\n 72191: a1 = u8 [a1 + 0x7]\n 72194: a3 = a3 << 0x8\n 72197: a3 = a3 | a4\n 72200: a4 = u64 [sp + 0x388]\n 72204: s1 = s1 << 0x10\n 72207: a1 = a1 << 0x18\n 72210: a1 = a1 | s1\n 72213: s1 = u64 [sp + 0x380]\n 72217: a1 = a1 | a3\n 72220: a1 = a1 << 0x20\n 72223: a1 = a1 | a2\n 72226: a2 = a1 >> 0x1\n 72229: a2 = a2 >> t0\n 72232: a3 = a5 << a0\n 72235: a5 = u64 [sp + 0x378]\n 72239: a2 = a2 | a3\n 72242: u64 [sp + 0x390] = a2\n 72246: a2 = s1 | a4\n 72249: a3 = u64 [sp + 0x3a8]\n 72253: a3 = a3 | a5\n 72256: a2 = a2 | a3\n 72259: a0 = a1 << a0\n 72262: u64 [sp + 0x398] = a0\n 72266: jump @332 if a2 == 0\n      : @329 (gas: 224)\n 72270: u64 [sp + 880] = 0\n 72274: a0 = u64 [sp + 0x258]\n 72278: u8 [sp + 0x727] = a0\n 72282: a0 = u64 [sp + 0x250]\n 72286: u8 [sp + 0x726] = a0\n 72290: a0 = u64 [sp + 0x248]\n 72294: u8 [sp + 0x725] = a0\n 72298: a0 = u64 [sp + 0x220]\n 72302: u8 [sp + 0x724] = a0\n 72306: a0 = u64 [sp + 0x218]\n 72310: u8 [sp + 0x723] = a0\n 72314: a0 = u64 [sp + 0x210]\n 72318: u8 [sp + 0x722] = a0\n 72322: a0 = u64 [sp + 0x208]\n 72326: u8 [sp + 0x721] = a0\n 72330: a0 = u64 [sp + 0x1d0]\n 72334: u8 [sp + 0x72f] = a0\n 72338: a0 = u64 [sp + 0x1c8]\n 72342: u8 [sp + 0x72e] = a0\n 72346: a0 = u64 [sp + 0x1c0]\n 72350: u8 [sp + 0x72d] = a0\n 72354: a0 = u64 [sp + 0x1b8]\n 72358: u8 [sp + 0x72c] = a0\n 72362: a0 = u64 [sp + 0x1b0]\n 72366: u8 [sp + 0x72b] = a0\n 72370: a0 = u64 [sp + 0x1a8]\n 72374: u8 [sp + 0x72a] = a0\n 72378: a0 = u64 [sp + 0x1a0]\n 72382: u8 [sp + 0x729] = a0\n 72386: a0 = u64 [sp + 0x198]\n 72390: u8 [sp + 0x737] = a0\n 72394: a0 = u64 [sp + 0x190]\n 72398: u8 [sp + 0x736] = a0\n 72402: a0 = u64 [sp + 0x188]\n 72406: u8 [sp + 0x735] = a0\n 72410: a0 = u64 [sp + 0x180]\n 72414: u8 [sp + 0x734] = a0\n 72418: a0 = u64 [sp + 0x178]\n 72422: u8 [sp + 0x733] = a0\n 72426: u8 [sp + 1887] = 0\n 72430: u8 [sp + 1886] = 0\n 72434: u8 [sp + 1885] = 0\n 72438: u8 [sp + 1884] = 0\n 72442: u8 [sp + 1883] = 0\n 72446: u8 [sp + 1882] = 0\n 72450: u8 [sp + 1881] = 0\n 72454: u8 [sp + 1880] = 0\n 72458: u8 [sp + 1879] = 0\n 72462: u8 [sp + 1878] = 0\n 72466: u8 [sp + 1877] = 0\n 72470: u8 [sp + 1876] = 0\n 72474: u8 [sp + 1875] = 0\n 72478: u8 [sp + 1874] = 0\n 72482: u8 [sp + 1873] = 0\n 72486: u8 [sp + 1872] = 0\n 72490: u8 [sp + 1871] = 0\n 72494: u8 [sp + 1870] = 0\n 72498: u8 [sp + 1869] = 0\n 72502: u8 [sp + 1868] = 0\n 72506: u8 [sp + 1867] = 0\n 72510: u8 [sp + 1866] = 0\n 72514: u8 [sp + 1865] = 0\n 72518: u8 [sp + 1864] = 0\n 72522: u8 [sp + 1863] = 0\n 72526: u8 [sp + 1862] = 0\n 72530: u8 [sp + 1861] = 0\n 72534: u8 [sp + 1860] = 0\n 72538: u8 [sp + 1859] = 0\n 72542: u8 [sp + 1858] = 0\n 72546: u8 [sp + 1857] = 0\n 72550: u8 [sp + 1856] = 0\n 72554: a0 = u64 [sp + 0x348]\n 72558: u8 [sp + 0x720] = a0\n 72562: a0 = u64 [sp + 0x318]\n 72566: u8 [sp + 0x728] = a0\n 72570: u8 [sp + 0x730] = t2\n 72574: u8 [sp + 0x738] = ra\n 72578: a0 = u64 [sp + 0x368]\n 72582: u8 [sp + 0x732] = a0\n 72586: a0 = u64 [sp + 0x360]\n 72590: u8 [sp + 0x731] = a0\n 72594: a0 = u64 [sp + 0x358]\n 72598: u8 [sp + 0x73f] = a0\n 72602: a0 = u64 [sp + 0x350]\n 72606: u8 [sp + 0x73e] = a0\n 72610: a0 = u64 [sp + 0x2f0]\n 72614: u8 [sp + 0x73d] = a0\n 72618: a0 = u64 [sp + 0x2e8]\n 72622: u8 [sp + 0x73c] = a0\n 72626: a0 = u64 [sp + 0x2d0]\n 72630: u8 [sp + 0x73b] = a0\n 72634: a0 = u64 [sp + 0x2c0]\n 72638: u8 [sp + 0x73a] = a0\n 72642: a0 = u64 [sp + 0x260]\n 72646: u8 [sp + 0x739] = a0\n 72650: t0 = u64 [sp + 0x3a8]\n 72654: a0 = t0 << 0x38\n 72657: a0 = a0 >> 0x3b\n 72660: a1 = sp + 0x720\n 72664: a0 = a0 + a1\n 72667: a1 = u8 [a0 + 0x11]\n 72670: a2 = u8 [a0 + 0x10]\n 72673: a4 = u8 [a0 + 0x12]\n 72676: a5 = u8 [a0 + 0x13]\n 72679: a1 = a1 << 0x8\n 72682: a1 = a1 | a2\n 72685: a4 = a4 << 0x10\n 72688: a5 = a5 << 0x18\n 72691: a4 = a4 | a5\n 72694: a1 = a1 | a4\n 72697: a2 = u8 [a0 + 0x15]\n 72700: a4 = u8 [a0 + 0x14]\n 72703: a5 = u8 [a0 + 0x16]\n 72706: s1 = u8 [a0 + 0x17]\n 72709: a2 = a2 << 0x8\n 72712: a2 = a2 | a4\n 72715: a5 = a5 << 0x10\n 72718: s1 = s1 << 0x18\n 72721: a5 = a5 | s1\n 72724: a2 = a2 | a5\n 72727: a2 = a2 << 0x20\n 72730: ra = a2 | a1\n 72733: t2 = t0 & 0x7\n 72736: t0 = ra >> t2\n 72739: a4 = u8 [a0 + 0x19]\n 72742: a5 = u8 [a0 + 0x18]\n 72745: s1 = u8 [a0 + 0x1a]\n 72748: a2 = u8 [a0 + 0x1b]\n 72751: a4 = a4 << 0x8\n 72754: a4 = a4 | a5\n 72757: s1 = s1 << 0x10\n 72760: a2 = a2 << 0x18\n 72763: a2 = a2 | s1\n 72766: a1 = a2 | a4\n 72769: a4 = u8 [a0 + 0x1d]\n 72772: a5 = u8 [a0 + 0x1c]\n 72775: s1 = u8 [a0 + 0x1e]\n 72778: a2 = u8 [a0 + 0x1f]\n 72781: a4 = a4 << 0x8\n 72784: a4 = a4 | a5\n 72787: s1 = s1 << 0x10\n 72790: a2 = a2 << 0x18\n 72793: a2 = a2 | s1\n 72796: a2 = a2 | a4\n 72799: a2 = a2 << 0x20\n 72802: a1 = a1 | a2\n 72805: u64 [sp + 0x368] = a1\n 72809: a2 = a1 << 0x1\n 72812: a1 = t2 ^ 0x3f\n 72815: u64 [sp + 0x360] = a1\n 72819: a2 = a2 << a1\n 72822: t1 = t0 | a2\n 72825: a2 = u8 [a0 + 0x9]\n 72828: a4 = u8 [a0 + 0x8]\n 72831: a5 = u8 [a0 + 0xa]\n 72834: s1 = u8 [a0 + 0xb]\n 72837: a2 = a2 << 0x8\n 72840: a2 = a2 | a4\n 72843: a5 = a5 << 0x10\n 72846: s1 = s1 << 0x18\n 72849: a5 = a5 | s1\n 72852: a2 = a2 | a5\n 72855: a4 = u8 [a0 + 0xd]\n 72858: a5 = u8 [a0 + 0xc]\n 72861: s1 = u8 [a0 + 0xe]\n 72864: a1 = u8 [a0 + 0xf]\n 72867: a4 = a4 << 0x8\n 72870: a4 = a4 | a5\n 72873: s1 = s1 << 0x10\n 72876: a1 = a1 << 0x18\n 72879: a1 = a1 | s1\n 72882: a1 = a1 | a4\n 72885: a1 = a1 << 0x20\n 72888: a2 = a2 | a1\n 72891: a1 = a2 >> t2\n 72894: t0 = ra << 0x1\n 72897: a4 = t2 ^ 0xffffffffffffffff\n 72900: a4 = t0 << a4\n 72903: ra = a1 | a4\n 72906: a1 = u8 [a0 + 0x1]\n 72909: a4 = u8 [a0]\n 72911: a5 = u8 [a0 + 0x2]\n 72914: s1 = u8 [a0 + 0x3]\n 72917: a1 = a1 << 0x8\n 72920: a1 = a1 | a4\n 72923: a5 = a5 << 0x10\n 72926: s1 = s1 << 0x18\n 72929: a5 = a5 | s1\n 72932: a1 = a1 | a5\n 72935: a4 = u8 [a0 + 0x5]\n 72938: a5 = u8 [a0 + 0x4]\n 72941: s1 = u8 [a0 + 0x6]\n 72944: a0 = u8 [a0 + 0x7]\n 72947: a4 = a4 << 0x8\n 72950: a4 = a4 | a5\n 72953: a5 = u64 [sp + 0x370]\n 72957: t0 = t1\n 72959: t1 = ra\n 72961: s1 = s1 << 0x10\n 72964: a0 = a0 << 0x18\n 72967: a0 = a0 | s1\n 72970: a0 = a0 | a4\n 72973: a0 = a0 << 0x20\n 72976: a0 = a0 | a1\n 72979: a0 = a0 >> t2\n 72982: a2 = a2 << 0x1\n 72985: a1 = u64 [sp + 0x360]\n 72989: a1 = a2 << a1\n 72992: ra = a0 | a1\n 72995: a0 = u64 [sp + 0x368]\n 72999: t2 = a0 >> t2\n 73002: a1 = u64 [sp + 0x3b8]\n 73006: a0 = a1 <u 0x1\n 73009: a2 = u64 [sp + 0x3b0]\n 73013: a0 = a2 - a0\n 73016: u64 [sp + 0x360] = a0\n 73020: a0 = a1 | a2\n 73023: a0 = a0 >u 0\n 73025: a0 = a0 + 0xffffffffffffffff\n 73028: u64 [sp + 0x358] = a0\n 73032: a1 = a1 + 0xffffffffffffffff\n 73035: u64 [sp + 0x350] = a1\n 73039: s1 = u64 [sp + 0x300]\n 73043: fallthrough\n      : @330 (gas: 88)\n 73044: u64 [sp + 0x370] = a5\n 73048: u64 [sp + 872] = 0\n 73052: a0 = ra >> 0x3f\n 73055: a1 = t1 << 0x1\n 73058: a0 = a0 | a1\n 73061: ra = ra << 0x1\n 73064: a1 = s1 >> 0x3f\n 73067: ra = ra | a1\n 73070: a2 = u64 [sp + 0x360]\n 73074: a1 = a2 ^ a0\n 73077: a2 = a2 <u a0\n 73080: a4 = u64 [sp + 0x350]\n 73084: a4 = a4 <u ra\n 73087: a4 = a2 if a1 != 0\n 73090: t2 = t2 << 0x1\n 73093: a2 = t0\n 73095: a1 = t0 >> 0x3f\n 73098: t0 = t2 | a1\n 73101: a1 = t1 >> 0x3f\n 73104: a5 = a2 << 0x1\n 73107: a1 = a1 | a5\n 73110: a5 = s1 << 0x1\n 73113: a2 = u64 [sp + 0x3a0]\n 73117: s1 = a2 >> 0x3f\n 73120: t2 = a5 | s1\n 73123: s1 = a2 << 0x1\n 73126: a5 = u64 [sp + 0x390]\n 73130: a2 = a5 >> 0x3f\n 73133: t1 = s1 | a2\n 73136: a2 = a5 << 0x1\n 73139: s1 = u64 [sp + 0x398]\n 73143: a5 = s1 >> 0x3f\n 73146: a5 = a5 | a2\n 73149: s1 = s1 << 0x1\n 73152: a2 = u64 [sp + 0x370]\n 73156: s1 = s1 | a2\n 73159: u64 [sp + 0x398] = s1\n 73163: a5 = a5 | 0\n 73165: u64 [sp + 0x390] = a5\n 73169: a2 = t1 | 0\n 73171: u64 [sp + 0x3a0] = a2\n 73175: t2 = t2 | 0\n 73177: a3 = u64 [sp + 0x358]\n 73181: a2 = a3 - a1\n 73184: a2 = a2 <u a4\n 73187: a4 = a3 <u a1\n 73190: a5 = a3 - t0\n 73193: t1 = t0\n 73195: a5 = a5 - a4\n 73198: a4 = a5 - a2\n 73201: a4 = a4 >>a 0x3f\n 73204: a2 = u64 [sp + 0x3b8]\n 73208: a2 = a2 & a4\n 73211: s1 = u64 [sp + 0x3b0]\n 73215: s1 = s1 & a4\n 73218: t0 = a0 ^ s1\n 73221: a3 = a0 <u s1\n 73224: a5 = ra <u a2\n 73227: a3 = a5 if t0 == 0\n 73230: t0 = a1 - a3\n 73233: a1 = a1 <u a3\n 73236: a1 = t1 - a1\n 73239: a0 = a0 - s1\n 73242: s1 = t2\n 73244: t2 = a1\n 73246: t1 = a0 - a5\n 73249: ra = ra - a2\n 73252: a3 = u64 [sp + 0x3a8]\n 73256: a5 = u64 [sp + 0x380]\n 73260: a0 = a3 | a5\n 73263: a0 = a0 <u 0x1\n 73266: a2 = u64 [sp + 0x378]\n 73270: a1 = a2 <u a0\n 73273: a0 = a2 - a0\n 73276: a2 = a3 <u 0x1\n 73279: a5 = a5 - a2\n 73282: a2 = u64 [sp + 0x388]\n 73286: a2 = a2 - a1\n 73289: a3 = a3 + 0xffffffffffffffff\n 73292: u64 [sp + 0x388] = a2\n 73296: u64 [sp + 0x380] = a5\n 73300: a1 = a5 | a2\n 73303: u64 [sp + 0x3a8] = a3\n 73307: a2 = a3 | a0\n 73310: a1 = a1 | a2\n 73313: a5 = a4 & 0x1\n 73316: u64 [sp + 0x378] = a0\n 73320: jump @330 if a1 != 0\n      : @331 (gas: 1)\n 73324: jump @333\n      : @332 (gas: 4)\n 73326: a5 = 0\n 73328: u64 [sp + 872] = 0\n 73332: s1 = u64 [sp + 0x300]\n 73336: fallthrough\n      : @333 (gas: 21)\n 73337: a2 = u64 [sp + 0x3a0]\n 73341: a0 = a2 >> 0x3f\n 73344: a1 = s1 << 0x1\n 73347: a1 = a1 | a0\n 73350: a4 = u64 [sp + 0x390]\n 73354: a0 = a4 >> 0x3f\n 73357: a2 = a2 << 0x1\n 73360: a2 = a2 | a0\n 73363: a0 = u64 [sp + 0x398]\n 73367: a3 = a0 >> 0x3f\n 73370: a4 = a4 << 0x1\n 73373: a0 = a0 << 0x1\n 73376: ra = a5 | a0\n 73379: a5 = u64 [sp + 0x368]\n 73383: a3 = a3 | a5\n 73386: t1 = a3 | a4\n 73389: a0 = a5 | a2\n 73392: u64 [sp + 0x398] = a0\n 73396: a0 = a5 | a1\n 73399: u64 [sp + 0x388] = a0\n 73403: fallthrough\n      : @334 (gas: 71)\n 73404: a2 = u64 [sp + 0x3b8]\n 73408: a3 = ra mulhu a2\n 73411: a4 = t1 * a2\n 73414: a3 = a3 + a4\n 73417: a4 = a3 <u a4\n 73420: a5 = t1 mulhu a2\n 73423: t0 = a5 + a4\n 73426: a0 = u64 [sp + 0x3b0]\n 73430: a4 = ra * a0\n 73433: t2 = a4 + a3\n 73436: a3 = t2 <u a4\n 73439: a4 = ra mulhu a0\n 73442: a3 = a3 + a4\n 73445: a4 = t0 + a3\n 73448: s1 = t1 * a0\n 73451: a3 = s1 + a4\n 73454: a1 = u64 [sp + 0x398]\n 73458: a5 = a2 * a1\n 73461: a5 = a5 + a3\n 73464: s1 = a3 <u s1\n 73467: a3 = a5 <u a3\n 73470: u64 [sp + 0x3a8] = a3\n 73474: a4 = a4 <u t0\n 73477: a3 = t1 mulhu a0\n 73480: a3 = a3 + a4\n 73483: t0 = a3 + s1\n 73486: a4 = a2 mulhu a1\n 73489: a3 = u64 [sp + 0x388]\n 73493: s1 = a2 * a3\n 73496: a4 = a4 + s1\n 73499: s1 = a0 * a1\n 73502: a4 = a4 + s1\n 73505: a3 = t0 + a4\n 73508: a2 = ra * a2\n 73511: u64 [sp + 0x380] = a2\n 73515: a0 = u64 [sp + 0x308]\n 73519: a4 = u64 [sp + 0x3a8]\n 73523: s1 = a0 - a4\n 73526: s1 = s1 - a3\n 73529: u64 [sp + 0x3a8] = s1\n 73533: a0 = u64 [sp + 0x318]\n 73537: u64 [sp + 0x390] = t2\n 73541: s1 = a0 ^ t2\n 73544: a3 = a0 <u t2\n 73547: t2 = u64 [sp + 0x348]\n 73551: a4 = t2 <u a2\n 73554: a3 = a4 if s1 == 0\n 73557: a2 = u64 [sp + 0x310]\n 73561: s1 = a2 <u a5\n 73564: a5 = a2 - a5\n 73567: t0 = a5 <u a3\n 73570: t0 = t0 + s1\n 73573: s1 = a1\n 73575: a1 = u64 [sp + 0x3a8]\n 73579: a1 = a1 - t0\n 73582: u64 [sp + 0x3a0] = a1\n 73586: a2 = a5 - a3\n 73589: a3 = a0 - a4\n 73592: a0 = u64 [sp + 0x390]\n 73596: a3 = a3 - a0\n 73599: a0 = u64 [sp + 0x380]\n 73603: a0 = t2 - a0\n 73606: u64 [sp + 0x3a8] = a0\n 73610: a1 = u64 [sp + 0x2f8]\n 73614: a1 = a1 & 0xffffffffffffffff\n 73617: u64 [sp + 0x380] = a1\n 73621: a1 = u64 [sp + 0x268]\n 73625: a0 = a1 & 0xffffffffffffffff\n 73628: u64 [sp + 0x378] = a0\n 73632: a1 = u64 [sp + 0x388]\n 73636: jump @336\n      : @335 (gas: 35)\n 73638: a4 = u64 [sp + 0x3b8]\n 73642: a0 = u64 [sp + 0x3a8]\n 73646: a4 = a4 + a0\n 73649: a0 = a4 <u a0\n 73652: a5 = u64 [sp + 0x3b0]\n 73656: a5 = a5 + a3\n 73659: a5 = a5 + a0\n 73662: a2 = a5 ^ a3\n 73665: a3 = a5 <u a3\n 73668: a3 = a0 if a2 == 0\n 73671: a0 = a5 + 0x1\n 73674: a2 = a5 <u 0xffffffffffffffff\n 73677: t2 = a4 <u 0xffffffffffffffff\n 73680: t2 = a2 if a0 != 0\n 73683: a0 = ra <u 0x1\n 73686: t0 = t1 - a0\n 73689: a0 = ra | t1\n 73692: a0 = a0 <u 0x1\n 73695: a2 = s1 <u a0\n 73698: a0 = s1 - a0\n 73701: a1 = a1 - a2\n 73704: s1 = u64 [sp + 0x390]\n 73708: a2 = s1 + a3\n 73711: a3 = a2 <u s1\n 73714: s1 = u64 [sp + 0x3a0]\n 73718: s1 = s1 + a3\n 73721: u64 [sp + 0x3a0] = s1\n 73725: a3 = a2 | s1\n 73728: t2 = 0 if a3 != 0\n 73730: ra = ra + 0xffffffffffffffff\n 73733: t1 = t0\n 73735: s1 = a0\n 73737: u64 [sp + 0x3a8] = a4\n 73741: a3 = a5\n 73743: jump @339 if t2 == 0\n      : @336 (gas: 11)\n 73747: u64 [sp + 0x390] = a2\n 73751: a4 = s1 >u 0\n 73753: a5 = a1 >u 0\n 73755: a5 = a4 if a1 == 0\n 73758: a4 = t1 + 0x1\n 73761: a0 = ra + 0x1\n 73764: a0 = a0 <u 0x1\n 73767: a0 = 0 if a4 != 0\n 73769: a4 = s1 | a1\n 73772: a0 = a5 if a4 != 0\n 73775: jump @335 if a0 != 0\n      : @337 (gas: 56)\n 73779: t2 = s1\n 73781: s1 = u64 [sp + 0x338]\n 73785: a0 = ra mulhu s1\n 73788: a4 = t1 * s1\n 73791: a0 = a0 + a4\n 73794: a4 = a0 <u a4\n 73797: a5 = t1 mulhu s1\n 73800: a2 = a5 + a4\n 73803: u64 [sp + 0x388] = a1\n 73807: a1 = u64 [sp + 0x340]\n 73811: a4 = ra * a1\n 73814: u64 [sp + 0x398] = t1\n 73818: t1 = a4 + a0\n 73821: a4 = t1 <u a4\n 73824: a0 = ra mulhu a1\n 73827: a0 = a0 + a4\n 73830: a5 = a2 + a0\n 73833: a0 = u64 [sp + 0x398]\n 73837: a4 = a0 * a1\n 73840: a0 = a4 + a5\n 73843: a4 = a0 <u a4\n 73846: a2 = a5 <u a2\n 73849: a5 = u64 [sp + 0x398]\n 73853: a5 = a5 mulhu a1\n 73856: a2 = a2 + a5\n 73859: a2 = a2 + a4\n 73862: a4 = s1 mulhu t2\n 73865: a5 = u64 [sp + 0x388]\n 73869: a5 = s1 * a5\n 73872: a4 = a4 + a5\n 73875: a5 = a1 * t2\n 73878: a1 = u64 [sp + 0x388]\n 73882: a4 = a4 + a5\n 73885: a5 = s1 * t2\n 73888: a5 = a5 + a0\n 73891: a0 = a5 <u a0\n 73894: a2 = a2 + a4\n 73897: a0 = a0 + a2\n 73900: t0 = ra * s1\n 73903: s1 = t2\n 73905: a2 = u64 [sp + 0x378]\n 73909: a4 = t1 ^ a2\n 73912: t2 = a2 <u t1\n 73915: t1 = u64 [sp + 0x398]\n 73919: a2 = u64 [sp + 0x380]\n 73923: a2 = a2 <u t0\n 73926: a2 = t2 if a4 != 0\n 73929: t0 = a0 ^ a3\n 73932: t2 = a3 <u a0\n 73935: a4 = u64 [sp + 0x3a8]\n 73939: a0 = a4 <u a5\n 73942: a0 = t2 if t0 != 0\n 73945: a5 = a5 ^ a4\n 73948: a4 = a5 | t0\n 73951: a2 = a0 if a4 != 0\n 73954: jump @335 if a2 != 0\n      : @338 (gas: 2)\n 73958: t0 = t1\n 73960: fallthrough\n      : @339 (gas: 258)\n 73961: a1 = t0 & 0xffffffffffffffff\n 73964: a0 = ra & 0xffffffffffffffff\n 73967: t1 = u64 [sp + 0x338]\n 73971: a2 = a0 mulhu t1\n 73974: a3 = a1 * t1\n 73977: a2 = a2 + a3\n 73980: a3 = a2 <u a3\n 73983: a4 = a1 mulhu t1\n 73986: t0 = a4 + a3\n 73989: s1 = u64 [sp + 0x340]\n 73993: a4 = a0 * s1\n 73996: ra = a4 + a2\n 73999: a4 = ra <u a4\n 74002: a5 = a0 mulhu s1\n 74005: a4 = a4 + a5\n 74008: a3 = t0 + a4\n 74011: a5 = a1 * s1\n 74014: a4 = a5 + a3\n 74017: a3 = a3 <u t0\n 74020: s1 = a1 mulhu s1\n 74023: t0 = s1 + a3\n 74026: a3 = u64 [sp + 0x3b8]\n 74030: s1 = a3 * a0\n 74033: s1 = s1 + a4\n 74036: a5 = a4 <u a5\n 74039: a4 = s1 <u a4\n 74042: t0 = t0 + a5\n 74045: a1 = a3 * a1\n 74048: a5 = a3 mulhu a0\n 74051: a1 = a1 + a5\n 74054: a5 = u64 [sp + 0x3b0]\n 74058: a5 = a5 * a0\n 74061: a1 = a1 + a5\n 74064: a1 = a1 + t0\n 74067: t0 = a1 + a4\n 74070: t2 = a0 * t1\n 74073: a1 = u64 [sp + 0x348]\n 74077: a0 = a1 <u s1\n 74080: a4 = u64 [sp + 0x318]\n 74084: t1 = a4 - a0\n 74087: a4 = u64 [sp + 0x378]\n 74091: a0 = a4 ^ ra\n 74094: a5 = a4 <u ra\n 74097: a3 = u64 [sp + 0x380]\n 74101: a2 = a3 <u t2\n 74104: a5 = a2 if a0 == 0\n 74107: a1 = a1 - s1\n 74110: s1 = a1 <u a5\n 74113: a0 = t1 - s1\n 74116: a0 = a0 - t0\n 74119: a1 = a1 - a5\n 74122: a4 = a4 - a2\n 74125: a2 = a4 - ra\n 74128: a3 = a3 - t2\n 74131: u8 [sp + 1823] = 0\n 74135: u8 [sp + 1822] = 0\n 74139: u8 [sp + 1821] = 0\n 74143: u8 [sp + 1820] = 0\n 74147: u8 [sp + 1819] = 0\n 74151: u8 [sp + 1818] = 0\n 74155: u8 [sp + 1817] = 0\n 74159: u8 [sp + 1816] = 0\n 74163: u8 [sp + 1815] = 0\n 74167: u8 [sp + 1814] = 0\n 74171: u8 [sp + 1813] = 0\n 74175: u8 [sp + 1812] = 0\n 74179: u8 [sp + 1811] = 0\n 74183: u8 [sp + 1810] = 0\n 74187: u8 [sp + 1809] = 0\n 74191: u8 [sp + 1808] = 0\n 74195: u8 [sp + 1807] = 0\n 74199: u8 [sp + 1806] = 0\n 74203: u8 [sp + 1805] = 0\n 74207: u8 [sp + 1804] = 0\n 74211: u8 [sp + 1803] = 0\n 74215: u8 [sp + 1802] = 0\n 74219: u8 [sp + 1801] = 0\n 74223: u8 [sp + 1800] = 0\n 74227: u8 [sp + 1799] = 0\n 74231: u8 [sp + 1798] = 0\n 74235: u8 [sp + 1797] = 0\n 74239: u8 [sp + 1796] = 0\n 74243: u8 [sp + 1795] = 0\n 74247: u8 [sp + 1794] = 0\n 74251: u8 [sp + 1793] = 0\n 74255: u8 [sp + 1792] = 0\n 74259: u8 [sp + 0x6e0] = a3\n 74263: a4 = a3 >> 0x38\n 74266: u8 [sp + 0x6e7] = a4\n 74270: a4 = a3 >> 0x30\n 74273: u8 [sp + 0x6e6] = a4\n 74277: a4 = a3 >> 0x28\n 74280: u8 [sp + 0x6e5] = a4\n 74284: a4 = a3 >> 0x20\n 74287: u8 [sp + 0x6e4] = a4\n 74291: a4 = a3 >> 0x18\n 74294: u8 [sp + 0x6e3] = a4\n 74298: a4 = a3 >> 0x10\n 74301: u8 [sp + 0x6e2] = a4\n 74305: a3 = a3 >> 0x8\n 74308: u8 [sp + 0x6e1] = a3\n 74312: u8 [sp + 0x6e8] = a2\n 74316: a3 = a2 >> 0x38\n 74319: u8 [sp + 0x6ef] = a3\n 74323: a3 = a2 >> 0x30\n 74326: u8 [sp + 0x6ee] = a3\n 74330: a3 = a2 >> 0x28\n 74333: u8 [sp + 0x6ed] = a3\n 74337: a3 = a2 >> 0x20\n 74340: u8 [sp + 0x6ec] = a3\n 74344: a3 = a2 >> 0x18\n 74347: u8 [sp + 0x6eb] = a3\n 74351: a3 = a2 >> 0x10\n 74354: u8 [sp + 0x6ea] = a3\n 74358: a2 = a2 >> 0x8\n 74361: u8 [sp + 0x6e9] = a2\n 74365: u8 [sp + 0x6f0] = a1\n 74369: a2 = a1 >> 0x38\n 74372: u8 [sp + 0x6f7] = a2\n 74376: a2 = a1 >> 0x30\n 74379: u8 [sp + 0x6f6] = a2\n 74383: a2 = a1 >> 0x28\n 74386: u8 [sp + 0x6f5] = a2\n 74390: a2 = a1 >> 0x20\n 74393: u8 [sp + 0x6f4] = a2\n 74397: a2 = a1 >> 0x18\n 74400: u8 [sp + 0x6f3] = a2\n 74404: a2 = a1 >> 0x10\n 74407: u8 [sp + 0x6f2] = a2\n 74411: a1 = a1 >> 0x8\n 74414: u8 [sp + 0x6f1] = a1\n 74418: u8 [sp + 0x6f8] = a0\n 74422: a1 = a0 >> 0x38\n 74425: u8 [sp + 0x6ff] = a1\n 74429: a1 = a0 >> 0x30\n 74432: u8 [sp + 0x6fe] = a1\n 74436: a1 = a0 >> 0x28\n 74439: u8 [sp + 0x6fd] = a1\n 74443: a1 = a0 >> 0x20\n 74446: u8 [sp + 0x6fc] = a1\n 74450: a1 = a0 >> 0x18\n 74453: u8 [sp + 0x6fb] = a1\n 74457: a1 = a0 >> 0x10\n 74460: u8 [sp + 0x6fa] = a1\n 74464: a0 = a0 >> 0x8\n 74467: u8 [sp + 0x6f9] = a0\n 74471: a0 = u64 [sp + 0x1f0]\n 74475: a1 = sp + 0x6e0\n 74479: a0 = a0 + a1\n 74482: a1 = u8 [a0 + 0x11]\n 74485: a2 = u8 [a0 + 0x10]\n 74488: a3 = u8 [a0 + 0x12]\n 74491: a4 = u8 [a0 + 0x13]\n 74494: a1 = a1 << 0x8\n 74497: a1 = a1 | a2\n 74500: a3 = a3 << 0x10\n 74503: a4 = a4 << 0x18\n 74506: a3 = a3 | a4\n 74509: a1 = a1 | a3\n 74512: a2 = u8 [a0 + 0x15]\n 74515: a3 = u8 [a0 + 0x14]\n 74518: a4 = u8 [a0 + 0x16]\n 74521: a5 = u8 [a0 + 0x17]\n 74524: a2 = a2 << 0x8\n 74527: a2 = a2 | a3\n 74530: a4 = a4 << 0x10\n 74533: a5 = a5 << 0x18\n 74536: a4 = a4 | a5\n 74539: a2 = a2 | a4\n 74542: a2 = a2 << 0x20\n 74545: t0 = a2 | a1\n 74548: t1 = u64 [sp + 0x200]\n 74552: a3 = t0 >> t1\n 74555: a1 = u8 [a0 + 0x19]\n 74558: a4 = u8 [a0 + 0x18]\n 74561: a5 = u8 [a0 + 0x1a]\n 74564: s1 = u8 [a0 + 0x1b]\n 74567: a1 = a1 << 0x8\n 74570: a1 = a1 | a4\n 74573: a5 = a5 << 0x10\n 74576: s1 = s1 << 0x18\n 74579: a5 = a5 | s1\n 74582: a1 = a1 | a5\n 74585: a4 = u8 [a0 + 0x1d]\n 74588: a5 = u8 [a0 + 0x1c]\n 74591: s1 = u8 [a0 + 0x1e]\n 74594: a2 = u8 [a0 + 0x1f]\n 74597: a4 = a4 << 0x8\n 74600: a4 = a4 | a5\n 74603: s1 = s1 << 0x10\n 74606: a2 = a2 << 0x18\n 74609: a2 = a2 | s1\n 74612: a2 = a2 | a4\n 74615: a2 = a2 << 0x20\n 74618: t2 = a2 | a1\n 74621: a2 = t2 << 0x1\n 74624: a1 = u64 [sp + 0x1f8]\n 74628: a2 = a2 << a1\n 74631: a2 = a2 | a3\n 74634: u64 [sp + 0x2f0] = a2\n 74638: a2 = u8 [a0 + 0x9]\n 74641: a3 = u8 [a0 + 0x8]\n 74644: a4 = u8 [a0 + 0xa]\n 74647: a5 = u8 [a0 + 0xb]\n 74650: a2 = a2 << 0x8\n 74653: a2 = a2 | a3\n 74656: a4 = a4 << 0x10\n 74659: a5 = a5 << 0x18\n 74662: a4 = a4 | a5\n 74665: a2 = a2 | a4\n 74668: a3 = u8 [a0 + 0xd]\n 74671: a4 = u8 [a0 + 0xc]\n 74674: a5 = u8 [a0 + 0xe]\n 74677: s1 = u8 [a0 + 0xf]\n 74680: a3 = a3 << 0x8\n 74683: a3 = a3 | a4\n 74686: a5 = a5 << 0x10\n 74689: s1 = s1 << 0x18\n 74692: a5 = a5 | s1\n 74695: a3 = a3 | a5\n 74698: a3 = a3 << 0x20\n 74701: a3 = a3 | a2\n 74704: a2 = a3 >> t1\n 74707: t0 = t0 << 0x1\n 74710: a4 = u64 [sp + 0x1e8]\n 74714: a4 = t0 << a4\n 74717: a2 = a2 | a4\n 74720: u64 [sp + 0x2d0] = a2\n 74724: a2 = u8 [a0 + 0x1]\n 74727: a4 = u8 [a0]\n 74729: a5 = u8 [a0 + 0x2]\n 74732: s1 = u8 [a0 + 0x3]\n 74735: a2 = a2 << 0x8\n 74738: a2 = a2 | a4\n 74741: a5 = a5 << 0x10\n 74744: s1 = s1 << 0x18\n 74747: a5 = a5 | s1\n 74750: a2 = a2 | a5\n 74753: a4 = u8 [a0 + 0x5]\n 74756: a5 = u8 [a0 + 0x4]\n 74759: s1 = u8 [a0 + 0x6]\n 74762: a0 = u8 [a0 + 0x7]\n 74765: a4 = a4 << 0x8\n 74768: a4 = a4 | a5\n 74771: s1 = s1 << 0x10\n 74774: a0 = a0 << 0x18\n 74777: a0 = a0 | s1\n 74780: a0 = a0 | a4\n 74783: a0 = a0 << 0x20\n 74786: a0 = a0 | a2\n 74789: a0 = a0 >> t1\n 74792: a3 = a3 << 0x1\n 74795: a2 = a3 << a1\n 74798: a0 = a0 | a2\n 74801: u64 [sp + 0x2c0] = a0\n 74805: a0 = t2 >> t1\n 74808: u64 [sp + 0x2e8] = a0\n 74812: fallthrough\n      : @340 (gas: 58)\n 74813: a1 = u64 [sp + 0x2d8]\n 74817: ra = u64 [sp + 0x290]\n 74821: a0 = a1 | ra\n 74824: a2 = a1\n 74826: t0 = u64 [sp + 0x2a0]\n 74830: t2 = u64 [sp + 0x288]\n 74834: a1 = t0 | t2\n 74837: a0 = a0 | a1\n 74840: a0 = a0 <u 0x1\n 74843: a1 = u64 [sp + 0x320]\n 74847: a0 = a0 | a1\n 74850: u64 [sp + 0x3a8] = a0\n 74854: a0 = clz ra\n 74856: a0 = a0 + 0x40\n 74859: a4 = clz t2\n 74861: a4 = a0 if t2 == 0\n 74864: a0 = clz a2\n 74866: a0 = a0 + 0x40\n 74869: a1 = clz t0\n 74871: a1 = a0 if t0 == 0\n 74874: a0 = a1 + 0x80\n 74878: a3 = ra | t2\n 74881: a4 = a0 if a3 == 0\n 74884: a0 = a0 <u a1\n 74887: a0 = 0 if a3 != 0\n 74889: a2 = u64 [sp + 0x330]\n 74893: a1 = a2 ^ a0\n 74896: a5 = a2 <u a0\n 74899: a3 = u64 [sp + 0x328]\n 74903: s1 = a3 <u a4\n 74906: a5 = s1 if a1 == 0\n 74909: a1 = a5 <u 0x1\n 74912: t1 = a1 + 0xffffffffffffffff\n 74915: a1 = -a5\n 74917: a0 = a2 - a0\n 74920: a0 = a0 - s1\n 74923: a3 = a3 - a4\n 74926: u64 [sp + 0x3a0] = a1\n 74930: s1 = a1 >u 0\n 74932: a1 = t1\n 74934: a2 = t1 >u 0\n 74936: a2 = s1 if t1 == 0\n 74939: s1 = a0 >u 0\n 74941: a4 = a3\n 74943: a3 = a3 <u 0x100\n 74947: a3 = a3 ^ 0x1\n 74950: a3 = s1 if a0 != 0\n 74953: a3 = a2 if a5 != 0\n 74956: a2 = u64 [sp + 0x3a8]\n 74960: a2 = a2 | a3\n 74963: t2 = 0 if a2 != 0\n 74965: u64 [sp + 0x268] = t2\n 74969: s1 = ra\n 74971: s1 = 0 if a2 != 0\n 74973: t0 = 0 if a2 != 0\n 74975: t1 = u64 [sp + 0x2d8]\n 74979: t1 = 0 if a2 != 0\n 74981: jump @348 if a2 != 0\n      : @341 (gas: 10)\n 74985: ra = a4\n 74987: a2 = a4 ^ 0xff\n 74991: a4 = u64 [sp + 0x3a0]\n 74995: a2 = a2 | a4\n 74998: a3 = a0 | a1\n 75001: a2 = a2 | a3\n 75004: a3 = u64 [sp + 0x2f0]\n 75008: t2 = u64 [sp + 0x2d0]\n 75012: a5 = u64 [sp + 0x2e8]\n 75016: jump @349 if a2 == 0\n      : @342 (gas: 257)\n 75020: a3 = ra + 0x1\n 75023: u64 [sp + 0x3a8] = a3\n 75027: a2 = a3 <u 0x1\n 75030: a0 = a0 + a2\n 75033: u64 [sp + 0x380] = a0\n 75037: a0 = a0 | a3\n 75040: a0 = a0 <u 0x1\n 75043: a0 = a0 + a4\n 75046: u64 [sp + 0x368] = a0\n 75050: a0 = a0 <u a4\n 75053: a0 = a0 + a1\n 75056: u64 [sp + 0x370] = a0\n 75060: t1 = 0xff - ra\n 75064: a0 = u64 [sp + 0x2d8]\n 75068: u8 [sp + 0x540] = a0\n 75072: u8 [sp + 1343] = 0\n 75076: u8 [sp + 1342] = 0\n 75080: u8 [sp + 1341] = 0\n 75084: u8 [sp + 1340] = 0\n 75088: u8 [sp + 1339] = 0\n 75092: u8 [sp + 1338] = 0\n 75096: u8 [sp + 1337] = 0\n 75100: u8 [sp + 1336] = 0\n 75104: u8 [sp + 1335] = 0\n 75108: u8 [sp + 1334] = 0\n 75112: u8 [sp + 1333] = 0\n 75116: u8 [sp + 1332] = 0\n 75120: u8 [sp + 1331] = 0\n 75124: u8 [sp + 1330] = 0\n 75128: u8 [sp + 1329] = 0\n 75132: u8 [sp + 1328] = 0\n 75136: u8 [sp + 1327] = 0\n 75140: u8 [sp + 1326] = 0\n 75144: u8 [sp + 1325] = 0\n 75148: u8 [sp + 1324] = 0\n 75152: u8 [sp + 1323] = 0\n 75156: u8 [sp + 1322] = 0\n 75160: u8 [sp + 1321] = 0\n 75164: u8 [sp + 1320] = 0\n 75168: u8 [sp + 1319] = 0\n 75172: u8 [sp + 1318] = 0\n 75176: u8 [sp + 1317] = 0\n 75180: u8 [sp + 1316] = 0\n 75184: u8 [sp + 1315] = 0\n 75188: u8 [sp + 1314] = 0\n 75192: u8 [sp + 1313] = 0\n 75196: u8 [sp + 1312] = 0\n 75200: a1 = u64 [sp + 0x2a0]\n 75204: u8 [sp + 0x548] = a1\n 75208: a2 = a0 >> 0x38\n 75211: u64 [sp + 0x260] = a2\n 75215: u8 [sp + 0x547] = a2\n 75219: a2 = a0 >> 0x30\n 75222: u64 [sp + 0x258] = a2\n 75226: u8 [sp + 0x546] = a2\n 75230: a2 = a0 >> 0x28\n 75233: u64 [sp + 0x250] = a2\n 75237: u8 [sp + 0x545] = a2\n 75241: a2 = a0 >> 0x20\n 75244: u64 [sp + 0x248] = a2\n 75248: u8 [sp + 0x544] = a2\n 75252: a2 = a0 >> 0x18\n 75255: u64 [sp + 0x220] = a2\n 75259: u8 [sp + 0x543] = a2\n 75263: a2 = a0 >> 0x10\n 75266: u64 [sp + 0x218] = a2\n 75270: u8 [sp + 0x542] = a2\n 75274: a0 = a0 >> 0x8\n 75277: u64 [sp + 0x210] = a0\n 75281: u8 [sp + 0x541] = a0\n 75285: ra = u64 [sp + 0x290]\n 75289: u8 [sp + 0x550] = ra\n 75293: a0 = a1 >> 0x38\n 75296: u64 [sp + 0x208] = a0\n 75300: u8 [sp + 0x54f] = a0\n 75304: a0 = a1 >> 0x30\n 75307: u64 [sp + 0x1d0] = a0\n 75311: u8 [sp + 0x54e] = a0\n 75315: a0 = a1 >> 0x28\n 75318: u64 [sp + 0x1c8] = a0\n 75322: u8 [sp + 0x54d] = a0\n 75326: a0 = a1 >> 0x20\n 75329: u64 [sp + 0x1c0] = a0\n 75333: u8 [sp + 0x54c] = a0\n 75337: a0 = a1 >> 0x18\n 75340: u64 [sp + 0x1b8] = a0\n 75344: u8 [sp + 0x54b] = a0\n 75348: a0 = a1 >> 0x10\n 75351: u64 [sp + 0x1b0] = a0\n 75355: u8 [sp + 0x54a] = a0\n 75359: a1 = a1 >> 0x8\n 75362: u64 [sp + 0x1a8] = a1\n 75366: u8 [sp + 0x549] = a1\n 75370: t0 = u64 [sp + 0x288]\n 75374: u8 [sp + 0x558] = t0\n 75378: a0 = ra >> 0x38\n 75381: u64 [sp + 0x1a0] = a0\n 75385: u8 [sp + 0x557] = a0\n 75389: a0 = ra >> 0x30\n 75392: u64 [sp + 0x198] = a0\n 75396: u8 [sp + 0x556] = a0\n 75400: a0 = ra >> 0x28\n 75403: u64 [sp + 0x190] = a0\n 75407: u8 [sp + 0x555] = a0\n 75411: a0 = ra >> 0x20\n 75414: u64 [sp + 0x188] = a0\n 75418: u8 [sp + 0x554] = a0\n 75422: a0 = ra >> 0x18\n 75425: u64 [sp + 0x180] = a0\n 75429: u8 [sp + 0x553] = a0\n 75433: a0 = ra >> 0x10\n 75436: u64 [sp + 0x358] = a0\n 75440: u8 [sp + 0x552] = a0\n 75444: a0 = ra >> 0x8\n 75447: u64 [sp + 0x350] = a0\n 75451: u8 [sp + 0x551] = a0\n 75455: a0 = t0 >> 0x38\n 75458: u64 [sp + 0x348] = a0\n 75462: u8 [sp + 0x55f] = a0\n 75466: a0 = t0 >> 0x30\n 75469: u64 [sp + 0x318] = a0\n 75473: u8 [sp + 0x55e] = a0\n 75477: a0 = t0 >> 0x28\n 75480: u64 [sp + 0x310] = a0\n 75484: u8 [sp + 0x55d] = a0\n 75488: a0 = t0 >> 0x20\n 75491: u64 [sp + 0x308] = a0\n 75495: u8 [sp + 0x55c] = a0\n 75499: a0 = t0 >> 0x18\n 75502: u64 [sp + 0x300] = a0\n 75506: u8 [sp + 0x55b] = a0\n 75510: a0 = t0 >> 0x10\n 75513: u64 [sp + 0x2f8] = a0\n 75517: u8 [sp + 0x55a] = a0\n 75521: a0 = t0 >> 0x8\n 75524: u64 [sp + 0x268] = a0\n 75528: u8 [sp + 0x559] = a0\n 75532: a0 = t1 << 0x38\n 75535: a0 = a0 >> 0x3b\n 75538: a4 = sp + 0x540\n 75542: a4 = a4 - a0\n 75545: a0 = u8 [a4 + 0x19]\n 75548: a2 = u8 [a4 + 0x18]\n 75551: a3 = u8 [a4 + 0x1a]\n 75554: a5 = u8 [a4 + 0x1b]\n 75557: a0 = a0 << 0x8\n 75560: a0 = a0 | a2\n 75563: a3 = a3 << 0x10\n 75566: a5 = a5 << 0x18\n 75569: a3 = a3 | a5\n 75572: a0 = a0 | a3\n 75575: a2 = u8 [a4 + 0x1d]\n 75578: a3 = u8 [a4 + 0x1c]\n 75581: a5 = u8 [a4 + 0x1e]\n 75584: s1 = u8 [a4 + 0x1f]\n 75587: a2 = a2 << 0x8\n 75590: a2 = a2 | a3\n 75593: a5 = a5 << 0x10\n 75596: s1 = s1 << 0x18\n 75599: a5 = a5 | s1\n 75602: a2 = a2 | a5\n 75605: a2 = a2 << 0x20\n 75608: a3 = a2 | a0\n 75611: a0 = u8 [a4 + 0x11]\n 75614: a2 = u8 [a4 + 0x10]\n 75617: a5 = u8 [a4 + 0x12]\n 75620: s1 = u8 [a4 + 0x13]\n 75623: a0 = a0 << 0x8\n 75626: a0 = a0 | a2\n 75629: a5 = a5 << 0x10\n 75632: s1 = s1 << 0x18\n 75635: a5 = a5 | s1\n 75638: a0 = a0 | a5\n 75641: a2 = u8 [a4 + 0x15]\n 75644: a5 = u8 [a4 + 0x14]\n 75647: s1 = u8 [a4 + 0x16]\n 75650: a1 = u8 [a4 + 0x17]\n 75653: a2 = a2 << 0x8\n 75656: a2 = a2 | a5\n 75659: s1 = s1 << 0x10\n 75662: a1 = a1 << 0x18\n 75665: a1 = a1 | s1\n 75668: a1 = a1 | a2\n 75671: a1 = a1 << 0x20\n 75674: t2 = a1 | a0\n 75677: a1 = t1 & 0x7\n 75680: a0 = a3 << a1\n 75683: a2 = t2 >> 0x1\n 75686: t1 = a1 ^ 0x3f\n 75689: a2 = a2 >> t1\n 75692: a0 = a0 | a2\n 75695: u64 [sp + 0x3a0] = a0\n 75699: a0 = u8 [a4 + 0x9]\n 75702: a2 = u8 [a4 + 0x8]\n 75705: a5 = u8 [a4 + 0xa]\n 75708: a3 = u8 [a4 + 0xb]\n 75711: a0 = a0 << 0x8\n 75714: a0 = a0 | a2\n 75717: a5 = a5 << 0x10\n 75720: a3 = a3 << 0x18\n 75723: a3 = a3 | a5\n 75726: a0 = a0 | a3\n 75729: a2 = u8 [a4 + 0xd]\n 75732: a3 = u8 [a4 + 0xc]\n 75735: a5 = u8 [a4 + 0xe]\n 75738: s1 = u8 [a4 + 0xf]\n 75741: a2 = a2 << 0x8\n 75744: a2 = a2 | a3\n 75747: a5 = a5 << 0x10\n 75750: s1 = s1 << 0x18\n 75753: a5 = a5 | s1\n 75756: a2 = a2 | a5\n 75759: a2 = a2 << 0x20\n 75762: a5 = a2 | a0\n 75765: a0 = a5 >> 0x1\n 75768: a2 = a1 ^ 0xffffffffffffffff\n 75771: a0 = a0 >> a2\n 75774: a2 = t2 << a1\n 75777: a0 = a0 | a2\n 75780: u64 [sp + 0x398] = a0\n 75784: a0 = u8 [a4 + 0x1]\n 75787: a2 = u8 [a4]\n 75789: a3 = u8 [a4 + 0x2]\n 75792: s1 = u8 [a4 + 0x3]\n 75795: a0 = a0 << 0x8\n 75798: a0 = a0 | a2\n 75801: a3 = a3 << 0x10\n 75804: s1 = s1 << 0x18\n 75807: a3 = a3 | s1\n 75810: a0 = a0 | a3\n 75813: a2 = u8 [a4 + 0x5]\n 75816: a3 = u8 [a4 + 0x4]\n 75819: s1 = u8 [a4 + 0x6]\n 75822: a4 = u8 [a4 + 0x7]\n 75825: a2 = a2 << 0x8\n 75828: a2 = a2 | a3\n 75831: s1 = s1 << 0x10\n 75834: a4 = a4 << 0x18\n 75837: a4 = a4 | s1\n 75840: a2 = a2 | a4\n 75843: a4 = u64 [sp + 0x380]\n 75847: a2 = a2 << 0x20\n 75850: a0 = a0 | a2\n 75853: a2 = a0 >> 0x1\n 75856: a2 = a2 >> t1\n 75859: s1 = u64 [sp + 0x368]\n 75863: a3 = a5 << a1\n 75866: a5 = u64 [sp + 0x370]\n 75870: a2 = a2 | a3\n 75873: u64 [sp + 0x388] = a2\n 75877: a2 = a4 | a5\n 75880: a3 = u64 [sp + 0x3a8]\n 75884: a3 = a3 | s1\n 75887: a2 = a2 | a3\n 75890: a0 = a0 << a1\n 75893: u64 [sp + 0x390] = a0\n 75897: jump @346 if a2 == 0\n      : @343 (gas: 224)\n 75901: u64 [sp + 888] = 0\n 75905: u64 [sp + 864] = 0\n 75909: a0 = u64 [sp + 0x260]\n 75913: u8 [sp + 0x4e7] = a0\n 75917: a0 = u64 [sp + 0x258]\n 75921: u8 [sp + 0x4e6] = a0\n 75925: a0 = u64 [sp + 0x250]\n 75929: u8 [sp + 0x4e5] = a0\n 75933: a0 = u64 [sp + 0x248]\n 75937: u8 [sp + 0x4e4] = a0\n 75941: a0 = u64 [sp + 0x220]\n 75945: u8 [sp + 0x4e3] = a0\n 75949: a0 = u64 [sp + 0x218]\n 75953: u8 [sp + 0x4e2] = a0\n 75957: a0 = u64 [sp + 0x210]\n 75961: u8 [sp + 0x4e1] = a0\n 75965: a0 = u64 [sp + 0x208]\n 75969: u8 [sp + 0x4ef] = a0\n 75973: a0 = u64 [sp + 0x1d0]\n 75977: u8 [sp + 0x4ee] = a0\n 75981: a0 = u64 [sp + 0x1c8]\n 75985: u8 [sp + 0x4ed] = a0\n 75989: a0 = u64 [sp + 0x1c0]\n 75993: u8 [sp + 0x4ec] = a0\n 75997: a0 = u64 [sp + 0x1b8]\n 76001: u8 [sp + 0x4eb] = a0\n 76005: a0 = u64 [sp + 0x1b0]\n 76009: u8 [sp + 0x4ea] = a0\n 76013: a0 = u64 [sp + 0x1a8]\n 76017: u8 [sp + 0x4e9] = a0\n 76021: a0 = u64 [sp + 0x1a0]\n 76025: u8 [sp + 0x4f7] = a0\n 76029: a0 = u64 [sp + 0x198]\n 76033: u8 [sp + 0x4f6] = a0\n 76037: a0 = u64 [sp + 0x190]\n 76041: u8 [sp + 0x4f5] = a0\n 76045: a0 = u64 [sp + 0x188]\n 76049: u8 [sp + 0x4f4] = a0\n 76053: a0 = u64 [sp + 0x180]\n 76057: u8 [sp + 0x4f3] = a0\n 76061: u8 [sp + 1311] = 0\n 76065: u8 [sp + 1310] = 0\n 76069: u8 [sp + 1309] = 0\n 76073: u8 [sp + 1308] = 0\n 76077: u8 [sp + 1307] = 0\n 76081: u8 [sp + 1306] = 0\n 76085: u8 [sp + 1305] = 0\n 76089: u8 [sp + 1304] = 0\n 76093: u8 [sp + 1303] = 0\n 76097: u8 [sp + 1302] = 0\n 76101: u8 [sp + 1301] = 0\n 76105: u8 [sp + 1300] = 0\n 76109: u8 [sp + 1299] = 0\n 76113: u8 [sp + 1298] = 0\n 76117: u8 [sp + 1297] = 0\n 76121: u8 [sp + 1296] = 0\n 76125: u8 [sp + 1295] = 0\n 76129: u8 [sp + 1294] = 0\n 76133: u8 [sp + 1293] = 0\n 76137: u8 [sp + 1292] = 0\n 76141: u8 [sp + 1291] = 0\n 76145: u8 [sp + 1290] = 0\n 76149: u8 [sp + 1289] = 0\n 76153: u8 [sp + 1288] = 0\n 76157: u8 [sp + 1287] = 0\n 76161: u8 [sp + 1286] = 0\n 76165: u8 [sp + 1285] = 0\n 76169: u8 [sp + 1284] = 0\n 76173: u8 [sp + 1283] = 0\n 76177: u8 [sp + 1282] = 0\n 76181: u8 [sp + 1281] = 0\n 76185: u8 [sp + 1280] = 0\n 76189: a0 = u64 [sp + 0x2d8]\n 76193: u8 [sp + 0x4e0] = a0\n 76197: a0 = u64 [sp + 0x2a0]\n 76201: u8 [sp + 0x4e8] = a0\n 76205: u8 [sp + 0x4f0] = ra\n 76209: u8 [sp + 0x4f8] = t0\n 76213: a0 = u64 [sp + 0x358]\n 76217: u8 [sp + 0x4f2] = a0\n 76221: a0 = u64 [sp + 0x350]\n 76225: u8 [sp + 0x4f1] = a0\n 76229: a0 = u64 [sp + 0x348]\n 76233: u8 [sp + 0x4ff] = a0\n 76237: a0 = u64 [sp + 0x318]\n 76241: u8 [sp + 0x4fe] = a0\n 76245: a0 = u64 [sp + 0x310]\n 76249: u8 [sp + 0x4fd] = a0\n 76253: a0 = u64 [sp + 0x308]\n 76257: u8 [sp + 0x4fc] = a0\n 76261: a0 = u64 [sp + 0x300]\n 76265: u8 [sp + 0x4fb] = a0\n 76269: a0 = u64 [sp + 0x2f8]\n 76273: u8 [sp + 0x4fa] = a0\n 76277: a0 = u64 [sp + 0x268]\n 76281: u8 [sp + 0x4f9] = a0\n 76285: s1 = u64 [sp + 0x3a8]\n 76289: a0 = s1 << 0x38\n 76292: a0 = a0 >> 0x3b\n 76295: a1 = sp + 0x4e0\n 76299: a1 = a1 + a0\n 76302: a0 = u8 [a1 + 0x11]\n 76305: a2 = u8 [a1 + 0x10]\n 76308: a3 = u8 [a1 + 0x12]\n 76311: a4 = u8 [a1 + 0x13]\n 76314: a0 = a0 << 0x8\n 76317: a0 = a0 | a2\n 76320: a3 = a3 << 0x10\n 76323: a4 = a4 << 0x18\n 76326: a3 = a3 | a4\n 76329: a0 = a0 | a3\n 76332: a2 = u8 [a1 + 0x15]\n 76335: a3 = u8 [a1 + 0x14]\n 76338: a4 = u8 [a1 + 0x16]\n 76341: a5 = u8 [a1 + 0x17]\n 76344: a2 = a2 << 0x8\n 76347: a2 = a2 | a3\n 76350: a4 = a4 << 0x10\n 76353: a5 = a5 << 0x18\n 76356: a4 = a4 | a5\n 76359: a2 = a2 | a4\n 76362: a2 = a2 << 0x20\n 76365: t1 = a2 | a0\n 76368: a3 = s1 & 0x7\n 76371: t2 = t1 >> a3\n 76374: a2 = u8 [a1 + 0x19]\n 76377: a4 = u8 [a1 + 0x18]\n 76380: a5 = u8 [a1 + 0x1a]\n 76383: s1 = u8 [a1 + 0x1b]\n 76386: a2 = a2 << 0x8\n 76389: a2 = a2 | a4\n 76392: a5 = a5 << 0x10\n 76395: s1 = s1 << 0x18\n 76398: a5 = a5 | s1\n 76401: a2 = a2 | a5\n 76404: a4 = u8 [a1 + 0x1d]\n 76407: a5 = u8 [a1 + 0x1c]\n 76410: s1 = u8 [a1 + 0x1e]\n 76413: a0 = u8 [a1 + 0x1f]\n 76416: a4 = a4 << 0x8\n 76419: a4 = a4 | a5\n 76422: s1 = s1 << 0x10\n 76425: a0 = a0 << 0x18\n 76428: a0 = a0 | s1\n 76431: a0 = a0 | a4\n 76434: a0 = a0 << 0x20\n 76437: t0 = a0 | a2\n 76440: a0 = t0 << 0x1\n 76443: ra = a3 ^ 0x3f\n 76446: a0 = a0 << ra\n 76449: a0 = t2 | a0\n 76452: u64 [sp + 0x358] = a0\n 76456: a0 = u8 [a1 + 0x9]\n 76459: a2 = u8 [a1 + 0x8]\n 76462: a5 = u8 [a1 + 0xa]\n 76465: s1 = u8 [a1 + 0xb]\n 76468: a0 = a0 << 0x8\n 76471: a0 = a0 | a2\n 76474: a5 = a5 << 0x10\n 76477: s1 = s1 << 0x18\n 76480: a5 = a5 | s1\n 76483: a0 = a0 | a5\n 76486: a2 = u8 [a1 + 0xd]\n 76489: a5 = u8 [a1 + 0xc]\n 76492: s1 = u8 [a1 + 0xe]\n 76495: a4 = u8 [a1 + 0xf]\n 76498: a2 = a2 << 0x8\n 76501: a2 = a2 | a5\n 76504: s1 = s1 << 0x10\n 76507: a4 = a4 << 0x18\n 76510: a4 = a4 | s1\n 76513: a2 = a2 | a4\n 76516: a2 = a2 << 0x20\n 76519: a0 = a0 | a2\n 76522: a2 = a0 >> a3\n 76525: t1 = t1 << 0x1\n 76528: a4 = a3 ^ 0xffffffffffffffff\n 76531: a4 = t1 << a4\n 76534: t1 = a2 | a4\n 76537: a2 = u8 [a1 + 0x1]\n 76540: a4 = u8 [a1]\n 76542: a5 = u8 [a1 + 0x2]\n 76545: s1 = u8 [a1 + 0x3]\n 76548: a2 = a2 << 0x8\n 76551: a2 = a2 | a4\n 76554: a5 = a5 << 0x10\n 76557: s1 = s1 << 0x18\n 76560: a5 = a5 | s1\n 76563: a2 = a2 | a5\n 76566: a4 = u8 [a1 + 0x5]\n 76569: a5 = u8 [a1 + 0x4]\n 76572: s1 = u8 [a1 + 0x6]\n 76575: a1 = u8 [a1 + 0x7]\n 76578: a4 = a4 << 0x8\n 76581: a4 = a4 | a5\n 76584: s1 = s1 << 0x10\n 76587: a1 = a1 << 0x18\n 76590: a1 = a1 | s1\n 76593: a1 = a1 | a4\n 76596: a1 = a1 << 0x20\n 76599: a1 = a1 | a2\n 76602: a1 = a1 >> a3\n 76605: a0 = a0 << 0x1\n 76608: a4 = a0 << ra\n 76611: t2 = a1 | a4\n 76614: a5 = t0 >> a3\n 76617: a1 = u64 [sp + 0x3c0]\n 76621: a0 = a1 <u 0x1\n 76624: a2 = u64 [sp + 0x3d0]\n 76628: a0 = a2 - a0\n 76631: u64 [sp + 0x318] = a0\n 76635: a0 = a1 | a2\n 76638: a0 = a0 <u 0x1\n 76641: a2 = u64 [sp + 0x3c8]\n 76645: a3 = a2 - a0\n 76648: u64 [sp + 0x310] = a3\n 76652: a0 = a2 <u a0\n 76655: a2 = u64 [sp + 0x3d8]\n 76659: a2 = a2 - a0\n 76662: u64 [sp + 0x308] = a2\n 76666: a1 = a1 + 0xffffffffffffffff\n 76669: u64 [sp + 0x300] = a1\n 76673: a3 = u64 [sp + 0x398]\n 76677: fallthrough\n      : @344 (gas: 103)\n 76678: u64 [sp + 840] = 0\n 76682: a0 = t2 >> 0x3f\n 76685: s1 = t1 << 0x1\n 76688: t0 = s1 | a0\n 76691: a4 = t2 << 0x1\n 76694: a2 = u64 [sp + 0x3a0]\n 76698: a0 = a2 >> 0x3f\n 76701: ra = a4 | a0\n 76704: a0 = u64 [sp + 0x318]\n 76708: s1 = a0 ^ t0\n 76711: t2 = a0 <u t0\n 76714: a0 = u64 [sp + 0x300]\n 76718: a0 = a0 <u ra\n 76721: a0 = t2 if s1 != 0\n 76724: s1 = a5 << 0x1\n 76727: a5 = u64 [sp + 0x358]\n 76731: a1 = a5 >> 0x3f\n 76734: t2 = s1 | a1\n 76737: u64 [sp + 0x350] = t2\n 76741: s1 = t1 >> 0x3f\n 76744: a5 = a5 << 0x1\n 76747: s1 = s1 | a5\n 76750: a5 = a2 << 0x1\n 76753: a2 = a3 >> 0x3f\n 76756: a2 = a2 | a5\n 76759: a5 = a3 << 0x1\n 76762: a1 = u64 [sp + 0x388]\n 76766: a3 = a1 >> 0x3f\n 76769: a3 = a3 | a5\n 76772: a5 = a1 << 0x1\n 76775: a4 = u64 [sp + 0x390]\n 76779: a1 = a4 >> 0x3f\n 76782: a1 = a1 | a5\n 76785: a5 = a4 << 0x1\n 76788: a4 = u64 [sp + 0x378]\n 76792: a4 = a4 | a5\n 76795: u64 [sp + 0x390] = a4\n 76799: a4 = u64 [sp + 0x360]\n 76803: a1 = a1 | a4\n 76806: u64 [sp + 0x388] = a1\n 76810: a3 = a3 | a4\n 76813: u64 [sp + 0x398] = a3\n 76817: a2 = a2 | a4\n 76820: u64 [sp + 0x3a0] = a2\n 76824: a2 = u64 [sp + 0x310]\n 76828: a1 = a2 - s1\n 76831: a0 = a1 <u a0\n 76834: a1 = a2 <u s1\n 76837: a2 = u64 [sp + 0x308]\n 76841: a2 = a2 - t2\n 76844: a2 = a2 - a1\n 76847: a0 = a2 - a0\n 76850: a0 = a0 >>a 0x3f\n 76853: a2 = u64 [sp + 0x3c0]\n 76857: a2 = a2 & a0\n 76860: a3 = u64 [sp + 0x3d0]\n 76864: a3 = a3 & a0\n 76867: t1 = t0 ^ a3\n 76870: a5 = t0 <u a3\n 76873: a1 = ra <u a2\n 76876: t2 = ra\n 76878: a5 = a1 if t1 == 0\n 76881: a4 = u64 [sp + 0x3c8]\n 76885: t1 = a0 & a4\n 76888: ra = s1 - t1\n 76891: a4 = ra - a5\n 76894: u64 [sp + 0x358] = a4\n 76898: ra = ra <u a5\n 76901: s1 = s1 <u t1\n 76904: a4 = u64 [sp + 0x3d8]\n 76908: a4 = a4 & a0\n 76911: a5 = u64 [sp + 0x350]\n 76915: a4 = a5 - a4\n 76918: a4 = a4 - s1\n 76921: a4 = a4 - ra\n 76924: a3 = t0 - a3\n 76927: t1 = a3 - a1\n 76930: t2 = t2 - a2\n 76933: s1 = u64 [sp + 0x3a8]\n 76937: a5 = u64 [sp + 0x380]\n 76941: a1 = s1 | a5\n 76944: a1 = a1 <u 0x1\n 76947: a3 = u64 [sp + 0x368]\n 76951: a2 = a3 <u a1\n 76954: a1 = a3 - a1\n 76957: a3 = s1 <u 0x1\n 76960: a5 = a5 - a3\n 76963: a3 = u64 [sp + 0x370]\n 76967: a3 = a3 - a2\n 76970: s1 = s1 + 0xffffffffffffffff\n 76973: u64 [sp + 0x380] = a5\n 76977: u64 [sp + 0x370] = a3\n 76981: a2 = a5 | a3\n 76984: a5 = a4\n 76986: u64 [sp + 0x3a8] = s1\n 76990: a3 = s1 | a1\n 76993: a2 = a2 | a3\n 76996: a3 = u64 [sp + 0x398]\n 77000: a0 = a0 & 0x1\n 77003: u64 [sp + 0x378] = a0\n 77007: u64 [sp + 0x368] = a1\n 77011: u64 [sp + 864] = 0\n 77015: jump @344 if a2 != 0\n      : @345 (gas: 1)\n 77019: jump @347\n      : @346 (gas: 4)\n 77021: u64 [sp + 888] = 0\n 77025: u64 [sp + 840] = 0\n 77029: a3 = u64 [sp + 0x398]\n 77033: fallthrough\n      : @347 (gas: 21)\n 77034: a0 = a3 >> 0x3f\n 77037: a1 = u64 [sp + 0x3a0]\n 77041: a1 = a1 << 0x1\n 77044: a0 = a0 | a1\n 77047: a4 = u64 [sp + 0x388]\n 77051: a1 = a4 >> 0x3f\n 77054: a2 = a3 << 0x1\n 77057: a1 = a1 | a2\n 77060: a5 = u64 [sp + 0x390]\n 77064: a2 = a5 >> 0x3f\n 77067: a4 = a4 << 0x1\n 77070: a5 = a5 << 0x1\n 77073: a3 = u64 [sp + 0x378]\n 77077: t1 = a3 | a5\n 77080: a3 = u64 [sp + 0x348]\n 77084: a2 = a2 | a3\n 77087: t0 = a2 | a4\n 77090: s1 = a3 | a1\n 77093: a0 = a0 | a3\n 77096: u64 [sp + 0x268] = a0\n 77100: fallthrough\n      : @348 (gas: 4)\n 77101: a3 = u64 [sp + 0x2f0]\n 77105: t2 = u64 [sp + 0x2d0]\n 77109: a5 = u64 [sp + 0x2e8]\n 77113: fallthrough\n      : @349 (gas: 59)\n 77114: u64 [sp + 0x2e8] = a5\n 77118: u64 [sp + 0x250] = t0\n 77122: u64 [sp + 0x258] = s1\n 77126: u64 [sp + 0x260] = t1\n 77130: t0 = u64 [sp + 0x2c0]\n 77134: a0 = t0 | a3\n 77137: a1 = t2 | a5\n 77140: a0 = a0 | a1\n 77143: a0 = a0 <u 0x1\n 77146: a1 = u64 [sp + 0x320]\n 77150: a0 = a0 | a1\n 77153: u64 [sp + 0x3a8] = a0\n 77157: a1 = clz a3\n 77159: a2 = a1 + 0x40\n 77162: a1 = clz a5\n 77164: a1 = a2 if a5 == 0\n 77167: a2 = clz t0\n 77169: a2 = a2 + 0x40\n 77172: a4 = a3\n 77174: u64 [sp + 0x2f0] = a3\n 77178: a3 = clz t2\n 77180: a3 = a2 if t2 == 0\n 77183: a2 = a3 + 0x80\n 77187: a4 = a4 | a5\n 77190: a1 = a2 if a4 == 0\n 77193: a2 = a2 <u a3\n 77196: a2 = 0 if a4 != 0\n 77198: a5 = u64 [sp + 0x330]\n 77202: a3 = a5 ^ a2\n 77205: a0 = a5 <u a2\n 77208: ra = u64 [sp + 0x328]\n 77212: s1 = ra <u a1\n 77215: a0 = s1 if a3 == 0\n 77218: a4 = a0 <u 0x1\n 77221: a4 = a4 + 0xffffffffffffffff\n 77224: t1 = -a0\n 77226: a3 = a5 - a2\n 77229: s1 = a3 - s1\n 77232: a3 = t2\n 77234: t2 = ra - a1\n 77237: a1 = t1 >u 0\n 77239: a2 = a4 >u 0\n 77241: a2 = a1 if a4 == 0\n 77244: a1 = s1 >u 0\n 77246: a5 = t2 <u 0x100\n 77250: a5 = a5 ^ 0x1\n 77253: a5 = a1 if s1 != 0\n 77256: a5 = a2 if a0 != 0\n 77259: a0 = u64 [sp + 0x3a8]\n 77263: a5 = a5 | a0\n 77266: a0 = u64 [sp + 0x2e8]\n 77270: a0 = 0 if a5 != 0\n 77272: u64 [sp + 0x398] = a0\n 77276: a1 = u64 [sp + 0x2f0]\n 77280: a1 = 0 if a5 != 0\n 77282: a2 = a3\n 77284: a2 = 0 if a5 != 0\n 77286: t0 = 0 if a5 != 0\n 77288: jump @357 if a5 != 0\n      : @350 (gas: 6)\n 77292: a5 = t2 ^ 0xff\n 77296: a5 = a5 | t1\n 77299: a3 = s1 | a4\n 77302: a3 = a3 | a5\n 77305: ra = u64 [sp + 0x3d0]\n 77309: jump @358 if a3 == 0\n      : @351 (gas: 259)\n 77313: a1 = t2 + 0x1\n 77316: u64 [sp + 0x3a8] = a1\n 77320: a0 = a1 <u 0x1\n 77323: a0 = a0 + s1\n 77326: u64 [sp + 0x380] = a0\n 77330: a0 = a0 | a1\n 77333: a0 = a0 <u 0x1\n 77336: a0 = a0 + t1\n 77339: u64 [sp + 0x370] = a0\n 77343: a0 = a0 <u t1\n 77346: a0 = a0 + a4\n 77349: u64 [sp + 0x378] = a0\n 77353: t0 = 0xff - t2\n 77357: a0 = u64 [sp + 0x2c0]\n 77361: u8 [sp + 0x4c0] = a0\n 77365: u8 [sp + 1215] = 0\n 77369: u8 [sp + 1214] = 0\n 77373: u8 [sp + 1213] = 0\n 77377: u8 [sp + 1212] = 0\n 77381: u8 [sp + 1211] = 0\n 77385: u8 [sp + 1210] = 0\n 77389: u8 [sp + 1209] = 0\n 77393: u8 [sp + 1208] = 0\n 77397: u8 [sp + 1207] = 0\n 77401: u8 [sp + 1206] = 0\n 77405: u8 [sp + 1205] = 0\n 77409: u8 [sp + 1204] = 0\n 77413: u8 [sp + 1203] = 0\n 77417: u8 [sp + 1202] = 0\n 77421: u8 [sp + 1201] = 0\n 77425: u8 [sp + 1200] = 0\n 77429: u8 [sp + 1199] = 0\n 77433: u8 [sp + 1198] = 0\n 77437: u8 [sp + 1197] = 0\n 77441: u8 [sp + 1196] = 0\n 77445: u8 [sp + 1195] = 0\n 77449: u8 [sp + 1194] = 0\n 77453: u8 [sp + 1193] = 0\n 77457: u8 [sp + 1192] = 0\n 77461: u8 [sp + 1191] = 0\n 77465: u8 [sp + 1190] = 0\n 77469: u8 [sp + 1189] = 0\n 77473: u8 [sp + 1188] = 0\n 77477: u8 [sp + 1187] = 0\n 77481: u8 [sp + 1186] = 0\n 77485: u8 [sp + 1185] = 0\n 77489: u8 [sp + 1184] = 0\n 77493: a1 = u64 [sp + 0x2d0]\n 77497: u8 [sp + 0x4c8] = a1\n 77501: a2 = a0 >> 0x38\n 77504: u64 [sp + 0x220] = a2\n 77508: u8 [sp + 0x4c7] = a2\n 77512: a2 = a0 >> 0x30\n 77515: u64 [sp + 0x218] = a2\n 77519: u8 [sp + 0x4c6] = a2\n 77523: a2 = a0 >> 0x28\n 77526: u64 [sp + 0x210] = a2\n 77530: u8 [sp + 0x4c5] = a2\n 77534: a2 = a0 >> 0x20\n 77537: u64 [sp + 0x208] = a2\n 77541: u8 [sp + 0x4c4] = a2\n 77545: a2 = a0 >> 0x18\n 77548: u64 [sp + 0x1d0] = a2\n 77552: u8 [sp + 0x4c3] = a2\n 77556: a2 = a0 >> 0x10\n 77559: u64 [sp + 0x1c8] = a2\n 77563: u8 [sp + 0x4c2] = a2\n 77567: u64 [sp + 0x2c0] = a0\n 77571: a0 = a0 >> 0x8\n 77574: u64 [sp + 0x1c0] = a0\n 77578: u8 [sp + 0x4c1] = a0\n 77582: t2 = u64 [sp + 0x2f0]\n 77586: u8 [sp + 0x4d0] = t2\n 77590: a0 = a1 >> 0x38\n 77593: u64 [sp + 0x1b8] = a0\n 77597: u8 [sp + 0x4cf] = a0\n 77601: a0 = a1 >> 0x30\n 77604: u64 [sp + 0x1b0] = a0\n 77608: u8 [sp + 0x4ce] = a0\n 77612: a0 = a1 >> 0x28\n 77615: u64 [sp + 0x1a8] = a0\n 77619: u8 [sp + 0x4cd] = a0\n 77623: a0 = a1 >> 0x20\n 77626: u64 [sp + 0x1a0] = a0\n 77630: u8 [sp + 0x4cc] = a0\n 77634: a0 = a1 >> 0x18\n 77637: u64 [sp + 0x198] = a0\n 77641: u8 [sp + 0x4cb] = a0\n 77645: a0 = a1 >> 0x10\n 77648: u64 [sp + 0x190] = a0\n 77652: u8 [sp + 0x4ca] = a0\n 77656: u64 [sp + 0x2d0] = a1\n 77660: a1 = a1 >> 0x8\n 77663: u64 [sp + 0x188] = a1\n 77667: u8 [sp + 0x4c9] = a1\n 77671: ra = u64 [sp + 0x2e8]\n 77675: u8 [sp + 0x4d8] = ra\n 77679: a0 = t2 >> 0x38\n 77682: u64 [sp + 0x180] = a0\n 77686: u8 [sp + 0x4d7] = a0\n 77690: a0 = t2 >> 0x30\n 77693: u64 [sp + 0x178] = a0\n 77697: u8 [sp + 0x4d6] = a0\n 77701: a0 = t2 >> 0x28\n 77704: u64 [sp + 0x170] = a0\n 77708: u8 [sp + 0x4d5] = a0\n 77712: a0 = t2 >> 0x20\n 77715: u64 [sp + 0x168] = a0\n 77719: u8 [sp + 0x4d4] = a0\n 77723: a0 = t2 >> 0x18\n 77726: u64 [sp + 0x160] = a0\n 77730: u8 [sp + 0x4d3] = a0\n 77734: a0 = t2 >> 0x10\n 77737: u64 [sp + 0x358] = a0\n 77741: u8 [sp + 0x4d2] = a0\n 77745: a0 = t2 >> 0x8\n 77748: u64 [sp + 0x350] = a0\n 77752: u8 [sp + 0x4d1] = a0\n 77756: a0 = ra >> 0x38\n 77759: u64 [sp + 0x348] = a0\n 77763: u8 [sp + 0x4df] = a0\n 77767: a0 = ra >> 0x30\n 77770: u64 [sp + 0x318] = a0\n 77774: u8 [sp + 0x4de] = a0\n 77778: a0 = ra >> 0x28\n 77781: u64 [sp + 0x310] = a0\n 77785: u8 [sp + 0x4dd] = a0\n 77789: a0 = ra >> 0x20\n 77792: u64 [sp + 0x308] = a0\n 77796: u8 [sp + 0x4dc] = a0\n 77800: a0 = ra >> 0x18\n 77803: u64 [sp + 0x300] = a0\n 77807: u8 [sp + 0x4db] = a0\n 77811: a0 = ra >> 0x10\n 77814: u64 [sp + 0x2f8] = a0\n 77818: u8 [sp + 0x4da] = a0\n 77822: a0 = ra >> 0x8\n 77825: u64 [sp + 0x248] = a0\n 77829: u8 [sp + 0x4d9] = a0\n 77833: a0 = t0 << 0x38\n 77836: a0 = a0 >> 0x3b\n 77839: a2 = sp + 0x4c0\n 77843: a2 = a2 - a0\n 77846: a0 = u8 [a2 + 0x19]\n 77849: a3 = u8 [a2 + 0x18]\n 77852: a4 = u8 [a2 + 0x1a]\n 77855: a5 = u8 [a2 + 0x1b]\n 77858: a0 = a0 << 0x8\n 77861: a0 = a0 | a3\n 77864: a4 = a4 << 0x10\n 77867: a5 = a5 << 0x18\n 77870: a4 = a4 | a5\n 77873: a0 = a0 | a4\n 77876: a3 = u8 [a2 + 0x1d]\n 77879: a4 = u8 [a2 + 0x1c]\n 77882: a5 = u8 [a2 + 0x1e]\n 77885: s1 = u8 [a2 + 0x1f]\n 77888: a3 = a3 << 0x8\n 77891: a3 = a3 | a4\n 77894: a5 = a5 << 0x10\n 77897: s1 = s1 << 0x18\n 77900: a5 = a5 | s1\n 77903: a3 = a3 | a5\n 77906: a3 = a3 << 0x20\n 77909: a4 = a3 | a0\n 77912: a0 = u8 [a2 + 0x11]\n 77915: a3 = u8 [a2 + 0x10]\n 77918: a5 = u8 [a2 + 0x12]\n 77921: s1 = u8 [a2 + 0x13]\n 77924: a0 = a0 << 0x8\n 77927: a0 = a0 | a3\n 77930: a5 = a5 << 0x10\n 77933: s1 = s1 << 0x18\n 77936: a5 = a5 | s1\n 77939: a0 = a0 | a5\n 77942: a3 = u8 [a2 + 0x15]\n 77945: a5 = u8 [a2 + 0x14]\n 77948: s1 = u8 [a2 + 0x16]\n 77951: a1 = u8 [a2 + 0x17]\n 77954: a3 = a3 << 0x8\n 77957: a3 = a3 | a5\n 77960: s1 = s1 << 0x10\n 77963: a1 = a1 << 0x18\n 77966: a1 = a1 | s1\n 77969: a1 = a1 | a3\n 77972: a1 = a1 << 0x20\n 77975: t1 = a1 | a0\n 77978: a1 = t0 & 0x7\n 77981: a0 = a4 << a1\n 77984: a5 = t1 >> 0x1\n 77987: t0 = a1 ^ 0x3f\n 77990: a5 = a5 >> t0\n 77993: a0 = a0 | a5\n 77996: u64 [sp + 0x3a0] = a0\n 78000: a0 = u8 [a2 + 0x9]\n 78003: a5 = u8 [a2 + 0x8]\n 78006: s1 = u8 [a2 + 0xa]\n 78009: a4 = u8 [a2 + 0xb]\n 78012: a0 = a0 << 0x8\n 78015: a0 = a0 | a5\n 78018: s1 = s1 << 0x10\n 78021: a4 = a4 << 0x18\n 78024: a4 = a4 | s1\n 78027: a0 = a0 | a4\n 78030: a4 = u8 [a2 + 0xd]\n 78033: a5 = u8 [a2 + 0xc]\n 78036: s1 = u8 [a2 + 0xe]\n 78039: a3 = u8 [a2 + 0xf]\n 78042: a4 = a4 << 0x8\n 78045: a4 = a4 | a5\n 78048: s1 = s1 << 0x10\n 78051: a3 = a3 << 0x18\n 78054: a3 = a3 | s1\n 78057: a3 = a3 | a4\n 78060: a3 = a3 << 0x20\n 78063: a5 = a3 | a0\n 78066: a0 = a5 >> 0x1\n 78069: a3 = a1 ^ 0xffffffffffffffff\n 78072: a0 = a0 >> a3\n 78075: a3 = t1 << a1\n 78078: t1 = u64 [sp + 0x370]\n 78082: a0 = a0 | a3\n 78085: u64 [sp + 0x398] = a0\n 78089: a0 = u8 [a2 + 0x1]\n 78092: a3 = u8 [a2]\n 78094: a4 = u8 [a2 + 0x2]\n 78097: s1 = u8 [a2 + 0x3]\n 78100: a0 = a0 << 0x8\n 78103: a0 = a0 | a3\n 78106: a4 = a4 << 0x10\n 78109: s1 = s1 << 0x18\n 78112: a4 = a4 | s1\n 78115: a0 = a0 | a4\n 78118: a3 = u8 [a2 + 0x5]\n 78121: a4 = u8 [a2 + 0x4]\n 78124: s1 = u8 [a2 + 0x6]\n 78127: a2 = u8 [a2 + 0x7]\n 78130: a3 = a3 << 0x8\n 78133: a3 = a3 | a4\n 78136: s1 = s1 << 0x10\n 78139: a2 = a2 << 0x18\n 78142: a2 = a2 | s1\n 78145: a4 = u64 [sp + 0x380]\n 78149: a2 = a2 | a3\n 78152: a2 = a2 << 0x20\n 78155: a0 = a0 | a2\n 78158: a2 = a0 >> 0x1\n 78161: a2 = a2 >> t0\n 78164: a3 = a5 << a1\n 78167: a5 = u64 [sp + 0x378]\n 78171: a2 = a2 | a3\n 78174: u64 [sp + 0x388] = a2\n 78178: a2 = a4 | a5\n 78181: a3 = u64 [sp + 0x3a8]\n 78185: a3 = a3 | t1\n 78188: a2 = a2 | a3\n 78191: a0 = a0 << a1\n 78194: u64 [sp + 0x390] = a0\n 78198: jump @355 if a2 == 0\n      : @352 (gas: 225)\n 78202: u64 [sp + 872] = 0\n 78206: u64 [sp + 864] = 0\n 78210: a0 = u64 [sp + 0x220]\n 78214: u8 [sp + 0x467] = a0\n 78218: a0 = u64 [sp + 0x218]\n 78222: u8 [sp + 0x466] = a0\n 78226: a0 = u64 [sp + 0x210]\n 78230: u8 [sp + 0x465] = a0\n 78234: a0 = u64 [sp + 0x208]\n 78238: u8 [sp + 0x464] = a0\n 78242: a0 = u64 [sp + 0x1d0]\n 78246: u8 [sp + 0x463] = a0\n 78250: a0 = u64 [sp + 0x1c8]\n 78254: u8 [sp + 0x462] = a0\n 78258: a0 = u64 [sp + 0x1c0]\n 78262: u8 [sp + 0x461] = a0\n 78266: a0 = u64 [sp + 0x1b8]\n 78270: u8 [sp + 0x46f] = a0\n 78274: a0 = u64 [sp + 0x1b0]\n 78278: u8 [sp + 0x46e] = a0\n 78282: a0 = u64 [sp + 0x1a8]\n 78286: u8 [sp + 0x46d] = a0\n 78290: a0 = u64 [sp + 0x1a0]\n 78294: u8 [sp + 0x46c] = a0\n 78298: a0 = u64 [sp + 0x198]\n 78302: u8 [sp + 0x46b] = a0\n 78306: a0 = u64 [sp + 0x190]\n 78310: u8 [sp + 0x46a] = a0\n 78314: a0 = u64 [sp + 0x188]\n 78318: u8 [sp + 0x469] = a0\n 78322: a0 = u64 [sp + 0x180]\n 78326: u8 [sp + 0x477] = a0\n 78330: a0 = u64 [sp + 0x178]\n 78334: u8 [sp + 0x476] = a0\n 78338: a0 = u64 [sp + 0x170]\n 78342: u8 [sp + 0x475] = a0\n 78346: a0 = u64 [sp + 0x168]\n 78350: u8 [sp + 0x474] = a0\n 78354: a0 = u64 [sp + 0x160]\n 78358: u8 [sp + 0x473] = a0\n 78362: u8 [sp + 1183] = 0\n 78366: u8 [sp + 1182] = 0\n 78370: u8 [sp + 1181] = 0\n 78374: u8 [sp + 1180] = 0\n 78378: u8 [sp + 1179] = 0\n 78382: u8 [sp + 1178] = 0\n 78386: u8 [sp + 1177] = 0\n 78390: u8 [sp + 1176] = 0\n 78394: u8 [sp + 1175] = 0\n 78398: u8 [sp + 1174] = 0\n 78402: u8 [sp + 1173] = 0\n 78406: u8 [sp + 1172] = 0\n 78410: u8 [sp + 1171] = 0\n 78414: u8 [sp + 1170] = 0\n 78418: u8 [sp + 1169] = 0\n 78422: u8 [sp + 1168] = 0\n 78426: u8 [sp + 1167] = 0\n 78430: u8 [sp + 1166] = 0\n 78434: u8 [sp + 1165] = 0\n 78438: u8 [sp + 1164] = 0\n 78442: u8 [sp + 1163] = 0\n 78446: u8 [sp + 1162] = 0\n 78450: u8 [sp + 1161] = 0\n 78454: u8 [sp + 1160] = 0\n 78458: u8 [sp + 1159] = 0\n 78462: u8 [sp + 1158] = 0\n 78466: u8 [sp + 1157] = 0\n 78470: u8 [sp + 1156] = 0\n 78474: u8 [sp + 1155] = 0\n 78478: u8 [sp + 1154] = 0\n 78482: u8 [sp + 1153] = 0\n 78486: u8 [sp + 1152] = 0\n 78490: a0 = u64 [sp + 0x2c0]\n 78494: u8 [sp + 0x460] = a0\n 78498: a0 = u64 [sp + 0x2d0]\n 78502: u8 [sp + 0x468] = a0\n 78506: u8 [sp + 0x470] = t2\n 78510: u8 [sp + 0x478] = ra\n 78514: a0 = u64 [sp + 0x358]\n 78518: u8 [sp + 0x472] = a0\n 78522: a0 = u64 [sp + 0x350]\n 78526: u8 [sp + 0x471] = a0\n 78530: a0 = u64 [sp + 0x348]\n 78534: u8 [sp + 0x47f] = a0\n 78538: a0 = u64 [sp + 0x318]\n 78542: u8 [sp + 0x47e] = a0\n 78546: a0 = u64 [sp + 0x310]\n 78550: u8 [sp + 0x47d] = a0\n 78554: a0 = u64 [sp + 0x308]\n 78558: u8 [sp + 0x47c] = a0\n 78562: a0 = u64 [sp + 0x300]\n 78566: u8 [sp + 0x47b] = a0\n 78570: a0 = u64 [sp + 0x2f8]\n 78574: u8 [sp + 0x47a] = a0\n 78578: a0 = u64 [sp + 0x248]\n 78582: u8 [sp + 0x479] = a0\n 78586: s1 = u64 [sp + 0x3a8]\n 78590: a0 = s1 << 0x38\n 78593: a0 = a0 >> 0x3b\n 78596: a1 = sp + 0x460\n 78600: a1 = a1 + a0\n 78603: a0 = u8 [a1 + 0x11]\n 78606: a2 = u8 [a1 + 0x10]\n 78609: a3 = u8 [a1 + 0x12]\n 78612: a4 = u8 [a1 + 0x13]\n 78615: a0 = a0 << 0x8\n 78618: a0 = a0 | a2\n 78621: a3 = a3 << 0x10\n 78624: a4 = a4 << 0x18\n 78627: a3 = a3 | a4\n 78630: a0 = a0 | a3\n 78633: a2 = u8 [a1 + 0x15]\n 78636: a3 = u8 [a1 + 0x14]\n 78639: a4 = u8 [a1 + 0x16]\n 78642: a5 = u8 [a1 + 0x17]\n 78645: a2 = a2 << 0x8\n 78648: a2 = a2 | a3\n 78651: a4 = a4 << 0x10\n 78654: a5 = a5 << 0x18\n 78657: a4 = a4 | a5\n 78660: a2 = a2 | a4\n 78663: a2 = a2 << 0x20\n 78666: t2 = a2 | a0\n 78669: s1 = s1 & 0x7\n 78672: ra = t2 >> s1\n 78675: a0 = u8 [a1 + 0x19]\n 78678: a2 = u8 [a1 + 0x18]\n 78681: a5 = u8 [a1 + 0x1a]\n 78684: a3 = u8 [a1 + 0x1b]\n 78687: a0 = a0 << 0x8\n 78690: a0 = a0 | a2\n 78693: a5 = a5 << 0x10\n 78696: a3 = a3 << 0x18\n 78699: a3 = a3 | a5\n 78702: a0 = a0 | a3\n 78705: a2 = u8 [a1 + 0x1d]\n 78708: a3 = u8 [a1 + 0x1c]\n 78711: a5 = u8 [a1 + 0x1e]\n 78714: a4 = u8 [a1 + 0x1f]\n 78717: a2 = a2 << 0x8\n 78720: a2 = a2 | a3\n 78723: a5 = a5 << 0x10\n 78726: a4 = a4 << 0x18\n 78729: a4 = a4 | a5\n 78732: a2 = a2 | a4\n 78735: a2 = a2 << 0x20\n 78738: t0 = a2 | a0\n 78741: a0 = t0 << 0x1\n 78744: t1 = s1 ^ 0x3f\n 78747: a0 = a0 << t1\n 78750: a0 = ra | a0\n 78753: u64 [sp + 0x358] = a0\n 78757: a0 = u8 [a1 + 0x9]\n 78760: a2 = u8 [a1 + 0x8]\n 78763: a3 = u8 [a1 + 0xa]\n 78766: a4 = u8 [a1 + 0xb]\n 78769: a0 = a0 << 0x8\n 78772: a0 = a0 | a2\n 78775: a3 = a3 << 0x10\n 78778: a4 = a4 << 0x18\n 78781: a3 = a3 | a4\n 78784: a0 = a0 | a3\n 78787: a2 = u8 [a1 + 0xd]\n 78790: a3 = u8 [a1 + 0xc]\n 78793: a4 = u8 [a1 + 0xe]\n 78796: a5 = u8 [a1 + 0xf]\n 78799: a2 = a2 << 0x8\n 78802: a2 = a2 | a3\n 78805: a4 = a4 << 0x10\n 78808: a5 = a5 << 0x18\n 78811: a4 = a4 | a5\n 78814: a2 = a2 | a4\n 78817: a2 = a2 << 0x20\n 78820: a5 = a2 | a0\n 78823: a0 = a5 >> s1\n 78826: t2 = t2 << 0x1\n 78829: a2 = s1 ^ 0xffffffffffffffff\n 78832: a2 = t2 << a2\n 78835: ra = a0 | a2\n 78838: a0 = u8 [a1 + 0x1]\n 78841: a2 = u8 [a1]\n 78843: a3 = u8 [a1 + 0x2]\n 78846: a4 = u8 [a1 + 0x3]\n 78849: a0 = a0 << 0x8\n 78852: a0 = a0 | a2\n 78855: a3 = a3 << 0x10\n 78858: a4 = a4 << 0x18\n 78861: a3 = a3 | a4\n 78864: a0 = a0 | a3\n 78867: a2 = u8 [a1 + 0x5]\n 78870: a3 = u8 [a1 + 0x4]\n 78873: a4 = u8 [a1 + 0x6]\n 78876: a1 = u8 [a1 + 0x7]\n 78879: a2 = a2 << 0x8\n 78882: a2 = a2 | a3\n 78885: a4 = a4 << 0x10\n 78888: a1 = a1 << 0x18\n 78891: a1 = a1 | a4\n 78894: a1 = a1 | a2\n 78897: a1 = a1 << 0x20\n 78900: a0 = a0 | a1\n 78903: a0 = a0 >> s1\n 78906: a5 = a5 << 0x1\n 78909: a1 = a5 << t1\n 78912: a5 = u64 [sp + 0x368]\n 78916: t1 = a0 | a1\n 78919: a4 = t0 >> s1\n 78922: a2 = u64 [sp + 0x3c0]\n 78926: a0 = a2 <u 0x1\n 78929: a1 = u64 [sp + 0x3d0]\n 78933: a0 = a1 - a0\n 78936: u64 [sp + 0x310] = a0\n 78940: a0 = a2 | a1\n 78943: a0 = a0 <u 0x1\n 78946: a1 = u64 [sp + 0x3c8]\n 78950: a3 = a1 - a0\n 78953: u64 [sp + 0x308] = a3\n 78957: a0 = a1 <u a0\n 78960: a1 = u64 [sp + 0x3d8]\n 78964: a1 = a1 - a0\n 78967: u64 [sp + 0x300] = a1\n 78971: a2 = a2 + 0xffffffffffffffff\n 78974: u64 [sp + 0x2f8] = a2\n 78978: a3 = u64 [sp + 0x398]\n 78982: fallthrough\n      : @353 (gas: 105)\n 78983: u64 [sp + 0x368] = a5\n 78987: u64 [sp + 792] = 0\n 78991: a0 = t1 >> 0x3f\n 78994: s1 = ra << 0x1\n 78997: s1 = s1 | a0\n 79000: t1 = t1 << 0x1\n 79003: t2 = ra\n 79005: ra = u64 [sp + 0x3a0]\n 79009: a0 = ra >> 0x3f\n 79012: a1 = t1 | a0\n 79015: a0 = u64 [sp + 0x310]\n 79019: a5 = a0 ^ s1\n 79022: a2 = a0 <u s1\n 79025: a0 = u64 [sp + 0x2f8]\n 79029: a0 = a0 <u a1\n 79032: t1 = a1\n 79034: u64 [sp + 0x348] = a1\n 79038: a0 = a2 if a5 != 0\n 79041: a1 = a4 << 0x1\n 79044: a4 = u64 [sp + 0x358]\n 79048: a2 = a4 >> 0x3f\n 79051: t0 = a1 | a2\n 79054: u64 [sp + 0x350] = t0\n 79058: a2 = t2 >> 0x3f\n 79061: a4 = a4 << 0x1\n 79064: a5 = a4 | a2\n 79067: a2 = ra << 0x1\n 79070: a4 = a3 >> 0x3f\n 79073: ra = a2 | a4\n 79076: a4 = a3 << 0x1\n 79079: a2 = u64 [sp + 0x388]\n 79083: a1 = a2 >> 0x3f\n 79086: a1 = a1 | a4\n 79089: a2 = a2 << 0x1\n 79092: a4 = u64 [sp + 0x390]\n 79096: a3 = a4 >> 0x3f\n 79099: a3 = a3 | a2\n 79102: a4 = a4 << 0x1\n 79105: a2 = u64 [sp + 0x368]\n 79109: a4 = a4 | a2\n 79112: u64 [sp + 0x390] = a4\n 79116: a2 = u64 [sp + 0x360]\n 79120: a3 = a3 | a2\n 79123: u64 [sp + 0x388] = a3\n 79127: a1 = a1 | a2\n 79130: u64 [sp + 0x398] = a1\n 79134: a1 = a2 | ra\n 79137: u64 [sp + 0x3a0] = a1\n 79141: a2 = u64 [sp + 0x308]\n 79145: a1 = a2 - a5\n 79148: a0 = a1 <u a0\n 79151: a1 = a2 <u a5\n 79154: a2 = u64 [sp + 0x300]\n 79158: a2 = a2 - t0\n 79161: a2 = a2 - a1\n 79164: a2 = a2 - a0\n 79167: a2 = a2 >>a 0x3f\n 79170: a0 = u64 [sp + 0x3c0]\n 79174: t2 = a2 & a0\n 79177: a3 = u64 [sp + 0x3d0]\n 79181: a3 = a3 & a2\n 79184: ra = s1 ^ a3\n 79187: a4 = s1 <u a3\n 79190: a1 = t1 <u t2\n 79193: a4 = a1 if ra == 0\n 79196: a0 = u64 [sp + 0x3c8]\n 79200: ra = a2 & a0\n 79203: t0 = a5 - ra\n 79206: t1 = t0 - a4\n 79209: u64 [sp + 0x358] = t1\n 79213: t0 = t0 <u a4\n 79216: a5 = a5 <u ra\n 79219: a4 = u64 [sp + 0x3d8]\n 79223: a4 = a4 & a2\n 79226: a0 = u64 [sp + 0x350]\n 79230: a4 = a0 - a4\n 79233: a4 = a4 - a5\n 79236: a4 = a4 - t0\n 79239: s1 = s1 - a3\n 79242: ra = s1 - a1\n 79245: a0 = u64 [sp + 0x348]\n 79249: t1 = a0 - t2\n 79252: a5 = u64 [sp + 0x3a8]\n 79256: s1 = u64 [sp + 0x380]\n 79260: a0 = a5 | s1\n 79263: a0 = a0 <u 0x1\n 79266: a3 = u64 [sp + 0x370]\n 79270: a1 = a3 <u a0\n 79273: a0 = a3 - a0\n 79276: a3 = a5 <u 0x1\n 79279: s1 = s1 - a3\n 79282: a3 = u64 [sp + 0x378]\n 79286: a3 = a3 - a1\n 79289: a5 = a5 + 0xffffffffffffffff\n 79292: u64 [sp + 0x380] = s1\n 79296: u64 [sp + 0x378] = a3\n 79300: a1 = s1 | a3\n 79303: u64 [sp + 0x3a8] = a5\n 79307: a3 = a5 | a0\n 79310: a1 = a1 | a3\n 79313: a3 = u64 [sp + 0x398]\n 79317: a5 = a2 & 0x1\n 79320: u64 [sp + 0x370] = a0\n 79324: u64 [sp + 864] = 0\n 79328: jump @353 if a1 != 0\n      : @354 (gas: 1)\n 79332: jump @356\n      : @355 (gas: 4)\n 79334: a5 = 0\n 79336: u64 [sp + 792] = 0\n 79340: a3 = u64 [sp + 0x398]\n 79344: fallthrough\n      : @356 (gas: 22)\n 79345: a0 = a3 >> 0x3f\n 79348: a1 = u64 [sp + 0x3a0]\n 79352: a1 = a1 << 0x1\n 79355: a2 = a3\n 79357: a3 = a1 | a0\n 79360: a4 = u64 [sp + 0x388]\n 79364: a0 = a4 >> 0x3f\n 79367: a1 = a2 << 0x1\n 79370: a1 = a1 | a0\n 79373: a0 = u64 [sp + 0x390]\n 79377: a2 = a0 >> 0x3f\n 79380: a4 = a4 << 0x1\n 79383: a0 = a0 << 0x1\n 79386: t0 = a5 | a0\n 79389: a5 = u64 [sp + 0x318]\n 79393: a2 = a2 | a5\n 79396: a2 = a2 | a4\n 79399: a1 = a1 | a5\n 79402: a3 = a3 | a5\n 79405: u64 [sp + 0x398] = a3\n 79409: ra = u64 [sp + 0x3d0]\n 79413: jump @358\n      : @357 (gas: 2)\n 79415: ra = u64 [sp + 0x3d0]\n 79419: fallthrough\n      : @358 (gas: 221)\n 79420: u64 [sp + 0x3a8] = a2\n 79424: u64 [sp + 0x388] = a1\n 79428: u64 [sp + 0x390] = t0\n 79432: t1 = u64 [sp + 0x3c0]\n 79436: a0 = u64 [sp + 0x260]\n 79440: a3 = t1 mulhu a0\n 79443: a4 = ra * a0\n 79446: a3 = a3 + a4\n 79449: a4 = a3 <u a4\n 79452: a5 = ra mulhu a0\n 79455: a5 = a5 + a4\n 79458: t2 = u64 [sp + 0x250]\n 79462: a4 = t1 * t2\n 79465: a3 = a3 + a4\n 79468: u64 [sp + 0x3a0] = a3\n 79472: a4 = a3 <u a4\n 79475: s1 = t1 mulhu t2\n 79478: a4 = a4 + s1\n 79481: a4 = a4 + a5\n 79484: a5 = a4 <u a5\n 79487: s1 = ra mulhu t2\n 79490: a5 = a5 + s1\n 79493: s1 = ra * t2\n 79496: a4 = a4 + s1\n 79499: s1 = a4 <u s1\n 79502: t0 = a5 + s1\n 79505: a3 = u64 [sp + 0x258]\n 79509: s1 = a3 * ra\n 79512: a1 = a3 mulhu t1\n 79515: a1 = a1 + s1\n 79518: a5 = u64 [sp + 0x268]\n 79522: s1 = a5 * t1\n 79525: a1 = a1 + s1\n 79528: a5 = u64 [sp + 0x3c8]\n 79532: s1 = a0 mulhu a5\n 79535: a2 = a5\n 79537: a5 = u64 [sp + 0x3d8]\n 79541: a5 = a0 * a5\n 79544: a5 = a5 + s1\n 79547: s1 = t2 * a2\n 79550: a5 = a5 + s1\n 79553: a1 = a1 + a5\n 79556: a5 = a3 * t1\n 79559: s1 = a0 * a2\n 79562: s1 = s1 + a5\n 79565: a5 = s1 <u a5\n 79568: a1 = a1 + a5\n 79571: a1 = a1 + t0\n 79574: s1 = s1 + a4\n 79577: a4 = s1 <u a4\n 79580: a2 = u64 [sp + 0x288]\n 79584: a4 = a2 - a4\n 79587: a4 = a4 - a1\n 79590: u64 [sp + 0x380] = a4\n 79594: a1 = t1 * a0\n 79597: a5 = u64 [sp + 0x2a0]\n 79601: a2 = u64 [sp + 0x3a0]\n 79605: a0 = a5 ^ a2\n 79608: a2 = a5 <u a2\n 79611: t2 = u64 [sp + 0x2d8]\n 79615: a4 = t2 <u a1\n 79618: a2 = a4 if a0 == 0\n 79621: a0 = u64 [sp + 0x290]\n 79625: a3 = a0 <u s1\n 79628: s1 = a0 - s1\n 79631: t0 = ra\n 79633: a0 = s1 <u a2\n 79636: a0 = a0 + a3\n 79639: a3 = u64 [sp + 0x380]\n 79643: a0 = a3 - a0\n 79646: u64 [sp + 0x288] = a0\n 79650: s1 = s1 - a2\n 79653: u64 [sp + 0x290] = s1\n 79657: a0 = a5 - a4\n 79660: a2 = u64 [sp + 0x3a0]\n 79664: a0 = a0 - a2\n 79667: u64 [sp + 0x2a0] = a0\n 79671: a0 = t2 - a1\n 79674: u64 [sp + 0x2d8] = a0\n 79678: a4 = u64 [sp + 0x390]\n 79682: a0 = t1 mulhu a4\n 79685: a1 = ra * a4\n 79688: a0 = a0 + a1\n 79691: a1 = a0 <u a1\n 79694: a2 = ra mulhu a4\n 79697: a1 = a1 + a2\n 79700: a3 = u64 [sp + 0x3a8]\n 79704: a2 = t1 * a3\n 79707: t2 = a2 + a0\n 79710: a0 = t2 <u a2\n 79713: a2 = t1 mulhu a3\n 79716: a0 = a0 + a2\n 79719: a0 = a0 + a1\n 79722: a1 = a0 <u a1\n 79725: a2 = ra mulhu a3\n 79728: a1 = a1 + a2\n 79731: a2 = ra * a3\n 79734: a0 = a0 + a2\n 79737: a2 = a0 <u a2\n 79740: ra = a1 + a2\n 79743: a5 = u64 [sp + 0x388]\n 79747: a2 = a5 * t0\n 79750: a3 = a5 mulhu t1\n 79753: s1 = a5\n 79755: a2 = a2 + a3\n 79758: a3 = u64 [sp + 0x398]\n 79762: a3 = a3 * t1\n 79765: a2 = a2 + a3\n 79768: a1 = u64 [sp + 0x3c8]\n 79772: a3 = a4 mulhu a1\n 79775: a5 = u64 [sp + 0x3d8]\n 79779: a5 = a4 * a5\n 79782: a3 = a3 + a5\n 79785: a5 = u64 [sp + 0x3a8]\n 79789: a5 = a5 * a1\n 79792: a3 = a3 + a5\n 79795: a2 = a2 + a3\n 79798: a3 = s1 * t1\n 79801: a5 = a4 * a1\n 79804: a5 = a5 + a3\n 79807: a3 = a5 <u a3\n 79810: a2 = a2 + a3\n 79813: a1 = ra + a2\n 79816: a5 = a5 + a0\n 79819: a0 = a5 <u a0\n 79822: a2 = u64 [sp + 0x2e8]\n 79826: a0 = a2 - a0\n 79829: t0 = a0 - a1\n 79832: a4 = t1 * a4\n 79835: a2 = u64 [sp + 0x2d0]\n 79839: a0 = a2 ^ t2\n 79842: a3 = a2 <u t2\n 79845: a1 = u64 [sp + 0x2c0]\n 79849: s1 = a1 <u a4\n 79852: a3 = s1 if a0 == 0\n 79855: a0 = u64 [sp + 0x2f0]\n 79859: ra = a0 <u a5\n 79862: a5 = a0 - a5\n 79865: a0 = a5 <u a3\n 79868: a0 = a0 + ra\n 79871: a0 = t0 - a0\n 79874: a5 = a5 - a3\n 79877: a2 = a2 - s1\n 79880: a2 = a2 - t2\n 79883: a1 = a1 - a4\n 79886: a3 = u64 [sp + 0x290]\n 79890: a3 = a3 + a5\n 79893: a4 = a3 <u a5\n 79896: a5 = u64 [sp + 0x288]\n 79900: a0 = a0 + a5\n 79903: a0 = a0 + a4\n 79906: ra = u64 [sp + 0x2d8]\n 79910: ra = ra + a1\n 79913: a1 = ra <u a1\n 79916: a4 = u64 [sp + 0x2a0]\n 79920: a4 = a4 + a2\n 79923: t1 = a4 + a1\n 79926: a4 = t1 ^ a2\n 79929: a2 = t1 <u a2\n 79932: a2 = a1 if a4 == 0\n 79935: t2 = a3 + a2\n 79938: a1 = t2 <u a3\n 79941: t0 = a0 + a1\n 79944: a1 = clz t0\n 79946: a0 = clz t2\n 79948: a0 = a0 + 0x40\n 79951: a0 = a1 if t0 != 0\n 79954: a1 = clz t1\n 79956: a2 = clz ra\n 79958: a2 = a2 + 0x40\n 79961: a2 = a1 if t1 != 0\n 79964: a1 = t2 | t0\n 79967: a3 = a2 + 0x80\n 79971: a0 = a3 if a1 == 0\n 79974: a3 = a3 <u a2\n 79977: a3 = 0 if a1 != 0\n 79979: a5 = u64 [sp + 0x328]\n 79983: a1 = a5 <u a0\n 79986: a4 = u64 [sp + 0x330]\n 79990: s1 = a4 ^ a3\n 79993: a2 = a4 <u a3\n 79996: a2 = a1 if s1 == 0\n 79999: a4 = a4 - a3\n 80002: a4 = a4 - a1\n 80005: a5 = a5 - a0\n 80008: u64 [sp + 0x390] = a5\n 80012: a0 = a5 <u 0x100\n 80016: a0 = a0 ^ 0x1\n 80019: a1 = a4 >u 0\n 80021: a0 = a1 if a4 != 0\n 80024: s1 = a2 <u 0x1\n 80027: s1 = s1 + 0xffffffffffffffff\n 80030: a1 = -a2\n 80032: a5 = a1 >u 0\n 80034: a3 = s1 >u 0\n 80036: a3 = a5 if s1 == 0\n 80039: a3 = a0 if a2 == 0\n 80042: a0 = t1 | t0\n 80045: a2 = ra | t2\n 80048: a0 = a0 | a2\n 80051: a0 = a0 <u 0x1\n 80054: a2 = u64 [sp + 0x320]\n 80058: a0 = a0 | a2\n 80061: a3 = a3 | a0\n 80064: u64 [sp + 0x2e8] = t0\n 80068: a0 = t0\n 80070: t0 = t1\n 80072: a0 = 0 if a3 != 0\n 80074: u64 [sp + 0x3a8] = a0\n 80078: u64 [sp + 0x2f0] = t2\n 80082: t1 = ra\n 80084: t2 = 0 if a3 != 0\n 80086: u64 [sp + 0x3a0] = t2\n 80090: ra = t0\n 80092: ra = 0 if a3 != 0\n 80094: a0 = t1\n 80096: a0 = 0 if a3 != 0\n 80098: u64 [sp + 0x398] = a0\n 80102: u64 [sp + 0x2d0] = t1\n 80106: u64 [sp + 0x2c0] = t0\n 80110: jump @360 if a3 == 0\n      : @359 (gas: 1)\n 80113: jump @130\n      : @360 (gas: 6)\n 80117: a2 = u64 [sp + 0x390]\n 80121: a3 = a2 ^ 0xff\n 80125: a3 = a3 | a1\n 80128: a5 = a4 | s1\n 80131: a3 = a3 | a5\n 80134: jump @362 if a3 != 0\n      : @361 (gas: 1)\n 80137: jump @130\n      : @362 (gas: 256)\n 80141: a3 = a2 + 0x1\n 80144: u64 [sp + 0x3a8] = a3\n 80148: a0 = a3 <u 0x1\n 80151: a0 = a0 + a4\n 80154: u64 [sp + 0x378] = a0\n 80158: a0 = a0 | a3\n 80161: a0 = a0 <u 0x1\n 80164: a0 = a0 + a1\n 80167: u64 [sp + 0x370] = a0\n 80171: a0 = a0 <u a1\n 80174: a0 = a0 + s1\n 80177: u64 [sp + 0x380] = a0\n 80181: a1 = t0\n 80183: t0 = 0xff - a2\n 80187: u8 [sp + 0x440] = t1\n 80191: u8 [sp + 1087] = 0\n 80195: u8 [sp + 1086] = 0\n 80199: u8 [sp + 1085] = 0\n 80203: u8 [sp + 1084] = 0\n 80207: u8 [sp + 1083] = 0\n 80211: u8 [sp + 1082] = 0\n 80215: u8 [sp + 1081] = 0\n 80219: u8 [sp + 1080] = 0\n 80223: u8 [sp + 1079] = 0\n 80227: u8 [sp + 1078] = 0\n 80231: u8 [sp + 1077] = 0\n 80235: u8 [sp + 1076] = 0\n 80239: u8 [sp + 1075] = 0\n 80243: u8 [sp + 1074] = 0\n 80247: u8 [sp + 1073] = 0\n 80251: u8 [sp + 1072] = 0\n 80255: u8 [sp + 1071] = 0\n 80259: u8 [sp + 1070] = 0\n 80263: u8 [sp + 1069] = 0\n 80267: u8 [sp + 1068] = 0\n 80271: u8 [sp + 1067] = 0\n 80275: u8 [sp + 1066] = 0\n 80279: u8 [sp + 1065] = 0\n 80283: u8 [sp + 1064] = 0\n 80287: u8 [sp + 1063] = 0\n 80291: u8 [sp + 1062] = 0\n 80295: u8 [sp + 1061] = 0\n 80299: u8 [sp + 1060] = 0\n 80303: u8 [sp + 1059] = 0\n 80307: u8 [sp + 1058] = 0\n 80311: u8 [sp + 1057] = 0\n 80315: u8 [sp + 1056] = 0\n 80319: u8 [sp + 0x448] = a1\n 80323: a0 = t1 >> 0x38\n 80326: u64 [sp + 0x260] = a0\n 80330: u8 [sp + 0x447] = a0\n 80334: a0 = t1 >> 0x30\n 80337: u64 [sp + 0x258] = a0\n 80341: u8 [sp + 0x446] = a0\n 80345: a0 = t1 >> 0x28\n 80348: u64 [sp + 0x250] = a0\n 80352: u8 [sp + 0x445] = a0\n 80356: a0 = t1 >> 0x20\n 80359: u64 [sp + 0x248] = a0\n 80363: u8 [sp + 0x444] = a0\n 80367: a0 = t1 >> 0x18\n 80370: u64 [sp + 0x220] = a0\n 80374: u8 [sp + 0x443] = a0\n 80378: a0 = t1 >> 0x10\n 80381: u64 [sp + 0x218] = a0\n 80385: u8 [sp + 0x442] = a0\n 80389: a0 = t1 >> 0x8\n 80392: u64 [sp + 0x210] = a0\n 80396: u8 [sp + 0x441] = a0\n 80400: ra = u64 [sp + 0x2f0]\n 80404: u8 [sp + 0x450] = ra\n 80408: a0 = a1 >> 0x38\n 80411: u64 [sp + 0x208] = a0\n 80415: u8 [sp + 0x44f] = a0\n 80419: a0 = a1 >> 0x30\n 80422: u64 [sp + 0x1d0] = a0\n 80426: u8 [sp + 0x44e] = a0\n 80430: a0 = a1 >> 0x28\n 80433: u64 [sp + 0x1c8] = a0\n 80437: u8 [sp + 0x44d] = a0\n 80441: a0 = a1 >> 0x20\n 80444: u64 [sp + 0x1c0] = a0\n 80448: u8 [sp + 0x44c] = a0\n 80452: a0 = a1 >> 0x18\n 80455: u64 [sp + 0x1b8] = a0\n 80459: u8 [sp + 0x44b] = a0\n 80463: a0 = a1 >> 0x10\n 80466: u64 [sp + 0x1b0] = a0\n 80470: u8 [sp + 0x44a] = a0\n 80474: a1 = a1 >> 0x8\n 80477: u64 [sp + 0x1a8] = a1\n 80481: u8 [sp + 0x449] = a1\n 80485: t2 = u64 [sp + 0x2e8]\n 80489: u8 [sp + 0x458] = t2\n 80493: a0 = ra >> 0x38\n 80496: u64 [sp + 0x1a0] = a0\n 80500: u8 [sp + 0x457] = a0\n 80504: a0 = ra >> 0x30\n 80507: u64 [sp + 0x198] = a0\n 80511: u8 [sp + 0x456] = a0\n 80515: a0 = ra >> 0x28\n 80518: u64 [sp + 0x190] = a0\n 80522: u8 [sp + 0x455] = a0\n 80526: a0 = ra >> 0x20\n 80529: u64 [sp + 0x188] = a0\n 80533: u8 [sp + 0x454] = a0\n 80537: a0 = ra >> 0x18\n 80540: u64 [sp + 0x180] = a0\n 80544: u8 [sp + 0x453] = a0\n 80548: a0 = ra >> 0x10\n 80551: u64 [sp + 0x358] = a0\n 80555: u8 [sp + 0x452] = a0\n 80559: a0 = ra >> 0x8\n 80562: u64 [sp + 0x350] = a0\n 80566: u8 [sp + 0x451] = a0\n 80570: a0 = t2 >> 0x38\n 80573: u64 [sp + 0x348] = a0\n 80577: u8 [sp + 0x45f] = a0\n 80581: a0 = t2 >> 0x30\n 80584: u64 [sp + 0x318] = a0\n 80588: u8 [sp + 0x45e] = a0\n 80592: a0 = t2 >> 0x28\n 80595: u64 [sp + 0x310] = a0\n 80599: u8 [sp + 0x45d] = a0\n 80603: a0 = t2 >> 0x20\n 80606: u64 [sp + 0x308] = a0\n 80610: u8 [sp + 0x45c] = a0\n 80614: a0 = t2 >> 0x18\n 80617: u64 [sp + 0x300] = a0\n 80621: u8 [sp + 0x45b] = a0\n 80625: a0 = t2 >> 0x10\n 80628: u64 [sp + 0x2f8] = a0\n 80632: u8 [sp + 0x45a] = a0\n 80636: a0 = t2 >> 0x8\n 80639: u64 [sp + 0x268] = a0\n 80643: u8 [sp + 0x459] = a0\n 80647: a1 = t0 << 0x38\n 80650: a1 = a1 >> 0x3b\n 80653: a0 = sp + 0x440\n 80657: a1 = a0 - a1\n 80660: a2 = u8 [a1 + 0x19]\n 80663: a3 = u8 [a1 + 0x18]\n 80666: a4 = u8 [a1 + 0x1a]\n 80669: a5 = u8 [a1 + 0x1b]\n 80672: a2 = a2 << 0x8\n 80675: a2 = a2 | a3\n 80678: a4 = a4 << 0x10\n 80681: a5 = a5 << 0x18\n 80684: a4 = a4 | a5\n 80687: a2 = a2 | a4\n 80690: a3 = u8 [a1 + 0x1d]\n 80693: a4 = u8 [a1 + 0x1c]\n 80696: a5 = u8 [a1 + 0x1e]\n 80699: s1 = u8 [a1 + 0x1f]\n 80702: a3 = a3 << 0x8\n 80705: a3 = a3 | a4\n 80708: a5 = a5 << 0x10\n 80711: s1 = s1 << 0x18\n 80714: a5 = a5 | s1\n 80717: a3 = a3 | a5\n 80720: a3 = a3 << 0x20\n 80723: a2 = a2 | a3\n 80726: a3 = u8 [a1 + 0x11]\n 80729: a4 = u8 [a1 + 0x10]\n 80732: a5 = u8 [a1 + 0x12]\n 80735: s1 = u8 [a1 + 0x13]\n 80738: a3 = a3 << 0x8\n 80741: a3 = a3 | a4\n 80744: a5 = a5 << 0x10\n 80747: s1 = s1 << 0x18\n 80750: a5 = a5 | s1\n 80753: a3 = a3 | a5\n 80756: a4 = u8 [a1 + 0x15]\n 80759: a5 = u8 [a1 + 0x14]\n 80762: s1 = u8 [a1 + 0x16]\n 80765: a0 = u8 [a1 + 0x17]\n 80768: a4 = a4 << 0x8\n 80771: a4 = a4 | a5\n 80774: s1 = s1 << 0x10\n 80777: a0 = a0 << 0x18\n 80780: a0 = a0 | s1\n 80783: a0 = a0 | a4\n 80786: a0 = a0 << 0x20\n 80789: t1 = a0 | a3\n 80792: a0 = t0 & 0x7\n 80795: a4 = a2 << a0\n 80798: a5 = t1 >> 0x1\n 80801: t0 = a0 ^ 0x3f\n 80804: a5 = a5 >> t0\n 80807: a4 = a4 | a5\n 80810: u64 [sp + 0x3a0] = a4\n 80814: a4 = u8 [a1 + 0x9]\n 80817: a5 = u8 [a1 + 0x8]\n 80820: s1 = u8 [a1 + 0xa]\n 80823: a2 = u8 [a1 + 0xb]\n 80826: a4 = a4 << 0x8\n 80829: a4 = a4 | a5\n 80832: s1 = s1 << 0x10\n 80835: a2 = a2 << 0x18\n 80838: a2 = a2 | s1\n 80841: a2 = a2 | a4\n 80844: a4 = u8 [a1 + 0xd]\n 80847: a5 = u8 [a1 + 0xc]\n 80850: s1 = u8 [a1 + 0xe]\n 80853: a3 = u8 [a1 + 0xf]\n 80856: a4 = a4 << 0x8\n 80859: a4 = a4 | a5\n 80862: s1 = s1 << 0x10\n 80865: a3 = a3 << 0x18\n 80868: a3 = a3 | s1\n 80871: a3 = a3 | a4\n 80874: a3 = a3 << 0x20\n 80877: s1 = a3 | a2\n 80880: a2 = s1 >> 0x1\n 80883: a3 = a0 ^ 0xffffffffffffffff\n 80886: a2 = a2 >> a3\n 80889: a3 = t1 << a0\n 80892: a2 = a2 | a3\n 80895: u64 [sp + 0x398] = a2\n 80899: a2 = u8 [a1 + 0x1]\n 80902: a3 = u8 [a1]\n 80904: a4 = u8 [a1 + 0x2]\n 80907: a5 = u8 [a1 + 0x3]\n 80910: a2 = a2 << 0x8\n 80913: a2 = a2 | a3\n 80916: a4 = a4 << 0x10\n 80919: a5 = a5 << 0x18\n 80922: a4 = a4 | a5\n 80925: a2 = a2 | a4\n 80928: a3 = u8 [a1 + 0x5]\n 80931: a4 = u8 [a1 + 0x4]\n 80934: a5 = u8 [a1 + 0x6]\n 80937: a1 = u8 [a1 + 0x7]\n 80940: a3 = a3 << 0x8\n 80943: a3 = a3 | a4\n 80946: a4 = u64 [sp + 0x378]\n 80950: a5 = a5 << 0x10\n 80953: a1 = a1 << 0x18\n 80956: a1 = a1 | a5\n 80959: a1 = a1 | a3\n 80962: a1 = a1 << 0x20\n 80965: a1 = a1 | a2\n 80968: a2 = a1 >> 0x1\n 80971: a2 = a2 >> t0\n 80974: t0 = u64 [sp + 0x370]\n 80978: a3 = s1 << a0\n 80981: a5 = u64 [sp + 0x380]\n 80985: a2 = a2 | a3\n 80988: u64 [sp + 0x388] = a2\n 80992: a2 = a4 | a5\n 80995: a3 = u64 [sp + 0x3a8]\n 80999: a3 = a3 | t0\n 81002: a2 = a2 | a3\n 81005: a0 = a1 << a0\n 81008: u64 [sp + 0x390] = a0\n 81012: jump @364 if a2 != 0\n      : @363 (gas: 1)\n 81015: jump @128\n      : @364 (gas: 225)\n 81019: u64 [sp + 872] = 0\n 81023: u64 [sp + 864] = 0\n 81027: a0 = u64 [sp + 0x260]\n 81031: u8 [sp + 0x3e7] = a0\n 81035: a0 = u64 [sp + 0x258]\n 81039: u8 [sp + 0x3e6] = a0\n 81043: a0 = u64 [sp + 0x250]\n 81047: u8 [sp + 0x3e5] = a0\n 81051: a0 = u64 [sp + 0x248]\n 81055: u8 [sp + 0x3e4] = a0\n 81059: a0 = u64 [sp + 0x220]\n 81063: u8 [sp + 0x3e3] = a0\n 81067: a0 = u64 [sp + 0x218]\n 81071: u8 [sp + 0x3e2] = a0\n 81075: a0 = u64 [sp + 0x210]\n 81079: u8 [sp + 0x3e1] = a0\n 81083: a0 = u64 [sp + 0x208]\n 81087: u8 [sp + 0x3ef] = a0\n 81091: a0 = u64 [sp + 0x1d0]\n 81095: u8 [sp + 0x3ee] = a0\n 81099: a0 = u64 [sp + 0x1c8]\n 81103: u8 [sp + 0x3ed] = a0\n 81107: a0 = u64 [sp + 0x1c0]\n 81111: u8 [sp + 0x3ec] = a0\n 81115: a0 = u64 [sp + 0x1b8]\n 81119: u8 [sp + 0x3eb] = a0\n 81123: a0 = u64 [sp + 0x1b0]\n 81127: u8 [sp + 0x3ea] = a0\n 81131: a0 = u64 [sp + 0x1a8]\n 81135: u8 [sp + 0x3e9] = a0\n 81139: a0 = u64 [sp + 0x1a0]\n 81143: u8 [sp + 0x3f7] = a0\n 81147: a0 = u64 [sp + 0x198]\n 81151: u8 [sp + 0x3f6] = a0\n 81155: a0 = u64 [sp + 0x190]\n 81159: u8 [sp + 0x3f5] = a0\n 81163: a0 = u64 [sp + 0x188]\n 81167: u8 [sp + 0x3f4] = a0\n 81171: a0 = u64 [sp + 0x180]\n 81175: u8 [sp + 0x3f3] = a0\n 81179: u8 [sp + 1055] = 0\n 81183: u8 [sp + 1054] = 0\n 81187: u8 [sp + 1053] = 0\n 81191: u8 [sp + 1052] = 0\n 81195: u8 [sp + 1051] = 0\n 81199: u8 [sp + 1050] = 0\n 81203: u8 [sp + 1049] = 0\n 81207: u8 [sp + 1048] = 0\n 81211: u8 [sp + 1047] = 0\n 81215: u8 [sp + 1046] = 0\n 81219: u8 [sp + 1045] = 0\n 81223: u8 [sp + 1044] = 0\n 81227: u8 [sp + 1043] = 0\n 81231: u8 [sp + 1042] = 0\n 81235: u8 [sp + 1041] = 0\n 81239: u8 [sp + 1040] = 0\n 81243: u8 [sp + 1039] = 0\n 81247: u8 [sp + 1038] = 0\n 81251: u8 [sp + 1037] = 0\n 81255: u8 [sp + 1036] = 0\n 81259: u8 [sp + 1035] = 0\n 81263: u8 [sp + 1034] = 0\n 81267: u8 [sp + 1033] = 0\n 81271: u8 [sp + 1032] = 0\n 81275: u8 [sp + 1031] = 0\n 81279: u8 [sp + 1030] = 0\n 81283: u8 [sp + 1029] = 0\n 81287: u8 [sp + 1028] = 0\n 81291: u8 [sp + 1027] = 0\n 81295: u8 [sp + 1026] = 0\n 81299: u8 [sp + 1025] = 0\n 81303: u8 [sp + 1024] = 0\n 81307: a0 = u64 [sp + 0x2d0]\n 81311: u8 [sp + 0x3e0] = a0\n 81315: a0 = u64 [sp + 0x2c0]\n 81319: u8 [sp + 0x3e8] = a0\n 81323: u8 [sp + 0x3f0] = ra\n 81327: u8 [sp + 0x3f8] = t2\n 81331: a0 = u64 [sp + 0x358]\n 81335: u8 [sp + 0x3f2] = a0\n 81339: a0 = u64 [sp + 0x350]\n 81343: u8 [sp + 0x3f1] = a0\n 81347: a0 = u64 [sp + 0x348]\n 81351: u8 [sp + 0x3ff] = a0\n 81355: a0 = u64 [sp + 0x318]\n 81359: u8 [sp + 0x3fe] = a0\n 81363: a0 = u64 [sp + 0x310]\n 81367: u8 [sp + 0x3fd] = a0\n 81371: a0 = u64 [sp + 0x308]\n 81375: u8 [sp + 0x3fc] = a0\n 81379: a0 = u64 [sp + 0x300]\n 81383: u8 [sp + 0x3fb] = a0\n 81387: a0 = u64 [sp + 0x2f8]\n 81391: u8 [sp + 0x3fa] = a0\n 81395: a0 = u64 [sp + 0x268]\n 81399: u8 [sp + 0x3f9] = a0\n 81403: s1 = u64 [sp + 0x3a8]\n 81407: a0 = s1 << 0x38\n 81410: a0 = a0 >> 0x3b\n 81413: a1 = sp + 0x3e0\n 81417: a0 = a0 + a1\n 81420: a1 = u8 [a0 + 0x11]\n 81423: a2 = u8 [a0 + 0x10]\n 81426: a3 = u8 [a0 + 0x12]\n 81429: a4 = u8 [a0 + 0x13]\n 81432: a1 = a1 << 0x8\n 81435: a1 = a1 | a2\n 81438: a3 = a3 << 0x10\n 81441: a4 = a4 << 0x18\n 81444: a3 = a3 | a4\n 81447: a1 = a1 | a3\n 81450: a2 = u8 [a0 + 0x15]\n 81453: a3 = u8 [a0 + 0x14]\n 81456: a4 = u8 [a0 + 0x16]\n 81459: a5 = u8 [a0 + 0x17]\n 81462: a2 = a2 << 0x8\n 81465: a2 = a2 | a3\n 81468: a4 = a4 << 0x10\n 81471: a5 = a5 << 0x18\n 81474: a4 = a4 | a5\n 81477: a2 = a2 | a4\n 81480: a2 = a2 << 0x20\n 81483: t1 = a2 | a1\n 81486: a3 = s1 & 0x7\n 81489: t2 = t1 >> a3\n 81492: a4 = u8 [a0 + 0x19]\n 81495: a5 = u8 [a0 + 0x18]\n 81498: s1 = u8 [a0 + 0x1a]\n 81501: a2 = u8 [a0 + 0x1b]\n 81504: a4 = a4 << 0x8\n 81507: a4 = a4 | a5\n 81510: s1 = s1 << 0x10\n 81513: a2 = a2 << 0x18\n 81516: a2 = a2 | s1\n 81519: a2 = a2 | a4\n 81522: a4 = u8 [a0 + 0x1d]\n 81525: a5 = u8 [a0 + 0x1c]\n 81528: s1 = u8 [a0 + 0x1e]\n 81531: a1 = u8 [a0 + 0x1f]\n 81534: a4 = a4 << 0x8\n 81537: a4 = a4 | a5\n 81540: s1 = s1 << 0x10\n 81543: a1 = a1 << 0x18\n 81546: a1 = a1 | s1\n 81549: a1 = a1 | a4\n 81552: a1 = a1 << 0x20\n 81555: t0 = a1 | a2\n 81558: a1 = t0 << 0x1\n 81561: ra = a3 ^ 0x3f\n 81564: a1 = a1 << ra\n 81567: a1 = t2 | a1\n 81570: u64 [sp + 0x358] = a1\n 81574: a1 = u8 [a0 + 0x9]\n 81577: a2 = u8 [a0 + 0x8]\n 81580: a4 = u8 [a0 + 0xa]\n 81583: a5 = u8 [a0 + 0xb]\n 81586: a1 = a1 << 0x8\n 81589: a1 = a1 | a2\n 81592: a4 = a4 << 0x10\n 81595: a5 = a5 << 0x18\n 81598: a4 = a4 | a5\n 81601: a1 = a1 | a4\n 81604: a2 = u8 [a0 + 0xd]\n 81607: a4 = u8 [a0 + 0xc]\n 81610: a5 = u8 [a0 + 0xe]\n 81613: s1 = u8 [a0 + 0xf]\n 81616: a2 = a2 << 0x8\n 81619: a2 = a2 | a4\n 81622: a5 = a5 << 0x10\n 81625: s1 = s1 << 0x18\n 81628: a5 = a5 | s1\n 81631: a2 = a2 | a5\n 81634: a2 = a2 << 0x20\n 81637: t2 = a2 | a1\n 81640: a1 = t2 >> a3\n 81643: t1 = t1 << 0x1\n 81646: a2 = a3 ^ 0xffffffffffffffff\n 81649: a2 = t1 << a2\n 81652: a2 = a2 | a1\n 81655: a1 = u8 [a0 + 0x1]\n 81658: a5 = u8 [a0]\n 81660: s1 = u8 [a0 + 0x2]\n 81663: a4 = u8 [a0 + 0x3]\n 81666: a1 = a1 << 0x8\n 81669: a1 = a1 | a5\n 81672: s1 = s1 << 0x10\n 81675: a4 = a4 << 0x18\n 81678: a4 = a4 | s1\n 81681: a1 = a1 | a4\n 81684: a4 = u8 [a0 + 0x5]\n 81687: a5 = u8 [a0 + 0x4]\n 81690: s1 = u8 [a0 + 0x6]\n 81693: a0 = u8 [a0 + 0x7]\n 81696: a4 = a4 << 0x8\n 81699: a4 = a4 | a5\n 81702: a5 = u64 [sp + 0x368]\n 81706: s1 = s1 << 0x10\n 81709: a0 = a0 << 0x18\n 81712: a0 = a0 | s1\n 81715: a0 = a0 | a4\n 81718: a0 = a0 << 0x20\n 81721: a0 = a0 | a1\n 81724: a0 = a0 >> a3\n 81727: t2 = t2 << 0x1\n 81730: a1 = t2 << ra\n 81733: t1 = a0 | a1\n 81736: ra = t0 >> a3\n 81739: a1 = u64 [sp + 0x3c0]\n 81743: a0 = a1 <u 0x1\n 81746: a3 = u64 [sp + 0x3d0]\n 81750: a0 = a3 - a0\n 81753: u64 [sp + 0x310] = a0\n 81757: a0 = a1 | a3\n 81760: a0 = a0 <u 0x1\n 81763: a3 = u64 [sp + 0x3c8]\n 81767: a4 = a3 - a0\n 81770: u64 [sp + 0x308] = a4\n 81774: a0 = a3 <u a0\n 81777: a3 = u64 [sp + 0x3d8]\n 81781: a3 = a3 - a0\n 81784: u64 [sp + 0x300] = a3\n 81788: a1 = a1 + 0xffffffffffffffff\n 81791: u64 [sp + 0x2f8] = a1\n 81795: s1 = u64 [sp + 0x3a0]\n 81799: fallthrough\n      : @365 (gas: 103)\n 81800: u64 [sp + 0x368] = a5\n 81804: u64 [sp + 792] = 0\n 81808: a0 = t1 >> 0x3f\n 81811: a3 = a2 << 0x1\n 81814: t0 = a3 | a0\n 81817: t1 = t1 << 0x1\n 81820: a3 = s1 >> 0x3f\n 81823: a3 = t1 | a3\n 81826: u64 [sp + 0x350] = a3\n 81830: a0 = u64 [sp + 0x310]\n 81834: a4 = a0 ^ t0\n 81837: a1 = a0 <u t0\n 81840: a0 = u64 [sp + 0x2f8]\n 81844: a5 = a0 <u a3\n 81847: a5 = a1 if a4 != 0\n 81850: ra = ra << 0x1\n 81853: t2 = u64 [sp + 0x358]\n 81857: a1 = t2 >> 0x3f\n 81860: t1 = ra | a1\n 81863: u64 [sp + 0x348] = t1\n 81867: a2 = a2 >> 0x3f\n 81870: t2 = t2 << 0x1\n 81873: ra = t2 | a2\n 81876: a1 = s1 << 0x1\n 81879: a0 = u64 [sp + 0x398]\n 81883: s1 = a0 >> 0x3f\n 81886: a1 = a1 | s1\n 81889: s1 = a0 << 0x1\n 81892: a0 = u64 [sp + 0x388]\n 81896: a4 = a0 >> 0x3f\n 81899: a4 = a4 | s1\n 81902: s1 = a0 << 0x1\n 81905: a0 = u64 [sp + 0x390]\n 81909: a3 = a0 >> 0x3f\n 81912: a3 = a3 | s1\n 81915: s1 = a0 << 0x1\n 81918: a0 = u64 [sp + 0x368]\n 81922: a0 = a0 | s1\n 81925: u64 [sp + 0x390] = a0\n 81929: a2 = u64 [sp + 0x360]\n 81933: a3 = a3 | a2\n 81936: u64 [sp + 0x388] = a3\n 81940: a4 = a4 | a2\n 81943: u64 [sp + 0x398] = a4\n 81947: a1 = a1 | a2\n 81950: u64 [sp + 0x3a0] = a1\n 81954: a0 = u64 [sp + 0x308]\n 81958: a1 = a0 - ra\n 81961: a1 = a1 <u a5\n 81964: a3 = a0 <u ra\n 81967: a0 = u64 [sp + 0x300]\n 81971: a4 = a0 - t1\n 81974: a4 = a4 - a3\n 81977: a4 = a4 - a1\n 81980: a5 = a4 >>a 0x3f\n 81983: a1 = u64 [sp + 0x3c0]\n 81987: t1 = a5 & a1\n 81990: a3 = u64 [sp + 0x3d0]\n 81994: a3 = a3 & a5\n 81997: a4 = t0 ^ a3\n 82000: s1 = t0 <u a3\n 82003: a1 = u64 [sp + 0x350]\n 82007: t2 = a1 <u t1\n 82010: s1 = t2 if a4 == 0\n 82013: a4 = u64 [sp + 0x3c8]\n 82017: a4 = a4 & a5\n 82020: a0 = ra - a4\n 82023: a2 = a0 - s1\n 82026: u64 [sp + 0x358] = a2\n 82030: a2 = a0 <u s1\n 82033: a4 = ra <u a4\n 82036: s1 = u64 [sp + 0x3d8]\n 82040: s1 = s1 & a5\n 82043: a0 = u64 [sp + 0x348]\n 82047: s1 = a0 - s1\n 82050: s1 = s1 - a4\n 82053: ra = s1 - a2\n 82056: a0 = t0 - a3\n 82059: a2 = a0 - t2\n 82062: t1 = a1 - t1\n 82065: a4 = u64 [sp + 0x3a8]\n 82069: a1 = u64 [sp + 0x378]\n 82073: a0 = a4 | a1\n 82076: a0 = a0 <u 0x1\n 82079: a3 = u64 [sp + 0x370]\n 82083: s1 = a3 <u a0\n 82086: a0 = a3 - a0\n 82089: a3 = a4 <u 0x1\n 82092: a1 = a1 - a3\n 82095: a3 = u64 [sp + 0x380]\n 82099: a3 = a3 - s1\n 82102: s1 = u64 [sp + 0x3a0]\n 82106: a4 = a4 + 0xffffffffffffffff\n 82109: u64 [sp + 0x380] = a3\n 82113: u64 [sp + 0x378] = a1\n 82117: a1 = a1 | a3\n 82120: u64 [sp + 0x3a8] = a4\n 82124: a3 = a4 | a0\n 82127: a1 = a1 | a3\n 82130: a5 = a5 & 0x1\n 82133: u64 [sp + 0x370] = a0\n 82137: u64 [sp + 864] = 0\n 82141: jump @365 if a1 != 0\n      : @366 (gas: 1)\n 82145: jump @129\n      : @367 (gas: 3)\n 82149: a2 = u64 [sp + 0x18]\n 82152: a1 = i32 [a2]\n 82154: jump @369 if a1 >u 95\n      : @368 (gas: 3)\n 82158: a1 = 0x60\n 82161: u32 [a2] = a1\n 82163: fallthrough\n      : @369 (gas: 17)\n 82164: a4 = u64 [sp + 0x8]\n 82167: a0 = u64 [a4 + 0x48]\n 82170: a2 = u64 [a4 + 0x58]\n 82173: a3 = u64 [a4 + 0x40]\n 82176: a4 = u64 [a4 + 0x50]\n 82179: a5 = reverse a0\n 82181: a0 = reverse a2\n 82183: a2 = reverse a3\n 82185: a3 = reverse a4\n 82187: a2 = a2 | a3\n 82190: a3 = a0 | a5\n 82193: a3 = a3 | a2\n 82196: a3 = a3 >> 0x20\n 82199: a2 = a2 | a5\n 82202: a2 = a2 << 0x20\n 82205: a2 = a2 | a3\n 82208: jump @372 if a2 != 0\n      : @370 (gas: 2)\n 82211: i32 a2 = a0 >> 0x10\n 82214: jump @372 if a2 != 0\n      : @371 (gas: 3)\n 82217: a2 = a0 + 0x3f\n 82220: a2 = a2 & 0x1ffe0\n 82225: jump @378 if a2 <=u 65536\n      : @372 (gas: 1)\n 82231: trap\n      : @373 (gas: 16)\n 82232: a1 = u64 [sp + 0x8]\n 82235: u64 [a1 + 16] = 0\n 82238: u64 [a1 + 24] = 0\n 82241: u64 [a1 + 8] = 0\n 82244: u64 [a1 + 0] = 0x717b484e\n 82250: u32 [a1 + 32] = 0x12000000\n 82257: u32 [a1 + 20] = 0\n 82260: u32 [a1 + 24] = 0\n 82263: u32 [a1 + 28] = 0\n 82266: u32 [a1 + 8] = 0\n 82269: u32 [a1 + 12] = 0\n 82272: u32 [a1 + 16] = 0\n 82275: u32 [a1 + 4] = 0\n 82278: a1 = 0x24\n 82281: a0 = 0\n 82283: ra = 12, jump @0\n      : @374 [@dyn 6] (gas: 5)\n 82289: i32 a1 = a0 + 0\n 82291: a0 = 0x1\n 82294: a2 = 0x24\n 82297: ecalli 4 // 'seal_return'\n 82299: fallthrough\n      : @375 (gas: 6)\n 82300: a1 = 0x20290\n 82305: i32 a1 = a1 + 0\n 82307: a0 = 0x1\n 82310: a2 = 0\n 82312: ecalli 4 // 'seal_return'\n 82314: fallthrough\n      : @376 (gas: 6)\n 82315: a1 = 0x20290\n 82320: i32 a1 = a1 + 0\n 82322: a0 = 0x1\n 82325: a2 = 0\n 82327: ecalli 4 // 'seal_return'\n 82329: fallthrough\n      : @377 (gas: 6)\n 82330: a1 = 0x20290\n 82335: i32 a1 = a1 + 0\n 82337: a0 = 0x1\n 82340: a2 = 0\n 82342: ecalli 4 // 'seal_return'\n 82344: fallthrough\n      : @378 (gas: 1)\n 82345: jump @380 if a1 >=u a2\n      : @379 (gas: 3)\n 82348: a1 = u64 [sp + 0x18]\n 82351: u32 [a1] = a2\n 82353: fallthrough\n      : @380 (gas: 73)\n 82354: i32 a1 = a0 + 0\n 82356: a2 = u64 [sp + 0x8]\n 82359: a1 = a1 + a2\n 82362: a2 = u64 [sp + 0x298]\n 82366: a2 = reverse a2\n 82368: a3 = u64 [sp + 0x2b0]\n 82372: a3 = reverse a3\n 82374: a4 = u64 [sp + 0x2b8]\n 82378: a4 = reverse a4\n 82380: a5 = u64 [sp + 0x2e0]\n 82384: s1 = reverse a5\n 82386: a5 = s1 >> 0x38\n 82389: u8 [a1 + 0x1f] = a5\n 82392: a5 = s1 >> 0x30\n 82395: u8 [a1 + 0x1e] = a5\n 82398: a5 = s1 >> 0x28\n 82401: u8 [a1 + 0x1d] = a5\n 82404: a5 = s1 >> 0x20\n 82407: u8 [a1 + 0x1c] = a5\n 82410: a5 = s1 >> 0x18\n 82413: u8 [a1 + 0x1b] = a5\n 82416: a5 = s1 >> 0x10\n 82419: u8 [a1 + 0x1a] = a5\n 82422: a5 = s1 >> 0x8\n 82425: u8 [a1 + 0x19] = a5\n 82428: u8 [a1 + 0x18] = s1\n 82431: u8 [a1 + 0x10] = a4\n 82434: a5 = a4 >> 0x38\n 82437: u8 [a1 + 0x17] = a5\n 82440: a5 = a4 >> 0x30\n 82443: u8 [a1 + 0x16] = a5\n 82446: a5 = a4 >> 0x28\n 82449: u8 [a1 + 0x15] = a5\n 82452: a5 = a4 >> 0x20\n 82455: u8 [a1 + 0x14] = a5\n 82458: a5 = a4 >> 0x18\n 82461: u8 [a1 + 0x13] = a5\n 82464: a5 = a4 >> 0x10\n 82467: u8 [a1 + 0x12] = a5\n 82470: a4 = a4 >> 0x8\n 82473: u8 [a1 + 0x11] = a4\n 82476: u8 [a1 + 0x8] = a3\n 82479: a4 = a3 >> 0x38\n 82482: u8 [a1 + 0xf] = a4\n 82485: a4 = a3 >> 0x30\n 82488: u8 [a1 + 0xe] = a4\n 82491: a4 = a3 >> 0x28\n 82494: u8 [a1 + 0xd] = a4\n 82497: a4 = a3 >> 0x20\n 82500: u8 [a1 + 0xc] = a4\n 82503: a4 = a3 >> 0x18\n 82506: u8 [a1 + 0xb] = a4\n 82509: a4 = a3 >> 0x10\n 82512: u8 [a1 + 0xa] = a4\n 82515: a3 = a3 >> 0x8\n 82518: u8 [a1 + 0x9] = a3\n 82521: u8 [a1] = a2\n 82523: a3 = a2 >> 0x38\n 82526: u8 [a1 + 0x7] = a3\n 82529: a3 = a2 >> 0x30\n 82532: u8 [a1 + 0x6] = a3\n 82535: a3 = a2 >> 0x28\n 82538: u8 [a1 + 0x5] = a3\n 82541: a3 = a2 >> 0x20\n 82544: u8 [a1 + 0x4] = a3\n 82547: a3 = a2 >> 0x18\n 82550: u8 [a1 + 0x3] = a3\n 82553: a3 = a2 >> 0x10\n 82556: u8 [a1 + 0x2] = a3\n 82559: a2 = a2 >> 0x8\n 82562: u8 [a1 + 0x1] = a2\n 82565: a1 = 0x20\n 82568: ra = 14, jump @0\n      : @381 [@dyn 7] (gas: 7)\n 82574: i32 a1 = a0 + 0\n 82576: a2 = 0x20\n 82579: a0 = 0\n 82581: ecalli 4 // 'seal_return'\n 82583: a0 = 0\n 82585: ra = 0x10\n 82588: jump @6\n      : @382 [export #0: 'call'] (gas: 2)\n 82592: a0 = 0\n 82594: ra = 16, jump @6\n      : @383 [@dyn 8] [export #1: 'deploy'] (gas: 2)\n 82600: a0 = 0x1\n 82603: ra = 18, jump @6\n      : @384 [@dyn 9] (gas: 1)\n 82609: trap\n","bytecode":{"object":""},"deployedBytecode":{"object":""},"methodIdentifiers":{"MiMC5Sponge(uint256[2],uint256)":"d622e5a4"}},"irOptimized":"/// @use-src 0:\"contracts/MiMCSponge.sol\"\nobject \"Hasher_199\" {\n    code {\n        {\n            /// @src 0:58:2903  \"contract Hasher {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            sstore(/** @src 0:92:169  \"21888242871839275222246405745257275088548364400416034343698204186575808495617\" */ 0x00, 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001)\n            /// @src 0:58:2903  \"contract Hasher {...\"\n            let newFreePtr := add(_1, 640)\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src 0:92:169  \"21888242871839275222246405745257275088548364400416034343698204186575808495617\" */ 0x00, /** @src 0:58:2903  \"contract Hasher {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src 0:92:169  \"21888242871839275222246405745257275088548364400416034343698204186575808495617\" */ 0x00, /** @src 0:58:2903  \"contract Hasher {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            mstore(_1, /** @src 0:92:169  \"21888242871839275222246405745257275088548364400416034343698204186575808495617\" */ 0x00)\n            /// @src 0:58:2903  \"contract Hasher {...\"\n            mstore(/** @src 0:191:1862  \"[...\" */ add(_1, 32), /** @src 0:212:289  \"25823191961023811529686723375255045606187170120624741056268890390838310270028\" */ 0x391768a085a953882c2200e315dc6b6353e4791466d524980f97b786716ef44c)\n            /// @src 0:58:2903  \"contract Hasher {...\"\n            mstore(/** @src 0:191:1862  \"[...\" */ add(_1, /** @src 0:58:2903  \"contract Hasher {...\" */ 64), /** @src 0:299:376  \"71153255768872006974285801937521995907343848376936063113800887806988124358800\" */ 0x9d4f50cb64b2c7a8f7b2c17065bac3a4ef451cd9718db14693cc75cbb8630890)\n            /// @src 0:58:2903  \"contract Hasher {...\"\n            mstore(/** @src 0:191:1862  \"[...\" */ add(_1, 96), /** @src 0:386:463  \"51253176922899201987938365653129780755804051536550826601168630951148399005246\" */ 0x71504526d8cd57565fca39e86feeb52100fecb23f9b81ab0ac066aef68328e3e)\n            /// @src 0:58:2903  \"contract Hasher {...\"\n            mstore(/** @src 0:191:1862  \"[...\" */ add(_1, 128), /** @src 0:473:550  \"66651710483985382365580181188706173532487386392003341306307921015066514594406\" */ 0x935b8800cf73aa9b083a4bdbfea0f4efeb5e0b1bb927455b4bc8a4bcc58e9a66)\n            /// @src 0:58:2903  \"contract Hasher {...\"\n            mstore(/** @src 0:191:1862  \"[...\" */ add(_1, 160), /** @src 0:560:637  \"45887003413921204775397977044284378920236104620216194900669591190628189327887\" */ 0x65731fa0feccca6cba08c176f5443dbaea0de6ae20993a97f6b709785897d20f)\n            /// @src 0:58:2903  \"contract Hasher {...\"\n            mstore(/** @src 0:191:1862  \"[...\" */ add(_1, 192), /** @src 0:647:724  \"14399999722617037892747232478295923748665564430258345135947757381904956977453\" */ 0x1fd61c6b69084af504ea1fa012821bb4af507d64efd9934b9bbf36705290f12d)\n            /// @src 0:58:2903  \"contract Hasher {...\"\n            mstore(/** @src 0:191:1862  \"[...\" */ add(_1, 224), /** @src 0:734:811  \"29376176727758177809204424209125257629638239807319618360680345079470240949145\" */ 0x40f253aa05d71624fe6759a1f5edd323d110996b3fcfba07abdf171a5f9de399)\n            /// @src 0:58:2903  \"contract Hasher {...\"\n            mstore(/** @src 0:191:1862  \"[...\" */ add(_1, 256), /** @src 0:821:898  \"13768859312518298840937540532277016512087005174650120937309279832230513110846\" */ 0x1e70e5f07fda6b0119e5c8f11aa869db08e948e2bc688cb4db0b4ee543c46f3e)\n            /// @src 0:58:2903  \"contract Hasher {...\"\n            mstore(/** @src 0:191:1862  \"[...\" */ add(_1, 288), /** @src 0:908:985  \"54749662990362840569021981534456448557155682756506853240029023635346061661615\" */ 0x790b360b1e8223e3834cfd88dd07eb3e4fb59e8bd83626fbdc9583d8877a15af)\n            /// @src 0:58:2903  \"contract Hasher {...\"\n            mstore(/** @src 0:191:1862  \"[...\" */ add(_1, 320), /** @src 0:995:1072  \"25161436470718351277017231215227846535148280460947816286575563945185127975034\" */ 0x37a0de4d2c56628d40f1638628efb49c4c741fe881cf8a6e865ec71688b4487a)\n            /// @src 0:58:2903  \"contract Hasher {...\"\n            mstore(/** @src 0:191:1862  \"[...\" */ add(_1, 352), /** @src 0:1082:1159  \"90370030464179443930112165274275271350651484239155016554738639197417116558730\" */ 0xc7cb9fe85afe2450c4da8a32983cc0e6070d253c86e59bfd1fd24fcaa91c658a)\n            /// @src 0:58:2903  \"contract Hasher {...\"\n            mstore(/** @src 0:191:1862  \"[...\" */ add(_1, 384), /** @src 0:1169:1246  \"92014788260850167582827910417652439562305280453223492851660096740204889381255\" */ 0xcb6e8649b6a56e9277be3bf1d943244b79048284cdd78743a74863e58b9e1987)\n            /// @src 0:58:2903  \"contract Hasher {...\"\n            mstore(/** @src 0:191:1862  \"[...\" */ add(_1, 416), /** @src 0:1256:1333  \"40376490640073034398204558905403523738912091909516510156577526370637723469243\" */ 0x594448aa40d994274590a8a5c4ab87b374317b4bbc013841ce844e4bf19805bb)\n            /// @src 0:58:2903  \"contract Hasher {...\"\n            mstore(/** @src 0:191:1862  \"[...\" */ add(_1, 448), /** @src 0:1343:1418  \"903792244391531377123276432892896247924738784402045372115602887103675299839\" */ 0x01ff873d84b64b0d73eddd73625d1b5686a3d1f31db8d0086b3101bdb5a6f7ff)\n            /// @src 0:58:2903  \"contract Hasher {...\"\n            mstore(/** @src 0:191:1862  \"[...\" */ add(_1, 480), /** @src 0:1428:1506  \"112203415202699791888928570309186854585561656615192232544262649073999791317171\" */ 0xf810e1e9fad9cdb55d70a243eccd090c85f836ce991bb2190b0f0aab32d8e0b3)\n            /// @src 0:58:2903  \"contract Hasher {...\"\n            mstore(/** @src 0:191:1862  \"[...\" */ add(_1, 512), /** @src 0:1516:1594  \"114801681136748880679062548782792743842998635558909635247841799223004802934045\" */ 0xfdcf72e9d11d20a02478305a7183c50ed3ddde3c9e80b2bf5efdaca8f87d651d)\n            /// @src 0:58:2903  \"contract Hasher {...\"\n            mstore(/** @src 0:191:1862  \"[...\" */ add(_1, 544), /** @src 0:1604:1682  \"111440818948676816539978930514468038603327388809824089593328295503672011604028\" */ 0xf66144aed21cec88adbe8c8f6cd05ee5407d8c06d39607d62584909149d3403c)\n            /// @src 0:58:2903  \"contract Hasher {...\"\n            mstore(/** @src 0:191:1862  \"[...\" */ add(_1, 576), /** @src 0:1692:1769  \"64965960071752809090438003157362764845283225351402746675238539375404528707397\" */ 0x8fa16e2ad5a7a87d70003c61c1d2a08fc9ab669e6b95350f28e01a15745c2745)\n            /// @src 0:58:2903  \"contract Hasher {...\"\n            mstore(/** @src 0:191:1862  \"[...\" */ add(_1, 608), /** @src 0:1779:1856  \"98428510787134995495896453413714864789970336245473413374424598985988309743097\" */ 0xd99c9018257d4ec8c901b111feb6857c4219c3340ac68bf54ce4448a530375f9)\n            /// @src 0:58:2903  \"contract Hasher {...\"\n            let srcPtr := _1\n            let i := /** @src 0:92:169  \"21888242871839275222246405745257275088548364400416034343698204186575808495617\" */ 0x00\n            /// @src 0:58:2903  \"contract Hasher {...\"\n            for { }\n            lt(i, /** @src 0:191:1862  \"[...\" */ 20)\n            /// @src 0:58:2903  \"contract Hasher {...\"\n            {\n                i := add(i, /** @src 0:191:1862  \"[...\" */ 0x01)\n            }\n            /// @src 0:58:2903  \"contract Hasher {...\"\n            {\n                let _2 := mload(srcPtr)\n                srcPtr := add(srcPtr, /** @src 0:191:1862  \"[...\" */ 32)\n                /// @src 0:58:2903  \"contract Hasher {...\"\n                sstore(add(/** @src 0:191:1862  \"[...\" */ 0x01, /** @src 0:58:2903  \"contract Hasher {...\" */ i), _2)\n            }\n            let _3 := mload(64)\n            let _4 := datasize(\"Hasher_199_deployed\")\n            codecopy(_3, dataoffset(\"Hasher_199_deployed\"), _4)\n            return(_3, _4)\n        }\n    }\n    /// @use-src 0:\"contracts/MiMCSponge.sol\"\n    object \"Hasher_199_deployed\" {\n        code {\n            {\n                /// @src 0:58:2903  \"contract Hasher {...\"\n                let _1 := memoryguard(0x80)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    if eq(0xd622e5a4, shr(224, calldataload(0)))\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        if iszero(slt(35, calldatasize())) { revert(0, 0) }\n                        let newFreePtr := add(_1, 64)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                        let dst := _1\n                        if gt(68, calldatasize()) { revert(0, 0) }\n                        let src := 4\n                        for { } lt(src, 68) { src := add(src, 0x20) }\n                        {\n                            mstore(dst, calldataload(src))\n                            dst := add(dst, 0x20)\n                        }\n                        let value := calldataload(68)\n                        /// @src 0:2663:2680  \"uint256 lastR = 0\"\n                        let var_lastR := /** @src 0:58:2903  \"contract Hasher {...\" */ 0\n                        /// @src 0:2690:2707  \"uint256 lastC = 0\"\n                        let var_lastC := /** @src 0:58:2903  \"contract Hasher {...\" */ var_lastR\n                        /// @src 0:2722:2733  \"uint8 i = 0\"\n                        let var_i := /** @src 0:58:2903  \"contract Hasher {...\" */ var_lastR\n                        let _2 := sload(var_lastR)\n                        /// @src 0:2778:2803  \"addmod(lastR, _ins[i], p)\"\n                        let _3 := iszero(_2)\n                        /// @src 0:2718:2875  \"for(uint8 i = 0; i < _ins.length; i++){...\"\n                        for { }\n                        /** @src 0:58:2903  \"contract Hasher {...\" */ 1\n                        /// @src 0:2722:2733  \"uint8 i = 0\"\n                        {\n                            /// @src 0:58:2903  \"contract Hasher {...\"\n                            let value_1 := and(var_i, 0xff)\n                            if eq(value_1, 0xff)\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(0, 0x24)\n                            }\n                            /// @src 0:2752:2755  \"i++\"\n                            var_i := /** @src 0:58:2903  \"contract Hasher {...\" */ add(value_1, 1)\n                        }\n                        /// @src 0:2752:2755  \"i++\"\n                        {\n                            /// @src 0:2735:2750  \"i < _ins.length\"\n                            let _4 := iszero(lt(/** @src 0:58:2903  \"contract Hasher {...\" */ and(/** @src 0:2735:2750  \"i < _ins.length\" */ var_i, /** @src 0:58:2903  \"contract Hasher {...\" */ 0xff), 0x02))\n                            /// @src 0:2735:2750  \"i < _ins.length\"\n                            if _4 { break }\n                            /// @src 0:58:2903  \"contract Hasher {...\"\n                            _4 := 0\n                            let _5 := mload(add(_1, and(shl(5, /** @src 0:2735:2750  \"i < _ins.length\" */ var_i), /** @src 0:58:2903  \"contract Hasher {...\" */ 8160)))\n                            /// @src 0:2778:2803  \"addmod(lastR, _ins[i], p)\"\n                            if _3\n                            {\n                                /// @src 0:58:2903  \"contract Hasher {...\"\n                                mstore(_4, shl(224, 0x4e487b71))\n                                mstore(4, 0x12)\n                                revert(_4, 0x24)\n                            }\n                            /// @src 0:2014:2033  \"uint256 lastL = _iL\"\n                            let var_lastL := /** @src 0:2778:2803  \"addmod(lastR, _ins[i], p)\" */ addmod(var_lastR, _5, _2)\n                            /// @src 0:2043:2062  \"uint256 lastR = _iR\"\n                            let var_lastR_1 := var_lastC\n                            /// @src 0:2168:2179  \"uint8 i = 0\"\n                            let var_i_1 := /** @src 0:58:2903  \"contract Hasher {...\" */ _4\n                            /// @src 0:2164:2520  \"for(uint8 i = 0; i < nRounds; i++){...\"\n                            for { }\n                            /** @src 0:2181:2192  \"i < nRounds\" */ lt(/** @src 0:58:2903  \"contract Hasher {...\" */ and(/** @src 0:2181:2192  \"i < nRounds\" */ var_i_1, /** @src 0:58:2903  \"contract Hasher {...\" */ 0xff), /** @src 0:2001:2003  \"20\" */ 0x14)\n                            /// @src 0:2168:2179  \"uint8 i = 0\"\n                            {\n                                /// @src 0:2194:2197  \"i++\"\n                                var_i_1 := /** @src 0:58:2903  \"contract Hasher {...\" */ and(add(/** @src 0:2194:2197  \"i++\" */ var_i_1, /** @src 0:58:2903  \"contract Hasher {...\" */ 1), 0xff)\n                            }\n                            /// @src 0:2194:2197  \"i++\"\n                            {\n                                /// @src 0:2219:2239  \"addmod(lastR, _k, p)\"\n                                if _3\n                                {\n                                    /// @src 0:58:2903  \"contract Hasher {...\"\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(4, 0x12)\n                                    revert(_4, 0x24)\n                                }\n                                if iszero(lt(var_i_1, /** @src 0:2001:2003  \"20\" */ 0x14))\n                                /// @src 0:58:2903  \"contract Hasher {...\"\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(4, 0x32)\n                                    revert(_4, 0x24)\n                                }\n                                let _6 := sload(add(1, var_i_1))\n                                /// @src 0:2260:2281  \"addmod(mask, c[i], p)\"\n                                _3 := /** @src 0:58:2903  \"contract Hasher {...\" */ _4\n                                /// @src 0:2260:2281  \"addmod(mask, c[i], p)\"\n                                let expr := addmod(/** @src 0:2219:2239  \"addmod(lastR, _k, p)\" */ addmod(var_lastR_1, value, _2), /** @src 0:2260:2281  \"addmod(mask, c[i], p)\" */ _6, _2)\n                                /// @src 0:2303:2324  \"mulmod(mask, mask, p)\"\n                                _3 := /** @src 0:58:2903  \"contract Hasher {...\" */ _4\n                                /// @src 0:2303:2324  \"mulmod(mask, mask, p)\"\n                                let expr_1 := mulmod(expr, expr, _2)\n                                /// @src 0:2346:2369  \"mulmod(mask2, mask2, p)\"\n                                _3 := /** @src 0:58:2903  \"contract Hasher {...\" */ _4\n                                /// @src 0:2390:2412  \"mulmod(mask4, mask, p)\"\n                                _3 := /** @src 0:58:2903  \"contract Hasher {...\" */ _4\n                                /// @src 0:2427:2439  \"temp = lastR\"\n                                let var_temp := var_lastR_1\n                                /// @src 0:2461:2483  \"addmod(lastL, mask, p)\"\n                                _3 := /** @src 0:58:2903  \"contract Hasher {...\" */ _4\n                                /// @src 0:2453:2483  \"lastR = addmod(lastL, mask, p)\"\n                                var_lastR_1 := /** @src 0:2461:2483  \"addmod(lastL, mask, p)\" */ addmod(var_lastL, /** @src 0:2390:2412  \"mulmod(mask4, mask, p)\" */ mulmod(/** @src 0:2346:2369  \"mulmod(mask2, mask2, p)\" */ mulmod(expr_1, expr_1, _2), /** @src 0:2390:2412  \"mulmod(mask4, mask, p)\" */ expr, _2), /** @src 0:2461:2483  \"addmod(lastL, mask, p)\" */ _2)\n                                /// @src 0:2497:2509  \"lastL = temp\"\n                                var_lastL := var_temp\n                            }\n                            /// @src 0:2817:2864  \"(lastR, lastC) = MiMC5Feistel(lastR, lastC, _k)\"\n                            var_lastC := var_lastR_1\n                            var_lastR := var_lastL\n                        }\n                        /// @src 0:58:2903  \"contract Hasher {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, var_lastR)\n                        return(memPos, 0x20)\n                    }\n                }\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220c4b27d75fb613f3c907c6fe5c018b29976462c3ed10b71dce111c48b4cee27d064736f6c634300081d0033\"\n    }\n}\n","hash":"80d2c2d32f7563e888589c6c7a622209f7a9462b3ea865af300d6c51fe25403d","factoryDependencies":{}}},"contracts/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ReentrancyGuard.sol\":{\"keccak256\":\"0xc36152f7afa171bc6b38527ac9c5d67c74c8d54c4954178424fed6e62ff153e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16b5fd7f03a139632fabc5f42165f37c6a3508c0374c2d87c23b851d0a857386\",\"dweb:/ipfs/QmSqRMUXuPaERdVbAeHR3wXWJzc9zwYaNfowYtZJkoE8rw\"]}},\"version\":1}","evm":{"bytecode":{"object":""},"deployedBytecode":{"object":""},"methodIdentifiers":{}},"irOptimized":""}},"contracts/Tornado.sol":{"IVerifier":{"abi":[{"inputs":[{"internalType":"uint256[2]","name":"a","type":"uint256[2]"},{"internalType":"uint256[2][2]","name":"b","type":"uint256[2][2]"},{"internalType":"uint256[2]","name":"c","type":"uint256[2]"},{"internalType":"uint256[3]","name":"input","type":"uint256[3]"}],"name":"verifyProof","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[3]\",\"name\":\"input\",\"type\":\"uint256[3]\"}],\"name\":\"verifyProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Tornado.sol\":\"IVerifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MiMCSponge.sol\":{\"keccak256\":\"0x88b37596f844edfa4281035653c8c4f3057ec9e8f7552472e364c19488f9343d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://729ea70d2ef35a1e44298dd69e55dbfb880c7b1cf57cc367f17f6e81b171a2f6\",\"dweb:/ipfs/QmWtXUgDPKVmn1WXgUU6GguiCJcnvhMEuT2JdFCyJu3GEB\"]},\"contracts/ReentrancyGuard.sol\":{\"keccak256\":\"0xc36152f7afa171bc6b38527ac9c5d67c74c8d54c4954178424fed6e62ff153e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16b5fd7f03a139632fabc5f42165f37c6a3508c0374c2d87c23b851d0a857386\",\"dweb:/ipfs/QmSqRMUXuPaERdVbAeHR3wXWJzc9zwYaNfowYtZJkoE8rw\"]},\"contracts/Tornado.sol\":{\"keccak256\":\"0x9156146798b2bca76ec16ca3aa39ea12102b1ca9475cb5d76c0b83544fb35714\",\"license\":\"NONE\",\"urls\":[\"bzz-raw://33309e8a72973dbc113e08cddc4a68a7eaa4335ee6ffdd14608049620090495c\",\"dweb:/ipfs/Qmaq7Tqh4PejUKJEcS6iwku84kTsmDZdov7ef6CX7MhFJ9\"]}},\"version\":1}","evm":{"bytecode":{"object":""},"deployedBytecode":{"object":""},"methodIdentifiers":{"verifyProof(uint256[2],uint256[2][2],uint256[2],uint256[3])":"11479fea"}},"irOptimized":""},"Tornado":{"abi":[{"inputs":[{"internalType":"address","name":"_hasher","type":"address"},{"internalType":"address","name":"_verifier","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"root","type":"uint256"},{"indexed":false,"internalType":"uint256[10]","name":"hashPairings","type":"uint256[10]"},{"indexed":false,"internalType":"uint8[10]","name":"pairDirection","type":"uint8[10]"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"nullifierHash","type":"uint256"}],"name":"Withdrawal","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"commitments","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"denomination","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_commitment","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"nextLeafIdx","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"nullifierHashes","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"roots","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"treeLevel","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[2]","name":"a","type":"uint256[2]"},{"internalType":"uint256[2][2]","name":"b","type":"uint256[2][2]"},{"internalType":"uint256[2]","name":"c","type":"uint256[2]"},{"internalType":"uint256[2]","name":"input","type":"uint256[2]"}],"name":"withdraw","outputs":[],"stateMutability":"payable","type":"function"}],"metadata":{"llvm_arguments":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"revive_pallet_version":null,"revive_version":"0.1.0-dev.14+commit.f6a412e.llvm-18.1.8","solc_metadata":"{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hasher\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_verifier\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[10]\",\"name\":\"hashPairings\",\"type\":\"uint256[10]\"},{\"indexed\":false,\"internalType\":\"uint8[10]\",\"name\":\"pairDirection\",\"type\":\"uint8[10]\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nullifierHash\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"commitments\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"denomination\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_commitment\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextLeafIdx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nullifierHashes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roots\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treeLevel\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Tornado.sol\":\"Tornado\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MiMCSponge.sol\":{\"keccak256\":\"0x88b37596f844edfa4281035653c8c4f3057ec9e8f7552472e364c19488f9343d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://729ea70d2ef35a1e44298dd69e55dbfb880c7b1cf57cc367f17f6e81b171a2f6\",\"dweb:/ipfs/QmWtXUgDPKVmn1WXgUU6GguiCJcnvhMEuT2JdFCyJu3GEB\"]},\"contracts/ReentrancyGuard.sol\":{\"keccak256\":\"0xc36152f7afa171bc6b38527ac9c5d67c74c8d54c4954178424fed6e62ff153e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16b5fd7f03a139632fabc5f42165f37c6a3508c0374c2d87c23b851d0a857386\",\"dweb:/ipfs/QmSqRMUXuPaERdVbAeHR3wXWJzc9zwYaNfowYtZJkoE8rw\"]},\"contracts/Tornado.sol\":{\"keccak256\":\"0x9156146798b2bca76ec16ca3aa39ea12102b1ca9475cb5d76c0b83544fb35714\",\"license\":\"NONE\",\"urls\":[\"bzz-raw://33309e8a72973dbc113e08cddc4a68a7eaa4335ee6ffdd14608049620090495c\",\"dweb:/ipfs/Qmaq7Tqh4PejUKJEcS6iwku84kTsmDZdov7ef6CX7MhFJ9\"]}},\"version\":1}","solc_version":"0.8.29+commit.ab55807c.Darwin.appleclang"},"evm":{"assembly":"// RO data = 0/0 bytes\n// RW data = 72/65664 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 13451\n// Code size = 43712 bytes\n\n      : @0 (gas: 48)\n     0: sp = sp + 0xffffffffffffffa0\n     3: u64 [sp + 0x58] = ra\n     6: u64 [sp + 0x50] = s0\n     9: u64 [sp + 0x48] = s1\n    12: s0 = sp + 0x60\n    15: sp = sp & 0xffffffffffffffe0\n    18: s1 = a0\n    20: a0 = u64 [a1 + 0x18]\n    23: a2 = u64 [a1 + 0x10]\n    26: a3 = u64 [a1 + 0x8]\n    29: a1 = u64 [a1]\n    31: a0 = reverse a0\n    33: a2 = reverse a2\n    35: a3 = reverse a3\n    37: a1 = reverse a1\n    39: u64 [sp + 0x18] = a1\n    42: u64 [sp + 0x10] = a3\n    45: u64 [sp + 0x8] = a2\n    48: u64 [sp] = a0\n    50: u64 [sp + 56] = 0\n    53: u64 [sp + 48] = 0\n    56: u64 [sp + 40] = 0\n    59: u64 [sp + 32] = 0\n    62: u32 [sp + 64] = 0x20\n    66: i32 a1 = sp + 0\n    68: i32 a3 = sp + 0x20\n    71: i32 a4 = sp + 0x40\n    74: a2 = 0xffffffffffffffff\n    77: a0 = 0\n    79: ecalli 6 // 'get_storage'\n    81: a0 = u64 [sp + 0x38]\n    84: a1 = u64 [sp + 0x30]\n    87: a2 = u64 [sp + 0x28]\n    90: a3 = u64 [sp + 0x20]\n    93: a0 = reverse a0\n    95: a1 = reverse a1\n    97: a2 = reverse a2\n    99: a3 = reverse a3\n   101: u64 [s1 + 0x18] = a3\n   104: u64 [s1 + 0x10] = a2\n   107: u64 [s1 + 0x8] = a1\n   110: u64 [s1] = a0\n   112: sp = s0 + 0xffffffffffffffa0\n   115: ra = u64 [sp + 0x58]\n   118: s0 = u64 [sp + 0x50]\n   121: s1 = u64 [sp + 0x48]\n   124: sp = sp + 0x60\n   127: ret\n      : @1 (gas: 40)\n   129: sp = sp + 0xffffffffffffffa0\n   132: u64 [sp + 0x58] = ra\n   135: u64 [sp + 0x50] = s0\n   138: s0 = sp + 0x60\n   141: sp = sp & 0xffffffffffffffe0\n   144: t0 = u64 [a0]\n   146: a3 = u64 [a0 + 0x8]\n   149: a4 = u64 [a0 + 0x10]\n   152: a0 = u64 [a0 + 0x18]\n   155: t1 = u64 [a1]\n   157: a2 = u64 [a1 + 0x8]\n   160: a5 = u64 [a1 + 0x10]\n   163: a1 = u64 [a1 + 0x18]\n   166: t2 = reverse a0\n   168: a4 = reverse a4\n   170: a3 = reverse a3\n   172: a0 = reverse t0\n   174: t0 = reverse a1\n   176: a5 = reverse a5\n   178: a2 = reverse a2\n   180: a1 = reverse t1\n   182: u64 [sp + 0x18] = a0\n   185: u64 [sp + 0x10] = a3\n   188: u64 [sp + 0x8] = a4\n   191: u64 [sp] = t2\n   193: u64 [sp + 0x38] = a1\n   196: u64 [sp + 0x30] = a2\n   199: u64 [sp + 0x28] = a5\n   202: u64 [sp + 0x20] = t0\n   205: i32 a1 = sp + 0\n   207: i32 a3 = sp + 0x20\n   210: a2 = 0xffffffffffffffff\n   213: a4 = 0x20\n   216: a0 = 0\n   218: ecalli 13 // 'set_storage'\n   220: sp = s0 + 0xffffffffffffffa0\n   223: ra = u64 [sp + 0x58]\n   226: s0 = u64 [sp + 0x50]\n   229: sp = sp + 0x60\n   232: ret\n      : @2 (gas: 2)\n   234: i32 a3 = a0 >> 0x10\n   237: jump @7 if a3 != 0\n      : @3 (gas: 4)\n   240: a3 = a0 + a1\n   243: i32 a3 = a3 + 0x1f\n   246: a3 = a3 & 0xffffffffffffffe0\n   249: jump @7 if a3 >u 65536\n      : @4 (gas: 12)\n   255: sp = sp + 0xffffffffffffffc0\n   258: u64 [sp + 0x38] = ra\n   261: u64 [sp + 0x30] = s0\n   264: u64 [sp + 0x28] = s1\n   267: s0 = sp + 0x40\n   270: sp = sp & 0xffffffffffffffe0\n   273: t0 = u64 [a2 + 0x18]\n   276: t2 = u64 [a2 + 0x10]\n   279: t1 = u64 [a2 + 0x8]\n   282: s1 = i32 [0x2004c]\n   287: a4 = u64 [a2]\n   289: jump @6 if s1 >=u a3\n      : @5 (gas: 2)\n   292: u32 [0x2004c] = a3\n   297: fallthrough\n      : @6 (gas: 20)\n   298: a2 = 0x20060\n   303: i32 a2 = a2 + a0\n   306: a0 = reverse t0\n   308: a3 = reverse t2\n   310: a5 = reverse t1\n   312: a4 = reverse a4\n   314: u64 [sp + 0x18] = a4\n   317: u64 [sp + 0x10] = a5\n   320: u64 [sp + 0x8] = a3\n   323: u64 [sp] = a0\n   325: i32 a3 = a1 + 0\n   327: i32 a0 = sp + 0\n   329: a1 = 0x1\n   332: ecalli 5 // 'deposit_event'\n   334: sp = s0 + 0xffffffffffffffc0\n   337: ra = u64 [sp + 0x38]\n   340: s0 = u64 [sp + 0x30]\n   343: s1 = u64 [sp + 0x28]\n   346: sp = sp + 0x40\n   349: ret\n      : @7 (gas: 1)\n   351: trap\n      : @8 (gas: 2)\n   352: i32 a2 = a0 >> 0x10\n   355: jump @13 if a2 != 0\n      : @9 (gas: 4)\n   358: a1 = a1 + a0\n   361: i32 a1 = a1 + 0x1f\n   364: a1 = a1 & 0xffffffffffffffe0\n   367: jump @13 if a1 >u 65536\n      : @10 (gas: 3)\n   373: a2 = 0x2004c\n   378: a3 = i32 [0x2004c]\n   383: jump @12 if a3 >=u a1\n      : @11 (gas: 2)\n   386: u32 [0x2004c] = a1\n   391: fallthrough\n      : @12 (gas: 4)\n   392: a1 = 0x20060\n   397: i32 a0 = a0 + 0\n   399: a0 = a0 + a1\n   402: ret\n      : @13 (gas: 1)\n   404: trap\n      : @14 (gas: 6)\n   405: sp = sp + 0xfffffffffffffff0\n   408: u64 [sp + 0x8] = ra\n   411: u64 [sp] = s0\n   413: s0 = a0 & 0x1\n   416: ecalli 3 // 'call_data_size'\n   418: fallthrough\n      : @15 (gas: 2)\n   419: u32 [0x20048] = a0\n   424: jump @17 if s0 == 0\n      : @16 (gas: 1)\n   427: ra = 2, jump @18\n      : @17 [@dyn 1] (gas: 1)\n   431: ra = 4, jump @127\n      : @18 [@dyn 2] (gas: 10)\n   436: sp = sp + 0xfffffffffffffd00\n   440: u64 [sp + 0x2f8] = ra\n   444: u64 [sp + 0x2f0] = s0\n   448: u64 [sp + 0x2e8] = s1\n   452: s0 = sp + 0x300\n   456: sp = sp & 0xffffffffffffffe0\n   459: a0 = 0x2004c\n   464: u64 [sp + 0x158] = a0\n   468: a0 = i32 [0x2004c]\n   473: jump @20 if a0 >u 95\n      : @19 (gas: 3)\n   477: a1 = u64 [sp + 0x158]\n   481: u32 [a1 + 0] = 0x60\n   484: fallthrough\n      : @20 (gas: 13)\n   485: s1 = 0x20060\n   490: u64 [0x200b0] = 0\n   495: u64 [0x200a8] = 0\n   500: u64 [0x200a0] = 0\n   505: a0 = 0x8000000000000000\n   515: u64 [0x200b8] = a0\n   520: u64 [sp + 440] = 0\n   524: u64 [sp + 432] = 0\n   528: u64 [sp + 424] = 0\n   532: u64 [sp + 416] = 0\n   536: i32 a0 = sp + 0x1a0\n   540: ecalli 14 // 'value_transferred'\n   542: fallthrough\n      : @21 (gas: 8)\n   543: a0 = u64 [sp + 0x1b0]\n   547: a1 = u64 [sp + 0x1b8]\n   551: a2 = u64 [sp + 0x1a8]\n   555: a3 = u64 [sp + 0x1a0]\n   559: a1 = a1 | a2\n   562: a0 = a0 | a3\n   565: a0 = a0 | a1\n   568: jump @23 if a0 == 0\n      : @22 (gas: 1)\n   571: jump @99\n      : @23 (gas: 4)\n   574: a1 = u64 [sp + 0x158]\n   578: a2 = i32 [a1]\n   580: a1 = i32 [0x20048]\n   585: jump @25 if a2 >u 95\n      : @24 (gas: 4)\n   589: a2 = 0x60\n   592: a0 = u64 [sp + 0x158]\n   596: u32 [a0] = a2\n   598: fallthrough\n      : @25 (gas: 35)\n   599: u64 [sp + 0x128] = a2\n   603: u64 [sp + 0x130] = a1\n   607: a0 = a1 << 0x20\n   610: a0 = a0 >> 0x20\n   613: a1 = u64 [0x200a0]\n   618: a2 = u64 [0x200b0]\n   623: a3 = u64 [0x200b8]\n   628: u64 [sp + 0x140] = s1\n   632: a4 = u64 [0x200a8]\n   637: s1 = reverse a1\n   639: u64 [sp + 0x148] = s1\n   643: ra = reverse a2\n   645: a1 = reverse a3\n   647: a0 = a0 + 0x1f\n   650: a0 = a0 & 0xffffffffffffffe0\n   653: a0 = a0 + a1\n   656: u64 [sp + 0x150] = a1\n   660: u64 [sp + 0x138] = a0\n   664: a3 = a0 <u a1\n   667: a2 = ra + a3\n   670: t2 = a2 <u ra\n   673: t0 = reverse a4\n   675: a4 = t2\n   677: a4 = a3 if a3 == 0\n   680: a4 = a4 + t0\n   683: a5 = a4 <u t0\n   686: a0 = s1 + a5\n   689: a1 = a4 >u 0\n   691: s1 = a0 >u 0\n   693: s1 = a1 if a0 == 0\n   696: t1 = a4 | a0\n   699: a1 = a2 >u 0\n   701: a1 = s1 if t1 != 0\n   704: t1 = u64 [sp + 0x148]\n   708: jump @97 if a1 != 0\n      : @26 (gas: 9)\n   712: a1 = a2 ^ ra\n   715: a3 = t2 if a1 != 0\n   718: a1 = a0 ^ t1\n   721: s1 = a0 <u t1\n   724: a5 = s1 if a1 != 0\n   727: s1 = a4 ^ t0\n   730: a1 = a1 | s1\n   733: a5 = a3 if a1 == 0\n   736: jump @97 if a5 != 0\n      : @27 (gas: 19)\n   740: a0 = reverse a0\n   742: a1 = reverse a4\n   744: a2 = reverse a2\n   746: a3 = u64 [sp + 0x138]\n   750: a3 = reverse a3\n   752: s1 = u64 [sp + 0x140]\n   756: u64 [s1 + 0x58] = a3\n   759: u64 [s1 + 0x50] = a2\n   762: u64 [s1 + 0x48] = a1\n   765: a3 = u64 [sp + 0x150]\n   769: a1 = a3 | t0\n   772: a2 = ra | t1\n   775: a1 = a1 | a2\n   778: a1 = a1 >> 0x20\n   781: a2 = a2 | t0\n   784: a2 = a2 << 0x20\n   787: a1 = a1 | a2\n   790: u64 [s1 + 0x40] = a0\n   793: jump @96 if a1 != 0\n      : @28 (gas: 3)\n   797: i32 a0 = a3 >> 0x10\n   800: a2 = u64 [sp + 0x130]\n   804: jump @96 if a0 != 0\n      : @29 (gas: 4)\n   808: a0 = a2 + a3\n   811: i32 a0 = a0 + 0x1f\n   814: a0 = a0 & 0xffffffffffffffe0\n   817: jump @96 if a0 >u 65536\n      : @30 (gas: 4)\n   824: u64 [sp + 0x120] = t0\n   828: u64 [sp + 0x138] = ra\n   832: a1 = u64 [sp + 0x128]\n   836: jump @32 if a1 >=u a0\n      : @31 (gas: 3)\n   839: a1 = u64 [sp + 0x158]\n   843: u32 [a1] = a0\n   845: fallthrough\n      : @32 (gas: 7)\n   846: i32 a0 = a3 + 0\n   848: u64 [sp + 0x128] = a0\n   852: i32 a0 = a0 + s1\n   855: a1 = a2\n   857: a2 = 0\n   859: ecalli 1 // 'call_data_copy'\n   861: fallthrough\n      : @33 (gas: 2)\n   862: a1 = u64 [sp + 0x130]\n   866: jump @99 if a1 <u 64\n      : @34 (gas: 5)\n   871: t2 = u64 [sp + 0x150]\n   875: a0 = t2 + 0x3f\n   878: a2 = a0 & 0x1ffe0\n   883: ra = u64 [sp + 0x138]\n   887: jump @96 if a2 >u 65536\n      : @35 (gas: 5)\n   894: a0 = u64 [sp + 0x158]\n   898: t0 = i32 [a0]\n   900: a0 = u64 [sp + 0x128]\n   904: a0 = a0 + s1\n   907: jump @37 if t0 >=u a2\n      : @36 (gas: 4)\n   910: a1 = u64 [sp + 0x158]\n   914: u32 [a1] = a2\n   916: t0 = a2\n   918: fallthrough\n      : @37 (gas: 54)\n   919: a2 = u8 [a0 + 0x9]\n   922: a3 = u8 [a0 + 0x8]\n   925: a4 = u8 [a0 + 0xa]\n   928: a5 = u8 [a0 + 0xb]\n   931: a2 = a2 << 0x8\n   934: a2 = a2 | a3\n   937: a4 = a4 << 0x10\n   940: a5 = a5 << 0x18\n   943: a4 = a4 | a5\n   946: a2 = a2 | a4\n   949: a3 = u8 [a0 + 0xd]\n   952: a4 = u8 [a0 + 0xc]\n   955: a5 = u8 [a0 + 0xe]\n   958: s1 = u8 [a0 + 0xf]\n   961: a3 = a3 << 0x8\n   964: a3 = a3 | a4\n   967: a5 = a5 << 0x10\n   970: s1 = s1 << 0x18\n   973: a5 = a5 | s1\n   976: a3 = a3 | a5\n   979: a3 = a3 << 0x20\n   982: a2 = a2 | a3\n   985: a3 = u8 [a0 + 0x1]\n   988: a4 = u8 [a0]\n   990: a5 = u8 [a0 + 0x2]\n   993: s1 = u8 [a0 + 0x3]\n   996: a3 = a3 << 0x8\n   999: a3 = a3 | a4\n  1002: a5 = a5 << 0x10\n  1005: s1 = s1 << 0x18\n  1008: a5 = a5 | s1\n  1011: a3 = a3 | a5\n  1014: a4 = u8 [a0 + 0x5]\n  1017: a5 = u8 [a0 + 0x4]\n  1020: s1 = u8 [a0 + 0x6]\n  1023: a1 = u8 [a0 + 0x7]\n  1026: a4 = a4 << 0x8\n  1029: a4 = a4 | a5\n  1032: s1 = s1 << 0x10\n  1035: a1 = a1 << 0x18\n  1038: a1 = a1 | s1\n  1041: a1 = a1 | a4\n  1044: a1 = a1 << 0x20\n  1047: a1 = a1 | a3\n  1050: a4 = reverse a1\n  1052: a5 = reverse a2\n  1054: a2 = 0x100000000\n  1064: a1 = a5 ^ a2\n  1067: a1 = a1 | a4\n  1070: a3 = a5 >> 0x20\n  1073: a3 = a3 <u 0x1\n  1076: a3 = 0 if a4 != 0\n  1078: a3 = 0 if a1 == 0\n  1080: jump @100 if a3 == 0\n      : @38 (gas: 8)\n  1084: a1 = u64 [sp + 0x148]\n  1088: a3 = u64 [sp + 0x120]\n  1092: a1 = a1 | a3\n  1095: a2 = 0xffffffe0\n  1105: a2 = t2 <u a2\n  1108: a2 = 0 if ra != 0\n  1110: a2 = 0 if a1 != 0\n  1112: jump @96 if a2 == 0\n      : @39 (gas: 2)\n  1116: i32 a1 = t2 >> 0x5\n  1119: jump @96 if a1 >=u 2047\n      : @40 (gas: 3)\n  1125: a1 = t2 + 0x5f\n  1128: a2 = a1 & 0x1ffe0\n  1133: jump @96 if a2 >u 65536\n      : @41 (gas: 4)\n  1140: u64 [sp + 0x138] = a5\n  1144: u64 [sp + 0x148] = a4\n  1148: i32 a3 = t2 + 0x20\n  1151: jump @43 if t0 >=u a2\n      : @42 (gas: 3)\n  1154: a1 = u64 [sp + 0x158]\n  1158: u32 [a1] = a2\n  1160: fallthrough\n      : @43 (gas: 59)\n  1161: u64 [sp + 336] = 0x1ffe0\n  1168: a1 = u64 [sp + 0x140]\n  1172: a1 = a1 + a3\n  1175: a2 = u8 [a1 + 0x9]\n  1178: a3 = u8 [a1 + 0x8]\n  1181: a4 = u8 [a1 + 0xa]\n  1184: a5 = u8 [a1 + 0xb]\n  1187: a2 = a2 << 0x8\n  1190: a2 = a2 | a3\n  1193: a4 = a4 << 0x10\n  1196: a5 = a5 << 0x18\n  1199: a4 = a4 | a5\n  1202: a2 = a2 | a4\n  1205: a3 = u8 [a1 + 0xd]\n  1208: a4 = u8 [a1 + 0xc]\n  1211: a5 = u8 [a1 + 0xe]\n  1214: s1 = u8 [a1 + 0xf]\n  1217: a3 = a3 << 0x8\n  1220: a3 = a3 | a4\n  1223: a5 = a5 << 0x10\n  1226: s1 = s1 << 0x18\n  1229: a5 = a5 | s1\n  1232: a3 = a3 | a5\n  1235: a3 = a3 << 0x20\n  1238: t0 = a3 | a2\n  1241: a3 = u8 [a1 + 0x1]\n  1244: a4 = u8 [a1]\n  1246: a5 = u8 [a1 + 0x2]\n  1249: s1 = u8 [a1 + 0x3]\n  1252: a3 = a3 << 0x8\n  1255: a3 = a3 | a4\n  1258: a5 = a5 << 0x10\n  1261: s1 = s1 << 0x18\n  1264: a5 = a5 | s1\n  1267: a3 = a3 | a5\n  1270: a4 = u8 [a1 + 0x5]\n  1273: a5 = u8 [a1 + 0x4]\n  1276: s1 = u8 [a1 + 0x6]\n  1279: a2 = u8 [a1 + 0x7]\n  1282: a4 = a4 << 0x8\n  1285: a4 = a4 | a5\n  1288: s1 = s1 << 0x10\n  1291: a2 = a2 << 0x18\n  1294: a2 = a2 | s1\n  1297: a2 = a2 | a4\n  1300: a2 = a2 << 0x20\n  1303: a2 = a2 | a3\n  1306: a4 = reverse a2\n  1308: a3 = reverse t0\n  1310: a2 = 0x100000000\n  1320: a2 = a2 ^ a3\n  1323: a2 = a2 | a4\n  1326: u64 [sp + 0x128] = a3\n  1330: a3 = a3 >> 0x20\n  1333: a3 = a3 <u 0x1\n  1336: u64 [sp + 0x130] = a4\n  1340: a3 = 0 if a4 != 0\n  1342: a3 = 0 if a2 == 0\n  1344: jump @100 if a3 == 0\n      : @44 (gas: 148)\n  1348: a2 = u8 [a0 + 0x1d]\n  1351: u64 [sp + 0x80] = a2\n  1355: a2 = u8 [a0 + 0x1e]\n  1358: u64 [sp + 0xf8] = a2\n  1362: a2 = u8 [a0 + 0x1f]\n  1365: u64 [sp + 0xf0] = a2\n  1369: a2 = u8 [a0 + 0x15]\n  1372: u64 [sp + 0x100] = a2\n  1376: a2 = u8 [a0 + 0x16]\n  1379: u64 [sp + 0x110] = a2\n  1383: a2 = u8 [a0 + 0x17]\n  1386: u64 [sp + 0x108] = a2\n  1390: a2 = u8 [a0 + 0x19]\n  1393: u64 [sp + 0x118] = a2\n  1397: a2 = u8 [a0 + 0x1a]\n  1400: u64 [sp + 0x120] = a2\n  1404: a2 = 0x100000000000000\n  1414: u64 [sp + 0x2d8] = a2\n  1418: a2 = u8 [a0 + 0x1b]\n  1421: u64 [sp + 0xb8] = a2\n  1425: a2 = u8 [a0 + 0x1c]\n  1428: u64 [sp + 0x38] = a2\n  1431: a2 = u8 [a0 + 0x11]\n  1434: u64 [sp + 0xd0] = a2\n  1438: a2 = u8 [a0 + 0x12]\n  1441: u64 [sp + 0xe8] = a2\n  1445: a2 = u8 [a0 + 0x13]\n  1448: u64 [sp + 0xe0] = a2\n  1452: a2 = u8 [a0 + 0x14]\n  1455: u64 [sp + 0x60] = a2\n  1458: a2 = u8 [a0 + 0x18]\n  1461: u64 [sp + 0x78] = a2\n  1464: a0 = u8 [a0 + 0x10]\n  1467: u64 [sp + 0x88] = a0\n  1471: a0 = u8 [a1 + 0x18]\n  1474: u64 [sp + 0xd8] = a0\n  1478: a0 = u8 [a1 + 0x19]\n  1481: u64 [sp + 0xb0] = a0\n  1485: a0 = u8 [a1 + 0x1a]\n  1488: u64 [sp + 0xc8] = a0\n  1492: a0 = u8 [a1 + 0x1b]\n  1495: u64 [sp + 0xc0] = a0\n  1499: a0 = u8 [a1 + 0x1c]\n  1502: u64 [sp + 0x70] = a0\n  1505: a0 = u8 [a1 + 0x1d]\n  1508: u64 [sp + 0x30] = a0\n  1511: a0 = u8 [a1 + 0x1e]\n  1514: u64 [sp + 0x58] = a0\n  1517: a0 = u8 [a1 + 0x1f]\n  1520: u64 [sp + 0x50] = a0\n  1523: a0 = u8 [a1 + 0x10]\n  1526: u64 [sp + 0xa8] = a0\n  1530: a0 = u8 [a1 + 0x11]\n  1533: u64 [sp + 0x90] = a0\n  1537: a0 = u8 [a1 + 0x12]\n  1540: u64 [sp + 0xa0] = a0\n  1544: a0 = u8 [a1 + 0x13]\n  1547: u64 [sp + 0x98] = a0\n  1551: a0 = u8 [a1 + 0x14]\n  1554: u64 [sp + 0x68] = a0\n  1557: a0 = u8 [a1 + 0x15]\n  1560: u64 [sp + 0x28] = a0\n  1563: a0 = u8 [a1 + 0x16]\n  1566: u64 [sp + 0x48] = a0\n  1569: a0 = u8 [a1 + 0x17]\n  1572: u64 [sp + 0x40] = a0\n  1575: u64 [sp + 696] = 0\n  1579: u64 [sp + 688] = 0\n  1583: u64 [sp + 680] = 0\n  1587: u64 [sp + 672] = 0\n  1591: u64 [sp + 720] = 0\n  1595: u64 [sp + 712] = 0\n  1599: u64 [sp + 704] = 0\n  1603: i32 a1 = sp + 0x2a0\n  1607: i32 a3 = sp + 0x2c0\n  1611: a2 = 0xffffffffffffffff\n  1614: a4 = 0x20\n  1617: a0 = 0\n  1619: ecalli 13 // 'set_storage'\n  1621: s1 = 0x200000000000000\n  1631: u64 [sp + 0x2b8] = s1\n  1635: u64 [sp + 688] = 0\n  1639: u64 [sp + 680] = 0\n  1643: u64 [sp + 672] = 0\n  1647: u64 [sp + 728] = 0\n  1651: u64 [sp + 720] = 0\n  1655: u64 [sp + 712] = 0\n  1659: u64 [sp + 704] = 0\n  1663: u32 [sp + 640] = 0x20\n  1668: i32 a1 = sp + 0x2a0\n  1672: i32 a3 = sp + 0x2c0\n  1676: i32 a4 = sp + 0x280\n  1680: a2 = 0xffffffffffffffff\n  1683: a0 = 0\n  1685: ecalli 6 // 'get_storage'\n  1687: a0 = u64 [sp + 0x2c0]\n  1691: a1 = u64 [sp + 0x2d0]\n  1695: a2 = u64 [sp + 0x2c8]\n  1699: a3 = u64 [sp + 0x2d8]\n  1703: a4 = 0xffffffff00ffffff\n  1713: a2 = a2 & a4\n  1716: a2 = a2 | 0xa000000\n  1722: u64 [sp + 0x2b8] = s1\n  1726: u64 [sp + 688] = 0\n  1730: u64 [sp + 680] = 0\n  1734: u64 [sp + 672] = 0\n  1738: u64 [sp + 0x2d8] = a3\n  1742: u64 [sp + 0x2d0] = a1\n  1746: u64 [sp + 0x2c8] = a2\n  1750: u64 [sp + 0x2c0] = a0\n  1754: i32 a1 = sp + 0x2a0\n  1758: i32 a3 = sp + 0x2c0\n  1762: a2 = 0xffffffffffffffff\n  1765: a4 = 0x20\n  1768: a0 = 0\n  1770: ecalli 13 // 'set_storage'\n  1772: a0 = 0x300000000000000\n  1782: u64 [sp + 0x2b8] = a0\n  1786: a0 = u64 [0x20000]\n  1791: u64 [sp + 688] = 0\n  1795: u64 [sp + 680] = 0\n  1799: u64 [sp + 672] = 0\n  1803: u64 [sp + 0x2d8] = a0\n  1807: u64 [sp + 720] = 0\n  1811: u64 [sp + 712] = 0\n  1815: u64 [sp + 704] = 0\n  1819: i32 a1 = sp + 0x2a0\n  1823: i32 a3 = sp + 0x2c0\n  1827: a2 = 0xffffffffffffffff\n  1830: a4 = 0x20\n  1833: a0 = 0\n  1835: ecalli 13 // 'set_storage'\n  1837: a0 = 0x400000000000000\n  1847: u64 [sp + 0x2b8] = a0\n  1851: u64 [sp + 688] = 0\n  1855: u64 [sp + 680] = 0\n  1859: u64 [sp + 672] = 0\n  1863: u64 [sp + 728] = 0\n  1867: u64 [sp + 720] = 0\n  1871: u64 [sp + 712] = 0\n  1875: u64 [sp + 704] = 0\n  1879: i32 a1 = sp + 0x2a0\n  1883: i32 a3 = sp + 0x2c0\n  1887: a2 = 0xffffffffffffffff\n  1890: a4 = 0x20\n  1893: a0 = 0\n  1895: ecalli 13 // 'set_storage'\n  1897: fallthrough\n      : @45 (gas: 3)\n  1898: a0 = u64 [sp + 0x158]\n  1902: ra = i32 [a0]\n  1904: jump @47 if ra >u 95\n      : @46 (gas: 4)\n  1908: ra = 0x60\n  1911: a0 = u64 [sp + 0x158]\n  1915: u32 [a0] = ra\n  1917: fallthrough\n      : @47 (gas: 19)\n  1918: a1 = u64 [sp + 0x140]\n  1922: a0 = u64 [a1 + 0x58]\n  1925: a2 = u64 [a1 + 0x50]\n  1928: a4 = u64 [a1 + 0x48]\n  1931: a5 = u64 [a1 + 0x40]\n  1934: t1 = reverse a0\n  1936: t0 = reverse a2\n  1938: a0 = reverse a4\n  1940: a3 = reverse a5\n  1942: a4 = a3 >u 0\n  1944: a5 = a0 >u 0\n  1946: a5 = a4 if a3 != 0\n  1949: a4 = t0 >u 0\n  1951: s1 = t1 <u 0xfffffffffffffec0\n  1955: s1 = s1 ^ 0x1\n  1958: s1 = a4 if t0 != 0\n  1961: t2 = a0 | a3\n  1964: s1 = a5 if t2 != 0\n  1967: jump @98 if s1 != 0\n      : @48 (gas: 24)\n  1971: a5 = t1 + 0x140\n  1975: s1 = a5 <u t1\n  1978: a2 = t0 + s1\n  1981: a4 = a2 <u t0\n  1984: a4 = s1 if s1 == 0\n  1987: a4 = a4 + a0\n  1990: s1 = a4 <u a0\n  1993: s1 = s1 + a3\n  1996: s1 = reverse s1\n  1998: a4 = reverse a4\n  2000: a2 = reverse a2\n  2002: a5 = reverse a5\n  2004: u64 [a1 + 0x58] = a5\n  2007: u64 [a1 + 0x50] = a2\n  2010: u64 [a1 + 0x48] = a4\n  2013: a2 = t1 | a0\n  2016: a4 = t0 | a3\n  2019: a2 = a2 | a4\n  2022: a2 = a2 >> 0x20\n  2025: a4 = a4 | a0\n  2028: a4 = a4 << 0x20\n  2031: a2 = a2 | a4\n  2034: u64 [a1 + 0x40] = s1\n  2037: jump @96 if a2 != 0\n      : @49 (gas: 2)\n  2041: i32 a2 = t1 >> 0x10\n  2044: jump @96 if a2 != 0\n      : @50 (gas: 4)\n  2048: a2 = t1 + 0x3f\n  2051: a5 = u64 [sp + 0x150]\n  2055: a5 = a5 & a2\n  2058: jump @96 if a5 >u 65536\n      : @51 (gas: 1)\n  2065: jump @53 if ra >=u a5\n      : @52 (gas: 4)\n  2068: a2 = u64 [sp + 0x158]\n  2072: u32 [a2] = a5\n  2074: ra = a5\n  2076: fallthrough\n      : @53 (gas: 39)\n  2077: i32 a5 = t1 + 0\n  2079: a5 = a5 + a1\n  2082: u8 [a5 + 31] = 0xb\n  2086: u8 [a5 + 30] = 0xd6\n  2091: u8 [a5 + 29] = 0x53\n  2095: u8 [a5 + 28] = 0xab\n  2100: u8 [a5 + 27] = 0x32\n  2104: u8 [a5 + 26] = 0x44\n  2108: u8 [a5 + 25] = 0\n  2111: u8 [a5 + 24] = 0xb6\n  2116: u8 [a5 + 23] = 0xb3\n  2121: u8 [a5 + 22] = 0xd0\n  2126: u8 [a5 + 21] = 0x91\n  2131: u8 [a5 + 20] = 0x1b\n  2135: u8 [a5 + 19] = 0xf1\n  2140: u8 [a5 + 18] = 0xf9\n  2145: u8 [a5 + 17] = 0xd6\n  2150: u8 [a5 + 16] = 0xb3\n  2155: u8 [a5 + 15] = 0x89\n  2160: u8 [a5 + 14] = 0xa4\n  2165: u8 [a5 + 13] = 0xb9\n  2170: u8 [a5 + 12] = 0x2d\n  2174: u8 [a5 + 11] = 0xec\n  2179: u8 [a5 + 10] = 0x73\n  2183: u8 [a5 + 9] = 0xf4\n  2188: u8 [a5 + 8] = 0x4b\n  2192: u8 [a5 + 7] = 0x7f\n  2196: u8 [a5 + 6] = 0x4e\n  2200: u8 [a5 + 5] = 0x9b\n  2205: u8 [a5 + 4] = 0x66\n  2209: u8 [a5 + 3] = 0xd1\n  2214: u8 [a5 + 2] = 0x8c\n  2219: u8 [a5 + 1] = 0x41\n  2223: a4 = 0xffffffe0\n  2233: a4 = t1 <u a4\n  2236: a4 = 0 if t0 != 0\n  2238: a4 = 0 if t2 != 0\n  2240: u8 [a5 + 0] = 0x33\n  2243: jump @96 if a4 == 0\n      : @54 (gas: 2)\n  2247: i32 a1 = t1 >> 0x5\n  2250: jump @96 if a1 >=u 2047\n      : @55 (gas: 4)\n  2256: a2 = t1 + 0x5f\n  2259: a5 = u64 [sp + 0x150]\n  2263: a5 = a5 & a2\n  2266: jump @96 if a5 >u 65536\n      : @56 (gas: 3)\n  2273: u64 [sp + 0x18] = a3\n  2276: i32 s1 = t1 + 0x20\n  2279: jump @58 if ra >=u a5\n      : @57 (gas: 4)\n  2282: a2 = u64 [sp + 0x158]\n  2286: u32 [a2] = a5\n  2288: ra = a5\n  2290: fallthrough\n      : @58 (gas: 40)\n  2291: u64 [sp + 0x20] = ra\n  2294: a2 = u64 [sp + 0x140]\n  2298: s1 = s1 + a2\n  2301: u8 [s1 + 31] = 0xbd\n  2306: u8 [s1 + 30] = 0xf8\n  2311: u8 [s1 + 29] = 0x4e\n  2315: u8 [s1 + 28] = 0xe4\n  2320: u8 [s1 + 27] = 0xb3\n  2325: u8 [s1 + 26] = 0xa5\n  2330: u8 [s1 + 25] = 0x53\n  2334: u8 [s1 + 24] = 0x9a\n  2339: u8 [s1 + 23] = 0x8d\n  2344: u8 [s1 + 22] = 0x6f\n  2348: u8 [s1 + 21] = 0x2b\n  2352: u8 [s1 + 20] = 0x27\n  2356: u8 [s1 + 19] = 0x57\n  2360: u8 [s1 + 18] = 0xef\n  2365: u8 [s1 + 17] = 0x4d\n  2369: u8 [s1 + 16] = 0x61\n  2373: u8 [s1 + 15] = 0x5b\n  2377: u8 [s1 + 14] = 0x49\n  2381: u8 [s1 + 13] = 0x52\n  2385: u8 [s1 + 12] = 0x22\n  2389: u8 [s1 + 11] = 0x19\n  2393: u8 [s1 + 10] = 0x3b\n  2397: u8 [s1 + 9] = 0x16\n  2401: u8 [s1 + 8] = 0xc\n  2405: u8 [s1 + 7] = 0x94\n  2410: u8 [s1 + 6] = 0xf8\n  2415: u8 [s1 + 5] = 0xcc\n  2420: u8 [s1 + 4] = 0x45\n  2424: u8 [s1 + 3] = 0x7c\n  2428: u8 [s1 + 2] = 0xfb\n  2433: u8 [s1 + 1] = 0xf\n  2437: a4 = 0xffffffc0\n  2447: a4 = t1 <u a4\n  2450: a4 = 0 if t0 != 0\n  2452: a4 = 0 if t2 != 0\n  2454: u8 [s1 + 0] = 0x35\n  2457: jump @96 if a4 == 0\n      : @59 (gas: 3)\n  2461: i32 a2 = t1 >> 0x6\n  2464: u64 [sp + 0x10] = a2\n  2467: jump @96 if a2 >=u 1023\n      : @60 (gas: 4)\n  2473: a4 = t1 + 0x7f\n  2476: a5 = u64 [sp + 0x150]\n  2480: a5 = a5 & a4\n  2483: jump @96 if a5 >u 65536\n      : @61 (gas: 3)\n  2490: i32 s1 = t1 + 0x40\n  2493: a2 = u64 [sp + 0x20]\n  2496: jump @63 if a2 >=u a5\n      : @62 (gas: 4)\n  2499: a2 = u64 [sp + 0x158]\n  2503: u32 [a2] = a5\n  2505: u64 [sp + 0x20] = a5\n  2508: fallthrough\n      : @63 (gas: 39)\n  2509: a2 = u64 [sp + 0x140]\n  2513: s1 = s1 + a2\n  2516: u8 [s1 + 31] = 0x84\n  2521: u8 [s1 + 30] = 0x25\n  2525: u8 [s1 + 29] = 0x20\n  2529: u8 [s1 + 28] = 0x85\n  2534: u8 [s1 + 27] = 0x1e\n  2538: u8 [s1 + 26] = 0xd2\n  2543: u8 [s1 + 25] = 0x77\n  2547: u8 [s1 + 24] = 0xa3\n  2552: u8 [s1 + 23] = 0xde\n  2557: u8 [s1 + 22] = 0x90\n  2562: u8 [s1 + 21] = 0x8\n  2566: u8 [s1 + 20] = 0x17\n  2570: u8 [s1 + 19] = 0x87\n  2575: u8 [s1 + 18] = 0x3\n  2579: u8 [s1 + 17] = 0xe8\n  2584: u8 [s1 + 16] = 0x6c\n  2588: u8 [s1 + 15] = 0x50\n  2592: u8 [s1 + 14] = 0xac\n  2597: u8 [s1 + 13] = 0x1\n  2601: u8 [s1 + 12] = 0x6b\n  2605: u8 [s1 + 11] = 0xd4\n  2610: u8 [s1 + 10] = 0x1a\n  2614: u8 [s1 + 9] = 0x2b\n  2618: u8 [s1 + 8] = 0xa8\n  2623: u8 [s1 + 7] = 0x91\n  2628: u8 [s1 + 6] = 0xaf\n  2633: u8 [s1 + 5] = 0x1b\n  2637: u8 [s1 + 4] = 0x85\n  2642: u8 [s1 + 3] = 0xaf\n  2647: u8 [s1 + 2] = 0xb7\n  2652: u8 [s1 + 1] = 0xac\n  2657: a4 = 0xffffffa0\n  2667: a4 = t1 <u a4\n  2670: a4 = 0 if t0 != 0\n  2672: a4 = 0 if t2 != 0\n  2674: u8 [s1 + 0] = 0xc8\n  2678: jump @96 if a4 == 0\n      : @64 (gas: 1)\n  2682: jump @96 if a1 >=u 2045\n      : @65 (gas: 4)\n  2688: a2 = t1 + 0x9f\n  2692: a5 = u64 [sp + 0x150]\n  2696: a5 = a5 & a2\n  2699: jump @96 if a5 >u 65536\n      : @66 (gas: 3)\n  2706: i32 s1 = t1 + 0x60\n  2709: a2 = u64 [sp + 0x20]\n  2712: jump @68 if a2 >=u a5\n      : @67 (gas: 4)\n  2715: a2 = u64 [sp + 0x158]\n  2719: u32 [a2] = a5\n  2721: u64 [sp + 0x20] = a5\n  2724: fallthrough\n      : @68 (gas: 39)\n  2725: a2 = u64 [sp + 0x140]\n  2729: s1 = s1 + a2\n  2732: u8 [s1 + 31] = 0xc5\n  2737: u8 [s1 + 30] = 0xac\n  2742: u8 [s1 + 29] = 0xe9\n  2747: u8 [s1 + 28] = 0x27\n  2751: u8 [s1 + 27] = 0x32\n  2755: u8 [s1 + 26] = 0x11\n  2759: u8 [s1 + 25] = 0x7a\n  2763: u8 [s1 + 24] = 0x88\n  2768: u8 [s1 + 23] = 0x41\n  2772: u8 [s1 + 22] = 0x8d\n  2777: u8 [s1 + 21] = 0x35\n  2781: u8 [s1 + 20] = 0xd1\n  2786: u8 [s1 + 19] = 0x48\n  2790: u8 [s1 + 18] = 0x86\n  2795: u8 [s1 + 17] = 0xb1\n  2800: u8 [s1 + 16] = 0x99\n  2805: u8 [s1 + 15] = 0x18\n  2809: u8 [s1 + 14] = 0xbd\n  2814: u8 [s1 + 13] = 0x16\n  2818: u8 [s1 + 12] = 0xe\n  2822: u8 [s1 + 11] = 0x21\n  2826: u8 [s1 + 10] = 0x3\n  2830: u8 [s1 + 9] = 0x59\n  2834: u8 [s1 + 8] = 0xaa\n  2839: u8 [s1 + 7] = 0x64\n  2843: u8 [s1 + 6] = 0x27\n  2847: u8 [s1 + 5] = 0x4b\n  2851: u8 [s1 + 4] = 0x15\n  2855: u8 [s1 + 3] = 0x73\n  2859: u8 [s1 + 2] = 0xd2\n  2864: u8 [s1 + 1] = 0x71\n  2868: a4 = 0xffffff80\n  2878: a4 = t1 <u a4\n  2881: a4 = 0 if t0 != 0\n  2883: a4 = 0 if t2 != 0\n  2885: u8 [s1 + 0] = 0x51\n  2888: jump @96 if a4 == 0\n      : @69 (gas: 2)\n  2892: i32 a2 = t1 >> 0x7\n  2895: jump @96 if a2 >=u 511\n      : @70 (gas: 4)\n  2901: a2 = t1 + 0xbf\n  2905: a5 = u64 [sp + 0x150]\n  2909: a5 = a5 & a2\n  2912: jump @96 if a5 >u 65536\n      : @71 (gas: 3)\n  2919: i32 s1 = t1 + 0x80\n  2923: a2 = u64 [sp + 0x20]\n  2926: jump @73 if a2 >=u a5\n      : @72 (gas: 4)\n  2929: a2 = u64 [sp + 0x158]\n  2933: u32 [a2] = a5\n  2935: u64 [sp + 0x20] = a5\n  2938: fallthrough\n      : @73 (gas: 39)\n  2939: a2 = u64 [sp + 0x140]\n  2943: s1 = s1 + a2\n  2946: u8 [s1 + 31] = 0x59\n  2950: u8 [s1 + 30] = 0xbe\n  2955: u8 [s1 + 29] = 0xe5\n  2960: u8 [s1 + 28] = 0xa5\n  2965: u8 [s1 + 27] = 0x62\n  2969: u8 [s1 + 26] = 0x96\n  2974: u8 [s1 + 25] = 0xfc\n  2979: u8 [s1 + 24] = 0x8c\n  2984: u8 [s1 + 23] = 0x89\n  2989: u8 [s1 + 22] = 0x25\n  2993: u8 [s1 + 21] = 0xe1\n  2998: u8 [s1 + 20] = 0x1a\n  3002: u8 [s1 + 19] = 0xec\n  3007: u8 [s1 + 18] = 0xe1\n  3012: u8 [s1 + 17] = 0x94\n  3017: u8 [s1 + 16] = 0xc7\n  3022: u8 [s1 + 15] = 0x22\n  3026: u8 [s1 + 14] = 0xf\n  3030: u8 [s1 + 13] = 0xe\n  3034: u8 [s1 + 12] = 0x41\n  3038: u8 [s1 + 11] = 0xda\n  3043: u8 [s1 + 10] = 0xa1\n  3048: u8 [s1 + 9] = 0xf7\n  3053: u8 [s1 + 8] = 0x7c\n  3057: u8 [s1 + 7] = 0xf5\n  3062: u8 [s1 + 6] = 0x13\n  3066: u8 [s1 + 5] = 0xd6\n  3071: u8 [s1 + 4] = 0x4\n  3075: u8 [s1 + 3] = 0xcb\n  3080: u8 [s1 + 2] = 0x6\n  3084: u8 [s1 + 1] = 0x6c\n  3088: a4 = 0xffffff60\n  3098: a4 = t1 <u a4\n  3101: a4 = 0 if t0 != 0\n  3103: a4 = 0 if t2 != 0\n  3105: u8 [s1 + 0] = 0x98\n  3109: jump @96 if a4 == 0\n      : @74 (gas: 1)\n  3113: jump @96 if a1 >=u 2043\n      : @75 (gas: 4)\n  3119: a2 = t1 + 0xdf\n  3123: a5 = u64 [sp + 0x150]\n  3127: a5 = a5 & a2\n  3130: jump @96 if a5 >u 65536\n      : @76 (gas: 3)\n  3137: i32 s1 = t1 + 0xa0\n  3141: a2 = u64 [sp + 0x20]\n  3144: jump @78 if a2 >=u a5\n      : @77 (gas: 4)\n  3147: a2 = u64 [sp + 0x158]\n  3151: u32 [a2] = a5\n  3153: u64 [sp + 0x20] = a5\n  3156: fallthrough\n      : @78 (gas: 39)\n  3157: a2 = u64 [sp + 0x140]\n  3161: s1 = s1 + a2\n  3164: u8 [s1 + 31] = 0x27\n  3168: u8 [s1 + 30] = 0xd0\n  3173: u8 [s1 + 29] = 0x94\n  3178: u8 [s1 + 28] = 0x6d\n  3182: u8 [s1 + 27] = 0x7f\n  3186: u8 [s1 + 26] = 0xbf\n  3191: u8 [s1 + 25] = 0xd7\n  3196: u8 [s1 + 24] = 0x3c\n  3200: u8 [s1 + 23] = 0x2f\n  3204: u8 [s1 + 22] = 0xd6\n  3209: u8 [s1 + 21] = 0x1b\n  3213: u8 [s1 + 20] = 0x19\n  3217: u8 [s1 + 19] = 0xe5\n  3222: u8 [s1 + 18] = 0xb0\n  3227: u8 [s1 + 17] = 0x26\n  3231: u8 [s1 + 16] = 0x93\n  3236: u8 [s1 + 15] = 0x2e\n  3240: u8 [s1 + 14] = 0x4b\n  3244: u8 [s1 + 13] = 0x20\n  3248: u8 [s1 + 12] = 0x80\n  3253: u8 [s1 + 11] = 0x76\n  3257: u8 [s1 + 10] = 0x2\n  3261: u8 [s1 + 9] = 0x21\n  3265: u8 [s1 + 8] = 0x16\n  3269: u8 [s1 + 7] = 0x3\n  3273: u8 [s1 + 6] = 0xf3\n  3278: u8 [s1 + 5] = 0xef\n  3283: u8 [s1 + 4] = 0x6\n  3287: u8 [s1 + 3] = 0x51\n  3291: u8 [s1 + 2] = 0xa0\n  3296: u8 [s1 + 1] = 0xb9\n  3301: a4 = 0xffffff40\n  3311: a4 = t1 <u a4\n  3314: a4 = 0 if t0 != 0\n  3316: a4 = 0 if t2 != 0\n  3318: u8 [s1 + 0] = 0x6e\n  3321: jump @96 if a4 == 0\n      : @79 (gas: 2)\n  3325: a4 = u64 [sp + 0x10]\n  3328: jump @96 if a4 >=u 1021\n      : @80 (gas: 4)\n  3334: a2 = t1 + 0xff\n  3338: a5 = u64 [sp + 0x150]\n  3342: a5 = a5 & a2\n  3345: jump @96 if a5 >u 65536\n      : @81 (gas: 3)\n  3352: i32 s1 = t1 + 0xc0\n  3356: a2 = u64 [sp + 0x20]\n  3359: jump @83 if a2 >=u a5\n      : @82 (gas: 4)\n  3362: a2 = u64 [sp + 0x158]\n  3366: u32 [a2] = a5\n  3368: u64 [sp + 0x20] = a5\n  3371: fallthrough\n      : @83 (gas: 39)\n  3372: a2 = u64 [sp + 0x140]\n  3376: s1 = s1 + a2\n  3379: u8 [s1 + 31] = 0x26\n  3383: u8 [s1 + 30] = 0x12\n  3387: u8 [s1 + 29] = 0xad\n  3392: u8 [s1 + 28] = 0xd4\n  3397: u8 [s1 + 27] = 0x38\n  3401: u8 [s1 + 26] = 0x81\n  3406: u8 [s1 + 25] = 0x9d\n  3411: u8 [s1 + 24] = 0x5e\n  3415: u8 [s1 + 23] = 0x60\n  3419: u8 [s1 + 22] = 0xa2\n  3424: u8 [s1 + 21] = 0xc8\n  3429: u8 [s1 + 20] = 0x30\n  3433: u8 [s1 + 19] = 0x17\n  3437: u8 [s1 + 18] = 0xce\n  3442: u8 [s1 + 17] = 0x38\n  3446: u8 [s1 + 16] = 0x6a\n  3450: u8 [s1 + 15] = 0xbb\n  3455: u8 [s1 + 14] = 0xed\n  3460: u8 [s1 + 13] = 0x82\n  3465: u8 [s1 + 12] = 0x48\n  3469: u8 [s1 + 11] = 0x7b\n  3473: u8 [s1 + 10] = 0x54\n  3477: u8 [s1 + 9] = 0x1f\n  3481: u8 [s1 + 8] = 0x6\n  3485: u8 [s1 + 7] = 0x8c\n  3490: u8 [s1 + 6] = 0x39\n  3494: u8 [s1 + 5] = 0x93\n  3499: u8 [s1 + 4] = 0x14\n  3503: u8 [s1 + 3] = 0x69\n  3507: u8 [s1 + 2] = 0xc8\n  3512: u8 [s1 + 1] = 0xcb\n  3517: a4 = 0xffffff20\n  3527: a4 = t1 <u a4\n  3530: a4 = 0 if t0 != 0\n  3532: a4 = 0 if t2 != 0\n  3534: u8 [s1 + 0] = 0xa1\n  3538: jump @96 if a4 == 0\n      : @84 (gas: 1)\n  3542: jump @96 if a1 >=u 2041\n      : @85 (gas: 4)\n  3548: a2 = t1 + 0x11f\n  3552: a5 = u64 [sp + 0x150]\n  3556: a5 = a5 & a2\n  3559: jump @96 if a5 >u 65536\n      : @86 (gas: 3)\n  3566: i32 s1 = t1 + 0xe0\n  3570: a2 = u64 [sp + 0x20]\n  3573: jump @88 if a2 >=u a5\n      : @87 (gas: 4)\n  3576: a2 = u64 [sp + 0x158]\n  3580: u32 [a2] = a5\n  3582: u64 [sp + 0x20] = a5\n  3585: fallthrough\n      : @88 (gas: 39)\n  3586: a2 = u64 [sp + 0x140]\n  3590: s1 = s1 + a2\n  3593: u8 [s1 + 31] = 0xfd\n  3598: u8 [s1 + 30] = 0xef\n  3603: u8 [s1 + 29] = 0xde\n  3608: u8 [s1 + 28] = 0x29\n  3612: u8 [s1 + 27] = 0x3\n  3616: u8 [s1 + 26] = 0x8a\n  3621: u8 [s1 + 25] = 0xfc\n  3626: u8 [s1 + 24] = 0x29\n  3630: u8 [s1 + 23] = 0xac\n  3635: u8 [s1 + 22] = 0xab\n  3640: u8 [s1 + 21] = 0x42\n  3644: u8 [s1 + 20] = 0x94\n  3649: u8 [s1 + 19] = 0xde\n  3654: u8 [s1 + 18] = 0x9a\n  3659: u8 [s1 + 17] = 0x93\n  3664: u8 [s1 + 16] = 0x2f\n  3668: u8 [s1 + 15] = 0x4e\n  3672: u8 [s1 + 14] = 0x61\n  3676: u8 [s1 + 13] = 0xf7\n  3681: u8 [s1 + 12] = 0x76\n  3685: u8 [s1 + 11] = 0x9d\n  3690: u8 [s1 + 10] = 0xc2\n  3695: u8 [s1 + 9] = 0xe9\n  3700: u8 [s1 + 8] = 0x81\n  3705: u8 [s1 + 7] = 0x51\n  3709: u8 [s1 + 6] = 0xc6\n  3714: u8 [s1 + 5] = 0x8b\n  3719: u8 [s1 + 4] = 0x3d\n  3723: u8 [s1 + 3] = 0x2f\n  3727: u8 [s1 + 2] = 0xa7\n  3732: u8 [s1 + 1] = 0xa\n  3736: a4 = 0xffffff00\n  3746: a4 = t1 <u a4\n  3749: a4 = 0 if t0 != 0\n  3751: a4 = 0 if t2 != 0\n  3753: u8 [s1 + 0] = 0x85\n  3757: jump @96 if a4 == 0\n      : @89 (gas: 2)\n  3761: i32 a2 = t1 >> 0x8\n  3764: jump @96 if a2 >=u 255\n      : @90 (gas: 4)\n  3770: a2 = t1 + 0x13f\n  3774: a5 = u64 [sp + 0x150]\n  3778: a5 = a5 & a2\n  3781: jump @96 if a5 >u 65536\n      : @91 (gas: 3)\n  3788: i32 s1 = t1 + 0x100\n  3792: a2 = u64 [sp + 0x20]\n  3795: jump @93 if a2 >=u a5\n      : @92 (gas: 4)\n  3798: a2 = u64 [sp + 0x158]\n  3802: u32 [a2] = a5\n  3804: u64 [sp + 0x20] = a5\n  3807: fallthrough\n      : @93 (gas: 39)\n  3808: a2 = u64 [sp + 0x140]\n  3812: s1 = s1 + a2\n  3815: u8 [s1 + 31] = 0x1e\n  3819: u8 [s1 + 30] = 0xdc\n  3824: u8 [s1 + 29] = 0x3\n  3828: u8 [s1 + 28] = 0xe8\n  3833: u8 [s1 + 27] = 0x6a\n  3837: u8 [s1 + 26] = 0x2c\n  3841: u8 [s1 + 25] = 0xec\n  3846: u8 [s1 + 24] = 0x78\n  3850: u8 [s1 + 23] = 0xe8\n  3855: u8 [s1 + 22] = 0xba\n  3860: u8 [s1 + 21] = 0x5f\n  3864: u8 [s1 + 20] = 0xb7\n  3869: u8 [s1 + 19] = 0x42\n  3873: u8 [s1 + 18] = 0xb7\n  3878: u8 [s1 + 17] = 0x34\n  3882: u8 [s1 + 16] = 0x8b\n  3887: u8 [s1 + 15] = 0x60\n  3891: u8 [s1 + 14] = 0xce\n  3896: u8 [s1 + 13] = 0x1c\n  3900: u8 [s1 + 12] = 0x9b\n  3905: u8 [s1 + 11] = 0x8b\n  3910: u8 [s1 + 10] = 0xbf\n  3915: u8 [s1 + 9] = 0x28\n  3919: u8 [s1 + 8] = 0x90\n  3924: u8 [s1 + 7] = 0xc8\n  3929: u8 [s1 + 6] = 0xbf\n  3934: u8 [s1 + 5] = 0x2d\n  3938: u8 [s1 + 4] = 0x75\n  3942: u8 [s1 + 3] = 0x78\n  3946: u8 [s1 + 2] = 0xf6\n  3951: u8 [s1 + 1] = 0xc6\n  3956: a4 = 0xfffffee0\n  3966: a4 = t1 <u a4\n  3969: a4 = 0 if t0 != 0\n  3971: a4 = 0 if t2 != 0\n  3973: u8 [s1 + 0] = 0xe9\n  3977: jump @96 if a4 == 0\n      : @94 (gas: 1)\n  3980: jump @96 if a1 >=u 2039\n      : @95 (gas: 5)\n  3985: a2 = t1 + 0x15f\n  3989: a1 = u64 [sp + 0x150]\n  3993: a1 = a1 & a2\n  3996: u64 [sp + 0x10] = a1\n  3999: jump @101 if a1 <=u 65536\n      : @96 (gas: 1)\n  4005: trap\n      : @97 (gas: 2)\n  4006: a1 = u64 [sp + 0x140]\n  4010: fallthrough\n      : @98 (gas: 17)\n  4011: u64 [a1 + 16] = 0\n  4014: u64 [a1 + 24] = 0\n  4017: u64 [a1 + 8] = 0\n  4020: u64 [a1 + 0] = 0x717b484e\n  4026: u32 [a1 + 32] = 0x41000000\n  4033: u32 [a1 + 20] = 0\n  4036: u32 [a1 + 24] = 0\n  4039: u32 [a1 + 28] = 0\n  4042: u32 [a1 + 8] = 0\n  4045: u32 [a1 + 12] = 0\n  4048: u32 [a1 + 16] = 0\n  4051: u32 [a1 + 4] = 0\n  4054: i32 a1 = a1 + 0\n  4056: a0 = 0x1\n  4059: a2 = 0x24\n  4062: ecalli 11 // 'seal_return'\n  4064: fallthrough\n      : @99 (gas: 5)\n  4065: i32 a1 = s1 + 0\n  4067: a0 = 0x1\n  4070: a2 = 0\n  4072: ecalli 11 // 'seal_return'\n  4074: fallthrough\n      : @100 (gas: 5)\n  4075: a1 = i32 [sp + 0x140]\n  4079: a0 = 0x1\n  4082: a2 = 0\n  4084: ecalli 11 // 'seal_return'\n  4086: fallthrough\n      : @101 (gas: 116)\n  4087: a2 = u64 [sp + 0x80]\n  4091: a2 = a2 << 0x8\n  4094: a1 = u64 [sp + 0x38]\n  4097: t2 = a2 | a1\n  4100: a2 = u64 [sp + 0xf8]\n  4104: a2 = a2 << 0x10\n  4107: a4 = u64 [sp + 0xf0]\n  4111: a4 = a4 << 0x18\n  4114: a3 = a4 | a2\n  4117: a2 = u64 [sp + 0x100]\n  4121: a2 = a2 << 0x8\n  4124: a1 = u64 [sp + 0x60]\n  4127: s1 = a2 | a1\n  4130: a2 = u64 [sp + 0x110]\n  4134: a2 = a2 << 0x10\n  4137: a4 = u64 [sp + 0x108]\n  4141: a4 = a4 << 0x18\n  4144: a2 = a2 | a4\n  4147: u64 [sp + 0x108] = a2\n  4151: a2 = u64 [sp + 0x30]\n  4154: a2 = a2 << 0x8\n  4157: a1 = u64 [sp + 0x70]\n  4160: a1 = a1 | a2\n  4163: u64 [sp + 0x110] = a1\n  4167: a2 = u64 [sp + 0x58]\n  4170: a2 = a2 << 0x10\n  4173: a4 = u64 [sp + 0x50]\n  4176: a4 = a4 << 0x18\n  4179: a2 = a2 | a4\n  4182: u64 [sp + 0xf8] = a2\n  4186: a2 = u64 [sp + 0x28]\n  4189: a2 = a2 << 0x8\n  4192: a1 = u64 [sp + 0x68]\n  4195: a1 = a1 | a2\n  4198: u64 [sp + 0x100] = a1\n  4202: a2 = u64 [sp + 0x48]\n  4205: a2 = a2 << 0x10\n  4208: a4 = u64 [sp + 0x40]\n  4211: a4 = a4 << 0x18\n  4214: a2 = a2 | a4\n  4217: u64 [sp + 0xf0] = a2\n  4221: a4 = u64 [sp + 0x118]\n  4225: a4 = a4 << 0x8\n  4228: a1 = u64 [sp + 0x78]\n  4231: a1 = a1 | a4\n  4234: u64 [sp + 0x118] = a1\n  4238: a5 = u64 [sp + 0x120]\n  4242: a5 = a5 << 0x10\n  4245: a2 = u64 [sp + 0xb8]\n  4249: a2 = a2 << 0x18\n  4252: a2 = a2 | a5\n  4255: u64 [sp + 0xb8] = a2\n  4259: a3 = a3 | t2\n  4262: a5 = u64 [sp + 0xd0]\n  4266: a5 = a5 << 0x8\n  4269: a1 = u64 [sp + 0x88]\n  4273: a1 = a1 | a5\n  4276: u64 [sp + 0xd0] = a1\n  4280: a2 = u64 [sp + 0xe8]\n  4284: a2 = a2 << 0x10\n  4287: ra = u64 [sp + 0xe0]\n  4291: ra = ra << 0x18\n  4294: a1 = ra | a2\n  4297: u64 [sp + 0xe8] = a1\n  4301: a1 = u64 [sp + 0x108]\n  4305: a1 = a1 | s1\n  4308: u64 [sp + 0x120] = a1\n  4312: t2 = u64 [sp + 0xb0]\n  4316: t2 = t2 << 0x8\n  4319: a1 = u64 [sp + 0xd8]\n  4323: a1 = t2 | a1\n  4326: u64 [sp + 0x108] = a1\n  4330: s1 = u64 [sp + 0xc8]\n  4334: s1 = s1 << 0x10\n  4337: ra = u64 [sp + 0xc0]\n  4341: ra = ra << 0x18\n  4344: s1 = ra | s1\n  4347: a1 = u64 [sp + 0x110]\n  4351: a2 = u64 [sp + 0xf8]\n  4355: a1 = a1 | a2\n  4358: u64 [sp + 0x110] = a1\n  4362: a4 = u64 [sp + 0x90]\n  4366: a4 = a4 << 0x8\n  4369: a1 = u64 [sp + 0xa8]\n  4373: t2 = a4 | a1\n  4376: a1 = u64 [sp + 0xa0]\n  4380: a1 = a1 << 0x10\n  4383: a5 = u64 [sp + 0x98]\n  4387: a5 = a5 << 0x18\n  4390: a5 = a5 | a1\n  4393: a1 = u64 [sp + 0x100]\n  4397: a2 = u64 [sp + 0xf0]\n  4401: ra = a2 | a1\n  4404: a1 = u64 [sp + 0x118]\n  4408: a2 = u64 [sp + 0xb8]\n  4412: a1 = a1 | a2\n  4415: a2 = u64 [sp + 0xd0]\n  4419: a4 = u64 [sp + 0xe8]\n  4423: a4 = a4 | a2\n  4426: a2 = u64 [sp + 0x108]\n  4430: s1 = s1 | a2\n  4433: a5 = a5 | t2\n  4436: a2 = a3 << 0x20\n  4439: a1 = a1 | a2\n  4442: a2 = u64 [sp + 0x120]\n  4446: a2 = a2 << 0x20\n  4449: t2 = a2 | a4\n  4452: a2 = u64 [sp + 0x110]\n  4456: a2 = a2 << 0x20\n  4459: s1 = s1 | a2\n  4462: ra = ra << 0x20\n  4465: a5 = ra | a5\n  4468: i32 a4 = t1 + 0x120\n  4472: a2 = u64 [sp + 0x10]\n  4475: a3 = u64 [sp + 0x20]\n  4478: jump @103 if a3 >=u a2\n      : @102 (gas: 4)\n  4481: a2 = u64 [sp + 0x158]\n  4485: a3 = u64 [sp + 0x10]\n  4488: u32 [a2] = a3\n  4490: fallthrough\n      : @103 (gas: 53)\n  4491: u64 [sp + 264] = 0\n  4495: u64 [sp + 272] = 0\n  4499: u64 [sp + 288] = 0\n  4503: u64 [sp + 280] = 0\n  4507: a2 = reverse t2\n  4509: u64 [sp + 0xb0] = a2\n  4513: a1 = reverse a1\n  4515: u64 [sp + 0xb8] = a1\n  4519: a1 = reverse a5\n  4521: u64 [sp + 0xc0] = a1\n  4525: a1 = reverse s1\n  4527: u64 [sp + 0xc8] = a1\n  4531: a1 = u64 [sp + 0x140]\n  4535: a4 = a4 + a1\n  4538: u8 [a4 + 31] = 0x7f\n  4542: u8 [a4 + 30] = 0xf7\n  4547: u8 [a4 + 29] = 0x46\n  4551: u8 [a4 + 28] = 0xbe\n  4556: u8 [a4 + 27] = 0xa1\n  4561: u8 [a4 + 26] = 0x39\n  4565: u8 [a4 + 25] = 0x54\n  4569: u8 [a4 + 24] = 0xd7\n  4574: u8 [a4 + 23] = 0xef\n  4579: u8 [a4 + 22] = 0x4f\n  4583: u8 [a4 + 21] = 0xba\n  4588: u8 [a4 + 20] = 0x27\n  4592: u8 [a4 + 19] = 0x8d\n  4597: u8 [a4 + 18] = 0x29\n  4601: u8 [a4 + 17] = 0xa7\n  4606: u8 [a4 + 16] = 0x25\n  4610: u8 [a4 + 15] = 0x7c\n  4614: u8 [a4 + 14] = 0xb9\n  4619: u8 [a4 + 13] = 0x72\n  4623: u8 [a4 + 12] = 0xb4\n  4628: u8 [a4 + 11] = 0x2b\n  4632: u8 [a4 + 10] = 0x3\n  4636: u8 [a4 + 9] = 0x89\n  4641: u8 [a4 + 8] = 0x43\n  4645: u8 [a4 + 7] = 0xbc\n  4650: u8 [a4 + 6] = 0x31\n  4654: u8 [a4 + 5] = 0x45\n  4658: u8 [a4 + 4] = 0x1f\n  4662: u8 [a4 + 3] = 0x2e\n  4666: u8 [a4 + 2] = 0x2c\n  4670: u8 [a4 + 1] = 0xe2\n  4675: u8 [a4 + 0] = 0xa9\n  4679: a2 = 0x900000000000000\n  4689: u64 [sp + 0xe0] = a2\n  4693: i32 a1 = sp + 0x2a0\n  4697: u64 [sp + 0xd8] = a1\n  4701: i32 a1 = sp + 0x2c0\n  4705: u64 [sp + 0xd0] = a1\n  4709: jump @106\n      : @104 (gas: 125)\n  4712: i32 a3 = t1 + 0\n  4714: a1 = u64 [sp + 0x140]\n  4718: a3 = a3 + a1\n  4721: a2 = u8 [a3 + 0x1]\n  4724: a4 = u8 [a3]\n  4726: a5 = u8 [a3 + 0x2]\n  4729: s1 = u8 [a3 + 0x3]\n  4732: a2 = a2 << 0x8\n  4735: a2 = a2 | a4\n  4738: a5 = a5 << 0x10\n  4741: s1 = s1 << 0x18\n  4744: a5 = a5 | s1\n  4747: a1 = a5 | a2\n  4750: a4 = u8 [a3 + 0x5]\n  4753: a5 = u8 [a3 + 0x4]\n  4756: s1 = u8 [a3 + 0x6]\n  4759: a2 = u8 [a3 + 0x7]\n  4762: a4 = a4 << 0x8\n  4765: a4 = a4 | a5\n  4768: s1 = s1 << 0x10\n  4771: a2 = a2 << 0x18\n  4774: a2 = a2 | s1\n  4777: a2 = a2 | a4\n  4780: a2 = a2 << 0x20\n  4783: a1 = a1 | a2\n  4786: u64 [sp + 0x100] = a1\n  4790: a4 = u8 [a3 + 0x9]\n  4793: a5 = u8 [a3 + 0x8]\n  4796: s1 = u8 [a3 + 0xa]\n  4799: a2 = u8 [a3 + 0xb]\n  4802: a4 = a4 << 0x8\n  4805: a4 = a4 | a5\n  4808: s1 = s1 << 0x10\n  4811: a2 = a2 << 0x18\n  4814: a2 = a2 | s1\n  4817: t2 = a2 | a4\n  4820: a4 = u8 [a3 + 0xd]\n  4823: a5 = u8 [a3 + 0xc]\n  4826: s1 = u8 [a3 + 0xe]\n  4829: a2 = u8 [a3 + 0xf]\n  4832: a4 = a4 << 0x8\n  4835: a4 = a4 | a5\n  4838: s1 = s1 << 0x10\n  4841: a2 = a2 << 0x18\n  4844: a2 = a2 | s1\n  4847: a2 = a2 | a4\n  4850: a2 = a2 << 0x20\n  4853: t2 = a2 | t2\n  4856: a2 = u8 [a3 + 0x11]\n  4859: a4 = u8 [a3 + 0x10]\n  4862: s1 = u8 [a3 + 0x12]\n  4865: a5 = u8 [a3 + 0x13]\n  4868: a2 = a2 << 0x8\n  4871: a2 = a2 | a4\n  4874: s1 = s1 << 0x10\n  4877: a5 = a5 << 0x18\n  4880: a5 = a5 | s1\n  4883: ra = a5 | a2\n  4886: a4 = u8 [a3 + 0x15]\n  4889: a5 = u8 [a3 + 0x14]\n  4892: s1 = u8 [a3 + 0x16]\n  4895: a2 = u8 [a3 + 0x17]\n  4898: a4 = a4 << 0x8\n  4901: a4 = a4 | a5\n  4904: s1 = s1 << 0x10\n  4907: a2 = a2 << 0x18\n  4910: a2 = a2 | s1\n  4913: a2 = a2 | a4\n  4916: a2 = a2 << 0x20\n  4919: ra = a2 | ra\n  4922: a2 = u8 [a3 + 0x19]\n  4925: a5 = u8 [a3 + 0x18]\n  4928: s1 = u8 [a3 + 0x1a]\n  4931: a4 = u8 [a3 + 0x1b]\n  4934: a2 = a2 << 0x8\n  4937: a2 = a2 | a5\n  4940: s1 = s1 << 0x10\n  4943: a4 = a4 << 0x18\n  4946: a4 = a4 | s1\n  4949: a2 = a2 | a4\n  4952: a4 = u8 [a3 + 0x1d]\n  4955: a5 = u8 [a3 + 0x1c]\n  4958: s1 = u8 [a3 + 0x1e]\n  4961: a3 = u8 [a3 + 0x1f]\n  4964: a4 = a4 << 0x8\n  4967: a4 = a4 | a5\n  4970: s1 = s1 << 0x10\n  4973: a3 = a3 << 0x18\n  4976: a3 = a3 | s1\n  4979: a3 = a3 | a4\n  4982: a3 = a3 << 0x20\n  4985: a2 = a2 | a3\n  4988: a1 = t1 + 0x20\n  4991: u64 [sp + 0xf8] = a1\n  4995: a1 = a1 <u t1\n  4998: a3 = t0 + a1\n  5001: u64 [sp + 0xf0] = a3\n  5005: s1 = a3 <u t0\n  5008: s1 = a1 if a1 == 0\n  5011: s1 = s1 + a0\n  5014: u64 [sp + 0xe8] = s1\n  5018: a0 = s1 <u a0\n  5021: a1 = u64 [sp + 0x18]\n  5024: a1 = a1 + a0\n  5027: u64 [sp + 0x18] = a1\n  5030: s1 = u64 [sp + 0x108]\n  5034: a0 = s1 << 0x38\n  5037: a1 = u64 [sp + 0xe0]\n  5041: a0 = a0 + a1\n  5044: u64 [sp + 0x2b8] = a0\n  5048: u64 [sp + 0x2d8] = a2\n  5052: u64 [sp + 0x2d0] = ra\n  5056: u64 [sp + 0x2c8] = t2\n  5060: a0 = u64 [sp + 0x100]\n  5064: u64 [sp + 0x2c0] = a0\n  5068: u64 [sp + 688] = 0\n  5072: u64 [sp + 680] = 0\n  5076: u64 [sp + 672] = 0\n  5080: a2 = 0xffffffffffffffff\n  5083: a4 = 0x20\n  5086: a0 = 0\n  5088: a1 = u64 [sp + 0xd8]\n  5092: a3 = u64 [sp + 0xd0]\n  5096: ecalli 13 // 'set_storage'\n  5098: fallthrough\n      : @105 (gas: 23)\n  5099: a2 = s1 <u 0x9\n  5102: a0 = s1 + 0x1\n  5105: a1 = a0 <u 0x1\n  5108: a3 = u64 [sp + 0x110]\n  5112: a2 = 0 if a3 != 0\n  5114: a1 = a1 + a3\n  5117: a3 = a0 | a1\n  5120: a3 = a3 <u 0x1\n  5123: a5 = u64 [sp + 0x120]\n  5127: a3 = a3 + a5\n  5130: t0 = a3 <u a5\n  5133: a4 = u64 [sp + 0x118]\n  5137: a5 = a5 | a4\n  5140: a4 = a4 + t0\n  5143: a2 = 0 if a5 != 0\n  5145: u64 [sp + 0x108] = a0\n  5149: u64 [sp + 0x110] = a1\n  5153: u64 [sp + 0x120] = a3\n  5157: u64 [sp + 0x118] = a4\n  5161: t1 = u64 [sp + 0xf8]\n  5165: t0 = u64 [sp + 0xf0]\n  5169: a0 = u64 [sp + 0xe8]\n  5173: jump @111 if a2 == 0\n      : @106 (gas: 9)\n  5176: a2 = t1 | a0\n  5179: a1 = u64 [sp + 0x18]\n  5182: a3 = t0 | a1\n  5185: a2 = a2 | a3\n  5188: a2 = a2 >> 0x20\n  5191: a3 = a3 | a0\n  5194: a3 = a3 << 0x20\n  5197: a2 = a2 | a3\n  5200: jump @96 if a2 != 0\n      : @107 (gas: 2)\n  5204: i32 a2 = t1 >> 0x10\n  5207: jump @96 if a2 != 0\n      : @108 (gas: 4)\n  5211: a2 = t1 + 0x3f\n  5214: a3 = u64 [sp + 0x150]\n  5218: a3 = a3 & a2\n  5221: jump @96 if a3 >u 65536\n      : @109 (gas: 3)\n  5228: a1 = u64 [sp + 0x158]\n  5232: a2 = i32 [a1]\n  5234: jump @104 if a2 >=u a3\n      : @110 (gas: 3)\n  5238: a1 = u64 [sp + 0x158]\n  5242: u32 [a1] = a3\n  5244: jump @104\n      : @111 (gas: 8)\n  5247: u64 [sp + 472] = 0\n  5251: u64 [sp + 464] = 0\n  5255: u64 [sp + 456] = 0\n  5259: s1 = 0x2\n  5262: u64 [sp + 0x1c0] = s1\n  5266: a0 = sp + 0x180\n  5270: a1 = sp + 0x1c0\n  5274: ra = 6, jump @0\n      : @112 [@dyn 3] (gas: 20)\n  5279: a0 = u32 [sp + 0x194]\n  5283: a1 = u64 [sp + 0x198]\n  5287: a0 = a0 << 0x20\n  5290: a2 = u64 [sp + 0x138]\n  5294: a0 = a0 | a2\n  5297: a2 = u64 [sp + 0x148]\n  5301: a1 = a1 | a2\n  5304: u64 [sp + 504] = 0\n  5308: u64 [sp + 496] = 0\n  5312: u64 [sp + 488] = 0\n  5316: u64 [sp + 0x1e0] = s1\n  5320: a2 = u64 [sp + 0xb0]\n  5324: u64 [sp + 0x208] = a2\n  5328: a2 = u64 [sp + 0xb8]\n  5332: u64 [sp + 0x200] = a2\n  5336: u64 [sp + 0x218] = a1\n  5340: u64 [sp + 0x210] = a0\n  5344: a0 = sp + 0x1e0\n  5348: a1 = sp + 0x200\n  5352: ra = 8, jump @1\n      : @113 [@dyn 4] (gas: 8)\n  5357: u64 [sp + 568] = 0\n  5361: u64 [sp + 560] = 0\n  5365: u64 [sp + 552] = 0\n  5369: s1 = 0x1\n  5372: u64 [sp + 0x220] = s1\n  5376: a0 = sp + 0x160\n  5380: a1 = sp + 0x220\n  5384: ra = 10, jump @0\n      : @114 [@dyn 5] (gas: 20)\n  5389: a0 = u32 [sp + 0x174]\n  5393: a1 = u64 [sp + 0x178]\n  5397: a0 = a0 << 0x20\n  5400: a2 = u64 [sp + 0x128]\n  5404: a0 = a0 | a2\n  5407: a2 = u64 [sp + 0x130]\n  5411: a1 = a1 | a2\n  5414: u64 [sp + 600] = 0\n  5418: u64 [sp + 592] = 0\n  5422: u64 [sp + 584] = 0\n  5426: u64 [sp + 0x240] = s1\n  5430: a2 = u64 [sp + 0xc0]\n  5434: u64 [sp + 0x268] = a2\n  5438: a2 = u64 [sp + 0xc8]\n  5442: u64 [sp + 0x260] = a2\n  5446: u64 [sp + 0x278] = a1\n  5450: u64 [sp + 0x270] = a0\n  5454: a0 = sp + 0x240\n  5458: a1 = sp + 0x260\n  5462: ra = 12, jump @1\n      : @115 [@dyn 6] (gas: 3)\n  5467: a0 = u64 [sp + 0x158]\n  5471: a0 = i32 [a0]\n  5473: jump @117 if a0 >u 95\n      : @116 (gas: 4)\n  5477: a0 = 0x60\n  5480: a1 = u64 [sp + 0x158]\n  5484: u32 [a1] = a0\n  5486: fallthrough\n      : @117 (gas: 17)\n  5487: a4 = u64 [sp + 0x140]\n  5491: a1 = u64 [a4 + 0x48]\n  5494: a2 = u64 [a4 + 0x58]\n  5497: a3 = u64 [a4 + 0x40]\n  5500: a4 = u64 [a4 + 0x50]\n  5503: a1 = reverse a1\n  5505: s1 = reverse a2\n  5507: a2 = reverse a3\n  5509: a3 = reverse a4\n  5511: a2 = a2 | a3\n  5514: a3 = s1 | a1\n  5517: a3 = a3 | a2\n  5520: a3 = a3 >> 0x20\n  5523: a1 = a1 | a2\n  5526: a1 = a1 << 0x20\n  5529: a1 = a1 | a3\n  5532: jump @96 if a1 != 0\n      : @118 (gas: 2)\n  5536: i32 a1 = s1 >> 0x10\n  5539: jump @96 if a1 != 0\n      : @119 (gas: 4)\n  5543: a1 = s1 + 0x1f\n  5546: a2 = u64 [sp + 0x150]\n  5550: a1 = a1 & a2\n  5553: jump @96 if a1 >u 65536\n      : @120 (gas: 1)\n  5560: jump @122 if a0 >=u a1\n      : @121 (gas: 3)\n  5563: a0 = u64 [sp + 0x158]\n  5567: u32 [a0] = a1\n  5569: fallthrough\n      : @122 (gas: 6)\n  5570: a0 = u64 [sp + 0x140]\n  5574: i32 a0 = a0 + s1\n  5577: a1 = 0\n  5579: a2 = 0\n  5581: ecalli 1 // 'call_data_copy'\n  5583: fallthrough\n      : @123 (gas: 2)\n  5584: a1 = i32 [0x20050]\n  5589: jump @125 if a1 == 0\n      : @124 (gas: 4)\n  5592: a0 = 0x30080\n  5597: i32 a0 = a0 + 0\n  5599: ecalli 12 // 'set_immutable_data'\n  5601: fallthrough\n      : @125 (gas: 3)\n  5602: a0 = s1\n  5604: a1 = 0\n  5606: ra = 14, jump @8\n      : @126 [@dyn 7] (gas: 6)\n  5611: i32 a1 = a0 + 0\n  5613: a0 = 0\n  5615: a2 = 0\n  5617: ra = 0x10\n  5620: ecalli 11 // 'seal_return'\n  5622: fallthrough\n      : @127 [@dyn 8] (gas: 11)\n  5623: sp = sp + 0xfffffffffffff808\n  5627: u64 [sp + 0x7f0] = ra\n  5631: u64 [sp + 0x7e8] = s0\n  5635: u64 [sp + 0x7e0] = s1\n  5639: s0 = sp + 0x7f8\n  5643: sp = sp + 0xfffffffffffffc18\n  5647: sp = sp & 0xffffffffffffffe0\n  5650: s1 = sp\n  5652: a2 = 0x2004c\n  5657: a0 = i32 [0x2004c]\n  5662: jump @129 if a0 >u 95\n      : @128 (gas: 2)\n  5666: u32 [0x2004c] = 0x60\n  5672: fallthrough\n      : @129 (gas: 12)\n  5673: u64 [s1 + 0x238] = a2\n  5677: a2 = 0x20060\n  5682: a1 = 0x20048\n  5687: u64 [0x200b0] = 0\n  5692: u64 [0x200a8] = 0\n  5697: u64 [s1 + 0x228] = a1\n  5701: a1 = i32 [0x20048]\n  5706: a0 = 0x8000000000000000\n  5716: u64 [0x200b8] = a0\n  5721: u64 [s1 + 0x230] = a2\n  5725: u64 [0x200a0] = 0\n  5730: jump @131 if a1 >=u 4\n      : @130 (gas: 1)\n  5734: jump @732\n      : @131 (gas: 4)\n  5737: i32 a0 = s1 + 0x660\n  5741: a1 = 0\n  5743: ecalli 2 // 'call_data_load'\n  5745: fallthrough\n      : @132 (gas: 2)\n  5746: a0 = i32 [s1 + 0x67c]\n  5750: jump @146 if a0 >s 3347547350\n      : @133 (gas: 1)\n  5758: jump @166 if a0 >s 3102184803\n      : @134 (gas: 1)\n  5766: jump @136 if a0 == 2345299222\n      : @135 (gas: 1)\n  5773: jump @405\n      : @136 (gas: 7)\n  5776: u64 [s1 + 1880] = 0\n  5780: u64 [s1 + 1872] = 0\n  5784: u64 [s1 + 1864] = 0\n  5788: u64 [s1 + 1856] = 0\n  5792: i32 a0 = s1 + 0x740\n  5796: ecalli 14 // 'value_transferred'\n  5798: fallthrough\n      : @137 (gas: 8)\n  5799: a0 = u64 [s1 + 0x750]\n  5803: a1 = u64 [s1 + 0x758]\n  5807: a2 = u64 [s1 + 0x748]\n  5811: a3 = u64 [s1 + 0x740]\n  5815: a1 = a1 | a2\n  5818: a0 = a0 | a3\n  5821: a0 = a0 | a1\n  5824: jump @139 if a0 == 0\n      : @138 (gas: 1)\n  5827: jump @732\n      : @139 (gas: 5)\n  5830: a0 = u64 [s1 + 0x228]\n  5834: a1 = i32 [a0]\n  5836: a2 = s1 + 0x7ff\n  5840: a2 = a2 + 0x1b9\n  5844: jump @141 if a1 >u 3\n      : @140 (gas: 1)\n  5848: jump @732\n      : @141 (gas: 20)\n  5851: a0 = 0x300000000000000\n  5861: u64 [a2 + 0x1c0] = a0\n  5865: u64 [a2 + 440] = 0\n  5869: u64 [a2 + 432] = 0\n  5873: u64 [a2 + 424] = 0\n  5877: u64 [a2 + 480] = 0\n  5881: u64 [a2 + 472] = 0\n  5885: u64 [a2 + 464] = 0\n  5889: u64 [a2 + 456] = 0\n  5893: u32 [a2 + 488] = 0x20\n  5898: a0 = s1 + 0x1000\n  5902: i32 a1 = a0 + 0xfffffffffffffb60\n  5906: a0 = s1 + 0x1000\n  5910: i32 a3 = a0 + 0xfffffffffffffb80\n  5914: a0 = s1 + 0x1000\n  5918: i32 a4 = a0 + 0xfffffffffffffba0\n  5922: a2 = 0xffffffffffffffff\n  5925: a0 = 0\n  5927: ecalli 6 // 'get_storage'\n  5929: fallthrough\n      : @142 (gas: 3)\n  5930: a1 = u64 [s1 + 0x238]\n  5934: a2 = i32 [a1]\n  5936: jump @144 if a2 >u 95\n      : @143 (gas: 3)\n  5940: a2 = 0x60\n  5943: u32 [a1] = a2\n  5945: fallthrough\n      : @144 (gas: 17)\n  5946: a4 = u64 [s1 + 0x230]\n  5950: a0 = u64 [a4 + 0x48]\n  5953: a1 = u64 [a4 + 0x58]\n  5956: a3 = u64 [a4 + 0x40]\n  5959: a4 = u64 [a4 + 0x50]\n  5962: a5 = reverse a0\n  5964: a0 = reverse a1\n  5966: a1 = reverse a3\n  5968: a3 = reverse a4\n  5970: a1 = a1 | a3\n  5973: a3 = a0 | a5\n  5976: a3 = a3 | a1\n  5979: a3 = a3 >> 0x20\n  5982: a1 = a1 | a5\n  5985: a1 = a1 << 0x20\n  5988: a1 = a1 | a3\n  5991: jump @159 if a1 == 0\n      : @145 (gas: 1)\n  5995: jump @660\n      : @146 (gas: 1)\n  5998: jump @185 if a0 <=s 1172329022\n      : @147 (gas: 1)\n  6006: jump @149 if a0 == 1172329023\n      : @148 (gas: 1)\n  6013: jump @390\n      : @149 (gas: 7)\n  6016: u64 [s1 + 1784] = 0\n  6020: u64 [s1 + 1776] = 0\n  6024: u64 [s1 + 1768] = 0\n  6028: u64 [s1 + 1760] = 0\n  6032: i32 a0 = s1 + 0x6e0\n  6036: ecalli 14 // 'value_transferred'\n  6038: fallthrough\n      : @150 (gas: 8)\n  6039: a0 = u64 [s1 + 0x6f0]\n  6043: a1 = u64 [s1 + 0x6f8]\n  6047: a2 = u64 [s1 + 0x6e8]\n  6051: a3 = u64 [s1 + 0x6e0]\n  6055: a1 = a1 | a2\n  6058: a0 = a0 | a3\n  6061: a0 = a0 | a1\n  6064: jump @152 if a0 == 0\n      : @151 (gas: 1)\n  6067: jump @732\n      : @152 (gas: 5)\n  6070: a0 = u64 [s1 + 0x228]\n  6074: a0 = i32 [a0]\n  6076: a2 = s1 + 0x7ff\n  6080: a2 = a2 + 0x1b9\n  6084: jump @154 if a0 >u 3\n      : @153 (gas: 1)\n  6088: jump @732\n      : @154 (gas: 20)\n  6091: a0 = 0x400000000000000\n  6101: u64 [a2 + 0x1c0] = a0\n  6105: u64 [a2 + 440] = 0\n  6109: u64 [a2 + 432] = 0\n  6113: u64 [a2 + 424] = 0\n  6117: u64 [a2 + 480] = 0\n  6121: u64 [a2 + 472] = 0\n  6125: u64 [a2 + 464] = 0\n  6129: u64 [a2 + 456] = 0\n  6133: u32 [a2 + 488] = 0x20\n  6138: a0 = s1 + 0x1000\n  6142: i32 a1 = a0 + 0xfffffffffffffb60\n  6146: a0 = s1 + 0x1000\n  6150: i32 a3 = a0 + 0xfffffffffffffb80\n  6154: a0 = s1 + 0x1000\n  6158: i32 a4 = a0 + 0xfffffffffffffba0\n  6162: a2 = 0xffffffffffffffff\n  6165: a0 = 0\n  6167: ecalli 6 // 'get_storage'\n  6169: fallthrough\n      : @155 (gas: 3)\n  6170: a1 = u64 [s1 + 0x238]\n  6174: a2 = i32 [a1]\n  6176: jump @157 if a2 >u 95\n      : @156 (gas: 3)\n  6180: a2 = 0x60\n  6183: u32 [a1] = a2\n  6185: fallthrough\n      : @157 (gas: 17)\n  6186: a4 = u64 [s1 + 0x230]\n  6190: a0 = u64 [a4 + 0x48]\n  6193: a1 = u64 [a4 + 0x58]\n  6196: a3 = u64 [a4 + 0x40]\n  6199: a4 = u64 [a4 + 0x50]\n  6202: a5 = reverse a0\n  6204: a0 = reverse a1\n  6206: a1 = reverse a3\n  6208: a3 = reverse a4\n  6210: a1 = a1 | a3\n  6213: a3 = a0 | a5\n  6216: a3 = a3 | a1\n  6219: a3 = a3 >> 0x20\n  6222: a1 = a1 | a5\n  6225: a1 = a1 << 0x20\n  6228: a1 = a1 | a3\n  6231: jump @159 if a1 == 0\n      : @158 (gas: 1)\n  6234: jump @660\n      : @159 (gas: 2)\n  6237: i32 a1 = a0 >> 0x10\n  6240: jump @161 if a1 == 0\n      : @160 (gas: 1)\n  6243: jump @660\n      : @161 (gas: 3)\n  6246: a1 = a0 + 0x3f\n  6249: a1 = a1 & 0x1ffe0\n  6254: jump @163 if a1 <=u 65536\n      : @162 (gas: 1)\n  6260: jump @660\n      : @163 (gas: 7)\n  6263: a4 = s1 + 0x7ff\n  6267: a4 = a4 + 0x1b9\n  6271: t0 = u64 [a4 + 0x1e0]\n  6275: a3 = u64 [a4 + 0x1d8]\n  6279: a5 = u64 [a4 + 0x1d0]\n  6283: a4 = u64 [a4 + 0x1c8]\n  6287: jump @165 if a2 >=u a1\n      : @164 (gas: 3)\n  6290: a2 = u64 [s1 + 0x238]\n  6294: u32 [a2] = a1\n  6296: fallthrough\n      : @165 (gas: 66)\n  6297: i32 a2 = a0 + 0\n  6299: a1 = u64 [s1 + 0x230]\n  6303: a2 = a2 + a1\n  6306: u8 [a2 + 0x10] = a3\n  6309: a1 = a5 >> 0x38\n  6312: u8 [a2 + 0xf] = a1\n  6315: a1 = a5 >> 0x30\n  6318: u8 [a2 + 0xe] = a1\n  6321: a1 = a5 >> 0x28\n  6324: u8 [a2 + 0xd] = a1\n  6327: a1 = a5 >> 0x20\n  6330: u8 [a2 + 0xc] = a1\n  6333: a1 = a5 >> 0x18\n  6336: u8 [a2 + 0xb] = a1\n  6339: a1 = a5 >> 0x10\n  6342: u8 [a2 + 0xa] = a1\n  6345: a1 = a5 >> 0x8\n  6348: u8 [a2 + 0x9] = a1\n  6351: u8 [a2 + 0x8] = a5\n  6354: a1 = a4 >> 0x38\n  6357: u8 [a2 + 0x7] = a1\n  6360: a1 = a4 >> 0x30\n  6363: u8 [a2 + 0x6] = a1\n  6366: a1 = a4 >> 0x28\n  6369: u8 [a2 + 0x5] = a1\n  6372: a1 = a4 >> 0x20\n  6375: u8 [a2 + 0x4] = a1\n  6378: a1 = a4 >> 0x18\n  6381: u8 [a2 + 0x3] = a1\n  6384: a1 = a4 >> 0x10\n  6387: u8 [a2 + 0x2] = a1\n  6390: a1 = a4 >> 0x8\n  6393: u8 [a2 + 0x1] = a1\n  6396: u8 [a2] = a4\n  6398: u8 [a2 + 0x18] = t0\n  6401: a1 = a3 >> 0x38\n  6404: u8 [a2 + 0x17] = a1\n  6407: a1 = a3 >> 0x30\n  6410: u8 [a2 + 0x16] = a1\n  6413: a1 = a3 >> 0x28\n  6416: u8 [a2 + 0x15] = a1\n  6419: a1 = a3 >> 0x20\n  6422: u8 [a2 + 0x14] = a1\n  6425: a1 = a3 >> 0x18\n  6428: u8 [a2 + 0x13] = a1\n  6431: a1 = a3 >> 0x10\n  6434: u8 [a2 + 0x12] = a1\n  6437: a3 = a3 >> 0x8\n  6440: u8 [a2 + 0x11] = a3\n  6443: a1 = t0 >> 0x38\n  6446: u8 [a2 + 0x1f] = a1\n  6449: a1 = t0 >> 0x30\n  6452: u8 [a2 + 0x1e] = a1\n  6455: a1 = t0 >> 0x28\n  6458: u8 [a2 + 0x1d] = a1\n  6461: a1 = t0 >> 0x20\n  6464: u8 [a2 + 0x1c] = a1\n  6467: a1 = t0 >> 0x18\n  6470: u8 [a2 + 0x1b] = a1\n  6473: a1 = t0 >> 0x10\n  6476: u8 [a2 + 0x1a] = a1\n  6479: a1 = t0 >> 0x8\n  6482: u8 [a2 + 0x19] = a1\n  6485: a1 = 0x20\n  6488: ra = 0x28\n  6491: jump @8\n      : @166 (gas: 1)\n  6494: jump @168 if a0 == 3102184804\n      : @167 (gas: 1)\n  6501: jump @573\n      : @168 (gas: 12)\n  6504: a0 = s1 + 0x1000\n  6508: u64 [a0 + 4294965496] = 0\n  6512: a0 = s1 + 0x1000\n  6516: u64 [a0 + 4294965488] = 0\n  6520: a0 = s1 + 0x1000\n  6524: u64 [a0 + 4294965480] = 0\n  6528: a0 = s1 + 0x1000\n  6532: u64 [a0 + 4294965472] = 0\n  6536: a0 = s1 + 0x1000\n  6540: i32 a0 = a0 + 0xfffffffffffff8e0\n  6544: ecalli 14 // 'value_transferred'\n  6546: fallthrough\n      : @169 (gas: 12)\n  6547: a0 = s1 + 0x1000\n  6551: a0 = u64 [a0 + 0xfffffffffffff8f0]\n  6555: a1 = s1 + 0x1000\n  6559: a1 = u64 [a1 + 0xfffffffffffff8f8]\n  6563: a2 = s1 + 0x1000\n  6567: a2 = u64 [a2 + 0xfffffffffffff8e8]\n  6571: a3 = s1 + 0x1000\n  6575: a3 = u64 [a3 + 0xfffffffffffff8e0]\n  6579: a1 = a1 | a2\n  6582: a0 = a0 | a3\n  6585: a0 = a0 | a1\n  6588: jump @171 if a0 == 0\n      : @170 (gas: 1)\n  6591: jump @732\n      : @171 (gas: 5)\n  6594: a0 = u64 [s1 + 0x228]\n  6598: a0 = i32 [a0]\n  6600: a2 = s1 + 0x7ff\n  6604: a2 = a2 + 0x1b9\n  6608: jump @173 if a0 >u 3\n      : @172 (gas: 1)\n  6612: jump @732\n      : @173 (gas: 20)\n  6615: a0 = 0x200000000000000\n  6625: u64 [a2 + 0x1c0] = a0\n  6629: u64 [a2 + 440] = 0\n  6633: u64 [a2 + 432] = 0\n  6637: u64 [a2 + 424] = 0\n  6641: u64 [a2 + 480] = 0\n  6645: u64 [a2 + 472] = 0\n  6649: u64 [a2 + 464] = 0\n  6653: u64 [a2 + 456] = 0\n  6657: u32 [a2 + 488] = 0x20\n  6662: a0 = s1 + 0x1000\n  6666: i32 a1 = a0 + 0xfffffffffffffb60\n  6670: a0 = s1 + 0x1000\n  6674: i32 a3 = a0 + 0xfffffffffffffb80\n  6678: a0 = s1 + 0x1000\n  6682: i32 a4 = a0 + 0xfffffffffffffba0\n  6686: a2 = 0xffffffffffffffff\n  6689: a0 = 0\n  6691: ecalli 6 // 'get_storage'\n  6693: fallthrough\n      : @174 (gas: 3)\n  6694: a2 = u64 [s1 + 0x238]\n  6698: a1 = i32 [a2]\n  6700: jump @176 if a1 >u 95\n      : @175 (gas: 3)\n  6704: a1 = 0x60\n  6707: u32 [a2] = a1\n  6709: fallthrough\n      : @176 (gas: 17)\n  6710: a4 = u64 [s1 + 0x230]\n  6714: a0 = u64 [a4 + 0x48]\n  6717: a2 = u64 [a4 + 0x58]\n  6720: a3 = u64 [a4 + 0x40]\n  6723: a4 = u64 [a4 + 0x50]\n  6726: a5 = reverse a0\n  6728: a0 = reverse a2\n  6730: a2 = reverse a3\n  6732: a3 = reverse a4\n  6734: a2 = a2 | a3\n  6737: a3 = a0 | a5\n  6740: a3 = a3 | a2\n  6743: a3 = a3 >> 0x20\n  6746: a2 = a2 | a5\n  6749: a2 = a2 << 0x20\n  6752: a2 = a2 | a3\n  6755: jump @178 if a2 == 0\n      : @177 (gas: 1)\n  6758: jump @660\n      : @178 (gas: 2)\n  6761: i32 a2 = a0 >> 0x10\n  6764: jump @180 if a2 == 0\n      : @179 (gas: 1)\n  6767: jump @660\n      : @180 (gas: 3)\n  6770: a2 = a0 + 0x3f\n  6773: a2 = a2 & 0x1ffe0\n  6778: jump @182 if a2 <=u 65536\n      : @181 (gas: 1)\n  6784: jump @660\n      : @182 (gas: 4)\n  6787: a3 = s1 + 0x7ff\n  6791: a3 = a3 + 0x1b9\n  6795: a3 = u64 [a3 + 0x1d0]\n  6799: jump @184 if a1 >=u a2\n      : @183 (gas: 3)\n  6802: a1 = u64 [s1 + 0x238]\n  6806: u32 [a1] = a2\n  6808: fallthrough\n      : @184 (gas: 40)\n  6809: i32 a1 = a0 + 0\n  6811: a2 = u64 [s1 + 0x230]\n  6815: a1 = a1 + a2\n  6818: a3 = a3 >> 0x18\n  6821: u8 [a1 + 0x1f] = a3\n  6824: u8 [a1 + 30] = 0\n  6827: u8 [a1 + 29] = 0\n  6830: a2 = 0xff000000\n  6840: u8 [a1 + 0x1c] = a2\n  6843: u8 [a1 + 27] = 0\n  6846: u8 [a1 + 26] = 0\n  6849: u8 [a1 + 25] = 0\n  6852: u8 [a1 + 24] = 0\n  6855: u8 [a1 + 23] = 0\n  6858: u8 [a1 + 22] = 0\n  6861: u8 [a1 + 21] = 0\n  6864: u8 [a1 + 20] = 0\n  6867: u8 [a1 + 19] = 0\n  6870: u8 [a1 + 18] = 0\n  6873: u8 [a1 + 17] = 0\n  6876: u8 [a1 + 16] = 0\n  6879: u8 [a1 + 15] = 0\n  6882: u8 [a1 + 14] = 0\n  6885: u8 [a1 + 13] = 0\n  6888: u8 [a1 + 12] = 0\n  6891: u8 [a1 + 11] = 0\n  6894: u8 [a1 + 10] = 0\n  6897: u8 [a1 + 9] = 0\n  6900: u8 [a1 + 8] = 0\n  6903: u8 [a1 + 7] = 0\n  6906: u8 [a1 + 6] = 0\n  6909: u8 [a1 + 5] = 0\n  6912: u8 [a1 + 4] = 0\n  6915: u8 [a1 + 3] = 0\n  6918: u8 [a1 + 2] = 0\n  6921: u8 [a1 + 1] = 0\n  6924: u8 [a1 + 0] = 0\n  6926: a1 = 0x20\n  6929: ra = 0x28\n  6932: jump @8\n      : @185 (gas: 2)\n  6935: a2 = u64 [s1 + 0x238]\n  6939: jump @187 if a0 == 3347547351\n      : @186 (gas: 1)\n  6946: jump @728\n      : @187 (gas: 4)\n  6949: a0 = u64 [s1 + 0x228]\n  6953: a0 = i32 [a0]\n  6955: a4 = u64 [s1 + 0x230]\n  6959: jump @189 if a0 >u 323\n      : @188 (gas: 1)\n  6964: jump @733\n      : @189 (gas: 10)\n  6967: a0 = sp + 0xffffffffffffffe0\n  6970: a3 = a0 & 0xffffffffffffffe0\n  6973: sp = a3\n  6975: u64 [a3 + 24] = 0\n  6978: u64 [a3 + 16] = 0\n  6981: a0 = i32 [a2]\n  6983: u64 [a3 + 0] = 0x40\n  6986: u64 [s1 + 0x1f8] = a3\n  6990: u64 [a3 + 8] = 0\n  6993: jump @191 if a0 >u 95\n      : @190 (gas: 2)\n  6997: u32 [a2 + 0] = 0x60\n  7000: fallthrough\n      : @191 (gas: 14)\n  7001: a0 = u64 [a4 + 0x50]\n  7004: a1 = u64 [a4 + 0x58]\n  7007: a2 = u64 [a4 + 0x40]\n  7010: a3 = u64 [a4 + 0x48]\n  7013: t0 = reverse a0\n  7015: t1 = reverse a1\n  7017: t2 = reverse a2\n  7019: a5 = reverse a3\n  7021: a1 = a5 | t2\n  7024: a0 = t1 <u 0xffffffffffffffc0\n  7027: a0 = 0 if t0 != 0\n  7029: u64 [s1 + 0x200] = a1\n  7033: a0 = 0 if a1 != 0\n  7035: jump @193 if a0 != 0\n      : @192 (gas: 1)\n  7038: jump @734\n      : @193 (gas: 25)\n  7041: a0 = t1 + 0x40\n  7044: a1 = a0 <u t1\n  7047: a2 = t0 + a1\n  7050: a3 = a2 <u t0\n  7053: a3 = a1 if a1 == 0\n  7056: a3 = a3 + a5\n  7059: a1 = a3 <u a5\n  7062: a1 = a1 + t2\n  7065: a1 = reverse a1\n  7067: a3 = reverse a3\n  7069: a2 = reverse a2\n  7071: a0 = reverse a0\n  7073: u64 [a4 + 0x58] = a0\n  7076: u64 [a4 + 0x50] = a2\n  7079: u64 [a4 + 0x48] = a3\n  7082: u64 [a4 + 0x40] = a1\n  7085: a0 = s1 + 0x1000\n  7089: i32 a0 = a0 + 0xfffffffffffff940\n  7093: a1 = 0x4\n  7096: u64 [s1 + 0x220] = t1\n  7100: u64 [s1 + 0x218] = t0\n  7104: u64 [s1 + 0x210] = a5\n  7108: u64 [s1 + 0x208] = t2\n  7112: ecalli 2 // 'call_data_load'\n  7114: fallthrough\n      : @194 (gas: 12)\n  7115: a2 = u64 [s1 + 0x210]\n  7119: a3 = u64 [s1 + 0x220]\n  7123: a0 = a3 | a2\n  7126: a1 = u64 [s1 + 0x218]\n  7130: a4 = u64 [s1 + 0x208]\n  7134: a1 = a1 | a4\n  7137: a0 = a0 | a1\n  7140: a0 = a0 >> 0x20\n  7143: a1 = a1 | a2\n  7146: a1 = a1 << 0x20\n  7149: a0 = a0 | a1\n  7152: jump @196 if a0 == 0\n      : @195 (gas: 1)\n  7155: jump @660\n      : @196 (gas: 2)\n  7158: i32 a0 = a3 >> 0x10\n  7161: jump @198 if a0 == 0\n      : @197 (gas: 1)\n  7164: jump @660\n      : @198 (gas: 3)\n  7167: a0 = a3 + 0x3f\n  7170: a0 = a0 & 0x1ffe0\n  7175: jump @200 if a0 <=u 65536\n      : @199 (gas: 1)\n  7181: jump @660\n      : @200 (gas: 12)\n  7184: u64 [s1 + 496] = 0x1ffe0\n  7191: a1 = s1 + 0x1000\n  7195: a1 = u64 [a1 + 0xfffffffffffff958]\n  7199: a2 = s1 + 0x1000\n  7203: a2 = u64 [a2 + 0xfffffffffffff950]\n  7207: a4 = s1 + 0x1000\n  7211: t0 = u64 [a4 + 0xfffffffffffff948]\n  7215: a4 = u64 [s1 + 0x238]\n  7219: a5 = i32 [a4]\n  7221: a4 = s1 + 0x1000\n  7225: a4 = u64 [a4 + 0xfffffffffffff940]\n  7229: jump @202 if a5 >=u a0\n      : @201 (gas: 3)\n  7232: a5 = u64 [s1 + 0x238]\n  7236: u32 [a5] = a0\n  7238: fallthrough\n      : @202 (gas: 72)\n  7239: i32 a0 = a3 + 0\n  7241: a5 = u64 [s1 + 0x230]\n  7245: a0 = a0 + a5\n  7248: a1 = reverse a1\n  7250: a2 = reverse a2\n  7252: a3 = reverse t0\n  7254: a4 = reverse a4\n  7256: a5 = a4 >> 0x38\n  7259: u8 [a0 + 0x1f] = a5\n  7262: a5 = a4 >> 0x30\n  7265: u8 [a0 + 0x1e] = a5\n  7268: a5 = a4 >> 0x28\n  7271: u8 [a0 + 0x1d] = a5\n  7274: a5 = a4 >> 0x20\n  7277: u8 [a0 + 0x1c] = a5\n  7280: a5 = a4 >> 0x18\n  7283: u8 [a0 + 0x1b] = a5\n  7286: a5 = a4 >> 0x10\n  7289: u8 [a0 + 0x1a] = a5\n  7292: a5 = a4 >> 0x8\n  7295: u8 [a0 + 0x19] = a5\n  7298: u8 [a0 + 0x18] = a4\n  7301: u8 [a0 + 0x10] = a3\n  7304: a4 = a3 >> 0x38\n  7307: u8 [a0 + 0x17] = a4\n  7310: a4 = a3 >> 0x30\n  7313: u8 [a0 + 0x16] = a4\n  7316: a4 = a3 >> 0x28\n  7319: u8 [a0 + 0x15] = a4\n  7322: a4 = a3 >> 0x20\n  7325: u8 [a0 + 0x14] = a4\n  7328: a4 = a3 >> 0x18\n  7331: u8 [a0 + 0x13] = a4\n  7334: a4 = a3 >> 0x10\n  7337: u8 [a0 + 0x12] = a4\n  7340: a3 = a3 >> 0x8\n  7343: u8 [a0 + 0x11] = a3\n  7346: u8 [a0 + 0x8] = a2\n  7349: a3 = a2 >> 0x38\n  7352: u8 [a0 + 0xf] = a3\n  7355: a3 = a2 >> 0x30\n  7358: u8 [a0 + 0xe] = a3\n  7361: a3 = a2 >> 0x28\n  7364: u8 [a0 + 0xd] = a3\n  7367: a3 = a2 >> 0x20\n  7370: u8 [a0 + 0xc] = a3\n  7373: a3 = a2 >> 0x18\n  7376: u8 [a0 + 0xb] = a3\n  7379: a3 = a2 >> 0x10\n  7382: u8 [a0 + 0xa] = a3\n  7385: a2 = a2 >> 0x8\n  7388: u8 [a0 + 0x9] = a2\n  7391: u8 [a0] = a1\n  7393: a2 = a1 >> 0x38\n  7396: u8 [a0 + 0x7] = a2\n  7399: a2 = a1 >> 0x30\n  7402: u8 [a0 + 0x6] = a2\n  7405: a2 = a1 >> 0x28\n  7408: u8 [a0 + 0x5] = a2\n  7411: a2 = a1 >> 0x20\n  7414: u8 [a0 + 0x4] = a2\n  7417: a2 = a1 >> 0x18\n  7420: u8 [a0 + 0x3] = a2\n  7423: a2 = a1 >> 0x10\n  7426: u8 [a0 + 0x2] = a2\n  7429: a1 = a1 >> 0x8\n  7432: u8 [a0 + 0x1] = a1\n  7435: a0 = s1 + 0x1000\n  7439: i32 a0 = a0 + 0xfffffffffffff940\n  7443: a1 = 0x24\n  7446: ecalli 2 // 'call_data_load'\n  7448: fallthrough\n      : @203 (gas: 14)\n  7449: a3 = u64 [s1 + 0x220]\n  7453: a0 = u64 [s1 + 0x210]\n  7457: a0 = a0 >u 0\n  7459: a2 = u64 [s1 + 0x208]\n  7463: a1 = a2 >u 0\n  7465: a1 = a0 if a2 == 0\n  7468: a0 = 0xffffffdf\n  7478: a0 = a0 <u a3\n  7481: a4 = u64 [s1 + 0x218]\n  7485: a2 = a4 >u 0\n  7487: a2 = a0 if a4 == 0\n  7490: a0 = u64 [s1 + 0x200]\n  7494: a2 = a1 if a0 != 0\n  7497: jump @205 if a2 == 0\n      : @204 (gas: 1)\n  7500: jump @660\n      : @205 (gas: 3)\n  7503: i32 a0 = a3 >> 0x5\n  7506: a2 = u64 [s1 + 0x1f0]\n  7510: jump @207 if a0 <=u 2046\n      : @206 (gas: 1)\n  7515: jump @660\n      : @207 (gas: 3)\n  7518: a0 = a3 + 0x5f\n  7521: a1 = a0 & a2\n  7524: jump @209 if a1 <=u 65536\n      : @208 (gas: 1)\n  7530: jump @660\n      : @209 (gas: 12)\n  7533: a0 = s1 + 0x1000\n  7537: t2 = u64 [a0 + 0xfffffffffffff958]\n  7541: a0 = s1 + 0x1000\n  7545: ra = u64 [a0 + 0xfffffffffffff950]\n  7549: a0 = s1 + 0x1000\n  7553: a4 = u64 [a0 + 0xfffffffffffff948]\n  7557: a0 = u64 [s1 + 0x238]\n  7561: t0 = i32 [a0]\n  7563: a0 = s1 + 0x1000\n  7567: a5 = u64 [a0 + 0xfffffffffffff940]\n  7571: i32 a0 = a3 + 0x20\n  7574: jump @211 if t0 >=u a1\n      : @210 (gas: 4)\n  7577: a2 = u64 [s1 + 0x238]\n  7581: u32 [a2] = a1\n  7583: t0 = a1\n  7585: fallthrough\n      : @211 (gas: 69)\n  7586: t1 = u64 [s1 + 0x230]\n  7590: a1 = t1 + a0\n  7593: a2 = reverse t2\n  7595: a3 = reverse ra\n  7597: a4 = reverse a4\n  7599: a0 = reverse a5\n  7601: u8 [a1 + 0x18] = a0\n  7604: a5 = a0 >> 0x38\n  7607: u8 [a1 + 0x1f] = a5\n  7610: a5 = a0 >> 0x30\n  7613: u8 [a1 + 0x1e] = a5\n  7616: a5 = a0 >> 0x28\n  7619: u8 [a1 + 0x1d] = a5\n  7622: a5 = a0 >> 0x20\n  7625: u8 [a1 + 0x1c] = a5\n  7628: a5 = a0 >> 0x18\n  7631: u8 [a1 + 0x1b] = a5\n  7634: a5 = a0 >> 0x10\n  7637: u8 [a1 + 0x1a] = a5\n  7640: a0 = a0 >> 0x8\n  7643: u8 [a1 + 0x19] = a0\n  7646: u8 [a1 + 0x10] = a4\n  7649: a0 = a4 >> 0x38\n  7652: u8 [a1 + 0x17] = a0\n  7655: a0 = a4 >> 0x30\n  7658: u8 [a1 + 0x16] = a0\n  7661: a0 = a4 >> 0x28\n  7664: u8 [a1 + 0x15] = a0\n  7667: a0 = a4 >> 0x20\n  7670: u8 [a1 + 0x14] = a0\n  7673: a0 = a4 >> 0x18\n  7676: u8 [a1 + 0x13] = a0\n  7679: a0 = a4 >> 0x10\n  7682: u8 [a1 + 0x12] = a0\n  7685: a4 = a4 >> 0x8\n  7688: u8 [a1 + 0x11] = a4\n  7691: u8 [a1 + 0x8] = a3\n  7694: a0 = a3 >> 0x38\n  7697: u8 [a1 + 0xf] = a0\n  7700: a0 = a3 >> 0x30\n  7703: u8 [a1 + 0xe] = a0\n  7706: a0 = a3 >> 0x28\n  7709: u8 [a1 + 0xd] = a0\n  7712: a0 = a3 >> 0x20\n  7715: u8 [a1 + 0xc] = a0\n  7718: a0 = a3 >> 0x18\n  7721: u8 [a1 + 0xb] = a0\n  7724: a0 = a3 >> 0x10\n  7727: u8 [a1 + 0xa] = a0\n  7730: a3 = a3 >> 0x8\n  7733: u8 [a1 + 0x9] = a3\n  7736: u8 [a1] = a2\n  7738: a0 = a2 >> 0x38\n  7741: u8 [a1 + 0x7] = a0\n  7744: a0 = a2 >> 0x30\n  7747: u8 [a1 + 0x6] = a0\n  7750: a0 = a2 >> 0x28\n  7753: u8 [a1 + 0x5] = a0\n  7756: a0 = a2 >> 0x20\n  7759: u8 [a1 + 0x4] = a0\n  7762: a0 = a2 >> 0x18\n  7765: u8 [a1 + 0x3] = a0\n  7768: a0 = a2 >> 0x10\n  7771: a3 = u64 [s1 + 0x228]\n  7775: a3 = i32 [a3]\n  7777: u8 [a1 + 0x2] = a0\n  7780: a2 = a2 >> 0x8\n  7783: u8 [a1 + 0x1] = a2\n  7786: jump @213 if a3 >u 99\n      : @212 (gas: 1)\n  7790: jump @746\n      : @213 (gas: 1)\n  7793: jump @215 if t0 >u 95\n      : @214 (gas: 3)\n  7797: a1 = u64 [s1 + 0x238]\n  7801: u32 [a1 + 0] = 0x60\n  7804: fallthrough\n      : @215 (gas: 23)\n  7805: a0 = u64 [t1 + 0x58]\n  7808: a1 = u64 [t1 + 0x50]\n  7811: a2 = u64 [t1 + 0x48]\n  7814: a3 = u64 [t1 + 0x40]\n  7817: a4 = reverse a0\n  7819: a5 = reverse a1\n  7821: a1 = reverse a2\n  7823: a2 = reverse a3\n  7825: u64 [s1 + 1592] = 0\n  7829: u64 [s1 + 1584] = 0\n  7833: u64 [s1 + 1576] = 0\n  7837: u64 [s1 + 1568] = 0x40\n  7842: u64 [s1 + 0x1b8] = a2\n  7846: u64 [s1 + 0x658] = a2\n  7850: u64 [s1 + 0x1c0] = a1\n  7854: u64 [s1 + 0x650] = a1\n  7858: u64 [s1 + 0x1b0] = a5\n  7862: u64 [s1 + 0x648] = a5\n  7866: a0 = s1 + 0x640\n  7870: a1 = s1 + 0x620\n  7874: u64 [s1 + 0x1c8] = a4\n  7878: u64 [s1 + 0x640] = a4\n  7882: ra = 18, jump @1071\n      : @216 [@dyn 9] (gas: 3)\n  7887: a2 = u64 [s1 + 0x228]\n  7891: a0 = i32 [a2]\n  7893: jump @218 if a0 >=u 196\n      : @217 (gas: 1)\n  7898: jump @732\n      : @218 (gas: 3)\n  7901: t0 = i32 [a2]\n  7903: a2 = u64 [s1 + 0x238]\n  7907: jump @220 if t0 >u 99\n      : @219 (gas: 1)\n  7911: jump @732\n      : @220 (gas: 3)\n  7914: a1 = i32 [a2]\n  7916: t1 = u64 [s1 + 0x230]\n  7920: jump @222 if a1 >u 95\n      : @221 (gas: 3)\n  7924: a2 = u64 [s1 + 0x238]\n  7928: u32 [a2 + 0] = 0x60\n  7931: fallthrough\n      : @222 (gas: 15)\n  7932: t2 = u64 [t1 + 0x50]\n  7935: ra = u64 [t1 + 0x58]\n  7938: a4 = u64 [t1 + 0x40]\n  7941: a0 = u64 [t1 + 0x48]\n  7944: a3 = reverse t2\n  7946: a5 = reverse ra\n  7948: a1 = reverse a4\n  7950: a2 = reverse a0\n  7952: u64 [s1 + 0x200] = a1\n  7956: u64 [s1 + 0x1e8] = a2\n  7960: a2 = a2 | a1\n  7963: a1 = a5 <u 0xffffffffffffffc0\n  7966: a1 = 0 if a3 != 0\n  7968: a1 = 0 if a2 != 0\n  7970: jump @224 if a1 != 0\n      : @223 (gas: 1)\n  7973: jump @745\n      : @224 (gas: 26)\n  7976: u64 [s1 + 0x1d0] = a2\n  7980: u64 [s1 + 0x190] = a0\n  7984: u64 [s1 + 0x198] = a4\n  7988: u64 [s1 + 0x1a0] = t2\n  7992: u64 [s1 + 0x1a8] = ra\n  7996: t2 = a5 + 0x40\n  7999: a2 = t2 <u a5\n  8002: a0 = a3 + a2\n  8005: a4 = a0 <u a3\n  8008: a4 = a2 if a2 == 0\n  8011: a1 = u64 [s1 + 0x1e8]\n  8015: a4 = a4 + a1\n  8018: a2 = a4 <u a1\n  8021: a1 = u64 [s1 + 0x200]\n  8025: a2 = a2 + a1\n  8028: a2 = reverse a2\n  8030: a4 = reverse a4\n  8032: a0 = reverse a0\n  8034: a1 = reverse t2\n  8036: u64 [t1 + 0x58] = a1\n  8039: u64 [t1 + 0x50] = a0\n  8042: u64 [t1 + 0x48] = a4\n  8045: u64 [t1 + 0x40] = a2\n  8048: u64 [s1 + 0x1e0] = a5\n  8052: u64 [s1 + 0x1d8] = a3\n  8056: jump @226 if t0 >u 131\n      : @225 (gas: 1)\n  8061: jump @719\n      : @226 (gas: 5)\n  8064: a0 = s1 + 0x1000\n  8068: i32 a0 = a0 + 0xfffffffffffff960\n  8072: a1 = 0x44\n  8075: ecalli 2 // 'call_data_load'\n  8077: fallthrough\n      : @227 (gas: 12)\n  8078: a2 = u64 [s1 + 0x1e8]\n  8082: a3 = u64 [s1 + 0x1e0]\n  8086: a0 = a3 | a2\n  8089: a1 = u64 [s1 + 0x200]\n  8093: a4 = u64 [s1 + 0x1d8]\n  8097: a1 = a1 | a4\n  8100: a0 = a0 | a1\n  8103: a0 = a0 >> 0x20\n  8106: a1 = a1 | a2\n  8109: a1 = a1 << 0x20\n  8112: a0 = a0 | a1\n  8115: jump @229 if a0 == 0\n      : @228 (gas: 1)\n  8118: jump @660\n      : @229 (gas: 2)\n  8121: i32 a0 = a3 >> 0x10\n  8124: jump @231 if a0 == 0\n      : @230 (gas: 1)\n  8127: jump @660\n      : @231 (gas: 4)\n  8130: a0 = a3 + 0x3f\n  8133: a1 = u64 [s1 + 0x1f0]\n  8137: a0 = a0 & a1\n  8140: jump @233 if a0 <=u 65536\n      : @232 (gas: 1)\n  8146: jump @660\n      : @233 (gas: 11)\n  8149: a1 = s1 + 0x1000\n  8153: a1 = u64 [a1 + 0xfffffffffffff978]\n  8157: a2 = s1 + 0x1000\n  8161: a2 = u64 [a2 + 0xfffffffffffff970]\n  8165: a4 = s1 + 0x1000\n  8169: t0 = u64 [a4 + 0xfffffffffffff968]\n  8173: a4 = u64 [s1 + 0x238]\n  8177: a5 = i32 [a4]\n  8179: a4 = s1 + 0x1000\n  8183: a4 = u64 [a4 + 0xfffffffffffff960]\n  8187: jump @235 if a5 >=u a0\n      : @234 (gas: 3)\n  8190: a5 = u64 [s1 + 0x238]\n  8194: u32 [a5] = a0\n  8196: fallthrough\n      : @235 (gas: 73)\n  8197: i32 a0 = a3 + 0\n  8199: a5 = u64 [s1 + 0x230]\n  8203: a0 = a0 + a5\n  8206: a1 = reverse a1\n  8208: a2 = reverse a2\n  8210: a3 = reverse t0\n  8212: a4 = reverse a4\n  8214: a5 = a4 >> 0x38\n  8217: u8 [a0 + 0x1f] = a5\n  8220: a5 = a4 >> 0x30\n  8223: u8 [a0 + 0x1e] = a5\n  8226: a5 = a4 >> 0x28\n  8229: u8 [a0 + 0x1d] = a5\n  8232: a5 = a4 >> 0x20\n  8235: u8 [a0 + 0x1c] = a5\n  8238: a5 = a4 >> 0x18\n  8241: u8 [a0 + 0x1b] = a5\n  8244: a5 = a4 >> 0x10\n  8247: u8 [a0 + 0x1a] = a5\n  8250: a5 = a4 >> 0x8\n  8253: u8 [a0 + 0x19] = a5\n  8256: u8 [a0 + 0x18] = a4\n  8259: u8 [a0 + 0x10] = a3\n  8262: a4 = a3 >> 0x38\n  8265: u8 [a0 + 0x17] = a4\n  8268: a4 = a3 >> 0x30\n  8271: u8 [a0 + 0x16] = a4\n  8274: a4 = a3 >> 0x28\n  8277: u8 [a0 + 0x15] = a4\n  8280: a4 = a3 >> 0x20\n  8283: u8 [a0 + 0x14] = a4\n  8286: a4 = a3 >> 0x18\n  8289: u8 [a0 + 0x13] = a4\n  8292: a4 = a3 >> 0x10\n  8295: u8 [a0 + 0x12] = a4\n  8298: a3 = a3 >> 0x8\n  8301: u8 [a0 + 0x11] = a3\n  8304: u8 [a0 + 0x8] = a2\n  8307: a3 = a2 >> 0x38\n  8310: u8 [a0 + 0xf] = a3\n  8313: a3 = a2 >> 0x30\n  8316: u8 [a0 + 0xe] = a3\n  8319: a3 = a2 >> 0x28\n  8322: u8 [a0 + 0xd] = a3\n  8325: a3 = a2 >> 0x20\n  8328: u8 [a0 + 0xc] = a3\n  8331: a3 = a2 >> 0x18\n  8334: u8 [a0 + 0xb] = a3\n  8337: a3 = a2 >> 0x10\n  8340: u8 [a0 + 0xa] = a3\n  8343: a2 = a2 >> 0x8\n  8346: u8 [a0 + 0x9] = a2\n  8349: u8 [a0] = a1\n  8351: a2 = a1 >> 0x38\n  8354: u8 [a0 + 0x7] = a2\n  8357: a2 = a1 >> 0x30\n  8360: u8 [a0 + 0x6] = a2\n  8363: a2 = a1 >> 0x28\n  8366: u8 [a0 + 0x5] = a2\n  8369: a2 = a1 >> 0x20\n  8372: u8 [a0 + 0x4] = a2\n  8375: a2 = a1 >> 0x18\n  8378: u8 [a0 + 0x3] = a2\n  8381: a2 = a1 >> 0x10\n  8384: u8 [a0 + 0x2] = a2\n  8387: a1 = a1 >> 0x8\n  8390: u8 [a0 + 0x1] = a1\n  8393: a0 = s1 + 0x1000\n  8397: i32 a0 = a0 + 0xfffffffffffff960\n  8401: a1 = 0x64\n  8404: ra = 0x14\n  8407: ecalli 2 // 'call_data_load'\n  8409: fallthrough\n      : @236 [@dyn 10] (gas: 14)\n  8410: a3 = u64 [s1 + 0x1e0]\n  8414: a0 = u64 [s1 + 0x1e8]\n  8418: a0 = a0 >u 0\n  8420: a2 = u64 [s1 + 0x200]\n  8424: a1 = a2 >u 0\n  8426: a1 = a0 if a2 == 0\n  8429: a0 = 0xffffffdf\n  8439: a0 = a0 <u a3\n  8442: a4 = u64 [s1 + 0x1d8]\n  8446: a2 = a4 >u 0\n  8448: a2 = a0 if a4 == 0\n  8451: a0 = u64 [s1 + 0x1d0]\n  8455: a2 = a1 if a0 != 0\n  8458: jump @238 if a2 == 0\n      : @237 (gas: 1)\n  8461: jump @660\n      : @238 (gas: 2)\n  8464: i32 a0 = a3 >> 0x5\n  8467: jump @240 if a0 <=u 2046\n      : @239 (gas: 1)\n  8472: jump @660\n      : @240 (gas: 4)\n  8475: a0 = a3 + 0x5f\n  8478: a1 = u64 [s1 + 0x1f0]\n  8482: a1 = a1 & a0\n  8485: jump @242 if a1 <=u 65536\n      : @241 (gas: 1)\n  8491: jump @660\n      : @242 (gas: 12)\n  8494: a0 = s1 + 0x1000\n  8498: t2 = u64 [a0 + 0xfffffffffffff978]\n  8502: a0 = s1 + 0x1000\n  8506: t1 = u64 [a0 + 0xfffffffffffff970]\n  8510: a0 = s1 + 0x1000\n  8514: a4 = u64 [a0 + 0xfffffffffffff968]\n  8518: a0 = u64 [s1 + 0x238]\n  8522: t0 = i32 [a0]\n  8524: a0 = s1 + 0x1000\n  8528: a5 = u64 [a0 + 0xfffffffffffff960]\n  8532: i32 a0 = a3 + 0x20\n  8535: jump @244 if t0 >=u a1\n      : @243 (gas: 4)\n  8538: a2 = u64 [s1 + 0x238]\n  8542: u32 [a2] = a1\n  8544: t0 = a1\n  8546: fallthrough\n      : @244 (gas: 78)\n  8547: a1 = u64 [s1 + 0x230]\n  8551: a1 = a1 + a0\n  8554: a0 = reverse a5\n  8556: a5 = a0 >> 0x38\n  8559: u8 [a1 + 0x1f] = a5\n  8562: a5 = a0 >> 0x30\n  8565: u8 [a1 + 0x1e] = a5\n  8568: a5 = a0 >> 0x28\n  8571: u8 [a1 + 0x1d] = a5\n  8574: a5 = a0 >> 0x20\n  8577: u8 [a1 + 0x1c] = a5\n  8580: a5 = a0 >> 0x18\n  8583: u8 [a1 + 0x1b] = a5\n  8586: a5 = a0 >> 0x10\n  8589: u8 [a1 + 0x1a] = a5\n  8592: a4 = reverse a4\n  8594: u8 [a1 + 0x18] = a0\n  8597: a0 = a0 >> 0x8\n  8600: u8 [a1 + 0x19] = a0\n  8603: a0 = a4 >> 0x38\n  8606: u8 [a1 + 0x17] = a0\n  8609: a0 = a4 >> 0x30\n  8612: u8 [a1 + 0x16] = a0\n  8615: a0 = a4 >> 0x28\n  8618: u8 [a1 + 0x15] = a0\n  8621: a0 = a4 >> 0x20\n  8624: u8 [a1 + 0x14] = a0\n  8627: a0 = a4 >> 0x18\n  8630: u8 [a1 + 0x13] = a0\n  8633: a0 = a4 >> 0x10\n  8636: u8 [a1 + 0x12] = a0\n  8639: a3 = reverse t2\n  8641: a0 = reverse t1\n  8643: u8 [a1 + 0x10] = a4\n  8646: a4 = a4 >> 0x8\n  8649: u8 [a1 + 0x11] = a4\n  8652: u8 [a1 + 0x8] = a0\n  8655: a2 = a0 >> 0x38\n  8658: u8 [a1 + 0xf] = a2\n  8661: a2 = a0 >> 0x30\n  8664: u8 [a1 + 0xe] = a2\n  8667: a2 = a0 >> 0x28\n  8670: u8 [a1 + 0xd] = a2\n  8673: a2 = a0 >> 0x20\n  8676: u8 [a1 + 0xc] = a2\n  8679: a2 = a0 >> 0x18\n  8682: u8 [a1 + 0xb] = a2\n  8685: a2 = a0 >> 0x10\n  8688: u8 [a1 + 0xa] = a2\n  8691: a0 = a0 >> 0x8\n  8694: u8 [a1 + 0x9] = a0\n  8697: a0 = a3 >> 0x38\n  8700: u8 [a1 + 0x7] = a0\n  8703: a0 = a3 >> 0x30\n  8706: u8 [a1 + 0x6] = a0\n  8709: a0 = a3 >> 0x28\n  8712: u8 [a1 + 0x5] = a0\n  8715: a0 = a3 >> 0x20\n  8718: u8 [a1 + 0x4] = a0\n  8721: a0 = a3 >> 0x18\n  8724: u8 [a1 + 0x3] = a0\n  8727: a0 = a3 >> 0x10\n  8730: u8 [a1 + 0x2] = a0\n  8733: a0 = u64 [s1 + 0x1c8]\n  8737: a4 = u64 [s1 + 0x1c0]\n  8741: a0 = a0 | a4\n  8744: a2 = u64 [s1 + 0x1b8]\n  8748: a5 = u64 [s1 + 0x1b0]\n  8752: a2 = a2 | a5\n  8755: a0 = a0 | a2\n  8758: a0 = a0 >> 0x20\n  8761: a2 = a2 | a4\n  8764: a2 = a2 << 0x20\n  8767: a0 = a0 | a2\n  8770: u8 [a1] = a3\n  8772: a3 = a3 >> 0x8\n  8775: u8 [a1 + 0x1] = a3\n  8778: jump @246 if a0 == 0\n      : @245 (gas: 1)\n  8781: jump @660\n      : @246 (gas: 4)\n  8784: a0 = u64 [s1 + 0x1c8]\n  8788: i32 a0 = a0 >> 0x10\n  8791: u64 [s1 + 0x1e8] = a0\n  8795: jump @248 if a0 == 0\n      : @247 (gas: 1)\n  8798: jump @660\n      : @248 (gas: 6)\n  8801: a0 = u64 [s1 + 0x1c8]\n  8805: a0 = a0 + 0x3f\n  8808: a1 = u64 [s1 + 0x1f0]\n  8812: a1 = a1 & a0\n  8815: u64 [s1 + 0x1e0] = a1\n  8819: jump @250 if a1 <=u 65536\n      : @249 (gas: 1)\n  8825: jump @660\n      : @250 (gas: 2)\n  8828: a0 = u64 [s1 + 0x1e0]\n  8832: jump @252 if t0 >=u a0\n      : @251 (gas: 4)\n  8835: a0 = u64 [s1 + 0x238]\n  8839: a1 = u64 [s1 + 0x1e0]\n  8843: u32 [a0] = a1\n  8845: fallthrough\n      : @252 (gas: 72)\n  8846: a0 = i32 [s1 + 0x1c8]\n  8850: a1 = u64 [s1 + 0x230]\n  8854: a3 = a1 + a0\n  8857: a1 = u64 [s1 + 0x1a0]\n  8861: u8 [a3 + 0x10] = a1\n  8864: a2 = u64 [s1 + 0x190]\n  8868: a0 = a2 >> 0x38\n  8871: u8 [a3 + 0xf] = a0\n  8874: a0 = a2 >> 0x30\n  8877: u8 [a3 + 0xe] = a0\n  8880: a0 = a2 >> 0x28\n  8883: u8 [a3 + 0xd] = a0\n  8886: a0 = a2 >> 0x20\n  8889: u8 [a3 + 0xc] = a0\n  8892: a0 = a2 >> 0x18\n  8895: u8 [a3 + 0xb] = a0\n  8898: a0 = a2 >> 0x10\n  8901: u8 [a3 + 0xa] = a0\n  8904: a0 = a2 >> 0x8\n  8907: u8 [a3 + 0x9] = a0\n  8910: u8 [a3 + 0x8] = a2\n  8913: a2 = u64 [s1 + 0x198]\n  8917: a0 = a2 >> 0x38\n  8920: u8 [a3 + 0x7] = a0\n  8923: a0 = a2 >> 0x30\n  8926: u8 [a3 + 0x6] = a0\n  8929: a0 = a2 >> 0x28\n  8932: u8 [a3 + 0x5] = a0\n  8935: a0 = a2 >> 0x20\n  8938: u8 [a3 + 0x4] = a0\n  8941: a0 = a2 >> 0x18\n  8944: u8 [a3 + 0x3] = a0\n  8947: a0 = a2 >> 0x10\n  8950: u8 [a3 + 0x2] = a0\n  8953: a0 = a2 >> 0x8\n  8956: u8 [a3 + 0x1] = a0\n  8959: u8 [a3] = a2\n  8961: a2 = u64 [s1 + 0x1a8]\n  8965: u8 [a3 + 0x18] = a2\n  8968: a0 = a1 >> 0x38\n  8971: u8 [a3 + 0x17] = a0\n  8974: a0 = a1 >> 0x30\n  8977: u8 [a3 + 0x16] = a0\n  8980: a0 = a1 >> 0x28\n  8983: u8 [a3 + 0x15] = a0\n  8986: a0 = a1 >> 0x20\n  8989: u8 [a3 + 0x14] = a0\n  8992: a0 = a1 >> 0x18\n  8995: u8 [a3 + 0x13] = a0\n  8998: a0 = a1 >> 0x10\n  9001: u8 [a3 + 0x12] = a0\n  9004: a0 = a1 >> 0x8\n  9007: u8 [a3 + 0x11] = a0\n  9010: a0 = a2 >> 0x38\n  9013: u8 [a3 + 0x1f] = a0\n  9016: a0 = a2 >> 0x30\n  9019: u8 [a3 + 0x1e] = a0\n  9022: a0 = a2 >> 0x28\n  9025: u8 [a3 + 0x1d] = a0\n  9028: a0 = a2 >> 0x20\n  9031: u8 [a3 + 0x1c] = a0\n  9034: a0 = a2 >> 0x18\n  9037: u8 [a3 + 0x1b] = a0\n  9040: a1 = a2 >> 0x10\n  9043: a0 = u64 [s1 + 0x228]\n  9047: t0 = i32 [a0]\n  9049: u8 [a3 + 0x1a] = a1\n  9052: a1 = a2 >> 0x8\n  9055: u64 [s1 + 0x168] = a3\n  9059: u8 [a3 + 0x19] = a1\n  9062: a1 = u64 [s1 + 0x238]\n  9066: jump @254 if t0 >=u 164\n      : @253 (gas: 1)\n  9071: jump @732\n      : @254 (gas: 2)\n  9074: a1 = i32 [a1]\n  9076: jump @256 if a1 >u 95\n      : @255 (gas: 3)\n  9080: a2 = u64 [s1 + 0x238]\n  9084: u32 [a2 + 0] = 0x60\n  9087: fallthrough\n      : @256 (gas: 30)\n  9088: t1 = u64 [s1 + 0x230]\n  9092: a1 = u64 [t1 + 0x58]\n  9095: a2 = u64 [t1 + 0x50]\n  9098: a3 = u64 [t1 + 0x48]\n  9101: a4 = u64 [t1 + 0x40]\n  9104: u64 [s1 + 0x188] = a1\n  9108: a0 = reverse a1\n  9110: u64 [s1 + 0x180] = a2\n  9114: a2 = reverse a2\n  9116: u64 [s1 + 0x178] = a3\n  9120: a5 = reverse a3\n  9122: u64 [s1 + 0x170] = a4\n  9126: a4 = reverse a4\n  9128: a1 = a4 >u 0\n  9130: a3 = a5 >u 0\n  9132: a3 = a1 if a4 != 0\n  9135: u64 [s1 + 0x200] = a0\n  9139: a1 = a0 <u 0xffffffffffffffc0\n  9142: a1 = a1 ^ 0x1\n  9145: a0 = a2 >u 0\n  9147: u64 [s1 + 0x1d8] = a2\n  9151: u64 [s1 + 0x198] = a0\n  9155: a1 = a0 if a2 != 0\n  9158: u64 [s1 + 0x1d0] = a5\n  9162: u64 [s1 + 0x1a8] = a4\n  9166: a0 = a5 | a4\n  9169: u64 [s1 + 0x1a0] = a3\n  9173: u64 [s1 + 0x190] = a0\n  9177: a1 = a3 if a0 != 0\n  9180: jump @258 if a1 == 0\n      : @257 (gas: 1)\n  9183: jump @745\n      : @258 (gas: 21)\n  9186: a0 = u64 [s1 + 0x200]\n  9190: a1 = a0 + 0x40\n  9193: a2 = a1 <u a0\n  9196: a0 = u64 [s1 + 0x1d8]\n  9200: a3 = a0 + a2\n  9203: a4 = a3 <u a0\n  9206: a4 = a2 if a2 == 0\n  9209: a0 = u64 [s1 + 0x1d0]\n  9213: a4 = a4 + a0\n  9216: a2 = a4 <u a0\n  9219: a0 = u64 [s1 + 0x1a8]\n  9223: a2 = a2 + a0\n  9226: a2 = reverse a2\n  9228: a4 = reverse a4\n  9230: a3 = reverse a3\n  9232: a1 = reverse a1\n  9234: u64 [t1 + 0x58] = a1\n  9237: u64 [t1 + 0x50] = a3\n  9240: u64 [t1 + 0x48] = a4\n  9243: u64 [t1 + 0x40] = a2\n  9246: jump @260 if t0 >=u 196\n      : @259 (gas: 1)\n  9251: jump @719\n      : @260 (gas: 5)\n  9254: a0 = s1 + 0x1000\n  9258: i32 a0 = a0 + 0xfffffffffffff960\n  9262: a1 = 0x84\n  9266: ecalli 2 // 'call_data_load'\n  9268: fallthrough\n      : @261 (gas: 12)\n  9269: a0 = u64 [s1 + 0x200]\n  9273: a2 = u64 [s1 + 0x1d0]\n  9277: a0 = a0 | a2\n  9280: a1 = u64 [s1 + 0x1d8]\n  9284: a3 = u64 [s1 + 0x1a8]\n  9288: a1 = a1 | a3\n  9291: a0 = a0 | a1\n  9294: a0 = a0 >> 0x20\n  9297: a1 = a1 | a2\n  9300: a1 = a1 << 0x20\n  9303: a0 = a0 | a1\n  9306: jump @263 if a0 == 0\n      : @262 (gas: 1)\n  9309: jump @660\n      : @263 (gas: 3)\n  9312: a0 = u64 [s1 + 0x200]\n  9316: i32 a0 = a0 >> 0x10\n  9319: jump @265 if a0 == 0\n      : @264 (gas: 1)\n  9322: jump @660\n      : @265 (gas: 5)\n  9325: a0 = u64 [s1 + 0x200]\n  9329: a0 = a0 + 0x3f\n  9332: a1 = u64 [s1 + 0x1f0]\n  9336: a0 = a0 & a1\n  9339: jump @267 if a0 <=u 65536\n      : @266 (gas: 1)\n  9345: jump @660\n      : @267 (gas: 11)\n  9348: a1 = s1 + 0x1000\n  9352: a1 = u64 [a1 + 0xfffffffffffff978]\n  9356: a2 = s1 + 0x1000\n  9360: a2 = u64 [a2 + 0xfffffffffffff970]\n  9364: a3 = s1 + 0x1000\n  9368: a3 = u64 [a3 + 0xfffffffffffff968]\n  9372: a4 = u64 [s1 + 0x238]\n  9376: a5 = i32 [a4]\n  9378: a4 = s1 + 0x1000\n  9382: a4 = u64 [a4 + 0xfffffffffffff960]\n  9386: jump @269 if a5 >=u a0\n      : @268 (gas: 3)\n  9389: a5 = u64 [s1 + 0x238]\n  9393: u32 [a5] = a0\n  9395: fallthrough\n      : @269 (gas: 72)\n  9396: a0 = i32 [s1 + 0x200]\n  9400: a5 = u64 [s1 + 0x230]\n  9404: a0 = a0 + a5\n  9407: a1 = reverse a1\n  9409: a2 = reverse a2\n  9411: a3 = reverse a3\n  9413: a4 = reverse a4\n  9415: a5 = a4 >> 0x38\n  9418: u8 [a0 + 0x1f] = a5\n  9421: a5 = a4 >> 0x30\n  9424: u8 [a0 + 0x1e] = a5\n  9427: a5 = a4 >> 0x28\n  9430: u8 [a0 + 0x1d] = a5\n  9433: a5 = a4 >> 0x20\n  9436: u8 [a0 + 0x1c] = a5\n  9439: a5 = a4 >> 0x18\n  9442: u8 [a0 + 0x1b] = a5\n  9445: a5 = a4 >> 0x10\n  9448: u8 [a0 + 0x1a] = a5\n  9451: a5 = a4 >> 0x8\n  9454: u8 [a0 + 0x19] = a5\n  9457: u8 [a0 + 0x18] = a4\n  9460: u8 [a0 + 0x10] = a3\n  9463: a4 = a3 >> 0x38\n  9466: u8 [a0 + 0x17] = a4\n  9469: a4 = a3 >> 0x30\n  9472: u8 [a0 + 0x16] = a4\n  9475: a4 = a3 >> 0x28\n  9478: u8 [a0 + 0x15] = a4\n  9481: a4 = a3 >> 0x20\n  9484: u8 [a0 + 0x14] = a4\n  9487: a4 = a3 >> 0x18\n  9490: u8 [a0 + 0x13] = a4\n  9493: a4 = a3 >> 0x10\n  9496: u8 [a0 + 0x12] = a4\n  9499: a3 = a3 >> 0x8\n  9502: u8 [a0 + 0x11] = a3\n  9505: u8 [a0 + 0x8] = a2\n  9508: a3 = a2 >> 0x38\n  9511: u8 [a0 + 0xf] = a3\n  9514: a3 = a2 >> 0x30\n  9517: u8 [a0 + 0xe] = a3\n  9520: a3 = a2 >> 0x28\n  9523: u8 [a0 + 0xd] = a3\n  9526: a3 = a2 >> 0x20\n  9529: u8 [a0 + 0xc] = a3\n  9532: a3 = a2 >> 0x18\n  9535: u8 [a0 + 0xb] = a3\n  9538: a3 = a2 >> 0x10\n  9541: u8 [a0 + 0xa] = a3\n  9544: a2 = a2 >> 0x8\n  9547: u8 [a0 + 0x9] = a2\n  9550: u8 [a0] = a1\n  9552: a2 = a1 >> 0x38\n  9555: u8 [a0 + 0x7] = a2\n  9558: a2 = a1 >> 0x30\n  9561: u8 [a0 + 0x6] = a2\n  9564: a2 = a1 >> 0x28\n  9567: u8 [a0 + 0x5] = a2\n  9570: a2 = a1 >> 0x20\n  9573: u8 [a0 + 0x4] = a2\n  9576: a2 = a1 >> 0x18\n  9579: u8 [a0 + 0x3] = a2\n  9582: a2 = a1 >> 0x10\n  9585: u8 [a0 + 0x2] = a2\n  9588: a1 = a1 >> 0x8\n  9591: u8 [a0 + 0x1] = a1\n  9594: a0 = s1 + 0x1000\n  9598: i32 a0 = a0 + 0xfffffffffffff960\n  9602: a1 = 0xa4\n  9606: ecalli 2 // 'call_data_load'\n  9608: fallthrough\n      : @270 (gas: 10)\n  9609: a0 = 0xffffffdf\n  9619: a1 = u64 [s1 + 0x200]\n  9623: a0 = a0 <u a1\n  9626: a1 = u64 [s1 + 0x1d8]\n  9630: a2 = u64 [s1 + 0x198]\n  9634: a0 = a2 if a1 != 0\n  9637: a1 = u64 [s1 + 0x1a0]\n  9641: a2 = u64 [s1 + 0x190]\n  9645: a0 = a1 if a2 != 0\n  9648: jump @272 if a0 == 0\n      : @271 (gas: 1)\n  9651: jump @660\n      : @272 (gas: 3)\n  9654: a0 = u64 [s1 + 0x200]\n  9658: i32 a0 = a0 >> 0x5\n  9661: jump @274 if a0 <=u 2046\n      : @273 (gas: 1)\n  9666: jump @660\n      : @274 (gas: 5)\n  9669: a0 = u64 [s1 + 0x200]\n  9673: a0 = a0 + 0x5f\n  9676: a1 = u64 [s1 + 0x1f0]\n  9680: a0 = a0 & a1\n  9683: jump @276 if a0 <=u 65536\n      : @275 (gas: 1)\n  9689: jump @660\n      : @276 (gas: 14)\n  9692: a1 = s1 + 0x1000\n  9696: t1 = u64 [a1 + 0xfffffffffffff978]\n  9700: a1 = s1 + 0x1000\n  9704: t2 = u64 [a1 + 0xfffffffffffff970]\n  9708: a1 = s1 + 0x1000\n  9712: ra = u64 [a1 + 0xfffffffffffff968]\n  9716: a1 = u64 [s1 + 0x238]\n  9720: a1 = i32 [a1]\n  9722: a2 = s1 + 0x1000\n  9726: a4 = u64 [a2 + 0xfffffffffffff960]\n  9730: a2 = u64 [s1 + 0x200]\n  9734: i32 a5 = a2 + 0x20\n  9737: u64 [s1 + 0x200] = a1\n  9741: jump @278 if a1 >=u a0\n      : @277 (gas: 4)\n  9744: a1 = u64 [s1 + 0x238]\n  9748: u32 [a1] = a0\n  9750: u64 [s1 + 0x200] = a0\n  9754: fallthrough\n      : @278 (gas: 80)\n  9755: a0 = 0xffffffdf\n  9765: a1 = u64 [s1 + 0x1c8]\n  9769: a1 = a0 <u a1\n  9772: a2 = u64 [s1 + 0x1b0]\n  9776: a0 = a2 >u 0\n  9778: a0 = a1 if a2 == 0\n  9781: a3 = u64 [s1 + 0x1c0]\n  9785: t0 = a3 >u 0\n  9787: a1 = u64 [s1 + 0x1b8]\n  9791: a2 = a1 >u 0\n  9793: a2 = t0 if a1 == 0\n  9796: a1 = a1 | a3\n  9799: a0 = a2 if a1 != 0\n  9802: a1 = u64 [s1 + 0x230]\n  9806: a5 = a5 + a1\n  9809: a1 = reverse a4\n  9811: a2 = a1 >> 0x38\n  9814: u8 [a5 + 0x1f] = a2\n  9817: a2 = a1 >> 0x30\n  9820: u8 [a5 + 0x1e] = a2\n  9823: a2 = a1 >> 0x28\n  9826: u8 [a5 + 0x1d] = a2\n  9829: a2 = a1 >> 0x20\n  9832: u8 [a5 + 0x1c] = a2\n  9835: a2 = a1 >> 0x18\n  9838: u8 [a5 + 0x1b] = a2\n  9841: a2 = a1 >> 0x10\n  9844: u8 [a5 + 0x1a] = a2\n  9847: a2 = reverse ra\n  9849: u8 [a5 + 0x18] = a1\n  9852: a1 = a1 >> 0x8\n  9855: u8 [a5 + 0x19] = a1\n  9858: a1 = a2 >> 0x38\n  9861: u8 [a5 + 0x17] = a1\n  9864: a1 = a2 >> 0x30\n  9867: u8 [a5 + 0x16] = a1\n  9870: a1 = a2 >> 0x28\n  9873: u8 [a5 + 0x15] = a1\n  9876: a1 = a2 >> 0x20\n  9879: u8 [a5 + 0x14] = a1\n  9882: a1 = a2 >> 0x18\n  9885: u8 [a5 + 0x13] = a1\n  9888: a1 = a2 >> 0x10\n  9891: u8 [a5 + 0x12] = a1\n  9894: a1 = reverse t2\n  9896: u8 [a5 + 0x10] = a2\n  9899: a2 = a2 >> 0x8\n  9902: u8 [a5 + 0x11] = a2\n  9905: a2 = a1 >> 0x38\n  9908: u8 [a5 + 0xf] = a2\n  9911: a2 = a1 >> 0x30\n  9914: u8 [a5 + 0xe] = a2\n  9917: a2 = a1 >> 0x28\n  9920: u8 [a5 + 0xd] = a2\n  9923: a2 = a1 >> 0x20\n  9926: u8 [a5 + 0xc] = a2\n  9929: a2 = a1 >> 0x18\n  9932: u8 [a5 + 0xb] = a2\n  9935: a2 = a1 >> 0x10\n  9938: u8 [a5 + 0xa] = a2\n  9941: a2 = reverse t1\n  9943: u8 [a5 + 0x8] = a1\n  9946: a1 = a1 >> 0x8\n  9949: u8 [a5 + 0x9] = a1\n  9952: a1 = a2 >> 0x38\n  9955: u8 [a5 + 0x7] = a1\n  9958: a1 = a2 >> 0x30\n  9961: u8 [a5 + 0x6] = a1\n  9964: a1 = a2 >> 0x28\n  9967: u8 [a5 + 0x5] = a1\n  9970: a1 = a2 >> 0x20\n  9973: u8 [a5 + 0x4] = a1\n  9976: a1 = a2 >> 0x18\n  9979: u8 [a5 + 0x3] = a1\n  9982: a1 = a2 >> 0x10\n  9985: u8 [a5 + 0x2] = a1\n  9988: u8 [a5] = a2\n  9990: a2 = a2 >> 0x8\n  9993: u8 [a5 + 0x1] = a2\n  9996: jump @280 if a0 == 0\n      : @279 (gas: 1)\n  9999: jump @660\n      : @280 (gas: 4)\n 10002: a0 = u64 [s1 + 0x1c8]\n 10006: i32 a0 = a0 + 0x20\n 10009: i32 a1 = a0 >> 0x10\n 10012: jump @282 if a1 == 0\n      : @281 (gas: 1)\n 10015: jump @660\n      : @282 (gas: 6)\n 10018: a1 = u64 [s1 + 0x1c8]\n 10022: a2 = a1 + 0x5f\n 10025: a1 = u64 [s1 + 0x1f0]\n 10029: u64 [s1 + 0x1b8] = a2\n 10033: a1 = a1 & a2\n 10036: jump @284 if a1 <=u 65536\n      : @283 (gas: 1)\n 10042: jump @660\n      : @284 (gas: 2)\n 10045: a2 = u64 [s1 + 0x200]\n 10049: jump @286 if a2 >=u a1\n      : @285 (gas: 4)\n 10052: a2 = u64 [s1 + 0x238]\n 10056: u32 [a2] = a1\n 10058: u64 [s1 + 0x200] = a1\n 10062: fallthrough\n      : @286 (gas: 70)\n 10063: a1 = u64 [s1 + 0x230]\n 10067: a3 = a1 + a0\n 10070: a2 = u64 [s1 + 0x178]\n 10074: u8 [a3 + 0x8] = a2\n 10077: a1 = u64 [s1 + 0x170]\n 10081: a0 = a1 >> 0x38\n 10084: u8 [a3 + 0x7] = a0\n 10087: a0 = a1 >> 0x30\n 10090: u8 [a3 + 0x6] = a0\n 10093: a0 = a1 >> 0x28\n 10096: u8 [a3 + 0x5] = a0\n 10099: a0 = a1 >> 0x20\n 10102: u8 [a3 + 0x4] = a0\n 10105: a0 = a1 >> 0x18\n 10108: u8 [a3 + 0x3] = a0\n 10111: a0 = a1 >> 0x10\n 10114: u8 [a3 + 0x2] = a0\n 10117: a0 = a1 >> 0x8\n 10120: u8 [a3 + 0x1] = a0\n 10123: u8 [a3] = a1\n 10125: a1 = u64 [s1 + 0x180]\n 10129: u8 [a3 + 0x10] = a1\n 10132: a0 = a2 >> 0x38\n 10135: u8 [a3 + 0xf] = a0\n 10138: a0 = a2 >> 0x30\n 10141: u8 [a3 + 0xe] = a0\n 10144: a0 = a2 >> 0x28\n 10147: u8 [a3 + 0xd] = a0\n 10150: a0 = a2 >> 0x20\n 10153: u8 [a3 + 0xc] = a0\n 10156: a0 = a2 >> 0x18\n 10159: u8 [a3 + 0xb] = a0\n 10162: a0 = a2 >> 0x10\n 10165: u8 [a3 + 0xa] = a0\n 10168: a0 = a2 >> 0x8\n 10171: u8 [a3 + 0x9] = a0\n 10174: a2 = u64 [s1 + 0x188]\n 10178: u8 [a3 + 0x18] = a2\n 10181: a0 = a1 >> 0x38\n 10184: u8 [a3 + 0x17] = a0\n 10187: a0 = a1 >> 0x30\n 10190: u8 [a3 + 0x16] = a0\n 10193: a0 = a1 >> 0x28\n 10196: u8 [a3 + 0x15] = a0\n 10199: a0 = a1 >> 0x20\n 10202: u8 [a3 + 0x14] = a0\n 10205: a0 = a1 >> 0x18\n 10208: u8 [a3 + 0x13] = a0\n 10211: a0 = a1 >> 0x10\n 10214: u8 [a3 + 0x12] = a0\n 10217: a0 = a1 >> 0x8\n 10220: u8 [a3 + 0x11] = a0\n 10223: a0 = a2 >> 0x38\n 10226: u8 [a3 + 0x1f] = a0\n 10229: a0 = a2 >> 0x30\n 10232: u8 [a3 + 0x1e] = a0\n 10235: a0 = a2 >> 0x28\n 10238: u8 [a3 + 0x1d] = a0\n 10241: a0 = a2 >> 0x20\n 10244: u8 [a3 + 0x1c] = a0\n 10247: a0 = a2 >> 0x18\n 10250: u8 [a3 + 0x1b] = a0\n 10253: a0 = a2 >> 0x10\n 10256: a1 = u64 [s1 + 0x228]\n 10260: a1 = i32 [a1]\n 10262: u8 [a3 + 0x1a] = a0\n 10265: a0 = a2 >> 0x8\n 10268: u64 [s1 + 0x1b0] = a3\n 10272: u8 [a3 + 0x19] = a0\n 10275: jump @288 if a1 >u 227\n      : @287 (gas: 1)\n 10280: jump @732\n      : @288 (gas: 2)\n 10283: a1 = u64 [s1 + 0x200]\n 10287: jump @290 if a1 >u 95\n      : @289 (gas: 3)\n 10291: a1 = u64 [s1 + 0x238]\n 10295: u32 [a1 + 0] = 0x60\n 10298: fallthrough\n      : @290 (gas: 24)\n 10299: a3 = u64 [s1 + 0x230]\n 10303: a0 = u64 [a3 + 0x58]\n 10306: a1 = u64 [a3 + 0x50]\n 10309: a2 = u64 [a3 + 0x48]\n 10312: a3 = u64 [a3 + 0x40]\n 10315: a4 = reverse a0\n 10317: a1 = reverse a1\n 10319: a2 = reverse a2\n 10321: a3 = reverse a3\n 10323: u64 [s1 + 1528] = 0\n 10327: u64 [s1 + 1520] = 0\n 10331: u64 [s1 + 1512] = 0\n 10335: u64 [s1 + 1504] = 0x40\n 10340: u64 [s1 + 0x1c0] = a3\n 10344: u64 [s1 + 0x618] = a3\n 10348: u64 [s1 + 0x1d0] = a2\n 10352: u64 [s1 + 0x610] = a2\n 10356: u64 [s1 + 0x1d8] = a1\n 10360: u64 [s1 + 0x608] = a1\n 10364: a0 = s1 + 0x600\n 10368: a1 = s1 + 0x5e0\n 10372: u64 [s1 + 0x200] = a4\n 10376: u64 [s1 + 0x600] = a4\n 10380: ra = 22, jump @1071\n      : @291 [@dyn 11] (gas: 3)\n 10385: a0 = u64 [s1 + 0x228]\n 10389: a0 = i32 [a0]\n 10391: jump @293 if a0 >=u 260\n      : @292 (gas: 1)\n 10396: jump @719\n      : @293 (gas: 5)\n 10399: a0 = s1 + 0x1000\n 10403: i32 a0 = a0 + 0xfffffffffffff980\n 10407: a1 = 0xc4\n 10411: ecalli 2 // 'call_data_load'\n 10413: fallthrough\n      : @294 (gas: 12)\n 10414: a0 = u64 [s1 + 0x200]\n 10418: a2 = u64 [s1 + 0x1d0]\n 10422: a0 = a0 | a2\n 10425: a1 = u64 [s1 + 0x1d8]\n 10429: a3 = u64 [s1 + 0x1c0]\n 10433: a1 = a1 | a3\n 10436: a0 = a0 | a1\n 10439: a0 = a0 >> 0x20\n 10442: a1 = a1 | a2\n 10445: a1 = a1 << 0x20\n 10448: a0 = a0 | a1\n 10451: jump @296 if a0 == 0\n      : @295 (gas: 1)\n 10454: jump @660\n      : @296 (gas: 3)\n 10457: a0 = u64 [s1 + 0x200]\n 10461: i32 a0 = a0 >> 0x10\n 10464: jump @298 if a0 == 0\n      : @297 (gas: 1)\n 10467: jump @660\n      : @298 (gas: 5)\n 10470: a0 = u64 [s1 + 0x200]\n 10474: a0 = a0 + 0x3f\n 10477: a1 = u64 [s1 + 0x1f0]\n 10481: a0 = a0 & a1\n 10484: jump @300 if a0 <=u 65536\n      : @299 (gas: 1)\n 10490: jump @660\n      : @300 (gas: 11)\n 10493: a1 = s1 + 0x1000\n 10497: a1 = u64 [a1 + 0xfffffffffffff998]\n 10501: a2 = s1 + 0x1000\n 10505: a2 = u64 [a2 + 0xfffffffffffff990]\n 10509: a3 = s1 + 0x1000\n 10513: a3 = u64 [a3 + 0xfffffffffffff988]\n 10517: a4 = u64 [s1 + 0x238]\n 10521: a5 = i32 [a4]\n 10523: a4 = s1 + 0x1000\n 10527: a4 = u64 [a4 + 0xfffffffffffff980]\n 10531: jump @302 if a5 >=u a0\n      : @301 (gas: 3)\n 10534: a5 = u64 [s1 + 0x238]\n 10538: u32 [a5] = a0\n 10540: fallthrough\n      : @302 (gas: 72)\n 10541: a0 = i32 [s1 + 0x200]\n 10545: a5 = u64 [s1 + 0x230]\n 10549: a0 = a0 + a5\n 10552: a1 = reverse a1\n 10554: a2 = reverse a2\n 10556: a3 = reverse a3\n 10558: a4 = reverse a4\n 10560: a5 = a4 >> 0x38\n 10563: u8 [a0 + 0x1f] = a5\n 10566: a5 = a4 >> 0x30\n 10569: u8 [a0 + 0x1e] = a5\n 10572: a5 = a4 >> 0x28\n 10575: u8 [a0 + 0x1d] = a5\n 10578: a5 = a4 >> 0x20\n 10581: u8 [a0 + 0x1c] = a5\n 10584: a5 = a4 >> 0x18\n 10587: u8 [a0 + 0x1b] = a5\n 10590: a5 = a4 >> 0x10\n 10593: u8 [a0 + 0x1a] = a5\n 10596: a5 = a4 >> 0x8\n 10599: u8 [a0 + 0x19] = a5\n 10602: u8 [a0 + 0x18] = a4\n 10605: u8 [a0 + 0x10] = a3\n 10608: a4 = a3 >> 0x38\n 10611: u8 [a0 + 0x17] = a4\n 10614: a4 = a3 >> 0x30\n 10617: u8 [a0 + 0x16] = a4\n 10620: a4 = a3 >> 0x28\n 10623: u8 [a0 + 0x15] = a4\n 10626: a4 = a3 >> 0x20\n 10629: u8 [a0 + 0x14] = a4\n 10632: a4 = a3 >> 0x18\n 10635: u8 [a0 + 0x13] = a4\n 10638: a4 = a3 >> 0x10\n 10641: u8 [a0 + 0x12] = a4\n 10644: a3 = a3 >> 0x8\n 10647: u8 [a0 + 0x11] = a3\n 10650: u8 [a0 + 0x8] = a2\n 10653: a3 = a2 >> 0x38\n 10656: u8 [a0 + 0xf] = a3\n 10659: a3 = a2 >> 0x30\n 10662: u8 [a0 + 0xe] = a3\n 10665: a3 = a2 >> 0x28\n 10668: u8 [a0 + 0xd] = a3\n 10671: a3 = a2 >> 0x20\n 10674: u8 [a0 + 0xc] = a3\n 10677: a3 = a2 >> 0x18\n 10680: u8 [a0 + 0xb] = a3\n 10683: a3 = a2 >> 0x10\n 10686: u8 [a0 + 0xa] = a3\n 10689: a2 = a2 >> 0x8\n 10692: u8 [a0 + 0x9] = a2\n 10695: u8 [a0] = a1\n 10697: a2 = a1 >> 0x38\n 10700: u8 [a0 + 0x7] = a2\n 10703: a2 = a1 >> 0x30\n 10706: u8 [a0 + 0x6] = a2\n 10709: a2 = a1 >> 0x28\n 10712: u8 [a0 + 0x5] = a2\n 10715: a2 = a1 >> 0x20\n 10718: u8 [a0 + 0x4] = a2\n 10721: a2 = a1 >> 0x18\n 10724: u8 [a0 + 0x3] = a2\n 10727: a2 = a1 >> 0x10\n 10730: u8 [a0 + 0x2] = a2\n 10733: a1 = a1 >> 0x8\n 10736: u8 [a0 + 0x1] = a1\n 10739: a0 = s1 + 0x1000\n 10743: i32 a0 = a0 + 0xfffffffffffff980\n 10747: a1 = 0xe4\n 10751: ecalli 2 // 'call_data_load'\n 10753: fallthrough\n      : @303 (gas: 14)\n 10754: a4 = u64 [s1 + 0x1d0]\n 10758: a0 = a4 >u 0\n 10760: a5 = u64 [s1 + 0x1c0]\n 10764: a1 = a5 >u 0\n 10766: a1 = a0 if a5 == 0\n 10769: a0 = 0xffffffdf\n 10779: a2 = u64 [s1 + 0x200]\n 10783: a0 = a0 <u a2\n 10786: a3 = u64 [s1 + 0x1d8]\n 10790: a2 = a3 >u 0\n 10792: a2 = a0 if a3 == 0\n 10795: a0 = a4 | a5\n 10798: a2 = a1 if a0 != 0\n 10801: jump @305 if a2 == 0\n      : @304 (gas: 1)\n 10804: jump @660\n      : @305 (gas: 3)\n 10807: a0 = u64 [s1 + 0x200]\n 10811: i32 a0 = a0 >> 0x5\n 10814: jump @307 if a0 <=u 2046\n      : @306 (gas: 1)\n 10819: jump @660\n      : @307 (gas: 5)\n 10822: a0 = u64 [s1 + 0x200]\n 10826: a0 = a0 + 0x5f\n 10829: a1 = u64 [s1 + 0x1f0]\n 10833: a1 = a1 & a0\n 10836: jump @309 if a1 <=u 65536\n      : @308 (gas: 1)\n 10842: jump @660\n      : @309 (gas: 13)\n 10845: a0 = s1 + 0x1000\n 10849: t1 = u64 [a0 + 0xfffffffffffff998]\n 10853: a0 = s1 + 0x1000\n 10857: a3 = u64 [a0 + 0xfffffffffffff990]\n 10861: a0 = s1 + 0x1000\n 10865: a4 = u64 [a0 + 0xfffffffffffff988]\n 10869: a0 = u64 [s1 + 0x238]\n 10873: t0 = i32 [a0]\n 10875: a0 = s1 + 0x1000\n 10879: a5 = u64 [a0 + 0xfffffffffffff980]\n 10883: a0 = u64 [s1 + 0x200]\n 10887: i32 a0 = a0 + 0x20\n 10890: jump @311 if t0 >=u a1\n      : @310 (gas: 4)\n 10893: a2 = u64 [s1 + 0x238]\n 10897: u32 [a2] = a1\n 10899: t0 = a1\n 10901: fallthrough\n      : @311 (gas: 69)\n 10902: a1 = u64 [s1 + 0x230]\n 10906: a1 = a1 + a0\n 10909: a2 = reverse t1\n 10911: a3 = reverse a3\n 10913: a4 = reverse a4\n 10915: a0 = reverse a5\n 10917: u8 [a1 + 0x18] = a0\n 10920: a5 = a0 >> 0x38\n 10923: u8 [a1 + 0x1f] = a5\n 10926: a5 = a0 >> 0x30\n 10929: u8 [a1 + 0x1e] = a5\n 10932: a5 = a0 >> 0x28\n 10935: u8 [a1 + 0x1d] = a5\n 10938: a5 = a0 >> 0x20\n 10941: u8 [a1 + 0x1c] = a5\n 10944: a5 = a0 >> 0x18\n 10947: u8 [a1 + 0x1b] = a5\n 10950: a5 = a0 >> 0x10\n 10953: u8 [a1 + 0x1a] = a5\n 10956: a0 = a0 >> 0x8\n 10959: u8 [a1 + 0x19] = a0\n 10962: u8 [a1 + 0x10] = a4\n 10965: a0 = a4 >> 0x38\n 10968: u8 [a1 + 0x17] = a0\n 10971: a0 = a4 >> 0x30\n 10974: u8 [a1 + 0x16] = a0\n 10977: a0 = a4 >> 0x28\n 10980: u8 [a1 + 0x15] = a0\n 10983: a0 = a4 >> 0x20\n 10986: u8 [a1 + 0x14] = a0\n 10989: a0 = a4 >> 0x18\n 10992: u8 [a1 + 0x13] = a0\n 10995: a0 = a4 >> 0x10\n 10998: u8 [a1 + 0x12] = a0\n 11001: a4 = a4 >> 0x8\n 11004: u8 [a1 + 0x11] = a4\n 11007: u8 [a1 + 0x8] = a3\n 11010: a0 = a3 >> 0x38\n 11013: u8 [a1 + 0xf] = a0\n 11016: a0 = a3 >> 0x30\n 11019: u8 [a1 + 0xe] = a0\n 11022: a0 = a3 >> 0x28\n 11025: u8 [a1 + 0xd] = a0\n 11028: a0 = a3 >> 0x20\n 11031: u8 [a1 + 0xc] = a0\n 11034: a0 = a3 >> 0x18\n 11037: u8 [a1 + 0xb] = a0\n 11040: a0 = a3 >> 0x10\n 11043: u8 [a1 + 0xa] = a0\n 11046: a3 = a3 >> 0x8\n 11049: u8 [a1 + 0x9] = a3\n 11052: u8 [a1] = a2\n 11054: a0 = a2 >> 0x38\n 11057: u8 [a1 + 0x7] = a0\n 11060: a0 = a2 >> 0x30\n 11063: u8 [a1 + 0x6] = a0\n 11066: a0 = a2 >> 0x28\n 11069: u8 [a1 + 0x5] = a0\n 11072: a0 = a2 >> 0x20\n 11075: u8 [a1 + 0x4] = a0\n 11078: a0 = a2 >> 0x18\n 11081: u8 [a1 + 0x3] = a0\n 11084: a0 = a2 >> 0x10\n 11087: a3 = u64 [s1 + 0x228]\n 11091: a3 = i32 [a3]\n 11093: u8 [a1 + 0x2] = a0\n 11096: a2 = a2 >> 0x8\n 11099: u8 [a1 + 0x1] = a2\n 11102: jump @313 if a3 >u 291\n      : @312 (gas: 1)\n 11107: jump @732\n      : @313 (gas: 1)\n 11110: jump @315 if t0 >u 95\n      : @314 (gas: 3)\n 11114: a1 = u64 [s1 + 0x238]\n 11118: u32 [a1 + 0] = 0x60\n 11121: fallthrough\n      : @315 (gas: 24)\n 11122: a3 = u64 [s1 + 0x230]\n 11126: a0 = u64 [a3 + 0x58]\n 11129: a1 = u64 [a3 + 0x50]\n 11132: a2 = u64 [a3 + 0x48]\n 11135: a3 = u64 [a3 + 0x40]\n 11138: a4 = reverse a0\n 11140: a1 = reverse a1\n 11142: a2 = reverse a2\n 11144: a3 = reverse a3\n 11146: u64 [s1 + 1464] = 0\n 11150: u64 [s1 + 1456] = 0\n 11154: u64 [s1 + 1448] = 0\n 11158: u64 [s1 + 1440] = 0x40\n 11163: u64 [s1 + 0x190] = a3\n 11167: u64 [s1 + 0x5d8] = a3\n 11171: u64 [s1 + 0x198] = a2\n 11175: u64 [s1 + 0x5d0] = a2\n 11179: u64 [s1 + 0x1a0] = a1\n 11183: u64 [s1 + 0x5c8] = a1\n 11187: a0 = s1 + 0x5c0\n 11191: a1 = s1 + 0x5a0\n 11195: u64 [s1 + 0x1a8] = a4\n 11199: u64 [s1 + 0x5c0] = a4\n 11203: ra = 24, jump @1071\n      : @316 [@dyn 12] (gas: 3)\n 11208: a0 = u64 [s1 + 0x228]\n 11212: a0 = i32 [a0]\n 11214: jump @318 if a0 >=u 324\n      : @317 (gas: 1)\n 11219: jump @719\n      : @318 (gas: 5)\n 11222: a0 = s1 + 0x1000\n 11226: i32 a0 = a0 + 0xfffffffffffff9a0\n 11230: a1 = 0x104\n 11234: ecalli 2 // 'call_data_load'\n 11236: fallthrough\n      : @319 (gas: 12)\n 11237: a0 = u64 [s1 + 0x1a8]\n 11241: a2 = u64 [s1 + 0x198]\n 11245: a0 = a0 | a2\n 11248: a1 = u64 [s1 + 0x1a0]\n 11252: a3 = u64 [s1 + 0x190]\n 11256: a1 = a1 | a3\n 11259: a0 = a0 | a1\n 11262: a0 = a0 >> 0x20\n 11265: a1 = a1 | a2\n 11268: a1 = a1 << 0x20\n 11271: a0 = a0 | a1\n 11274: jump @321 if a0 == 0\n      : @320 (gas: 1)\n 11277: jump @660\n      : @321 (gas: 3)\n 11280: a0 = u64 [s1 + 0x1a8]\n 11284: i32 a0 = a0 >> 0x10\n 11287: jump @323 if a0 == 0\n      : @322 (gas: 1)\n 11290: jump @660\n      : @323 (gas: 6)\n 11293: a0 = u64 [s1 + 0x1a8]\n 11297: a0 = a0 + 0x3f\n 11300: a1 = u64 [s1 + 0x1f0]\n 11304: a1 = a1 & a0\n 11307: u64 [s1 + 0x228] = a1\n 11311: jump @325 if a1 <=u 65536\n      : @324 (gas: 1)\n 11317: jump @660\n      : @325 (gas: 12)\n 11320: a1 = s1 + 0x7ff\n 11324: a1 = a1 + 0x1b9\n 11328: a0 = u64 [a1]\n 11330: a1 = u64 [a1 + 0xfffffffffffffff8]\n 11333: a2 = s1 + 0x1000\n 11337: a2 = u64 [a2 + 0xfffffffffffff9a8]\n 11341: a3 = u64 [s1 + 0x238]\n 11345: a4 = i32 [a3]\n 11347: a3 = s1 + 0x1000\n 11351: a3 = u64 [a3 + 0xfffffffffffff9a0]\n 11355: a5 = u64 [s1 + 0x228]\n 11359: jump @327 if a4 >=u a5\n      : @326 (gas: 4)\n 11362: a4 = u64 [s1 + 0x238]\n 11366: a5 = u64 [s1 + 0x228]\n 11370: u32 [a4] = a5\n 11372: fallthrough\n      : @327 (gas: 73)\n 11373: a4 = i32 [s1 + 0x1a8]\n 11377: a5 = u64 [s1 + 0x230]\n 11381: a5 = a5 + a4\n 11384: a0 = reverse a0\n 11386: a1 = reverse a1\n 11388: a2 = reverse a2\n 11390: a3 = reverse a3\n 11392: a4 = a3 >> 0x38\n 11395: u8 [a5 + 0x1f] = a4\n 11398: a4 = a3 >> 0x30\n 11401: u8 [a5 + 0x1e] = a4\n 11404: a4 = a3 >> 0x28\n 11407: u8 [a5 + 0x1d] = a4\n 11410: a4 = a3 >> 0x20\n 11413: u8 [a5 + 0x1c] = a4\n 11416: a4 = a3 >> 0x18\n 11419: u8 [a5 + 0x1b] = a4\n 11422: a4 = a3 >> 0x10\n 11425: u8 [a5 + 0x1a] = a4\n 11428: a4 = a3 >> 0x8\n 11431: u8 [a5 + 0x19] = a4\n 11434: u8 [a5 + 0x18] = a3\n 11437: u8 [a5 + 0x10] = a2\n 11440: a3 = a2 >> 0x38\n 11443: u8 [a5 + 0x17] = a3\n 11446: a3 = a2 >> 0x30\n 11449: u8 [a5 + 0x16] = a3\n 11452: a3 = a2 >> 0x28\n 11455: u8 [a5 + 0x15] = a3\n 11458: a3 = a2 >> 0x20\n 11461: u8 [a5 + 0x14] = a3\n 11464: a3 = a2 >> 0x18\n 11467: u8 [a5 + 0x13] = a3\n 11470: a3 = a2 >> 0x10\n 11473: u8 [a5 + 0x12] = a3\n 11476: a2 = a2 >> 0x8\n 11479: u8 [a5 + 0x11] = a2\n 11482: u8 [a5 + 0x8] = a1\n 11485: a2 = a1 >> 0x38\n 11488: u8 [a5 + 0xf] = a2\n 11491: a2 = a1 >> 0x30\n 11494: u8 [a5 + 0xe] = a2\n 11497: a2 = a1 >> 0x28\n 11500: u8 [a5 + 0xd] = a2\n 11503: a2 = a1 >> 0x20\n 11506: u8 [a5 + 0xc] = a2\n 11509: a2 = a1 >> 0x18\n 11512: u8 [a5 + 0xb] = a2\n 11515: a2 = a1 >> 0x10\n 11518: u8 [a5 + 0xa] = a2\n 11521: a1 = a1 >> 0x8\n 11524: u8 [a5 + 0x9] = a1\n 11527: u8 [a5] = a0\n 11529: a1 = a0 >> 0x38\n 11532: u8 [a5 + 0x7] = a1\n 11535: a1 = a0 >> 0x30\n 11538: u8 [a5 + 0x6] = a1\n 11541: a1 = a0 >> 0x28\n 11544: u8 [a5 + 0x5] = a1\n 11547: a1 = a0 >> 0x20\n 11550: u8 [a5 + 0x4] = a1\n 11553: a1 = a0 >> 0x18\n 11556: u8 [a5 + 0x3] = a1\n 11559: a1 = a0 >> 0x10\n 11562: u8 [a5 + 0x2] = a1\n 11565: a0 = a0 >> 0x8\n 11568: u64 [s1 + 0x188] = a5\n 11572: u8 [a5 + 0x1] = a0\n 11575: a0 = s1 + 0x1000\n 11579: i32 a0 = a0 + 0xfffffffffffff9a0\n 11583: a1 = 0x124\n 11587: ecalli 2 // 'call_data_load'\n 11589: fallthrough\n      : @328 (gas: 14)\n 11590: a4 = u64 [s1 + 0x198]\n 11594: a0 = a4 >u 0\n 11596: a5 = u64 [s1 + 0x190]\n 11600: a1 = a5 >u 0\n 11602: a1 = a0 if a5 == 0\n 11605: a0 = 0xffffffdf\n 11615: a2 = u64 [s1 + 0x1a8]\n 11619: a0 = a0 <u a2\n 11622: a3 = u64 [s1 + 0x1a0]\n 11626: a2 = a3 >u 0\n 11628: a2 = a0 if a3 == 0\n 11631: a0 = a4 | a5\n 11634: a2 = a1 if a0 != 0\n 11637: jump @330 if a2 == 0\n      : @329 (gas: 1)\n 11640: jump @660\n      : @330 (gas: 4)\n 11643: a0 = u64 [s1 + 0x1a8]\n 11647: i32 a1 = a0 >> 0x5\n 11650: u64 [s1 + 0x1a0] = a1\n 11654: jump @332 if a1 <=u 2046\n      : @331 (gas: 1)\n 11659: jump @660\n      : @332 (gas: 6)\n 11662: a0 = u64 [s1 + 0x1a8]\n 11666: a0 = a0 + 0x5f\n 11669: a1 = u64 [s1 + 0x1f0]\n 11673: a1 = a1 & a0\n 11676: u64 [s1 + 0x198] = a1\n 11680: jump @334 if a1 <=u 65536\n      : @333 (gas: 1)\n 11686: jump @660\n      : @334 (gas: 14)\n 11689: a1 = s1 + 0x7ff\n 11693: a1 = a1 + 0x1b9\n 11697: t0 = u64 [a1]\n 11699: a1 = u64 [a1 + 0xfffffffffffffff8]\n 11702: a0 = s1 + 0x1000\n 11706: a2 = u64 [a0 + 0xfffffffffffff9a8]\n 11710: a3 = u64 [s1 + 0x238]\n 11714: a5 = i32 [a3]\n 11716: a0 = s1 + 0x1000\n 11720: a3 = u64 [a0 + 0xfffffffffffff9a0]\n 11724: a4 = u64 [s1 + 0x1a8]\n 11728: i32 a4 = a4 + 0x20\n 11731: a0 = u64 [s1 + 0x198]\n 11735: jump @336 if a5 >=u a0\n      : @335 (gas: 4)\n 11738: a5 = u64 [s1 + 0x238]\n 11742: a0 = u64 [s1 + 0x198]\n 11746: u32 [a5] = a0\n 11748: fallthrough\n      : @336 (gas: 68)\n 11749: a5 = u64 [s1 + 0x230]\n 11753: a5 = a5 + a4\n 11756: a0 = reverse t0\n 11758: a1 = reverse a1\n 11760: a2 = reverse a2\n 11762: a3 = reverse a3\n 11764: u8 [a5 + 0x18] = a3\n 11767: a4 = a3 >> 0x38\n 11770: u8 [a5 + 0x1f] = a4\n 11773: a4 = a3 >> 0x30\n 11776: u8 [a5 + 0x1e] = a4\n 11779: a4 = a3 >> 0x28\n 11782: u8 [a5 + 0x1d] = a4\n 11785: a4 = a3 >> 0x20\n 11788: u8 [a5 + 0x1c] = a4\n 11791: a4 = a3 >> 0x18\n 11794: u8 [a5 + 0x1b] = a4\n 11797: a4 = a3 >> 0x10\n 11800: u8 [a5 + 0x1a] = a4\n 11803: a3 = a3 >> 0x8\n 11806: u8 [a5 + 0x19] = a3\n 11809: u8 [a5 + 0x10] = a2\n 11812: a3 = a2 >> 0x38\n 11815: u8 [a5 + 0x17] = a3\n 11818: a3 = a2 >> 0x30\n 11821: u8 [a5 + 0x16] = a3\n 11824: a3 = a2 >> 0x28\n 11827: u8 [a5 + 0x15] = a3\n 11830: a3 = a2 >> 0x20\n 11833: u8 [a5 + 0x14] = a3\n 11836: a3 = a2 >> 0x18\n 11839: u8 [a5 + 0x13] = a3\n 11842: a3 = a2 >> 0x10\n 11845: u8 [a5 + 0x12] = a3\n 11848: a2 = a2 >> 0x8\n 11851: u8 [a5 + 0x11] = a2\n 11854: u8 [a5 + 0x8] = a1\n 11857: a2 = a1 >> 0x38\n 11860: u8 [a5 + 0xf] = a2\n 11863: a2 = a1 >> 0x30\n 11866: u8 [a5 + 0xe] = a2\n 11869: a2 = a1 >> 0x28\n 11872: u8 [a5 + 0xd] = a2\n 11875: a2 = a1 >> 0x20\n 11878: u8 [a5 + 0xc] = a2\n 11881: a2 = a1 >> 0x18\n 11884: u8 [a5 + 0xb] = a2\n 11887: a2 = a1 >> 0x10\n 11890: u8 [a5 + 0xa] = a2\n 11893: a1 = a1 >> 0x8\n 11896: u8 [a5 + 0x9] = a1\n 11899: u8 [a5] = a0\n 11901: a1 = a0 >> 0x38\n 11904: u8 [a5 + 0x7] = a1\n 11907: a1 = a0 >> 0x30\n 11910: u8 [a5 + 0x6] = a1\n 11913: a1 = a0 >> 0x28\n 11916: u8 [a5 + 0x5] = a1\n 11919: a1 = a0 >> 0x20\n 11922: u8 [a5 + 0x4] = a1\n 11925: a1 = a0 >> 0x18\n 11928: u8 [a5 + 0x3] = a1\n 11931: a1 = a0 >> 0x10\n 11934: u8 [a5 + 0x2] = a1\n 11937: a0 = a0 >> 0x8\n 11940: u64 [s1 + 0x1a8] = a5\n 11944: u8 [a5 + 0x1] = a0\n 11947: ra = 26, jump @1131\n      : @337 [@dyn 13] (gas: 4)\n 11952: a0 = u64 [s1 + 0x238]\n 11956: ra = i32 [a0]\n 11958: a0 = u64 [s1 + 0x228]\n 11962: jump @339 if ra >=u a0\n      : @338 (gas: 4)\n 11965: a0 = u64 [s1 + 0x238]\n 11969: ra = u64 [s1 + 0x228]\n 11973: u32 [a0] = ra\n 11975: fallthrough\n      : @339 (gas: 2)\n 11976: a0 = u64 [s1 + 0x1a0]\n 11980: jump @341 if a0 <u 2047\n      : @340 (gas: 1)\n 11985: jump @660\n      : @341 (gas: 2)\n 11988: a0 = u64 [s1 + 0x198]\n 11992: jump @343 if a0 <=u 65536\n      : @342 (gas: 1)\n 11998: jump @660\n      : @343 (gas: 2)\n 12001: a0 = u64 [s1 + 0x198]\n 12005: jump @345 if ra >=u a0\n      : @344 (gas: 4)\n 12008: a0 = u64 [s1 + 0x238]\n 12012: ra = u64 [s1 + 0x198]\n 12016: u32 [a0] = ra\n 12018: fallthrough\n      : @345 (gas: 164)\n 12019: a0 = u64 [s1 + 0x1a8]\n 12023: a1 = u8 [a0 + 0x11]\n 12026: a2 = u8 [a0 + 0x10]\n 12029: a3 = u8 [a0 + 0x12]\n 12032: a4 = u8 [a0 + 0x13]\n 12035: a1 = a1 << 0x8\n 12038: a1 = a1 | a2\n 12041: a3 = a3 << 0x10\n 12044: a4 = a4 << 0x18\n 12047: a3 = a3 | a4\n 12050: a1 = a1 | a3\n 12053: a2 = u8 [a0 + 0x15]\n 12056: a3 = u8 [a0 + 0x14]\n 12059: a4 = u8 [a0 + 0x16]\n 12062: a5 = u8 [a0 + 0x17]\n 12065: a2 = a2 << 0x8\n 12068: a2 = a2 | a3\n 12071: a4 = a4 << 0x10\n 12074: a5 = a5 << 0x18\n 12077: a4 = a4 | a5\n 12080: a2 = a2 | a4\n 12083: a2 = a2 << 0x20\n 12086: t0 = a2 | a1\n 12089: a1 = u8 [a0 + 0x9]\n 12092: a2 = u8 [a0 + 0x8]\n 12095: a3 = u8 [a0 + 0xa]\n 12098: a4 = u8 [a0 + 0xb]\n 12101: a1 = a1 << 0x8\n 12104: a1 = a1 | a2\n 12107: a3 = a3 << 0x10\n 12110: a4 = a4 << 0x18\n 12113: a3 = a3 | a4\n 12116: a1 = a1 | a3\n 12119: a2 = u8 [a0 + 0xd]\n 12122: a3 = u8 [a0 + 0xc]\n 12125: a4 = u8 [a0 + 0xe]\n 12128: a5 = u8 [a0 + 0xf]\n 12131: a2 = a2 << 0x8\n 12134: a2 = a2 | a3\n 12137: a4 = a4 << 0x10\n 12140: a5 = a5 << 0x18\n 12143: a4 = a4 | a5\n 12146: a2 = a2 | a4\n 12149: a2 = a2 << 0x20\n 12152: t1 = a2 | a1\n 12155: a1 = u8 [a0 + 0x1]\n 12158: a2 = u8 [a0]\n 12160: a3 = u8 [a0 + 0x2]\n 12163: a4 = u8 [a0 + 0x3]\n 12166: a1 = a1 << 0x8\n 12169: a1 = a1 | a2\n 12172: a3 = a3 << 0x10\n 12175: a4 = a4 << 0x18\n 12178: a3 = a3 | a4\n 12181: a1 = a1 | a3\n 12184: a2 = u8 [a0 + 0x5]\n 12187: a3 = u8 [a0 + 0x4]\n 12190: a4 = u8 [a0 + 0x6]\n 12193: a5 = u8 [a0 + 0x7]\n 12196: a2 = a2 << 0x8\n 12199: a2 = a2 | a3\n 12202: a4 = a4 << 0x10\n 12205: a5 = a5 << 0x18\n 12208: a4 = a4 | a5\n 12211: a2 = a2 | a4\n 12214: a2 = a2 << 0x20\n 12217: t2 = a2 | a1\n 12220: a1 = u8 [a0 + 0x19]\n 12223: a2 = u8 [a0 + 0x18]\n 12226: a3 = u8 [a0 + 0x1a]\n 12229: a4 = u8 [a0 + 0x1b]\n 12232: a1 = a1 << 0x8\n 12235: a1 = a1 | a2\n 12238: a3 = a3 << 0x10\n 12241: a4 = a4 << 0x18\n 12244: a2 = u8 [a0 + 0x1d]\n 12247: a3 = a3 | a4\n 12250: a1 = a1 | a3\n 12253: a3 = u8 [a0 + 0x1c]\n 12256: a2 = a2 << 0x8\n 12259: a4 = u8 [a0 + 0x1e]\n 12262: a5 = u8 [a0 + 0x1f]\n 12265: a2 = a2 | a3\n 12268: a3 = u64 [s1 + 0x188]\n 12272: a0 = u8 [a3 + 0x1d]\n 12275: u64 [s1 + 0xb0] = a0\n 12279: a4 = a4 << 0x10\n 12282: a5 = a5 << 0x18\n 12285: a4 = a4 | a5\n 12288: a0 = u8 [a3 + 0x1e]\n 12291: u64 [s1 + 0xe0] = a0\n 12295: a2 = a2 | a4\n 12298: a0 = u8 [a3 + 0x1f]\n 12301: u64 [s1 + 0xd8] = a0\n 12305: a2 = a2 << 0x20\n 12308: a1 = a1 | a2\n 12311: a0 = u8 [a3 + 0x15]\n 12314: u64 [s1 + 0xc8] = a0\n 12318: a0 = u8 [a3 + 0x16]\n 12321: u64 [s1 + 0xf0] = a0\n 12325: a0 = u8 [a3 + 0x17]\n 12328: u64 [s1 + 0xe8] = a0\n 12332: a0 = u8 [a3 + 0xd]\n 12335: u64 [s1 + 0xf8] = a0\n 12339: a0 = u8 [a3 + 0xe]\n 12342: u64 [s1 + 0x110] = a0\n 12346: a0 = u8 [a3 + 0xf]\n 12349: u64 [s1 + 0x108] = a0\n 12353: a0 = u8 [a3 + 0x5]\n 12356: u64 [s1 + 0x118] = a0\n 12360: a0 = u8 [a3 + 0x6]\n 12363: u64 [s1 + 0x130] = a0\n 12367: a0 = u8 [a3 + 0x7]\n 12370: u64 [s1 + 0x128] = a0\n 12374: a0 = u8 [a3 + 0x19]\n 12377: u64 [s1 + 0x138] = a0\n 12381: a0 = u8 [a3 + 0x1a]\n 12384: u64 [s1 + 0x148] = a0\n 12388: a0 = u8 [a3 + 0x1b]\n 12391: u64 [s1 + 0x140] = a0\n 12395: a0 = u8 [a3 + 0x1c]\n 12398: u64 [s1 + 0xa0] = a0\n 12402: a0 = u8 [a3 + 0x11]\n 12405: u64 [s1 + 0x150] = a0\n 12409: a0 = u8 [a3 + 0x12]\n 12412: u64 [s1 + 0x160] = a0\n 12416: a0 = u8 [a3 + 0x13]\n 12419: u64 [s1 + 0x158] = a0\n 12423: a0 = u8 [a3 + 0x14]\n 12426: u64 [s1 + 0xa8] = a0\n 12430: a0 = u8 [a3 + 0x9]\n 12433: u64 [s1 + 0x170] = a0\n 12437: a0 = u8 [a3 + 0xa]\n 12440: u64 [s1 + 0x180] = a0\n 12444: a0 = u8 [a3 + 0xb]\n 12447: u64 [s1 + 0x178] = a0\n 12451: a0 = u8 [a3 + 0xc]\n 12454: u64 [s1 + 0xb8] = a0\n 12458: a0 = u8 [a3 + 0x1]\n 12461: u64 [s1 + 0x190] = a0\n 12465: a0 = u8 [a3 + 0x2]\n 12468: u64 [s1 + 0x1a0] = a0\n 12472: a0 = u8 [a3 + 0x3]\n 12475: u64 [s1 + 0x198] = a0\n 12479: a0 = u8 [a3 + 0x4]\n 12482: u64 [s1 + 0xc0] = a0\n 12486: a0 = u8 [a3 + 0x18]\n 12489: u64 [s1 + 0xd0] = a0\n 12493: a0 = u8 [a3 + 0x10]\n 12496: u64 [s1 + 0x100] = a0\n 12500: a0 = u8 [a3 + 0x8]\n 12503: u64 [s1 + 0x120] = a0\n 12507: a0 = u8 [a3]\n 12509: u64 [s1 + 0x188] = a0\n 12513: a2 = u64 [s1 + 0x230]\n 12517: u64 [s1 + 0x80] = a1\n 12521: u64 [a2 + 0x18] = a1\n 12524: u64 [s1 + 0x88] = t2\n 12528: u64 [a2] = t2\n 12530: u64 [s1 + 0x90] = t1\n 12534: u64 [a2 + 0x8] = t1\n 12537: u64 [s1 + 0x98] = t0\n 12541: u64 [a2 + 0x10] = t0\n 12544: jump @347 if ra >u 63\n      : @346 (gas: 3)\n 12548: a1 = u64 [s1 + 0x238]\n 12552: u32 [a1 + 0] = 0x40\n 12555: fallthrough\n      : @347 (gas: 34)\n 12556: a1 = u64 [s1 + 0x230]\n 12560: u64 [a1 + 48] = 0\n 12563: u64 [a1 + 40] = 0\n 12566: u64 [a1 + 32] = 0\n 12569: a0 = 0x700000000000000\n 12579: u64 [a1 + 0x38] = a0\n 12582: a0 = sp + 0xffffffffffffffe0\n 12585: a2 = a0 & 0xffffffffffffffe0\n 12588: u64 [s1 + 0x228] = a2\n 12592: sp = a2\n 12594: i32 a0 = a1 + 0\n 12596: i32 a2 = a2 + 0\n 12598: a1 = 0x40\n 12601: u64 [s1 + 0x1a8] = a0\n 12605: ecalli 7 // 'hash_keccak_256'\n 12607: a3 = u64 [s1 + 0x228]\n 12611: a0 = u64 [a3 + 0x18]\n 12614: a1 = u64 [a3 + 0x10]\n 12617: a2 = u64 [a3 + 0x8]\n 12620: a3 = u64 [a3]\n 12622: a0 = reverse a0\n 12624: a1 = reverse a1\n 12626: a2 = reverse a2\n 12628: a3 = reverse a3\n 12630: a4 = s1 + 0x7ff\n 12634: a4 = a4 + 0x1b9\n 12638: u64 [a4 + 0x20] = a3\n 12641: u64 [a4 + 0x18] = a2\n 12644: u64 [a4 + 0x10] = a1\n 12647: u64 [a4 + 0x8] = a0\n 12650: a0 = s1 + 0x580\n 12654: a1 = s1 + 0x7ff\n 12658: a1 = a1 + 0x1c1\n 12662: ra = 28, jump @0\n      : @348 [@dyn 14] (gas: 5)\n 12667: a0 = u8 [s1 + 0x580]\n 12671: a1 = u64 [s1 + 0x238]\n 12675: a1 = i32 [a1]\n 12677: u64 [s1 + 0x228] = a1\n 12681: jump @350 if a0 == 0\n      : @349 (gas: 1)\n 12684: jump @747\n      : @350 (gas: 117)\n 12687: a0 = u64 [s1 + 0xb0]\n 12691: a0 = a0 << 0x8\n 12694: a1 = u64 [s1 + 0xa0]\n 12698: ra = a0 | a1\n 12701: a0 = u64 [s1 + 0xe0]\n 12705: a0 = a0 << 0x10\n 12708: a1 = u64 [s1 + 0xd8]\n 12712: a1 = a1 << 0x18\n 12715: a0 = a0 | a1\n 12718: a1 = u64 [s1 + 0xc8]\n 12722: a1 = a1 << 0x8\n 12725: a2 = u64 [s1 + 0xa8]\n 12729: a1 = a1 | a2\n 12732: u64 [s1 + 0xe0] = a1\n 12736: a1 = u64 [s1 + 0xf0]\n 12740: a1 = a1 << 0x10\n 12743: a5 = u64 [s1 + 0xe8]\n 12747: a5 = a5 << 0x18\n 12750: t0 = a5 | a1\n 12753: a1 = u64 [s1 + 0xf8]\n 12757: a1 = a1 << 0x8\n 12760: a2 = u64 [s1 + 0xb8]\n 12764: a1 = a1 | a2\n 12767: u64 [s1 + 0xf8] = a1\n 12771: a1 = u64 [s1 + 0x110]\n 12775: a1 = a1 << 0x10\n 12778: a2 = u64 [s1 + 0x108]\n 12782: a2 = a2 << 0x18\n 12785: a1 = a1 | a2\n 12788: u64 [s1 + 0x110] = a1\n 12792: a1 = u64 [s1 + 0x118]\n 12796: a1 = a1 << 0x8\n 12799: a2 = u64 [s1 + 0xc0]\n 12803: a1 = a1 | a2\n 12806: u64 [s1 + 0x118] = a1\n 12810: a3 = u64 [s1 + 0x130]\n 12814: a3 = a3 << 0x10\n 12817: a4 = u64 [s1 + 0x128]\n 12821: a4 = a4 << 0x18\n 12824: a3 = a3 | a4\n 12827: u64 [s1 + 0x130] = a3\n 12831: a4 = u64 [s1 + 0x138]\n 12835: a4 = a4 << 0x8\n 12838: a1 = u64 [s1 + 0xd0]\n 12842: a1 = a1 | a4\n 12845: u64 [s1 + 0x138] = a1\n 12849: t1 = u64 [s1 + 0x148]\n 12853: t1 = t1 << 0x10\n 12856: t2 = u64 [s1 + 0x140]\n 12860: t2 = t2 << 0x18\n 12863: t1 = t2 | t1\n 12866: a0 = a0 | ra\n 12869: u64 [s1 + 0x148] = a0\n 12873: a5 = u64 [s1 + 0x150]\n 12877: a5 = a5 << 0x8\n 12880: a3 = u64 [s1 + 0x100]\n 12884: a3 = a3 | a5\n 12887: u64 [s1 + 0x150] = a3\n 12891: a5 = u64 [s1 + 0x160]\n 12895: a5 = a5 << 0x10\n 12898: ra = u64 [s1 + 0x158]\n 12902: ra = ra << 0x18\n 12905: ra = ra | a5\n 12908: a0 = u64 [s1 + 0xe0]\n 12912: a0 = t0 | a0\n 12915: u64 [s1 + 0x160] = a0\n 12919: a1 = u64 [s1 + 0x170]\n 12923: a1 = a1 << 0x8\n 12926: a0 = u64 [s1 + 0x120]\n 12930: a1 = a1 | a0\n 12933: a5 = u64 [s1 + 0x180]\n 12937: a5 = a5 << 0x10\n 12940: a2 = u64 [s1 + 0x178]\n 12944: a2 = a2 << 0x18\n 12947: a2 = a2 | a5\n 12950: a0 = u64 [s1 + 0xf8]\n 12954: a5 = u64 [s1 + 0x110]\n 12958: a5 = a5 | a0\n 12961: t2 = u64 [s1 + 0x190]\n 12965: t2 = t2 << 0x8\n 12968: a0 = u64 [s1 + 0x188]\n 12972: t2 = t2 | a0\n 12975: a0 = u64 [s1 + 0x1a0]\n 12979: a0 = a0 << 0x10\n 12982: a4 = u64 [s1 + 0x198]\n 12986: a4 = a4 << 0x18\n 12989: a0 = a0 | a4\n 12992: a4 = u64 [s1 + 0x118]\n 12996: t0 = u64 [s1 + 0x130]\n 13000: a4 = t0 | a4\n 13003: a3 = u64 [s1 + 0x138]\n 13007: t1 = t1 | a3\n 13010: a3 = u64 [s1 + 0x150]\n 13014: a3 = ra | a3\n 13017: a1 = a1 | a2\n 13020: a0 = a0 | t2\n 13023: a2 = u64 [s1 + 0x148]\n 13027: a2 = a2 << 0x20\n 13030: a2 = a2 | t1\n 13033: t0 = u64 [s1 + 0x160]\n 13037: t0 = t0 << 0x20\n 13040: a3 = t0 | a3\n 13043: a5 = a5 << 0x20\n 13046: a5 = a5 | a1\n 13049: a4 = a4 << 0x20\n 13052: a0 = a0 | a4\n 13055: a1 = u64 [s1 + 0x230]\n 13059: u64 [s1 + 0x188] = a0\n 13063: u64 [a1] = a0\n 13065: u64 [s1 + 0x180] = a5\n 13069: u64 [a1 + 0x8] = a5\n 13072: u64 [s1 + 0x190] = a3\n 13076: u64 [a1 + 0x10] = a3\n 13079: u64 [s1 + 0x198] = a2\n 13083: u64 [a1 + 0x18] = a2\n 13086: a1 = u64 [s1 + 0x228]\n 13090: jump @352 if a1 >u 63\n      : @351 (gas: 3)\n 13094: a1 = u64 [s1 + 0x238]\n 13098: u32 [a1 + 0] = 0x40\n 13101: fallthrough\n      : @352 (gas: 33)\n 13102: a1 = u64 [s1 + 0x230]\n 13106: u64 [a1 + 48] = 0\n 13109: u64 [a1 + 40] = 0\n 13112: u64 [a1 + 32] = 0\n 13115: a0 = 0x500000000000000\n 13125: u64 [a1 + 0x38] = a0\n 13128: a0 = sp + 0xffffffffffffffe0\n 13131: a0 = a0 & 0xffffffffffffffe0\n 13134: u64 [s1 + 0x228] = a0\n 13138: sp = a0\n 13140: i32 a2 = a0 + 0\n 13142: a1 = 0x40\n 13145: a0 = u64 [s1 + 0x1a8]\n 13149: ecalli 7 // 'hash_keccak_256'\n 13151: a3 = u64 [s1 + 0x228]\n 13155: a0 = u64 [a3 + 0x18]\n 13158: a1 = u64 [a3 + 0x10]\n 13161: a2 = u64 [a3 + 0x8]\n 13164: a3 = u64 [a3]\n 13166: a0 = reverse a0\n 13168: a1 = reverse a1\n 13170: a2 = reverse a2\n 13172: a3 = reverse a3\n 13174: a4 = s1 + 0x7ff\n 13178: a4 = a4 + 0x1b9\n 13182: u64 [a4 + 0x40] = a3\n 13185: u64 [a4 + 0x38] = a2\n 13188: u64 [a4 + 0x30] = a1\n 13191: u64 [a4 + 0x28] = a0\n 13194: a0 = s1 + 0x560\n 13198: a1 = s1 + 0x7ff\n 13202: a1 = a1 + 0x1e1\n 13206: ra = 30, jump @0\n      : @353 [@dyn 15] (gas: 2)\n 13211: a0 = u8 [s1 + 0x560]\n 13215: jump @355 if a0 == 0\n      : @354 (gas: 1)\n 13218: jump @779\n      : @355 (gas: 3)\n 13221: a0 = u64 [s1 + 0x238]\n 13225: t1 = i32 [a0]\n 13227: jump @357 if t1 >u 95\n      : @356 (gas: 4)\n 13231: t1 = 0x60\n 13234: a0 = u64 [s1 + 0x238]\n 13238: u32 [a0] = t1\n 13240: fallthrough\n      : @357 (gas: 17)\n 13241: a1 = u64 [s1 + 0x230]\n 13245: a0 = u64 [a1 + 0x48]\n 13248: a2 = u64 [a1 + 0x58]\n 13251: a3 = u64 [a1 + 0x40]\n 13254: a1 = u64 [a1 + 0x50]\n 13257: a4 = reverse a0\n 13259: a0 = reverse a2\n 13261: a5 = reverse a3\n 13263: a2 = reverse a1\n 13265: a1 = a2 | a5\n 13268: a3 = a0 | a4\n 13271: a3 = a3 | a1\n 13274: a3 = a3 >> 0x20\n 13277: a1 = a1 | a4\n 13280: a1 = a1 << 0x20\n 13283: a1 = a1 | a3\n 13286: jump @359 if a1 == 0\n      : @358 (gas: 1)\n 13289: jump @660\n      : @359 (gas: 2)\n 13292: i32 a1 = a0 >> 0x10\n 13295: jump @361 if a1 == 0\n      : @360 (gas: 1)\n 13298: jump @660\n      : @361 (gas: 4)\n 13301: a1 = a0 + 0x3f\n 13304: a3 = u64 [s1 + 0x1f0]\n 13308: a3 = a3 & a1\n 13311: jump @363 if a3 <=u 65536\n      : @362 (gas: 1)\n 13317: jump @660\n      : @363 (gas: 1)\n 13320: jump @365 if t1 >=u a3\n      : @364 (gas: 4)\n 13323: a1 = u64 [s1 + 0x238]\n 13327: u32 [a1] = a3\n 13329: t1 = a3\n 13331: fallthrough\n      : @365 (gas: 41)\n 13332: i32 t0 = a0 + 0\n 13334: a3 = u64 [s1 + 0x230]\n 13338: a3 = a3 + t0\n 13341: u8 [a3 + 31] = 0\n 13344: u8 [a3 + 30] = 0\n 13347: u8 [a3 + 29] = 0\n 13350: u8 [a3 + 28] = 0\n 13353: u8 [a3 + 27] = 0\n 13356: u8 [a3 + 26] = 0\n 13359: u8 [a3 + 25] = 0\n 13362: u8 [a3 + 24] = 0\n 13365: u8 [a3 + 23] = 0\n 13368: u8 [a3 + 22] = 0\n 13371: u8 [a3 + 21] = 0\n 13374: u8 [a3 + 20] = 0\n 13377: u8 [a3 + 19] = 0\n 13380: u8 [a3 + 18] = 0\n 13383: u8 [a3 + 17] = 0\n 13386: u8 [a3 + 16] = 0\n 13389: u8 [a3 + 15] = 0\n 13392: u8 [a3 + 14] = 0\n 13395: u8 [a3 + 13] = 0\n 13398: u8 [a3 + 12] = 0\n 13401: u8 [a3 + 11] = 0\n 13404: u8 [a3 + 10] = 0\n 13407: u8 [a3 + 9] = 0\n 13410: u8 [a3 + 8] = 0\n 13413: u8 [a3 + 7] = 0\n 13416: u8 [a3 + 6] = 0\n 13419: u8 [a3 + 5] = 0\n 13422: u8 [a3 + 4] = 0\n 13425: u8 [a3 + 3] = 0xa0\n 13430: u8 [a3 + 2] = 0x79\n 13434: u8 [a3 + 1] = 0xc3\n 13439: a4 = a4 | a5\n 13442: a5 = 0xfffffffc\n 13452: a5 = a0 <u a5\n 13455: a5 = 0 if a2 != 0\n 13457: a5 = 0 if a4 != 0\n 13459: u8 [a3 + 0] = 0x8\n 13462: jump @367 if a5 != 0\n      : @366 (gas: 1)\n 13465: jump @660\n      : @367 (gas: 1)\n 13468: jump @369 if t0 <u 65532\n      : @368 (gas: 1)\n 13474: jump @660\n      : @369 (gas: 4)\n 13477: a1 = a0 + 0x43\n 13480: a3 = u64 [s1 + 0x1f0]\n 13484: a3 = a3 & a1\n 13487: jump @371 if a3 <=u 65536\n      : @370 (gas: 1)\n 13493: jump @660\n      : @371 (gas: 2)\n 13496: i32 a5 = a0 + 0x4\n 13499: jump @373 if t1 >=u a3\n      : @372 (gas: 4)\n 13502: a1 = u64 [s1 + 0x238]\n 13506: u32 [a1] = a3\n 13508: t1 = a3\n 13510: fallthrough\n      : @373 (gas: 39)\n 13511: a3 = u64 [s1 + 0x230]\n 13515: a3 = a3 + a5\n 13518: u8 [a3 + 31] = 0x20\n 13522: u8 [a3 + 30] = 0\n 13525: u8 [a3 + 29] = 0\n 13528: u8 [a3 + 28] = 0\n 13531: u8 [a3 + 27] = 0\n 13534: u8 [a3 + 26] = 0\n 13537: u8 [a3 + 25] = 0\n 13540: u8 [a3 + 24] = 0\n 13543: u8 [a3 + 23] = 0\n 13546: u8 [a3 + 22] = 0\n 13549: u8 [a3 + 21] = 0\n 13552: u8 [a3 + 20] = 0\n 13555: u8 [a3 + 19] = 0\n 13558: u8 [a3 + 18] = 0\n 13561: u8 [a3 + 17] = 0\n 13564: u8 [a3 + 16] = 0\n 13567: u8 [a3 + 15] = 0\n 13570: u8 [a3 + 14] = 0\n 13573: u8 [a3 + 13] = 0\n 13576: u8 [a3 + 12] = 0\n 13579: u8 [a3 + 11] = 0\n 13582: u8 [a3 + 10] = 0\n 13585: u8 [a3 + 9] = 0\n 13588: u8 [a3 + 8] = 0\n 13591: u8 [a3 + 7] = 0\n 13594: u8 [a3 + 6] = 0\n 13597: u8 [a3 + 5] = 0\n 13600: u8 [a3 + 4] = 0\n 13603: u8 [a3 + 3] = 0\n 13606: u8 [a3 + 2] = 0\n 13609: u8 [a3 + 1] = 0\n 13612: a1 = 0xffffffdc\n 13622: a1 = a0 <u a1\n 13625: a1 = 0 if a2 != 0\n 13627: a1 = 0 if a4 != 0\n 13629: u8 [a3 + 0] = 0\n 13631: jump @375 if a1 != 0\n      : @374 (gas: 1)\n 13634: jump @660\n      : @375 (gas: 1)\n 13637: jump @377 if t0 <u 65500\n      : @376 (gas: 1)\n 13643: jump @660\n      : @377 (gas: 4)\n 13646: a1 = a0 + 0x63\n 13649: a3 = u64 [s1 + 0x1f0]\n 13653: a3 = a3 & a1\n 13656: jump @379 if a3 <=u 65536\n      : @378 (gas: 1)\n 13662: jump @660\n      : @379 (gas: 2)\n 13665: i32 a5 = a0 + 0x24\n 13668: jump @381 if t1 >=u a3\n      : @380 (gas: 4)\n 13671: a1 = u64 [s1 + 0x238]\n 13675: u32 [a1] = a3\n 13677: t1 = a3\n 13679: fallthrough\n      : @381 (gas: 39)\n 13680: a3 = u64 [s1 + 0x230]\n 13684: a3 = a3 + a5\n 13687: u8 [a3 + 31] = 0x8\n 13691: u8 [a3 + 30] = 0\n 13694: u8 [a3 + 29] = 0\n 13697: u8 [a3 + 28] = 0\n 13700: u8 [a3 + 27] = 0\n 13703: u8 [a3 + 26] = 0\n 13706: u8 [a3 + 25] = 0\n 13709: u8 [a3 + 24] = 0\n 13712: u8 [a3 + 23] = 0\n 13715: u8 [a3 + 22] = 0\n 13718: u8 [a3 + 21] = 0\n 13721: u8 [a3 + 20] = 0\n 13724: u8 [a3 + 19] = 0\n 13727: u8 [a3 + 18] = 0\n 13730: u8 [a3 + 17] = 0\n 13733: u8 [a3 + 16] = 0\n 13736: u8 [a3 + 15] = 0\n 13739: u8 [a3 + 14] = 0\n 13742: u8 [a3 + 13] = 0\n 13745: u8 [a3 + 12] = 0\n 13748: u8 [a3 + 11] = 0\n 13751: u8 [a3 + 10] = 0\n 13754: u8 [a3 + 9] = 0\n 13757: u8 [a3 + 8] = 0\n 13760: u8 [a3 + 7] = 0\n 13763: u8 [a3 + 6] = 0\n 13766: u8 [a3 + 5] = 0\n 13769: u8 [a3 + 4] = 0\n 13772: u8 [a3 + 3] = 0\n 13775: u8 [a3 + 2] = 0\n 13778: u8 [a3 + 1] = 0\n 13781: a1 = 0xffffffbc\n 13791: a1 = a0 <u a1\n 13794: a1 = 0 if a2 != 0\n 13796: a1 = 0 if a4 != 0\n 13798: u8 [a3 + 0] = 0\n 13800: jump @383 if a1 != 0\n      : @382 (gas: 1)\n 13803: jump @660\n      : @383 (gas: 1)\n 13806: jump @385 if t0 <u 65468\n      : @384 (gas: 1)\n 13812: jump @660\n      : @385 (gas: 4)\n 13815: a1 = a0 + 0x83\n 13819: a2 = u64 [s1 + 0x1f0]\n 13823: a2 = a2 & a1\n 13826: jump @387 if a2 <=u 65536\n      : @386 (gas: 1)\n 13832: jump @660\n      : @387 (gas: 1)\n 13835: jump @389 if t1 >=u a2\n      : @388 (gas: 3)\n 13838: a1 = u64 [s1 + 0x238]\n 13842: u32 [a1] = a2\n 13844: fallthrough\n      : @389 (gas: 39)\n 13845: i32 a1 = a0 + 0x44\n 13848: a2 = u64 [s1 + 0x230]\n 13852: a1 = a1 + a2\n 13855: u8 [a1 + 31] = 0\n 13858: u8 [a1 + 30] = 0\n 13861: u8 [a1 + 29] = 0\n 13864: u8 [a1 + 28] = 0\n 13867: u8 [a1 + 27] = 0\n 13870: u8 [a1 + 26] = 0\n 13873: u8 [a1 + 25] = 0\n 13876: u8 [a1 + 24] = 0\n 13879: u8 [a1 + 23] = 0\n 13882: u8 [a1 + 22] = 0\n 13885: u8 [a1 + 21] = 0\n 13888: u8 [a1 + 20] = 0\n 13891: u8 [a1 + 19] = 0\n 13894: u8 [a1 + 18] = 0\n 13897: u8 [a1 + 17] = 0\n 13900: u8 [a1 + 16] = 0\n 13903: u8 [a1 + 15] = 0\n 13906: u8 [a1 + 14] = 0\n 13909: u8 [a1 + 13] = 0\n 13912: u8 [a1 + 12] = 0\n 13915: u8 [a1 + 11] = 0\n 13918: u8 [a1 + 10] = 0\n 13921: u8 [a1 + 9] = 0\n 13924: u8 [a1 + 8] = 0\n 13927: u8 [a1 + 7] = 0x74\n 13931: u8 [a1 + 6] = 0x6f\n 13935: u8 [a1 + 5] = 0x6f\n 13939: u8 [a1 + 4] = 0x72\n 13943: a4 = 0x2d\n 13946: u8 [a1 + 0x3] = a4\n 13949: u8 [a1 + 2] = 0x74\n 13953: u8 [a1 + 1] = 0x6f\n 13957: u8 [a1 + 0] = 0x6e\n 13960: a1 = 0x64\n 13963: ra = 0x58\n 13966: jump @8\n      : @390 (gas: 1)\n 13969: jump @392 if a0 == 1238272407\n      : @391 (gas: 1)\n 13976: jump @732\n      : @392 (gas: 7)\n 13979: u64 [s1 + 1816] = 0\n 13983: u64 [s1 + 1808] = 0\n 13987: u64 [s1 + 1800] = 0\n 13991: u64 [s1 + 1792] = 0\n 13995: i32 a0 = s1 + 0x700\n 13999: ecalli 14 // 'value_transferred'\n 14001: fallthrough\n      : @393 (gas: 8)\n 14002: a0 = u64 [s1 + 0x710]\n 14006: a1 = u64 [s1 + 0x718]\n 14010: a2 = u64 [s1 + 0x708]\n 14014: a3 = u64 [s1 + 0x700]\n 14018: a1 = a1 | a2\n 14021: a0 = a0 | a3\n 14024: a0 = a0 | a1\n 14027: jump @395 if a0 == 0\n      : @394 (gas: 1)\n 14030: jump @732\n      : @395 (gas: 3)\n 14033: a0 = u64 [s1 + 0x228]\n 14037: a0 = i32 [a0]\n 14039: jump @397 if a0 >u 35\n      : @396 (gas: 1)\n 14043: jump @732\n      : @397 (gas: 4)\n 14046: i32 a0 = s1 + 0x720\n 14050: a1 = 0x4\n 14053: ecalli 2 // 'call_data_load'\n 14055: fallthrough\n      : @398 (gas: 16)\n 14056: a0 = u64 [s1 + 0x720]\n 14060: a1 = u64 [s1 + 0x738]\n 14064: a2 = u64 [s1 + 0x730]\n 14068: a3 = u64 [s1 + 0x728]\n 14072: a4 = u64 [s1 + 0x238]\n 14076: t0 = i32 [a4]\n 14078: a1 = reverse a1\n 14080: a2 = reverse a2\n 14082: a3 = reverse a3\n 14084: a0 = reverse a0\n 14086: a5 = u64 [s1 + 0x230]\n 14090: u64 [a5 + 0x18] = a0\n 14093: u64 [a5 + 0x10] = a3\n 14096: u64 [a5 + 0x8] = a2\n 14099: u64 [a5] = a1\n 14101: jump @400 if t0 >u 63\n      : @399 (gas: 2)\n 14105: u32 [a4 + 0] = 0x40\n 14108: fallthrough\n      : @400 (gas: 39)\n 14109: u64 [a5 + 48] = 0\n 14112: u64 [a5 + 40] = 0\n 14115: u64 [a5 + 32] = 0\n 14118: a0 = 0x800000000000000\n 14128: u64 [a5 + 0x38] = a0\n 14131: a0 = sp + 0xffffffffffffffe0\n 14134: a2 = a0 & 0xffffffffffffffe0\n 14137: u64 [s1 + 0x228] = a2\n 14141: sp = a2\n 14143: i32 a0 = a5 + 0\n 14145: i32 a2 = a2 + 0\n 14147: a1 = 0x40\n 14150: ecalli 7 // 'hash_keccak_256'\n 14152: a3 = u64 [s1 + 0x228]\n 14156: a0 = u64 [a3 + 0x18]\n 14159: a1 = u64 [a3 + 0x10]\n 14162: a2 = u64 [a3 + 0x8]\n 14165: a3 = u64 [a3]\n 14167: a4 = s1 + 0x7ff\n 14171: a4 = a4 + 0x1b9\n 14175: u64 [a4 + 0x1c0] = a0\n 14179: u64 [a4 + 0x1b8] = a1\n 14183: u64 [a4 + 0x1b0] = a2\n 14187: u64 [a4 + 0x1a8] = a3\n 14191: u64 [a4 + 480] = 0\n 14195: u64 [a4 + 472] = 0\n 14199: u64 [a4 + 464] = 0\n 14203: u64 [a4 + 456] = 0\n 14207: u32 [a4 + 488] = 0x20\n 14212: a0 = s1 + 0x1000\n 14216: i32 a1 = a0 + 0xfffffffffffffb60\n 14220: a0 = s1 + 0x1000\n 14224: i32 a3 = a0 + 0xfffffffffffffb80\n 14228: a0 = s1 + 0x1000\n 14232: i32 a4 = a0 + 0xfffffffffffffba0\n 14236: a2 = 0xffffffffffffffff\n 14239: a0 = 0\n 14241: ecalli 6 // 'get_storage'\n 14243: fallthrough\n      : @401 (gas: 3)\n 14244: a2 = u64 [s1 + 0x238]\n 14248: a1 = i32 [a2]\n 14250: jump @403 if a1 >u 95\n      : @402 (gas: 3)\n 14254: a1 = 0x60\n 14257: u32 [a2] = a1\n 14259: fallthrough\n      : @403 (gas: 17)\n 14260: a4 = u64 [s1 + 0x230]\n 14264: a0 = u64 [a4 + 0x48]\n 14267: a2 = u64 [a4 + 0x58]\n 14270: a3 = u64 [a4 + 0x40]\n 14273: a4 = u64 [a4 + 0x50]\n 14276: a5 = reverse a0\n 14278: a0 = reverse a2\n 14280: a2 = reverse a3\n 14282: a3 = reverse a4\n 14284: a2 = a2 | a3\n 14287: a3 = a0 | a5\n 14290: a3 = a3 | a2\n 14293: a3 = a3 >> 0x20\n 14296: a2 = a2 | a5\n 14299: a2 = a2 << 0x20\n 14302: a2 = a2 | a3\n 14305: jump @587 if a2 == 0\n      : @404 (gas: 1)\n 14309: jump @660\n      : @405 (gas: 1)\n 14312: jump @407 if a0 == 3065339685\n      : @406 (gas: 1)\n 14319: jump @732\n      : @407 (gas: 3)\n 14322: a0 = u64 [s1 + 0x228]\n 14326: a0 = i32 [a0]\n 14328: jump @409 if a0 >u 35\n      : @408 (gas: 1)\n 14332: jump @732\n      : @409 (gas: 12)\n 14335: i32 a0 = s1 + 0x760\n 14339: a1 = 0x4\n 14342: ecalli 2 // 'call_data_load'\n 14344: a0 = u64 [s1 + 0x778]\n 14348: u64 [s1 + 0x1f8] = a0\n 14352: a0 = u64 [s1 + 0x770]\n 14356: u64 [s1 + 0x200] = a0\n 14360: a0 = u64 [s1 + 0x768]\n 14364: u64 [s1 + 0x208] = a0\n 14368: a0 = u64 [s1 + 0x760]\n 14372: u64 [s1 + 0x218] = a0\n 14376: ra = 32, jump @1131\n      : @410 [@dyn 16] (gas: 42)\n 14381: a0 = 0x300000000000000\n 14391: a1 = s1 + 0x7ff\n 14395: a1 = a1 + 0x1b9\n 14399: u64 [a1 + 0x1c0] = a0\n 14403: u64 [a1 + 440] = 0\n 14407: u64 [a1 + 432] = 0\n 14411: u64 [a1 + 424] = 0\n 14415: u64 [a1 + 480] = 0\n 14419: u64 [a1 + 472] = 0\n 14423: u64 [a1 + 464] = 0\n 14427: u64 [a1 + 456] = 0\n 14431: u32 [a1 + 488] = 0x20\n 14436: a0 = s1 + 0x1000\n 14440: i32 a1 = a0 + 0xfffffffffffffb60\n 14444: a0 = s1 + 0x1000\n 14448: i32 a3 = a0 + 0xfffffffffffffb80\n 14452: a0 = s1 + 0x1000\n 14456: i32 a4 = a0 + 0xfffffffffffffba0\n 14460: a2 = 0xffffffffffffffff\n 14463: a0 = 0\n 14465: ecalli 6 // 'get_storage'\n 14467: a3 = s1 + 0x7ff\n 14471: a3 = a3 + 0x1b9\n 14475: a0 = u64 [a3 + 0x1e0]\n 14479: a1 = u64 [a3 + 0x1d0]\n 14483: a2 = u64 [a3 + 0x1d8]\n 14487: a3 = u64 [a3 + 0x1c8]\n 14491: a0 = reverse a0\n 14493: u64 [s1 + 0x220] = a0\n 14497: a0 = reverse a1\n 14499: u64 [s1 + 0x210] = a0\n 14503: a0 = reverse a2\n 14505: u64 [s1 + 0x1f0] = a0\n 14509: a0 = reverse a3\n 14511: u64 [s1 + 0x1e8] = a0\n 14515: u64 [s1 + 1944] = 0\n 14519: u64 [s1 + 1936] = 0\n 14523: u64 [s1 + 1928] = 0\n 14527: u64 [s1 + 1920] = 0\n 14531: i32 a0 = s1 + 0x780\n 14535: ecalli 14 // 'value_transferred'\n 14537: fallthrough\n      : @411 (gas: 18)\n 14538: a0 = u64 [s1 + 0x798]\n 14542: a1 = u64 [s1 + 0x788]\n 14546: a2 = u64 [s1 + 0x780]\n 14550: a3 = u64 [s1 + 0x790]\n 14554: a4 = u64 [s1 + 0x1e8]\n 14558: a0 = a0 ^ a4\n 14561: a4 = u64 [s1 + 0x1f0]\n 14565: a1 = a1 ^ a4\n 14568: a0 = a0 | a1\n 14571: a1 = u64 [s1 + 0x210]\n 14575: a3 = a3 ^ a1\n 14578: a1 = u64 [s1 + 0x220]\n 14582: a2 = a2 ^ a1\n 14585: a4 = u64 [s1 + 0x238]\n 14589: t2 = i32 [a4]\n 14591: a2 = a2 | a3\n 14594: a0 = a0 | a2\n 14597: jump @413 if a0 == 0\n      : @412 (gas: 1)\n 14600: jump @593\n      : @413 (gas: 18)\n 14603: a0 = u64 [s1 + 0x1f8]\n 14607: a2 = reverse a0\n 14609: a0 = u64 [s1 + 0x200]\n 14613: a0 = reverse a0\n 14615: a1 = u64 [s1 + 0x208]\n 14619: a3 = reverse a1\n 14621: a1 = u64 [s1 + 0x218]\n 14625: a5 = reverse a1\n 14627: a1 = u64 [s1 + 0x230]\n 14631: u64 [s1 + 0x110] = a5\n 14635: u64 [a1 + 0x18] = a5\n 14638: u64 [s1 + 0x118] = a3\n 14642: u64 [a1 + 0x10] = a3\n 14645: u64 [s1 + 0x120] = a0\n 14649: u64 [a1 + 0x8] = a0\n 14652: u64 [s1 + 0x128] = a2\n 14656: u64 [a1] = a2\n 14658: jump @415 if t2 >u 63\n      : @414 (gas: 2)\n 14662: u32 [a4 + 0] = 0x40\n 14665: fallthrough\n      : @415 (gas: 40)\n 14666: u64 [a1 + 48] = 0\n 14669: u64 [a1 + 40] = 0\n 14672: u64 [a1 + 32] = 0\n 14675: a0 = 0x800000000000000\n 14685: u64 [a1 + 0x38] = a0\n 14688: a0 = sp + 0xffffffffffffffe0\n 14691: a2 = a0 & 0xffffffffffffffe0\n 14694: u64 [s1 + 0x220] = a2\n 14698: sp = a2\n 14700: i32 a0 = a1 + 0\n 14702: i32 a2 = a2 + 0\n 14704: a1 = 0x40\n 14707: u64 [s1 + 0x1c8] = a0\n 14711: ecalli 7 // 'hash_keccak_256'\n 14713: a3 = u64 [s1 + 0x220]\n 14717: a0 = u64 [a3 + 0x18]\n 14720: a1 = u64 [a3 + 0x10]\n 14723: a2 = u64 [a3 + 0x8]\n 14726: a3 = u64 [a3]\n 14728: a4 = s1 + 0x7ff\n 14732: a4 = a4 + 0x1b9\n 14736: u64 [a4 + 0x1c0] = a0\n 14740: u64 [a4 + 0x1b8] = a1\n 14744: u64 [a4 + 0x1b0] = a2\n 14748: u64 [a4 + 0x1a8] = a3\n 14752: u64 [a4 + 480] = 0\n 14756: u64 [a4 + 472] = 0\n 14760: u64 [a4 + 464] = 0\n 14764: u64 [a4 + 456] = 0\n 14768: u32 [a4 + 488] = 0x20\n 14773: a0 = s1 + 0x1000\n 14777: i32 a1 = a0 + 0xfffffffffffffb60\n 14781: a0 = s1 + 0x1000\n 14785: i32 a3 = a0 + 0xfffffffffffffb80\n 14789: a0 = s1 + 0x1000\n 14793: i32 a4 = a0 + 0xfffffffffffffba0\n 14797: a2 = 0xffffffffffffffff\n 14800: a0 = 0\n 14802: ecalli 6 // 'get_storage'\n 14804: fallthrough\n      : @416 (gas: 11)\n 14805: a3 = s1 + 0x7ff\n 14809: a3 = a3 + 0x1b9\n 14813: a0 = u64 [a3 + 0x1e0]\n 14817: a1 = u64 [a3 + 0x1d8]\n 14821: a2 = 0x100000000000000\n 14831: a2 = a2 ^ a0\n 14834: a1 = a1 | a2\n 14837: a0 = a0 >> 0x38\n 14840: a0 = a0 <u 0x1\n 14843: a0 = 0 if a1 == 0\n 14845: jump @418 if a0 != 0\n      : @417 (gas: 1)\n 14848: jump @616\n      : @418 (gas: 53)\n 14851: a0 = 0x400000000000000\n 14861: u64 [a3 + 0x1c0] = a0\n 14865: u64 [a3 + 440] = 0\n 14869: u64 [a3 + 432] = 0\n 14873: u64 [a3 + 424] = 0\n 14877: u64 [a3 + 480] = 0\n 14881: u64 [a3 + 472] = 0\n 14885: u64 [a3 + 464] = 0\n 14889: u64 [a3 + 456] = 0\n 14893: u32 [a3 + 488] = 0x20\n 14898: a0 = s1 + 0x1000\n 14902: i32 a1 = a0 + 0xfffffffffffffb60\n 14906: a0 = s1 + 0x1000\n 14910: i32 a3 = a0 + 0xfffffffffffffb80\n 14914: a0 = s1 + 0x1000\n 14918: i32 a4 = a0 + 0xfffffffffffffba0\n 14922: a2 = 0xffffffffffffffff\n 14925: a0 = 0\n 14927: ecalli 6 // 'get_storage'\n 14929: a4 = s1 + 0x7ff\n 14933: a4 = a4 + 0x1b9\n 14937: a0 = u64 [a4 + 0x1e0]\n 14941: a1 = u64 [a4 + 0x1d8]\n 14945: a2 = u64 [a4 + 0x1d0]\n 14949: a3 = u64 [a4 + 0x1c8]\n 14953: a0 = reverse a0\n 14955: u64 [s1 + 0x1f0] = a0\n 14959: a0 = reverse a1\n 14961: u64 [s1 + 0x1c0] = a0\n 14965: a0 = reverse a2\n 14967: u64 [s1 + 0x1b0] = a0\n 14971: a0 = reverse a3\n 14973: u64 [s1 + 0x1b8] = a0\n 14977: a0 = 0x200000000000000\n 14987: u64 [a4 + 0x1c0] = a0\n 14991: u64 [a4 + 440] = 0\n 14995: u64 [a4 + 432] = 0\n 14999: u64 [a4 + 424] = 0\n 15003: u64 [a4 + 480] = 0\n 15007: u64 [a4 + 472] = 0\n 15011: u64 [a4 + 464] = 0\n 15015: u64 [a4 + 456] = 0\n 15019: u32 [a4 + 488] = 0x20\n 15024: a0 = s1 + 0x1000\n 15028: i32 a1 = a0 + 0xfffffffffffffb60\n 15032: a0 = s1 + 0x1000\n 15036: i32 a3 = a0 + 0xfffffffffffffb80\n 15040: a0 = s1 + 0x1000\n 15044: i32 a4 = a0 + 0xfffffffffffffba0\n 15048: a2 = 0xffffffffffffffff\n 15051: a0 = 0\n 15053: ecalli 6 // 'get_storage'\n 15055: fallthrough\n      : @419 (gas: 212)\n 15056: a1 = s1 + 0x7ff\n 15060: a1 = a1 + 0x1b9\n 15064: a0 = u64 [a1 + 0x1d8]\n 15068: a1 = u64 [a1 + 0x1d0]\n 15072: a0 = a0 << 0x28\n 15075: a1 = a1 >> 0x18\n 15078: t0 = a1 | a0\n 15081: u8 [s1 + 991] = 0\n 15085: u8 [s1 + 990] = 0\n 15089: u8 [s1 + 989] = 0\n 15093: u8 [s1 + 988] = 0\n 15097: u8 [s1 + 987] = 0\n 15101: u8 [s1 + 986] = 0\n 15105: u8 [s1 + 985] = 0\n 15109: u8 [s1 + 984] = 0\n 15113: u8 [s1 + 983] = 0\n 15117: u8 [s1 + 982] = 0\n 15121: u8 [s1 + 981] = 0\n 15125: u8 [s1 + 980] = 0\n 15129: u8 [s1 + 979] = 0\n 15133: u8 [s1 + 978] = 0\n 15137: u8 [s1 + 977] = 0\n 15141: u8 [s1 + 976] = 0\n 15145: u8 [s1 + 975] = 0\n 15149: u8 [s1 + 974] = 0\n 15153: u8 [s1 + 973] = 0\n 15157: u8 [s1 + 972] = 0\n 15161: u8 [s1 + 971] = 0\n 15165: u8 [s1 + 970] = 0\n 15169: u8 [s1 + 969] = 0\n 15173: u8 [s1 + 968] = 0\n 15177: u8 [s1 + 967] = 0\n 15181: u8 [s1 + 966] = 0\n 15185: u8 [s1 + 965] = 0\n 15189: u8 [s1 + 964] = 0\n 15193: u8 [s1 + 963] = 0\n 15197: u8 [s1 + 962] = 0\n 15201: u8 [s1 + 961] = 0\n 15205: u8 [s1 + 960] = 0\n 15209: a4 = u64 [s1 + 0x1b8]\n 15213: u8 [s1 + 0x3b8] = a4\n 15217: a3 = u64 [s1 + 0x1b0]\n 15221: u8 [s1 + 0x3b0] = a3\n 15225: a2 = u64 [s1 + 0x1c0]\n 15229: u8 [s1 + 0x3a8] = a2\n 15233: a0 = u64 [s1 + 0x1f0]\n 15237: u8 [s1 + 0x3a0] = a0\n 15241: a1 = a4 >> 0x38\n 15244: u8 [s1 + 0x3bf] = a1\n 15248: a1 = a4 >> 0x30\n 15251: u8 [s1 + 0x3be] = a1\n 15255: a1 = a4 >> 0x28\n 15258: u8 [s1 + 0x3bd] = a1\n 15262: a1 = a4 >> 0x20\n 15265: u8 [s1 + 0x3bc] = a1\n 15269: a1 = a4 >> 0x18\n 15272: u8 [s1 + 0x3bb] = a1\n 15276: a1 = a4 >> 0x10\n 15279: u8 [s1 + 0x3ba] = a1\n 15283: a1 = a4 >> 0x8\n 15286: u8 [s1 + 0x3b9] = a1\n 15290: a1 = a3 >> 0x38\n 15293: u8 [s1 + 0x3b7] = a1\n 15297: a1 = a3 >> 0x30\n 15300: u8 [s1 + 0x3b6] = a1\n 15304: a1 = a3 >> 0x28\n 15307: u8 [s1 + 0x3b5] = a1\n 15311: a1 = a3 >> 0x20\n 15314: u8 [s1 + 0x3b4] = a1\n 15318: a1 = a3 >> 0x18\n 15321: u8 [s1 + 0x3b3] = a1\n 15325: a1 = a3 >> 0x10\n 15328: u8 [s1 + 0x3b2] = a1\n 15332: a1 = a3 >> 0x8\n 15335: u8 [s1 + 0x3b1] = a1\n 15339: a1 = a2 >> 0x38\n 15342: u8 [s1 + 0x3af] = a1\n 15346: a1 = a2 >> 0x30\n 15349: u8 [s1 + 0x3ae] = a1\n 15353: a1 = a2 >> 0x28\n 15356: u8 [s1 + 0x3ad] = a1\n 15360: a1 = a2 >> 0x20\n 15363: u8 [s1 + 0x3ac] = a1\n 15367: a1 = a2 >> 0x18\n 15370: u8 [s1 + 0x3ab] = a1\n 15374: a1 = a2 >> 0x10\n 15377: u8 [s1 + 0x3aa] = a1\n 15381: a1 = a2 >> 0x8\n 15384: u8 [s1 + 0x3a9] = a1\n 15388: a1 = a0 >> 0x38\n 15391: u8 [s1 + 0x3a7] = a1\n 15395: a1 = a0 >> 0x30\n 15398: u8 [s1 + 0x3a6] = a1\n 15402: a1 = a0 >> 0x28\n 15405: u8 [s1 + 0x3a5] = a1\n 15409: a1 = a0 >> 0x20\n 15412: u8 [s1 + 0x3a4] = a1\n 15416: a1 = a0 >> 0x18\n 15419: u8 [s1 + 0x3a3] = a1\n 15423: a1 = a0 >> 0x10\n 15426: u8 [s1 + 0x3a2] = a1\n 15430: a1 = a0 >> 0x8\n 15433: u8 [s1 + 0x3a1] = a1\n 15437: a1 = t0 << 0x38\n 15440: a1 = a1 >> 0x3b\n 15443: a2 = s1 + 0x3a0\n 15447: a1 = a1 + a2\n 15450: a2 = u8 [a1 + 0x11]\n 15453: a3 = u8 [a1 + 0x10]\n 15456: a4 = u8 [a1 + 0x12]\n 15459: a5 = u8 [a1 + 0x13]\n 15462: a2 = a2 << 0x8\n 15465: a2 = a2 | a3\n 15468: a4 = a4 << 0x10\n 15471: a5 = a5 << 0x18\n 15474: a4 = a4 | a5\n 15477: a2 = a2 | a4\n 15480: a3 = u8 [a1 + 0x15]\n 15483: a4 = u8 [a1 + 0x14]\n 15486: a5 = u8 [a1 + 0x16]\n 15489: a0 = u8 [a1 + 0x17]\n 15492: a3 = a3 << 0x8\n 15495: a3 = a3 | a4\n 15498: a5 = a5 << 0x10\n 15501: a0 = a0 << 0x18\n 15504: a0 = a0 | a5\n 15507: a0 = a0 | a3\n 15510: a0 = a0 << 0x20\n 15513: t1 = a0 | a2\n 15516: a0 = t1 << 0x1\n 15519: t2 = t0 & 0x7\n 15522: a4 = t2 ^ 0xffffffffffffffff\n 15525: a0 = a0 << a4\n 15528: u64 [s1 + 0x220] = a0\n 15532: a0 = u8 [a1 + 0x1]\n 15535: a4 = u8 [a1]\n 15537: a5 = u8 [a1 + 0x2]\n 15540: a3 = u8 [a1 + 0x3]\n 15543: a0 = a0 << 0x8\n 15546: a0 = a0 | a4\n 15549: a5 = a5 << 0x10\n 15552: a3 = a3 << 0x18\n 15555: a3 = a3 | a5\n 15558: a0 = a0 | a3\n 15561: a3 = u8 [a1 + 0x5]\n 15564: a4 = u8 [a1 + 0x4]\n 15567: a5 = u8 [a1 + 0x6]\n 15570: a2 = u8 [a1 + 0x7]\n 15573: a3 = a3 << 0x8\n 15576: a3 = a3 | a4\n 15579: a5 = a5 << 0x10\n 15582: a2 = a2 << 0x18\n 15585: a2 = a2 | a5\n 15588: a2 = a2 | a3\n 15591: a2 = a2 << 0x20\n 15594: ra = a2 | a0\n 15597: a0 = u8 [a1 + 0x19]\n 15600: a2 = u8 [a1 + 0x18]\n 15603: a3 = u8 [a1 + 0x1a]\n 15606: a5 = u8 [a1 + 0x1b]\n 15609: a0 = a0 << 0x8\n 15612: a0 = a0 | a2\n 15615: a3 = a3 << 0x10\n 15618: a5 = a5 << 0x18\n 15621: a3 = a3 | a5\n 15624: t0 = a3 | a0\n 15627: a0 = u8 [a1 + 0x9]\n 15630: a2 = u8 [a1 + 0x8]\n 15633: a3 = u8 [a1 + 0xa]\n 15636: a4 = u8 [a1 + 0xb]\n 15639: a0 = a0 << 0x8\n 15642: a0 = a0 | a2\n 15645: a3 = a3 << 0x10\n 15648: a4 = a4 << 0x18\n 15651: a3 = a3 | a4\n 15654: a5 = a3 | a0\n 15657: a2 = u8 [a1 + 0x1d]\n 15660: a3 = u8 [a1 + 0x1c]\n 15663: a4 = u8 [a1 + 0x1e]\n 15666: a0 = u8 [a1 + 0x1f]\n 15669: a2 = a2 << 0x8\n 15672: a2 = a2 | a3\n 15675: a4 = a4 << 0x10\n 15678: a0 = a0 << 0x18\n 15681: a0 = a0 | a4\n 15684: a0 = a0 | a2\n 15687: a2 = u8 [a1 + 0xd]\n 15690: a3 = u8 [a1 + 0xc]\n 15693: a4 = u8 [a1 + 0xe]\n 15696: a1 = u8 [a1 + 0xf]\n 15699: a2 = a2 << 0x8\n 15702: a2 = a2 | a3\n 15705: a4 = a4 << 0x10\n 15708: a1 = a1 << 0x18\n 15711: a1 = a1 | a4\n 15714: a1 = a1 | a2\n 15717: a2 = ra | t1\n 15720: a0 = a0 | a1\n 15723: a1 = a5 | t0\n 15726: a0 = a0 << 0x20\n 15729: a0 = a0 | a1\n 15732: a2 = a2 | a0\n 15735: a2 = a2 >> t2\n 15738: a1 = t2 ^ 0x3f\n 15741: a0 = a0 << 0x1\n 15744: a0 = a0 << a1\n 15747: a1 = u64 [s1 + 0x238]\n 15751: t2 = i32 [a1]\n 15753: a0 = a0 | a2\n 15756: a2 = u64 [s1 + 0x220]\n 15760: a0 = a0 | a2\n 15763: jump @421 if a0 == 0\n      : @420 (gas: 1)\n 15766: jump @639\n      : @421 (gas: 2)\n 15769: a3 = u64 [s1 + 0x230]\n 15773: jump @423 if t2 >u 95\n      : @422 (gas: 2)\n 15777: u32 [a1 + 0] = 0x60\n 15780: fallthrough\n      : @423 (gas: 23)\n 15781: a0 = u64 [a3 + 0x58]\n 15784: a1 = u64 [a3 + 0x50]\n 15787: a2 = u64 [a3 + 0x48]\n 15790: a3 = u64 [a3 + 0x40]\n 15793: a4 = reverse a0\n 15795: u64 [s1 + 0x138] = a4\n 15799: a5 = reverse a1\n 15801: u64 [s1 + 0x130] = a5\n 15805: a1 = reverse a2\n 15807: u64 [s1 + 0x140] = a1\n 15811: a2 = reverse a3\n 15813: u64 [s1 + 0x148] = a2\n 15817: u64 [s1 + 888] = 0\n 15821: u64 [s1 + 880] = 0\n 15825: u64 [s1 + 872] = 0\n 15829: u64 [s1 + 864] = 0x140\n 15835: u64 [s1 + 0x398] = a2\n 15839: u64 [s1 + 0x390] = a1\n 15843: u64 [s1 + 0x388] = a5\n 15847: a0 = s1 + 0x380\n 15851: a1 = s1 + 0x360\n 15855: u64 [s1 + 0x380] = a4\n 15859: ra = 34, jump @1071\n      : @424 [@dyn 17] (gas: 12)\n 15864: a4 = u64 [s1 + 0x138]\n 15868: a1 = u64 [s1 + 0x148]\n 15872: a0 = u64 [s1 + 0x130]\n 15876: a0 = a0 | a1\n 15879: a3 = u64 [s1 + 0x140]\n 15883: a1 = a4 | a3\n 15886: a1 = a1 | a0\n 15889: a1 = a1 >> 0x20\n 15892: a0 = a0 | a3\n 15895: a0 = a0 << 0x20\n 15898: a0 = a0 | a1\n 15901: jump @426 if a0 == 0\n      : @425 (gas: 1)\n 15904: jump @660\n      : @426 (gas: 2)\n 15907: i32 a0 = a4 >> 0x10\n 15910: jump @428 if a0 == 0\n      : @427 (gas: 1)\n 15913: jump @660\n      : @428 (gas: 4)\n 15916: a0 = a4 + 0x15f\n 15920: u64 [s1 + 544] = 0x1ffe0\n 15927: a0 = a0 & 0x1ffe0\n 15932: jump @430 if a0 <=u 65536\n      : @429 (gas: 1)\n 15938: jump @660\n      : @430 (gas: 5)\n 15941: a3 = u64 [s1 + 0x238]\n 15945: a1 = i32 [a3]\n 15947: a2 = u64 [s1 + 0x228]\n 15951: a2 = i32 [a2]\n 15953: jump @432 if a1 >=u a0\n      : @431 (gas: 2)\n 15956: u32 [a3] = a0\n 15958: fallthrough\n      : @432 (gas: 5)\n 15959: a0 = u64 [s1 + 0x230]\n 15963: i32 a0 = a0 + a4\n 15966: a1 = 0x140\n 15970: ecalli 1 // 'call_data_copy'\n 15972: fallthrough\n      : @433 (gas: 3)\n 15973: a2 = u64 [s1 + 0x238]\n 15977: a0 = i32 [a2]\n 15979: jump @435 if a0 >u 95\n      : @434 (gas: 2)\n 15983: u32 [a2 + 0] = 0x60\n 15986: fallthrough\n      : @435 (gas: 24)\n 15987: a3 = u64 [s1 + 0x230]\n 15991: a0 = u64 [a3 + 0x58]\n 15994: a1 = u64 [a3 + 0x50]\n 15997: a2 = u64 [a3 + 0x48]\n 16000: a3 = u64 [a3 + 0x40]\n 16003: a4 = reverse a0\n 16005: u64 [s1 + 0xf0] = a4\n 16009: a1 = reverse a1\n 16011: u64 [s1 + 0x108] = a1\n 16015: a2 = reverse a2\n 16017: u64 [s1 + 0x100] = a2\n 16021: a3 = reverse a3\n 16023: u64 [s1 + 0xf8] = a3\n 16027: u64 [s1 + 824] = 0\n 16031: u64 [s1 + 816] = 0\n 16035: u64 [s1 + 808] = 0\n 16039: u64 [s1 + 800] = 0x140\n 16045: u64 [s1 + 0x358] = a3\n 16049: u64 [s1 + 0x350] = a2\n 16053: u64 [s1 + 0x348] = a1\n 16057: a0 = s1 + 0x340\n 16061: a1 = s1 + 0x320\n 16065: u64 [s1 + 0x340] = a4\n 16069: ra = 36, jump @1071\n      : @436 [@dyn 18] (gas: 12)\n 16074: a4 = u64 [s1 + 0xf0]\n 16078: a2 = u64 [s1 + 0x100]\n 16082: a1 = u64 [s1 + 0xf8]\n 16086: a0 = u64 [s1 + 0x108]\n 16090: a0 = a0 | a1\n 16093: a1 = a4 | a2\n 16096: a1 = a1 | a0\n 16099: a1 = a1 >> 0x20\n 16102: a0 = a0 | a2\n 16105: a0 = a0 << 0x20\n 16108: a0 = a0 | a1\n 16111: jump @438 if a0 == 0\n      : @437 (gas: 1)\n 16114: jump @660\n      : @438 (gas: 2)\n 16117: i32 a0 = a4 >> 0x10\n 16120: jump @440 if a0 == 0\n      : @439 (gas: 1)\n 16123: jump @660\n      : @440 (gas: 4)\n 16126: a0 = a4 + 0x15f\n 16130: a1 = u64 [s1 + 0x220]\n 16134: a0 = a0 & a1\n 16137: jump @442 if a0 <=u 65536\n      : @441 (gas: 1)\n 16143: jump @660\n      : @442 (gas: 5)\n 16146: a3 = u64 [s1 + 0x238]\n 16150: a1 = i32 [a3]\n 16152: a2 = u64 [s1 + 0x228]\n 16156: a2 = i32 [a2]\n 16158: jump @444 if a1 >=u a0\n      : @443 (gas: 2)\n 16161: u32 [a3] = a0\n 16163: fallthrough\n      : @444 (gas: 5)\n 16164: a0 = u64 [s1 + 0x230]\n 16168: i32 a0 = a0 + a4\n 16171: a1 = 0x140\n 16175: ecalli 1 // 'call_data_copy'\n 16177: fallthrough\n      : @445 (gas: 3)\n 16178: a2 = u64 [s1 + 0x238]\n 16182: a0 = i32 [a2]\n 16184: jump @447 if a0 >u 95\n      : @446 (gas: 2)\n 16188: u32 [a2 + 0] = 0x60\n 16191: fallthrough\n      : @447 (gas: 24)\n 16192: a3 = u64 [s1 + 0x230]\n 16196: a0 = u64 [a3 + 0x58]\n 16199: a1 = u64 [a3 + 0x50]\n 16202: a2 = u64 [a3 + 0x48]\n 16205: a3 = u64 [a3 + 0x40]\n 16208: a4 = reverse a0\n 16210: u64 [s1 + 0xe8] = a4\n 16214: a5 = reverse a1\n 16216: u64 [s1 + 0xe0] = a5\n 16220: a1 = reverse a2\n 16222: u64 [s1 + 0xd8] = a1\n 16226: a2 = reverse a3\n 16228: u64 [s1 + 0xd0] = a2\n 16232: u64 [s1 + 760] = 0\n 16236: u64 [s1 + 752] = 0\n 16240: u64 [s1 + 744] = 0\n 16244: u64 [s1 + 736] = 0x40\n 16249: u64 [s1 + 0x318] = a2\n 16253: u64 [s1 + 0x310] = a1\n 16257: u64 [s1 + 0x308] = a5\n 16261: a0 = s1 + 0x300\n 16265: a1 = s1 + 0x2e0\n 16269: u64 [s1 + 0x300] = a4\n 16273: ra = 38, jump @1071\n      : @448 [@dyn 19] (gas: 12)\n 16278: a2 = u64 [s1 + 0xe8]\n 16282: a1 = u64 [s1 + 0xd0]\n 16286: a0 = u64 [s1 + 0xe0]\n 16290: a0 = a0 | a1\n 16293: a3 = u64 [s1 + 0xd8]\n 16297: a1 = a2 | a3\n 16300: a1 = a1 | a0\n 16303: a1 = a1 >> 0x20\n 16306: a0 = a0 | a3\n 16309: a0 = a0 << 0x20\n 16312: a0 = a0 | a1\n 16315: jump @450 if a0 == 0\n      : @449 (gas: 1)\n 16318: jump @660\n      : @450 (gas: 2)\n 16321: i32 a0 = a2 >> 0x10\n 16324: jump @452 if a0 == 0\n      : @451 (gas: 1)\n 16327: jump @660\n      : @452 (gas: 6)\n 16330: a1 = a2 + 0x5f\n 16333: a0 = u64 [s1 + 0x220]\n 16337: u64 [s1 + 0x1e8] = a1\n 16341: a1 = a1 & a0\n 16344: u64 [s1 + 0x158] = a1\n 16348: jump @454 if a1 <=u 65536\n      : @453 (gas: 1)\n 16354: jump @660\n      : @454 (gas: 6)\n 16357: a0 = u64 [s1 + 0x238]\n 16361: a0 = i32 [a0]\n 16363: a1 = u64 [s1 + 0x228]\n 16367: a2 = i32 [a1]\n 16369: a1 = u64 [s1 + 0x158]\n 16373: jump @456 if a0 >=u a1\n      : @455 (gas: 4)\n 16376: a0 = u64 [s1 + 0x238]\n 16380: a1 = u64 [s1 + 0x158]\n 16384: u32 [a0] = a1\n 16386: fallthrough\n      : @456 (gas: 61)\n 16387: a0 = i32 [s1 + 0xe8]\n 16391: a3 = u64 [s1 + 0x230]\n 16395: a1 = a3 + a0\n 16398: u64 [s1 + 0x198] = a1\n 16402: i32 a0 = a0 + a3\n 16405: a1 = 0x40\n 16408: ecalli 1 // 'call_data_copy'\n 16410: a0 = 0x30060\n 16415: u64 [s1 + 528] = 0\n 16419: u64 [s1 + 552] = 0\n 16423: u64 [s1 + 0xa0] = a0\n 16427: a0 = a0 << 0x20\n 16430: a0 = a0 >> 0x20\n 16433: a1 = 0x1800000000\n 16443: a0 = a0 | a1\n 16446: u64 [s1 + 0x98] = a0\n 16450: a0 = s1 + 0x7a0\n 16454: a0 = a0 << 0x20\n 16457: a0 = a0 >> 0x20\n 16460: a1 = s1 + 0x7e0\n 16464: a1 = a1 << 0x20\n 16467: a0 = a0 | a1\n 16470: u64 [s1 + 0x90] = a0\n 16474: a4 = u64 [s1 + 0xe8]\n 16478: i32 a0 = a4 >> 0x5\n 16481: u64 [s1 + 0xa8] = a0\n 16485: a0 = a0 <u 0x7ff\n 16489: a0 = a0 ^ 0x1\n 16492: a2 = u64 [s1 + 0x220]\n 16496: a1 = u64 [s1 + 0x1e8]\n 16500: a1 = a1 & a2\n 16503: u64 [s1 + 0x150] = a1\n 16507: a1 = a1 >u 0x10000\n 16512: a0 = a0 | a1\n 16515: u64 [s1 + 0xb0] = a0\n 16519: a0 = s1 + 0x7c0\n 16523: a0 = a0 << 0x20\n 16526: u64 [s1 + 0x88] = a0\n 16530: a0 = a4 + 0x3f\n 16533: a0 = a0 & a2\n 16536: u64 [s1 + 0x1a0] = a0\n 16540: i32 a0 = a4 + 0x20\n 16543: a1 = u64 [s1 + 0x230]\n 16547: a0 = a0 + a1\n 16550: u64 [s1 + 0x190] = a0\n 16554: a0 = 0x900000000000000\n 16564: u64 [s1 + 0x70] = a0\n 16567: a0 = 0x6400000000\n 16577: u64 [s1 + 0x80] = a0\n 16581: a0 = 0x200000000000000\n 16591: u64 [s1 + 0x1a8] = a0\n 16595: a0 = s1 + 0x1000\n 16599: i32 a0 = a0 + 0xfffffffffffffb60\n 16603: u64 [s1 + 0xc8] = a0\n 16607: a0 = s1 + 0x1000\n 16611: i32 a0 = a0 + 0xfffffffffffffb80\n 16615: u64 [s1 + 0xc0] = a0\n 16619: a0 = s1 + 0x1000\n 16623: i32 a0 = a0 + 0xfffffffffffffba0\n 16627: u64 [s1 + 0xb8] = a0\n 16631: jump @458\n      : @457 (gas: 121)\n 16634: u64 [s1 + 552] = 0\n 16638: t2 = u64 [s1 + 0x1d8]\n 16642: a0 = u8 [t2 + 0x19]\n 16645: a1 = u8 [t2 + 0x18]\n 16648: a2 = u8 [t2 + 0x1a]\n 16651: a3 = u8 [t2 + 0x1b]\n 16654: a0 = a0 << 0x8\n 16657: a0 = a0 | a1\n 16660: a2 = a2 << 0x10\n 16663: a3 = a3 << 0x18\n 16666: a2 = a2 | a3\n 16669: a0 = a0 | a2\n 16672: a1 = u8 [t2 + 0x1d]\n 16675: a2 = u8 [t2 + 0x1c]\n 16678: a3 = u8 [t2 + 0x1e]\n 16681: a4 = u8 [t2 + 0x1f]\n 16684: a1 = a1 << 0x8\n 16687: a1 = a1 | a2\n 16690: a3 = a3 << 0x10\n 16693: a4 = a4 << 0x18\n 16696: a3 = a3 | a4\n 16699: a1 = a1 | a3\n 16702: a1 = a1 << 0x20\n 16705: t0 = a1 | a0\n 16708: a1 = u8 [t2 + 0x11]\n 16711: a2 = u8 [t2 + 0x10]\n 16714: a3 = u8 [t2 + 0x12]\n 16717: a4 = u8 [t2 + 0x13]\n 16720: a1 = a1 << 0x8\n 16723: a1 = a1 | a2\n 16726: a3 = a3 << 0x10\n 16729: a4 = a4 << 0x18\n 16732: a3 = a3 | a4\n 16735: a1 = a1 | a3\n 16738: a2 = u8 [t2 + 0x15]\n 16741: a3 = u8 [t2 + 0x14]\n 16744: a4 = u8 [t2 + 0x16]\n 16747: a5 = u8 [t2 + 0x17]\n 16750: a2 = a2 << 0x8\n 16753: a2 = a2 | a3\n 16756: a4 = a4 << 0x10\n 16759: a5 = a5 << 0x18\n 16762: a4 = a4 | a5\n 16765: a2 = a2 | a4\n 16768: a2 = a2 << 0x20\n 16771: t1 = a2 | a1\n 16774: a2 = u8 [t2 + 0x9]\n 16777: a3 = u8 [t2 + 0x8]\n 16780: a4 = u8 [t2 + 0xa]\n 16783: a5 = u8 [t2 + 0xb]\n 16786: a2 = a2 << 0x8\n 16789: a2 = a2 | a3\n 16792: a4 = a4 << 0x10\n 16795: a5 = a5 << 0x18\n 16798: a4 = a4 | a5\n 16801: a2 = a2 | a4\n 16804: a3 = u8 [t2 + 0xd]\n 16807: a4 = u8 [t2 + 0xc]\n 16810: a5 = u8 [t2 + 0xe]\n 16813: a0 = u8 [t2 + 0xf]\n 16816: a3 = a3 << 0x8\n 16819: a3 = a3 | a4\n 16822: a5 = a5 << 0x10\n 16825: a0 = a0 << 0x18\n 16828: a0 = a0 | a5\n 16831: a0 = a0 | a3\n 16834: a0 = a0 << 0x20\n 16837: a2 = a2 | a0\n 16840: a0 = u8 [t2 + 0x1]\n 16843: a3 = u8 [t2]\n 16845: a4 = u8 [t2 + 0x2]\n 16848: a5 = u8 [t2 + 0x3]\n 16851: a0 = a0 << 0x8\n 16854: a0 = a0 | a3\n 16857: a4 = a4 << 0x10\n 16860: a5 = a5 << 0x18\n 16863: a4 = a4 | a5\n 16866: a0 = a0 | a4\n 16869: a3 = u8 [t2 + 0x5]\n 16872: a4 = u8 [t2 + 0x4]\n 16875: a5 = u8 [t2 + 0x6]\n 16878: a1 = u8 [t2 + 0x7]\n 16881: a3 = a3 << 0x8\n 16884: a3 = a3 | a4\n 16887: a5 = a5 << 0x10\n 16890: a1 = a1 << 0x18\n 16893: a1 = a1 | a5\n 16896: a1 = a1 | a3\n 16899: a1 = a1 << 0x20\n 16902: a0 = a0 | a1\n 16905: a1 = u64 [s1 + 0x1f0]\n 16909: a1 = a1 >> 0x1\n 16912: a4 = u64 [s1 + 0x1c0]\n 16916: a3 = a4 << 0x3f\n 16919: a1 = a1 | a3\n 16922: u64 [s1 + 0x1f0] = a1\n 16926: a1 = a4 >> 0x1\n 16929: a4 = u64 [s1 + 0x1b0]\n 16933: a3 = a4 << 0x3f\n 16936: a1 = a1 | a3\n 16939: u64 [s1 + 0x1c0] = a1\n 16943: a1 = a4 >> 0x1\n 16946: a4 = u64 [s1 + 0x1b8]\n 16950: a3 = a4 << 0x3f\n 16953: a1 = a1 | a3\n 16956: u64 [s1 + 0x1b0] = a1\n 16960: a0 = reverse a0\n 16962: u64 [s1 + 0x1f8] = a0\n 16966: a0 = reverse a2\n 16968: u64 [s1 + 0x200] = a0\n 16972: a0 = reverse t1\n 16974: u64 [s1 + 0x208] = a0\n 16978: a0 = reverse t0\n 16980: u64 [s1 + 0x218] = a0\n 16984: a4 = a4 >> 0x1\n 16987: u64 [s1 + 0x1b8] = a4\n 16991: a0 = u64 [s1 + 0x210]\n 16995: a0 = a0 + 0x1\n 16998: a0 = a0 & 0xff\n 17002: u64 [s1 + 0x210] = a0\n 17006: fallthrough\n      : @458 (gas: 19)\n 17007: a1 = s1 + 0x7ff\n 17011: a1 = a1 + 0x1b9\n 17015: a0 = u64 [s1 + 0x1a8]\n 17019: u64 [a1 + 0x1c0] = a0\n 17023: u64 [a1 + 440] = 0\n 17027: u64 [a1 + 432] = 0\n 17031: u64 [a1 + 424] = 0\n 17035: u64 [a1 + 480] = 0\n 17039: u64 [a1 + 472] = 0\n 17043: u64 [a1 + 464] = 0\n 17047: u64 [a1 + 456] = 0\n 17051: u32 [a1 + 488] = 0x20\n 17056: a2 = 0xffffffffffffffff\n 17059: a0 = 0\n 17061: a1 = u64 [s1 + 0xc8]\n 17065: a3 = u64 [s1 + 0xc0]\n 17069: a4 = u64 [s1 + 0xb8]\n 17073: ecalli 6 // 'get_storage'\n 17075: fallthrough\n      : @459 (gas: 10)\n 17076: t1 = s1 + 0x7ff\n 17080: t1 = t1 + 0x1b9\n 17084: a0 = u8 [t1 + 0x1d3]\n 17088: a5 = u64 [s1 + 0x228]\n 17092: a3 = a5 | a5\n 17095: a4 = u64 [s1 + 0x210]\n 17099: a0 = a4 <u a0\n 17102: a0 = 0 if a5 != 0\n 17104: a0 = 0 if a3 != 0\n 17106: jump @461 if a0 != 0\n      : @460 (gas: 1)\n 17109: jump @661\n      : @461 (gas: 10)\n 17112: a0 = u64 [s1 + 0x1f0]\n 17116: a0 = a0 & 0x1\n 17119: t0 = a4 << 0x38\n 17122: a1 = 0x600000000000000\n 17132: u64 [s1 + 0x1e8] = a1\n 17136: a2 = a4 <u 0xa\n 17139: a1 = u64 [s1 + 0x230]\n 17143: t2 = u64 [s1 + 0x238]\n 17147: u64 [s1 + 0x1e0] = t0\n 17151: jump @481 if a0 != 0\n      : @462 (gas: 9)\n 17155: a0 = a5 >u 0\n 17157: a1 = a2 ^ 0x1\n 17160: a1 = a0 if a5 != 0\n 17163: a0 = a5 >u 0\n 17165: a2 = a5 >u 0\n 17167: a2 = a0 if a5 == 0\n 17170: a2 = a1 if a3 == 0\n 17173: u64 [s1 + 0x228] = a5\n 17177: jump @464 if a2 == 0\n      : @463 (gas: 1)\n 17180: jump @721\n      : @464 (gas: 21)\n 17183: a0 = u64 [s1 + 0x70]\n 17186: a0 = a0 + t0\n 17189: u64 [t1 + 0x1c0] = a0\n 17193: u64 [t1 + 440] = 0\n 17197: u64 [t1 + 432] = 0\n 17201: u64 [t1 + 424] = 0\n 17205: u64 [t1 + 480] = 0\n 17209: u64 [t1 + 472] = 0\n 17213: u64 [t1 + 464] = 0\n 17217: u64 [t1 + 456] = 0\n 17221: u32 [t1 + 488] = 0x20\n 17226: a0 = s1 + 0x1000\n 17230: i32 a1 = a0 + 0xfffffffffffffb60\n 17234: a0 = s1 + 0x1000\n 17238: i32 a3 = a0 + 0xfffffffffffffb80\n 17242: a0 = s1 + 0x1000\n 17246: i32 a4 = a0 + 0xfffffffffffffba0\n 17250: a2 = 0xffffffffffffffff\n 17253: a0 = 0\n 17255: ecalli 6 // 'get_storage'\n 17257: fallthrough\n      : @465 (gas: 38)\n 17258: a2 = u64 [s1 + 0x228]\n 17262: a0 = a2 >> 0x3b\n 17265: a1 = a2 << 0x5\n 17268: t1 = a1 | a0\n 17271: a0 = a2 >> 0x3b\n 17274: a1 = a2 << 0x5\n 17277: ra = a1 | a0\n 17280: a1 = u64 [s1 + 0x210]\n 17284: a0 = a1 >> 0x3b\n 17287: a2 = a2 << 0x5\n 17290: t0 = a2 | a0\n 17293: a0 = a1 << 0x5\n 17296: a1 = u64 [s1 + 0x138]\n 17300: t2 = a1 + a0\n 17303: a3 = t2 <u a1\n 17306: a1 = u64 [s1 + 0x130]\n 17310: a4 = a1 + t0\n 17313: a4 = a4 + a3\n 17316: a5 = a4 ^ a1\n 17319: a2 = a4 <u a1\n 17322: a2 = a3 if a5 == 0\n 17325: a1 = u64 [s1 + 0x140]\n 17329: a3 = a1 + ra\n 17332: a5 = a3 <u a1\n 17335: a1 = u64 [s1 + 0x148]\n 17339: a1 = a1 + t1\n 17342: a1 = a1 + a5\n 17345: a2 = a2 + a3\n 17348: a3 = a2 <u a3\n 17351: a1 = a1 + a3\n 17354: a1 = a1 | a4\n 17357: a3 = t2 | a2\n 17360: a3 = a3 | a1\n 17363: a1 = a1 | a2\n 17366: a3 = a3 >> 0x20\n 17369: a1 = a1 << 0x20\n 17372: a1 = a1 | a3\n 17375: jump @467 if a1 == 0\n      : @466 (gas: 1)\n 17378: jump @660\n      : @467 (gas: 3)\n 17381: i32 a1 = t2 >> 0x10\n 17384: a2 = u64 [s1 + 0x238]\n 17388: jump @469 if a1 == 0\n      : @468 (gas: 1)\n 17391: jump @660\n      : @469 (gas: 4)\n 17394: a1 = t2 + 0x3f\n 17397: a3 = u64 [s1 + 0x220]\n 17401: a3 = a3 & a1\n 17404: jump @471 if a3 <=u 65536\n      : @470 (gas: 1)\n 17410: jump @660\n      : @471 (gas: 5)\n 17413: u64 [s1 + 0x1d8] = t1\n 17417: a4 = i32 [a2]\n 17419: a1 = s1 + 0x7ff\n 17423: a1 = a1 + 0x1b9\n 17427: jump @473 if a4 >=u a3\n      : @472 (gas: 3)\n 17430: u32 [a2] = a3\n 17432: a4 = a3\n 17434: fallthrough\n      : @473 (gas: 102)\n 17435: u64 [s1 + 0x228] = a4\n 17439: a4 = u64 [a1 + 0x1d8]\n 17443: t1 = u64 [a1 + 0x1d0]\n 17447: a1 = u64 [s1 + 0xf0]\n 17451: a5 = a1 + a0\n 17454: a1 = a5 <u a1\n 17457: a3 = u64 [s1 + 0x108]\n 17461: a2 = a3 + t0\n 17464: a2 = a2 + a1\n 17467: u64 [s1 + 0x1d0] = a2\n 17471: a0 = a2 ^ a3\n 17474: a2 = a2 <u a3\n 17477: a2 = a1 if a0 == 0\n 17480: u64 [s1 + 0x188] = a2\n 17484: a3 = s1 + 0x7ff\n 17488: a3 = a3 + 0x1b9\n 17492: a1 = u64 [a3 + 0x1c8]\n 17496: i32 a0 = t2 + 0\n 17498: t2 = a5\n 17500: a2 = u64 [s1 + 0x230]\n 17504: a0 = a0 + a2\n 17507: a5 = t1 >> 0x38\n 17510: u8 [a0 + 0xf] = a5\n 17513: a5 = t1 >> 0x30\n 17516: u8 [a0 + 0xe] = a5\n 17519: a5 = t1 >> 0x28\n 17522: u8 [a0 + 0xd] = a5\n 17525: a5 = t1 >> 0x20\n 17528: u8 [a0 + 0xc] = a5\n 17531: a5 = t1 >> 0x18\n 17534: u8 [a0 + 0xb] = a5\n 17537: a5 = t1 >> 0x10\n 17540: u8 [a0 + 0xa] = a5\n 17543: a5 = t1 >> 0x8\n 17546: u8 [a0 + 0x9] = a5\n 17549: a5 = a1 >> 0x38\n 17552: u8 [a0 + 0x7] = a5\n 17555: a5 = a1 >> 0x30\n 17558: u8 [a0 + 0x6] = a5\n 17561: a5 = a1 >> 0x28\n 17564: u8 [a0 + 0x5] = a5\n 17567: a5 = a1 >> 0x20\n 17570: u8 [a0 + 0x4] = a5\n 17573: a5 = a1 >> 0x18\n 17576: u8 [a0 + 0x3] = a5\n 17579: a5 = a1 >> 0x10\n 17582: u8 [a0 + 0x2] = a5\n 17585: a5 = a1 >> 0x8\n 17588: u8 [a0 + 0x1] = a5\n 17591: a5 = a4 >> 0x38\n 17594: u8 [a0 + 0x17] = a5\n 17597: a5 = a4 >> 0x30\n 17600: u8 [a0 + 0x16] = a5\n 17603: a5 = a4 >> 0x28\n 17606: u8 [a0 + 0x15] = a5\n 17609: a5 = a4 >> 0x20\n 17612: u8 [a0 + 0x14] = a5\n 17615: a5 = a4 >> 0x18\n 17618: u8 [a0 + 0x13] = a5\n 17621: t0 = u64 [a3 + 0x1e0]\n 17625: a5 = a4 >> 0x10\n 17628: u8 [a0 + 0x12] = a5\n 17631: a5 = a4 >> 0x8\n 17634: u8 [a0 + 0x11] = a5\n 17637: a5 = t0 >> 0x38\n 17640: u8 [a0 + 0x1f] = a5\n 17643: a5 = t0 >> 0x30\n 17646: u8 [a0 + 0x1e] = a5\n 17649: a5 = t0 >> 0x28\n 17652: u8 [a0 + 0x1d] = a5\n 17655: a5 = t0 >> 0x20\n 17658: u8 [a0 + 0x1c] = a5\n 17661: a5 = t0 >> 0x18\n 17664: u8 [a0 + 0x1b] = a5\n 17667: a5 = t0 >> 0x10\n 17670: u8 [a0 + 0x1a] = a5\n 17673: a5 = t0 >> 0x8\n 17676: u8 [a0 + 0x19] = a5\n 17679: a2 = u64 [s1 + 0x100]\n 17683: ra = ra + a2\n 17686: a5 = u64 [s1 + 0xf8]\n 17690: a3 = u64 [s1 + 0x1d8]\n 17694: a5 = a5 + a3\n 17697: a2 = ra <u a2\n 17700: a2 = a2 + a5\n 17703: a3 = u64 [s1 + 0x188]\n 17707: a3 = a3 + ra\n 17710: a5 = a3 <u ra\n 17713: a2 = a2 + a5\n 17716: a5 = u64 [s1 + 0x1d0]\n 17720: a2 = a2 | a5\n 17723: a5 = t2 | a3\n 17726: a5 = a5 | a2\n 17729: a2 = a2 | a3\n 17732: a5 = a5 >> 0x20\n 17735: a2 = a2 << 0x20\n 17738: a2 = a2 | a5\n 17741: u8 [a0 + 0x10] = a4\n 17744: u8 [a0 + 0x8] = t1\n 17747: u8 [a0] = a1\n 17749: u8 [a0 + 0x18] = t0\n 17752: jump @475 if a2 == 0\n      : @474 (gas: 1)\n 17755: jump @660\n      : @475 (gas: 4)\n 17758: ra = t2\n 17760: i32 a0 = t2 >> 0x10\n 17763: a5 = u64 [s1 + 0x200]\n 17767: jump @477 if a0 == 0\n      : @476 (gas: 1)\n 17770: jump @660\n      : @477 (gas: 4)\n 17773: a0 = ra + 0x3f\n 17776: a2 = u64 [s1 + 0x220]\n 17780: a0 = a0 & a2\n 17783: jump @479 if a0 <=u 65536\n      : @478 (gas: 1)\n 17789: jump @660\n      : @479 (gas: 20)\n 17792: a2 = 0\n 17794: a1 = reverse a1\n 17796: u64 [s1 + 0x160] = a1\n 17800: a1 = reverse t1\n 17802: u64 [s1 + 0x168] = a1\n 17806: a1 = reverse a4\n 17808: u64 [s1 + 0x170] = a1\n 17812: a1 = reverse t0\n 17814: u64 [s1 + 0x178] = a1\n 17818: a1 = u64 [s1 + 0x218]\n 17822: u64 [s1 + 0x180] = a1\n 17826: a1 = u64 [s1 + 0x208]\n 17830: u64 [s1 + 0x188] = a1\n 17834: u64 [s1 + 0x1d0] = a5\n 17838: a1 = u64 [s1 + 0x1f8]\n 17842: u64 [s1 + 0x1d8] = a1\n 17846: a4 = u64 [s1 + 0x230]\n 17850: a5 = u64 [s1 + 0x238]\n 17854: t1 = u64 [s1 + 0x228]\n 17858: jump @504 if t1 <u a0\n      : @480 (gas: 1)\n 17862: jump @505\n      : @481 (gas: 8)\n 17865: u64 [s1 + 0x1d0] = a2\n 17869: u64 [s1 + 0x1d8] = a3\n 17873: a0 = i32 [t2]\n 17875: u64 [a1 + 16] = 0\n 17878: u64 [a1 + 8] = 0\n 17881: u64 [a1 + 0] = 0\n 17883: u64 [a1 + 0x18] = t0\n 17886: jump @483 if a0 >u 63\n      : @482 (gas: 2)\n 17890: u32 [t2 + 0] = 0x40\n 17893: fallthrough\n      : @483 (gas: 39)\n 17894: u64 [a1 + 48] = 0\n 17897: u64 [a1 + 40] = 0\n 17900: u64 [a1 + 32] = 0\n 17903: a0 = u64 [s1 + 0x1e8]\n 17907: u64 [a1 + 0x38] = a0\n 17910: a0 = sp + 0xffffffffffffffe0\n 17913: a0 = a0 & 0xffffffffffffffe0\n 17916: u64 [s1 + 0x188] = a0\n 17920: sp = a0\n 17922: i32 a2 = a0 + 0\n 17924: a1 = 0x40\n 17927: a0 = u64 [s1 + 0x1c8]\n 17931: ecalli 7 // 'hash_keccak_256'\n 17933: a3 = u64 [s1 + 0x188]\n 17937: a0 = u64 [a3 + 0x18]\n 17940: a1 = u64 [a3 + 0x10]\n 17943: a2 = u64 [a3 + 0x8]\n 17946: a3 = u64 [a3]\n 17948: a4 = s1 + 0x7ff\n 17952: a4 = a4 + 0x1b9\n 17956: u64 [a4 + 0x1c0] = a0\n 17960: u64 [a4 + 0x1b8] = a1\n 17964: u64 [a4 + 0x1b0] = a2\n 17968: u64 [a4 + 0x1a8] = a3\n 17972: u64 [a4 + 480] = 0\n 17976: u64 [a4 + 472] = 0\n 17980: u64 [a4 + 464] = 0\n 17984: u64 [a4 + 456] = 0\n 17988: u32 [a4 + 488] = 0x20\n 17993: a0 = s1 + 0x1000\n 17997: i32 a1 = a0 + 0xfffffffffffffb60\n 18001: a0 = s1 + 0x1000\n 18005: i32 a3 = a0 + 0xfffffffffffffb80\n 18009: a0 = s1 + 0x1000\n 18013: i32 a4 = a0 + 0xfffffffffffffba0\n 18017: a2 = 0xffffffffffffffff\n 18020: a0 = 0\n 18022: ecalli 6 // 'get_storage'\n 18024: fallthrough\n      : @484 (gas: 19)\n 18025: a2 = u64 [s1 + 0x238]\n 18029: a1 = u64 [s1 + 0x230]\n 18033: a3 = s1 + 0x7ff\n 18037: a3 = a3 + 0x1b9\n 18041: a0 = u64 [a3 + 0x1e0]\n 18045: u64 [s1 + 0x180] = a0\n 18049: a0 = u64 [a3 + 0x1d8]\n 18053: u64 [s1 + 0x178] = a0\n 18057: a0 = u64 [a3 + 0x1d0]\n 18061: u64 [s1 + 0x170] = a0\n 18065: a0 = u64 [a3 + 0x1c8]\n 18069: u64 [s1 + 0x168] = a0\n 18073: a0 = i32 [a2]\n 18075: a3 = u64 [s1 + 0x1e0]\n 18079: u64 [a1 + 0x18] = a3\n 18082: u64 [a1 + 16] = 0\n 18085: u64 [a1 + 8] = 0\n 18088: u64 [a1 + 0] = 0\n 18090: jump @486 if a0 >u 63\n      : @485 (gas: 2)\n 18094: u32 [a2 + 0] = 0x40\n 18097: fallthrough\n      : @486 (gas: 39)\n 18098: u64 [a1 + 48] = 0\n 18101: u64 [a1 + 40] = 0\n 18104: u64 [a1 + 32] = 0\n 18107: a0 = u64 [s1 + 0x1e8]\n 18111: u64 [a1 + 0x38] = a0\n 18114: a0 = sp + 0xffffffffffffffe0\n 18117: a0 = a0 & 0xffffffffffffffe0\n 18120: u64 [s1 + 0x188] = a0\n 18124: sp = a0\n 18126: i32 a2 = a0 + 0\n 18128: a1 = 0x40\n 18131: a0 = u64 [s1 + 0x1c8]\n 18135: ecalli 7 // 'hash_keccak_256'\n 18137: a3 = u64 [s1 + 0x188]\n 18141: a0 = u64 [a3 + 0x18]\n 18144: a1 = u64 [a3 + 0x10]\n 18147: a2 = u64 [a3 + 0x8]\n 18150: a3 = u64 [a3]\n 18152: a4 = s1 + 0x7ff\n 18156: a4 = a4 + 0x1b9\n 18160: u64 [a4 + 0x1c0] = a0\n 18164: u64 [a4 + 0x1b8] = a1\n 18168: u64 [a4 + 0x1b0] = a2\n 18172: u64 [a4 + 0x1a8] = a3\n 18176: u64 [a4 + 480] = 0\n 18180: u64 [a4 + 472] = 0\n 18184: u64 [a4 + 464] = 0\n 18188: u64 [a4 + 456] = 0\n 18192: u32 [a4 + 488] = 0x20\n 18197: a0 = s1 + 0x1000\n 18201: i32 a1 = a0 + 0xfffffffffffffb60\n 18205: a0 = s1 + 0x1000\n 18209: i32 a3 = a0 + 0xfffffffffffffb80\n 18213: a0 = s1 + 0x1000\n 18217: i32 a4 = a0 + 0xfffffffffffffba0\n 18221: a2 = 0xffffffffffffffff\n 18224: a0 = 0\n 18226: ecalli 6 // 'get_storage'\n 18228: fallthrough\n      : @487 (gas: 6)\n 18229: a2 = u64 [s1 + 0x228]\n 18233: a1 = u64 [s1 + 0x1d0]\n 18237: a1 = 0 if a2 != 0\n 18239: a0 = u64 [s1 + 0x1d8]\n 18243: a1 = 0 if a0 != 0\n 18245: jump @489 if a1 != 0\n      : @488 (gas: 1)\n 18248: jump @721\n      : @489 (gas: 37)\n 18251: a0 = a2 >> 0x3b\n 18254: a1 = a2 << 0x5\n 18257: a4 = a1 | a0\n 18260: a0 = a2 >> 0x3b\n 18263: a1 = a2 << 0x5\n 18266: t0 = a1 | a0\n 18269: t2 = u64 [s1 + 0x210]\n 18273: a0 = t2 >> 0x3b\n 18276: a1 = a2 << 0x5\n 18279: ra = a1 | a0\n 18282: t1 = t2 << 0x5\n 18285: a0 = u64 [s1 + 0x138]\n 18289: t2 = a0 + t1\n 18292: a2 = t2 <u a0\n 18295: a0 = u64 [s1 + 0x130]\n 18299: a3 = a0 + ra\n 18302: a3 = a3 + a2\n 18305: a5 = a3 ^ a0\n 18308: a0 = a3 <u a0\n 18311: a0 = a2 if a5 == 0\n 18314: a1 = u64 [s1 + 0x140]\n 18318: a2 = a1 + t0\n 18321: a5 = a2 <u a1\n 18324: a1 = u64 [s1 + 0x148]\n 18328: a1 = a1 + a4\n 18331: a1 = a1 + a5\n 18334: a0 = a0 + a2\n 18337: a2 = a0 <u a2\n 18340: a1 = a1 + a2\n 18343: a1 = a1 | a3\n 18346: a2 = t2 | a0\n 18349: a2 = a2 | a1\n 18352: a0 = a0 | a1\n 18355: a2 = a2 >> 0x20\n 18358: a0 = a0 << 0x20\n 18361: a0 = a0 | a2\n 18364: jump @491 if a0 == 0\n      : @490 (gas: 1)\n 18367: jump @660\n      : @491 (gas: 4)\n 18370: i32 a0 = t2 >> 0x10\n 18373: a1 = u64 [s1 + 0x238]\n 18377: a3 = u64 [s1 + 0x108]\n 18381: jump @493 if a0 == 0\n      : @492 (gas: 1)\n 18384: jump @660\n      : @493 (gas: 4)\n 18387: a0 = t2 + 0x3f\n 18390: a2 = u64 [s1 + 0x220]\n 18394: a2 = a2 & a0\n 18397: jump @495 if a2 <=u 65536\n      : @494 (gas: 1)\n 18403: jump @660\n      : @495 (gas: 4)\n 18406: u64 [s1 + 0x1d8] = a4\n 18410: a0 = i32 [a1]\n 18412: u64 [s1 + 0x228] = a0\n 18416: jump @497 if a0 >=u a2\n      : @496 (gas: 3)\n 18419: u32 [a1] = a2\n 18421: u64 [s1 + 0x228] = a2\n 18425: fallthrough\n      : @497 (gas: 100)\n 18426: a0 = s1 + 0x7ff\n 18430: a0 = a0 + 0x1b9\n 18434: a5 = u64 [a0 + 0x1d0]\n 18438: a4 = a0\n 18440: a0 = u64 [s1 + 0xf0]\n 18444: t1 = t1 + a0\n 18447: u64 [s1 + 0x78] = t1\n 18450: a0 = t1 <u a0\n 18453: ra = ra + a3\n 18456: ra = ra + a0\n 18459: a1 = ra ^ a3\n 18462: a2 = ra <u a3\n 18465: a2 = a0 if a1 == 0\n 18468: t1 = a4\n 18470: a3 = u64 [a4 + 0x1c8]\n 18474: i32 a0 = t2 + 0\n 18476: a1 = u64 [s1 + 0x230]\n 18480: a0 = a0 + a1\n 18483: a1 = a5 >> 0x38\n 18486: u8 [a0 + 0xf] = a1\n 18489: a1 = a5 >> 0x30\n 18492: u8 [a0 + 0xe] = a1\n 18495: a1 = a5 >> 0x28\n 18498: u8 [a0 + 0xd] = a1\n 18501: a1 = a5 >> 0x20\n 18504: u8 [a0 + 0xc] = a1\n 18507: a1 = a5 >> 0x18\n 18510: u8 [a0 + 0xb] = a1\n 18513: a1 = a5 >> 0x10\n 18516: u8 [a0 + 0xa] = a1\n 18519: a1 = a5 >> 0x8\n 18522: u8 [a0 + 0x9] = a1\n 18525: a1 = u64 [a4 + 0x1d8]\n 18529: u8 [a0 + 0x8] = a5\n 18532: a4 = a3 >> 0x38\n 18535: u8 [a0 + 0x7] = a4\n 18538: a4 = a3 >> 0x30\n 18541: u8 [a0 + 0x6] = a4\n 18544: a4 = a3 >> 0x28\n 18547: u8 [a0 + 0x5] = a4\n 18550: a4 = a3 >> 0x20\n 18553: u8 [a0 + 0x4] = a4\n 18556: a4 = a3 >> 0x18\n 18559: u8 [a0 + 0x3] = a4\n 18562: a4 = a3 >> 0x10\n 18565: u8 [a0 + 0x2] = a4\n 18568: a4 = a3 >> 0x8\n 18571: u8 [a0 + 0x1] = a4\n 18574: u8 [a0] = a3\n 18576: a3 = a1 >> 0x38\n 18579: u8 [a0 + 0x17] = a3\n 18582: a3 = a1 >> 0x30\n 18585: u8 [a0 + 0x16] = a3\n 18588: a3 = a1 >> 0x28\n 18591: u8 [a0 + 0x15] = a3\n 18594: a3 = a1 >> 0x20\n 18597: u8 [a0 + 0x14] = a3\n 18600: a3 = a1 >> 0x18\n 18603: u8 [a0 + 0x13] = a3\n 18606: a3 = a1 >> 0x10\n 18609: u8 [a0 + 0x12] = a3\n 18612: a4 = u64 [t1 + 0x1e0]\n 18616: u8 [a0 + 0x10] = a1\n 18619: a1 = a1 >> 0x8\n 18622: u8 [a0 + 0x11] = a1\n 18625: a1 = a4 >> 0x38\n 18628: u8 [a0 + 0x1f] = a1\n 18631: a1 = a4 >> 0x30\n 18634: u8 [a0 + 0x1e] = a1\n 18637: a1 = a4 >> 0x28\n 18640: u8 [a0 + 0x1d] = a1\n 18643: a1 = a4 >> 0x20\n 18646: u8 [a0 + 0x1c] = a1\n 18649: a1 = a4 >> 0x18\n 18652: u8 [a0 + 0x1b] = a1\n 18655: a1 = a4 >> 0x10\n 18658: u8 [a0 + 0x1a] = a1\n 18661: a1 = u64 [s1 + 0x100]\n 18665: t0 = t0 + a1\n 18668: a1 = t0 <u a1\n 18671: a3 = u64 [s1 + 0xf8]\n 18675: t1 = u64 [s1 + 0x1d8]\n 18679: t1 = t1 + a3\n 18682: a1 = a1 + t1\n 18685: a2 = a2 + t0\n 18688: a3 = a2 <u t0\n 18691: a1 = a1 + a3\n 18694: a1 = ra | a1\n 18697: a3 = u64 [s1 + 0x78]\n 18700: ra = a3\n 18702: a3 = a3 | a2\n 18705: a3 = a3 | a1\n 18708: a1 = a1 | a2\n 18711: a3 = a3 >> 0x20\n 18714: a1 = a1 << 0x20\n 18717: a1 = a1 | a3\n 18720: u8 [a0 + 0x18] = a4\n 18723: a4 = a4 >> 0x8\n 18726: u8 [a0 + 0x19] = a4\n 18729: jump @499 if a1 == 0\n      : @498 (gas: 1)\n 18732: jump @660\n      : @499 (gas: 6)\n 18735: i32 a0 = ra >> 0x10\n 18738: a4 = u64 [s1 + 0x218]\n 18742: a5 = u64 [s1 + 0x208]\n 18746: t0 = u64 [s1 + 0x1f8]\n 18750: t1 = u64 [s1 + 0x228]\n 18754: jump @501 if a0 == 0\n      : @500 (gas: 1)\n 18757: jump @660\n      : @501 (gas: 4)\n 18760: a0 = ra + 0x3f\n 18763: a1 = u64 [s1 + 0x220]\n 18767: a0 = a0 & a1\n 18770: jump @503 if a0 <=u 65536\n      : @502 (gas: 1)\n 18776: jump @660\n      : @503 (gas: 21)\n 18779: a1 = u64 [s1 + 0x168]\n 18783: a1 = reverse a1\n 18785: u64 [s1 + 0x1d8] = a1\n 18789: a1 = u64 [s1 + 0x170]\n 18793: a1 = reverse a1\n 18795: u64 [s1 + 0x1d0] = a1\n 18799: a1 = u64 [s1 + 0x178]\n 18803: a1 = reverse a1\n 18805: u64 [s1 + 0x188] = a1\n 18809: a1 = u64 [s1 + 0x180]\n 18813: a1 = reverse a1\n 18815: u64 [s1 + 0x180] = a1\n 18819: a2 = 0x100000000000000\n 18829: u64 [s1 + 0x178] = a4\n 18833: u64 [s1 + 0x170] = a5\n 18837: a1 = u64 [s1 + 0x200]\n 18841: u64 [s1 + 0x168] = a1\n 18845: u64 [s1 + 0x160] = t0\n 18849: a4 = u64 [s1 + 0x230]\n 18853: a5 = u64 [s1 + 0x238]\n 18857: jump @505 if t1 >=u a0\n      : @504 (gas: 3)\n 18860: u32 [a5] = a0\n 18862: t1 = a0\n 18864: fallthrough\n      : @505 (gas: 47)\n 18865: i32 a0 = ra + 0\n 18867: a0 = a0 + a4\n 18870: u8 [a0 + 16] = 0\n 18873: u8 [a0 + 15] = 0\n 18876: u8 [a0 + 14] = 0\n 18879: u8 [a0 + 13] = 0\n 18882: u8 [a0 + 12] = 0\n 18885: u8 [a0 + 11] = 0\n 18888: u8 [a0 + 10] = 0\n 18891: u8 [a0 + 9] = 0\n 18894: u8 [a0 + 8] = 0\n 18897: u8 [a0 + 7] = 0\n 18900: u8 [a0 + 6] = 0\n 18903: u8 [a0 + 5] = 0\n 18906: u8 [a0 + 4] = 0\n 18909: u8 [a0 + 3] = 0\n 18912: u8 [a0 + 2] = 0\n 18915: u8 [a0 + 1] = 0\n 18918: u8 [a0 + 0] = 0\n 18920: u8 [a0 + 0x18] = a2\n 18923: u8 [a0 + 23] = 0\n 18926: u8 [a0 + 22] = 0\n 18929: u8 [a0 + 21] = 0\n 18932: u8 [a0 + 20] = 0\n 18935: u8 [a0 + 19] = 0\n 18938: u8 [a0 + 18] = 0\n 18941: u8 [a0 + 17] = 0\n 18944: a1 = a2 >> 0x38\n 18947: u8 [a0 + 0x1f] = a1\n 18950: a1 = a2 >> 0x30\n 18953: u8 [a0 + 0x1e] = a1\n 18956: a1 = a2 >> 0x28\n 18959: u8 [a0 + 0x1d] = a1\n 18962: a1 = a2 >> 0x20\n 18965: u8 [a0 + 0x1c] = a1\n 18968: a1 = a2 >> 0x18\n 18971: u8 [a0 + 0x1b] = a1\n 18974: a1 = a2 >> 0x10\n 18977: u8 [a0 + 0x1a] = a1\n 18980: a2 = a2 >> 0x8\n 18983: u8 [a0 + 0x19] = a2\n 18986: a0 = u64 [s1 + 0x1e0]\n 18990: u64 [a4 + 0x18] = a0\n 18993: u64 [a4 + 0] = 0\n 18995: u64 [a4 + 8] = 0\n 18998: u64 [a4 + 16] = 0\n 19001: jump @507 if t1 >u 63\n      : @506 (gas: 2)\n 19005: u32 [a5 + 0] = 0x40\n 19008: fallthrough\n      : @507 (gas: 45)\n 19009: u64 [a4 + 48] = 0\n 19012: u64 [a4 + 40] = 0\n 19015: u64 [a4 + 32] = 0\n 19018: a0 = u64 [s1 + 0x1e8]\n 19022: u64 [a4 + 0x38] = a0\n 19025: a0 = sp + 0xffffffffffffffe0\n 19028: a0 = a0 & 0xffffffffffffffe0\n 19031: u64 [s1 + 0x228] = a0\n 19035: sp = a0\n 19037: i32 a2 = a0 + 0\n 19039: a1 = 0x40\n 19042: a0 = u64 [s1 + 0x1c8]\n 19046: ecalli 7 // 'hash_keccak_256'\n 19048: a0 = u64 [s1 + 0x228]\n 19052: t0 = u64 [a0]\n 19054: t2 = u64 [a0 + 0x8]\n 19057: a2 = u64 [a0 + 0x10]\n 19060: a3 = u64 [a0 + 0x18]\n 19063: a0 = u64 [s1 + 0x1f8]\n 19067: t1 = reverse a0\n 19069: a0 = u64 [s1 + 0x200]\n 19073: a5 = reverse a0\n 19075: a0 = u64 [s1 + 0x208]\n 19079: a0 = reverse a0\n 19081: a1 = u64 [s1 + 0x218]\n 19085: a4 = reverse a1\n 19087: a1 = s1 + 0x7ff\n 19091: a1 = a1 + 0x1b9\n 19095: u64 [a1 + 0x1c0] = a3\n 19099: u64 [a1 + 0x1b8] = a2\n 19103: u64 [a1 + 0x1b0] = t2\n 19107: u64 [a1 + 0x1a8] = t0\n 19111: u64 [a1 + 0x1e0] = a4\n 19115: u64 [a1 + 0x1d8] = a0\n 19119: u64 [a1 + 0x1d0] = a5\n 19123: u64 [a1 + 0x1c8] = t1\n 19127: a0 = s1 + 0x1000\n 19131: i32 a1 = a0 + 0xfffffffffffffb60\n 19135: a0 = s1 + 0x1000\n 19139: i32 a3 = a0 + 0xfffffffffffffb80\n 19143: a2 = 0xffffffffffffffff\n 19146: a4 = 0x20\n 19149: a0 = 0\n 19151: ecalli 13 // 'set_storage'\n 19153: fallthrough\n      : @508 (gas: 2)\n 19154: a1 = u64 [s1 + 0x1a0]\n 19158: jump @510 if a1 <=u 65536\n      : @509 (gas: 1)\n 19164: jump @660\n      : @510 (gas: 3)\n 19167: a4 = u64 [s1 + 0x238]\n 19171: a0 = i32 [a4]\n 19173: jump @512 if a0 >=u a1\n      : @511 (gas: 3)\n 19176: u32 [a4] = a1\n 19178: a0 = a1\n 19180: fallthrough\n      : @512 (gas: 83)\n 19181: a1 = u64 [s1 + 0xd8]\n 19185: a2 = u64 [s1 + 0xd0]\n 19189: a2 = a2 | a1\n 19192: a1 = 0x100000000\n 19202: u64 [s1 + 0x208] = a1\n 19206: a1 = 0xffffffe0\n 19216: a3 = u64 [s1 + 0xe8]\n 19220: a1 = a3 <u a1\n 19223: a3 = u64 [s1 + 0xe0]\n 19227: a1 = 0 if a3 != 0\n 19229: a1 = 0 if a2 != 0\n 19231: a2 = u64 [s1 + 0x180]\n 19235: a2 = reverse a2\n 19237: a3 = a2 >> 0x38\n 19240: a5 = u64 [s1 + 0x198]\n 19244: u8 [a5 + 0x1f] = a3\n 19247: a3 = a2 >> 0x30\n 19250: u8 [a5 + 0x1e] = a3\n 19253: a3 = a2 >> 0x28\n 19256: u8 [a5 + 0x1d] = a3\n 19259: a3 = a2 >> 0x20\n 19262: u8 [a5 + 0x1c] = a3\n 19265: a3 = a2 >> 0x18\n 19268: u8 [a5 + 0x1b] = a3\n 19271: a3 = a2 >> 0x10\n 19274: u8 [a5 + 0x1a] = a3\n 19277: a3 = u64 [s1 + 0x188]\n 19281: a3 = reverse a3\n 19283: u8 [a5 + 0x18] = a2\n 19286: a2 = a2 >> 0x8\n 19289: u8 [a5 + 0x19] = a2\n 19292: a2 = a3 >> 0x38\n 19295: u8 [a5 + 0x17] = a2\n 19298: a2 = a3 >> 0x30\n 19301: u8 [a5 + 0x16] = a2\n 19304: a2 = a3 >> 0x28\n 19307: u8 [a5 + 0x15] = a2\n 19310: a2 = a3 >> 0x20\n 19313: u8 [a5 + 0x14] = a2\n 19316: a2 = a3 >> 0x18\n 19319: u8 [a5 + 0x13] = a2\n 19322: a2 = a3 >> 0x10\n 19325: u8 [a5 + 0x12] = a2\n 19328: a2 = u64 [s1 + 0x1d0]\n 19332: a2 = reverse a2\n 19334: u8 [a5 + 0x10] = a3\n 19337: a3 = a3 >> 0x8\n 19340: u8 [a5 + 0x11] = a3\n 19343: a3 = a2 >> 0x38\n 19346: u8 [a5 + 0xf] = a3\n 19349: a3 = a2 >> 0x30\n 19352: u8 [a5 + 0xe] = a3\n 19355: a3 = a2 >> 0x28\n 19358: u8 [a5 + 0xd] = a3\n 19361: a3 = a2 >> 0x20\n 19364: u8 [a5 + 0xc] = a3\n 19367: a3 = a2 >> 0x18\n 19370: u8 [a5 + 0xb] = a3\n 19373: a3 = a2 >> 0x10\n 19376: u8 [a5 + 0xa] = a3\n 19379: a3 = u64 [s1 + 0x1d8]\n 19383: a3 = reverse a3\n 19385: u8 [a5 + 0x8] = a2\n 19388: a2 = a2 >> 0x8\n 19391: u8 [a5 + 0x9] = a2\n 19394: a2 = a3 >> 0x38\n 19397: u8 [a5 + 0x7] = a2\n 19400: a2 = a3 >> 0x30\n 19403: u8 [a5 + 0x6] = a2\n 19406: a2 = a3 >> 0x28\n 19409: u8 [a5 + 0x5] = a2\n 19412: a2 = a3 >> 0x20\n 19415: u8 [a5 + 0x4] = a2\n 19418: a2 = a3 >> 0x18\n 19421: u8 [a5 + 0x3] = a2\n 19424: a2 = a3 >> 0x10\n 19427: u8 [a5 + 0x2] = a2\n 19430: u8 [a5] = a3\n 19432: a3 = a3 >> 0x8\n 19435: u8 [a5 + 0x1] = a3\n 19438: t0 = s1 + 0x7ff\n 19442: t0 = t0 + 0x1b9\n 19446: jump @514 if a1 != 0\n      : @513 (gas: 1)\n 19449: jump @660\n      : @514 (gas: 2)\n 19452: a1 = u64 [s1 + 0xb0]\n 19456: jump @516 if a1 == 0\n      : @515 (gas: 1)\n 19459: jump @660\n      : @516 (gas: 2)\n 19462: a1 = u64 [s1 + 0x150]\n 19466: jump @518 if a0 >=u a1\n      : @517 (gas: 3)\n 19469: a0 = u64 [s1 + 0x150]\n 19473: u32 [a4] = a0\n 19475: fallthrough\n      : @518 (gas: 89)\n 19476: a0 = u64 [s1 + 0x160]\n 19480: a0 = reverse a0\n 19482: a1 = u64 [s1 + 0x168]\n 19486: a1 = reverse a1\n 19488: a2 = u64 [s1 + 0x170]\n 19492: a2 = reverse a2\n 19494: a3 = u64 [s1 + 0x178]\n 19498: a3 = reverse a3\n 19500: a5 = u64 [s1 + 0x190]\n 19504: u8 [a5 + 0x18] = a3\n 19507: a4 = a3 >> 0x38\n 19510: u8 [a5 + 0x1f] = a4\n 19513: a4 = a3 >> 0x30\n 19516: u8 [a5 + 0x1e] = a4\n 19519: a4 = a3 >> 0x28\n 19522: u8 [a5 + 0x1d] = a4\n 19525: a4 = a3 >> 0x20\n 19528: u8 [a5 + 0x1c] = a4\n 19531: a4 = a3 >> 0x18\n 19534: u8 [a5 + 0x1b] = a4\n 19537: a4 = a3 >> 0x10\n 19540: u8 [a5 + 0x1a] = a4\n 19543: a3 = a3 >> 0x8\n 19546: u8 [a5 + 0x19] = a3\n 19549: u8 [a5 + 0x10] = a2\n 19552: a3 = a2 >> 0x38\n 19555: u8 [a5 + 0x17] = a3\n 19558: a3 = a2 >> 0x30\n 19561: u8 [a5 + 0x16] = a3\n 19564: a3 = a2 >> 0x28\n 19567: u8 [a5 + 0x15] = a3\n 19570: a3 = a2 >> 0x20\n 19573: u8 [a5 + 0x14] = a3\n 19576: a3 = a2 >> 0x18\n 19579: u8 [a5 + 0x13] = a3\n 19582: a3 = a2 >> 0x10\n 19585: u8 [a5 + 0x12] = a3\n 19588: a2 = a2 >> 0x8\n 19591: u8 [a5 + 0x11] = a2\n 19594: u8 [a5 + 0x8] = a1\n 19597: a2 = a1 >> 0x38\n 19600: u8 [a5 + 0xf] = a2\n 19603: a2 = a1 >> 0x30\n 19606: u8 [a5 + 0xe] = a2\n 19609: a2 = a1 >> 0x28\n 19612: u8 [a5 + 0xd] = a2\n 19615: a2 = a1 >> 0x20\n 19618: u8 [a5 + 0xc] = a2\n 19621: a2 = a1 >> 0x18\n 19624: u8 [a5 + 0xb] = a2\n 19627: a2 = a1 >> 0x10\n 19630: u8 [a5 + 0xa] = a2\n 19633: a1 = a1 >> 0x8\n 19636: u8 [a5 + 0x9] = a1\n 19639: u8 [a5] = a0\n 19641: a1 = a0 >> 0x38\n 19644: u8 [a5 + 0x7] = a1\n 19647: a1 = a0 >> 0x30\n 19650: u8 [a5 + 0x6] = a1\n 19653: a1 = a0 >> 0x28\n 19656: u8 [a5 + 0x5] = a1\n 19659: a1 = a0 >> 0x20\n 19662: u8 [a5 + 0x4] = a1\n 19665: a1 = a0 >> 0x18\n 19668: u8 [a5 + 0x3] = a1\n 19671: a1 = a0 >> 0x10\n 19674: u8 [a5 + 0x2] = a1\n 19677: a0 = a0 >> 0x8\n 19680: u8 [a5 + 0x1] = a0\n 19683: a0 = u64 [s1 + 0x1a8]\n 19687: u64 [t0 + 0x1c0] = a0\n 19691: u64 [t0 + 440] = 0\n 19695: u64 [t0 + 432] = 0\n 19699: u64 [t0 + 424] = 0\n 19703: u64 [t0 + 480] = 0\n 19707: u64 [t0 + 472] = 0\n 19711: u64 [t0 + 464] = 0\n 19715: u64 [t0 + 456] = 0\n 19719: u32 [t0 + 488] = 0x20\n 19724: a0 = s1 + 0x1000\n 19728: i32 a1 = a0 + 0xfffffffffffffb60\n 19732: a0 = s1 + 0x1000\n 19736: i32 a3 = a0 + 0xfffffffffffffb80\n 19740: a0 = s1 + 0x1000\n 19744: i32 a4 = a0 + 0xfffffffffffffba0\n 19748: a2 = 0xffffffffffffffff\n 19751: a0 = 0\n 19753: ecalli 6 // 'get_storage'\n 19755: fallthrough\n      : @519 (gas: 3)\n 19756: t0 = u64 [s1 + 0x238]\n 19760: t2 = i32 [t0]\n 19762: jump @521 if t2 >u 95\n      : @520 (gas: 3)\n 19766: t2 = 0x60\n 19769: u32 [t0] = t2\n 19771: fallthrough\n      : @521 (gas: 19)\n 19772: a0 = u64 [s1 + 0x230]\n 19776: a1 = u64 [a0 + 0x48]\n 19779: a2 = u64 [a0 + 0x58]\n 19782: a3 = u64 [a0 + 0x40]\n 19785: a4 = u64 [a0 + 0x50]\n 19788: a5 = reverse a1\n 19790: a1 = reverse a2\n 19792: ra = reverse a3\n 19794: a3 = a1\n 19796: a1 = reverse a4\n 19798: u64 [s1 + 0x218] = a1\n 19802: a1 = a1 | ra\n 19805: a2 = a3 | a5\n 19808: a2 = a2 | a1\n 19811: a2 = a2 >> 0x20\n 19814: a1 = a1 | a5\n 19817: a1 = a1 << 0x20\n 19820: a1 = a1 | a2\n 19823: jump @523 if a1 == 0\n      : @522 (gas: 1)\n 19826: jump @660\n      : @523 (gas: 4)\n 19829: i32 a1 = a3 >> 0x10\n 19832: a2 = s1 + 0x7ff\n 19836: a2 = a2 + 0x1b9\n 19840: jump @525 if a1 == 0\n      : @524 (gas: 1)\n 19843: jump @660\n      : @525 (gas: 6)\n 19846: a1 = a3 + 0x3f\n 19849: u64 [s1 + 0x228] = a3\n 19853: a3 = u64 [s1 + 0x220]\n 19857: t1 = a1 & a3\n 19860: a3 = u64 [s1 + 0x228]\n 19864: jump @527 if t1 <=u 65536\n      : @526 (gas: 1)\n 19870: jump @660\n      : @527 (gas: 1)\n 19873: jump @529 if t2 >=u t1\n      : @528 (gas: 3)\n 19876: u32 [t0] = t1\n 19878: t2 = t1\n 19880: fallthrough\n      : @529 (gas: 44)\n 19881: a1 = u64 [a2 + 0x1e0]\n 19885: u64 [s1 + 0x188] = a1\n 19889: a1 = u64 [a2 + 0x1d8]\n 19893: u64 [s1 + 0x180] = a1\n 19897: a1 = u64 [a2 + 0x1d0]\n 19901: u64 [s1 + 0x178] = a1\n 19905: i32 a1 = a3 + 0\n 19907: u64 [s1 + 0x200] = a1\n 19911: a1 = a1 + a0\n 19914: u8 [a1 + 31] = 0\n 19917: u8 [a1 + 30] = 0\n 19920: u8 [a1 + 29] = 0\n 19923: u8 [a1 + 28] = 0\n 19926: u8 [a1 + 27] = 0\n 19929: u8 [a1 + 26] = 0\n 19932: u8 [a1 + 25] = 0\n 19935: u8 [a1 + 24] = 0\n 19938: u8 [a1 + 23] = 0\n 19941: u8 [a1 + 22] = 0\n 19944: u8 [a1 + 21] = 0\n 19947: u8 [a1 + 20] = 0\n 19950: u8 [a1 + 19] = 0\n 19953: u8 [a1 + 18] = 0\n 19956: u8 [a1 + 17] = 0\n 19959: u8 [a1 + 16] = 0\n 19962: u8 [a1 + 15] = 0\n 19965: u8 [a1 + 14] = 0\n 19968: u8 [a1 + 13] = 0\n 19971: u8 [a1 + 12] = 0\n 19974: u8 [a1 + 11] = 0\n 19977: u8 [a1 + 10] = 0\n 19980: u8 [a1 + 9] = 0\n 19983: u8 [a1 + 8] = 0\n 19986: u8 [a1 + 7] = 0\n 19989: u8 [a1 + 6] = 0\n 19992: u8 [a1 + 5] = 0\n 19995: u8 [a1 + 4] = 0\n 19998: u8 [a1 + 3] = 0xa4\n 20003: u8 [a1 + 2] = 0xe5\n 20008: u8 [a1 + 1] = 0x22\n 20012: u64 [s1 + 0x1d8] = a1\n 20016: u8 [a1 + 0] = 0xd6\n 20020: a0 = u64 [s1 + 0x1a0]\n 20024: jump @531 if t2 >=u a0\n      : @530 (gas: 3)\n 20027: u32 [t0] = a0\n 20029: t2 = a0\n 20031: fallthrough\n      : @531 (gas: 9)\n 20032: a2 = a5 | ra\n 20035: a1 = u64 [s1 + 0x208]\n 20039: a1 = a1 + 0xfffffffffffffffc\n 20042: a1 = a3 <u a1\n 20045: a0 = u64 [s1 + 0x218]\n 20049: a1 = 0 if a0 != 0\n 20051: u64 [s1 + 0x1f8] = a2\n 20055: a1 = 0 if a2 != 0\n 20057: jump @533 if a1 != 0\n      : @532 (gas: 1)\n 20060: jump @660\n      : @533 (gas: 2)\n 20063: a0 = u64 [s1 + 0x200]\n 20067: jump @535 if a0 <u 65532\n      : @534 (gas: 1)\n 20073: jump @660\n      : @535 (gas: 5)\n 20076: a0 = u64 [s1 + 0x228]\n 20080: a1 = a0 + 0x43\n 20083: a0 = u64 [s1 + 0x220]\n 20087: a1 = a1 & a0\n 20090: jump @537 if a1 <=u 65536\n      : @536 (gas: 1)\n 20096: jump @660\n      : @537 (gas: 3)\n 20099: u64 [s1 + 0x1e0] = ra\n 20103: u64 [s1 + 0x1e8] = a5\n 20107: jump @539 if t2 >=u a1\n      : @538 (gas: 3)\n 20110: u32 [t0] = a1\n 20112: t2 = a1\n 20114: fallthrough\n      : @539 (gas: 155)\n 20115: ra = u64 [s1 + 0x198]\n 20119: a1 = u8 [ra + 0x19]\n 20122: a2 = u8 [ra + 0x18]\n 20125: a3 = u8 [ra + 0x1a]\n 20128: a4 = u8 [ra + 0x1b]\n 20131: a1 = a1 << 0x8\n 20134: a1 = a1 | a2\n 20137: a3 = a3 << 0x10\n 20140: a4 = a4 << 0x18\n 20143: a3 = a3 | a4\n 20146: a1 = a1 | a3\n 20149: a2 = u8 [ra + 0x1d]\n 20152: a3 = u8 [ra + 0x1c]\n 20155: a4 = u8 [ra + 0x1e]\n 20158: a5 = u8 [ra + 0x1f]\n 20161: a2 = a2 << 0x8\n 20164: a2 = a2 | a3\n 20167: a4 = a4 << 0x10\n 20170: a5 = a5 << 0x18\n 20173: a4 = a4 | a5\n 20176: a2 = a2 | a4\n 20179: a2 = a2 << 0x20\n 20182: a3 = a2 | a1\n 20185: a1 = u8 [ra + 0x11]\n 20188: a2 = u8 [ra + 0x10]\n 20191: a4 = u8 [ra + 0x12]\n 20194: a5 = u8 [ra + 0x13]\n 20197: a1 = a1 << 0x8\n 20200: a1 = a1 | a2\n 20203: a4 = a4 << 0x10\n 20206: a5 = a5 << 0x18\n 20209: a4 = a4 | a5\n 20212: a1 = a1 | a4\n 20215: a2 = u8 [ra + 0x15]\n 20218: a4 = u8 [ra + 0x14]\n 20221: a5 = u8 [ra + 0x16]\n 20224: a0 = u8 [ra + 0x17]\n 20227: a2 = a2 << 0x8\n 20230: a2 = a2 | a4\n 20233: a5 = a5 << 0x10\n 20236: a0 = a0 << 0x18\n 20239: a0 = a0 | a5\n 20242: a0 = a0 | a2\n 20245: a0 = a0 << 0x20\n 20248: a1 = a1 | a0\n 20251: a0 = u8 [ra + 0x9]\n 20254: a2 = u8 [ra + 0x8]\n 20257: a4 = u8 [ra + 0xa]\n 20260: a5 = u8 [ra + 0xb]\n 20263: a0 = a0 << 0x8\n 20266: a0 = a0 | a2\n 20269: a4 = a4 << 0x10\n 20272: a5 = a5 << 0x18\n 20275: a4 = a4 | a5\n 20278: t0 = a4 | a0\n 20281: a2 = u8 [ra + 0xd]\n 20284: a4 = u8 [ra + 0xc]\n 20287: a5 = u8 [ra + 0xe]\n 20290: a0 = u8 [ra + 0xf]\n 20293: a2 = a2 << 0x8\n 20296: a2 = a2 | a4\n 20299: a5 = a5 << 0x10\n 20302: a0 = a0 << 0x18\n 20305: a0 = a0 | a5\n 20308: a0 = a0 | a2\n 20311: a0 = a0 << 0x20\n 20314: a2 = a0 | t0\n 20317: t0 = u8 [ra + 0x1]\n 20320: a4 = u8 [ra]\n 20322: a5 = u8 [ra + 0x2]\n 20325: a0 = u8 [ra + 0x3]\n 20328: t0 = t0 << 0x8\n 20331: a4 = t0 | a4\n 20334: a5 = a5 << 0x10\n 20337: a0 = a0 << 0x18\n 20340: a0 = a0 | a5\n 20343: t0 = a0 | a4\n 20346: a4 = u8 [ra + 0x5]\n 20349: a5 = u8 [ra + 0x4]\n 20352: a0 = u8 [ra + 0x6]\n 20355: ra = u8 [ra + 0x7]\n 20358: a4 = a4 << 0x8\n 20361: a4 = a4 | a5\n 20364: a0 = a0 << 0x10\n 20367: ra = ra << 0x18\n 20370: a0 = ra | a0\n 20373: a0 = a0 | a4\n 20376: a0 = a0 << 0x20\n 20379: a0 = a0 | t0\n 20382: a4 = u64 [s1 + 0x228]\n 20386: i32 a4 = a4 + 0x4\n 20389: a5 = u64 [s1 + 0x230]\n 20393: a4 = a4 + a5\n 20396: a5 = a0 >> 0x38\n 20399: u8 [a4 + 0x7] = a5\n 20402: a5 = a0 >> 0x30\n 20405: u8 [a4 + 0x6] = a5\n 20408: a5 = a0 >> 0x28\n 20411: u8 [a4 + 0x5] = a5\n 20414: a5 = a0 >> 0x20\n 20417: u8 [a4 + 0x4] = a5\n 20420: a5 = a0 >> 0x18\n 20423: u8 [a4 + 0x3] = a5\n 20426: a5 = a0 >> 0x10\n 20429: u8 [a4 + 0x2] = a5\n 20432: a5 = a0 >> 0x8\n 20435: u8 [a4 + 0x1] = a5\n 20438: u8 [a4] = a0\n 20440: a0 = a2 >> 0x38\n 20443: u8 [a4 + 0xf] = a0\n 20446: a0 = a2 >> 0x30\n 20449: u8 [a4 + 0xe] = a0\n 20452: a0 = a2 >> 0x28\n 20455: u8 [a4 + 0xd] = a0\n 20458: a0 = a2 >> 0x20\n 20461: u8 [a4 + 0xc] = a0\n 20464: a0 = a2 >> 0x18\n 20467: u8 [a4 + 0xb] = a0\n 20470: a0 = a2 >> 0x10\n 20473: u8 [a4 + 0xa] = a0\n 20476: u8 [a4 + 0x8] = a2\n 20479: a2 = a2 >> 0x8\n 20482: u8 [a4 + 0x9] = a2\n 20485: a0 = a1 >> 0x38\n 20488: u8 [a4 + 0x17] = a0\n 20491: a0 = a1 >> 0x30\n 20494: u8 [a4 + 0x16] = a0\n 20497: a0 = a1 >> 0x28\n 20500: u8 [a4 + 0x15] = a0\n 20503: a0 = a1 >> 0x20\n 20506: u8 [a4 + 0x14] = a0\n 20509: a0 = a1 >> 0x18\n 20512: u8 [a4 + 0x13] = a0\n 20515: a0 = a1 >> 0x10\n 20518: u8 [a4 + 0x12] = a0\n 20521: u8 [a4 + 0x10] = a1\n 20524: a1 = a1 >> 0x8\n 20527: u8 [a4 + 0x11] = a1\n 20530: a0 = a3 >> 0x38\n 20533: u8 [a4 + 0x1f] = a0\n 20536: a0 = a3 >> 0x30\n 20539: u8 [a4 + 0x1e] = a0\n 20542: a0 = a3 >> 0x28\n 20545: u8 [a4 + 0x1d] = a0\n 20548: a0 = a3 >> 0x20\n 20551: u8 [a4 + 0x1c] = a0\n 20554: a0 = a3 >> 0x18\n 20557: u8 [a4 + 0x1b] = a0\n 20560: a0 = a3 >> 0x10\n 20563: u8 [a4 + 0x1a] = a0\n 20566: u8 [a4 + 0x18] = a3\n 20569: a3 = a3 >> 0x8\n 20572: u8 [a4 + 0x19] = a3\n 20575: a0 = u64 [s1 + 0xa8]\n 20579: jump @541 if a0 <=u 2046\n      : @540 (gas: 1)\n 20584: jump @660\n      : @541 (gas: 5)\n 20587: a3 = u64 [s1 + 0x238]\n 20591: a0 = u64 [s1 + 0x158]\n 20595: a1 = u64 [s1 + 0x1e8]\n 20599: a2 = u64 [s1 + 0x1e0]\n 20603: jump @543 if t2 >=u a0\n      : @542 (gas: 3)\n 20606: t2 = u64 [s1 + 0x158]\n 20610: u32 [a3] = t2\n 20612: fallthrough\n      : @543 (gas: 13)\n 20613: a0 = a1 >u 0\n 20615: a1 = a2 >u 0\n 20617: a1 = a0 if a2 == 0\n 20620: a0 = u64 [s1 + 0x208]\n 20624: a0 = a0 + 0xffffffffffffffdb\n 20627: a2 = u64 [s1 + 0x228]\n 20631: a0 = a0 <u a2\n 20634: a5 = u64 [s1 + 0x218]\n 20638: a2 = a5 >u 0\n 20640: a2 = a0 if a5 == 0\n 20643: a0 = u64 [s1 + 0x1f8]\n 20647: a2 = a1 if a0 != 0\n 20650: jump @545 if a2 == 0\n      : @544 (gas: 1)\n 20653: jump @660\n      : @545 (gas: 2)\n 20656: a1 = u64 [s1 + 0x200]\n 20660: jump @547 if a1 <=u 65499\n      : @546 (gas: 1)\n 20666: jump @660\n      : @547 (gas: 5)\n 20669: a0 = u64 [s1 + 0x228]\n 20673: a0 = a0 + 0x63\n 20676: a1 = u64 [s1 + 0x220]\n 20680: a1 = a1 & a0\n 20683: jump @549 if a1 <=u 65536\n      : @548 (gas: 1)\n 20689: jump @660\n      : @549 (gas: 2)\n 20692: u64 [s1 + 0x1d0] = t1\n 20696: jump @551 if t2 >=u a1\n      : @550 (gas: 3)\n 20699: u32 [a3] = a1\n 20701: t2 = a1\n 20703: fallthrough\n      : @551 (gas: 161)\n 20704: t1 = u64 [s1 + 0x190]\n 20708: a0 = u8 [t1 + 0x19]\n 20711: a1 = u8 [t1 + 0x18]\n 20714: a2 = u8 [t1 + 0x1a]\n 20717: a3 = u8 [t1 + 0x1b]\n 20720: a0 = a0 << 0x8\n 20723: a0 = a0 | a1\n 20726: a2 = a2 << 0x10\n 20729: a3 = a3 << 0x18\n 20732: a2 = a2 | a3\n 20735: a0 = a0 | a2\n 20738: a1 = u8 [t1 + 0x1d]\n 20741: a2 = u8 [t1 + 0x1c]\n 20744: a3 = u8 [t1 + 0x1e]\n 20747: a4 = u8 [t1 + 0x1f]\n 20750: a1 = a1 << 0x8\n 20753: a1 = a1 | a2\n 20756: a3 = a3 << 0x10\n 20759: a4 = a4 << 0x18\n 20762: a3 = a3 | a4\n 20765: a1 = a1 | a3\n 20768: a1 = a1 << 0x20\n 20771: ra = a1 | a0\n 20774: a0 = u8 [t1 + 0x11]\n 20777: a1 = u8 [t1 + 0x10]\n 20780: a2 = u8 [t1 + 0x12]\n 20783: a4 = u8 [t1 + 0x13]\n 20786: a0 = a0 << 0x8\n 20789: a0 = a0 | a1\n 20792: a2 = a2 << 0x10\n 20795: a4 = a4 << 0x18\n 20798: a2 = a2 | a4\n 20801: a0 = a0 | a2\n 20804: a1 = u8 [t1 + 0x15]\n 20807: a2 = u8 [t1 + 0x14]\n 20810: a4 = u8 [t1 + 0x16]\n 20813: a5 = u8 [t1 + 0x17]\n 20816: a1 = a1 << 0x8\n 20819: a1 = a1 | a2\n 20822: a4 = a4 << 0x10\n 20825: a5 = a5 << 0x18\n 20828: a4 = a4 | a5\n 20831: a1 = a1 | a4\n 20834: a1 = a1 << 0x20\n 20837: a1 = a1 | a0\n 20840: a0 = u8 [t1 + 0x9]\n 20843: a2 = u8 [t1 + 0x8]\n 20846: a4 = u8 [t1 + 0xa]\n 20849: a5 = u8 [t1 + 0xb]\n 20852: a0 = a0 << 0x8\n 20855: a0 = a0 | a2\n 20858: a4 = a4 << 0x10\n 20861: a5 = a5 << 0x18\n 20864: a4 = a4 | a5\n 20867: a0 = a0 | a4\n 20870: a2 = u8 [t1 + 0xd]\n 20873: a4 = u8 [t1 + 0xc]\n 20876: a5 = u8 [t1 + 0xe]\n 20879: a3 = u8 [t1 + 0xf]\n 20882: a2 = a2 << 0x8\n 20885: a2 = a2 | a4\n 20888: a5 = a5 << 0x10\n 20891: a3 = a3 << 0x18\n 20894: a3 = a3 | a5\n 20897: a2 = a2 | a3\n 20900: a2 = a2 << 0x20\n 20903: a4 = a2 | a0\n 20906: a0 = u8 [t1 + 0x1]\n 20909: a2 = u8 [t1]\n 20911: a3 = u8 [t1 + 0x2]\n 20914: a5 = u8 [t1 + 0x3]\n 20917: a0 = a0 << 0x8\n 20920: a0 = a0 | a2\n 20923: a3 = a3 << 0x10\n 20926: a5 = a5 << 0x18\n 20929: a3 = a3 | a5\n 20932: t0 = a3 | a0\n 20935: a2 = u8 [t1 + 0x5]\n 20938: a3 = u8 [t1 + 0x4]\n 20941: a5 = u8 [t1 + 0x6]\n 20944: a0 = u8 [t1 + 0x7]\n 20947: a2 = a2 << 0x8\n 20950: a2 = a2 | a3\n 20953: a5 = a5 << 0x10\n 20956: a0 = a0 << 0x18\n 20959: a0 = a0 | a5\n 20962: a0 = a0 | a2\n 20965: a0 = a0 << 0x20\n 20968: t0 = a0 | t0\n 20971: a3 = u64 [s1 + 0x228]\n 20975: i32 a2 = a3 + 0x24\n 20978: a0 = u64 [s1 + 0x230]\n 20982: a2 = a2 + a0\n 20985: a0 = a4 >> 0x38\n 20988: u8 [a2 + 0xf] = a0\n 20991: a0 = a4 >> 0x30\n 20994: u8 [a2 + 0xe] = a0\n 20997: a0 = a4 >> 0x28\n 21000: u8 [a2 + 0xd] = a0\n 21003: a0 = a4 >> 0x20\n 21006: u8 [a2 + 0xc] = a0\n 21009: a0 = a4 >> 0x18\n 21012: u8 [a2 + 0xb] = a0\n 21015: a0 = a4 >> 0x10\n 21018: u8 [a2 + 0xa] = a0\n 21021: a0 = a4 >> 0x8\n 21024: u8 [a2 + 0x9] = a0\n 21027: u8 [a2 + 0x8] = a4\n 21030: a0 = t0 >> 0x38\n 21033: u8 [a2 + 0x7] = a0\n 21036: a0 = t0 >> 0x30\n 21039: u8 [a2 + 0x6] = a0\n 21042: a0 = t0 >> 0x28\n 21045: u8 [a2 + 0x5] = a0\n 21048: a0 = t0 >> 0x20\n 21051: u8 [a2 + 0x4] = a0\n 21054: a0 = t0 >> 0x18\n 21057: u8 [a2 + 0x3] = a0\n 21060: a0 = t0 >> 0x10\n 21063: u8 [a2 + 0x2] = a0\n 21066: a0 = t0 >> 0x8\n 21069: u8 [a2 + 0x1] = a0\n 21072: u8 [a2] = t0\n 21074: a0 = a1 >> 0x38\n 21077: u8 [a2 + 0x17] = a0\n 21080: a0 = a1 >> 0x30\n 21083: u8 [a2 + 0x16] = a0\n 21086: a0 = a1 >> 0x28\n 21089: u8 [a2 + 0x15] = a0\n 21092: a0 = a1 >> 0x20\n 21095: u8 [a2 + 0x14] = a0\n 21098: a0 = a1 >> 0x18\n 21101: u8 [a2 + 0x13] = a0\n 21104: a0 = a1 >> 0x10\n 21107: u8 [a2 + 0x12] = a0\n 21110: u8 [a2 + 0x10] = a1\n 21113: a1 = a1 >> 0x8\n 21116: u8 [a2 + 0x11] = a1\n 21119: a0 = ra >> 0x38\n 21122: u8 [a2 + 0x1f] = a0\n 21125: a0 = ra >> 0x30\n 21128: u8 [a2 + 0x1e] = a0\n 21131: a0 = ra >> 0x28\n 21134: u8 [a2 + 0x1d] = a0\n 21137: a0 = ra >> 0x20\n 21140: u8 [a2 + 0x1c] = a0\n 21143: a0 = ra >> 0x18\n 21146: u8 [a2 + 0x1b] = a0\n 21149: a0 = ra >> 0x10\n 21152: u8 [a2 + 0x1a] = a0\n 21155: a0 = u64 [s1 + 0x208]\n 21159: a0 = a0 + 0xffffffffffffffbc\n 21162: a0 = a3 <u a0\n 21165: a1 = u64 [s1 + 0x218]\n 21169: a0 = 0 if a1 != 0\n 21171: a1 = u64 [s1 + 0x1f8]\n 21175: a0 = 0 if a1 != 0\n 21177: u8 [a2 + 0x18] = ra\n 21180: a1 = ra >> 0x8\n 21183: u8 [a2 + 0x19] = a1\n 21186: jump @660 if a0 == 0\n      : @552 (gas: 3)\n 21190: a5 = u64 [s1 + 0x1d0]\n 21194: a1 = u64 [s1 + 0x200]\n 21198: jump @660 if a1 >=u 65468\n      : @553 (gas: 4)\n 21205: a0 = a3 + 0x83\n 21209: a1 = u64 [s1 + 0x220]\n 21213: a1 = a1 & a0\n 21216: jump @660 if a1 >u 65536\n      : @554 (gas: 3)\n 21223: a0 = u64 [s1 + 0x230]\n 21227: a3 = u64 [s1 + 0x238]\n 21231: jump @556 if t2 >=u a1\n      : @555 (gas: 3)\n 21234: u32 [a3] = a1\n 21236: t2 = a1\n 21238: fallthrough\n      : @556 (gas: 86)\n 21239: a1 = u64 [s1 + 0x228]\n 21243: i32 a1 = a1 + 0x44\n 21246: a1 = a1 + a0\n 21249: a4 = u64 [s1 + 0x120]\n 21253: u8 [a1 + 0x8] = a4\n 21256: a2 = u64 [s1 + 0x128]\n 21260: a0 = a2 >> 0x38\n 21263: u8 [a1 + 0x7] = a0\n 21266: a0 = a2 >> 0x30\n 21269: u8 [a1 + 0x6] = a0\n 21272: a0 = a2 >> 0x28\n 21275: u8 [a1 + 0x5] = a0\n 21278: a0 = a2 >> 0x20\n 21281: u8 [a1 + 0x4] = a0\n 21284: a0 = a2 >> 0x18\n 21287: u8 [a1 + 0x3] = a0\n 21290: a0 = a2 >> 0x10\n 21293: u8 [a1 + 0x2] = a0\n 21296: a0 = a2 >> 0x8\n 21299: u8 [a1 + 0x1] = a0\n 21302: u8 [a1] = a2\n 21304: a2 = u64 [s1 + 0x118]\n 21308: u8 [a1 + 0x10] = a2\n 21311: a0 = a4 >> 0x38\n 21314: u8 [a1 + 0xf] = a0\n 21317: a0 = a4 >> 0x30\n 21320: u8 [a1 + 0xe] = a0\n 21323: a0 = a4 >> 0x28\n 21326: u8 [a1 + 0xd] = a0\n 21329: a0 = a4 >> 0x20\n 21332: u8 [a1 + 0xc] = a0\n 21335: a0 = a4 >> 0x18\n 21338: u8 [a1 + 0xb] = a0\n 21341: a0 = a4 >> 0x10\n 21344: u8 [a1 + 0xa] = a0\n 21347: a0 = a4 >> 0x8\n 21350: u8 [a1 + 0x9] = a0\n 21353: a4 = u64 [s1 + 0x110]\n 21357: u8 [a1 + 0x18] = a4\n 21360: a0 = a2 >> 0x38\n 21363: u8 [a1 + 0x17] = a0\n 21366: a0 = a2 >> 0x30\n 21369: u8 [a1 + 0x16] = a0\n 21372: a0 = a2 >> 0x28\n 21375: u8 [a1 + 0x15] = a0\n 21378: a0 = a2 >> 0x20\n 21381: u8 [a1 + 0x14] = a0\n 21384: a0 = a2 >> 0x18\n 21387: u8 [a1 + 0x13] = a0\n 21390: a0 = a2 >> 0x10\n 21393: u8 [a1 + 0x12] = a0\n 21396: a0 = a2 >> 0x8\n 21399: u8 [a1 + 0x11] = a0\n 21402: a0 = a4 >> 0x38\n 21405: u8 [a1 + 0x1f] = a0\n 21408: a0 = a4 >> 0x30\n 21411: u8 [a1 + 0x1e] = a0\n 21414: a0 = a4 >> 0x28\n 21417: u8 [a1 + 0x1d] = a0\n 21420: a0 = a4 >> 0x20\n 21423: u8 [a1 + 0x1c] = a0\n 21426: a0 = a4 >> 0x18\n 21429: u8 [a1 + 0x1b] = a0\n 21432: a0 = a4 >> 0x10\n 21435: u8 [a1 + 0x1a] = a0\n 21438: a0 = a4 >> 0x8\n 21441: u8 [a1 + 0x19] = a0\n 21444: a2 = u64 [s1 + 0x180]\n 21448: a0 = a2 >> 0x20\n 21451: a4 = u64 [s1 + 0x188]\n 21455: a1 = a4 << 0x20\n 21458: a0 = a0 | a1\n 21461: a1 = u64 [s1 + 0x178]\n 21465: a1 = a1 >> 0x20\n 21468: a2 = a2 << 0x20\n 21471: a1 = a1 | a2\n 21474: a2 = u64 [s1 + 0xa0]\n 21478: u64 [a2] = a1\n 21480: a1 = a4 >> 0x20\n 21483: u32 [a2 + 0x10] = a1\n 21486: u64 [a2 + 0x8] = a0\n 21489: u64 [s1 + 1976] = 0\n 21493: u64 [s1 + 1968] = 0\n 21497: u64 [s1 + 1960] = 0\n 21501: u64 [s1 + 1952] = 0\n 21505: jump @558 if t2 >=u a5\n      : @557 (gas: 2)\n 21508: u32 [a3] = a5\n 21510: fallthrough\n      : @558 (gas: 18)\n 21511: u32 [s1 + 1984] = 0x20\n 21516: u64 [s1 + 2040] = 0\n 21520: u64 [s1 + 2032] = 0\n 21524: u64 [s1 + 2024] = 0\n 21528: u64 [s1 + 2016] = 0\n 21532: a0 = u64 [s1 + 0x1d8]\n 21536: a0 = a0 << 0x20\n 21539: a0 = a0 >> 0x20\n 21542: a4 = u64 [s1 + 0x80]\n 21546: a4 = a4 | a0\n 21549: a5 = u64 [s1 + 0x88]\n 21553: a5 = a5 | a0\n 21556: a1 = 0xffffffffffffffff\n 21559: a2 = 0xffffffffffffffff\n 21562: a0 = u64 [s1 + 0x98]\n 21566: a3 = u64 [s1 + 0x90]\n 21570: ecalli 0 // 'call'\n 21571: fallthrough\n      : @559 (gas: 1)\n 21572: jump @561 if a0 == 0\n      : @560 (gas: 1)\n 21575: jump @692\n      : @561 (gas: 2)\n 21578: ecalli 10 // 'return_data_size'\n 21580: fallthrough\n      : @562 (gas: 2)\n 21581: t0 = 0x20\n 21584: jump @564 if a0 >=u t0\n      : @563 (gas: 3)\n 21587: ecalli 10 // 'return_data_size'\n 21589: t0 = a0\n 21591: fallthrough\n      : @564 (gas: 28)\n 21592: a0 = 0\n 21594: a3 = u64 [s1 + 0x1e0]\n 21598: a1 = t0 + 0x1f\n 21601: a2 = a1 <u t0\n 21604: a2 = a2 & 0x1\n 21607: a1 = a1 & 0xffffffffffffffe0\n 21610: t1 = u64 [s1 + 0x228]\n 21614: t1 = t1 + a1\n 21617: a1 = t1 <u a1\n 21620: a4 = u64 [s1 + 0x218]\n 21624: a4 = a4 + a2\n 21627: a4 = a4 + a1\n 21630: a5 = a4 ^ a2\n 21633: a2 = a4 <u a2\n 21636: a2 = a1 if a5 == 0\n 21639: a1 = u64 [s1 + 0x1e8]\n 21643: a5 = a1 + a2\n 21646: a1 = a5 <u a1\n 21649: a1 = a1 + a3\n 21652: a2 = a5 >u 0\n 21654: a3 = a1 >u 0\n 21656: a3 = a2 if a1 == 0\n 21659: t2 = a5 | a1\n 21662: a2 = u64 [s1 + 0x238]\n 21666: ra = i32 [a2]\n 21668: a2 = a4 >u 0\n 21670: a2 = a3 if t2 != 0\n 21673: jump @566 if a2 == 0\n      : @565 (gas: 1)\n 21676: jump @724\n      : @566 (gas: 1)\n 21679: jump @568 if ra >u 95\n      : @567 (gas: 4)\n 21683: ra = 0x60\n 21686: a2 = u64 [s1 + 0x238]\n 21690: u32 [a2] = ra\n 21692: fallthrough\n      : @568 (gas: 17)\n 21693: a1 = reverse a1\n 21695: a2 = reverse a5\n 21697: a3 = reverse a4\n 21699: a4 = reverse t1\n 21701: a5 = u64 [s1 + 0x230]\n 21705: u64 [a5 + 0x58] = a4\n 21708: u64 [a5 + 0x50] = a3\n 21711: u64 [a5 + 0x48] = a2\n 21714: a3 = t0 <u 0x20\n 21717: a3 = a3 ^ 0x1\n 21720: a3 = 0 if a0 != 0\n 21722: a4 = 0\n 21724: a4 = 0 if a0 == 0\n 21726: a0 = 0\n 21728: a4 = a3 if a0 == 0\n 21731: u64 [a5 + 0x40] = a1\n 21734: jump @570 if a4 != 0\n      : @569 (gas: 1)\n 21737: jump @719\n      : @570 (gas: 2)\n 21740: a1 = u64 [s1 + 0x1d0]\n 21744: jump @572 if ra <u a1\n      : @571 (gas: 1)\n 21747: jump @457\n      : @572 (gas: 3)\n 21750: a0 = u64 [s1 + 0x238]\n 21754: u32 [a0] = a1\n 21756: jump @457\n      : @573 (gas: 1)\n 21759: jump @575 if a0 == 3266579172\n      : @574 (gas: 1)\n 21766: jump @732\n      : @575 (gas: 12)\n 21769: a0 = s1 + 0x1000\n 21773: u64 [a0 + 4294965528] = 0\n 21777: a0 = s1 + 0x1000\n 21781: u64 [a0 + 4294965520] = 0\n 21785: a0 = s1 + 0x1000\n 21789: u64 [a0 + 4294965512] = 0\n 21793: a0 = s1 + 0x1000\n 21797: u64 [a0 + 4294965504] = 0\n 21801: a0 = s1 + 0x1000\n 21805: i32 a0 = a0 + 0xfffffffffffff900\n 21809: ecalli 14 // 'value_transferred'\n 21811: fallthrough\n      : @576 (gas: 12)\n 21812: a0 = s1 + 0x1000\n 21816: a0 = u64 [a0 + 0xfffffffffffff910]\n 21820: a1 = s1 + 0x1000\n 21824: a1 = u64 [a1 + 0xfffffffffffff918]\n 21828: a2 = s1 + 0x1000\n 21832: a2 = u64 [a2 + 0xfffffffffffff908]\n 21836: a3 = s1 + 0x1000\n 21840: a3 = u64 [a3 + 0xfffffffffffff900]\n 21844: a1 = a1 | a2\n 21847: a0 = a0 | a3\n 21850: a0 = a0 | a1\n 21853: jump @578 if a0 == 0\n      : @577 (gas: 1)\n 21856: jump @732\n      : @578 (gas: 3)\n 21859: a0 = u64 [s1 + 0x228]\n 21863: a0 = i32 [a0]\n 21865: jump @580 if a0 >u 35\n      : @579 (gas: 1)\n 21869: jump @732\n      : @580 (gas: 5)\n 21872: a0 = s1 + 0x1000\n 21876: i32 a0 = a0 + 0xfffffffffffff920\n 21880: a1 = 0x4\n 21883: ecalli 2 // 'call_data_load'\n 21885: fallthrough\n      : @581 (gas: 20)\n 21886: a0 = s1 + 0x1000\n 21890: a0 = u64 [a0 + 0xfffffffffffff920]\n 21894: a1 = s1 + 0x1000\n 21898: a1 = u64 [a1 + 0xfffffffffffff938]\n 21902: a2 = s1 + 0x1000\n 21906: a2 = u64 [a2 + 0xfffffffffffff930]\n 21910: a3 = s1 + 0x1000\n 21914: a3 = u64 [a3 + 0xfffffffffffff928]\n 21918: a4 = u64 [s1 + 0x238]\n 21922: t0 = i32 [a4]\n 21924: a1 = reverse a1\n 21926: a2 = reverse a2\n 21928: a3 = reverse a3\n 21930: a0 = reverse a0\n 21932: a5 = u64 [s1 + 0x230]\n 21936: u64 [a5 + 0x18] = a0\n 21939: u64 [a5 + 0x10] = a3\n 21942: u64 [a5 + 0x8] = a2\n 21945: u64 [a5] = a1\n 21947: jump @583 if t0 >u 63\n      : @582 (gas: 2)\n 21951: u32 [a4 + 0] = 0x40\n 21954: fallthrough\n      : @583 (gas: 39)\n 21955: u64 [a5 + 48] = 0\n 21958: u64 [a5 + 40] = 0\n 21961: u64 [a5 + 32] = 0\n 21964: a0 = 0x500000000000000\n 21974: u64 [a5 + 0x38] = a0\n 21977: a0 = sp + 0xffffffffffffffe0\n 21980: a2 = a0 & 0xffffffffffffffe0\n 21983: u64 [s1 + 0x228] = a2\n 21987: sp = a2\n 21989: i32 a0 = a5 + 0\n 21991: i32 a2 = a2 + 0\n 21993: a1 = 0x40\n 21996: ecalli 7 // 'hash_keccak_256'\n 21998: a3 = u64 [s1 + 0x228]\n 22002: a0 = u64 [a3 + 0x18]\n 22005: a1 = u64 [a3 + 0x10]\n 22008: a2 = u64 [a3 + 0x8]\n 22011: a3 = u64 [a3]\n 22013: a4 = s1 + 0x7ff\n 22017: a4 = a4 + 0x1b9\n 22021: u64 [a4 + 0x1c0] = a0\n 22025: u64 [a4 + 0x1b8] = a1\n 22029: u64 [a4 + 0x1b0] = a2\n 22033: u64 [a4 + 0x1a8] = a3\n 22037: u64 [a4 + 480] = 0\n 22041: u64 [a4 + 472] = 0\n 22045: u64 [a4 + 464] = 0\n 22049: u64 [a4 + 456] = 0\n 22053: u32 [a4 + 488] = 0x20\n 22058: a0 = s1 + 0x1000\n 22062: i32 a1 = a0 + 0xfffffffffffffb60\n 22066: a0 = s1 + 0x1000\n 22070: i32 a3 = a0 + 0xfffffffffffffb80\n 22074: a0 = s1 + 0x1000\n 22078: i32 a4 = a0 + 0xfffffffffffffba0\n 22082: a2 = 0xffffffffffffffff\n 22085: a0 = 0\n 22087: ecalli 6 // 'get_storage'\n 22089: fallthrough\n      : @584 (gas: 3)\n 22090: a2 = u64 [s1 + 0x238]\n 22094: a1 = i32 [a2]\n 22096: jump @586 if a1 >u 95\n      : @585 (gas: 3)\n 22100: a1 = 0x60\n 22103: u32 [a2] = a1\n 22105: fallthrough\n      : @586 (gas: 17)\n 22106: a4 = u64 [s1 + 0x230]\n 22110: a0 = u64 [a4 + 0x48]\n 22113: a2 = u64 [a4 + 0x58]\n 22116: a3 = u64 [a4 + 0x40]\n 22119: a4 = u64 [a4 + 0x50]\n 22122: a5 = reverse a0\n 22124: a0 = reverse a2\n 22126: a2 = reverse a3\n 22128: a3 = reverse a4\n 22130: a2 = a2 | a3\n 22133: a3 = a0 | a5\n 22136: a3 = a3 | a2\n 22139: a3 = a3 >> 0x20\n 22142: a2 = a2 | a5\n 22145: a2 = a2 << 0x20\n 22148: a2 = a2 | a3\n 22151: jump @660 if a2 != 0\n      : @587 (gas: 2)\n 22155: i32 a2 = a0 >> 0x10\n 22158: jump @660 if a2 != 0\n      : @588 (gas: 3)\n 22162: a2 = a0 + 0x3f\n 22165: a4 = a2 & 0x1ffe0\n 22170: jump @660 if a4 >u 65536\n      : @589 (gas: 5)\n 22177: a3 = s1 + 0x7ff\n 22181: a3 = a3 + 0x1b9\n 22185: a2 = u64 [a3 + 0x1e0]\n 22189: a3 = u64 [a3 + 0x1d8]\n 22193: jump @591 if a1 >=u a4\n      : @590 (gas: 3)\n 22196: a1 = u64 [s1 + 0x238]\n 22200: u32 [a1] = a4\n 22202: fallthrough\n      : @591 (gas: 43)\n 22203: i32 a1 = a0 + 0\n 22205: a4 = u64 [s1 + 0x230]\n 22209: a1 = a1 + a4\n 22212: a4 = 0xffffffffffffff\n 22222: a4 = a4 ^ a2\n 22225: a3 = a4 | ~a3\n 22228: a2 = a2 >> 0x38\n 22231: a2 = a2 >u 0\n 22233: a2 = 0 if a3 == 0\n 22235: u8 [a1 + 30] = 0\n 22238: u8 [a1 + 29] = 0\n 22241: u8 [a1 + 28] = 0\n 22244: u8 [a1 + 27] = 0\n 22247: u8 [a1 + 26] = 0\n 22250: u8 [a1 + 25] = 0\n 22253: u8 [a1 + 24] = 0\n 22256: u8 [a1 + 23] = 0\n 22259: u8 [a1 + 22] = 0\n 22262: u8 [a1 + 21] = 0\n 22265: u8 [a1 + 20] = 0\n 22268: u8 [a1 + 19] = 0\n 22271: u8 [a1 + 18] = 0\n 22274: u8 [a1 + 17] = 0\n 22277: u8 [a1 + 16] = 0\n 22280: u8 [a1 + 15] = 0\n 22283: u8 [a1 + 14] = 0\n 22286: u8 [a1 + 13] = 0\n 22289: u8 [a1 + 12] = 0\n 22292: u8 [a1 + 11] = 0\n 22295: u8 [a1 + 10] = 0\n 22298: u8 [a1 + 9] = 0\n 22301: u8 [a1 + 8] = 0\n 22304: u8 [a1 + 7] = 0\n 22307: u8 [a1 + 6] = 0\n 22310: u8 [a1 + 5] = 0\n 22313: u8 [a1 + 4] = 0\n 22316: u8 [a1 + 3] = 0\n 22319: u8 [a1 + 2] = 0\n 22322: u8 [a1 + 1] = 0\n 22325: u8 [a1 + 0] = 0\n 22327: u8 [a1 + 0x1f] = a2\n 22330: a1 = 0x20\n 22333: ra = 40, jump @8\n      : @592 [@dyn 20] (gas: 5)\n 22338: i32 a1 = a0 + 0\n 22340: a2 = 0x20\n 22343: a0 = 0\n 22345: ecalli 11 // 'seal_return'\n 22347: fallthrough\n      : @593 (gas: 2)\n 22348: ra = u64 [s1 + 0x230]\n 22352: jump @595 if t2 >u 95\n      : @594 (gas: 3)\n 22356: t2 = 0x60\n 22359: u32 [a4] = t2\n 22361: fallthrough\n      : @595 (gas: 16)\n 22362: a0 = u64 [ra + 0x48]\n 22365: a2 = u64 [ra + 0x58]\n 22368: a3 = u64 [ra + 0x40]\n 22371: a1 = u64 [ra + 0x50]\n 22374: a5 = reverse a0\n 22376: a0 = reverse a2\n 22378: a4 = reverse a3\n 22380: a2 = reverse a1\n 22382: a1 = a2 | a4\n 22385: a3 = a0 | a5\n 22388: a3 = a3 | a1\n 22391: a3 = a3 >> 0x20\n 22394: a1 = a1 | a5\n 22397: a1 = a1 << 0x20\n 22400: a1 = a1 | a3\n 22403: jump @660 if a1 != 0\n      : @596 (gas: 2)\n 22407: i32 a1 = a0 >> 0x10\n 22410: jump @660 if a1 != 0\n      : @597 (gas: 4)\n 22414: t1 = 0x1ffe0\n 22419: a1 = a0 + 0x3f\n 22422: a3 = a1 & t1\n 22425: jump @660 if a3 >u 65536\n      : @598 (gas: 1)\n 22432: jump @600 if t2 >=u a3\n      : @599 (gas: 4)\n 22435: a1 = u64 [s1 + 0x238]\n 22439: u32 [a1] = a3\n 22441: t2 = a3\n 22443: fallthrough\n      : @600 (gas: 40)\n 22444: i32 t0 = a0 + 0\n 22446: a3 = ra + t0\n 22449: u8 [a3 + 31] = 0\n 22452: u8 [a3 + 30] = 0\n 22455: u8 [a3 + 29] = 0\n 22458: u8 [a3 + 28] = 0\n 22461: u8 [a3 + 27] = 0\n 22464: u8 [a3 + 26] = 0\n 22467: u8 [a3 + 25] = 0\n 22470: u8 [a3 + 24] = 0\n 22473: u8 [a3 + 23] = 0\n 22476: u8 [a3 + 22] = 0\n 22479: u8 [a3 + 21] = 0\n 22482: u8 [a3 + 20] = 0\n 22485: u8 [a3 + 19] = 0\n 22488: u8 [a3 + 18] = 0\n 22491: u8 [a3 + 17] = 0\n 22494: u8 [a3 + 16] = 0\n 22497: u8 [a3 + 15] = 0\n 22500: u8 [a3 + 14] = 0\n 22503: u8 [a3 + 13] = 0\n 22506: u8 [a3 + 12] = 0\n 22509: u8 [a3 + 11] = 0\n 22512: u8 [a3 + 10] = 0\n 22515: u8 [a3 + 9] = 0\n 22518: u8 [a3 + 8] = 0\n 22521: u8 [a3 + 7] = 0\n 22524: u8 [a3 + 6] = 0\n 22527: u8 [a3 + 5] = 0\n 22530: u8 [a3 + 4] = 0\n 22533: u8 [a3 + 3] = 0xa0\n 22538: u8 [a3 + 2] = 0x79\n 22542: u8 [a3 + 1] = 0xc3\n 22547: a5 = a5 | a4\n 22550: a4 = 0xfffffffc\n 22560: a4 = a0 <u a4\n 22563: a4 = 0 if a2 != 0\n 22565: a4 = 0 if a5 != 0\n 22567: u8 [a3 + 0] = 0x8\n 22570: jump @660 if a4 == 0\n      : @601 (gas: 1)\n 22574: jump @660 if t0 >=u 65532\n      : @602 (gas: 3)\n 22581: a1 = a0 + 0x43\n 22584: a3 = a1 & 0x1ffe0\n 22589: jump @660 if a3 >u 65536\n      : @603 (gas: 3)\n 22596: i32 a1 = t2 + 0\n 22598: i32 a4 = a0 + 0x4\n 22601: jump @605 if a1 >=u a3\n      : @604 (gas: 4)\n 22604: a1 = u64 [s1 + 0x238]\n 22608: u32 [a1] = a3\n 22610: t2 = a3\n 22612: fallthrough\n      : @605 (gas: 38)\n 22613: a3 = ra + a4\n 22616: u8 [a3 + 31] = 0x20\n 22620: u8 [a3 + 30] = 0\n 22623: u8 [a3 + 29] = 0\n 22626: u8 [a3 + 28] = 0\n 22629: u8 [a3 + 27] = 0\n 22632: u8 [a3 + 26] = 0\n 22635: u8 [a3 + 25] = 0\n 22638: u8 [a3 + 24] = 0\n 22641: u8 [a3 + 23] = 0\n 22644: u8 [a3 + 22] = 0\n 22647: u8 [a3 + 21] = 0\n 22650: u8 [a3 + 20] = 0\n 22653: u8 [a3 + 19] = 0\n 22656: u8 [a3 + 18] = 0\n 22659: u8 [a3 + 17] = 0\n 22662: u8 [a3 + 16] = 0\n 22665: u8 [a3 + 15] = 0\n 22668: u8 [a3 + 14] = 0\n 22671: u8 [a3 + 13] = 0\n 22674: u8 [a3 + 12] = 0\n 22677: u8 [a3 + 11] = 0\n 22680: u8 [a3 + 10] = 0\n 22683: u8 [a3 + 9] = 0\n 22686: u8 [a3 + 8] = 0\n 22689: u8 [a3 + 7] = 0\n 22692: u8 [a3 + 6] = 0\n 22695: u8 [a3 + 5] = 0\n 22698: u8 [a3 + 4] = 0\n 22701: u8 [a3 + 3] = 0\n 22704: u8 [a3 + 2] = 0\n 22707: u8 [a3 + 1] = 0\n 22710: a1 = 0xffffffdc\n 22720: a1 = a0 <u a1\n 22723: a1 = 0 if a2 != 0\n 22725: a1 = 0 if a5 != 0\n 22727: u8 [a3 + 0] = 0\n 22729: jump @660 if a1 == 0\n      : @606 (gas: 1)\n 22733: jump @660 if t0 >=u 65500\n      : @607 (gas: 3)\n 22740: a1 = a0 + 0x63\n 22743: a3 = a1 & 0x1ffe0\n 22748: jump @660 if a3 >u 65536\n      : @608 (gas: 3)\n 22755: i32 a1 = t2 + 0\n 22757: i32 a4 = a0 + 0x24\n 22760: jump @610 if a1 >=u a3\n      : @609 (gas: 4)\n 22763: a1 = u64 [s1 + 0x238]\n 22767: u32 [a1] = a3\n 22769: t2 = a3\n 22771: fallthrough\n      : @610 (gas: 38)\n 22772: a3 = ra + a4\n 22775: u8 [a3 + 31] = 0x10\n 22779: u8 [a3 + 30] = 0\n 22782: u8 [a3 + 29] = 0\n 22785: u8 [a3 + 28] = 0\n 22788: u8 [a3 + 27] = 0\n 22791: u8 [a3 + 26] = 0\n 22794: u8 [a3 + 25] = 0\n 22797: u8 [a3 + 24] = 0\n 22800: u8 [a3 + 23] = 0\n 22803: u8 [a3 + 22] = 0\n 22806: u8 [a3 + 21] = 0\n 22809: u8 [a3 + 20] = 0\n 22812: u8 [a3 + 19] = 0\n 22815: u8 [a3 + 18] = 0\n 22818: u8 [a3 + 17] = 0\n 22821: u8 [a3 + 16] = 0\n 22824: u8 [a3 + 15] = 0\n 22827: u8 [a3 + 14] = 0\n 22830: u8 [a3 + 13] = 0\n 22833: u8 [a3 + 12] = 0\n 22836: u8 [a3 + 11] = 0\n 22839: u8 [a3 + 10] = 0\n 22842: u8 [a3 + 9] = 0\n 22845: u8 [a3 + 8] = 0\n 22848: u8 [a3 + 7] = 0\n 22851: u8 [a3 + 6] = 0\n 22854: u8 [a3 + 5] = 0\n 22857: u8 [a3 + 4] = 0\n 22860: u8 [a3 + 3] = 0\n 22863: u8 [a3 + 2] = 0\n 22866: u8 [a3 + 1] = 0\n 22869: a1 = 0xffffffbc\n 22879: a1 = a0 <u a1\n 22882: a1 = 0 if a2 != 0\n 22884: a1 = 0 if a5 != 0\n 22886: u8 [a3 + 0] = 0\n 22888: jump @660 if a1 == 0\n      : @611 (gas: 1)\n 22892: jump @660 if t0 >=u 65468\n      : @612 (gas: 3)\n 22899: a1 = a0 + 0x83\n 22903: a2 = a1 & 0x1ffe0\n 22908: jump @660 if a2 >u 65536\n      : @613 (gas: 2)\n 22915: i32 t2 = t2 + 0\n 22917: jump @615 if t2 >=u a2\n      : @614 (gas: 3)\n 22920: a1 = u64 [s1 + 0x238]\n 22924: u32 [a1] = a2\n 22926: fallthrough\n      : @615 (gas: 40)\n 22927: i32 a1 = a0 + 0x44\n 22930: a2 = u64 [s1 + 0x230]\n 22934: a1 = a1 + a2\n 22937: u8 [a1 + 31] = 0\n 22940: u8 [a1 + 30] = 0\n 22943: u8 [a1 + 29] = 0\n 22946: u8 [a1 + 28] = 0\n 22949: u8 [a1 + 27] = 0\n 22952: u8 [a1 + 26] = 0\n 22955: u8 [a1 + 25] = 0\n 22958: u8 [a1 + 24] = 0\n 22961: u8 [a1 + 23] = 0\n 22964: u8 [a1 + 22] = 0\n 22967: u8 [a1 + 21] = 0\n 22970: u8 [a1 + 20] = 0\n 22973: u8 [a1 + 19] = 0\n 22976: u8 [a1 + 18] = 0\n 22979: u8 [a1 + 17] = 0\n 22982: u8 [a1 + 16] = 0\n 22985: u8 [a1 + 15] = 0x74\n 22989: u8 [a1 + 14] = 0x6e\n 22993: u8 [a1 + 13] = 0x75\n 22997: a4 = 0x6f\n 23000: u8 [a1 + 0xc] = a4\n 23003: u8 [a1 + 11] = 0x6d\n 23007: u8 [a1 + 10] = 0x61\n 23011: u8 [a1 + 9] = 0x2d\n 23015: u8 [a1 + 8] = 0x74\n 23019: u8 [a1 + 7] = 0x63\n 23023: u8 [a1 + 6] = 0x65\n 23027: a5 = 0x72\n 23030: u8 [a1 + 0x5] = a5\n 23033: u8 [a1 + 0x4] = a5\n 23036: u8 [a1 + 0x3] = a4\n 23039: u8 [a1 + 2] = 0x63\n 23043: u8 [a1 + 1] = 0x6e\n 23047: u8 [a1 + 0] = 0x69\n 23050: a1 = 0x64\n 23053: ra = 0x58\n 23056: jump @8\n      : @616 (gas: 3)\n 23059: a1 = u64 [s1 + 0x238]\n 23063: t2 = i32 [a1]\n 23065: jump @618 if t2 >u 95\n      : @617 (gas: 3)\n 23069: t2 = 0x60\n 23072: u32 [a1] = t2\n 23074: fallthrough\n      : @618 (gas: 17)\n 23075: ra = u64 [s1 + 0x230]\n 23079: a0 = u64 [ra + 0x48]\n 23082: a2 = u64 [ra + 0x58]\n 23085: a3 = u64 [ra + 0x40]\n 23088: a1 = u64 [ra + 0x50]\n 23091: a5 = reverse a0\n 23093: a0 = reverse a2\n 23095: a4 = reverse a3\n 23097: a2 = reverse a1\n 23099: a1 = a2 | a4\n 23102: a3 = a0 | a5\n 23105: a3 = a3 | a1\n 23108: a3 = a3 >> 0x20\n 23111: a1 = a1 | a5\n 23114: a1 = a1 << 0x20\n 23117: a1 = a1 | a3\n 23120: jump @660 if a1 != 0\n      : @619 (gas: 2)\n 23124: i32 a1 = a0 >> 0x10\n 23127: jump @660 if a1 != 0\n      : @620 (gas: 4)\n 23131: t1 = 0x1ffe0\n 23136: a1 = a0 + 0x3f\n 23139: a3 = a1 & t1\n 23142: jump @660 if a3 >u 65536\n      : @621 (gas: 1)\n 23149: jump @623 if t2 >=u a3\n      : @622 (gas: 4)\n 23152: a1 = u64 [s1 + 0x238]\n 23156: u32 [a1] = a3\n 23158: t2 = a3\n 23160: fallthrough\n      : @623 (gas: 40)\n 23161: i32 t0 = a0 + 0\n 23163: a3 = ra + t0\n 23166: u8 [a3 + 31] = 0\n 23169: u8 [a3 + 30] = 0\n 23172: u8 [a3 + 29] = 0\n 23175: u8 [a3 + 28] = 0\n 23178: u8 [a3 + 27] = 0\n 23181: u8 [a3 + 26] = 0\n 23184: u8 [a3 + 25] = 0\n 23187: u8 [a3 + 24] = 0\n 23190: u8 [a3 + 23] = 0\n 23193: u8 [a3 + 22] = 0\n 23196: u8 [a3 + 21] = 0\n 23199: u8 [a3 + 20] = 0\n 23202: u8 [a3 + 19] = 0\n 23205: u8 [a3 + 18] = 0\n 23208: u8 [a3 + 17] = 0\n 23211: u8 [a3 + 16] = 0\n 23214: u8 [a3 + 15] = 0\n 23217: u8 [a3 + 14] = 0\n 23220: u8 [a3 + 13] = 0\n 23223: u8 [a3 + 12] = 0\n 23226: u8 [a3 + 11] = 0\n 23229: u8 [a3 + 10] = 0\n 23232: u8 [a3 + 9] = 0\n 23235: u8 [a3 + 8] = 0\n 23238: u8 [a3 + 7] = 0\n 23241: u8 [a3 + 6] = 0\n 23244: u8 [a3 + 5] = 0\n 23247: u8 [a3 + 4] = 0\n 23250: u8 [a3 + 3] = 0xa0\n 23255: u8 [a3 + 2] = 0x79\n 23259: u8 [a3 + 1] = 0xc3\n 23264: a5 = a5 | a4\n 23267: a4 = 0xfffffffc\n 23277: a4 = a0 <u a4\n 23280: a4 = 0 if a2 != 0\n 23282: a4 = 0 if a5 != 0\n 23284: u8 [a3 + 0] = 0x8\n 23287: jump @660 if a4 == 0\n      : @624 (gas: 1)\n 23291: jump @660 if t0 >=u 65532\n      : @625 (gas: 3)\n 23298: a1 = a0 + 0x43\n 23301: a3 = a1 & 0x1ffe0\n 23306: jump @660 if a3 >u 65536\n      : @626 (gas: 2)\n 23313: i32 a4 = a0 + 0x4\n 23316: jump @628 if t2 >=u a3\n      : @627 (gas: 4)\n 23319: a1 = u64 [s1 + 0x238]\n 23323: u32 [a1] = a3\n 23325: t2 = a3\n 23327: fallthrough\n      : @628 (gas: 38)\n 23328: a3 = ra + a4\n 23331: u8 [a3 + 31] = 0x20\n 23335: u8 [a3 + 30] = 0\n 23338: u8 [a3 + 29] = 0\n 23341: u8 [a3 + 28] = 0\n 23344: u8 [a3 + 27] = 0\n 23347: u8 [a3 + 26] = 0\n 23350: u8 [a3 + 25] = 0\n 23353: u8 [a3 + 24] = 0\n 23356: u8 [a3 + 23] = 0\n 23359: u8 [a3 + 22] = 0\n 23362: u8 [a3 + 21] = 0\n 23365: u8 [a3 + 20] = 0\n 23368: u8 [a3 + 19] = 0\n 23371: u8 [a3 + 18] = 0\n 23374: u8 [a3 + 17] = 0\n 23377: u8 [a3 + 16] = 0\n 23380: u8 [a3 + 15] = 0\n 23383: u8 [a3 + 14] = 0\n 23386: u8 [a3 + 13] = 0\n 23389: u8 [a3 + 12] = 0\n 23392: u8 [a3 + 11] = 0\n 23395: u8 [a3 + 10] = 0\n 23398: u8 [a3 + 9] = 0\n 23401: u8 [a3 + 8] = 0\n 23404: u8 [a3 + 7] = 0\n 23407: u8 [a3 + 6] = 0\n 23410: u8 [a3 + 5] = 0\n 23413: u8 [a3 + 4] = 0\n 23416: u8 [a3 + 3] = 0\n 23419: u8 [a3 + 2] = 0\n 23422: u8 [a3 + 1] = 0\n 23425: a1 = 0xffffffdc\n 23435: a1 = a0 <u a1\n 23438: a1 = 0 if a2 != 0\n 23440: a1 = 0 if a5 != 0\n 23442: u8 [a3 + 0] = 0\n 23444: jump @660 if a1 == 0\n      : @629 (gas: 1)\n 23448: jump @660 if t0 >=u 65500\n      : @630 (gas: 3)\n 23455: a1 = a0 + 0x63\n 23458: a3 = a1 & 0x1ffe0\n 23463: jump @660 if a3 >u 65536\n      : @631 (gas: 2)\n 23470: i32 a4 = a0 + 0x24\n 23473: jump @633 if t2 >=u a3\n      : @632 (gas: 4)\n 23476: a1 = u64 [s1 + 0x238]\n 23480: u32 [a1] = a3\n 23482: t2 = a3\n 23484: fallthrough\n      : @633 (gas: 38)\n 23485: a3 = ra + a4\n 23488: u8 [a3 + 31] = 0x13\n 23492: u8 [a3 + 30] = 0\n 23495: u8 [a3 + 29] = 0\n 23498: u8 [a3 + 28] = 0\n 23501: u8 [a3 + 27] = 0\n 23504: u8 [a3 + 26] = 0\n 23507: u8 [a3 + 25] = 0\n 23510: u8 [a3 + 24] = 0\n 23513: u8 [a3 + 23] = 0\n 23516: u8 [a3 + 22] = 0\n 23519: u8 [a3 + 21] = 0\n 23522: u8 [a3 + 20] = 0\n 23525: u8 [a3 + 19] = 0\n 23528: u8 [a3 + 18] = 0\n 23531: u8 [a3 + 17] = 0\n 23534: u8 [a3 + 16] = 0\n 23537: u8 [a3 + 15] = 0\n 23540: u8 [a3 + 14] = 0\n 23543: u8 [a3 + 13] = 0\n 23546: u8 [a3 + 12] = 0\n 23549: u8 [a3 + 11] = 0\n 23552: u8 [a3 + 10] = 0\n 23555: u8 [a3 + 9] = 0\n 23558: u8 [a3 + 8] = 0\n 23561: u8 [a3 + 7] = 0\n 23564: u8 [a3 + 6] = 0\n 23567: u8 [a3 + 5] = 0\n 23570: u8 [a3 + 4] = 0\n 23573: u8 [a3 + 3] = 0\n 23576: u8 [a3 + 2] = 0\n 23579: u8 [a3 + 1] = 0\n 23582: a1 = 0xffffffbc\n 23592: a1 = a0 <u a1\n 23595: a1 = 0 if a2 != 0\n 23597: a1 = 0 if a5 != 0\n 23599: u8 [a3 + 0] = 0\n 23601: jump @660 if a1 == 0\n      : @634 (gas: 1)\n 23605: jump @660 if t0 >=u 65468\n      : @635 (gas: 3)\n 23612: a1 = a0 + 0x83\n 23616: a2 = a1 & 0x1ffe0\n 23621: jump @660 if a2 >u 65536\n      : @636 (gas: 1)\n 23628: jump @638 if t2 >=u a2\n      : @637 (gas: 3)\n 23631: a1 = u64 [s1 + 0x238]\n 23635: u32 [a1] = a2\n 23637: fallthrough\n      : @638 (gas: 41)\n 23638: i32 a1 = a0 + 0x44\n 23641: a2 = u64 [s1 + 0x230]\n 23645: a1 = a1 + a2\n 23648: u8 [a1 + 31] = 0\n 23651: u8 [a1 + 30] = 0\n 23654: u8 [a1 + 29] = 0\n 23657: u8 [a1 + 28] = 0\n 23660: u8 [a1 + 27] = 0\n 23663: u8 [a1 + 26] = 0\n 23666: u8 [a1 + 25] = 0\n 23669: u8 [a1 + 24] = 0\n 23672: u8 [a1 + 23] = 0\n 23675: u8 [a1 + 22] = 0\n 23678: u8 [a1 + 21] = 0\n 23681: u8 [a1 + 20] = 0\n 23684: u8 [a1 + 19] = 0\n 23687: u8 [a1 + 18] = 0x74\n 23691: a4 = 0x6e\n 23694: u8 [a1 + 0x11] = a4\n 23697: t0 = 0x65\n 23700: u8 [a1 + 0x10] = t0\n 23703: u8 [a1 + 15] = 0x6d\n 23707: u8 [a1 + 14] = 0x74\n 23711: u8 [a1 + 13] = 0x69\n 23715: u8 [a1 + 12] = 0x6d\n 23719: u8 [a1 + 11] = 0x6d\n 23723: u8 [a1 + 10] = 0x6f\n 23727: u8 [a1 + 9] = 0x63\n 23731: u8 [a1 + 8] = 0x2d\n 23735: a5 = 0x67\n 23738: u8 [a1 + 0x7] = a5\n 23741: u8 [a1 + 0x6] = a4\n 23744: u8 [a1 + 5] = 0x69\n 23748: u8 [a1 + 4] = 0x74\n 23752: u8 [a1 + 3] = 0x73\n 23756: u8 [a1 + 2] = 0x69\n 23760: u8 [a1 + 1] = 0x78\n 23764: u8 [a1] = t0\n 23766: a1 = 0x64\n 23769: ra = 0x58\n 23772: jump @8\n      : @639 (gas: 2)\n 23775: a5 = u64 [s1 + 0x230]\n 23779: jump @641 if t2 >u 95\n      : @640 (gas: 4)\n 23783: t2 = 0x60\n 23786: a0 = u64 [s1 + 0x238]\n 23790: u32 [a0] = t2\n 23792: fallthrough\n      : @641 (gas: 16)\n 23793: a0 = u64 [a5 + 0x48]\n 23796: a2 = u64 [a5 + 0x58]\n 23799: a3 = u64 [a5 + 0x40]\n 23802: a1 = u64 [a5 + 0x50]\n 23805: a4 = reverse a0\n 23807: a0 = reverse a2\n 23809: a2 = reverse a3\n 23811: t0 = reverse a1\n 23813: a1 = t0 | a2\n 23816: a3 = a0 | a4\n 23819: a3 = a3 | a1\n 23822: a3 = a3 >> 0x20\n 23825: a1 = a1 | a4\n 23828: a1 = a1 << 0x20\n 23831: a1 = a1 | a3\n 23834: jump @660 if a1 != 0\n      : @642 (gas: 2)\n 23838: i32 a1 = a0 >> 0x10\n 23841: jump @660 if a1 != 0\n      : @643 (gas: 4)\n 23845: t1 = 0x1ffe0\n 23850: a1 = a0 + 0x3f\n 23853: a3 = a1 & t1\n 23856: jump @660 if a3 >u 65536\n      : @644 (gas: 1)\n 23863: jump @646 if t2 >=u a3\n      : @645 (gas: 4)\n 23866: a1 = u64 [s1 + 0x238]\n 23870: u32 [a1] = a3\n 23872: t2 = a3\n 23874: fallthrough\n      : @646 (gas: 40)\n 23875: i32 ra = a0 + 0\n 23877: a3 = a5 + ra\n 23880: u8 [a3 + 31] = 0\n 23883: u8 [a3 + 30] = 0\n 23886: u8 [a3 + 29] = 0\n 23889: u8 [a3 + 28] = 0\n 23892: u8 [a3 + 27] = 0\n 23895: u8 [a3 + 26] = 0\n 23898: u8 [a3 + 25] = 0\n 23901: u8 [a3 + 24] = 0\n 23904: u8 [a3 + 23] = 0\n 23907: u8 [a3 + 22] = 0\n 23910: u8 [a3 + 21] = 0\n 23913: u8 [a3 + 20] = 0\n 23916: u8 [a3 + 19] = 0\n 23919: u8 [a3 + 18] = 0\n 23922: u8 [a3 + 17] = 0\n 23925: u8 [a3 + 16] = 0\n 23928: u8 [a3 + 15] = 0\n 23931: u8 [a3 + 14] = 0\n 23934: u8 [a3 + 13] = 0\n 23937: u8 [a3 + 12] = 0\n 23940: u8 [a3 + 11] = 0\n 23943: u8 [a3 + 10] = 0\n 23946: u8 [a3 + 9] = 0\n 23949: u8 [a3 + 8] = 0\n 23952: u8 [a3 + 7] = 0\n 23955: u8 [a3 + 6] = 0\n 23958: u8 [a3 + 5] = 0\n 23961: u8 [a3 + 4] = 0\n 23964: u8 [a3 + 3] = 0xa0\n 23969: u8 [a3 + 2] = 0x79\n 23973: u8 [a3 + 1] = 0xc3\n 23978: a2 = a2 | a4\n 23981: a4 = 0xfffffffc\n 23991: a4 = a0 <u a4\n 23994: a4 = 0 if t0 != 0\n 23996: a4 = 0 if a2 != 0\n 23998: u8 [a3 + 0] = 0x8\n 24001: jump @660 if a4 == 0\n      : @647 (gas: 1)\n 24005: jump @660 if ra >=u 65532\n      : @648 (gas: 3)\n 24012: a1 = a0 + 0x43\n 24015: a3 = a1 & 0x1ffe0\n 24020: jump @660 if a3 >u 65536\n      : @649 (gas: 3)\n 24027: i32 a1 = t2 + 0\n 24029: i32 a4 = a0 + 0x4\n 24032: jump @651 if a1 >=u a3\n      : @650 (gas: 4)\n 24035: a1 = u64 [s1 + 0x238]\n 24039: u32 [a1] = a3\n 24041: t2 = a3\n 24043: fallthrough\n      : @651 (gas: 38)\n 24044: a3 = a5 + a4\n 24047: u8 [a3 + 31] = 0x20\n 24051: u8 [a3 + 30] = 0\n 24054: u8 [a3 + 29] = 0\n 24057: u8 [a3 + 28] = 0\n 24060: u8 [a3 + 27] = 0\n 24063: u8 [a3 + 26] = 0\n 24066: u8 [a3 + 25] = 0\n 24069: u8 [a3 + 24] = 0\n 24072: u8 [a3 + 23] = 0\n 24075: u8 [a3 + 22] = 0\n 24078: u8 [a3 + 21] = 0\n 24081: u8 [a3 + 20] = 0\n 24084: u8 [a3 + 19] = 0\n 24087: u8 [a3 + 18] = 0\n 24090: u8 [a3 + 17] = 0\n 24093: u8 [a3 + 16] = 0\n 24096: u8 [a3 + 15] = 0\n 24099: u8 [a3 + 14] = 0\n 24102: u8 [a3 + 13] = 0\n 24105: u8 [a3 + 12] = 0\n 24108: u8 [a3 + 11] = 0\n 24111: u8 [a3 + 10] = 0\n 24114: u8 [a3 + 9] = 0\n 24117: u8 [a3 + 8] = 0\n 24120: u8 [a3 + 7] = 0\n 24123: u8 [a3 + 6] = 0\n 24126: u8 [a3 + 5] = 0\n 24129: u8 [a3 + 4] = 0\n 24132: u8 [a3 + 3] = 0\n 24135: u8 [a3 + 2] = 0\n 24138: u8 [a3 + 1] = 0\n 24141: a1 = 0xffffffdc\n 24151: a1 = a0 <u a1\n 24154: a1 = 0 if t0 != 0\n 24156: a1 = 0 if a2 != 0\n 24158: u8 [a3 + 0] = 0\n 24160: jump @660 if a1 == 0\n      : @652 (gas: 1)\n 24164: jump @660 if ra >=u 65500\n      : @653 (gas: 3)\n 24171: a1 = a0 + 0x63\n 24174: a3 = a1 & 0x1ffe0\n 24179: jump @660 if a3 >u 65536\n      : @654 (gas: 3)\n 24186: i32 a1 = t2 + 0\n 24188: i32 a4 = a0 + 0x24\n 24191: jump @656 if a1 >=u a3\n      : @655 (gas: 4)\n 24194: a1 = u64 [s1 + 0x238]\n 24198: u32 [a1] = a3\n 24200: t2 = a3\n 24202: fallthrough\n      : @656 (gas: 39)\n 24203: a3 = u64 [s1 + 0x230]\n 24207: a3 = a3 + a4\n 24210: u8 [a3 + 31] = 0x9\n 24214: u8 [a3 + 30] = 0\n 24217: u8 [a3 + 29] = 0\n 24220: u8 [a3 + 28] = 0\n 24223: u8 [a3 + 27] = 0\n 24226: u8 [a3 + 26] = 0\n 24229: u8 [a3 + 25] = 0\n 24232: u8 [a3 + 24] = 0\n 24235: u8 [a3 + 23] = 0\n 24238: u8 [a3 + 22] = 0\n 24241: u8 [a3 + 21] = 0\n 24244: u8 [a3 + 20] = 0\n 24247: u8 [a3 + 19] = 0\n 24250: u8 [a3 + 18] = 0\n 24253: u8 [a3 + 17] = 0\n 24256: u8 [a3 + 16] = 0\n 24259: u8 [a3 + 15] = 0\n 24262: u8 [a3 + 14] = 0\n 24265: u8 [a3 + 13] = 0\n 24268: u8 [a3 + 12] = 0\n 24271: u8 [a3 + 11] = 0\n 24274: u8 [a3 + 10] = 0\n 24277: u8 [a3 + 9] = 0\n 24280: u8 [a3 + 8] = 0\n 24283: u8 [a3 + 7] = 0\n 24286: u8 [a3 + 6] = 0\n 24289: u8 [a3 + 5] = 0\n 24292: u8 [a3 + 4] = 0\n 24295: u8 [a3 + 3] = 0\n 24298: u8 [a3 + 2] = 0\n 24301: u8 [a3 + 1] = 0\n 24304: a1 = 0xffffffbc\n 24314: a1 = a0 <u a1\n 24317: a1 = 0 if t0 != 0\n 24319: a1 = 0 if a2 != 0\n 24321: u8 [a3 + 0] = 0\n 24323: jump @660 if a1 == 0\n      : @657 (gas: 1)\n 24326: jump @660 if ra >=u 65468\n      : @658 (gas: 3)\n 24332: a1 = a0 + 0x83\n 24336: a2 = a1 & 0x1ffe0\n 24341: jump @660 if a2 >u 65536\n      : @659 (gas: 1)\n 24347: jump @986\n      : @660 (gas: 1)\n 24350: trap\n      : @661 (gas: 20)\n 24351: a0 = u64 [s1 + 0x238]\n 24355: a0 = i32 [a0]\n 24357: a1 = u64 [s1 + 0x1f8]\n 24361: a4 = reverse a1\n 24363: a1 = u64 [s1 + 0x200]\n 24367: a5 = reverse a1\n 24369: a1 = u64 [s1 + 0x208]\n 24373: a3 = reverse a1\n 24375: a1 = u64 [s1 + 0x218]\n 24379: a1 = reverse a1\n 24381: a2 = u64 [s1 + 0x230]\n 24385: u64 [s1 + 0x210] = a1\n 24389: u64 [a2 + 0x18] = a1\n 24392: u64 [s1 + 0x208] = a3\n 24396: u64 [a2 + 0x10] = a3\n 24399: u64 [s1 + 0x1e0] = a5\n 24403: u64 [a2 + 0x8] = a5\n 24406: u64 [s1 + 0x200] = a4\n 24410: u64 [a2] = a4\n 24412: jump @663 if a0 >u 63\n      : @662 (gas: 3)\n 24416: a1 = u64 [s1 + 0x238]\n 24420: u32 [a1 + 0] = 0x40\n 24423: fallthrough\n      : @663 (gas: 34)\n 24424: a1 = u64 [s1 + 0x230]\n 24428: u64 [a1 + 48] = 0\n 24431: u64 [a1 + 40] = 0\n 24434: u64 [a1 + 32] = 0\n 24437: a0 = 0x500000000000000\n 24447: u64 [a1 + 0x38] = a0\n 24450: a0 = sp + 0xffffffffffffffe0\n 24453: a0 = a0 & 0xffffffffffffffe0\n 24456: u64 [s1 + 0x228] = a0\n 24460: sp = a0\n 24462: a0 = sp + 0xffffffffffffffe0\n 24465: a0 = a0 & 0xffffffffffffffe0\n 24468: u64 [s1 + 0x218] = a0\n 24472: sp = a0\n 24474: i32 a2 = a0 + 0\n 24476: a1 = 0x40\n 24479: a0 = u64 [s1 + 0x1c8]\n 24483: ecalli 7 // 'hash_keccak_256'\n 24485: a3 = u64 [s1 + 0x218]\n 24489: a0 = u64 [a3 + 0x18]\n 24492: a1 = u64 [a3 + 0x10]\n 24495: a2 = u64 [a3 + 0x8]\n 24498: a3 = u64 [a3]\n 24500: a0 = reverse a0\n 24502: a4 = reverse a1\n 24504: a2 = reverse a2\n 24506: a3 = reverse a3\n 24508: a1 = u64 [s1 + 0x228]\n 24512: u64 [a1 + 0x18] = a3\n 24515: u64 [a1 + 0x10] = a2\n 24518: u64 [a1 + 0x8] = a4\n 24521: u64 [a1] = a0\n 24523: a0 = s1 + 0x2c0\n 24527: ra = 42, jump @0\n      : @664 [@dyn 21] (gas: 18)\n 24532: a0 = u64 [s1 + 0x2c0]\n 24536: a1 = u64 [s1 + 0x2c8]\n 24540: a2 = u64 [s1 + 0x2d8]\n 24544: a3 = u64 [s1 + 0x2d0]\n 24548: a0 = a0 & 0xffffffffffffff00\n 24552: a0 = a0 | 0x1\n 24555: a4 = s1 + 0x1000\n 24559: u64 [a4 + 0xfffffffffffff838] = a2\n 24563: a2 = s1 + 0x1000\n 24567: u64 [a2 + 0xfffffffffffff830] = a3\n 24571: a2 = s1 + 0x1000\n 24575: u64 [a2 + 0xfffffffffffff828] = a1\n 24579: a1 = s1 + 0x1000\n 24583: u64 [a1 + 0xfffffffffffff820] = a0\n 24587: a1 = s1 + 0x7ff\n 24591: a1 = a1 + 0x21\n 24594: a0 = u64 [s1 + 0x228]\n 24598: ra = 44, jump @1\n      : @665 [@dyn 22] (gas: 12)\n 24603: a0 = s1 + 0x1000\n 24607: u64 [a0 + 4294965336] = 0\n 24611: a0 = s1 + 0x1000\n 24615: u64 [a0 + 4294965328] = 0\n 24619: a0 = s1 + 0x1000\n 24623: u64 [a0 + 4294965320] = 0\n 24627: a1 = s1 + 0x1000\n 24631: u64 [a1 + 4294965312] = 0x4\n 24636: a0 = s1 + 0x2a0\n 24640: a1 = s1 + 0x7ff\n 24644: a1 = a1 + 0x41\n 24647: ra = 46, jump @0\n      : @666 [@dyn 23] (gas: 23)\n 24652: a0 = u64 [s1 + 0x2b8]\n 24656: a2 = u64 [s1 + 0x2b0]\n 24660: a3 = u64 [s1 + 0x2a8]\n 24664: a4 = u64 [s1 + 0x2a0]\n 24668: a1 = sp + 0xffffffffffffffe0\n 24671: a1 = a1 & 0xffffffffffffffe0\n 24674: sp = a1\n 24676: a4 = a4 + 0x1\n 24679: a5 = a4 <u 0x1\n 24682: a3 = a3 + a5\n 24685: a5 = a4 | a3\n 24688: a5 = a5 <u 0x1\n 24691: a5 = a5 + a2\n 24694: a2 = a5 <u a2\n 24697: a0 = a0 + a2\n 24700: u64 [a1 + 0x10] = a5\n 24703: u64 [a1 + 0x8] = a3\n 24706: u64 [a1] = a4\n 24708: a3 = a3 | a0\n 24711: a4 = a4 | a5\n 24714: a3 = a3 | a4\n 24717: u64 [a1 + 0x18] = a0\n 24720: jump @668 if a3 != 0\n      : @667 (gas: 1)\n 24723: jump @991\n      : @668 (gas: 11)\n 24726: a0 = s1 + 0x1000\n 24730: u64 [a0 + 4294965368] = 0\n 24734: a0 = s1 + 0x1000\n 24738: u64 [a0 + 4294965360] = 0\n 24742: a0 = s1 + 0x1000\n 24746: u64 [a0 + 4294965352] = 0\n 24750: a2 = s1 + 0x1000\n 24754: u64 [a2 + 4294965344] = 0x4\n 24759: a0 = s1 + 0x7ff\n 24763: a0 = a0 + 0x61\n 24766: ra = 48, jump @1\n      : @669 [@dyn 24] (gas: 12)\n 24771: a0 = u64 [s1 + 0x238]\n 24775: a0 = i32 [a0]\n 24777: a2 = u64 [s1 + 0x230]\n 24781: a1 = u64 [s1 + 0x110]\n 24785: u64 [a2 + 0x18] = a1\n 24788: a1 = u64 [s1 + 0x118]\n 24792: u64 [a2 + 0x10] = a1\n 24795: a1 = u64 [s1 + 0x120]\n 24799: u64 [a2 + 0x8] = a1\n 24802: a3 = u64 [s1 + 0x128]\n 24806: u64 [a2] = a3\n 24808: jump @671 if a0 >u 63\n      : @670 (gas: 3)\n 24812: a1 = u64 [s1 + 0x238]\n 24816: u32 [a1 + 0] = 0x40\n 24819: fallthrough\n      : @671 (gas: 34)\n 24820: a1 = u64 [s1 + 0x230]\n 24824: u64 [a1 + 48] = 0\n 24827: u64 [a1 + 40] = 0\n 24830: u64 [a1 + 32] = 0\n 24833: a0 = 0x800000000000000\n 24843: u64 [a1 + 0x38] = a0\n 24846: a0 = sp + 0xffffffffffffffe0\n 24849: a0 = a0 & 0xffffffffffffffe0\n 24852: u64 [s1 + 0x228] = a0\n 24856: sp = a0\n 24858: a0 = sp + 0xffffffffffffffe0\n 24861: a0 = a0 & 0xffffffffffffffe0\n 24864: u64 [s1 + 0x218] = a0\n 24868: sp = a0\n 24870: i32 a2 = a0 + 0\n 24872: a1 = 0x40\n 24875: a0 = u64 [s1 + 0x1c8]\n 24879: ecalli 7 // 'hash_keccak_256'\n 24881: a3 = u64 [s1 + 0x218]\n 24885: a0 = u64 [a3 + 0x18]\n 24888: a1 = u64 [a3 + 0x10]\n 24891: a2 = u64 [a3 + 0x8]\n 24894: a3 = u64 [a3]\n 24896: a0 = reverse a0\n 24898: a4 = reverse a1\n 24900: a2 = reverse a2\n 24902: a3 = reverse a3\n 24904: a1 = u64 [s1 + 0x228]\n 24908: u64 [a1 + 0x18] = a3\n 24911: u64 [a1 + 0x10] = a2\n 24914: u64 [a1 + 0x8] = a4\n 24917: u64 [a1] = a0\n 24919: a0 = s1 + 0x280\n 24923: ra = 50, jump @0\n      : @672 [@dyn 25] (gas: 18)\n 24928: a0 = u64 [s1 + 0x280]\n 24932: a1 = u64 [s1 + 0x288]\n 24936: a2 = u64 [s1 + 0x298]\n 24940: a3 = u64 [s1 + 0x290]\n 24944: a0 = a0 & 0xffffffffffffff00\n 24948: a0 = a0 | 0x1\n 24951: a4 = s1 + 0x1000\n 24955: u64 [a4 + 0xfffffffffffff898] = a2\n 24959: a2 = s1 + 0x1000\n 24963: u64 [a2 + 0xfffffffffffff890] = a3\n 24967: a2 = s1 + 0x1000\n 24971: u64 [a2 + 0xfffffffffffff888] = a1\n 24975: a1 = s1 + 0x1000\n 24979: u64 [a1 + 0xfffffffffffff880] = a0\n 24983: a1 = s1 + 0x7ff\n 24987: a1 = a1 + 0x81\n 24991: a0 = u64 [s1 + 0x228]\n 24995: ra = 52, jump @1\n      : @673 [@dyn 26] (gas: 4)\n 25000: a0 = u64 [s1 + 0x238]\n 25004: a1 = i32 [a0]\n 25006: u64 [s1 + 0x1f8] = a1\n 25010: jump @675 if a1 >u 95\n      : @674 (gas: 4)\n 25014: a0 = u64 [s1 + 0x238]\n 25018: u64 [s1 + 504] = 0x60\n 25023: u32 [a0 + 0] = 0x60\n 25026: fallthrough\n      : @675 (gas: 21)\n 25027: a3 = u64 [s1 + 0x230]\n 25031: a0 = u64 [a3 + 0x48]\n 25034: a1 = u64 [a3 + 0x58]\n 25037: a2 = u64 [a3 + 0x40]\n 25040: a3 = u64 [a3 + 0x50]\n 25043: a4 = reverse a0\n 25045: a1 = reverse a1\n 25047: a0 = reverse a2\n 25049: a2 = reverse a3\n 25051: u64 [s1 + 0x1a0] = a0\n 25055: u64 [s1 + 0x198] = a2\n 25059: a0 = a0 | a2\n 25062: u64 [s1 + 0x1b0] = a1\n 25066: a1 = a1 | a4\n 25069: a1 = a1 | a0\n 25072: a1 = a1 >> 0x20\n 25075: u64 [s1 + 0x1a8] = a4\n 25079: a0 = a0 | a4\n 25082: a0 = a0 << 0x20\n 25085: a0 = a0 | a1\n 25088: jump @660 if a0 != 0\n      : @676 (gas: 3)\n 25092: a0 = u64 [s1 + 0x1b0]\n 25096: i32 a0 = a0 >> 0x10\n 25099: jump @660 if a0 != 0\n      : @677 (gas: 5)\n 25103: a0 = u64 [s1 + 0x1b0]\n 25107: a0 = a0 + 0x3f\n 25110: a1 = u64 [s1 + 0x220]\n 25114: a0 = a0 & a1\n 25117: jump @660 if a0 >u 65536\n      : @678 (gas: 2)\n 25124: a1 = u64 [s1 + 0x1f8]\n 25128: jump @680 if a1 >=u a0\n      : @679 (gas: 4)\n 25131: a1 = u64 [s1 + 0x238]\n 25135: u32 [a1] = a0\n 25137: u64 [s1 + 0x1f8] = a0\n 25141: fallthrough\n      : @680 (gas: 86)\n 25142: u64 [s1 + 488] = 0\n 25146: u64 [s1 + 496] = 0\n 25150: ra = 0\n 25152: t1 = 0\n 25154: a2 = u64 [s1 + 0x1b0]\n 25158: i32 a0 = a2 + 0\n 25160: a1 = u64 [s1 + 0x230]\n 25164: a0 = a0 + a1\n 25167: a4 = u64 [s1 + 0x208]\n 25171: u8 [a0 + 0x10] = a4\n 25174: a5 = u64 [s1 + 0x1e0]\n 25178: a1 = a5 >> 0x38\n 25181: u8 [a0 + 0xf] = a1\n 25184: a1 = a5 >> 0x30\n 25187: u8 [a0 + 0xe] = a1\n 25190: a1 = a5 >> 0x28\n 25193: u8 [a0 + 0xd] = a1\n 25196: a1 = a5 >> 0x20\n 25199: u8 [a0 + 0xc] = a1\n 25202: a1 = a5 >> 0x18\n 25205: u8 [a0 + 0xb] = a1\n 25208: a1 = a5 >> 0x10\n 25211: u8 [a0 + 0xa] = a1\n 25214: a1 = a5 >> 0x8\n 25217: u8 [a0 + 0x9] = a1\n 25220: u8 [a0 + 0x8] = a5\n 25223: a5 = u64 [s1 + 0x200]\n 25227: a1 = a5 >> 0x38\n 25230: u8 [a0 + 0x7] = a1\n 25233: a1 = a5 >> 0x30\n 25236: u8 [a0 + 0x6] = a1\n 25239: a1 = a5 >> 0x28\n 25242: u8 [a0 + 0x5] = a1\n 25245: a1 = a5 >> 0x20\n 25248: u8 [a0 + 0x4] = a1\n 25251: a1 = a5 >> 0x18\n 25254: u8 [a0 + 0x3] = a1\n 25257: a1 = a5 >> 0x10\n 25260: u8 [a0 + 0x2] = a1\n 25263: a1 = a5 >> 0x8\n 25266: u8 [a0 + 0x1] = a1\n 25269: u8 [a0] = a5\n 25271: a5 = u64 [s1 + 0x210]\n 25275: u8 [a0 + 0x18] = a5\n 25278: a1 = a4 >> 0x38\n 25281: u8 [a0 + 0x17] = a1\n 25284: a1 = a4 >> 0x30\n 25287: u8 [a0 + 0x16] = a1\n 25290: a1 = a4 >> 0x28\n 25293: u8 [a0 + 0x15] = a1\n 25296: a1 = a4 >> 0x20\n 25299: u8 [a0 + 0x14] = a1\n 25302: a1 = a4 >> 0x18\n 25305: u8 [a0 + 0x13] = a1\n 25308: a1 = a4 >> 0x10\n 25311: u8 [a0 + 0x12] = a1\n 25314: a1 = a4 >> 0x8\n 25317: u8 [a0 + 0x11] = a1\n 25320: a1 = a5 >> 0x38\n 25323: u8 [a0 + 0x1f] = a1\n 25326: a1 = a5 >> 0x30\n 25329: u8 [a0 + 0x1e] = a1\n 25332: a1 = a5 >> 0x28\n 25335: u8 [a0 + 0x1d] = a1\n 25338: a1 = a5 >> 0x20\n 25341: u8 [a0 + 0x1c] = a1\n 25344: a1 = a5 >> 0x18\n 25347: u8 [a0 + 0x1b] = a1\n 25350: a1 = a5 >> 0x10\n 25353: u8 [a0 + 0x1a] = a1\n 25356: a1 = a5 >> 0x8\n 25359: u8 [a0 + 0x19] = a1\n 25362: a0 = 0xffffffe0\n 25372: u64 [s1 + 0x1b8] = a0\n 25376: u64 [s1 + 0x228] = a2\n 25380: a0 = u64 [s1 + 0x198]\n 25384: u64 [s1 + 0x208] = a0\n 25388: a0 = u64 [s1 + 0x1a8]\n 25392: u64 [s1 + 0x210] = a0\n 25396: a0 = u64 [s1 + 0x1a0]\n 25400: u64 [s1 + 0x218] = a0\n 25404: a2 = u64 [s1 + 0x148]\n 25408: a0 = u64 [s1 + 0x140]\n 25412: t2 = u64 [s1 + 0x138]\n 25416: a4 = u64 [s1 + 0x130]\n 25420: jump @682\n      : @681 (gas: 209)\n 25423: u64 [s1 + 0x1f8] = a3\n 25427: t1 = u64 [s1 + 0x138]\n 25431: i32 a3 = t1 + 0\n 25433: a3 = a3 + t0\n 25436: a1 = u8 [a3 + 0x19]\n 25439: a2 = u8 [a3 + 0x18]\n 25442: a4 = u8 [a3 + 0x1a]\n 25445: a5 = u8 [a3 + 0x1b]\n 25448: a1 = a1 << 0x8\n 25451: a1 = a1 | a2\n 25454: a4 = a4 << 0x10\n 25457: a5 = a5 << 0x18\n 25460: a4 = a4 | a5\n 25463: a1 = a1 | a4\n 25466: a2 = u8 [a3 + 0x1d]\n 25469: a4 = u8 [a3 + 0x1c]\n 25472: a5 = u8 [a3 + 0x1e]\n 25475: a0 = u8 [a3 + 0x1f]\n 25478: a2 = a2 << 0x8\n 25481: a2 = a2 | a4\n 25484: a5 = a5 << 0x10\n 25487: a0 = a0 << 0x18\n 25490: a0 = a0 | a5\n 25493: a0 = a0 | a2\n 25496: a0 = a0 << 0x20\n 25499: a1 = a1 | a0\n 25502: a0 = u8 [a3 + 0x11]\n 25505: a2 = u8 [a3 + 0x10]\n 25508: a4 = u8 [a3 + 0x12]\n 25511: a5 = u8 [a3 + 0x13]\n 25514: a0 = a0 << 0x8\n 25517: a0 = a0 | a2\n 25520: a4 = a4 << 0x10\n 25523: a5 = a5 << 0x18\n 25526: a4 = a4 | a5\n 25529: a0 = a0 | a4\n 25532: a2 = u8 [a3 + 0x15]\n 25535: a4 = u8 [a3 + 0x14]\n 25538: a5 = u8 [a3 + 0x16]\n 25541: t2 = t0\n 25543: ra = u8 [a3 + 0x17]\n 25546: a2 = a2 << 0x8\n 25549: a2 = a2 | a4\n 25552: a5 = a5 << 0x10\n 25555: ra = ra << 0x18\n 25558: a4 = ra | a5\n 25561: a2 = a2 | a4\n 25564: a2 = a2 << 0x20\n 25567: a4 = a2 | a0\n 25570: ra = u8 [a3 + 0x9]\n 25573: a2 = u8 [a3 + 0x8]\n 25576: a5 = u8 [a3 + 0xa]\n 25579: a0 = u8 [a3 + 0xb]\n 25582: ra = ra << 0x8\n 25585: a2 = ra | a2\n 25588: a5 = a5 << 0x10\n 25591: a0 = a0 << 0x18\n 25594: a0 = a0 | a5\n 25597: ra = a0 | a2\n 25600: a2 = u8 [a3 + 0xd]\n 25603: a5 = u8 [a3 + 0xc]\n 25606: a0 = u8 [a3 + 0xe]\n 25609: t0 = u8 [a3 + 0xf]\n 25612: a2 = a2 << 0x8\n 25615: a2 = a2 | a5\n 25618: a0 = a0 << 0x10\n 25621: t0 = t0 << 0x18\n 25624: a0 = t0 | a0\n 25627: a0 = a0 | a2\n 25630: a0 = a0 << 0x20\n 25633: a2 = a0 | ra\n 25636: t0 = u8 [a3 + 0x1]\n 25639: ra = u8 [a3]\n 25641: a0 = u8 [a3 + 0x2]\n 25644: a5 = u8 [a3 + 0x3]\n 25647: t0 = t0 << 0x8\n 25650: t0 = t0 | ra\n 25653: a0 = a0 << 0x10\n 25656: a5 = a5 << 0x18\n 25659: a0 = a0 | a5\n 25662: t0 = a0 | t0\n 25665: a5 = u8 [a3 + 0x5]\n 25668: ra = u8 [a3 + 0x4]\n 25671: a0 = u8 [a3 + 0x6]\n 25674: a3 = u8 [a3 + 0x7]\n 25677: a5 = a5 << 0x8\n 25680: a5 = a5 | ra\n 25683: a0 = a0 << 0x10\n 25686: a3 = a3 << 0x18\n 25689: a0 = a0 | a3\n 25692: a0 = a0 | a5\n 25695: a0 = a0 << 0x20\n 25698: a5 = a0 | t0\n 25701: a0 = u64 [s1 + 0x200]\n 25705: i32 a3 = a0 + 0\n 25707: t0 = a0\n 25709: a3 = a3 + t2\n 25712: a0 = a2 >> 0x38\n 25715: u8 [a3 + 0xf] = a0\n 25718: a0 = a2 >> 0x30\n 25721: u8 [a3 + 0xe] = a0\n 25724: a0 = a2 >> 0x28\n 25727: u8 [a3 + 0xd] = a0\n 25730: a0 = a2 >> 0x20\n 25733: u8 [a3 + 0xc] = a0\n 25736: a0 = a2 >> 0x18\n 25739: u8 [a3 + 0xb] = a0\n 25742: a0 = a2 >> 0x10\n 25745: u8 [a3 + 0xa] = a0\n 25748: a0 = a2 >> 0x8\n 25751: u8 [a3 + 0x9] = a0\n 25754: u8 [a3 + 0x8] = a2\n 25757: a0 = a5 >> 0x38\n 25760: u8 [a3 + 0x7] = a0\n 25763: a0 = a5 >> 0x30\n 25766: u8 [a3 + 0x6] = a0\n 25769: a0 = a5 >> 0x28\n 25772: u8 [a3 + 0x5] = a0\n 25775: a0 = a5 >> 0x20\n 25778: u8 [a3 + 0x4] = a0\n 25781: a0 = a5 >> 0x18\n 25784: u8 [a3 + 0x3] = a0\n 25787: a0 = a5 >> 0x10\n 25790: u8 [a3 + 0x2] = a0\n 25793: a0 = a5 >> 0x8\n 25796: u8 [a3 + 0x1] = a0\n 25799: u8 [a3] = a5\n 25801: a0 = a4 >> 0x38\n 25804: u8 [a3 + 0x17] = a0\n 25807: a0 = a4 >> 0x30\n 25810: u8 [a3 + 0x16] = a0\n 25813: a0 = a4 >> 0x28\n 25816: u8 [a3 + 0x15] = a0\n 25819: a0 = a4 >> 0x20\n 25822: u8 [a3 + 0x14] = a0\n 25825: a0 = a4 >> 0x18\n 25828: u8 [a3 + 0x13] = a0\n 25831: a0 = a4 >> 0x10\n 25834: u8 [a3 + 0x12] = a0\n 25837: u8 [a3 + 0x10] = a4\n 25840: a4 = a4 >> 0x8\n 25843: u8 [a3 + 0x11] = a4\n 25846: a0 = a1 >> 0x38\n 25849: u8 [a3 + 0x1f] = a0\n 25852: a0 = a1 >> 0x30\n 25855: u8 [a3 + 0x1e] = a0\n 25858: a0 = a1 >> 0x28\n 25861: u8 [a3 + 0x1d] = a0\n 25864: a0 = a1 >> 0x20\n 25867: u8 [a3 + 0x1c] = a0\n 25870: a0 = a1 >> 0x18\n 25873: u8 [a3 + 0x1b] = a0\n 25876: a0 = a1 >> 0x10\n 25879: u8 [a3 + 0x1a] = a0\n 25882: u8 [a3 + 0x18] = a1\n 25885: a1 = a1 >> 0x8\n 25888: u8 [a3 + 0x19] = a1\n 25891: a0 = u64 [s1 + 0x228]\n 25895: a0 = t0 <u a0\n 25898: a1 = u64 [s1 + 0x208]\n 25902: a2 = a1 + a0\n 25905: u64 [s1 + 0x1d0] = a2\n 25909: a3 = a2 <u a1\n 25912: a3 = a0 if a0 == 0\n 25915: a0 = u64 [s1 + 0x210]\n 25919: a3 = a3 + a0\n 25922: u64 [s1 + 0x1c0] = a3\n 25926: a0 = a3 <u a0\n 25929: a1 = u64 [s1 + 0x218]\n 25933: a1 = a1 + a0\n 25936: u64 [s1 + 0x218] = a1\n 25940: t0 = t1 + 0x20\n 25943: a5 = t0 <u t1\n 25946: a0 = u64 [s1 + 0x130]\n 25950: a4 = a0 + a5\n 25953: ra = a4 <u a0\n 25956: ra = a5 if a5 == 0\n 25959: t2 = u64 [s1 + 0x1e8]\n 25963: a5 = t2 <u 0x9\n 25966: t2 = t2 + 0x1\n 25969: a0 = u64 [s1 + 0x1f0]\n 25973: a5 = 0 if a0 != 0\n 25975: a3 = t2 <u 0x1\n 25978: a3 = a3 + a0\n 25981: a1 = t2 | a3\n 25984: a1 = a1 <u 0x1\n 25987: a2 = u64 [s1 + 0x1e0]\n 25991: a1 = a1 + a2\n 25994: t1 = a1 <u a2\n 25997: a0 = u64 [s1 + 0x1d8]\n 26001: a2 = a2 | a0\n 26004: t1 = t1 + a0\n 26007: a5 = 0 if a2 != 0\n 26009: a2 = u64 [s1 + 0x140]\n 26013: a0 = a2 + ra\n 26016: a2 = a0 <u a2\n 26019: ra = u64 [s1 + 0x148]\n 26023: a2 = a2 + ra\n 26026: u64 [s1 + 0x1e8] = t2\n 26030: u64 [s1 + 0x1f0] = a3\n 26034: ra = a1\n 26036: t2 = t0\n 26038: a1 = u64 [s1 + 0x200]\n 26042: u64 [s1 + 0x228] = a1\n 26046: a1 = u64 [s1 + 0x1d0]\n 26050: u64 [s1 + 0x208] = a1\n 26054: a1 = u64 [s1 + 0x1c0]\n 26058: u64 [s1 + 0x210] = a1\n 26062: jump @707 if a5 == 0\n      : @682 (gas: 10)\n 26066: a1 = t2 | a0\n 26069: u64 [s1 + 0x148] = a2\n 26073: a2 = a2 | a4\n 26076: a1 = a1 | a2\n 26079: a1 = a1 >> 0x20\n 26082: u64 [s1 + 0x140] = a0\n 26086: a2 = a2 | a0\n 26089: a2 = a2 << 0x20\n 26092: a1 = a1 | a2\n 26095: jump @660 if a1 != 0\n      : @683 (gas: 6)\n 26099: i32 a1 = t2 >> 0x10\n 26102: t0 = u64 [s1 + 0x230]\n 26106: a0 = u64 [s1 + 0x238]\n 26110: a3 = u64 [s1 + 0x1f8]\n 26114: a5 = u64 [s1 + 0x228]\n 26118: jump @660 if a1 != 0\n      : @684 (gas: 4)\n 26122: a1 = t2 + 0x3f\n 26125: a2 = u64 [s1 + 0x220]\n 26129: a1 = a1 & a2\n 26132: jump @660 if a1 >u 65536\n      : @685 (gas: 4)\n 26139: u64 [s1 + 0x138] = t2\n 26143: t2 = ra\n 26145: i32 a2 = a3 + 0\n 26147: jump @687 if a2 >=u a1\n      : @686 (gas: 3)\n 26150: u32 [a0] = a1\n 26152: a3 = a1\n 26154: fallthrough\n      : @687 (gas: 9)\n 26155: a1 = u64 [s1 + 0x218]\n 26159: a2 = u64 [s1 + 0x210]\n 26163: a1 = a1 | a2\n 26166: a2 = u64 [s1 + 0x1b8]\n 26170: a2 = a5 <u a2\n 26173: ra = u64 [s1 + 0x208]\n 26177: a2 = 0 if ra != 0\n 26179: a2 = 0 if a1 != 0\n 26181: jump @660 if a2 == 0\n      : @688 (gas: 3)\n 26185: a5 = a5 + 0x20\n 26188: i32 a1 = a5 >> 0x10\n 26191: jump @660 if a1 != 0\n      : @689 (gas: 4)\n 26195: a1 = a5 + 0x3f\n 26198: a2 = u64 [s1 + 0x220]\n 26202: a1 = a1 & a2\n 26205: jump @660 if a1 >u 65536\n      : @690 (gas: 6)\n 26212: u64 [s1 + 0x200] = a5\n 26216: u64 [s1 + 0x1d8] = t1\n 26220: u64 [s1 + 0x1e0] = t2\n 26224: u64 [s1 + 0x130] = a4\n 26228: i32 a2 = a3 + 0\n 26230: jump @681 if a2 >=u a1\n      : @691 (gas: 3)\n 26234: u32 [a0] = a1\n 26236: a3 = a1\n 26238: jump @681\n      : @692 (gas: 3)\n 26241: a0 = u64 [s1 + 0x238]\n 26245: a0 = i32 [a0]\n 26247: jump @694 if a0 >u 95\n      : @693 (gas: 3)\n 26251: a1 = u64 [s1 + 0x238]\n 26255: u32 [a1 + 0] = 0x60\n 26258: fallthrough\n      : @694 (gas: 15)\n 26259: a3 = u64 [s1 + 0x230]\n 26263: a0 = u64 [a3 + 0x48]\n 26266: a1 = u64 [a3 + 0x58]\n 26269: a2 = u64 [a3 + 0x40]\n 26272: a3 = u64 [a3 + 0x50]\n 26275: a0 = reverse a0\n 26277: u64 [s1 + 0x220] = a0\n 26281: a0 = reverse a1\n 26283: u64 [s1 + 0x228] = a0\n 26287: a0 = reverse a2\n 26289: u64 [s1 + 0x218] = a0\n 26293: a0 = reverse a3\n 26295: u64 [s1 + 0x210] = a0\n 26299: ecalli 10 // 'return_data_size'\n 26301: fallthrough\n      : @695 (gas: 12)\n 26302: a1 = u64 [s1 + 0x218]\n 26306: a2 = u64 [s1 + 0x210]\n 26310: a1 = a1 | a2\n 26313: a3 = u64 [s1 + 0x220]\n 26317: a2 = u64 [s1 + 0x228]\n 26321: a2 = a2 | a3\n 26324: a2 = a2 | a1\n 26327: a2 = a2 >> 0x20\n 26330: a1 = a1 | a3\n 26333: a1 = a1 << 0x20\n 26336: a1 = a1 | a2\n 26339: jump @660 if a1 != 0\n      : @696 (gas: 2)\n 26343: a1 = a0 >> 0x20\n 26346: jump @660 if a1 != 0\n      : @697 (gas: 3)\n 26350: a1 = u64 [s1 + 0x228]\n 26354: i32 a1 = a1 >> 0x10\n 26357: jump @660 if a1 != 0\n      : @698 (gas: 5)\n 26361: a1 = u64 [s1 + 0x228]\n 26365: a1 = a1 + a0\n 26368: i32 a1 = a1 + 0x1f\n 26371: a1 = a1 & 0xffffffffffffffe0\n 26374: jump @660 if a1 >u 65536\n      : @699 (gas: 3)\n 26381: a2 = u64 [s1 + 0x238]\n 26385: a2 = i32 [a2]\n 26387: jump @701 if a2 >=u a1\n      : @700 (gas: 3)\n 26390: a2 = u64 [s1 + 0x238]\n 26394: u32 [a2] = a1\n 26396: fallthrough\n      : @701 (gas: 13)\n 26397: i32 a1 = a0 + 0\n 26399: u64 [s1 + 0x238] = a1\n 26403: a1 = u64 [s1 + 0x230]\n 26407: a2 = u64 [s1 + 0x228]\n 26411: i32 a2 = a2 + a1\n 26414: a1 = s1 + 0x1000\n 26418: u32 [a1 + 0xfffffffffffff800] = a0\n 26422: a0 = s1 + 0x1000\n 26426: i32 a1 = a0 + 0xfffffffffffff800\n 26430: a0 = a2\n 26432: a2 = 0\n 26434: ecalli 9 // 'return_data_copy'\n 26436: fallthrough\n      : @702 (gas: 4)\n 26437: a0 = s1 + 0x1000\n 26441: a0 = i32 [a0 + 0xfffffffffffff800]\n 26445: a1 = u64 [s1 + 0x238]\n 26449: jump @660 if a0 <u a1\n      : @703 (gas: 2)\n 26453: ecalli 10 // 'return_data_size'\n 26455: fallthrough\n      : @704 (gas: 3)\n 26456: a1 = a0\n 26458: a0 = a0 >> 0x20\n 26461: jump @660 if a0 != 0\n      : @705 (gas: 3)\n 26465: a0 = u64 [s1 + 0x228]\n 26469: u64 [s1 + 0x238] = a1\n 26473: ra = 54, jump @8\n      : @706 [@dyn 27] (gas: 5)\n 26478: i32 a1 = a0 + 0\n 26480: a2 = i32 [s1 + 0x238]\n 26484: a0 = 0x1\n 26487: ecalli 11 // 'seal_return'\n 26489: fallthrough\n      : @707 (gas: 25)\n 26490: u64 [s1 + 488] = 0\n 26494: a3 = 0\n 26496: u64 [s1 + 512] = 0\n 26500: a0 = u64 [s1 + 0x1b0]\n 26504: t0 = a0 + 0x160\n 26508: a0 = t0 <u a0\n 26511: a1 = u64 [s1 + 0x198]\n 26515: a2 = a1 + a0\n 26518: u64 [s1 + 0x228] = a2\n 26522: t2 = a2 <u a1\n 26525: t2 = a0 if a0 == 0\n 26528: a0 = 0xff00000000000000\n 26538: u64 [s1 + 0x1c0] = a0\n 26542: a0 = u64 [s1 + 0x1a8]\n 26546: t2 = t2 + a0\n 26549: u64 [s1 + 0x218] = t2\n 26553: a4 = t2 <u a0\n 26556: a0 = u64 [s1 + 0x1a0]\n 26560: a0 = a0 + a4\n 26563: u64 [s1 + 0x210] = a0\n 26567: t1 = u64 [s1 + 0xf8]\n 26571: a2 = u64 [s1 + 0x100]\n 26575: a4 = u64 [s1 + 0xf0]\n 26579: a1 = u64 [s1 + 0x108]\n 26583: jump @709\n      : @708 (gas: 122)\n 26586: u64 [s1 + 0x1f8] = a3\n 26590: i32 a0 = a4 + 0\n 26592: a0 = a0 + ra\n 26595: a1 = u8 [a0 + 0x19]\n 26598: a2 = u8 [a0 + 0x18]\n 26601: a5 = u8 [a0 + 0x1a]\n 26604: a3 = a4\n 26606: a4 = u8 [a0 + 0x1b]\n 26609: a1 = a1 << 0x8\n 26612: a1 = a1 | a2\n 26615: a5 = a5 << 0x10\n 26618: a4 = a4 << 0x18\n 26621: a4 = a4 | a5\n 26624: a1 = a1 | a4\n 26627: a2 = u8 [a0 + 0x1d]\n 26630: a4 = u8 [a0 + 0x1c]\n 26633: a5 = u8 [a0 + 0x1e]\n 26636: a0 = u8 [a0 + 0x1f]\n 26639: a2 = a2 << 0x8\n 26642: a2 = a2 | a4\n 26645: a5 = a5 << 0x10\n 26648: a0 = a0 << 0x18\n 26651: a0 = a0 | a5\n 26654: a0 = a0 | a2\n 26657: a0 = a0 << 0x20\n 26660: a0 = a0 | a1\n 26663: i32 a1 = t0 + 0\n 26665: a1 = a1 + ra\n 26668: a2 = u64 [s1 + 0x1c0]\n 26672: a0 = a0 & a2\n 26675: a2 = a0 >> 0x38\n 26678: u8 [a1 + 0x1f] = a2\n 26681: a2 = a0 >> 0x30\n 26684: u8 [a1 + 0x1e] = a2\n 26687: a2 = a0 >> 0x28\n 26690: u8 [a1 + 0x1d] = a2\n 26693: a2 = a0 >> 0x20\n 26696: u8 [a1 + 0x1c] = a2\n 26699: a2 = a0 >> 0x18\n 26702: u8 [a1 + 0x1b] = a2\n 26705: a2 = a0 >> 0x10\n 26708: u8 [a1 + 0x1a] = a2\n 26711: u8 [a1 + 0x18] = a0\n 26714: a0 = a0 >> 0x8\n 26717: u8 [a1 + 0x19] = a0\n 26720: u8 [a1 + 23] = 0\n 26723: u8 [a1 + 22] = 0\n 26726: u8 [a1 + 21] = 0\n 26729: u8 [a1 + 20] = 0\n 26732: u8 [a1 + 19] = 0\n 26735: u8 [a1 + 18] = 0\n 26738: u8 [a1 + 17] = 0\n 26741: u8 [a1 + 16] = 0\n 26744: u8 [a1 + 15] = 0\n 26747: u8 [a1 + 14] = 0\n 26750: u8 [a1 + 13] = 0\n 26753: u8 [a1 + 12] = 0\n 26756: u8 [a1 + 11] = 0\n 26759: u8 [a1 + 10] = 0\n 26762: u8 [a1 + 9] = 0\n 26765: u8 [a1 + 8] = 0\n 26768: u8 [a1 + 7] = 0\n 26771: u8 [a1 + 6] = 0\n 26774: u8 [a1 + 5] = 0\n 26777: u8 [a1 + 4] = 0\n 26780: u8 [a1 + 3] = 0\n 26783: u8 [a1 + 2] = 0\n 26786: u8 [a1 + 1] = 0\n 26789: u8 [a1 + 0] = 0\n 26791: a0 = t0 + 0x20\n 26794: u64 [s1 + 0x1e0] = a0\n 26798: a2 = a0 <u t0\n 26801: a0 = u64 [s1 + 0x228]\n 26805: a1 = a0 + a2\n 26808: u64 [s1 + 0x1d8] = a1\n 26812: t0 = a1 <u a0\n 26815: t0 = a2 if a2 == 0\n 26818: a0 = u64 [s1 + 0x218]\n 26822: t0 = t0 + a0\n 26825: u64 [s1 + 0x1d0] = t0\n 26829: a2 = t0 <u a0\n 26832: t2 = t2 + a2\n 26835: u64 [s1 + 0x210] = t2\n 26839: t2 = a3 + 0x20\n 26842: a4 = t2 <u a3\n 26845: a0 = u64 [s1 + 0x108]\n 26849: t0 = a0 + a4\n 26852: a2 = t0 <u a0\n 26855: a2 = a4 if a4 == 0\n 26858: a4 = u64 [s1 + 0x1e8]\n 26862: ra = a4 <u 0x9\n 26865: a4 = a4 + 0x1\n 26868: a3 = u64 [s1 + 0x1f0]\n 26872: ra = 0 if a3 != 0\n 26874: a1 = a4 <u 0x1\n 26877: a3 = a3 + a1\n 26880: a1 = a4 | a3\n 26883: a1 = a1 <u 0x1\n 26886: a5 = u64 [s1 + 0x208]\n 26890: a1 = a1 + a5\n 26893: t1 = a1 <u a5\n 26896: a0 = u64 [s1 + 0x200]\n 26900: a5 = a5 | a0\n 26903: a0 = a0 + t1\n 26906: ra = 0 if a5 != 0\n 26908: a5 = u64 [s1 + 0x100]\n 26912: a2 = a2 + a5\n 26915: a5 = a2 <u a5\n 26918: t1 = u64 [s1 + 0xf8]\n 26922: t1 = t1 + a5\n 26925: u64 [s1 + 0x1e8] = a4\n 26929: a5 = a3\n 26931: a3 = a1\n 26933: u64 [s1 + 0x200] = a0\n 26937: a4 = t2\n 26939: a1 = t0\n 26941: t0 = u64 [s1 + 0x1e0]\n 26945: a0 = u64 [s1 + 0x1d8]\n 26949: u64 [s1 + 0x228] = a0\n 26953: a0 = u64 [s1 + 0x1d0]\n 26957: u64 [s1 + 0x218] = a0\n 26961: jump @742 if ra == 0\n      : @709 (gas: 12)\n 26965: u64 [s1 + 0x1f0] = a5\n 26969: u64 [s1 + 0x208] = a3\n 26973: a0 = a4 | a2\n 26976: u64 [s1 + 0x108] = a1\n 26980: a1 = a1 | t1\n 26983: a0 = a0 | a1\n 26986: a0 = a0 >> 0x20\n 26989: u64 [s1 + 0x100] = a2\n 26993: a1 = a1 | a2\n 26996: a1 = a1 << 0x20\n 26999: a0 = a0 | a1\n 27002: jump @660 if a0 != 0\n      : @710 (gas: 6)\n 27006: i32 a0 = a4 >> 0x10\n 27009: ra = u64 [s1 + 0x230]\n 27013: a2 = u64 [s1 + 0x238]\n 27017: a3 = u64 [s1 + 0x1f8]\n 27021: t2 = u64 [s1 + 0x210]\n 27025: jump @660 if a0 != 0\n      : @711 (gas: 4)\n 27029: a0 = a4 + 0x3f\n 27032: a1 = u64 [s1 + 0x220]\n 27036: a0 = a0 & a1\n 27039: jump @660 if a0 >u 65536\n      : @712 (gas: 2)\n 27046: i32 a1 = a3 + 0\n 27048: jump @714 if a1 >=u a0\n      : @713 (gas: 3)\n 27051: u32 [a2] = a0\n 27053: a3 = a0\n 27055: fallthrough\n      : @714 (gas: 10)\n 27056: a5 = u64 [s1 + 0x218]\n 27060: a0 = t0 | a5\n 27063: a1 = u64 [s1 + 0x228]\n 27067: a1 = a1 | t2\n 27070: a0 = a0 | a1\n 27073: a0 = a0 >> 0x20\n 27076: a1 = a1 | a5\n 27079: a1 = a1 << 0x20\n 27082: a0 = a0 | a1\n 27085: jump @660 if a0 != 0\n      : @715 (gas: 2)\n 27089: i32 a0 = t0 >> 0x10\n 27092: jump @660 if a0 != 0\n      : @716 (gas: 4)\n 27096: a0 = t0 + 0x3f\n 27099: a1 = u64 [s1 + 0x220]\n 27103: a0 = a0 & a1\n 27106: jump @660 if a0 >u 65536\n      : @717 (gas: 3)\n 27113: u64 [s1 + 0xf8] = t1\n 27117: i32 a1 = a3 + 0\n 27119: jump @708 if a1 >=u a0\n      : @718 (gas: 3)\n 27123: u32 [a2] = a0\n 27125: a3 = a0\n 27127: jump @708\n      : @719 (gas: 3)\n 27130: a0 = 0\n 27132: a1 = 0\n 27134: ra = 56, jump @8\n      : @720 [@dyn 28] (gas: 5)\n 27139: i32 a1 = a0 + 0\n 27141: a0 = 0x1\n 27144: a2 = 0\n 27146: ecalli 11 // 'seal_return'\n 27148: fallthrough\n      : @721 (gas: 8)\n 27149: a0 = u64 [s1 + 0x238]\n 27153: a0 = i32 [a0]\n 27155: a2 = u64 [s1 + 0x230]\n 27159: u64 [a2 + 24] = 0\n 27162: u64 [a2 + 16] = 0\n 27165: u64 [a2 + 0] = 0x717b484e\n 27171: u64 [a2 + 8] = 0\n 27174: jump @723 if a0 >u 63\n      : @722 (gas: 4)\n 27178: a1 = u64 [s1 + 0x238]\n 27182: u32 [a1 + 0] = 0x40\n 27185: a0 = 0x32000000\n 27191: jump @727\n      : @723 (gas: 2)\n 27193: a0 = 0x32000000\n 27199: jump @727\n      : @724 (gas: 6)\n 27201: a1 = u64 [s1 + 0x230]\n 27205: u64 [a1 + 24] = 0\n 27208: u64 [a1 + 16] = 0\n 27211: u64 [a1 + 0] = 0x717b484e\n 27217: u64 [a1 + 8] = 0\n 27220: jump @726 if ra >u 63\n      : @725 (gas: 4)\n 27224: a1 = u64 [s1 + 0x238]\n 27228: u32 [a1 + 0] = 0x40\n 27231: a0 = 0x41000000\n 27237: jump @727\n      : @726 (gas: 2)\n 27239: a0 = 0x41000000\n 27245: fallthrough\n      : @727 (gas: 14)\n 27246: a1 = u64 [s1 + 0x230]\n 27250: u32 [a1 + 0x20] = a0\n 27253: u32 [a1 + 28] = 0\n 27256: u32 [a1 + 24] = 0\n 27259: u32 [a1 + 20] = 0\n 27262: u32 [a1 + 16] = 0\n 27265: u32 [a1 + 12] = 0\n 27268: u32 [a1 + 8] = 0\n 27271: u32 [a1 + 4] = 0\n 27274: a0 = 0x1\n 27277: a2 = 0x24\n 27280: a1 = u64 [s1 + 0x1c8]\n 27284: ecalli 11 // 'seal_return'\n 27286: fallthrough\n      : @728 (gas: 1)\n 27287: jump @732 if a0 != 528065001\n      : @729 (gas: 7)\n 27294: u64 [s1 + 1688] = 0\n 27298: u64 [s1 + 1680] = 0\n 27302: u64 [s1 + 1672] = 0\n 27306: u64 [s1 + 1664] = 0\n 27310: i32 a0 = s1 + 0x680\n 27314: ecalli 14 // 'value_transferred'\n 27316: fallthrough\n      : @730 (gas: 8)\n 27317: a0 = u64 [s1 + 0x690]\n 27321: a1 = u64 [s1 + 0x698]\n 27325: a2 = u64 [s1 + 0x688]\n 27329: a3 = u64 [s1 + 0x680]\n 27333: a1 = a1 | a2\n 27336: a0 = a0 | a3\n 27339: a0 = a0 | a1\n 27342: jump @732 if a0 != 0\n      : @731 (gas: 3)\n 27345: a0 = u64 [s1 + 0x228]\n 27349: a0 = i32 [a0]\n 27351: jump @735 if a0 >u 35\n      : @732 (gas: 5)\n 27355: a1 = i32 [s1 + 0x230]\n 27359: a0 = 0x1\n 27362: a2 = 0\n 27364: ecalli 11 // 'seal_return'\n 27366: fallthrough\n      : @733 (gas: 5)\n 27367: i32 a1 = a4 + 0\n 27369: a0 = 0x1\n 27372: a2 = 0\n 27374: ecalli 11 // 'seal_return'\n 27376: fallthrough\n      : @734 (gas: 17)\n 27377: u64 [a4 + 16] = 0\n 27380: u64 [a4 + 24] = 0\n 27383: u64 [a4 + 8] = 0\n 27386: u64 [a4 + 0] = 0x717b484e\n 27392: u32 [a4 + 32] = 0x41000000\n 27399: u32 [a4 + 20] = 0\n 27402: u32 [a4 + 24] = 0\n 27405: u32 [a4 + 28] = 0\n 27408: u32 [a4 + 8] = 0\n 27411: u32 [a4 + 12] = 0\n 27414: u32 [a4 + 16] = 0\n 27417: u32 [a4 + 4] = 0\n 27420: i32 a1 = a4 + 0\n 27422: a0 = 0x1\n 27425: a2 = 0x24\n 27428: ecalli 11 // 'seal_return'\n 27430: fallthrough\n      : @735 (gas: 4)\n 27431: i32 a0 = s1 + 0x6a0\n 27435: a1 = 0x4\n 27438: ecalli 2 // 'call_data_load'\n 27440: fallthrough\n      : @736 (gas: 16)\n 27441: a0 = u64 [s1 + 0x6a0]\n 27445: a1 = u64 [s1 + 0x6b8]\n 27449: a2 = u64 [s1 + 0x6b0]\n 27453: a3 = u64 [s1 + 0x6a8]\n 27457: a4 = u64 [s1 + 0x238]\n 27461: a4 = i32 [a4]\n 27463: a1 = reverse a1\n 27465: a2 = reverse a2\n 27467: a3 = reverse a3\n 27469: a0 = reverse a0\n 27471: a5 = u64 [s1 + 0x230]\n 27475: u64 [a5 + 0x18] = a0\n 27478: u64 [a5 + 0x10] = a3\n 27481: u64 [a5 + 0x8] = a2\n 27484: u64 [a5] = a1\n 27486: jump @738 if a4 >u 63\n      : @737 (gas: 3)\n 27490: a1 = u64 [s1 + 0x238]\n 27494: u32 [a1 + 0] = 0x40\n 27497: fallthrough\n      : @738 (gas: 30)\n 27498: a1 = u64 [s1 + 0x230]\n 27502: u64 [a1 + 48] = 0\n 27505: u64 [a1 + 40] = 0\n 27508: u64 [a1 + 32] = 0\n 27511: a0 = 0x700000000000000\n 27521: u64 [a1 + 0x38] = a0\n 27524: a0 = sp + 0xffffffffffffffe0\n 27527: a2 = a0 & 0xffffffffffffffe0\n 27530: u64 [s1 + 0x228] = a2\n 27534: sp = a2\n 27536: i32 a0 = a1 + 0\n 27538: i32 a2 = a2 + 0\n 27540: a1 = 0x40\n 27543: ecalli 7 // 'hash_keccak_256'\n 27545: a3 = u64 [s1 + 0x228]\n 27549: a0 = u64 [a3 + 0x18]\n 27552: a1 = u64 [a3 + 0x10]\n 27555: a2 = u64 [a3 + 0x8]\n 27558: a3 = u64 [a3]\n 27560: a0 = reverse a0\n 27562: a1 = reverse a1\n 27564: a2 = reverse a2\n 27566: a3 = reverse a3\n 27568: u64 [s1 + 0x6d8] = a3\n 27572: u64 [s1 + 0x6d0] = a2\n 27576: u64 [s1 + 0x6c8] = a1\n 27580: u64 [s1 + 0x6c0] = a0\n 27584: a0 = s1 + 0x240\n 27588: a1 = s1 + 0x6c0\n 27592: ra = 58, jump @0\n      : @739 [@dyn 29] (gas: 4)\n 27597: a0 = u64 [s1 + 0x238]\n 27601: a1 = i32 [a0]\n 27603: a0 = u64 [s1 + 0x240]\n 27607: jump @741 if a1 >u 159\n      : @740 (gas: 3)\n 27612: a2 = u64 [s1 + 0x238]\n 27616: u32 [a2 + 0] = 0xa0\n 27620: fallthrough\n      : @741 (gas: 13)\n 27621: a0 = a0 & 0xff\n 27625: a0 = a0 >u 0\n 27627: a0 = a0 << 0x38\n 27630: a1 = u64 [s1 + 0x230]\n 27634: u64 [a1 + 144] = 0\n 27638: u64 [a1 + 136] = 0\n 27642: u64 [a1 + 128] = 0\n 27646: u64 [a1 + 0x98] = a0\n 27650: i32 a1 = a1 + 0x80\n 27654: a2 = 0x20\n 27657: a0 = 0\n 27659: ecalli 11 // 'seal_return'\n 27661: fallthrough\n      : @742 (gas: 12)\n 27662: a0 = u64 [0x20028]\n 27667: a1 = u64 [0x20030]\n 27672: u64 [s1 + 0x278] = a0\n 27676: a0 = u64 [0x20038]\n 27681: u64 [s1 + 0x270] = a1\n 27685: a3 = u64 [0x20040]\n 27690: u64 [s1 + 0x268] = a0\n 27694: a1 = 0x2a0\n 27698: a2 = s1 + 0x260\n 27702: u64 [s1 + 0x260] = a3\n 27706: a0 = u64 [s1 + 0x1b0]\n 27710: ra = 60, jump @2\n      : @743 [@dyn 30] (gas: 21)\n 27715: a0 = s1 + 0x1000\n 27719: u64 [a0 + 4294965432] = 0\n 27723: a0 = s1 + 0x1000\n 27727: u64 [a0 + 4294965424] = 0\n 27731: a0 = s1 + 0x1000\n 27735: u64 [a0 + 4294965416] = 0\n 27739: a0 = s1 + 0x1000\n 27743: u64 [a0 + 4294965408] = 0\n 27747: a0 = s1 + 0x1000\n 27751: u64 [a0 + 4294965464] = 0\n 27755: a0 = s1 + 0x1000\n 27759: u64 [a0 + 4294965456] = 0\n 27763: a0 = s1 + 0x1000\n 27767: u64 [a0 + 4294965448] = 0\n 27771: a1 = s1 + 0x1000\n 27775: u64 [a1 + 4294965440] = 0x1\n 27780: a0 = s1 + 0x7ff\n 27784: a0 = a0 + 0xa1\n 27788: a1 = s1 + 0x7ff\n 27792: a1 = a1 + 0xc1\n 27796: ra = 62, jump @1\n      : @744 [@dyn 31] (gas: 5)\n 27801: a0 = 0\n 27803: a1 = u64 [s1 + 0x1c8]\n 27807: a2 = 0\n 27809: ecalli 11 // 'seal_return'\n 27811: fallthrough\n      : @745 (gas: 17)\n 27812: u64 [t1 + 16] = 0\n 27815: u64 [t1 + 24] = 0\n 27818: u64 [t1 + 8] = 0\n 27821: u64 [t1 + 0] = 0x717b484e\n 27827: u32 [t1 + 32] = 0x41000000\n 27834: u32 [t1 + 20] = 0\n 27837: u32 [t1 + 24] = 0\n 27840: u32 [t1 + 28] = 0\n 27843: u32 [t1 + 8] = 0\n 27846: u32 [t1 + 12] = 0\n 27849: u32 [t1 + 16] = 0\n 27852: u32 [t1 + 4] = 0\n 27855: i32 a1 = t1 + 0\n 27857: a0 = 0x1\n 27860: a2 = 0x24\n 27863: ecalli 11 // 'seal_return'\n 27865: fallthrough\n      : @746 (gas: 6)\n 27866: i32 a1 = t1 + 0\n 27868: a0 = 0x1\n 27871: a2 = 0\n 27873: ra = 0x40\n 27876: ecalli 11 // 'seal_return'\n 27878: fallthrough\n      : @747 [@dyn 32] (gas: 2)\n 27879: a1 = u64 [s1 + 0x228]\n 27883: jump @749 if a1 >u 95\n      : @748 (gas: 4)\n 27887: a0 = u64 [s1 + 0x238]\n 27891: u64 [s1 + 552] = 0x60\n 27896: u32 [a0 + 0] = 0x60\n 27899: fallthrough\n      : @749 (gas: 17)\n 27900: a3 = u64 [s1 + 0x230]\n 27904: a0 = u64 [a3 + 0x48]\n 27907: a1 = u64 [a3 + 0x58]\n 27910: a2 = u64 [a3 + 0x40]\n 27913: a3 = u64 [a3 + 0x50]\n 27916: a4 = reverse a0\n 27918: a0 = reverse a1\n 27920: a5 = reverse a2\n 27922: a2 = reverse a3\n 27924: a1 = a2 | a5\n 27927: a3 = a0 | a4\n 27930: a3 = a3 | a1\n 27933: a3 = a3 >> 0x20\n 27936: a1 = a1 | a4\n 27939: a1 = a1 << 0x20\n 27942: a1 = a1 | a3\n 27945: jump @660 if a1 != 0\n      : @750 (gas: 2)\n 27949: i32 a1 = a0 >> 0x10\n 27952: jump @660 if a1 != 0\n      : @751 (gas: 4)\n 27956: a1 = a0 + 0x3f\n 27959: a3 = u64 [s1 + 0x1f0]\n 27963: a1 = a1 & a3\n 27966: jump @660 if a1 >u 65536\n      : @752 (gas: 2)\n 27973: a3 = u64 [s1 + 0x228]\n 27977: jump @754 if a3 >=u a1\n      : @753 (gas: 4)\n 27980: a3 = u64 [s1 + 0x238]\n 27984: u32 [a3] = a1\n 27986: u64 [s1 + 0x228] = a1\n 27990: fallthrough\n      : @754 (gas: 41)\n 27991: i32 t0 = a0 + 0\n 27993: a3 = u64 [s1 + 0x230]\n 27997: a3 = a3 + t0\n 28000: u8 [a3 + 31] = 0\n 28003: u8 [a3 + 30] = 0\n 28006: u8 [a3 + 29] = 0\n 28009: u8 [a3 + 28] = 0\n 28012: u8 [a3 + 27] = 0\n 28015: u8 [a3 + 26] = 0\n 28018: u8 [a3 + 25] = 0\n 28021: u8 [a3 + 24] = 0\n 28024: u8 [a3 + 23] = 0\n 28027: u8 [a3 + 22] = 0\n 28030: u8 [a3 + 21] = 0\n 28033: u8 [a3 + 20] = 0\n 28036: u8 [a3 + 19] = 0\n 28039: u8 [a3 + 18] = 0\n 28042: u8 [a3 + 17] = 0\n 28045: u8 [a3 + 16] = 0\n 28048: u8 [a3 + 15] = 0\n 28051: u8 [a3 + 14] = 0\n 28054: u8 [a3 + 13] = 0\n 28057: u8 [a3 + 12] = 0\n 28060: u8 [a3 + 11] = 0\n 28063: u8 [a3 + 10] = 0\n 28066: u8 [a3 + 9] = 0\n 28069: u8 [a3 + 8] = 0\n 28072: u8 [a3 + 7] = 0\n 28075: u8 [a3 + 6] = 0\n 28078: u8 [a3 + 5] = 0\n 28081: u8 [a3 + 4] = 0\n 28084: u8 [a3 + 3] = 0xa0\n 28089: u8 [a3 + 2] = 0x79\n 28093: u8 [a3 + 1] = 0xc3\n 28098: a4 = a4 | a5\n 28101: a5 = 0xfffffffc\n 28111: a5 = a0 <u a5\n 28114: a5 = 0 if a2 != 0\n 28116: a5 = 0 if a4 != 0\n 28118: u8 [a3 + 0] = 0x8\n 28121: jump @756 if a5 != 0\n      : @755 (gas: 1)\n 28124: jump @660\n      : @756 (gas: 1)\n 28127: jump @758 if t0 <u 65532\n      : @757 (gas: 1)\n 28133: jump @660\n      : @758 (gas: 4)\n 28136: a1 = a0 + 0x43\n 28139: a5 = u64 [s1 + 0x1f0]\n 28143: a1 = a1 & a5\n 28146: jump @760 if a1 <=u 65536\n      : @759 (gas: 1)\n 28152: jump @660\n      : @760 (gas: 3)\n 28155: a5 = i32 [s1 + 0x228]\n 28159: i32 a3 = a0 + 0x4\n 28162: jump @762 if a5 >=u a1\n      : @761 (gas: 4)\n 28165: a5 = u64 [s1 + 0x238]\n 28169: u32 [a5] = a1\n 28171: u64 [s1 + 0x228] = a1\n 28175: fallthrough\n      : @762 (gas: 39)\n 28176: a1 = u64 [s1 + 0x230]\n 28180: a3 = a3 + a1\n 28183: u8 [a3 + 31] = 0x20\n 28187: u8 [a3 + 30] = 0\n 28190: u8 [a3 + 29] = 0\n 28193: u8 [a3 + 28] = 0\n 28196: u8 [a3 + 27] = 0\n 28199: u8 [a3 + 26] = 0\n 28202: u8 [a3 + 25] = 0\n 28205: u8 [a3 + 24] = 0\n 28208: u8 [a3 + 23] = 0\n 28211: u8 [a3 + 22] = 0\n 28214: u8 [a3 + 21] = 0\n 28217: u8 [a3 + 20] = 0\n 28220: u8 [a3 + 19] = 0\n 28223: u8 [a3 + 18] = 0\n 28226: u8 [a3 + 17] = 0\n 28229: u8 [a3 + 16] = 0\n 28232: u8 [a3 + 15] = 0\n 28235: u8 [a3 + 14] = 0\n 28238: u8 [a3 + 13] = 0\n 28241: u8 [a3 + 12] = 0\n 28244: u8 [a3 + 11] = 0\n 28247: u8 [a3 + 10] = 0\n 28250: u8 [a3 + 9] = 0\n 28253: u8 [a3 + 8] = 0\n 28256: u8 [a3 + 7] = 0\n 28259: u8 [a3 + 6] = 0\n 28262: u8 [a3 + 5] = 0\n 28265: u8 [a3 + 4] = 0\n 28268: u8 [a3 + 3] = 0\n 28271: u8 [a3 + 2] = 0\n 28274: u8 [a3 + 1] = 0\n 28277: a1 = 0xffffffdc\n 28287: a1 = a0 <u a1\n 28290: a1 = 0 if a2 != 0\n 28292: a1 = 0 if a4 != 0\n 28294: u8 [a3 + 0] = 0\n 28296: jump @764 if a1 != 0\n      : @763 (gas: 1)\n 28299: jump @660\n      : @764 (gas: 1)\n 28302: jump @766 if t0 <u 65500\n      : @765 (gas: 1)\n 28308: jump @660\n      : @766 (gas: 4)\n 28311: a1 = a0 + 0x63\n 28314: a5 = u64 [s1 + 0x1f0]\n 28318: a1 = a1 & a5\n 28321: jump @768 if a1 <=u 65536\n      : @767 (gas: 1)\n 28327: jump @660\n      : @768 (gas: 3)\n 28330: a5 = i32 [s1 + 0x228]\n 28334: i32 a3 = a0 + 0x24\n 28337: jump @770 if a5 >=u a1\n      : @769 (gas: 4)\n 28340: a5 = u64 [s1 + 0x238]\n 28344: u32 [a5] = a1\n 28346: u64 [s1 + 0x228] = a1\n 28350: fallthrough\n      : @770 (gas: 39)\n 28351: a1 = u64 [s1 + 0x230]\n 28355: a3 = a3 + a1\n 28358: u8 [a3 + 31] = 0xd\n 28362: u8 [a3 + 30] = 0\n 28365: u8 [a3 + 29] = 0\n 28368: u8 [a3 + 28] = 0\n 28371: u8 [a3 + 27] = 0\n 28374: u8 [a3 + 26] = 0\n 28377: u8 [a3 + 25] = 0\n 28380: u8 [a3 + 24] = 0\n 28383: u8 [a3 + 23] = 0\n 28386: u8 [a3 + 22] = 0\n 28389: u8 [a3 + 21] = 0\n 28392: u8 [a3 + 20] = 0\n 28395: u8 [a3 + 19] = 0\n 28398: u8 [a3 + 18] = 0\n 28401: u8 [a3 + 17] = 0\n 28404: u8 [a3 + 16] = 0\n 28407: u8 [a3 + 15] = 0\n 28410: u8 [a3 + 14] = 0\n 28413: u8 [a3 + 13] = 0\n 28416: u8 [a3 + 12] = 0\n 28419: u8 [a3 + 11] = 0\n 28422: u8 [a3 + 10] = 0\n 28425: u8 [a3 + 9] = 0\n 28428: u8 [a3 + 8] = 0\n 28431: u8 [a3 + 7] = 0\n 28434: u8 [a3 + 6] = 0\n 28437: u8 [a3 + 5] = 0\n 28440: u8 [a3 + 4] = 0\n 28443: u8 [a3 + 3] = 0\n 28446: u8 [a3 + 2] = 0\n 28449: u8 [a3 + 1] = 0\n 28452: a1 = 0xffffffbc\n 28462: a1 = a0 <u a1\n 28465: a1 = 0 if a2 != 0\n 28467: a1 = 0 if a4 != 0\n 28469: u8 [a3 + 0] = 0\n 28471: jump @772 if a1 != 0\n      : @771 (gas: 1)\n 28474: jump @660\n      : @772 (gas: 1)\n 28477: jump @774 if t0 <u 65468\n      : @773 (gas: 1)\n 28483: jump @660\n      : @774 (gas: 4)\n 28486: a1 = a0 + 0x83\n 28490: a3 = u64 [s1 + 0x1f0]\n 28494: a1 = a1 & a3\n 28497: jump @776 if a1 <=u 65536\n      : @775 (gas: 1)\n 28503: jump @660\n      : @776 (gas: 2)\n 28506: t1 = i32 [s1 + 0x228]\n 28510: jump @778 if t1 >=u a1\n      : @777 (gas: 3)\n 28513: a2 = u64 [s1 + 0x238]\n 28517: u32 [a2] = a1\n 28519: fallthrough\n      : @778 (gas: 38)\n 28520: i32 a1 = a0 + 0x44\n 28523: a2 = u64 [s1 + 0x230]\n 28527: a1 = a1 + a2\n 28530: u8 [a1 + 31] = 0\n 28533: u8 [a1 + 30] = 0\n 28536: u8 [a1 + 29] = 0\n 28539: u8 [a1 + 28] = 0\n 28542: u8 [a1 + 27] = 0\n 28545: u8 [a1 + 26] = 0\n 28548: u8 [a1 + 25] = 0\n 28551: u8 [a1 + 24] = 0\n 28554: u8 [a1 + 23] = 0\n 28557: u8 [a1 + 22] = 0\n 28560: u8 [a1 + 21] = 0\n 28563: u8 [a1 + 20] = 0\n 28566: u8 [a1 + 19] = 0\n 28569: u8 [a1 + 18] = 0\n 28572: u8 [a1 + 17] = 0\n 28575: u8 [a1 + 16] = 0\n 28578: u8 [a1 + 15] = 0\n 28581: u8 [a1 + 14] = 0\n 28584: u8 [a1 + 13] = 0\n 28587: u8 [a1 + 12] = 0x74\n 28591: u8 [a1 + 11] = 0x6e\n 28595: u8 [a1 + 10] = 0x65\n 28599: u8 [a1 + 9] = 0x70\n 28603: u8 [a1 + 8] = 0x73\n 28607: u8 [a1 + 7] = 0x2d\n 28611: u8 [a1 + 6] = 0x79\n 28615: u8 [a1 + 5] = 0x64\n 28619: u8 [a1 + 4] = 0x61\n 28623: u8 [a1 + 3] = 0x65\n 28627: u8 [a1 + 2] = 0x72\n 28631: u8 [a1 + 1] = 0x6c\n 28635: u8 [a1 + 0] = 0x61\n 28638: a1 = 0x64\n 28641: ra = 0x58\n 28644: jump @8\n      : @779 (gas: 10)\n 28647: a1 = s1 + 0x7ff\n 28651: a1 = a1 + 0x1b9\n 28655: u64 [a1 + 96] = 0\n 28658: u64 [a1 + 88] = 0\n 28661: u64 [a1 + 80] = 0\n 28664: u64 [a1 + 72] = 0x1\n 28668: a0 = s1 + 0x540\n 28672: a1 = s1 + 0x7ff\n 28676: a1 = a1 + 0x201\n 28680: ra = 66, jump @0\n      : @780 [@dyn 33] (gas: 10)\n 28685: a0 = u64 [s1 + 0x550]\n 28689: u64 [s1 + 0x160] = a0\n 28693: a0 = u64 [s1 + 0x548]\n 28697: u64 [s1 + 0x150] = a0\n 28701: a0 = u64 [s1 + 0x238]\n 28705: a2 = i32 [a0]\n 28707: a0 = u64 [s1 + 0x540]\n 28711: u64 [s1 + 0x158] = a0\n 28715: u64 [s1 + 0x178] = a2\n 28719: jump @782 if a2 >u 95\n      : @781 (gas: 4)\n 28723: a0 = u64 [s1 + 0x238]\n 28727: u64 [s1 + 376] = 0x60\n 28732: u32 [a0 + 0] = 0x60\n 28735: fallthrough\n      : @782 (gas: 22)\n 28736: a0 = u64 [s1 + 0x230]\n 28740: a1 = u64 [a0 + 0x58]\n 28743: a2 = u64 [a0 + 0x50]\n 28746: a5 = u64 [a0 + 0x48]\n 28749: a4 = u64 [a0 + 0x40]\n 28752: a0 = reverse a1\n 28754: a3 = reverse a2\n 28756: a1 = reverse a5\n 28758: a2 = reverse a4\n 28760: a5 = a2 >u 0\n 28762: a4 = a1 >u 0\n 28764: a4 = a5 if a2 != 0\n 28767: t1 = a3 >u 0\n 28769: u64 [s1 + 0x228] = a0\n 28773: a5 = a0 <u 0xffffffffffffffa0\n 28776: a5 = a5 ^ 0x1\n 28779: u64 [s1 + 0x1a0] = a3\n 28783: a5 = t1 if a3 != 0\n 28786: a0 = a1 | a2\n 28789: u64 [s1 + 0x170] = a0\n 28793: a5 = a4 if a0 != 0\n 28796: jump @784 if a5 == 0\n      : @783 (gas: 1)\n 28799: jump @994\n      : @784 (gas: 27)\n 28802: a5 = u64 [s1 + 0x228]\n 28806: t2 = a5 + 0x60\n 28809: a4 = t2 <u a5\n 28812: t0 = u64 [s1 + 0x1a0]\n 28816: a3 = t0 + a4\n 28819: a0 = a3 <u t0\n 28822: a0 = a4 if a4 == 0\n 28825: a0 = a0 + a1\n 28828: a4 = a0 <u a1\n 28831: a4 = a4 + a2\n 28834: t1 = reverse a4\n 28836: ra = reverse a0\n 28838: a0 = reverse a3\n 28840: a3 = reverse t2\n 28842: a4 = u64 [s1 + 0x230]\n 28846: u64 [a4 + 0x58] = a3\n 28849: u64 [a4 + 0x50] = a0\n 28852: u64 [a4 + 0x48] = ra\n 28855: a0 = a5 | a1\n 28858: a2 = t0 | a2\n 28861: a0 = a0 | a2\n 28864: a0 = a0 >> 0x20\n 28867: a1 = a1 | a2\n 28870: a1 = a1 << 0x20\n 28873: a0 = a0 | a1\n 28876: u64 [a4 + 0x40] = t1\n 28879: jump @786 if a0 == 0\n      : @785 (gas: 1)\n 28882: jump @660\n      : @786 (gas: 3)\n 28885: a0 = u64 [s1 + 0x228]\n 28889: i32 a0 = a0 >> 0x10\n 28892: jump @788 if a0 == 0\n      : @787 (gas: 1)\n 28895: jump @660\n      : @788 (gas: 6)\n 28898: a0 = u64 [s1 + 0x228]\n 28902: a0 = a0 + 0x3f\n 28905: a1 = u64 [s1 + 0x1f0]\n 28909: a1 = a1 & a0\n 28912: u64 [s1 + 0x148] = a1\n 28916: jump @790 if a1 <=u 65536\n      : @789 (gas: 1)\n 28922: jump @660\n      : @790 (gas: 3)\n 28925: a0 = u64 [s1 + 0x148]\n 28929: a1 = u64 [s1 + 0x178]\n 28933: jump @792 if a1 >=u a0\n      : @791 (gas: 5)\n 28936: a0 = u64 [s1 + 0x238]\n 28940: t0 = u64 [s1 + 0x148]\n 28944: u32 [a0] = t0\n 28946: u64 [s1 + 0x178] = t0\n 28950: fallthrough\n      : @792 (gas: 76)\n 28951: a3 = u64 [s1 + 0x228]\n 28955: i32 a0 = a3 + 0\n 28957: a1 = u64 [s1 + 0x230]\n 28961: a2 = a1 + a0\n 28964: a4 = u64 [s1 + 0x190]\n 28968: u8 [a2 + 0x10] = a4\n 28971: a1 = u64 [s1 + 0x180]\n 28975: a0 = a1 >> 0x38\n 28978: u8 [a2 + 0xf] = a0\n 28981: a0 = a1 >> 0x30\n 28984: u8 [a2 + 0xe] = a0\n 28987: a0 = a1 >> 0x28\n 28990: u8 [a2 + 0xd] = a0\n 28993: a0 = a1 >> 0x20\n 28996: u8 [a2 + 0xc] = a0\n 28999: a0 = a1 >> 0x18\n 29002: u8 [a2 + 0xb] = a0\n 29005: a0 = a1 >> 0x10\n 29008: u8 [a2 + 0xa] = a0\n 29011: a0 = a1 >> 0x8\n 29014: u8 [a2 + 0x9] = a0\n 29017: u8 [a2 + 0x8] = a1\n 29020: a1 = u64 [s1 + 0x188]\n 29024: a0 = a1 >> 0x38\n 29027: u8 [a2 + 0x7] = a0\n 29030: a0 = a1 >> 0x30\n 29033: u8 [a2 + 0x6] = a0\n 29036: a0 = a1 >> 0x28\n 29039: u8 [a2 + 0x5] = a0\n 29042: a0 = a1 >> 0x20\n 29045: u8 [a2 + 0x4] = a0\n 29048: a0 = a1 >> 0x18\n 29051: u8 [a2 + 0x3] = a0\n 29054: a0 = a1 >> 0x10\n 29057: u8 [a2 + 0x2] = a0\n 29060: a0 = a1 >> 0x8\n 29063: u8 [a2 + 0x1] = a0\n 29066: u8 [a2] = a1\n 29068: a1 = u64 [s1 + 0x198]\n 29072: u8 [a2 + 0x18] = a1\n 29075: a0 = a4 >> 0x38\n 29078: u8 [a2 + 0x17] = a0\n 29081: a0 = a4 >> 0x30\n 29084: u8 [a2 + 0x16] = a0\n 29087: a0 = a4 >> 0x28\n 29090: u8 [a2 + 0x15] = a0\n 29093: a0 = a4 >> 0x20\n 29096: u8 [a2 + 0x14] = a0\n 29099: a0 = a4 >> 0x18\n 29102: u8 [a2 + 0x13] = a0\n 29105: a0 = a4 >> 0x10\n 29108: u8 [a2 + 0x12] = a0\n 29111: a0 = a4 >> 0x8\n 29114: u8 [a2 + 0x11] = a0\n 29117: a0 = a1 >> 0x38\n 29120: u8 [a2 + 0x1f] = a0\n 29123: a0 = a1 >> 0x30\n 29126: u8 [a2 + 0x1e] = a0\n 29129: a0 = a1 >> 0x28\n 29132: u8 [a2 + 0x1d] = a0\n 29135: a0 = a1 >> 0x20\n 29138: u8 [a2 + 0x1c] = a0\n 29141: a0 = a1 >> 0x18\n 29144: u8 [a2 + 0x1b] = a0\n 29147: a0 = a1 >> 0x10\n 29150: u8 [a2 + 0x1a] = a0\n 29153: a0 = a1 >> 0x8\n 29156: a1 = 0xffffffe0\n 29166: a1 = a3 <u a1\n 29169: a3 = u64 [s1 + 0x1a0]\n 29173: a1 = 0 if a3 != 0\n 29175: a3 = u64 [s1 + 0x170]\n 29179: a1 = 0 if a3 != 0\n 29181: u64 [s1 + 0x198] = a2\n 29185: u8 [a2 + 0x19] = a0\n 29188: jump @794 if a1 != 0\n      : @793 (gas: 1)\n 29191: jump @660\n      : @794 (gas: 4)\n 29194: a0 = u64 [s1 + 0x228]\n 29198: i32 a1 = a0 >> 0x5\n 29201: u64 [s1 + 0x190] = a1\n 29205: jump @796 if a1 <u 2047\n      : @795 (gas: 1)\n 29210: jump @660\n      : @796 (gas: 6)\n 29213: a0 = u64 [s1 + 0x228]\n 29217: a0 = a0 + 0x5f\n 29220: a1 = u64 [s1 + 0x1f0]\n 29224: a1 = a1 & a0\n 29227: u64 [s1 + 0x188] = a1\n 29231: jump @798 if a1 <=u 65536\n      : @797 (gas: 1)\n 29237: jump @660\n      : @798 (gas: 5)\n 29240: a0 = u64 [s1 + 0x228]\n 29244: i32 a1 = a0 + 0x20\n 29247: a0 = u64 [s1 + 0x188]\n 29251: a2 = u64 [s1 + 0x178]\n 29255: jump @800 if a2 >=u a0\n      : @799 (gas: 4)\n 29258: a0 = u64 [s1 + 0x238]\n 29262: a2 = u64 [s1 + 0x188]\n 29266: u32 [a0] = a2\n 29268: fallthrough\n      : @800 (gas: 101)\n 29269: a0 = u64 [s1 + 0x230]\n 29273: a3 = a0 + a1\n 29276: a1 = u64 [s1 + 0x90]\n 29280: u8 [a3 + 0x8] = a1\n 29283: a0 = u64 [s1 + 0x88]\n 29287: a2 = a0 >> 0x38\n 29290: u64 [s1 + 0x140] = a2\n 29294: u8 [a3 + 0x7] = a2\n 29297: a2 = a0 >> 0x30\n 29300: u64 [s1 + 0x138] = a2\n 29304: u8 [a3 + 0x6] = a2\n 29307: a2 = a0 >> 0x28\n 29310: u64 [s1 + 0x130] = a2\n 29314: u8 [a3 + 0x5] = a2\n 29317: a2 = a0 >> 0x20\n 29320: u64 [s1 + 0x128] = a2\n 29324: u8 [a3 + 0x4] = a2\n 29327: a2 = a0 >> 0x18\n 29330: u64 [s1 + 0x120] = a2\n 29334: u8 [a3 + 0x3] = a2\n 29337: a2 = a0 >> 0x10\n 29340: u64 [s1 + 0x118] = a2\n 29344: u8 [a3 + 0x2] = a2\n 29347: a2 = a0 >> 0x8\n 29350: u64 [s1 + 0x110] = a2\n 29354: u8 [a3 + 0x1] = a2\n 29357: u8 [a3] = a0\n 29359: a0 = u64 [s1 + 0x98]\n 29363: u8 [a3 + 0x10] = a0\n 29366: a2 = a1 >> 0x38\n 29369: u64 [s1 + 0xf8] = a2\n 29373: u8 [a3 + 0xf] = a2\n 29376: a2 = a1 >> 0x30\n 29379: u64 [s1 + 0xe8] = a2\n 29383: u8 [a3 + 0xe] = a2\n 29386: a2 = a1 >> 0x28\n 29389: u64 [s1 + 0xd8] = a2\n 29393: u8 [a3 + 0xd] = a2\n 29396: a2 = a1 >> 0x20\n 29399: u64 [s1 + 0xc8] = a2\n 29403: u8 [a3 + 0xc] = a2\n 29406: a2 = a1 >> 0x18\n 29409: u64 [s1 + 0xb8] = a2\n 29413: u8 [a3 + 0xb] = a2\n 29416: a2 = a1 >> 0x10\n 29419: u64 [s1 + 0xa8] = a2\n 29423: u8 [a3 + 0xa] = a2\n 29426: a1 = a1 >> 0x8\n 29429: u64 [s1 + 0x78] = a1\n 29432: u8 [a3 + 0x9] = a1\n 29435: a1 = u64 [s1 + 0x80]\n 29439: u8 [a3 + 0x18] = a1\n 29442: a2 = a0 >> 0x38\n 29445: u64 [s1 + 0x108] = a2\n 29449: u8 [a3 + 0x17] = a2\n 29452: a2 = a0 >> 0x30\n 29455: u64 [s1 + 0x100] = a2\n 29459: u8 [a3 + 0x16] = a2\n 29462: a2 = a0 >> 0x28\n 29465: u64 [s1 + 0xf0] = a2\n 29469: u8 [a3 + 0x15] = a2\n 29472: a2 = a0 >> 0x20\n 29475: u64 [s1 + 0xe0] = a2\n 29479: u8 [a3 + 0x14] = a2\n 29482: a2 = a0 >> 0x18\n 29485: u64 [s1 + 0xd0] = a2\n 29489: u8 [a3 + 0x13] = a2\n 29492: a2 = a0 >> 0x10\n 29495: u64 [s1 + 0xc0] = a2\n 29499: u8 [a3 + 0x12] = a2\n 29502: a0 = a0 >> 0x8\n 29505: u64 [s1 + 0xb0] = a0\n 29509: u8 [a3 + 0x11] = a0\n 29512: a0 = a1 >> 0x38\n 29515: u64 [s1 + 0xa0] = a0\n 29519: u8 [a3 + 0x1f] = a0\n 29522: a0 = a1 >> 0x30\n 29525: u64 [s1 + 0x70] = a0\n 29528: u8 [a3 + 0x1e] = a0\n 29531: a0 = a1 >> 0x28\n 29534: u64 [s1 + 0x68] = a0\n 29537: u8 [a3 + 0x1d] = a0\n 29540: a0 = a1 >> 0x20\n 29543: u64 [s1 + 0x60] = a0\n 29546: u8 [a3 + 0x1c] = a0\n 29549: a0 = a1 >> 0x18\n 29552: u64 [s1 + 0x58] = a0\n 29555: u8 [a3 + 0x1b] = a0\n 29558: a0 = a1 >> 0x10\n 29561: u64 [s1 + 0x50] = a0\n 29564: u8 [a3 + 0x1a] = a0\n 29567: a1 = a1 >> 0x8\n 29570: u64 [s1 + 0x48] = a1\n 29573: u64 [s1 + 0x40] = a3\n 29576: u8 [a3 + 0x19] = a1\n 29579: a0 = 0x30060\n 29584: u64 [s1 + 0x180] = a0\n 29588: i32 a0 = a0 + 0\n 29590: u64 [s1 + 0x178] = a0\n 29594: ecalli 4 // 'caller'\n 29596: fallthrough\n      : @801 (gas: 8)\n 29597: a0 = 0xffffffc0\n 29607: a1 = u64 [s1 + 0x228]\n 29611: a0 = a1 <u a0\n 29614: a1 = u64 [s1 + 0x1a0]\n 29618: a0 = 0 if a1 != 0\n 29620: a1 = u64 [s1 + 0x170]\n 29624: a0 = 0 if a1 != 0\n 29626: jump @803 if a0 != 0\n      : @802 (gas: 1)\n 29629: jump @660\n      : @803 (gas: 3)\n 29632: a0 = u64 [s1 + 0x228]\n 29636: i32 a0 = a0 >> 0x6\n 29639: jump @805 if a0 <u 1023\n      : @804 (gas: 1)\n 29644: jump @660\n      : @805 (gas: 6)\n 29647: a0 = u64 [s1 + 0x228]\n 29651: a0 = a0 + 0x7f\n 29654: a1 = u64 [s1 + 0x1f0]\n 29658: a1 = a1 & a0\n 29661: u64 [s1 + 0x28] = a1\n 29664: jump @807 if a1 <=u 65536\n      : @806 (gas: 1)\n 29670: jump @660\n      : @807 (gas: 20)\n 29673: a2 = u64 [s1 + 0x180]\n 29677: a0 = u64 [a2 + 0x8]\n 29680: a1 = u64 [a2]\n 29682: a3 = i32 [a2 + 0x10]\n 29685: a0 = reverse a0\n 29687: a2 = a0 >> 0x20\n 29690: a1 = reverse a1\n 29692: a4 = a1 << 0x20\n 29695: a2 = a2 | a4\n 29698: a4 = a0 << 0x20\n 29701: a3 = reverse a3\n 29703: a0 = u64 [s1 + 0x238]\n 29707: t0 = i32 [a0]\n 29709: a3 = a3 >> 0x20\n 29712: a3 = a3 | a4\n 29715: a1 = a1 >> 0x20\n 29718: a0 = u64 [s1 + 0x228]\n 29722: i32 a4 = a0 + 0x40\n 29725: a0 = u64 [s1 + 0x28]\n 29728: jump @809 if t0 >=u a0\n      : @808 (gas: 4)\n 29731: a0 = u64 [s1 + 0x238]\n 29735: t0 = u64 [s1 + 0x28]\n 29738: u32 [a0] = t0\n 29740: fallthrough\n      : @809 (gas: 57)\n 29741: a5 = u64 [s1 + 0x230]\n 29745: a5 = a5 + a4\n 29748: a1 = reverse a1\n 29750: a2 = reverse a2\n 29752: a3 = reverse a3\n 29754: u8 [a5 + 0x18] = a3\n 29757: u8 [a5 + 11] = 0\n 29760: u8 [a5 + 10] = 0\n 29763: u8 [a5 + 9] = 0\n 29766: u8 [a5 + 7] = 0\n 29769: u8 [a5 + 6] = 0\n 29772: u8 [a5 + 5] = 0\n 29775: u8 [a5 + 4] = 0\n 29778: u8 [a5 + 3] = 0\n 29781: u8 [a5 + 2] = 0\n 29784: u8 [a5 + 1] = 0\n 29787: u8 [a5 + 0] = 0\n 29789: a4 = a3 >> 0x38\n 29792: u8 [a5 + 0x1f] = a4\n 29795: a4 = a3 >> 0x30\n 29798: u8 [a5 + 0x1e] = a4\n 29801: a4 = a3 >> 0x28\n 29804: u8 [a5 + 0x1d] = a4\n 29807: a4 = a3 >> 0x20\n 29810: u8 [a5 + 0x1c] = a4\n 29813: a4 = a3 >> 0x18\n 29816: u8 [a5 + 0x1b] = a4\n 29819: a4 = a3 >> 0x10\n 29822: u8 [a5 + 0x1a] = a4\n 29825: a3 = a3 >> 0x8\n 29828: u8 [a5 + 0x19] = a3\n 29831: u8 [a5 + 0x10] = a2\n 29834: a3 = a2 >> 0x38\n 29837: u8 [a5 + 0x17] = a3\n 29840: a3 = a2 >> 0x30\n 29843: u8 [a5 + 0x16] = a3\n 29846: a3 = a2 >> 0x28\n 29849: u8 [a5 + 0x15] = a3\n 29852: a3 = a2 >> 0x20\n 29855: u8 [a5 + 0x14] = a3\n 29858: a3 = a2 >> 0x18\n 29861: u8 [a5 + 0x13] = a3\n 29864: a3 = a2 >> 0x10\n 29867: u8 [a5 + 0x12] = a3\n 29870: a2 = a2 >> 0x8\n 29873: u8 [a5 + 0x11] = a2\n 29876: u8 [a5 + 0x8] = a1\n 29879: a2 = a1 >> 0x38\n 29882: u8 [a5 + 0xf] = a2\n 29885: a2 = a1 >> 0x30\n 29888: u8 [a5 + 0xe] = a2\n 29891: a2 = a1 >> 0x28\n 29894: u8 [a5 + 0xd] = a2\n 29897: a1 = a1 >> 0x20\n 29900: u64 [s1 + 0x18] = a5\n 29903: u8 [a5 + 0xc] = a1\n 29906: jump @811 if t0 >u 95\n      : @810 (gas: 4)\n 29910: t0 = 0x60\n 29913: a1 = u64 [s1 + 0x238]\n 29917: u32 [a1] = t0\n 29919: fallthrough\n      : @811 (gas: 30)\n 29920: a4 = u64 [s1 + 0x230]\n 29924: a1 = u64 [a4 + 0x40]\n 29927: a2 = u64 [a4 + 0x48]\n 29930: a3 = u64 [a4 + 0x50]\n 29933: a4 = u64 [a4 + 0x58]\n 29936: a0 = reverse a1\n 29938: a5 = reverse a2\n 29940: a3 = reverse a3\n 29942: a1 = reverse a4\n 29944: a4 = a1 + 0x20\n 29947: u64 [s1 + 0x1a0] = a1\n 29951: a1 = a4 <u a1\n 29954: a2 = a3 + a1\n 29957: u64 [s1 + 0x170] = a3\n 29961: a3 = a2 <u a3\n 29964: a3 = a1 if a1 == 0\n 29967: a3 = a3 + a5\n 29970: u64 [s1 + 0x38] = a5\n 29973: a1 = a3 <u a5\n 29976: u64 [s1 + 0x30] = a0\n 29979: a1 = a1 + a0\n 29982: u64 [s1 + 0x20] = a4\n 29985: a4 = a4 | a3\n 29988: a1 = a1 | a2\n 29991: a4 = a4 | a1\n 29994: a4 = a4 >> 0x20\n 29997: a1 = a1 | a3\n 30000: a1 = a1 << 0x20\n 30003: a1 = a1 | a4\n 30006: jump @813 if a1 == 0\n      : @812 (gas: 1)\n 30009: jump @660\n      : @813 (gas: 3)\n 30012: a1 = u64 [s1 + 0x20]\n 30015: i32 a1 = a1 >> 0x10\n 30018: jump @815 if a1 == 0\n      : @814 (gas: 1)\n 30021: jump @660\n      : @815 (gas: 5)\n 30024: a1 = u64 [s1 + 0x20]\n 30027: a1 = a1 + 0x3f\n 30030: a2 = u64 [s1 + 0x1f0]\n 30034: a1 = a1 & a2\n 30037: jump @817 if a1 <=u 65536\n      : @816 (gas: 1)\n 30043: jump @660\n      : @817 (gas: 1)\n 30046: jump @819 if t0 >=u a1\n      : @818 (gas: 3)\n 30049: a0 = u64 [s1 + 0x238]\n 30053: u32 [a0] = a1\n 30055: fallthrough\n      : @819 (gas: 63)\n 30056: a0 = i32 [s1 + 0x20]\n 30059: a1 = u64 [s1 + 0x230]\n 30063: a1 = a1 + a0\n 30066: u8 [a1 + 31] = 0\n 30069: u8 [a1 + 30] = 0\n 30072: u8 [a1 + 29] = 0\n 30075: u8 [a1 + 28] = 0\n 30078: u8 [a1 + 27] = 0\n 30081: u8 [a1 + 26] = 0\n 30084: u8 [a1 + 25] = 0\n 30087: u8 [a1 + 24] = 0\n 30090: u8 [a1 + 23] = 0\n 30093: u8 [a1 + 22] = 0\n 30096: u8 [a1 + 21] = 0\n 30099: u8 [a1 + 20] = 0\n 30102: u8 [a1 + 19] = 0\n 30105: u8 [a1 + 18] = 0\n 30108: u8 [a1 + 17] = 0\n 30111: u8 [a1 + 16] = 0\n 30114: u8 [a1 + 15] = 0\n 30117: u8 [a1 + 14] = 0\n 30120: u8 [a1 + 13] = 0\n 30123: u8 [a1 + 12] = 0\n 30126: u8 [a1 + 11] = 0\n 30129: u8 [a1 + 10] = 0\n 30132: u8 [a1 + 9] = 0\n 30135: u8 [a1 + 8] = 0\n 30138: u8 [a1 + 7] = 0\n 30141: u8 [a1 + 6] = 0\n 30144: u8 [a1 + 5] = 0\n 30147: u8 [a1 + 4] = 0\n 30150: u8 [a1 + 3] = 0xea\n 30155: u8 [a1 + 2] = 0x9f\n 30160: u8 [a1 + 1] = 0x47\n 30164: u64 [s1 + 0x10] = a1\n 30167: u8 [a1 + 0] = 0x11\n 30170: a1 = u64 [s1 + 0x1a0]\n 30174: a0 = a1 + 0x24\n 30177: a1 = a0 <u a1\n 30180: a3 = u64 [s1 + 0x170]\n 30184: a2 = a3 + a1\n 30187: a3 = a2 <u a3\n 30190: a3 = a1 if a1 == 0\n 30193: a1 = u64 [s1 + 0x38]\n 30196: a3 = a3 + a1\n 30199: a1 = a3 <u a1\n 30202: a4 = u64 [s1 + 0x30]\n 30205: a4 = a4 + a1\n 30208: u64 [s1 + 0x508] = a2\n 30212: u64 [s1 + 0x500] = a0\n 30216: a0 = u64 [s1 + 0x208]\n 30220: u64 [s1 + 0x538] = a0\n 30224: a0 = u64 [s1 + 0x210]\n 30228: u64 [s1 + 0x530] = a0\n 30232: a0 = u64 [s1 + 0x218]\n 30236: u64 [s1 + 0x528] = a0\n 30240: a0 = u64 [s1 + 0x220]\n 30244: u64 [s1 + 0x520] = a0\n 30248: u64 [s1 + 0x510] = a3\n 30252: a0 = s1 + 0x520\n 30256: a1 = s1 + 0x500\n 30260: u64 [s1 + 0x518] = a4\n 30264: ra = 68, jump @1084\n      : @820 [@dyn 34] (gas: 2)\n 30269: a0 = u64 [s1 + 0x1e8]\n 30273: jump @822 if a0 == 0\n      : @821 (gas: 1)\n 30276: jump @660\n      : @822 (gas: 2)\n 30279: a1 = u64 [s1 + 0x1e0]\n 30283: jump @824 if a1 <=u 65536\n      : @823 (gas: 1)\n 30289: jump @660\n      : @824 (gas: 5)\n 30292: a0 = u64 [s1 + 0x238]\n 30296: a1 = i32 [a0]\n 30298: a0 = u64 [s1 + 0x1e0]\n 30302: u64 [s1 + 0x228] = a1\n 30306: jump @826 if a1 >=u a0\n      : @825 (gas: 5)\n 30309: a0 = u64 [s1 + 0x238]\n 30313: a1 = u64 [s1 + 0x1e0]\n 30317: u32 [a0] = a1\n 30319: u64 [s1 + 0x228] = a1\n 30323: fallthrough\n      : @826 (gas: 105)\n 30324: t1 = u64 [s1 + 0x168]\n 30328: a0 = u8 [t1 + 0x11]\n 30331: a1 = u8 [t1 + 0x10]\n 30334: a2 = u8 [t1 + 0x12]\n 30337: a3 = u8 [t1 + 0x13]\n 30340: a0 = a0 << 0x8\n 30343: a0 = a0 | a1\n 30346: a2 = a2 << 0x10\n 30349: a3 = a3 << 0x18\n 30352: a2 = a2 | a3\n 30355: a0 = a0 | a2\n 30358: a1 = u8 [t1 + 0x15]\n 30361: a2 = u8 [t1 + 0x14]\n 30364: a3 = u8 [t1 + 0x16]\n 30367: a4 = u8 [t1 + 0x17]\n 30370: a1 = a1 << 0x8\n 30373: a1 = a1 | a2\n 30376: a3 = a3 << 0x10\n 30379: a4 = a4 << 0x18\n 30382: a3 = a3 | a4\n 30385: a1 = a1 | a3\n 30388: a1 = a1 << 0x20\n 30391: t0 = a1 | a0\n 30394: a1 = u8 [t1 + 0x1]\n 30397: a2 = u8 [t1]\n 30399: a3 = u8 [t1 + 0x2]\n 30402: a4 = u8 [t1 + 0x3]\n 30405: a1 = a1 << 0x8\n 30408: a1 = a1 | a2\n 30411: a3 = a3 << 0x10\n 30414: a4 = a4 << 0x18\n 30417: a3 = a3 | a4\n 30420: a1 = a1 | a3\n 30423: a2 = u8 [t1 + 0x5]\n 30426: a3 = u8 [t1 + 0x4]\n 30429: a4 = u8 [t1 + 0x6]\n 30432: a5 = u8 [t1 + 0x7]\n 30435: a2 = a2 << 0x8\n 30438: a2 = a2 | a3\n 30441: a4 = a4 << 0x10\n 30444: a5 = a5 << 0x18\n 30447: a4 = a4 | a5\n 30450: a2 = a2 | a4\n 30453: a2 = a2 << 0x20\n 30456: ra = a2 | a1\n 30459: a2 = u8 [t1 + 0x19]\n 30462: a3 = u8 [t1 + 0x18]\n 30465: a4 = u8 [t1 + 0x1a]\n 30468: a5 = u8 [t1 + 0x1b]\n 30471: a2 = a2 << 0x8\n 30474: a2 = a2 | a3\n 30477: a4 = a4 << 0x10\n 30480: a5 = a5 << 0x18\n 30483: a4 = a4 | a5\n 30486: a2 = a2 | a4\n 30489: a3 = u8 [t1 + 0x1d]\n 30492: a4 = u8 [t1 + 0x1c]\n 30495: a5 = u8 [t1 + 0x1e]\n 30498: a0 = u8 [t1 + 0x1f]\n 30501: a3 = a3 << 0x8\n 30504: a3 = a3 | a4\n 30507: a5 = a5 << 0x10\n 30510: a0 = a0 << 0x18\n 30513: a0 = a0 | a5\n 30516: a0 = a0 | a3\n 30519: a0 = a0 << 0x20\n 30522: a2 = a2 | a0\n 30525: a0 = u8 [t1 + 0x9]\n 30528: a3 = u8 [t1 + 0x8]\n 30531: a4 = u8 [t1 + 0xa]\n 30534: a5 = u8 [t1 + 0xb]\n 30537: a0 = a0 << 0x8\n 30540: a0 = a0 | a3\n 30543: a4 = a4 << 0x10\n 30546: a5 = a5 << 0x18\n 30549: a4 = a4 | a5\n 30552: a0 = a0 | a4\n 30555: a3 = u8 [t1 + 0xd]\n 30558: a4 = u8 [t1 + 0xc]\n 30561: a5 = u8 [t1 + 0xe]\n 30564: a1 = u8 [t1 + 0xf]\n 30567: a3 = a3 << 0x8\n 30570: a3 = a3 | a4\n 30573: a5 = a5 << 0x10\n 30576: a1 = a1 << 0x18\n 30579: a1 = a1 | a5\n 30582: a1 = a1 | a3\n 30585: a1 = a1 << 0x20\n 30588: a0 = a0 | a1\n 30591: a3 = reverse a0\n 30593: a1 = reverse a2\n 30595: a0 = reverse ra\n 30597: a2 = reverse t0\n 30599: u64 [s1 + 0x208] = a0\n 30603: u64 [s1 + 0x1e8] = a2\n 30607: a0 = a0 | a2\n 30610: u64 [s1 + 0x220] = a1\n 30614: a1 = a1 | a3\n 30617: a1 = a1 | a0\n 30620: a1 = a1 >> 0x20\n 30623: u64 [s1 + 0x210] = a3\n 30627: a0 = a0 | a3\n 30630: a0 = a0 << 0x20\n 30633: a0 = a0 | a1\n 30636: jump @828 if a0 == 0\n      : @827 (gas: 1)\n 30639: jump @660\n      : @828 (gas: 3)\n 30642: a0 = u64 [s1 + 0x220]\n 30646: i32 a0 = a0 >> 0x10\n 30649: jump @830 if a0 == 0\n      : @829 (gas: 1)\n 30652: jump @660\n      : @830 (gas: 5)\n 30655: a0 = u64 [s1 + 0x220]\n 30659: a0 = a0 + 0x3f\n 30662: a1 = u64 [s1 + 0x1f0]\n 30666: a0 = a0 & a1\n 30669: jump @832 if a0 <=u 65536\n      : @831 (gas: 1)\n 30675: jump @660\n      : @832 (gas: 15)\n 30678: a1 = u64 [s1 + 0x1a0]\n 30682: a2 = a1 + 0x64\n 30685: u64 [s1 + 0x218] = a2\n 30689: a2 = a2 <u a1\n 30692: a3 = u64 [s1 + 0x170]\n 30696: a1 = a3 + a2\n 30699: a3 = a1 <u a3\n 30702: a3 = a2 if a2 == 0\n 30705: a4 = u64 [s1 + 0x38]\n 30708: a2 = a4 + a3\n 30711: a3 = a2 <u a4\n 30714: a4 = u64 [s1 + 0x30]\n 30717: a3 = a3 + a4\n 30720: a4 = u64 [s1 + 0x228]\n 30724: jump @834 if a4 >=u a0\n      : @833 (gas: 4)\n 30727: a4 = u64 [s1 + 0x238]\n 30731: u32 [a4] = a0\n 30733: u64 [s1 + 0x228] = a0\n 30737: fallthrough\n      : @834 (gas: 9)\n 30738: a0 = u64 [s1 + 0x218]\n 30742: a0 = a0 | a2\n 30745: a1 = a1 | a3\n 30748: a0 = a0 | a1\n 30751: a0 = a0 >> 0x20\n 30754: a1 = a1 | a2\n 30757: a1 = a1 << 0x20\n 30760: a0 = a0 | a1\n 30763: jump @836 if a0 == 0\n      : @835 (gas: 1)\n 30766: jump @660\n      : @836 (gas: 3)\n 30769: a0 = u64 [s1 + 0x218]\n 30773: i32 a0 = a0 >> 0x10\n 30776: jump @838 if a0 == 0\n      : @837 (gas: 1)\n 30779: jump @660\n      : @838 (gas: 5)\n 30782: a0 = u64 [s1 + 0x218]\n 30786: a0 = a0 + 0x3f\n 30789: a1 = u64 [s1 + 0x1f0]\n 30793: ra = a0 & a1\n 30796: jump @840 if ra <=u 65536\n      : @839 (gas: 1)\n 30802: jump @660\n      : @840 (gas: 93)\n 30805: a1 = i32 [s1 + 0x220]\n 30809: a0 = u64 [s1 + 0x230]\n 30813: a1 = a1 + a0\n 30816: a0 = u8 [a1 + 0x19]\n 30819: a2 = u8 [a1 + 0x18]\n 30822: a4 = u8 [a1 + 0x1a]\n 30825: a5 = u8 [a1 + 0x1b]\n 30828: a0 = a0 << 0x8\n 30831: a0 = a0 | a2\n 30834: a4 = a4 << 0x10\n 30837: a5 = a5 << 0x18\n 30840: a4 = a4 | a5\n 30843: a0 = a0 | a4\n 30846: a2 = u8 [a1 + 0x1d]\n 30849: a4 = u8 [a1 + 0x1c]\n 30852: a5 = u8 [a1 + 0x1e]\n 30855: a3 = u8 [a1 + 0x1f]\n 30858: a2 = a2 << 0x8\n 30861: a2 = a2 | a4\n 30864: a5 = a5 << 0x10\n 30867: a3 = a3 << 0x18\n 30870: a3 = a3 | a5\n 30873: a2 = a2 | a3\n 30876: a2 = a2 << 0x20\n 30879: t1 = a2 | a0\n 30882: a0 = u8 [a1 + 0x11]\n 30885: a2 = u8 [a1 + 0x10]\n 30888: a3 = u8 [a1 + 0x12]\n 30891: a5 = u8 [a1 + 0x13]\n 30894: a0 = a0 << 0x8\n 30897: a0 = a0 | a2\n 30900: a3 = a3 << 0x10\n 30903: a5 = a5 << 0x18\n 30906: a3 = a3 | a5\n 30909: a0 = a0 | a3\n 30912: a2 = u8 [a1 + 0x15]\n 30915: a3 = u8 [a1 + 0x14]\n 30918: a5 = u8 [a1 + 0x16]\n 30921: a4 = u8 [a1 + 0x17]\n 30924: a2 = a2 << 0x8\n 30927: a2 = a2 | a3\n 30930: a5 = a5 << 0x10\n 30933: a4 = a4 << 0x18\n 30936: a4 = a4 | a5\n 30939: a2 = a2 | a4\n 30942: a2 = a2 << 0x20\n 30945: t2 = a2 | a0\n 30948: a2 = u8 [a1 + 0x9]\n 30951: a3 = u8 [a1 + 0x8]\n 30954: a4 = u8 [a1 + 0xa]\n 30957: a5 = u8 [a1 + 0xb]\n 30960: a2 = a2 << 0x8\n 30963: a2 = a2 | a3\n 30966: a4 = a4 << 0x10\n 30969: a5 = a5 << 0x18\n 30972: a4 = a4 | a5\n 30975: a2 = a2 | a4\n 30978: a3 = u8 [a1 + 0xd]\n 30981: a4 = u8 [a1 + 0xc]\n 30984: a5 = u8 [a1 + 0xe]\n 30987: a0 = u8 [a1 + 0xf]\n 30990: a3 = a3 << 0x8\n 30993: a3 = a3 | a4\n 30996: a5 = a5 << 0x10\n 30999: a0 = a0 << 0x18\n 31002: a0 = a0 | a5\n 31005: a0 = a0 | a3\n 31008: a0 = a0 << 0x20\n 31011: a2 = a2 | a0\n 31014: a0 = u8 [a1 + 0x1]\n 31017: a3 = u8 [a1]\n 31019: a4 = u8 [a1 + 0x2]\n 31022: a5 = u8 [a1 + 0x3]\n 31025: a0 = a0 << 0x8\n 31028: a0 = a0 | a3\n 31031: a4 = a4 << 0x10\n 31034: a5 = a5 << 0x18\n 31037: a4 = a4 | a5\n 31040: a0 = a0 | a4\n 31043: a3 = u8 [a1 + 0x5]\n 31046: a4 = u8 [a1 + 0x4]\n 31049: a5 = u8 [a1 + 0x6]\n 31052: a1 = u8 [a1 + 0x7]\n 31055: a3 = a3 << 0x8\n 31058: a3 = a3 | a4\n 31061: a5 = a5 << 0x10\n 31064: a1 = a1 << 0x18\n 31067: a1 = a1 | a5\n 31070: a1 = a1 | a3\n 31073: a1 = a1 << 0x20\n 31076: t0 = a1 | a0\n 31079: a0 = u64 [s1 + 0x228]\n 31083: jump @842 if a0 >=u ra\n      : @841 (gas: 4)\n 31086: a0 = u64 [s1 + 0x238]\n 31090: u32 [a0] = ra\n 31092: u64 [s1 + 0x228] = ra\n 31096: fallthrough\n      : @842 (gas: 77)\n 31097: a0 = 0xffffffdf\n 31107: a1 = u64 [s1 + 0x220]\n 31111: a0 = a0 <u a1\n 31114: a3 = u64 [s1 + 0x1e8]\n 31118: a1 = a3 >u 0\n 31120: a1 = a0 if a3 == 0\n 31123: a4 = u64 [s1 + 0x210]\n 31127: a0 = a4 >u 0\n 31129: a5 = u64 [s1 + 0x208]\n 31133: a3 = a5 >u 0\n 31135: a3 = a0 if a5 == 0\n 31138: a0 = a4 | a5\n 31141: a1 = a3 if a0 != 0\n 31144: a3 = i32 [s1 + 0x218]\n 31148: a0 = u64 [s1 + 0x230]\n 31152: a3 = a3 + a0\n 31155: a0 = a2 >> 0x38\n 31158: u8 [a3 + 0xf] = a0\n 31161: a0 = a2 >> 0x30\n 31164: u8 [a3 + 0xe] = a0\n 31167: a0 = a2 >> 0x28\n 31170: u8 [a3 + 0xd] = a0\n 31173: a0 = a2 >> 0x20\n 31176: u8 [a3 + 0xc] = a0\n 31179: a0 = a2 >> 0x18\n 31182: u8 [a3 + 0xb] = a0\n 31185: a0 = a2 >> 0x10\n 31188: u8 [a3 + 0xa] = a0\n 31191: a0 = a2 >> 0x8\n 31194: u8 [a3 + 0x9] = a0\n 31197: u8 [a3 + 0x8] = a2\n 31200: a0 = t0 >> 0x38\n 31203: u8 [a3 + 0x7] = a0\n 31206: a0 = t0 >> 0x30\n 31209: u8 [a3 + 0x6] = a0\n 31212: a0 = t0 >> 0x28\n 31215: u8 [a3 + 0x5] = a0\n 31218: a0 = t0 >> 0x20\n 31221: u8 [a3 + 0x4] = a0\n 31224: a0 = t0 >> 0x18\n 31227: u8 [a3 + 0x3] = a0\n 31230: a0 = t0 >> 0x10\n 31233: u8 [a3 + 0x2] = a0\n 31236: a0 = t0 >> 0x8\n 31239: u8 [a3 + 0x1] = a0\n 31242: u8 [a3] = t0\n 31244: a0 = t2 >> 0x38\n 31247: u8 [a3 + 0x17] = a0\n 31250: a0 = t2 >> 0x30\n 31253: u8 [a3 + 0x16] = a0\n 31256: a0 = t2 >> 0x28\n 31259: u8 [a3 + 0x15] = a0\n 31262: a0 = t2 >> 0x20\n 31265: u8 [a3 + 0x14] = a0\n 31268: a0 = t2 >> 0x18\n 31271: u8 [a3 + 0x13] = a0\n 31274: a0 = t2 >> 0x10\n 31277: u8 [a3 + 0x12] = a0\n 31280: u8 [a3 + 0x10] = t2\n 31283: a0 = t2 >> 0x8\n 31286: u8 [a3 + 0x11] = a0\n 31289: a0 = t1 >> 0x38\n 31292: u8 [a3 + 0x1f] = a0\n 31295: a0 = t1 >> 0x30\n 31298: u8 [a3 + 0x1e] = a0\n 31301: a0 = t1 >> 0x28\n 31304: u8 [a3 + 0x1d] = a0\n 31307: a0 = t1 >> 0x20\n 31310: u8 [a3 + 0x1c] = a0\n 31313: a0 = t1 >> 0x18\n 31316: u8 [a3 + 0x1b] = a0\n 31319: a0 = t1 >> 0x10\n 31322: u8 [a3 + 0x1a] = a0\n 31325: u8 [a3 + 0x18] = t1\n 31328: a0 = t1 >> 0x8\n 31331: u8 [a3 + 0x19] = a0\n 31334: jump @844 if a1 == 0\n      : @843 (gas: 1)\n 31337: jump @660\n      : @844 (gas: 3)\n 31340: a0 = u64 [s1 + 0x220]\n 31344: i32 a0 = a0 >> 0x5\n 31347: jump @846 if a0 <=u 2046\n      : @845 (gas: 1)\n 31352: jump @660\n      : @846 (gas: 5)\n 31355: a0 = u64 [s1 + 0x220]\n 31359: a0 = a0 + 0x5f\n 31362: a1 = u64 [s1 + 0x1f0]\n 31366: a1 = a1 & a0\n 31369: jump @848 if a1 <=u 65536\n      : @847 (gas: 1)\n 31375: jump @660\n      : @848 (gas: 14)\n 31378: a0 = u64 [s1 + 0x1a0]\n 31382: t0 = a0 + 0x84\n 31386: a3 = t0 <u a0\n 31389: a0 = u64 [s1 + 0x170]\n 31393: a2 = a0 + a3\n 31396: a4 = a2 <u a0\n 31399: a4 = a3 if a3 == 0\n 31402: a0 = u64 [s1 + 0x38]\n 31405: a3 = a0 + a4\n 31408: a4 = a3 <u a0\n 31411: a0 = u64 [s1 + 0x30]\n 31414: a4 = a4 + a0\n 31417: a0 = u64 [s1 + 0x228]\n 31421: jump @850 if a0 >=u a1\n      : @849 (gas: 4)\n 31424: a0 = u64 [s1 + 0x238]\n 31428: u32 [a0] = a1\n 31430: u64 [s1 + 0x228] = a1\n 31434: fallthrough\n      : @850 (gas: 8)\n 31435: a1 = t0 | a3\n 31438: a2 = a2 | a4\n 31441: a1 = a1 | a2\n 31444: a1 = a1 >> 0x20\n 31447: a2 = a2 | a3\n 31450: a2 = a2 << 0x20\n 31453: a1 = a1 | a2\n 31456: jump @852 if a1 == 0\n      : @851 (gas: 1)\n 31459: jump @660\n      : @852 (gas: 2)\n 31462: i32 a1 = t0 >> 0x10\n 31465: jump @854 if a1 == 0\n      : @853 (gas: 1)\n 31468: jump @660\n      : @854 (gas: 4)\n 31471: a1 = t0 + 0x3f\n 31474: a0 = u64 [s1 + 0x1f0]\n 31478: t1 = a1 & a0\n 31481: jump @856 if t1 <=u 65536\n      : @855 (gas: 1)\n 31487: jump @660\n      : @856 (gas: 94)\n 31490: a0 = u64 [s1 + 0x220]\n 31494: i32 a4 = a0 + 0x20\n 31497: a0 = u64 [s1 + 0x230]\n 31501: a4 = a4 + a0\n 31504: a1 = u8 [a4 + 0x19]\n 31507: a3 = u8 [a4 + 0x18]\n 31510: a5 = u8 [a4 + 0x1a]\n 31513: a0 = u8 [a4 + 0x1b]\n 31516: a1 = a1 << 0x8\n 31519: a1 = a1 | a3\n 31522: a5 = a5 << 0x10\n 31525: a0 = a0 << 0x18\n 31528: a0 = a0 | a5\n 31531: a0 = a0 | a1\n 31534: a1 = u8 [a4 + 0x1d]\n 31537: a3 = u8 [a4 + 0x1c]\n 31540: a5 = u8 [a4 + 0x1e]\n 31543: a2 = u8 [a4 + 0x1f]\n 31546: a1 = a1 << 0x8\n 31549: a1 = a1 | a3\n 31552: a5 = a5 << 0x10\n 31555: a2 = a2 << 0x18\n 31558: a2 = a2 | a5\n 31561: a1 = a1 | a2\n 31564: a1 = a1 << 0x20\n 31567: ra = a1 | a0\n 31570: a0 = u8 [a4 + 0x11]\n 31573: a2 = u8 [a4 + 0x10]\n 31576: a3 = u8 [a4 + 0x12]\n 31579: a5 = u8 [a4 + 0x13]\n 31582: a0 = a0 << 0x8\n 31585: a0 = a0 | a2\n 31588: a3 = a3 << 0x10\n 31591: a5 = a5 << 0x18\n 31594: a3 = a3 | a5\n 31597: t2 = a3 | a0\n 31600: a2 = u8 [a4 + 0x15]\n 31603: a3 = u8 [a4 + 0x14]\n 31606: a5 = u8 [a4 + 0x16]\n 31609: a0 = u8 [a4 + 0x17]\n 31612: a2 = a2 << 0x8\n 31615: a2 = a2 | a3\n 31618: a5 = a5 << 0x10\n 31621: a0 = a0 << 0x18\n 31624: a0 = a0 | a5\n 31627: a0 = a0 | a2\n 31630: a0 = a0 << 0x20\n 31633: a3 = a0 | t2\n 31636: a0 = u8 [a4 + 0x9]\n 31639: a2 = u8 [a4 + 0x8]\n 31642: a5 = u8 [a4 + 0xa]\n 31645: a1 = u8 [a4 + 0xb]\n 31648: a0 = a0 << 0x8\n 31651: a0 = a0 | a2\n 31654: a5 = a5 << 0x10\n 31657: a1 = a1 << 0x18\n 31660: a1 = a1 | a5\n 31663: t2 = a1 | a0\n 31666: a1 = u8 [a4 + 0xd]\n 31669: a2 = u8 [a4 + 0xc]\n 31672: a5 = u8 [a4 + 0xe]\n 31675: a0 = u8 [a4 + 0xf]\n 31678: a1 = a1 << 0x8\n 31681: a1 = a1 | a2\n 31684: a5 = a5 << 0x10\n 31687: a0 = a0 << 0x18\n 31690: a0 = a0 | a5\n 31693: a0 = a0 | a1\n 31696: a0 = a0 << 0x20\n 31699: a5 = a0 | t2\n 31702: t2 = u8 [a4 + 0x1]\n 31705: a1 = u8 [a4]\n 31707: a2 = u8 [a4 + 0x2]\n 31710: a0 = u8 [a4 + 0x3]\n 31713: t2 = t2 << 0x8\n 31716: a1 = t2 | a1\n 31719: a2 = a2 << 0x10\n 31722: a0 = a0 << 0x18\n 31725: a0 = a0 | a2\n 31728: t2 = a0 | a1\n 31731: a1 = u8 [a4 + 0x5]\n 31734: a2 = u8 [a4 + 0x4]\n 31737: a0 = u8 [a4 + 0x6]\n 31740: a4 = u8 [a4 + 0x7]\n 31743: a1 = a1 << 0x8\n 31746: a1 = a1 | a2\n 31749: a0 = a0 << 0x10\n 31752: a4 = a4 << 0x18\n 31755: a0 = a0 | a4\n 31758: a0 = a0 | a1\n 31761: a0 = a0 << 0x20\n 31764: a4 = a0 | t2\n 31767: a0 = u64 [s1 + 0x228]\n 31771: jump @858 if a0 >=u t1\n      : @857 (gas: 4)\n 31774: a0 = u64 [s1 + 0x238]\n 31778: u32 [a0] = t1\n 31780: u64 [s1 + 0x228] = t1\n 31784: fallthrough\n      : @858 (gas: 66)\n 31785: i32 a0 = t0 + 0\n 31787: a1 = u64 [s1 + 0x230]\n 31791: a0 = a0 + a1\n 31794: u8 [a0 + 0x10] = a3\n 31797: a1 = a5 >> 0x38\n 31800: u8 [a0 + 0xf] = a1\n 31803: a1 = a5 >> 0x30\n 31806: u8 [a0 + 0xe] = a1\n 31809: a1 = a5 >> 0x28\n 31812: u8 [a0 + 0xd] = a1\n 31815: a1 = a5 >> 0x20\n 31818: u8 [a0 + 0xc] = a1\n 31821: a1 = a5 >> 0x18\n 31824: u8 [a0 + 0xb] = a1\n 31827: a1 = a5 >> 0x10\n 31830: u8 [a0 + 0xa] = a1\n 31833: a1 = a5 >> 0x8\n 31836: u8 [a0 + 0x9] = a1\n 31839: u8 [a0 + 0x8] = a5\n 31842: a1 = a4 >> 0x38\n 31845: u8 [a0 + 0x7] = a1\n 31848: a1 = a4 >> 0x30\n 31851: u8 [a0 + 0x6] = a1\n 31854: a1 = a4 >> 0x28\n 31857: u8 [a0 + 0x5] = a1\n 31860: a1 = a4 >> 0x20\n 31863: u8 [a0 + 0x4] = a1\n 31866: a1 = a4 >> 0x18\n 31869: u8 [a0 + 0x3] = a1\n 31872: a1 = a4 >> 0x10\n 31875: u8 [a0 + 0x2] = a1\n 31878: a1 = a4 >> 0x8\n 31881: u8 [a0 + 0x1] = a1\n 31884: u8 [a0] = a4\n 31886: u8 [a0 + 0x18] = ra\n 31889: a1 = a3 >> 0x38\n 31892: u8 [a0 + 0x17] = a1\n 31895: a1 = a3 >> 0x30\n 31898: u8 [a0 + 0x16] = a1\n 31901: a1 = a3 >> 0x28\n 31904: u8 [a0 + 0x15] = a1\n 31907: a1 = a3 >> 0x20\n 31910: u8 [a0 + 0x14] = a1\n 31913: a1 = a3 >> 0x18\n 31916: u8 [a0 + 0x13] = a1\n 31919: a1 = a3 >> 0x10\n 31922: u8 [a0 + 0x12] = a1\n 31925: a3 = a3 >> 0x8\n 31928: u8 [a0 + 0x11] = a3\n 31931: a1 = ra >> 0x38\n 31934: u8 [a0 + 0x1f] = a1\n 31937: a1 = ra >> 0x30\n 31940: u8 [a0 + 0x1e] = a1\n 31943: a1 = ra >> 0x28\n 31946: u8 [a0 + 0x1d] = a1\n 31949: a1 = ra >> 0x20\n 31952: u8 [a0 + 0x1c] = a1\n 31955: a1 = ra >> 0x18\n 31958: u8 [a0 + 0x1b] = a1\n 31961: a1 = ra >> 0x10\n 31964: u8 [a0 + 0x1a] = a1\n 31967: a1 = ra >> 0x8\n 31970: a2 = u64 [s1 + 0x1c8]\n 31974: i32 a2 = a2 >> 0x5\n 31977: u8 [a0 + 0x19] = a1\n 31980: jump @860 if a2 <=u 2046\n      : @859 (gas: 1)\n 31985: jump @660\n      : @860 (gas: 4)\n 31988: a0 = u64 [s1 + 0x1f0]\n 31992: a1 = u64 [s1 + 0x1b8]\n 31996: a0 = a0 & a1\n 31999: jump @862 if a0 <=u 65536\n      : @861 (gas: 1)\n 32005: jump @660\n      : @862 (gas: 2)\n 32008: a1 = u64 [s1 + 0x228]\n 32012: jump @864 if a1 >=u a0\n      : @863 (gas: 4)\n 32015: a1 = u64 [s1 + 0x238]\n 32019: u32 [a1] = a0\n 32021: u64 [s1 + 0x228] = a0\n 32025: fallthrough\n      : @864 (gas: 105)\n 32026: t1 = u64 [s1 + 0x1b0]\n 32030: a0 = u8 [t1 + 0x11]\n 32033: a1 = u8 [t1 + 0x10]\n 32036: a2 = u8 [t1 + 0x12]\n 32039: a3 = u8 [t1 + 0x13]\n 32042: a0 = a0 << 0x8\n 32045: a0 = a0 | a1\n 32048: a2 = a2 << 0x10\n 32051: a3 = a3 << 0x18\n 32054: a2 = a2 | a3\n 32057: a0 = a0 | a2\n 32060: a1 = u8 [t1 + 0x15]\n 32063: a2 = u8 [t1 + 0x14]\n 32066: a3 = u8 [t1 + 0x16]\n 32069: a4 = u8 [t1 + 0x17]\n 32072: a1 = a1 << 0x8\n 32075: a1 = a1 | a2\n 32078: a3 = a3 << 0x10\n 32081: a4 = a4 << 0x18\n 32084: a3 = a3 | a4\n 32087: a1 = a1 | a3\n 32090: a1 = a1 << 0x20\n 32093: t0 = a1 | a0\n 32096: a1 = u8 [t1 + 0x1]\n 32099: a2 = u8 [t1]\n 32101: a3 = u8 [t1 + 0x2]\n 32104: a4 = u8 [t1 + 0x3]\n 32107: a1 = a1 << 0x8\n 32110: a1 = a1 | a2\n 32113: a3 = a3 << 0x10\n 32116: a4 = a4 << 0x18\n 32119: a3 = a3 | a4\n 32122: a1 = a1 | a3\n 32125: a2 = u8 [t1 + 0x5]\n 32128: a3 = u8 [t1 + 0x4]\n 32131: a4 = u8 [t1 + 0x6]\n 32134: a5 = u8 [t1 + 0x7]\n 32137: a2 = a2 << 0x8\n 32140: a2 = a2 | a3\n 32143: a4 = a4 << 0x10\n 32146: a5 = a5 << 0x18\n 32149: a4 = a4 | a5\n 32152: a2 = a2 | a4\n 32155: a2 = a2 << 0x20\n 32158: ra = a2 | a1\n 32161: a2 = u8 [t1 + 0x19]\n 32164: a3 = u8 [t1 + 0x18]\n 32167: a4 = u8 [t1 + 0x1a]\n 32170: a5 = u8 [t1 + 0x1b]\n 32173: a2 = a2 << 0x8\n 32176: a2 = a2 | a3\n 32179: a4 = a4 << 0x10\n 32182: a5 = a5 << 0x18\n 32185: a4 = a4 | a5\n 32188: a2 = a2 | a4\n 32191: a3 = u8 [t1 + 0x1d]\n 32194: a4 = u8 [t1 + 0x1c]\n 32197: a5 = u8 [t1 + 0x1e]\n 32200: a0 = u8 [t1 + 0x1f]\n 32203: a3 = a3 << 0x8\n 32206: a3 = a3 | a4\n 32209: a5 = a5 << 0x10\n 32212: a0 = a0 << 0x18\n 32215: a0 = a0 | a5\n 32218: a0 = a0 | a3\n 32221: a0 = a0 << 0x20\n 32224: a2 = a2 | a0\n 32227: a0 = u8 [t1 + 0x9]\n 32230: a3 = u8 [t1 + 0x8]\n 32233: a4 = u8 [t1 + 0xa]\n 32236: a5 = u8 [t1 + 0xb]\n 32239: a0 = a0 << 0x8\n 32242: a0 = a0 | a3\n 32245: a4 = a4 << 0x10\n 32248: a5 = a5 << 0x18\n 32251: a4 = a4 | a5\n 32254: a0 = a0 | a4\n 32257: a3 = u8 [t1 + 0xd]\n 32260: a4 = u8 [t1 + 0xc]\n 32263: a5 = u8 [t1 + 0xe]\n 32266: a1 = u8 [t1 + 0xf]\n 32269: a3 = a3 << 0x8\n 32272: a3 = a3 | a4\n 32275: a5 = a5 << 0x10\n 32278: a1 = a1 << 0x18\n 32281: a1 = a1 | a5\n 32284: a1 = a1 | a3\n 32287: a1 = a1 << 0x20\n 32290: a0 = a0 | a1\n 32293: a3 = reverse a0\n 32295: a1 = reverse a2\n 32297: a0 = reverse ra\n 32299: a2 = reverse t0\n 32301: u64 [s1 + 0x208] = a0\n 32305: u64 [s1 + 0x1e8] = a2\n 32309: a0 = a0 | a2\n 32312: u64 [s1 + 0x220] = a1\n 32316: a1 = a1 | a3\n 32319: a1 = a1 | a0\n 32322: a1 = a1 >> 0x20\n 32325: u64 [s1 + 0x210] = a3\n 32329: a0 = a0 | a3\n 32332: a0 = a0 << 0x20\n 32335: a0 = a0 | a1\n 32338: jump @866 if a0 == 0\n      : @865 (gas: 1)\n 32341: jump @660\n      : @866 (gas: 3)\n 32344: a0 = u64 [s1 + 0x220]\n 32348: i32 a0 = a0 >> 0x10\n 32351: jump @868 if a0 == 0\n      : @867 (gas: 1)\n 32354: jump @660\n      : @868 (gas: 5)\n 32357: a0 = u64 [s1 + 0x220]\n 32361: a0 = a0 + 0x3f\n 32364: a1 = u64 [s1 + 0x1f0]\n 32368: a0 = a0 & a1\n 32371: jump @870 if a0 <=u 65536\n      : @869 (gas: 1)\n 32377: jump @660\n      : @870 (gas: 15)\n 32380: a1 = u64 [s1 + 0x1a0]\n 32384: a2 = a1 + 0xa4\n 32388: u64 [s1 + 0x218] = a2\n 32392: a2 = a2 <u a1\n 32395: a3 = u64 [s1 + 0x170]\n 32399: a1 = a3 + a2\n 32402: a3 = a1 <u a3\n 32405: a3 = a2 if a2 == 0\n 32408: a4 = u64 [s1 + 0x38]\n 32411: a2 = a4 + a3\n 32414: a3 = a2 <u a4\n 32417: a4 = u64 [s1 + 0x30]\n 32420: a3 = a3 + a4\n 32423: a4 = u64 [s1 + 0x228]\n 32427: jump @872 if a4 >=u a0\n      : @871 (gas: 4)\n 32430: a4 = u64 [s1 + 0x238]\n 32434: u32 [a4] = a0\n 32436: u64 [s1 + 0x228] = a0\n 32440: fallthrough\n      : @872 (gas: 9)\n 32441: a0 = u64 [s1 + 0x218]\n 32445: a0 = a0 | a2\n 32448: a1 = a1 | a3\n 32451: a0 = a0 | a1\n 32454: a0 = a0 >> 0x20\n 32457: a1 = a1 | a2\n 32460: a1 = a1 << 0x20\n 32463: a0 = a0 | a1\n 32466: jump @874 if a0 == 0\n      : @873 (gas: 1)\n 32469: jump @660\n      : @874 (gas: 3)\n 32472: a0 = u64 [s1 + 0x218]\n 32476: i32 a0 = a0 >> 0x10\n 32479: jump @876 if a0 == 0\n      : @875 (gas: 1)\n 32482: jump @660\n      : @876 (gas: 5)\n 32485: a0 = u64 [s1 + 0x218]\n 32489: a0 = a0 + 0x3f\n 32492: a1 = u64 [s1 + 0x1f0]\n 32496: ra = a0 & a1\n 32499: jump @878 if ra <=u 65536\n      : @877 (gas: 1)\n 32505: jump @660\n      : @878 (gas: 93)\n 32508: a1 = i32 [s1 + 0x220]\n 32512: a0 = u64 [s1 + 0x230]\n 32516: a1 = a1 + a0\n 32519: a0 = u8 [a1 + 0x19]\n 32522: a2 = u8 [a1 + 0x18]\n 32525: a4 = u8 [a1 + 0x1a]\n 32528: a5 = u8 [a1 + 0x1b]\n 32531: a0 = a0 << 0x8\n 32534: a0 = a0 | a2\n 32537: a4 = a4 << 0x10\n 32540: a5 = a5 << 0x18\n 32543: a4 = a4 | a5\n 32546: a0 = a0 | a4\n 32549: a2 = u8 [a1 + 0x1d]\n 32552: a4 = u8 [a1 + 0x1c]\n 32555: a5 = u8 [a1 + 0x1e]\n 32558: a3 = u8 [a1 + 0x1f]\n 32561: a2 = a2 << 0x8\n 32564: a2 = a2 | a4\n 32567: a5 = a5 << 0x10\n 32570: a3 = a3 << 0x18\n 32573: a3 = a3 | a5\n 32576: a2 = a2 | a3\n 32579: a2 = a2 << 0x20\n 32582: t1 = a2 | a0\n 32585: a0 = u8 [a1 + 0x11]\n 32588: a2 = u8 [a1 + 0x10]\n 32591: a3 = u8 [a1 + 0x12]\n 32594: a5 = u8 [a1 + 0x13]\n 32597: a0 = a0 << 0x8\n 32600: a0 = a0 | a2\n 32603: a3 = a3 << 0x10\n 32606: a5 = a5 << 0x18\n 32609: a3 = a3 | a5\n 32612: a0 = a0 | a3\n 32615: a2 = u8 [a1 + 0x15]\n 32618: a3 = u8 [a1 + 0x14]\n 32621: a5 = u8 [a1 + 0x16]\n 32624: a4 = u8 [a1 + 0x17]\n 32627: a2 = a2 << 0x8\n 32630: a2 = a2 | a3\n 32633: a5 = a5 << 0x10\n 32636: a4 = a4 << 0x18\n 32639: a4 = a4 | a5\n 32642: a2 = a2 | a4\n 32645: a2 = a2 << 0x20\n 32648: t2 = a2 | a0\n 32651: a2 = u8 [a1 + 0x9]\n 32654: a3 = u8 [a1 + 0x8]\n 32657: a4 = u8 [a1 + 0xa]\n 32660: a5 = u8 [a1 + 0xb]\n 32663: a2 = a2 << 0x8\n 32666: a2 = a2 | a3\n 32669: a4 = a4 << 0x10\n 32672: a5 = a5 << 0x18\n 32675: a4 = a4 | a5\n 32678: a2 = a2 | a4\n 32681: a3 = u8 [a1 + 0xd]\n 32684: a4 = u8 [a1 + 0xc]\n 32687: a5 = u8 [a1 + 0xe]\n 32690: a0 = u8 [a1 + 0xf]\n 32693: a3 = a3 << 0x8\n 32696: a3 = a3 | a4\n 32699: a5 = a5 << 0x10\n 32702: a0 = a0 << 0x18\n 32705: a0 = a0 | a5\n 32708: a0 = a0 | a3\n 32711: a0 = a0 << 0x20\n 32714: a2 = a2 | a0\n 32717: a0 = u8 [a1 + 0x1]\n 32720: a3 = u8 [a1]\n 32722: a4 = u8 [a1 + 0x2]\n 32725: a5 = u8 [a1 + 0x3]\n 32728: a0 = a0 << 0x8\n 32731: a0 = a0 | a3\n 32734: a4 = a4 << 0x10\n 32737: a5 = a5 << 0x18\n 32740: a4 = a4 | a5\n 32743: a0 = a0 | a4\n 32746: a3 = u8 [a1 + 0x5]\n 32749: a4 = u8 [a1 + 0x4]\n 32752: a5 = u8 [a1 + 0x6]\n 32755: a1 = u8 [a1 + 0x7]\n 32758: a3 = a3 << 0x8\n 32761: a3 = a3 | a4\n 32764: a5 = a5 << 0x10\n 32767: a1 = a1 << 0x18\n 32770: a1 = a1 | a5\n 32773: a1 = a1 | a3\n 32776: a1 = a1 << 0x20\n 32779: t0 = a1 | a0\n 32782: a0 = u64 [s1 + 0x228]\n 32786: jump @880 if a0 >=u ra\n      : @879 (gas: 4)\n 32789: a0 = u64 [s1 + 0x238]\n 32793: u32 [a0] = ra\n 32795: u64 [s1 + 0x228] = ra\n 32799: fallthrough\n      : @880 (gas: 77)\n 32800: a0 = 0xffffffdf\n 32810: a1 = u64 [s1 + 0x220]\n 32814: a0 = a0 <u a1\n 32817: a3 = u64 [s1 + 0x1e8]\n 32821: a1 = a3 >u 0\n 32823: a1 = a0 if a3 == 0\n 32826: a4 = u64 [s1 + 0x210]\n 32830: a0 = a4 >u 0\n 32832: a5 = u64 [s1 + 0x208]\n 32836: a3 = a5 >u 0\n 32838: a3 = a0 if a5 == 0\n 32841: a0 = a4 | a5\n 32844: a1 = a3 if a0 != 0\n 32847: a3 = i32 [s1 + 0x218]\n 32851: a0 = u64 [s1 + 0x230]\n 32855: a3 = a3 + a0\n 32858: a0 = a2 >> 0x38\n 32861: u8 [a3 + 0xf] = a0\n 32864: a0 = a2 >> 0x30\n 32867: u8 [a3 + 0xe] = a0\n 32870: a0 = a2 >> 0x28\n 32873: u8 [a3 + 0xd] = a0\n 32876: a0 = a2 >> 0x20\n 32879: u8 [a3 + 0xc] = a0\n 32882: a0 = a2 >> 0x18\n 32885: u8 [a3 + 0xb] = a0\n 32888: a0 = a2 >> 0x10\n 32891: u8 [a3 + 0xa] = a0\n 32894: a0 = a2 >> 0x8\n 32897: u8 [a3 + 0x9] = a0\n 32900: u8 [a3 + 0x8] = a2\n 32903: a0 = t0 >> 0x38\n 32906: u8 [a3 + 0x7] = a0\n 32909: a0 = t0 >> 0x30\n 32912: u8 [a3 + 0x6] = a0\n 32915: a0 = t0 >> 0x28\n 32918: u8 [a3 + 0x5] = a0\n 32921: a0 = t0 >> 0x20\n 32924: u8 [a3 + 0x4] = a0\n 32927: a0 = t0 >> 0x18\n 32930: u8 [a3 + 0x3] = a0\n 32933: a0 = t0 >> 0x10\n 32936: u8 [a3 + 0x2] = a0\n 32939: a0 = t0 >> 0x8\n 32942: u8 [a3 + 0x1] = a0\n 32945: u8 [a3] = t0\n 32947: a0 = t2 >> 0x38\n 32950: u8 [a3 + 0x17] = a0\n 32953: a0 = t2 >> 0x30\n 32956: u8 [a3 + 0x16] = a0\n 32959: a0 = t2 >> 0x28\n 32962: u8 [a3 + 0x15] = a0\n 32965: a0 = t2 >> 0x20\n 32968: u8 [a3 + 0x14] = a0\n 32971: a0 = t2 >> 0x18\n 32974: u8 [a3 + 0x13] = a0\n 32977: a0 = t2 >> 0x10\n 32980: u8 [a3 + 0x12] = a0\n 32983: u8 [a3 + 0x10] = t2\n 32986: a0 = t2 >> 0x8\n 32989: u8 [a3 + 0x11] = a0\n 32992: a0 = t1 >> 0x38\n 32995: u8 [a3 + 0x1f] = a0\n 32998: a0 = t1 >> 0x30\n 33001: u8 [a3 + 0x1e] = a0\n 33004: a0 = t1 >> 0x28\n 33007: u8 [a3 + 0x1d] = a0\n 33010: a0 = t1 >> 0x20\n 33013: u8 [a3 + 0x1c] = a0\n 33016: a0 = t1 >> 0x18\n 33019: u8 [a3 + 0x1b] = a0\n 33022: a0 = t1 >> 0x10\n 33025: u8 [a3 + 0x1a] = a0\n 33028: u8 [a3 + 0x18] = t1\n 33031: a0 = t1 >> 0x8\n 33034: u8 [a3 + 0x19] = a0\n 33037: jump @882 if a1 == 0\n      : @881 (gas: 1)\n 33040: jump @660\n      : @882 (gas: 3)\n 33043: a0 = u64 [s1 + 0x220]\n 33047: i32 a0 = a0 >> 0x5\n 33050: jump @884 if a0 <=u 2046\n      : @883 (gas: 1)\n 33055: jump @660\n      : @884 (gas: 5)\n 33058: a0 = u64 [s1 + 0x220]\n 33062: a0 = a0 + 0x5f\n 33065: a1 = u64 [s1 + 0x1f0]\n 33069: a1 = a1 & a0\n 33072: jump @886 if a1 <=u 65536\n      : @885 (gas: 1)\n 33078: jump @660\n      : @886 (gas: 14)\n 33081: a0 = u64 [s1 + 0x1a0]\n 33085: t1 = a0 + 0xc4\n 33089: a3 = t1 <u a0\n 33092: a0 = u64 [s1 + 0x170]\n 33096: a2 = a0 + a3\n 33099: a4 = a2 <u a0\n 33102: a4 = a3 if a3 == 0\n 33105: a0 = u64 [s1 + 0x38]\n 33108: a3 = a0 + a4\n 33111: a4 = a3 <u a0\n 33114: a0 = u64 [s1 + 0x30]\n 33117: a4 = a4 + a0\n 33120: a0 = u64 [s1 + 0x228]\n 33124: jump @888 if a0 >=u a1\n      : @887 (gas: 4)\n 33127: a0 = u64 [s1 + 0x238]\n 33131: u32 [a0] = a1\n 33133: u64 [s1 + 0x228] = a1\n 33137: fallthrough\n      : @888 (gas: 8)\n 33138: a1 = t1 | a3\n 33141: a2 = a2 | a4\n 33144: a1 = a1 | a2\n 33147: a1 = a1 >> 0x20\n 33150: a2 = a2 | a3\n 33153: a2 = a2 << 0x20\n 33156: a1 = a1 | a2\n 33159: jump @890 if a1 == 0\n      : @889 (gas: 1)\n 33162: jump @660\n      : @890 (gas: 2)\n 33165: i32 a1 = t1 >> 0x10\n 33168: jump @892 if a1 == 0\n      : @891 (gas: 1)\n 33171: jump @660\n      : @892 (gas: 4)\n 33174: a1 = t1 + 0x3f\n 33177: a0 = u64 [s1 + 0x1f0]\n 33181: t0 = a1 & a0\n 33184: jump @894 if t0 <=u 65536\n      : @893 (gas: 1)\n 33190: jump @660\n      : @894 (gas: 94)\n 33193: a0 = u64 [s1 + 0x220]\n 33197: i32 a4 = a0 + 0x20\n 33200: a0 = u64 [s1 + 0x230]\n 33204: a4 = a4 + a0\n 33207: a1 = u8 [a4 + 0x19]\n 33210: a3 = u8 [a4 + 0x18]\n 33213: a5 = u8 [a4 + 0x1a]\n 33216: a2 = u8 [a4 + 0x1b]\n 33219: a1 = a1 << 0x8\n 33222: a1 = a1 | a3\n 33225: a5 = a5 << 0x10\n 33228: a2 = a2 << 0x18\n 33231: a2 = a2 | a5\n 33234: a1 = a1 | a2\n 33237: a2 = u8 [a4 + 0x1d]\n 33240: a3 = u8 [a4 + 0x1c]\n 33243: a5 = u8 [a4 + 0x1e]\n 33246: a0 = u8 [a4 + 0x1f]\n 33249: a2 = a2 << 0x8\n 33252: a2 = a2 | a3\n 33255: a5 = a5 << 0x10\n 33258: a0 = a0 << 0x18\n 33261: a0 = a0 | a5\n 33264: a0 = a0 | a2\n 33267: a0 = a0 << 0x20\n 33270: ra = a0 | a1\n 33273: a0 = u8 [a4 + 0x11]\n 33276: a2 = u8 [a4 + 0x10]\n 33279: a3 = u8 [a4 + 0x12]\n 33282: a5 = u8 [a4 + 0x13]\n 33285: a0 = a0 << 0x8\n 33288: a0 = a0 | a2\n 33291: a3 = a3 << 0x10\n 33294: a5 = a5 << 0x18\n 33297: a3 = a3 | a5\n 33300: t2 = a3 | a0\n 33303: a2 = u8 [a4 + 0x15]\n 33306: a3 = u8 [a4 + 0x14]\n 33309: a5 = u8 [a4 + 0x16]\n 33312: a0 = u8 [a4 + 0x17]\n 33315: a2 = a2 << 0x8\n 33318: a2 = a2 | a3\n 33321: a5 = a5 << 0x10\n 33324: a0 = a0 << 0x18\n 33327: a0 = a0 | a5\n 33330: a0 = a0 | a2\n 33333: a0 = a0 << 0x20\n 33336: a3 = a0 | t2\n 33339: a0 = u8 [a4 + 0x9]\n 33342: a2 = u8 [a4 + 0x8]\n 33345: a5 = u8 [a4 + 0xa]\n 33348: a1 = u8 [a4 + 0xb]\n 33351: a0 = a0 << 0x8\n 33354: a0 = a0 | a2\n 33357: a5 = a5 << 0x10\n 33360: a1 = a1 << 0x18\n 33363: a1 = a1 | a5\n 33366: t2 = a1 | a0\n 33369: a1 = u8 [a4 + 0xd]\n 33372: a2 = u8 [a4 + 0xc]\n 33375: a5 = u8 [a4 + 0xe]\n 33378: a0 = u8 [a4 + 0xf]\n 33381: a1 = a1 << 0x8\n 33384: a1 = a1 | a2\n 33387: a5 = a5 << 0x10\n 33390: a0 = a0 << 0x18\n 33393: a0 = a0 | a5\n 33396: a0 = a0 | a1\n 33399: a0 = a0 << 0x20\n 33402: a5 = a0 | t2\n 33405: t2 = u8 [a4 + 0x1]\n 33408: a1 = u8 [a4]\n 33410: a2 = u8 [a4 + 0x2]\n 33413: a0 = u8 [a4 + 0x3]\n 33416: t2 = t2 << 0x8\n 33419: a1 = t2 | a1\n 33422: a2 = a2 << 0x10\n 33425: a0 = a0 << 0x18\n 33428: a0 = a0 | a2\n 33431: t2 = a0 | a1\n 33434: a1 = u8 [a4 + 0x5]\n 33437: a2 = u8 [a4 + 0x4]\n 33440: a0 = u8 [a4 + 0x6]\n 33443: a4 = u8 [a4 + 0x7]\n 33446: a1 = a1 << 0x8\n 33449: a1 = a1 | a2\n 33452: a0 = a0 << 0x10\n 33455: a4 = a4 << 0x18\n 33458: a0 = a0 | a4\n 33461: a0 = a0 | a1\n 33464: a0 = a0 << 0x20\n 33467: a4 = a0 | t2\n 33470: a0 = u64 [s1 + 0x228]\n 33474: jump @896 if a0 >=u t0\n      : @895 (gas: 3)\n 33477: a0 = u64 [s1 + 0x238]\n 33481: u32 [a0] = t0\n 33483: fallthrough\n      : @896 (gas: 90)\n 33484: i32 a0 = t1 + 0\n 33486: a1 = u64 [s1 + 0x230]\n 33490: a0 = a0 + a1\n 33493: a1 = a5 >> 0x38\n 33496: u8 [a0 + 0xf] = a1\n 33499: a1 = a5 >> 0x30\n 33502: u8 [a0 + 0xe] = a1\n 33505: a1 = a5 >> 0x28\n 33508: u8 [a0 + 0xd] = a1\n 33511: a1 = a5 >> 0x20\n 33514: u8 [a0 + 0xc] = a1\n 33517: a1 = a5 >> 0x18\n 33520: u8 [a0 + 0xb] = a1\n 33523: a1 = a5 >> 0x10\n 33526: u8 [a0 + 0xa] = a1\n 33529: a1 = a5 >> 0x8\n 33532: u8 [a0 + 0x9] = a1\n 33535: u8 [a0 + 0x8] = a5\n 33538: a1 = a4 >> 0x38\n 33541: u8 [a0 + 0x7] = a1\n 33544: a1 = a4 >> 0x30\n 33547: u8 [a0 + 0x6] = a1\n 33550: a1 = a4 >> 0x28\n 33553: u8 [a0 + 0x5] = a1\n 33556: a1 = a4 >> 0x20\n 33559: u8 [a0 + 0x4] = a1\n 33562: a1 = a4 >> 0x18\n 33565: u8 [a0 + 0x3] = a1\n 33568: a1 = a4 >> 0x10\n 33571: u8 [a0 + 0x2] = a1\n 33574: a1 = a4 >> 0x8\n 33577: u8 [a0 + 0x1] = a1\n 33580: u8 [a0 + 0x10] = a3\n 33583: u8 [a0] = a4\n 33585: u8 [a0 + 0x18] = ra\n 33588: a1 = a3 >> 0x38\n 33591: u8 [a0 + 0x17] = a1\n 33594: a1 = a3 >> 0x30\n 33597: u8 [a0 + 0x16] = a1\n 33600: a1 = a3 >> 0x28\n 33603: u8 [a0 + 0x15] = a1\n 33606: a1 = a3 >> 0x20\n 33609: u8 [a0 + 0x14] = a1\n 33612: a1 = a3 >> 0x18\n 33615: u8 [a0 + 0x13] = a1\n 33618: a1 = a3 >> 0x10\n 33621: u8 [a0 + 0x12] = a1\n 33624: a3 = a3 >> 0x8\n 33627: u8 [a0 + 0x11] = a3\n 33630: a1 = ra >> 0x38\n 33633: u8 [a0 + 0x1f] = a1\n 33636: a1 = ra >> 0x30\n 33639: u8 [a0 + 0x1e] = a1\n 33642: a1 = ra >> 0x28\n 33645: u8 [a0 + 0x1d] = a1\n 33648: a1 = ra >> 0x20\n 33651: u8 [a0 + 0x1c] = a1\n 33654: a1 = ra >> 0x18\n 33657: u8 [a0 + 0x1b] = a1\n 33660: a1 = ra >> 0x10\n 33663: u8 [a0 + 0x1a] = a1\n 33666: a1 = ra >> 0x8\n 33669: u8 [a0 + 0x19] = a1\n 33672: a1 = u64 [s1 + 0x1a0]\n 33676: a0 = a1 + 0xe4\n 33680: a1 = a0 <u a1\n 33683: a3 = u64 [s1 + 0x170]\n 33687: a2 = a3 + a1\n 33690: a3 = a2 <u a3\n 33693: a3 = a1 if a1 == 0\n 33696: a1 = u64 [s1 + 0x38]\n 33699: a3 = a3 + a1\n 33702: a1 = a3 <u a1\n 33705: a4 = u64 [s1 + 0x30]\n 33708: a4 = a4 + a1\n 33711: u64 [s1 + 0x4d0] = a3\n 33715: u64 [s1 + 0x4c8] = a2\n 33719: u64 [s1 + 0x4c0] = a0\n 33723: a0 = u64 [s1 + 0x1c0]\n 33727: u64 [s1 + 0x4f8] = a0\n 33731: a0 = u64 [s1 + 0x1d0]\n 33735: u64 [s1 + 0x4f0] = a0\n 33739: a0 = u64 [s1 + 0x1d8]\n 33743: u64 [s1 + 0x4e8] = a0\n 33747: a0 = u64 [s1 + 0x200]\n 33751: u64 [s1 + 0x4e0] = a0\n 33755: a0 = s1 + 0x4e0\n 33759: a1 = s1 + 0x4c0\n 33763: u64 [s1 + 0x4d8] = a4\n 33767: ra = 70, jump @1084\n      : @897 [@dyn 35] (gas: 18)\n 33772: a1 = u64 [s1 + 0x1a0]\n 33776: a0 = a1 + 0x124\n 33780: u64 [s1 + 0x220] = a0\n 33784: a2 = a0 <u a1\n 33787: a1 = u64 [s1 + 0x170]\n 33791: a0 = a1 + a2\n 33794: a3 = a0 <u a1\n 33797: a1 = u64 [s1 + 0x238]\n 33801: a4 = i32 [a1]\n 33803: a3 = a2 if a2 == 0\n 33806: a1 = u64 [s1 + 0x38]\n 33809: a2 = a1 + a3\n 33812: a3 = a2 <u a1\n 33815: a1 = u64 [s1 + 0x30]\n 33818: a3 = a3 + a1\n 33821: a1 = u64 [s1 + 0x148]\n 33825: u64 [s1 + 0x228] = a4\n 33829: jump @899 if a4 >=u a1\n      : @898 (gas: 5)\n 33832: a1 = u64 [s1 + 0x238]\n 33836: a4 = u64 [s1 + 0x148]\n 33840: u32 [a1] = a4\n 33842: u64 [s1 + 0x228] = a4\n 33846: fallthrough\n      : @899 (gas: 9)\n 33847: a4 = u64 [s1 + 0x220]\n 33851: a4 = a4 | a2\n 33854: a0 = a0 | a3\n 33857: a4 = a4 | a0\n 33860: a4 = a4 >> 0x20\n 33863: a0 = a0 | a2\n 33866: a0 = a0 << 0x20\n 33869: a0 = a0 | a4\n 33872: jump @901 if a0 == 0\n      : @900 (gas: 1)\n 33875: jump @660\n      : @901 (gas: 3)\n 33878: a0 = u64 [s1 + 0x220]\n 33882: i32 a0 = a0 >> 0x10\n 33885: jump @903 if a0 == 0\n      : @902 (gas: 1)\n 33888: jump @660\n      : @903 (gas: 5)\n 33891: a0 = u64 [s1 + 0x220]\n 33895: a0 = a0 + 0x3f\n 33898: a1 = u64 [s1 + 0x1f0]\n 33902: t2 = a0 & a1\n 33905: jump @905 if t2 <=u 65536\n      : @904 (gas: 1)\n 33911: jump @660\n      : @905 (gas: 91)\n 33914: t1 = u64 [s1 + 0x198]\n 33918: a0 = u8 [t1 + 0x19]\n 33921: a2 = u8 [t1 + 0x18]\n 33924: a4 = u8 [t1 + 0x1a]\n 33927: a5 = u8 [t1 + 0x1b]\n 33930: a0 = a0 << 0x8\n 33933: a0 = a0 | a2\n 33936: a4 = a4 << 0x10\n 33939: a5 = a5 << 0x18\n 33942: a4 = a4 | a5\n 33945: a0 = a0 | a4\n 33948: a2 = u8 [t1 + 0x1d]\n 33951: a4 = u8 [t1 + 0x1c]\n 33954: a5 = u8 [t1 + 0x1e]\n 33957: a1 = u8 [t1 + 0x1f]\n 33960: a2 = a2 << 0x8\n 33963: a2 = a2 | a4\n 33966: a5 = a5 << 0x10\n 33969: a1 = a1 << 0x18\n 33972: a1 = a1 | a5\n 33975: a1 = a1 | a2\n 33978: a1 = a1 << 0x20\n 33981: t0 = a1 | a0\n 33984: a0 = u8 [t1 + 0x11]\n 33987: a1 = u8 [t1 + 0x10]\n 33990: a4 = u8 [t1 + 0x12]\n 33993: a5 = u8 [t1 + 0x13]\n 33996: a0 = a0 << 0x8\n 33999: a0 = a0 | a1\n 34002: a4 = a4 << 0x10\n 34005: a5 = a5 << 0x18\n 34008: a4 = a4 | a5\n 34011: a0 = a0 | a4\n 34014: a1 = u8 [t1 + 0x15]\n 34017: a4 = u8 [t1 + 0x14]\n 34020: a5 = u8 [t1 + 0x16]\n 34023: a3 = u8 [t1 + 0x17]\n 34026: a1 = a1 << 0x8\n 34029: a1 = a1 | a4\n 34032: a5 = a5 << 0x10\n 34035: a3 = a3 << 0x18\n 34038: a3 = a3 | a5\n 34041: a1 = a1 | a3\n 34044: a1 = a1 << 0x20\n 34047: a4 = a1 | a0\n 34050: a0 = u8 [t1 + 0x9]\n 34053: a1 = u8 [t1 + 0x8]\n 34056: a3 = u8 [t1 + 0xa]\n 34059: a5 = u8 [t1 + 0xb]\n 34062: a0 = a0 << 0x8\n 34065: a0 = a0 | a1\n 34068: a3 = a3 << 0x10\n 34071: a5 = a5 << 0x18\n 34074: a3 = a3 | a5\n 34077: ra = a3 | a0\n 34080: a1 = u8 [t1 + 0xd]\n 34083: a3 = u8 [t1 + 0xc]\n 34086: a5 = u8 [t1 + 0xe]\n 34089: a0 = u8 [t1 + 0xf]\n 34092: a1 = a1 << 0x8\n 34095: a1 = a1 | a3\n 34098: a5 = a5 << 0x10\n 34101: a0 = a0 << 0x18\n 34104: a0 = a0 | a5\n 34107: a0 = a0 | a1\n 34110: a0 = a0 << 0x20\n 34113: a5 = a0 | ra\n 34116: a0 = u8 [t1 + 0x1]\n 34119: a1 = u8 [t1]\n 34121: a3 = u8 [t1 + 0x2]\n 34124: a2 = u8 [t1 + 0x3]\n 34127: a0 = a0 << 0x8\n 34130: a0 = a0 | a1\n 34133: a3 = a3 << 0x10\n 34136: a2 = a2 << 0x18\n 34139: a2 = a2 | a3\n 34142: ra = a2 | a0\n 34145: a1 = u8 [t1 + 0x5]\n 34148: a2 = u8 [t1 + 0x4]\n 34151: a3 = u8 [t1 + 0x6]\n 34154: a0 = u8 [t1 + 0x7]\n 34157: a1 = a1 << 0x8\n 34160: a1 = a1 | a2\n 34163: a3 = a3 << 0x10\n 34166: a0 = a0 << 0x18\n 34169: a0 = a0 | a3\n 34172: a0 = a0 | a1\n 34175: a0 = a0 << 0x20\n 34178: a0 = a0 | ra\n 34181: a1 = u64 [s1 + 0x228]\n 34185: jump @907 if a1 >=u t2\n      : @906 (gas: 4)\n 34188: a1 = u64 [s1 + 0x238]\n 34192: u32 [a1] = t2\n 34194: u64 [s1 + 0x228] = t2\n 34198: fallthrough\n      : @907 (gas: 65)\n 34199: a1 = i32 [s1 + 0x220]\n 34203: a2 = u64 [s1 + 0x230]\n 34207: a1 = a1 + a2\n 34210: u8 [a1 + 0x10] = a4\n 34213: a2 = a5 >> 0x38\n 34216: u8 [a1 + 0xf] = a2\n 34219: a2 = a5 >> 0x30\n 34222: u8 [a1 + 0xe] = a2\n 34225: a2 = a5 >> 0x28\n 34228: u8 [a1 + 0xd] = a2\n 34231: a2 = a5 >> 0x20\n 34234: u8 [a1 + 0xc] = a2\n 34237: a2 = a5 >> 0x18\n 34240: u8 [a1 + 0xb] = a2\n 34243: a2 = a5 >> 0x10\n 34246: u8 [a1 + 0xa] = a2\n 34249: a2 = a5 >> 0x8\n 34252: u8 [a1 + 0x9] = a2\n 34255: u8 [a1 + 0x8] = a5\n 34258: a2 = a0 >> 0x38\n 34261: u8 [a1 + 0x7] = a2\n 34264: a2 = a0 >> 0x30\n 34267: u8 [a1 + 0x6] = a2\n 34270: a2 = a0 >> 0x28\n 34273: u8 [a1 + 0x5] = a2\n 34276: a2 = a0 >> 0x20\n 34279: u8 [a1 + 0x4] = a2\n 34282: a2 = a0 >> 0x18\n 34285: u8 [a1 + 0x3] = a2\n 34288: a2 = a0 >> 0x10\n 34291: u8 [a1 + 0x2] = a2\n 34294: a2 = a0 >> 0x8\n 34297: u8 [a1 + 0x1] = a2\n 34300: u8 [a1] = a0\n 34302: u8 [a1 + 0x18] = t0\n 34305: a0 = a4 >> 0x38\n 34308: u8 [a1 + 0x17] = a0\n 34311: a0 = a4 >> 0x30\n 34314: u8 [a1 + 0x16] = a0\n 34317: a0 = a4 >> 0x28\n 34320: u8 [a1 + 0x15] = a0\n 34323: a0 = a4 >> 0x20\n 34326: u8 [a1 + 0x14] = a0\n 34329: a0 = a4 >> 0x18\n 34332: u8 [a1 + 0x13] = a0\n 34335: a0 = a4 >> 0x10\n 34338: u8 [a1 + 0x12] = a0\n 34341: a4 = a4 >> 0x8\n 34344: u8 [a1 + 0x11] = a4\n 34347: a0 = t0 >> 0x38\n 34350: u8 [a1 + 0x1f] = a0\n 34353: a0 = t0 >> 0x30\n 34356: u8 [a1 + 0x1e] = a0\n 34359: a0 = t0 >> 0x28\n 34362: u8 [a1 + 0x1d] = a0\n 34365: a0 = t0 >> 0x20\n 34368: u8 [a1 + 0x1c] = a0\n 34371: a0 = t0 >> 0x18\n 34374: u8 [a1 + 0x1b] = a0\n 34377: a0 = t0 >> 0x10\n 34380: u8 [a1 + 0x1a] = a0\n 34383: a0 = t0 >> 0x8\n 34386: u8 [a1 + 0x19] = a0\n 34389: a0 = u64 [s1 + 0x190]\n 34393: jump @909 if a0 <=u 2046\n      : @908 (gas: 1)\n 34398: jump @660\n      : @909 (gas: 2)\n 34401: a1 = u64 [s1 + 0x188]\n 34405: jump @911 if a1 <=u 65536\n      : @910 (gas: 1)\n 34411: jump @660\n      : @911 (gas: 16)\n 34414: a0 = u64 [s1 + 0x1a0]\n 34418: a1 = a0 + 0x144\n 34422: u64 [s1 + 0x220] = a1\n 34426: a2 = a1 <u a0\n 34429: a1 = u64 [s1 + 0x170]\n 34433: a0 = a1 + a2\n 34436: a3 = a0 <u a1\n 34439: a3 = a2 if a2 == 0\n 34442: a1 = u64 [s1 + 0x38]\n 34445: a2 = a1 + a3\n 34448: a3 = a2 <u a1\n 34451: a1 = u64 [s1 + 0x30]\n 34454: a3 = a3 + a1\n 34457: a1 = u64 [s1 + 0x188]\n 34461: a4 = u64 [s1 + 0x228]\n 34465: jump @913 if a4 >=u a1\n      : @912 (gas: 5)\n 34468: a1 = u64 [s1 + 0x238]\n 34472: a4 = u64 [s1 + 0x188]\n 34476: u32 [a1] = a4\n 34478: u64 [s1 + 0x228] = a4\n 34482: fallthrough\n      : @913 (gas: 9)\n 34483: a4 = u64 [s1 + 0x220]\n 34487: a4 = a4 | a2\n 34490: a0 = a0 | a3\n 34493: a4 = a4 | a0\n 34496: a4 = a4 >> 0x20\n 34499: a0 = a0 | a2\n 34502: a0 = a0 << 0x20\n 34505: a0 = a0 | a4\n 34508: jump @915 if a0 == 0\n      : @914 (gas: 1)\n 34511: jump @660\n      : @915 (gas: 3)\n 34514: a0 = u64 [s1 + 0x220]\n 34518: i32 a0 = a0 >> 0x10\n 34521: jump @917 if a0 == 0\n      : @916 (gas: 1)\n 34524: jump @660\n      : @917 (gas: 5)\n 34527: a0 = u64 [s1 + 0x220]\n 34531: a0 = a0 + 0x3f\n 34534: a1 = u64 [s1 + 0x1f0]\n 34538: t1 = a0 & a1\n 34541: jump @919 if t1 <=u 65536\n      : @918 (gas: 1)\n 34547: jump @660\n      : @919 (gas: 91)\n 34550: t0 = u64 [s1 + 0x40]\n 34553: a0 = u8 [t0 + 0x19]\n 34556: a2 = u8 [t0 + 0x18]\n 34559: a4 = u8 [t0 + 0x1a]\n 34562: a5 = u8 [t0 + 0x1b]\n 34565: a0 = a0 << 0x8\n 34568: a0 = a0 | a2\n 34571: a4 = a4 << 0x10\n 34574: a5 = a5 << 0x18\n 34577: a4 = a4 | a5\n 34580: a0 = a0 | a4\n 34583: a2 = u8 [t0 + 0x1d]\n 34586: a4 = u8 [t0 + 0x1c]\n 34589: a5 = u8 [t0 + 0x1e]\n 34592: a1 = u8 [t0 + 0x1f]\n 34595: a2 = a2 << 0x8\n 34598: a2 = a2 | a4\n 34601: a5 = a5 << 0x10\n 34604: a1 = a1 << 0x18\n 34607: a1 = a1 | a5\n 34610: a1 = a1 | a2\n 34613: a1 = a1 << 0x20\n 34616: t2 = a1 | a0\n 34619: a0 = u8 [t0 + 0x11]\n 34622: a1 = u8 [t0 + 0x10]\n 34625: a4 = u8 [t0 + 0x12]\n 34628: a5 = u8 [t0 + 0x13]\n 34631: a0 = a0 << 0x8\n 34634: a0 = a0 | a1\n 34637: a4 = a4 << 0x10\n 34640: a5 = a5 << 0x18\n 34643: a4 = a4 | a5\n 34646: a0 = a0 | a4\n 34649: a1 = u8 [t0 + 0x15]\n 34652: a4 = u8 [t0 + 0x14]\n 34655: a5 = u8 [t0 + 0x16]\n 34658: a3 = u8 [t0 + 0x17]\n 34661: a1 = a1 << 0x8\n 34664: a1 = a1 | a4\n 34667: a5 = a5 << 0x10\n 34670: a3 = a3 << 0x18\n 34673: a3 = a3 | a5\n 34676: a1 = a1 | a3\n 34679: a1 = a1 << 0x20\n 34682: a4 = a1 | a0\n 34685: a0 = u8 [t0 + 0x9]\n 34688: a1 = u8 [t0 + 0x8]\n 34691: a3 = u8 [t0 + 0xa]\n 34694: a5 = u8 [t0 + 0xb]\n 34697: a0 = a0 << 0x8\n 34700: a0 = a0 | a1\n 34703: a3 = a3 << 0x10\n 34706: a5 = a5 << 0x18\n 34709: a3 = a3 | a5\n 34712: a0 = a0 | a3\n 34715: a1 = u8 [t0 + 0xd]\n 34718: a3 = u8 [t0 + 0xc]\n 34721: a5 = u8 [t0 + 0xe]\n 34724: a2 = u8 [t0 + 0xf]\n 34727: a1 = a1 << 0x8\n 34730: a1 = a1 | a3\n 34733: a5 = a5 << 0x10\n 34736: a2 = a2 << 0x18\n 34739: a2 = a2 | a5\n 34742: a1 = a1 | a2\n 34745: a1 = a1 << 0x20\n 34748: a5 = a1 | a0\n 34751: a0 = u8 [t0 + 0x1]\n 34754: a1 = u8 [t0]\n 34756: a2 = u8 [t0 + 0x2]\n 34759: a3 = u8 [t0 + 0x3]\n 34762: a0 = a0 << 0x8\n 34765: a0 = a0 | a1\n 34768: a2 = a2 << 0x10\n 34771: a3 = a3 << 0x18\n 34774: a2 = a2 | a3\n 34777: ra = a2 | a0\n 34780: a1 = u8 [t0 + 0x5]\n 34783: a2 = u8 [t0 + 0x4]\n 34786: a3 = u8 [t0 + 0x6]\n 34789: a0 = u8 [t0 + 0x7]\n 34792: a1 = a1 << 0x8\n 34795: a1 = a1 | a2\n 34798: a3 = a3 << 0x10\n 34801: a0 = a0 << 0x18\n 34804: a0 = a0 | a3\n 34807: a0 = a0 | a1\n 34810: a0 = a0 << 0x20\n 34813: a0 = a0 | ra\n 34816: a1 = u64 [s1 + 0x228]\n 34820: jump @921 if a1 >=u t1\n      : @920 (gas: 4)\n 34823: a1 = u64 [s1 + 0x238]\n 34827: u32 [a1] = t1\n 34829: u64 [s1 + 0x228] = t1\n 34833: fallthrough\n      : @921 (gas: 79)\n 34834: a1 = i32 [s1 + 0x220]\n 34838: a2 = u64 [s1 + 0x230]\n 34842: a1 = a1 + a2\n 34845: a2 = a5 >> 0x38\n 34848: u8 [a1 + 0xf] = a2\n 34851: a2 = a5 >> 0x30\n 34854: u8 [a1 + 0xe] = a2\n 34857: a2 = a5 >> 0x28\n 34860: u8 [a1 + 0xd] = a2\n 34863: a2 = a5 >> 0x20\n 34866: u8 [a1 + 0xc] = a2\n 34869: a2 = a5 >> 0x18\n 34872: u8 [a1 + 0xb] = a2\n 34875: a2 = a5 >> 0x10\n 34878: u8 [a1 + 0xa] = a2\n 34881: a2 = a5 >> 0x8\n 34884: u8 [a1 + 0x9] = a2\n 34887: u8 [a1 + 0x8] = a5\n 34890: a2 = a0 >> 0x38\n 34893: u8 [a1 + 0x7] = a2\n 34896: a2 = a0 >> 0x30\n 34899: u8 [a1 + 0x6] = a2\n 34902: a2 = a0 >> 0x28\n 34905: u8 [a1 + 0x5] = a2\n 34908: a2 = a0 >> 0x20\n 34911: u8 [a1 + 0x4] = a2\n 34914: a2 = a0 >> 0x18\n 34917: u8 [a1 + 0x3] = a2\n 34920: a2 = a0 >> 0x10\n 34923: u8 [a1 + 0x2] = a2\n 34926: a2 = a0 >> 0x8\n 34929: u8 [a1 + 0x1] = a2\n 34932: u8 [a1 + 0x10] = a4\n 34935: u8 [a1] = a0\n 34937: u8 [a1 + 0x18] = t2\n 34940: a0 = a4 >> 0x38\n 34943: u8 [a1 + 0x17] = a0\n 34946: a0 = a4 >> 0x30\n 34949: u8 [a1 + 0x16] = a0\n 34952: a0 = a4 >> 0x28\n 34955: u8 [a1 + 0x15] = a0\n 34958: a0 = a4 >> 0x20\n 34961: u8 [a1 + 0x14] = a0\n 34964: a0 = a4 >> 0x18\n 34967: u8 [a1 + 0x13] = a0\n 34970: a0 = a4 >> 0x10\n 34973: u8 [a1 + 0x12] = a0\n 34976: a4 = a4 >> 0x8\n 34979: u8 [a1 + 0x11] = a4\n 34982: a0 = t2 >> 0x38\n 34985: u8 [a1 + 0x1f] = a0\n 34988: a0 = t2 >> 0x30\n 34991: u8 [a1 + 0x1e] = a0\n 34994: a0 = t2 >> 0x28\n 34997: u8 [a1 + 0x1d] = a0\n 35000: a0 = t2 >> 0x20\n 35003: u8 [a1 + 0x1c] = a0\n 35006: a0 = t2 >> 0x18\n 35009: u8 [a1 + 0x1b] = a0\n 35012: a0 = t2 >> 0x10\n 35015: u8 [a1 + 0x1a] = a0\n 35018: a0 = t2 >> 0x8\n 35021: u8 [a1 + 0x19] = a0\n 35024: a0 = u64 [s1 + 0x1a0]\n 35028: a1 = a0 + 0x164\n 35032: u64 [s1 + 0x220] = a1\n 35036: a1 = a1 <u a0\n 35039: a2 = u64 [s1 + 0x170]\n 35043: a0 = a2 + a1\n 35046: a3 = a0 <u a2\n 35049: a3 = a1 if a1 == 0\n 35052: a2 = u64 [s1 + 0x38]\n 35055: a1 = a2 + a3\n 35058: a3 = a1 <u a2\n 35061: a2 = u64 [s1 + 0x30]\n 35064: a3 = a3 + a2\n 35067: a2 = u64 [s1 + 0x28]\n 35070: a4 = u64 [s1 + 0x228]\n 35074: jump @923 if a4 >=u a2\n      : @922 (gas: 5)\n 35077: a2 = u64 [s1 + 0x238]\n 35081: a4 = u64 [s1 + 0x28]\n 35084: u32 [a2] = a4\n 35086: u64 [s1 + 0x228] = a4\n 35090: fallthrough\n      : @923 (gas: 9)\n 35091: a4 = u64 [s1 + 0x220]\n 35095: a4 = a4 | a1\n 35098: a0 = a0 | a3\n 35101: a4 = a4 | a0\n 35104: a4 = a4 >> 0x20\n 35107: a0 = a0 | a1\n 35110: a0 = a0 << 0x20\n 35113: a0 = a0 | a4\n 35116: jump @925 if a0 == 0\n      : @924 (gas: 1)\n 35119: jump @660\n      : @925 (gas: 3)\n 35122: a0 = u64 [s1 + 0x220]\n 35126: i32 a0 = a0 >> 0x10\n 35129: jump @927 if a0 == 0\n      : @926 (gas: 1)\n 35132: jump @660\n      : @927 (gas: 5)\n 35135: a0 = u64 [s1 + 0x220]\n 35139: a0 = a0 + 0x3f\n 35142: a1 = u64 [s1 + 0x1f0]\n 35146: t1 = a0 & a1\n 35149: jump @929 if t1 <=u 65536\n      : @928 (gas: 1)\n 35155: jump @660\n      : @929 (gas: 91)\n 35158: t0 = u64 [s1 + 0x18]\n 35161: a0 = u8 [t0 + 0x19]\n 35164: a1 = u8 [t0 + 0x18]\n 35167: a4 = u8 [t0 + 0x1a]\n 35170: a5 = u8 [t0 + 0x1b]\n 35173: a0 = a0 << 0x8\n 35176: a0 = a0 | a1\n 35179: a4 = a4 << 0x10\n 35182: a5 = a5 << 0x18\n 35185: a4 = a4 | a5\n 35188: a0 = a0 | a4\n 35191: a1 = u8 [t0 + 0x1d]\n 35194: a4 = u8 [t0 + 0x1c]\n 35197: a5 = u8 [t0 + 0x1e]\n 35200: a2 = u8 [t0 + 0x1f]\n 35203: a1 = a1 << 0x8\n 35206: a1 = a1 | a4\n 35209: a5 = a5 << 0x10\n 35212: a2 = a2 << 0x18\n 35215: a2 = a2 | a5\n 35218: a1 = a1 | a2\n 35221: a1 = a1 << 0x20\n 35224: t2 = a1 | a0\n 35227: a0 = u8 [t0 + 0x11]\n 35230: a2 = u8 [t0 + 0x10]\n 35233: a4 = u8 [t0 + 0x12]\n 35236: a5 = u8 [t0 + 0x13]\n 35239: a0 = a0 << 0x8\n 35242: a0 = a0 | a2\n 35245: a4 = a4 << 0x10\n 35248: a5 = a5 << 0x18\n 35251: a4 = a4 | a5\n 35254: a0 = a0 | a4\n 35257: a2 = u8 [t0 + 0x15]\n 35260: a4 = u8 [t0 + 0x14]\n 35263: a5 = u8 [t0 + 0x16]\n 35266: a3 = u8 [t0 + 0x17]\n 35269: a2 = a2 << 0x8\n 35272: a2 = a2 | a4\n 35275: a5 = a5 << 0x10\n 35278: a3 = a3 << 0x18\n 35281: a3 = a3 | a5\n 35284: a2 = a2 | a3\n 35287: a2 = a2 << 0x20\n 35290: a4 = a2 | a0\n 35293: a0 = u8 [t0 + 0x9]\n 35296: a2 = u8 [t0 + 0x8]\n 35299: a3 = u8 [t0 + 0xa]\n 35302: a5 = u8 [t0 + 0xb]\n 35305: a0 = a0 << 0x8\n 35308: a0 = a0 | a2\n 35311: a3 = a3 << 0x10\n 35314: a5 = a5 << 0x18\n 35317: a3 = a3 | a5\n 35320: a0 = a0 | a3\n 35323: a2 = u8 [t0 + 0xd]\n 35326: a3 = u8 [t0 + 0xc]\n 35329: a5 = u8 [t0 + 0xe]\n 35332: a1 = u8 [t0 + 0xf]\n 35335: a2 = a2 << 0x8\n 35338: a2 = a2 | a3\n 35341: a5 = a5 << 0x10\n 35344: a1 = a1 << 0x18\n 35347: a1 = a1 | a5\n 35350: a1 = a1 | a2\n 35353: a1 = a1 << 0x20\n 35356: a5 = a1 | a0\n 35359: a0 = u8 [t0 + 0x1]\n 35362: a1 = u8 [t0]\n 35364: a2 = u8 [t0 + 0x2]\n 35367: a3 = u8 [t0 + 0x3]\n 35370: a0 = a0 << 0x8\n 35373: a0 = a0 | a1\n 35376: a2 = a2 << 0x10\n 35379: a3 = a3 << 0x18\n 35382: a2 = a2 | a3\n 35385: ra = a2 | a0\n 35388: a1 = u8 [t0 + 0x5]\n 35391: a2 = u8 [t0 + 0x4]\n 35394: a3 = u8 [t0 + 0x6]\n 35397: a0 = u8 [t0 + 0x7]\n 35400: a1 = a1 << 0x8\n 35403: a1 = a1 | a2\n 35406: a3 = a3 << 0x10\n 35409: a0 = a0 << 0x18\n 35412: a0 = a0 | a3\n 35415: a0 = a0 | a1\n 35418: a0 = a0 << 0x20\n 35421: a0 = a0 | ra\n 35424: a1 = u64 [s1 + 0x228]\n 35428: jump @931 if a1 >=u t1\n      : @930 (gas: 4)\n 35431: a1 = u64 [s1 + 0x238]\n 35435: u32 [a1] = t1\n 35437: u64 [s1 + 0x228] = t1\n 35441: fallthrough\n      : @931 (gas: 75)\n 35442: a2 = i32 [s1 + 0x220]\n 35446: a1 = u64 [s1 + 0x230]\n 35450: a2 = a2 + a1\n 35453: a1 = a5 >> 0x38\n 35456: u8 [a2 + 0xf] = a1\n 35459: a1 = a5 >> 0x30\n 35462: u8 [a2 + 0xe] = a1\n 35465: a1 = a5 >> 0x28\n 35468: u8 [a2 + 0xd] = a1\n 35471: a1 = a5 >> 0x20\n 35474: u8 [a2 + 0xc] = a1\n 35477: a1 = a5 >> 0x18\n 35480: u8 [a2 + 0xb] = a1\n 35483: a1 = a5 >> 0x10\n 35486: u8 [a2 + 0xa] = a1\n 35489: a1 = a5 >> 0x8\n 35492: u8 [a2 + 0x9] = a1\n 35495: u8 [a2 + 0x8] = a5\n 35498: a1 = a0 >> 0x38\n 35501: u8 [a2 + 0x7] = a1\n 35504: a1 = a0 >> 0x30\n 35507: u8 [a2 + 0x6] = a1\n 35510: a1 = a0 >> 0x28\n 35513: u8 [a2 + 0x5] = a1\n 35516: a1 = a0 >> 0x20\n 35519: u8 [a2 + 0x4] = a1\n 35522: a1 = a0 >> 0x18\n 35525: u8 [a2 + 0x3] = a1\n 35528: a1 = a0 >> 0x10\n 35531: u8 [a2 + 0x2] = a1\n 35534: a1 = a0 >> 0x8\n 35537: u8 [a2 + 0x1] = a1\n 35540: u8 [a2 + 0x10] = a4\n 35543: u8 [a2] = a0\n 35545: a0 = a4 >> 0x38\n 35548: u8 [a2 + 0x17] = a0\n 35551: a0 = a4 >> 0x30\n 35554: u8 [a2 + 0x16] = a0\n 35557: a0 = a4 >> 0x28\n 35560: u8 [a2 + 0x15] = a0\n 35563: a0 = a4 >> 0x20\n 35566: u8 [a2 + 0x14] = a0\n 35569: a0 = a4 >> 0x18\n 35572: u8 [a2 + 0x13] = a0\n 35575: a0 = a4 >> 0x10\n 35578: u8 [a2 + 0x12] = a0\n 35581: a4 = a4 >> 0x8\n 35584: u8 [a2 + 0x11] = a4\n 35587: a0 = t2 >> 0x38\n 35590: u8 [a2 + 0x1f] = a0\n 35593: a0 = t2 >> 0x30\n 35596: u8 [a2 + 0x1e] = a0\n 35599: a0 = t2 >> 0x28\n 35602: u8 [a2 + 0x1d] = a0\n 35605: a0 = t2 >> 0x20\n 35608: u8 [a2 + 0x1c] = a0\n 35611: a0 = t2 >> 0x18\n 35614: u8 [a2 + 0x1b] = a0\n 35617: a0 = t2 >> 0x10\n 35620: u8 [a2 + 0x1a] = a0\n 35623: a0 = u64 [s1 + 0x1a0]\n 35627: a3 = u64 [s1 + 0x38]\n 35630: a0 = a0 | a3\n 35633: a1 = u64 [s1 + 0x170]\n 35637: a4 = u64 [s1 + 0x30]\n 35640: a1 = a1 | a4\n 35643: a0 = a0 | a1\n 35646: a0 = a0 >> 0x20\n 35649: a1 = a1 | a3\n 35652: a1 = a1 << 0x20\n 35655: a0 = a0 | a1\n 35658: u8 [a2 + 0x18] = t2\n 35661: a1 = t2 >> 0x8\n 35664: u8 [a2 + 0x19] = a1\n 35667: jump @933 if a0 == 0\n      : @932 (gas: 1)\n 35670: jump @660\n      : @933 (gas: 3)\n 35673: a0 = u64 [s1 + 0x1a0]\n 35677: i32 a0 = a0 >> 0x10\n 35680: jump @935 if a0 == 0\n      : @934 (gas: 1)\n 35683: jump @660\n      : @935 (gas: 6)\n 35686: a0 = u64 [s1 + 0x1a0]\n 35690: a0 = a0 + 0x3f\n 35693: a1 = u64 [s1 + 0x1f0]\n 35697: a1 = a1 & a0\n 35700: u64 [s1 + 0x220] = a1\n 35704: jump @937 if a1 <=u 65536\n      : @936 (gas: 1)\n 35710: jump @660\n      : @937 (gas: 3)\n 35713: a0 = u64 [s1 + 0x228]\n 35717: a1 = u64 [s1 + 0x220]\n 35721: jump @939 if a0 >=u a1\n      : @938 (gas: 4)\n 35724: a0 = u64 [s1 + 0x238]\n 35728: a1 = u64 [s1 + 0x220]\n 35732: u32 [a0] = a1\n 35734: fallthrough\n      : @939 (gas: 51)\n 35735: a2 = u64 [s1 + 0x1a0]\n 35739: i32 a0 = a2 + 0\n 35741: a1 = u64 [s1 + 0x230]\n 35745: a1 = a1 + a0\n 35748: u8 [a1 + 31] = 0x64\n 35752: u8 [a1 + 30] = 0x1\n 35756: u8 [a1 + 29] = 0\n 35759: u8 [a1 + 28] = 0\n 35762: u8 [a1 + 27] = 0\n 35765: u8 [a1 + 26] = 0\n 35768: u8 [a1 + 25] = 0\n 35771: u8 [a1 + 24] = 0\n 35774: u8 [a1 + 23] = 0\n 35777: u8 [a1 + 22] = 0\n 35780: u8 [a1 + 21] = 0\n 35783: u8 [a1 + 20] = 0\n 35786: u8 [a1 + 19] = 0\n 35789: u8 [a1 + 18] = 0\n 35792: u8 [a1 + 17] = 0\n 35795: u8 [a1 + 16] = 0\n 35798: u8 [a1 + 15] = 0\n 35801: u8 [a1 + 14] = 0\n 35804: u8 [a1 + 13] = 0\n 35807: u8 [a1 + 12] = 0\n 35810: u8 [a1 + 11] = 0\n 35813: u8 [a1 + 10] = 0\n 35816: u8 [a1 + 9] = 0\n 35819: u8 [a1 + 8] = 0\n 35822: u8 [a1 + 7] = 0\n 35825: u8 [a1 + 6] = 0\n 35828: u8 [a1 + 5] = 0\n 35831: u8 [a1 + 4] = 0\n 35834: u8 [a1 + 3] = 0\n 35837: u8 [a1 + 2] = 0\n 35840: u8 [a1 + 1] = 0\n 35843: u64 [s1 + 0x228] = a1\n 35847: u8 [a1 + 0] = 0\n 35849: u64 [s1 + 1176] = 0\n 35853: u64 [s1 + 1168] = 0\n 35857: u64 [s1 + 1160] = 0\n 35861: u64 [s1 + 1152] = 0x184\n 35867: a0 = u64 [s1 + 0x30]\n 35870: u64 [s1 + 0x4b8] = a0\n 35874: a0 = u64 [s1 + 0x38]\n 35877: u64 [s1 + 0x4b0] = a0\n 35881: a0 = u64 [s1 + 0x170]\n 35885: u64 [s1 + 0x4a8] = a0\n 35889: a0 = s1 + 0x4a0\n 35893: a1 = s1 + 0x480\n 35897: u64 [s1 + 0x4a0] = a2\n 35901: ra = 72, jump @1071\n      : @940 [@dyn 36] (gas: 4)\n 35906: a0 = u64 [s1 + 0x238]\n 35910: a0 = i32 [a0]\n 35912: a1 = u64 [s1 + 0x220]\n 35916: jump @942 if a0 >=u a1\n      : @941 (gas: 4)\n 35919: a0 = u64 [s1 + 0x238]\n 35923: a1 = u64 [s1 + 0x220]\n 35927: u32 [a0] = a1\n 35929: fallthrough\n      : @942 (gas: 99)\n 35930: t2 = u64 [s1 + 0x228]\n 35934: a0 = u8 [t2 + 0x11]\n 35937: a1 = u8 [t2 + 0x10]\n 35940: a2 = u8 [t2 + 0x12]\n 35943: a3 = u8 [t2 + 0x13]\n 35946: a0 = a0 << 0x8\n 35949: a0 = a0 | a1\n 35952: a2 = a2 << 0x10\n 35955: a3 = a3 << 0x18\n 35958: a2 = a2 | a3\n 35961: a0 = a0 | a2\n 35964: a1 = u8 [t2 + 0x15]\n 35967: a2 = u8 [t2 + 0x14]\n 35970: a3 = u8 [t2 + 0x16]\n 35973: a4 = u8 [t2 + 0x17]\n 35976: a1 = a1 << 0x8\n 35979: a1 = a1 | a2\n 35982: a3 = a3 << 0x10\n 35985: a4 = a4 << 0x18\n 35988: a3 = a3 | a4\n 35991: a1 = a1 | a3\n 35994: a1 = a1 << 0x20\n 35997: t0 = a1 | a0\n 36000: a1 = u8 [t2 + 0x1]\n 36003: a2 = u8 [t2]\n 36005: a3 = u8 [t2 + 0x2]\n 36008: a4 = u8 [t2 + 0x3]\n 36011: a1 = a1 << 0x8\n 36014: a1 = a1 | a2\n 36017: a3 = a3 << 0x10\n 36020: a4 = a4 << 0x18\n 36023: a3 = a3 | a4\n 36026: a1 = a1 | a3\n 36029: a2 = u8 [t2 + 0x5]\n 36032: a3 = u8 [t2 + 0x4]\n 36035: a4 = u8 [t2 + 0x6]\n 36038: a5 = u8 [t2 + 0x7]\n 36041: a2 = a2 << 0x8\n 36044: a2 = a2 | a3\n 36047: a4 = a4 << 0x10\n 36050: a5 = a5 << 0x18\n 36053: a4 = a4 | a5\n 36056: a2 = a2 | a4\n 36059: a2 = a2 << 0x20\n 36062: t1 = a2 | a1\n 36065: a2 = u8 [t2 + 0x19]\n 36068: a3 = u8 [t2 + 0x18]\n 36071: a4 = u8 [t2 + 0x1a]\n 36074: a5 = u8 [t2 + 0x1b]\n 36077: a2 = a2 << 0x8\n 36080: a2 = a2 | a3\n 36083: a4 = a4 << 0x10\n 36086: a5 = a5 << 0x18\n 36089: a4 = a4 | a5\n 36092: a2 = a2 | a4\n 36095: a3 = u8 [t2 + 0x1d]\n 36098: a4 = u8 [t2 + 0x1c]\n 36101: a5 = u8 [t2 + 0x1e]\n 36104: a0 = u8 [t2 + 0x1f]\n 36107: a3 = a3 << 0x8\n 36110: a3 = a3 | a4\n 36113: a5 = a5 << 0x10\n 36116: a0 = a0 << 0x18\n 36119: a0 = a0 | a5\n 36122: a0 = a0 | a3\n 36125: a0 = a0 << 0x20\n 36128: a2 = a2 | a0\n 36131: a0 = u8 [t2 + 0x9]\n 36134: a3 = u8 [t2 + 0x8]\n 36137: a4 = u8 [t2 + 0xa]\n 36140: a5 = u8 [t2 + 0xb]\n 36143: a0 = a0 << 0x8\n 36146: a0 = a0 | a3\n 36149: a4 = a4 << 0x10\n 36152: a5 = a5 << 0x18\n 36155: a4 = a4 | a5\n 36158: a0 = a0 | a4\n 36161: a3 = u8 [t2 + 0xd]\n 36164: a4 = u8 [t2 + 0xc]\n 36167: a5 = u8 [t2 + 0xe]\n 36170: a1 = u8 [t2 + 0xf]\n 36173: a3 = a3 << 0x8\n 36176: a3 = a3 | a4\n 36179: a5 = a5 << 0x10\n 36182: a1 = a1 << 0x18\n 36185: a1 = a1 | a5\n 36188: a1 = a1 | a3\n 36191: a1 = a1 << 0x20\n 36194: a0 = a0 | a1\n 36197: a0 = reverse a0\n 36199: u64 [s1 + 0x228] = a0\n 36203: a0 = reverse a2\n 36205: u64 [s1 + 0x220] = a0\n 36209: a0 = reverse t1\n 36211: u64 [s1 + 0x218] = a0\n 36215: a0 = reverse t0\n 36217: u64 [s1 + 0x210] = a0\n 36221: ecalli 8 // 'ref_time_left'\n 36223: fallthrough\n      : @943 (gas: 36)\n 36224: a1 = u64 [s1 + 0x150]\n 36228: a1 = reverse a1\n 36230: a2 = a1 << 0x20\n 36233: a3 = u64 [s1 + 0x160]\n 36237: a3 = reverse a3\n 36239: a3 = a3 >> 0x20\n 36242: a2 = a2 | a3\n 36245: a3 = u64 [s1 + 0x158]\n 36249: a3 = reverse a3\n 36251: a4 = a3 << 0x20\n 36254: a1 = a1 >> 0x20\n 36257: a1 = a1 | a4\n 36260: a3 = a3 >> 0x20\n 36263: a4 = u64 [s1 + 0x180]\n 36267: u32 [a4 + 0x10] = a3\n 36270: u64 [a4 + 0x8] = a1\n 36273: u64 [a4] = a2\n 36275: a1 = u64 [s1 + 0x218]\n 36279: a2 = u64 [s1 + 0x210]\n 36283: a1 = a1 | a2\n 36286: a2 = u64 [s1 + 0x220]\n 36290: a4 = a2\n 36292: a3 = u64 [s1 + 0x228]\n 36296: a2 = a2 | a3\n 36299: a2 = a2 | a1\n 36302: a1 = a1 | a3\n 36305: a2 = a2 >> 0x20\n 36308: a1 = a1 << 0x20\n 36311: a1 = a1 | a2\n 36314: a2 = s1 + 0x7ff\n 36318: a2 = a2 + 0x1b9\n 36322: u64 [a2 + 128] = 0\n 36326: u64 [a2 + 120] = 0\n 36329: u64 [a2 + 112] = 0\n 36332: u64 [a2 + 104] = 0\n 36335: jump @945 if a1 == 0\n      : @944 (gas: 1)\n 36338: jump @660\n      : @945 (gas: 5)\n 36341: a1 = u64 [s1 + 0x20]\n 36344: a1 = a1 + a4\n 36347: i32 a1 = a1 + 0x1f\n 36350: a1 = a1 & 0xffffffffffffffe0\n 36353: jump @947 if a1 <=u 65536\n      : @946 (gas: 1)\n 36359: jump @660\n      : @947 (gas: 3)\n 36362: a2 = u64 [s1 + 0x238]\n 36366: a2 = i32 [a2]\n 36368: jump @949 if a2 >=u a1\n      : @948 (gas: 3)\n 36371: a2 = u64 [s1 + 0x238]\n 36375: u32 [a2] = a1\n 36377: fallthrough\n      : @949 (gas: 45)\n 36378: a3 = s1 + 0x7ff\n 36382: a3 = a3 + 0x1b9\n 36386: u32 [a3 + 136] = 0\n 36390: i32 a1 = a4 + 0\n 36392: a1 = a1 >u 0\n 36394: a0 = a0 >u 0x8fc\n 36398: a0 = a0 | a1\n 36401: a1 = -a0\n 36403: u64 [a3 + 0xc0] = a1\n 36407: u64 [a3 + 0xb8] = a1\n 36411: u64 [a3 + 0xb0] = a1\n 36415: u64 [a3 + 0xa8] = a1\n 36419: a1 = u64 [s1 + 0x180]\n 36423: a1 = a1 << 0x20\n 36426: a1 = a1 >> 0x20\n 36429: a0 = a0 << 0x23\n 36432: u64 [s1 + 0x218] = a1\n 36436: a0 = a0 | a1\n 36439: a1 = s1 + 0x7ff\n 36443: a1 = a1 + 0x221\n 36447: a1 = a1 << 0x20\n 36450: a1 = a1 >> 0x20\n 36453: a2 = s1 + 0x7ff\n 36457: a2 = a2 + 0x261\n 36461: a2 = a2 << 0x20\n 36464: a3 = a2 | a1\n 36467: a1 = u64 [s1 + 0x10]\n 36470: a1 = a1 << 0x20\n 36473: a1 = a1 >> 0x20\n 36476: a4 = a4 << 0x20\n 36479: a4 = a4 | a1\n 36482: a1 = u64 [s1 + 0x230]\n 36486: a1 = a1 << 0x20\n 36489: a5 = a1 >> 0x20\n 36492: a1 = s1 + 0x7ff\n 36496: a1 = a1 + 0x241\n 36500: a1 = a1 << 0x20\n 36503: u64 [s1 + 0x220] = a5\n 36507: a5 = a5 | a1\n 36510: a1 = 0xffffffffffffffff\n 36513: a2 = 0xffffffffffffffff\n 36516: ecalli 0 // 'call'\n 36517: u64 [s1 + 0x228] = a0\n 36521: a0 = s1 + 0x460\n 36525: ra = 74, jump @1106\n      : @950 [@dyn 37] (gas: 4)\n 36530: a0 = u64 [s1 + 0x238]\n 36534: a1 = i32 [a0]\n 36536: a0 = u64 [s1 + 0x228]\n 36540: jump @995 if a0 != 0\n      : @951 (gas: 10)\n 36544: a2 = u64 [s1 + 0x230]\n 36548: a0 = u64 [s1 + 0x88]\n 36552: u64 [a2] = a0\n 36554: a0 = u64 [s1 + 0x90]\n 36558: u64 [a2 + 0x8] = a0\n 36561: a0 = u64 [s1 + 0x98]\n 36565: u64 [a2 + 0x10] = a0\n 36568: a3 = u64 [s1 + 0x80]\n 36572: u64 [a2 + 0x18] = a3\n 36575: jump @953 if a1 >u 63\n      : @952 (gas: 3)\n 36579: a1 = u64 [s1 + 0x238]\n 36583: u32 [a1 + 0] = 0x40\n 36586: fallthrough\n      : @953 (gas: 34)\n 36587: a1 = u64 [s1 + 0x230]\n 36591: u64 [a1 + 48] = 0\n 36594: u64 [a1 + 40] = 0\n 36597: u64 [a1 + 32] = 0\n 36600: a0 = 0x700000000000000\n 36610: u64 [a1 + 0x38] = a0\n 36613: a0 = sp + 0xffffffffffffffe0\n 36616: a0 = a0 & 0xffffffffffffffe0\n 36619: u64 [s1 + 0x228] = a0\n 36623: sp = a0\n 36625: a0 = sp + 0xffffffffffffffe0\n 36628: a0 = a0 & 0xffffffffffffffe0\n 36631: u64 [s1 + 0x210] = a0\n 36635: sp = a0\n 36637: i32 a2 = a0 + 0\n 36639: a1 = 0x40\n 36642: a0 = u64 [s1 + 0x1a8]\n 36646: ecalli 7 // 'hash_keccak_256'\n 36648: a3 = u64 [s1 + 0x210]\n 36652: a0 = u64 [a3 + 0x18]\n 36655: a1 = u64 [a3 + 0x10]\n 36658: a2 = u64 [a3 + 0x8]\n 36661: a3 = u64 [a3]\n 36663: a0 = reverse a0\n 36665: a4 = reverse a1\n 36667: a2 = reverse a2\n 36669: a3 = reverse a3\n 36671: a1 = u64 [s1 + 0x228]\n 36675: u64 [a1 + 0x18] = a3\n 36678: u64 [a1 + 0x10] = a2\n 36681: u64 [a1 + 0x8] = a4\n 36684: u64 [a1] = a0\n 36686: a0 = s1 + 0x440\n 36690: ra = 76, jump @0\n      : @954 [@dyn 38] (gas: 16)\n 36696: a0 = u64 [s1 + 0x440]\n 36700: a1 = u64 [s1 + 0x448]\n 36704: a2 = u64 [s1 + 0x458]\n 36708: a3 = u64 [s1 + 0x450]\n 36712: a0 = a0 & 0xffffffffffffff00\n 36716: a0 = a0 | 0x1\n 36719: a4 = s1 + 0x7ff\n 36723: a4 = a4 + 0x1b9\n 36727: u64 [a4 + 0xe0] = a2\n 36731: u64 [a4 + 0xd8] = a3\n 36735: u64 [a4 + 0xd0] = a1\n 36739: u64 [a4 + 0xc8] = a0\n 36743: a1 = s1 + 0x7ff\n 36747: a1 = a1 + 0x281\n 36751: a0 = u64 [s1 + 0x228]\n 36755: ra = 78, jump @1\n      : @955 [@dyn 39] (gas: 10)\n 36761: a1 = s1 + 0x7ff\n 36765: a1 = a1 + 0x1b9\n 36769: u64 [a1 + 256] = 0\n 36773: u64 [a1 + 248] = 0\n 36777: u64 [a1 + 240] = 0\n 36781: u64 [a1 + 232] = 0x3\n 36786: a0 = s1 + 0x420\n 36790: a1 = s1 + 0x7ff\n 36794: a1 = a1 + 0x2a1\n 36798: ra = 80, jump @0\n      : @956 [@dyn 40] (gas: 64)\n 36804: a0 = u64 [s1 + 0x420]\n 36808: u64 [s1 + 0x228] = a0\n 36812: a0 = u64 [s1 + 0x428]\n 36816: u64 [s1 + 0x210] = a0\n 36820: a0 = u64 [s1 + 0x430]\n 36824: u64 [s1 + 0x208] = a0\n 36828: a0 = u64 [s1 + 0x438]\n 36832: u64 [s1 + 0x200] = a0\n 36836: a0 = u64 [s1 + 0x178]\n 36840: ecalli 4 // 'caller'\n 36842: a0 = u64 [s1 + 0x180]\n 36846: a1 = i32 [a0 + 0x10]\n 36849: u64 [s1 + 0x1e8] = a1\n 36853: a1 = u64 [a0]\n 36855: u64 [s1 + 0x1e0] = a1\n 36859: a1 = u64 [a0 + 0x8]\n 36862: u64 [s1 + 0x1d8] = a1\n 36866: ecalli 8 // 'ref_time_left'\n 36868: a2 = u64 [s1 + 0x180]\n 36872: a1 = u64 [s1 + 0x1d8]\n 36876: u64 [a2 + 0x8] = a1\n 36879: a1 = u64 [s1 + 0x1e0]\n 36883: u64 [a2] = a1\n 36885: a1 = u64 [s1 + 0x1e8]\n 36889: u32 [a2 + 0x10] = a1\n 36892: a2 = s1 + 0x7ff\n 36896: a2 = a2 + 0x1b9\n 36900: a1 = u64 [s1 + 0x200]\n 36904: u64 [a2 + 0x120] = a1\n 36908: a1 = u64 [s1 + 0x208]\n 36912: u64 [a2 + 0x118] = a1\n 36916: a1 = u64 [s1 + 0x210]\n 36920: u64 [a2 + 0x110] = a1\n 36924: a1 = u64 [s1 + 0x228]\n 36928: u64 [a2 + 0x108] = a1\n 36932: u32 [a2 + 296] = 0\n 36936: a0 = a0 >u 0x8fc\n 36940: a1 = -a0\n 36942: u64 [a2 + 0x160] = a1\n 36946: u64 [a2 + 0x158] = a1\n 36950: u64 [a2 + 0x150] = a1\n 36954: u64 [a2 + 0x148] = a1\n 36958: a0 = a0 << 0x23\n 36961: a1 = u64 [s1 + 0x218]\n 36965: a0 = a0 | a1\n 36968: a1 = s1 + 0x7ff\n 36972: a1 = a1 + 0x2c1\n 36976: a1 = a1 << 0x20\n 36979: a1 = a1 >> 0x20\n 36982: a2 = s1 + 0x7ff\n 36986: a2 = a2 + 0x301\n 36990: a2 = a2 << 0x20\n 36993: a3 = a2 | a1\n 36996: a1 = s1 + 0x7ff\n 37000: a1 = a1 + 0x2e1\n 37004: a1 = a1 << 0x20\n 37007: a4 = u64 [s1 + 0x220]\n 37011: a5 = a1 | a4\n 37014: a1 = 0xffffffffffffffff\n 37017: a2 = 0xffffffffffffffff\n 37020: ecalli 0 // 'call'\n 37021: u64 [s1 + 0x220] = a0\n 37025: a0 = s1 + 0x400\n 37029: ra = 82, jump @1106\n      : @957 [@dyn 41] (gas: 11)\n 37034: a2 = u64 [s1 + 0x1f8]\n 37038: a0 = u64 [a2 + 0x18]\n 37041: a1 = u64 [a2 + 0x10]\n 37044: a4 = u64 [a2]\n 37046: a2 = u64 [a2 + 0x8]\n 37049: a3 = a4 | a1\n 37052: a2 = a2 | a0\n 37055: u64 [s1 + 0x228] = a4\n 37059: i32 a0 = a4 >> 0x10\n 37062: a4 = u64 [s1 + 0x220]\n 37066: jump @1030 if a4 != 0\n      : @958 (gas: 6)\n 37070: a3 = a3 | a2\n 37073: a3 = a3 >> 0x20\n 37076: a1 = a1 | a2\n 37079: a1 = a1 << 0x20\n 37082: a1 = a1 | a3\n 37085: jump @960 if a1 == 0\n      : @959 (gas: 1)\n 37088: jump @660\n      : @960 (gas: 1)\n 37091: jump @962 if a0 == 0\n      : @961 (gas: 1)\n 37094: jump @660\n      : @962 (gas: 5)\n 37097: a0 = u64 [s1 + 0x228]\n 37101: a0 = a0 + 0x3f\n 37104: a1 = u64 [s1 + 0x1f0]\n 37108: a0 = a0 & a1\n 37111: jump @964 if a0 <=u 65536\n      : @963 (gas: 1)\n 37117: jump @660\n      : @964 (gas: 3)\n 37120: a1 = u64 [s1 + 0x238]\n 37124: a1 = i32 [a1]\n 37126: jump @966 if a1 >=u a0\n      : @965 (gas: 3)\n 37129: a1 = u64 [s1 + 0x238]\n 37133: u32 [a1] = a0\n 37135: fallthrough\n      : @966 (gas: 102)\n 37136: a0 = i32 [s1 + 0x228]\n 37140: a1 = u64 [s1 + 0x230]\n 37144: a0 = a0 + a1\n 37147: a1 = u8 [a0 + 0x11]\n 37150: a2 = u8 [a0 + 0x10]\n 37153: a3 = u8 [a0 + 0x12]\n 37156: a4 = u8 [a0 + 0x13]\n 37159: a1 = a1 << 0x8\n 37162: a1 = a1 | a2\n 37165: a3 = a3 << 0x10\n 37168: a4 = a4 << 0x18\n 37171: a3 = a3 | a4\n 37174: a1 = a1 | a3\n 37177: a2 = u8 [a0 + 0x15]\n 37180: a3 = u8 [a0 + 0x14]\n 37183: a4 = u8 [a0 + 0x16]\n 37186: a5 = u8 [a0 + 0x17]\n 37189: a2 = a2 << 0x8\n 37192: a2 = a2 | a3\n 37195: a4 = a4 << 0x10\n 37198: a5 = a5 << 0x18\n 37201: a4 = a4 | a5\n 37204: a2 = a2 | a4\n 37207: a2 = a2 << 0x20\n 37210: t0 = a2 | a1\n 37213: a2 = u8 [a0 + 0x1]\n 37216: a3 = u8 [a0]\n 37218: a4 = u8 [a0 + 0x2]\n 37221: a5 = u8 [a0 + 0x3]\n 37224: a2 = a2 << 0x8\n 37227: a2 = a2 | a3\n 37230: a4 = a4 << 0x10\n 37233: a5 = a5 << 0x18\n 37236: a4 = a4 | a5\n 37239: a2 = a2 | a4\n 37242: a3 = u8 [a0 + 0x5]\n 37245: a4 = u8 [a0 + 0x4]\n 37248: a5 = u8 [a0 + 0x6]\n 37251: a1 = u8 [a0 + 0x7]\n 37254: a3 = a3 << 0x8\n 37257: a3 = a3 | a4\n 37260: a5 = a5 << 0x10\n 37263: a1 = a1 << 0x18\n 37266: a1 = a1 | a5\n 37269: a1 = a1 | a3\n 37272: a1 = a1 << 0x20\n 37275: t1 = a1 | a2\n 37278: a1 = u8 [a0 + 0x19]\n 37281: a3 = u8 [a0 + 0x18]\n 37284: a4 = u8 [a0 + 0x1a]\n 37287: a5 = u8 [a0 + 0x1b]\n 37290: a1 = a1 << 0x8\n 37293: a1 = a1 | a3\n 37296: a4 = a4 << 0x10\n 37299: a5 = a5 << 0x18\n 37302: a4 = a4 | a5\n 37305: a1 = a1 | a4\n 37308: a3 = u8 [a0 + 0x1d]\n 37311: a4 = u8 [a0 + 0x1c]\n 37314: a5 = u8 [a0 + 0x1e]\n 37317: a2 = u8 [a0 + 0x1f]\n 37320: a3 = a3 << 0x8\n 37323: a3 = a3 | a4\n 37326: a5 = a5 << 0x10\n 37329: a2 = a2 << 0x18\n 37332: a2 = a2 | a5\n 37335: a2 = a2 | a3\n 37338: a2 = a2 << 0x20\n 37341: a3 = a2 | a1\n 37344: a1 = u8 [a0 + 0x9]\n 37347: a2 = u8 [a0 + 0x8]\n 37350: a4 = u8 [a0 + 0xa]\n 37353: a5 = u8 [a0 + 0xb]\n 37356: a1 = a1 << 0x8\n 37359: a1 = a1 | a2\n 37362: a4 = a4 << 0x10\n 37365: a5 = a5 << 0x18\n 37368: a4 = a4 | a5\n 37371: a1 = a1 | a4\n 37374: a2 = u8 [a0 + 0xd]\n 37377: a4 = u8 [a0 + 0xc]\n 37380: a5 = u8 [a0 + 0xe]\n 37383: a0 = u8 [a0 + 0xf]\n 37386: a2 = a2 << 0x8\n 37389: a2 = a2 | a4\n 37392: a5 = a5 << 0x10\n 37395: a0 = a0 << 0x18\n 37398: a0 = a0 | a5\n 37401: a0 = a0 | a2\n 37404: a0 = a0 << 0x20\n 37407: a0 = a0 | a1\n 37410: a0 = reverse a0\n 37412: u64 [s1 + 0x218] = a0\n 37416: a0 = reverse a3\n 37418: u64 [s1 + 0x210] = a0\n 37422: a0 = reverse t1\n 37424: u64 [s1 + 0x208] = a0\n 37428: a0 = reverse t0\n 37430: u64 [s1 + 0x220] = a0\n 37434: a0 = u64 [s1 + 0x178]\n 37438: ecalli 4 // 'caller'\n 37440: fallthrough\n      : @967 (gas: 14)\n 37441: a0 = u64 [s1 + 0x208]\n 37445: t2 = a0\n 37447: a1 = u64 [s1 + 0x220]\n 37451: a0 = a0 | a1\n 37454: a1 = u64 [s1 + 0x210]\n 37458: t0 = a1\n 37460: a2 = u64 [s1 + 0x218]\n 37464: a1 = a1 | a2\n 37467: a1 = a1 | a0\n 37470: a1 = a1 >> 0x20\n 37473: a0 = a0 | a2\n 37476: a0 = a0 << 0x20\n 37479: a0 = a0 | a1\n 37482: jump @969 if a0 == 0\n      : @968 (gas: 1)\n 37485: jump @660\n      : @969 (gas: 2)\n 37488: i32 a0 = t0 >> 0x10\n 37491: jump @971 if a0 == 0\n      : @970 (gas: 1)\n 37494: jump @660\n      : @971 (gas: 4)\n 37497: a0 = t0 + 0x3f\n 37500: a1 = u64 [s1 + 0x1f0]\n 37504: a1 = a1 & a0\n 37507: jump @973 if a1 <=u 65536\n      : @972 (gas: 1)\n 37513: jump @660\n      : @973 (gas: 18)\n 37516: ra = a2\n 37518: a3 = u64 [s1 + 0x180]\n 37522: a0 = u64 [a3 + 0x8]\n 37525: a2 = u64 [a3]\n 37527: a4 = i32 [a3 + 0x10]\n 37530: a0 = reverse a0\n 37532: a3 = a0 >> 0x20\n 37535: a2 = reverse a2\n 37537: a5 = a2 << 0x20\n 37540: a3 = a3 | a5\n 37543: a5 = a0 << 0x20\n 37546: a0 = u64 [s1 + 0x238]\n 37550: t1 = i32 [a0]\n 37552: a4 = reverse a4\n 37554: a4 = a4 >> 0x20\n 37557: a4 = a4 | a5\n 37560: a2 = a2 >> 0x20\n 37563: jump @975 if t1 >=u a1\n      : @974 (gas: 4)\n 37566: a0 = u64 [s1 + 0x238]\n 37570: u32 [a0] = a1\n 37572: t1 = a1\n 37574: fallthrough\n      : @975 (gas: 63)\n 37575: i32 a1 = t0 + 0\n 37577: a5 = u64 [s1 + 0x230]\n 37581: a1 = a1 + a5\n 37584: a2 = reverse a2\n 37586: a3 = reverse a3\n 37588: a4 = reverse a4\n 37590: a5 = a4 >> 0x38\n 37593: u8 [a1 + 0x1f] = a5\n 37596: a5 = a4 >> 0x30\n 37599: u8 [a1 + 0x1e] = a5\n 37602: a5 = a4 >> 0x28\n 37605: u8 [a1 + 0x1d] = a5\n 37608: a5 = a4 >> 0x20\n 37611: u8 [a1 + 0x1c] = a5\n 37614: a5 = a4 >> 0x18\n 37617: u8 [a1 + 0x1b] = a5\n 37620: a5 = a4 >> 0x10\n 37623: u8 [a1 + 0x1a] = a5\n 37626: a5 = a4 >> 0x8\n 37629: u8 [a1 + 0x19] = a5\n 37632: u8 [a1 + 0x18] = a4\n 37635: u8 [a1 + 0x10] = a3\n 37638: u8 [a1 + 11] = 0\n 37641: u8 [a1 + 10] = 0\n 37644: u8 [a1 + 9] = 0\n 37647: u8 [a1 + 7] = 0\n 37650: u8 [a1 + 6] = 0\n 37653: u8 [a1 + 5] = 0\n 37656: u8 [a1 + 4] = 0\n 37659: u8 [a1 + 3] = 0\n 37662: u8 [a1 + 2] = 0\n 37665: u8 [a1 + 1] = 0\n 37668: u8 [a1 + 0] = 0\n 37670: a4 = a3 >> 0x38\n 37673: u8 [a1 + 0x17] = a4\n 37676: a4 = a3 >> 0x30\n 37679: u8 [a1 + 0x16] = a4\n 37682: a4 = a3 >> 0x28\n 37685: u8 [a1 + 0x15] = a4\n 37688: a4 = a3 >> 0x20\n 37691: u8 [a1 + 0x14] = a4\n 37694: a4 = a3 >> 0x18\n 37697: u8 [a1 + 0x13] = a4\n 37700: a4 = a3 >> 0x10\n 37703: u8 [a1 + 0x12] = a4\n 37706: a3 = a3 >> 0x8\n 37709: u8 [a1 + 0x11] = a3\n 37712: u8 [a1 + 0x8] = a2\n 37715: a3 = a2 >> 0x38\n 37718: u8 [a1 + 0xf] = a3\n 37721: a3 = a2 >> 0x30\n 37724: u8 [a1 + 0xe] = a3\n 37727: a3 = a2 >> 0x28\n 37730: u8 [a1 + 0xd] = a3\n 37733: a2 = a2 >> 0x20\n 37736: a3 = ra | t2\n 37739: a4 = 0xffffffe0\n 37749: a4 = t0 <u a4\n 37752: a0 = u64 [s1 + 0x220]\n 37756: a4 = 0 if a0 != 0\n 37758: a4 = 0 if a3 != 0\n 37760: u8 [a1 + 0xc] = a2\n 37763: jump @977 if a4 != 0\n      : @976 (gas: 1)\n 37766: jump @660\n      : @977 (gas: 2)\n 37769: i32 a1 = t0 >> 0x5\n 37772: jump @979 if a1 <u 2047\n      : @978 (gas: 1)\n 37777: jump @660\n      : @979 (gas: 4)\n 37780: a1 = t0 + 0x5f\n 37783: a2 = u64 [s1 + 0x1f0]\n 37787: a1 = a1 & a2\n 37790: jump @981 if a1 <=u 65536\n      : @980 (gas: 1)\n 37796: jump @660\n      : @981 (gas: 1)\n 37799: jump @983 if t1 >=u a1\n      : @982 (gas: 3)\n 37802: a0 = u64 [s1 + 0x238]\n 37806: u32 [a0] = a1\n 37808: fallthrough\n      : @983 (gas: 79)\n 37809: a0 = t0\n 37811: i32 a2 = t0 + 0x20\n 37814: a1 = u64 [s1 + 0x230]\n 37818: a2 = a2 + a1\n 37821: a1 = u64 [s1 + 0x98]\n 37825: u8 [a2 + 0x10] = a1\n 37828: a1 = u64 [s1 + 0xf8]\n 37832: u8 [a2 + 0xf] = a1\n 37835: a1 = u64 [s1 + 0xe8]\n 37839: u8 [a2 + 0xe] = a1\n 37842: a1 = u64 [s1 + 0xd8]\n 37846: u8 [a2 + 0xd] = a1\n 37849: a1 = u64 [s1 + 0xc8]\n 37853: u8 [a2 + 0xc] = a1\n 37856: a1 = u64 [s1 + 0xb8]\n 37860: u8 [a2 + 0xb] = a1\n 37863: a1 = u64 [s1 + 0xa8]\n 37867: u8 [a2 + 0xa] = a1\n 37870: a1 = u64 [s1 + 0x78]\n 37873: u8 [a2 + 0x9] = a1\n 37876: a1 = u64 [s1 + 0x90]\n 37880: u8 [a2 + 0x8] = a1\n 37883: a1 = u64 [s1 + 0x140]\n 37887: u8 [a2 + 0x7] = a1\n 37890: a1 = u64 [s1 + 0x138]\n 37894: u8 [a2 + 0x6] = a1\n 37897: a1 = u64 [s1 + 0x130]\n 37901: u8 [a2 + 0x5] = a1\n 37904: a1 = u64 [s1 + 0x128]\n 37908: u8 [a2 + 0x4] = a1\n 37911: a1 = u64 [s1 + 0x120]\n 37915: u8 [a2 + 0x3] = a1\n 37918: a1 = u64 [s1 + 0x118]\n 37922: u8 [a2 + 0x2] = a1\n 37925: a1 = u64 [s1 + 0x110]\n 37929: u8 [a2 + 0x1] = a1\n 37932: a1 = u64 [s1 + 0x88]\n 37936: u8 [a2] = a1\n 37938: a1 = u64 [s1 + 0x80]\n 37942: u8 [a2 + 0x18] = a1\n 37945: a1 = u64 [s1 + 0x108]\n 37949: u8 [a2 + 0x17] = a1\n 37952: a1 = u64 [s1 + 0x100]\n 37956: u8 [a2 + 0x16] = a1\n 37959: a1 = u64 [s1 + 0xf0]\n 37963: u8 [a2 + 0x15] = a1\n 37966: a1 = u64 [s1 + 0xe0]\n 37970: u8 [a2 + 0x14] = a1\n 37973: a1 = u64 [s1 + 0xd0]\n 37977: u8 [a2 + 0x13] = a1\n 37980: a1 = u64 [s1 + 0xc0]\n 37984: u8 [a2 + 0x12] = a1\n 37987: a1 = u64 [s1 + 0xb0]\n 37991: u8 [a2 + 0x11] = a1\n 37994: a1 = u64 [s1 + 0xa0]\n 37998: u8 [a2 + 0x1f] = a1\n 38001: a1 = u64 [s1 + 0x70]\n 38004: u8 [a2 + 0x1e] = a1\n 38007: a1 = u64 [s1 + 0x68]\n 38010: u8 [a2 + 0x1d] = a1\n 38013: a1 = u64 [s1 + 0x60]\n 38016: u8 [a2 + 0x1c] = a1\n 38019: a1 = u64 [s1 + 0x58]\n 38022: u8 [a2 + 0x1b] = a1\n 38025: a1 = u64 [s1 + 0x50]\n 38028: u8 [a2 + 0x1a] = a1\n 38031: a1 = u64 [s1 + 0x48]\n 38034: u8 [a2 + 0x19] = a1\n 38037: a1 = u64 [0x20008]\n 38042: u64 [s1 + 0x3f8] = a1\n 38046: a4 = u64 [0x20010]\n 38051: a1 = u64 [0x20018]\n 38056: a3 = u64 [0x20020]\n 38061: u64 [s1 + 0x3f0] = a4\n 38065: u64 [s1 + 0x3e8] = a1\n 38069: a2 = s1 + 0x3e0\n 38073: u64 [s1 + 0x3e0] = a3\n 38077: a1 = u64 [s1 + 0x228]\n 38081: ra = 84, jump @2\n      : @984 [@dyn 42] (gas: 15)\n 38087: a1 = s1 + 0x7ff\n 38091: a1 = a1 + 0x1b9\n 38095: u64 [a1 + 384] = 0\n 38099: u64 [a1 + 376] = 0\n 38103: u64 [a1 + 368] = 0\n 38107: u64 [a1 + 360] = 0\n 38111: u64 [a1 + 416] = 0\n 38115: u64 [a1 + 408] = 0\n 38119: u64 [a1 + 400] = 0\n 38123: u64 [a1 + 392] = 0x1\n 38128: a0 = s1 + 0x7ff\n 38132: a0 = a0 + 0x321\n 38136: a1 = s1 + 0x7ff\n 38140: a1 = a1 + 0x341\n 38144: ra = 86, jump @1\n      : @985 [@dyn 43] (gas: 5)\n 38150: a0 = 0\n 38152: a1 = u64 [s1 + 0x1a8]\n 38156: a2 = 0\n 38158: ecalli 11 // 'seal_return'\n 38160: fallthrough\n      : @986 (gas: 2)\n 38161: i32 t2 = t2 + 0\n 38163: jump @988 if t2 >=u a2\n      : @987 (gas: 3)\n 38166: a1 = u64 [s1 + 0x238]\n 38170: u32 [a1] = a2\n 38172: fallthrough\n      : @988 (gas: 38)\n 38173: i32 a1 = a0 + 0x44\n 38176: a2 = u64 [s1 + 0x230]\n 38180: a1 = a1 + a2\n 38183: u8 [a1 + 31] = 0\n 38186: u8 [a1 + 30] = 0\n 38189: u8 [a1 + 29] = 0\n 38192: u8 [a1 + 28] = 0\n 38195: u8 [a1 + 27] = 0\n 38198: u8 [a1 + 26] = 0\n 38201: u8 [a1 + 25] = 0\n 38204: u8 [a1 + 24] = 0\n 38207: u8 [a1 + 23] = 0\n 38210: u8 [a1 + 22] = 0\n 38213: u8 [a1 + 21] = 0\n 38216: u8 [a1 + 20] = 0\n 38219: u8 [a1 + 19] = 0\n 38222: u8 [a1 + 18] = 0\n 38225: u8 [a1 + 17] = 0\n 38228: u8 [a1 + 16] = 0\n 38231: u8 [a1 + 15] = 0\n 38234: u8 [a1 + 14] = 0\n 38237: u8 [a1 + 13] = 0\n 38240: u8 [a1 + 12] = 0\n 38243: u8 [a1 + 11] = 0\n 38246: u8 [a1 + 10] = 0\n 38249: u8 [a1 + 9] = 0\n 38252: u8 [a1 + 8] = 0x6c\n 38256: u8 [a1 + 7] = 0x6c\n 38260: u8 [a1 + 6] = 0x75\n 38264: u8 [a1 + 5] = 0x66\n 38268: u8 [a1 + 4] = 0x2d\n 38272: u8 [a1 + 3] = 0x65\n 38276: u8 [a1 + 2] = 0x65\n 38280: u8 [a1 + 1] = 0x72\n 38284: u8 [a1 + 0] = 0x74\n 38287: a1 = 0x64\n 38290: ra = 0x58\n 38293: jump @8\n      : @989 (gas: 3)\n 38297: u8 [a1] = a2\n 38299: a1 = 0x64\n 38302: ra = 88, jump @8\n      : @990 [@dyn 44] (gas: 5)\n 38308: i32 a1 = a0 + 0\n 38310: a0 = 0x1\n 38313: a2 = 0x64\n 38316: ecalli 11 // 'seal_return'\n 38318: fallthrough\n      : @991 (gas: 8)\n 38319: a0 = u64 [s1 + 0x238]\n 38323: a0 = i32 [a0]\n 38325: a2 = u64 [s1 + 0x230]\n 38329: u64 [a2 + 24] = 0\n 38332: u64 [a2 + 16] = 0\n 38335: u64 [a2 + 0] = 0x717b484e\n 38341: u64 [a2 + 8] = 0\n 38344: jump @993 if a0 >u 63\n      : @992 (gas: 4)\n 38348: a1 = u64 [s1 + 0x238]\n 38352: u32 [a1 + 0] = 0x40\n 38355: a0 = 0x11000000\n 38361: jump @727\n      : @993 (gas: 2)\n 38364: a0 = 0x11000000\n 38370: jump @727\n      : @994 (gas: 19)\n 38373: a1 = u64 [s1 + 0x230]\n 38377: u64 [a1 + 16] = 0\n 38380: u64 [a1 + 24] = 0\n 38383: u64 [a1 + 8] = 0\n 38386: u64 [a1 + 0] = 0x717b484e\n 38392: u32 [a1 + 32] = 0x41000000\n 38399: u32 [a1 + 20] = 0\n 38402: u32 [a1 + 24] = 0\n 38405: u32 [a1 + 28] = 0\n 38408: u32 [a1 + 8] = 0\n 38411: u32 [a1 + 12] = 0\n 38414: u32 [a1 + 16] = 0\n 38417: u32 [a1 + 4] = 0\n 38420: a0 = 0x1\n 38423: a2 = 0x24\n 38426: a1 = u64 [s1 + 0x1a8]\n 38430: ra = 0x5a\n 38433: ecalli 11 // 'seal_return'\n 38435: fallthrough\n      : @995 [@dyn 45] (gas: 1)\n 38436: jump @997 if a1 >u 95\n      : @996 (gas: 4)\n 38440: a1 = 0x60\n 38443: a0 = u64 [s1 + 0x238]\n 38447: u32 [a0] = a1\n 38449: fallthrough\n      : @997 (gas: 17)\n 38450: a4 = u64 [s1 + 0x230]\n 38454: a0 = u64 [a4 + 0x48]\n 38457: a2 = u64 [a4 + 0x58]\n 38460: a3 = u64 [a4 + 0x40]\n 38463: a5 = u64 [a4 + 0x50]\n 38466: a4 = reverse a0\n 38468: a0 = reverse a2\n 38470: t1 = reverse a3\n 38472: t0 = reverse a5\n 38474: a2 = t0 | t1\n 38477: a3 = a0 | a4\n 38480: a3 = a3 | a2\n 38483: a3 = a3 >> 0x20\n 38486: a2 = a2 | a4\n 38489: a2 = a2 << 0x20\n 38492: a2 = a2 | a3\n 38495: jump @999 if a2 == 0\n      : @998 (gas: 1)\n 38498: jump @660\n      : @999 (gas: 2)\n 38501: i32 a2 = a0 >> 0x10\n 38504: jump @1001 if a2 == 0\n      : @1000 (gas: 1)\n 38507: jump @660\n      : @1001 (gas: 4)\n 38510: a2 = a0 + 0x3f\n 38513: a3 = u64 [s1 + 0x1f0]\n 38517: a2 = a2 & a3\n 38520: jump @1003 if a2 <=u 65536\n      : @1002 (gas: 1)\n 38526: jump @660\n      : @1003 (gas: 1)\n 38529: jump @1005 if a1 >=u a2\n      : @1004 (gas: 4)\n 38532: a1 = u64 [s1 + 0x238]\n 38536: u32 [a1] = a2\n 38538: a1 = a2\n 38540: fallthrough\n      : @1005 (gas: 41)\n 38541: i32 t2 = a0 + 0\n 38543: a3 = u64 [s1 + 0x230]\n 38547: a3 = a3 + t2\n 38550: u8 [a3 + 31] = 0\n 38553: u8 [a3 + 30] = 0\n 38556: u8 [a3 + 29] = 0\n 38559: u8 [a3 + 28] = 0\n 38562: u8 [a3 + 27] = 0\n 38565: u8 [a3 + 26] = 0\n 38568: u8 [a3 + 25] = 0\n 38571: u8 [a3 + 24] = 0\n 38574: u8 [a3 + 23] = 0\n 38577: u8 [a3 + 22] = 0\n 38580: u8 [a3 + 21] = 0\n 38583: u8 [a3 + 20] = 0\n 38586: u8 [a3 + 19] = 0\n 38589: u8 [a3 + 18] = 0\n 38592: u8 [a3 + 17] = 0\n 38595: u8 [a3 + 16] = 0\n 38598: u8 [a3 + 15] = 0\n 38601: u8 [a3 + 14] = 0\n 38604: u8 [a3 + 13] = 0\n 38607: u8 [a3 + 12] = 0\n 38610: u8 [a3 + 11] = 0\n 38613: u8 [a3 + 10] = 0\n 38616: u8 [a3 + 9] = 0\n 38619: u8 [a3 + 8] = 0\n 38622: u8 [a3 + 7] = 0\n 38625: u8 [a3 + 6] = 0\n 38628: u8 [a3 + 5] = 0\n 38631: u8 [a3 + 4] = 0\n 38634: u8 [a3 + 3] = 0xa0\n 38639: u8 [a3 + 2] = 0x79\n 38643: u8 [a3 + 1] = 0xc3\n 38648: a4 = a4 | t1\n 38651: a2 = 0xfffffffc\n 38661: a2 = a0 <u a2\n 38664: a2 = 0 if t0 != 0\n 38666: a2 = 0 if a4 != 0\n 38668: u8 [a3 + 0] = 0x8\n 38671: jump @1007 if a2 != 0\n      : @1006 (gas: 1)\n 38674: jump @660\n      : @1007 (gas: 1)\n 38677: jump @1009 if t2 <u 65532\n      : @1008 (gas: 1)\n 38683: jump @660\n      : @1009 (gas: 4)\n 38686: a2 = a0 + 0x43\n 38689: a3 = u64 [s1 + 0x1f0]\n 38693: a3 = a3 & a2\n 38696: jump @1011 if a3 <=u 65536\n      : @1010 (gas: 1)\n 38702: jump @660\n      : @1011 (gas: 3)\n 38705: i32 a2 = a1 + 0\n 38707: i32 a5 = a0 + 0x4\n 38710: jump @1013 if a2 >=u a3\n      : @1012 (gas: 4)\n 38713: a1 = u64 [s1 + 0x238]\n 38717: u32 [a1] = a3\n 38719: a1 = a3\n 38721: fallthrough\n      : @1013 (gas: 39)\n 38722: a3 = u64 [s1 + 0x230]\n 38726: a3 = a3 + a5\n 38729: u8 [a3 + 31] = 0x20\n 38733: u8 [a3 + 30] = 0\n 38736: u8 [a3 + 29] = 0\n 38739: u8 [a3 + 28] = 0\n 38742: u8 [a3 + 27] = 0\n 38745: u8 [a3 + 26] = 0\n 38748: u8 [a3 + 25] = 0\n 38751: u8 [a3 + 24] = 0\n 38754: u8 [a3 + 23] = 0\n 38757: u8 [a3 + 22] = 0\n 38760: u8 [a3 + 21] = 0\n 38763: u8 [a3 + 20] = 0\n 38766: u8 [a3 + 19] = 0\n 38769: u8 [a3 + 18] = 0\n 38772: u8 [a3 + 17] = 0\n 38775: u8 [a3 + 16] = 0\n 38778: u8 [a3 + 15] = 0\n 38781: u8 [a3 + 14] = 0\n 38784: u8 [a3 + 13] = 0\n 38787: u8 [a3 + 12] = 0\n 38790: u8 [a3 + 11] = 0\n 38793: u8 [a3 + 10] = 0\n 38796: u8 [a3 + 9] = 0\n 38799: u8 [a3 + 8] = 0\n 38802: u8 [a3 + 7] = 0\n 38805: u8 [a3 + 6] = 0\n 38808: u8 [a3 + 5] = 0\n 38811: u8 [a3 + 4] = 0\n 38814: u8 [a3 + 3] = 0\n 38817: u8 [a3 + 2] = 0\n 38820: u8 [a3 + 1] = 0\n 38823: a2 = 0xffffffdc\n 38833: a2 = a0 <u a2\n 38836: a2 = 0 if t0 != 0\n 38838: a2 = 0 if a4 != 0\n 38840: u8 [a3 + 0] = 0\n 38842: jump @1015 if a2 != 0\n      : @1014 (gas: 1)\n 38845: jump @660\n      : @1015 (gas: 1)\n 38848: jump @1017 if t2 <u 65500\n      : @1016 (gas: 1)\n 38854: jump @660\n      : @1017 (gas: 4)\n 38857: a2 = a0 + 0x63\n 38860: a3 = u64 [s1 + 0x1f0]\n 38864: a3 = a3 & a2\n 38867: jump @1019 if a3 <=u 65536\n      : @1018 (gas: 1)\n 38873: jump @660\n      : @1019 (gas: 3)\n 38876: i32 a2 = a1 + 0\n 38878: i32 a5 = a0 + 0x24\n 38881: jump @1021 if a2 >=u a3\n      : @1020 (gas: 4)\n 38884: a1 = u64 [s1 + 0x238]\n 38888: u32 [a1] = a3\n 38890: a1 = a3\n 38892: fallthrough\n      : @1021 (gas: 39)\n 38893: a3 = u64 [s1 + 0x230]\n 38897: a3 = a3 + a5\n 38900: u8 [a3 + 31] = 0xd\n 38904: u8 [a3 + 30] = 0\n 38907: u8 [a3 + 29] = 0\n 38910: u8 [a3 + 28] = 0\n 38913: u8 [a3 + 27] = 0\n 38916: u8 [a3 + 26] = 0\n 38919: u8 [a3 + 25] = 0\n 38922: u8 [a3 + 24] = 0\n 38925: u8 [a3 + 23] = 0\n 38928: u8 [a3 + 22] = 0\n 38931: u8 [a3 + 21] = 0\n 38934: u8 [a3 + 20] = 0\n 38937: u8 [a3 + 19] = 0\n 38940: u8 [a3 + 18] = 0\n 38943: u8 [a3 + 17] = 0\n 38946: u8 [a3 + 16] = 0\n 38949: u8 [a3 + 15] = 0\n 38952: u8 [a3 + 14] = 0\n 38955: u8 [a3 + 13] = 0\n 38958: u8 [a3 + 12] = 0\n 38961: u8 [a3 + 11] = 0\n 38964: u8 [a3 + 10] = 0\n 38967: u8 [a3 + 9] = 0\n 38970: u8 [a3 + 8] = 0\n 38973: u8 [a3 + 7] = 0\n 38976: u8 [a3 + 6] = 0\n 38979: u8 [a3 + 5] = 0\n 38982: u8 [a3 + 4] = 0\n 38985: u8 [a3 + 3] = 0\n 38988: u8 [a3 + 2] = 0\n 38991: u8 [a3 + 1] = 0\n 38994: a2 = 0xffffffbc\n 39004: a2 = a0 <u a2\n 39007: a2 = 0 if t0 != 0\n 39009: a2 = 0 if a4 != 0\n 39011: u8 [a3 + 0] = 0\n 39013: jump @1023 if a2 != 0\n      : @1022 (gas: 1)\n 39016: jump @660\n      : @1023 (gas: 1)\n 39019: jump @1025 if t2 <u 65468\n      : @1024 (gas: 1)\n 39025: jump @660\n      : @1025 (gas: 4)\n 39028: a2 = a0 + 0x83\n 39032: a4 = u64 [s1 + 0x1f0]\n 39036: a2 = a2 & a4\n 39039: jump @1027 if a2 <=u 65536\n      : @1026 (gas: 1)\n 39045: jump @660\n      : @1027 (gas: 2)\n 39048: i32 a1 = a1 + 0\n 39050: jump @1029 if a1 >=u a2\n      : @1028 (gas: 3)\n 39053: a1 = u64 [s1 + 0x238]\n 39057: u32 [a1] = a2\n 39059: fallthrough\n      : @1029 (gas: 36)\n 39060: i32 a1 = a0 + 0x44\n 39063: a2 = u64 [s1 + 0x230]\n 39067: a1 = a1 + a2\n 39070: u8 [a1 + 31] = 0\n 39073: u8 [a1 + 30] = 0\n 39076: u8 [a1 + 29] = 0\n 39079: u8 [a1 + 28] = 0\n 39082: u8 [a1 + 27] = 0\n 39085: u8 [a1 + 26] = 0\n 39088: u8 [a1 + 25] = 0\n 39091: u8 [a1 + 24] = 0\n 39094: u8 [a1 + 23] = 0\n 39097: u8 [a1 + 22] = 0\n 39100: u8 [a1 + 21] = 0\n 39103: u8 [a1 + 20] = 0\n 39106: u8 [a1 + 19] = 0\n 39109: u8 [a1 + 18] = 0\n 39112: u8 [a1 + 17] = 0\n 39115: u8 [a1 + 16] = 0\n 39118: u8 [a1 + 15] = 0\n 39121: u8 [a1 + 14] = 0\n 39124: u8 [a1 + 13] = 0\n 39127: u8 [a1 + 12] = 0x66\n 39131: u8 [a1 + 11] = 0x6f\n 39135: u8 [a1 + 10] = 0x6f\n 39139: u8 [a1 + 9] = 0x72\n 39143: u8 [a1 + 8] = 0x70\n 39147: u8 [a1 + 7] = 0x2d\n 39151: u8 [a1 + 6] = 0x64\n 39155: a2 = 0x69\n 39158: u8 [a1 + 0x5] = a2\n 39161: u8 [a1 + 4] = 0x6c\n 39165: u8 [a1 + 3] = 0x61\n 39169: u8 [a1 + 2] = 0x76\n 39173: u8 [a1 + 1] = 0x6e\n 39177: jump @989\n      : @1030 (gas: 6)\n 39180: a3 = a3 | a2\n 39183: a3 = a3 >> 0x20\n 39186: a1 = a1 | a2\n 39189: a1 = a1 << 0x20\n 39192: a1 = a1 | a3\n 39195: jump @1032 if a1 == 0\n      : @1031 (gas: 1)\n 39198: jump @660\n      : @1032 (gas: 1)\n 39201: jump @1034 if a0 == 0\n      : @1033 (gas: 1)\n 39204: jump @660\n      : @1034 (gas: 5)\n 39207: a0 = u64 [s1 + 0x228]\n 39211: a0 = a0 + 0x3f\n 39214: a1 = u64 [s1 + 0x1f0]\n 39218: a0 = a0 & a1\n 39221: jump @1036 if a0 <=u 65536\n      : @1035 (gas: 1)\n 39227: jump @660\n      : @1036 (gas: 3)\n 39230: a1 = u64 [s1 + 0x238]\n 39234: t1 = i32 [a1]\n 39236: jump @1038 if t1 >=u a0\n      : @1037 (gas: 4)\n 39239: a1 = u64 [s1 + 0x238]\n 39243: u32 [a1] = a0\n 39245: t1 = a0\n 39247: fallthrough\n      : @1038 (gas: 103)\n 39248: a0 = i32 [s1 + 0x228]\n 39252: a1 = u64 [s1 + 0x230]\n 39256: a0 = a0 + a1\n 39259: a2 = u8 [a0 + 0x11]\n 39262: a3 = u8 [a0 + 0x10]\n 39265: a4 = u8 [a0 + 0x12]\n 39268: a5 = u8 [a0 + 0x13]\n 39271: a2 = a2 << 0x8\n 39274: a2 = a2 | a3\n 39277: a4 = a4 << 0x10\n 39280: a5 = a5 << 0x18\n 39283: a4 = a4 | a5\n 39286: a2 = a2 | a4\n 39289: a3 = u8 [a0 + 0x15]\n 39292: a4 = u8 [a0 + 0x14]\n 39295: a5 = u8 [a0 + 0x16]\n 39298: a1 = u8 [a0 + 0x17]\n 39301: a3 = a3 << 0x8\n 39304: a3 = a3 | a4\n 39307: a5 = a5 << 0x10\n 39310: a1 = a1 << 0x18\n 39313: a1 = a1 | a5\n 39316: a1 = a1 | a3\n 39319: a1 = a1 << 0x20\n 39322: t0 = a1 | a2\n 39325: a1 = u8 [a0 + 0x1]\n 39328: a3 = u8 [a0]\n 39330: a4 = u8 [a0 + 0x2]\n 39333: a5 = u8 [a0 + 0x3]\n 39336: a1 = a1 << 0x8\n 39339: a1 = a1 | a3\n 39342: a4 = a4 << 0x10\n 39345: a5 = a5 << 0x18\n 39348: a4 = a4 | a5\n 39351: a1 = a1 | a4\n 39354: a3 = u8 [a0 + 0x5]\n 39357: a4 = u8 [a0 + 0x4]\n 39360: a5 = u8 [a0 + 0x6]\n 39363: a2 = u8 [a0 + 0x7]\n 39366: a3 = a3 << 0x8\n 39369: a3 = a3 | a4\n 39372: a5 = a5 << 0x10\n 39375: a2 = a2 << 0x18\n 39378: a2 = a2 | a5\n 39381: a2 = a2 | a3\n 39384: a2 = a2 << 0x20\n 39387: t2 = a2 | a1\n 39390: a1 = u8 [a0 + 0x19]\n 39393: a2 = u8 [a0 + 0x18]\n 39396: a4 = u8 [a0 + 0x1a]\n 39399: a5 = u8 [a0 + 0x1b]\n 39402: a1 = a1 << 0x8\n 39405: a1 = a1 | a2\n 39408: a4 = a4 << 0x10\n 39411: a5 = a5 << 0x18\n 39414: a4 = a4 | a5\n 39417: a1 = a1 | a4\n 39420: a2 = u8 [a0 + 0x1d]\n 39423: a4 = u8 [a0 + 0x1c]\n 39426: a5 = u8 [a0 + 0x1e]\n 39429: a3 = u8 [a0 + 0x1f]\n 39432: a2 = a2 << 0x8\n 39435: a2 = a2 | a4\n 39438: a5 = a5 << 0x10\n 39441: a3 = a3 << 0x18\n 39444: a3 = a3 | a5\n 39447: a2 = a2 | a3\n 39450: a2 = a2 << 0x20\n 39453: a5 = a2 | a1\n 39456: a1 = u8 [a0 + 0x9]\n 39459: a2 = u8 [a0 + 0x8]\n 39462: a3 = u8 [a0 + 0xa]\n 39465: a4 = u8 [a0 + 0xb]\n 39468: a1 = a1 << 0x8\n 39471: a1 = a1 | a2\n 39474: a3 = a3 << 0x10\n 39477: a4 = a4 << 0x18\n 39480: a3 = a3 | a4\n 39483: a1 = a1 | a3\n 39486: a2 = u8 [a0 + 0xd]\n 39489: a3 = u8 [a0 + 0xc]\n 39492: a4 = u8 [a0 + 0xe]\n 39495: a0 = u8 [a0 + 0xf]\n 39498: a2 = a2 << 0x8\n 39501: a2 = a2 | a3\n 39504: a4 = a4 << 0x10\n 39507: a0 = a0 << 0x18\n 39510: a0 = a0 | a4\n 39513: a0 = a0 | a2\n 39516: a0 = a0 << 0x20\n 39519: a0 = a0 | a1\n 39522: a4 = reverse a0\n 39524: a0 = reverse a5\n 39526: a5 = reverse t2\n 39528: t0 = reverse t0\n 39530: a1 = t0 | a5\n 39533: a2 = a0 | a4\n 39536: a2 = a2 | a1\n 39539: a2 = a2 >> 0x20\n 39542: a1 = a1 | a4\n 39545: a1 = a1 << 0x20\n 39548: a1 = a1 | a2\n 39551: jump @1040 if a1 == 0\n      : @1039 (gas: 1)\n 39554: jump @660\n      : @1040 (gas: 2)\n 39557: i32 a1 = a0 >> 0x10\n 39560: jump @1042 if a1 == 0\n      : @1041 (gas: 1)\n 39563: jump @660\n      : @1042 (gas: 4)\n 39566: a1 = a0 + 0x3f\n 39569: a2 = u64 [s1 + 0x1f0]\n 39573: a2 = a2 & a1\n 39576: jump @1044 if a2 <=u 65536\n      : @1043 (gas: 1)\n 39582: jump @660\n      : @1044 (gas: 1)\n 39585: jump @1046 if t1 >=u a2\n      : @1045 (gas: 4)\n 39588: a1 = u64 [s1 + 0x238]\n 39592: u32 [a1] = a2\n 39594: t1 = a2\n 39596: fallthrough\n      : @1046 (gas: 41)\n 39597: i32 a2 = a0 + 0\n 39599: a3 = u64 [s1 + 0x230]\n 39603: a3 = a3 + a2\n 39606: u8 [a3 + 31] = 0\n 39609: u8 [a3 + 30] = 0\n 39612: u8 [a3 + 29] = 0\n 39615: u8 [a3 + 28] = 0\n 39618: u8 [a3 + 27] = 0\n 39621: u8 [a3 + 26] = 0\n 39624: u8 [a3 + 25] = 0\n 39627: u8 [a3 + 24] = 0\n 39630: u8 [a3 + 23] = 0\n 39633: u8 [a3 + 22] = 0\n 39636: u8 [a3 + 21] = 0\n 39639: u8 [a3 + 20] = 0\n 39642: u8 [a3 + 19] = 0\n 39645: u8 [a3 + 18] = 0\n 39648: u8 [a3 + 17] = 0\n 39651: u8 [a3 + 16] = 0\n 39654: u8 [a3 + 15] = 0\n 39657: u8 [a3 + 14] = 0\n 39660: u8 [a3 + 13] = 0\n 39663: u8 [a3 + 12] = 0\n 39666: u8 [a3 + 11] = 0\n 39669: u8 [a3 + 10] = 0\n 39672: u8 [a3 + 9] = 0\n 39675: u8 [a3 + 8] = 0\n 39678: u8 [a3 + 7] = 0\n 39681: u8 [a3 + 6] = 0\n 39684: u8 [a3 + 5] = 0\n 39687: u8 [a3 + 4] = 0\n 39690: u8 [a3 + 3] = 0xa0\n 39695: u8 [a3 + 2] = 0x79\n 39699: u8 [a3 + 1] = 0xc3\n 39704: a4 = a4 | a5\n 39707: a5 = 0xfffffffc\n 39717: a5 = a0 <u a5\n 39720: a5 = 0 if t0 != 0\n 39722: a5 = 0 if a4 != 0\n 39724: u8 [a3 + 0] = 0x8\n 39727: jump @1048 if a5 != 0\n      : @1047 (gas: 1)\n 39730: jump @660\n      : @1048 (gas: 1)\n 39733: jump @1050 if a2 <u 65532\n      : @1049 (gas: 1)\n 39739: jump @660\n      : @1050 (gas: 4)\n 39742: a1 = a0 + 0x43\n 39745: a3 = u64 [s1 + 0x1f0]\n 39749: a3 = a3 & a1\n 39752: jump @1052 if a3 <=u 65536\n      : @1051 (gas: 1)\n 39758: jump @660\n      : @1052 (gas: 2)\n 39761: i32 a5 = a0 + 0x4\n 39764: jump @1054 if t1 >=u a3\n      : @1053 (gas: 4)\n 39767: a1 = u64 [s1 + 0x238]\n 39771: u32 [a1] = a3\n 39773: t1 = a3\n 39775: fallthrough\n      : @1054 (gas: 39)\n 39776: a3 = u64 [s1 + 0x230]\n 39780: a3 = a3 + a5\n 39783: u8 [a3 + 31] = 0x20\n 39787: u8 [a3 + 30] = 0\n 39790: u8 [a3 + 29] = 0\n 39793: u8 [a3 + 28] = 0\n 39796: u8 [a3 + 27] = 0\n 39799: u8 [a3 + 26] = 0\n 39802: u8 [a3 + 25] = 0\n 39805: u8 [a3 + 24] = 0\n 39808: u8 [a3 + 23] = 0\n 39811: u8 [a3 + 22] = 0\n 39814: u8 [a3 + 21] = 0\n 39817: u8 [a3 + 20] = 0\n 39820: u8 [a3 + 19] = 0\n 39823: u8 [a3 + 18] = 0\n 39826: u8 [a3 + 17] = 0\n 39829: u8 [a3 + 16] = 0\n 39832: u8 [a3 + 15] = 0\n 39835: u8 [a3 + 14] = 0\n 39838: u8 [a3 + 13] = 0\n 39841: u8 [a3 + 12] = 0\n 39844: u8 [a3 + 11] = 0\n 39847: u8 [a3 + 10] = 0\n 39850: u8 [a3 + 9] = 0\n 39853: u8 [a3 + 8] = 0\n 39856: u8 [a3 + 7] = 0\n 39859: u8 [a3 + 6] = 0\n 39862: u8 [a3 + 5] = 0\n 39865: u8 [a3 + 4] = 0\n 39868: u8 [a3 + 3] = 0\n 39871: u8 [a3 + 2] = 0\n 39874: u8 [a3 + 1] = 0\n 39877: a1 = 0xffffffdc\n 39887: a1 = a0 <u a1\n 39890: a1 = 0 if t0 != 0\n 39892: a1 = 0 if a4 != 0\n 39894: u8 [a3 + 0] = 0\n 39896: jump @1056 if a1 != 0\n      : @1055 (gas: 1)\n 39899: jump @660\n      : @1056 (gas: 1)\n 39902: jump @1058 if a2 <u 65500\n      : @1057 (gas: 1)\n 39908: jump @660\n      : @1058 (gas: 4)\n 39911: a1 = a0 + 0x63\n 39914: a3 = u64 [s1 + 0x1f0]\n 39918: a3 = a3 & a1\n 39921: jump @1060 if a3 <=u 65536\n      : @1059 (gas: 1)\n 39927: jump @660\n      : @1060 (gas: 2)\n 39930: i32 a5 = a0 + 0x24\n 39933: jump @1062 if t1 >=u a3\n      : @1061 (gas: 4)\n 39936: a1 = u64 [s1 + 0x238]\n 39940: u32 [a1] = a3\n 39942: t1 = a3\n 39944: fallthrough\n      : @1062 (gas: 39)\n 39945: a3 = u64 [s1 + 0x230]\n 39949: a3 = a3 + a5\n 39952: u8 [a3 + 31] = 0xe\n 39956: u8 [a3 + 30] = 0\n 39959: u8 [a3 + 29] = 0\n 39962: u8 [a3 + 28] = 0\n 39965: u8 [a3 + 27] = 0\n 39968: u8 [a3 + 26] = 0\n 39971: u8 [a3 + 25] = 0\n 39974: u8 [a3 + 24] = 0\n 39977: u8 [a3 + 23] = 0\n 39980: u8 [a3 + 22] = 0\n 39983: u8 [a3 + 21] = 0\n 39986: u8 [a3 + 20] = 0\n 39989: u8 [a3 + 19] = 0\n 39992: u8 [a3 + 18] = 0\n 39995: u8 [a3 + 17] = 0\n 39998: u8 [a3 + 16] = 0\n 40001: u8 [a3 + 15] = 0\n 40004: u8 [a3 + 14] = 0\n 40007: u8 [a3 + 13] = 0\n 40010: u8 [a3 + 12] = 0\n 40013: u8 [a3 + 11] = 0\n 40016: u8 [a3 + 10] = 0\n 40019: u8 [a3 + 9] = 0\n 40022: u8 [a3 + 8] = 0\n 40025: u8 [a3 + 7] = 0\n 40028: u8 [a3 + 6] = 0\n 40031: u8 [a3 + 5] = 0\n 40034: u8 [a3 + 4] = 0\n 40037: u8 [a3 + 3] = 0\n 40040: u8 [a3 + 2] = 0\n 40043: u8 [a3 + 1] = 0\n 40046: a1 = 0xffffffbc\n 40056: a1 = a0 <u a1\n 40059: a1 = 0 if t0 != 0\n 40061: a1 = 0 if a4 != 0\n 40063: u8 [a3 + 0] = 0\n 40065: jump @1064 if a1 != 0\n      : @1063 (gas: 1)\n 40068: jump @660\n      : @1064 (gas: 1)\n 40071: jump @1066 if a2 <u 65468\n      : @1065 (gas: 1)\n 40077: jump @660\n      : @1066 (gas: 4)\n 40080: a1 = a0 + 0x83\n 40084: a2 = u64 [s1 + 0x1f0]\n 40088: a2 = a2 & a1\n 40091: jump @1068 if a2 <=u 65536\n      : @1067 (gas: 1)\n 40097: jump @660\n      : @1068 (gas: 1)\n 40100: jump @1070 if t1 >=u a2\n      : @1069 (gas: 3)\n 40103: a1 = u64 [s1 + 0x238]\n 40107: u32 [a1] = a2\n 40109: fallthrough\n      : @1070 (gas: 37)\n 40110: i32 a1 = a0 + 0x44\n 40113: a2 = u64 [s1 + 0x230]\n 40117: a1 = a1 + a2\n 40120: u8 [a1 + 31] = 0\n 40123: u8 [a1 + 30] = 0\n 40126: u8 [a1 + 29] = 0\n 40129: u8 [a1 + 28] = 0\n 40132: u8 [a1 + 27] = 0\n 40135: u8 [a1 + 26] = 0\n 40138: u8 [a1 + 25] = 0\n 40141: u8 [a1 + 24] = 0\n 40144: u8 [a1 + 23] = 0\n 40147: u8 [a1 + 22] = 0\n 40150: u8 [a1 + 21] = 0\n 40153: u8 [a1 + 20] = 0\n 40156: u8 [a1 + 19] = 0\n 40159: u8 [a1 + 18] = 0\n 40162: u8 [a1 + 17] = 0\n 40165: u8 [a1 + 16] = 0\n 40168: u8 [a1 + 15] = 0\n 40171: u8 [a1 + 14] = 0\n 40174: u8 [a1 + 13] = 0x64\n 40178: u8 [a1 + 12] = 0x65\n 40182: u8 [a1 + 11] = 0x6c\n 40186: u8 [a1 + 10] = 0x69\n 40190: u8 [a1 + 9] = 0x61\n 40194: u8 [a1 + 8] = 0x66\n 40198: u8 [a1 + 7] = 0x2d\n 40202: u8 [a1 + 6] = 0x74\n 40206: a4 = 0x6e\n 40209: u8 [a1 + 0x5] = a4\n 40212: u8 [a1 + 4] = 0x65\n 40216: u8 [a1 + 3] = 0x6d\n 40220: u8 [a1 + 2] = 0x79\n 40224: u8 [a1 + 1] = 0x61\n 40228: a2 = 0x70\n 40231: jump @989\n      : @1071 (gas: 45)\n 40234: sp = sp + 0xffffffffffffffe0\n 40237: u64 [sp + 0x18] = ra\n 40240: u64 [sp + 0x10] = s0\n 40243: u64 [sp + 0x8] = s1\n 40246: a3 = u64 [a0 + 0x18]\n 40249: ra = u64 [a0 + 0x10]\n 40252: t0 = u64 [a0 + 0x8]\n 40255: a5 = u64 [a0]\n 40257: a0 = u64 [a1]\n 40259: t1 = u64 [a1 + 0x18]\n 40262: a4 = u64 [a1 + 0x8]\n 40265: a1 = u64 [a1 + 0x10]\n 40268: s0 = a0 + 0x1f\n 40271: a0 = s0 <u a0\n 40274: s1 = a4 + a0\n 40277: a4 = s1 <u a4\n 40280: a4 = a0 if a0 == 0\n 40283: a0 = a1 + a4\n 40286: a2 = a0 <u a1\n 40289: s0 = s0 & 0xffffffffffffffe0\n 40292: t2 = s0 + a5\n 40295: a4 = t2 <u s0\n 40298: a1 = s1 + t0\n 40301: a1 = a1 + a4\n 40304: s0 = a1 ^ s1\n 40307: s1 = a1 <u s1\n 40310: s1 = a4 if s0 == 0\n 40313: s0 = a0 + ra\n 40316: a4 = s0 + s1\n 40319: s1 = a4 <u s0\n 40322: a0 = s0 <u a0\n 40325: t1 = t1 + a3\n 40328: a2 = a2 + t1\n 40331: a0 = a0 + a2\n 40334: a0 = a0 + s1\n 40337: a2 = a0 >u 0\n 40339: t1 = 0x2004c\n 40344: s1 = a4 >u 0\n 40346: s1 = a2 if a0 != 0\n 40349: a2 = a4 | a0\n 40352: s0 = i32 [0x2004c]\n 40357: u64 [sp] = s0\n 40359: s0 = a1 >u 0\n 40361: s0 = s1 if a2 != 0\n 40364: jump @1076 if s0 != 0\n      : @1072 (gas: 12)\n 40367: a2 = t2 <u a5\n 40370: a5 = a1 ^ t0\n 40373: s1 = a1 <u t0\n 40376: s1 = a2 if a5 == 0\n 40379: a2 = a4 <u ra\n 40382: a5 = a0 ^ a3\n 40385: a3 = a0 <u a3\n 40388: a3 = a2 if a5 == 0\n 40391: a2 = a4 ^ ra\n 40394: a2 = a2 | a5\n 40397: a3 = s1 if a2 == 0\n 40400: jump @1076 if a3 != 0\n      : @1073 (gas: 2)\n 40403: a3 = u64 [sp]\n 40405: jump @1075 if a3 >u 95\n      : @1074 (gas: 2)\n 40409: u32 [0x2004c] = 0x60\n 40415: fallthrough\n      : @1075 (gas: 14)\n 40416: a0 = reverse a0\n 40418: a2 = 0x20060\n 40423: a3 = reverse a4\n 40425: a1 = reverse a1\n 40427: a4 = reverse t2\n 40429: u64 [0x200b8] = a4\n 40434: u64 [0x200b0] = a1\n 40439: u64 [0x200a8] = a3\n 40444: u64 [0x200a0] = a0\n 40449: ra = u64 [sp + 0x18]\n 40452: s0 = u64 [sp + 0x10]\n 40455: s1 = u64 [sp + 0x8]\n 40458: sp = sp + 0x20\n 40461: ret\n      : @1076 (gas: 7)\n 40463: a1 = 0x20060\n 40468: u64 [0x20078] = 0\n 40473: u64 [0x20070] = 0\n 40478: u64 [0x20060] = 0x717b484e\n 40487: u64 [0x20068] = 0\n 40492: a2 = u64 [sp]\n 40494: jump @1078 if a2 >u 63\n      : @1077 (gas: 2)\n 40498: u32 [0x2004c] = 0x40\n 40504: fallthrough\n      : @1078 (gas: 14)\n 40505: u32 [0x20080] = 0x41000000\n 40514: u32 [0x2007c] = 0\n 40519: u32 [0x20078] = 0\n 40524: u32 [0x20074] = 0\n 40529: u32 [0x20070] = 0\n 40534: u32 [0x2006c] = 0\n 40539: u32 [0x20068] = 0\n 40544: u32 [0x20064] = 0\n 40549: i32 a1 = a1 + 0\n 40551: a0 = 0x1\n 40554: a2 = 0x24\n 40557: ra = 0x5c\n 40560: ecalli 11 // 'seal_return'\n 40562: fallthrough\n      : @1079 [@dyn 46] (gas: 18)\n 40563: sp = sp + 0xffffffffffffffe8\n 40566: u64 [sp + 0x10] = ra\n 40569: u64 [sp + 0x8] = s0\n 40572: u64 [sp] = s1\n 40574: a5 = u64 [a2 + 0x18]\n 40577: s0 = u64 [a2 + 0x10]\n 40580: t1 = u64 [a2]\n 40582: t2 = u64 [a2 + 0x8]\n 40585: t0 = a5 >u 0\n 40587: a3 = s0 >u 0\n 40589: a3 = t0 if a5 != 0\n 40592: t0 = t2 >u 0\n 40594: a2 = t1 <u 0xa\n 40597: a2 = a2 ^ 0x1\n 40600: a2 = t0 if t2 != 0\n 40603: a4 = s0 | a5\n 40606: a2 = a3 if a4 != 0\n 40609: jump @1081 if a2 != 0\n      : @1080 (gas: 37)\n 40612: t0 = u64 [a1 + 0x18]\n 40615: ra = u64 [a1 + 0x10]\n 40618: a3 = u64 [a1 + 0x8]\n 40621: a1 = u64 [a1]\n 40623: a4 = s0 >> 0x3b\n 40626: a5 = a5 << 0x5\n 40629: a4 = a4 | a5\n 40632: a5 = t2 >> 0x3b\n 40635: s0 = s0 << 0x5\n 40638: a5 = a5 | s0\n 40641: s0 = t1 >> 0x3b\n 40644: t2 = t2 << 0x5\n 40647: s0 = t2 | s0\n 40650: t1 = t1 << 0x5\n 40653: a1 = a1 + t1\n 40656: a2 = a1 <u t1\n 40659: a3 = a3 + s0\n 40662: a3 = a3 + a2\n 40665: s1 = a3 ^ s0\n 40668: s0 = a3 <u s0\n 40671: s0 = a2 if s1 == 0\n 40674: ra = ra + a5\n 40677: s0 = s0 + ra\n 40680: a2 = s0 <u ra\n 40683: a5 = ra <u a5\n 40686: a4 = a4 + t0\n 40689: a4 = a4 + a5\n 40692: a2 = a2 + a4\n 40695: u64 [a0] = a1\n 40697: u64 [a0 + 0x8] = a3\n 40700: u64 [a0 + 0x10] = s0\n 40703: u64 [a0 + 0x18] = a2\n 40706: ra = u64 [sp + 0x10]\n 40709: s0 = u64 [sp + 0x8]\n 40712: s1 = u64 [sp]\n 40714: sp = sp + 0x18\n 40717: ret\n      : @1081 (gas: 7)\n 40719: a1 = 0x20060\n 40724: a2 = i32 [0x2004c]\n 40729: u64 [0x20078] = 0\n 40734: u64 [0x20070] = 0\n 40739: u64 [0x20060] = 0x717b484e\n 40748: u64 [0x20068] = 0\n 40753: jump @1083 if a2 >u 63\n      : @1082 (gas: 2)\n 40757: u32 [0x2004c] = 0x40\n 40763: fallthrough\n      : @1083 (gas: 14)\n 40764: u32 [0x20080] = 0x32000000\n 40773: u32 [0x2007c] = 0\n 40778: u32 [0x20078] = 0\n 40783: u32 [0x20074] = 0\n 40788: u32 [0x20070] = 0\n 40793: u32 [0x2006c] = 0\n 40798: u32 [0x20068] = 0\n 40803: u32 [0x20064] = 0\n 40808: i32 a1 = a1 + 0\n 40810: a0 = 0x1\n 40813: a2 = 0x24\n 40816: ra = 0x5e\n 40819: ecalli 11 // 'seal_return'\n 40821: fallthrough\n      : @1084 [@dyn 47] (gas: 16)\n 40822: sp = sp + 0xffffffffffffff80\n 40825: u64 [sp + 0x78] = ra\n 40828: u64 [sp + 0x70] = s0\n 40831: u64 [sp + 0x68] = s1\n 40834: t0 = u64 [a0 + 0x10]\n 40837: ra = u64 [a0 + 0x18]\n 40840: a2 = u64 [a0 + 0x8]\n 40843: a4 = u64 [a0]\n 40845: a0 = a2 | ra\n 40848: a3 = a4 | t0\n 40851: a3 = a3 | a0\n 40854: a3 = a3 >> 0x20\n 40857: a0 = a0 | t0\n 40860: a0 = a0 << 0x20\n 40863: a0 = a0 | a3\n 40866: jump @1105 if a0 != 0\n      : @1085 (gas: 2)\n 40870: i32 a0 = a4 >> 0x10\n 40873: jump @1105 if a0 != 0\n      : @1086 (gas: 3)\n 40877: a0 = a4 + 0x3f\n 40880: a5 = a0 & 0x1ffe0\n 40885: jump @1105 if a5 >u 65536\n      : @1087 (gas: 9)\n 40892: u64 [sp + 0x60] = a4\n 40895: u64 [sp + 0x38] = a2\n 40898: a0 = 0x2004c\n 40903: a3 = u64 [a1 + 0x18]\n 40906: s1 = u64 [a1 + 0x10]\n 40909: a2 = u64 [a1 + 0x8]\n 40912: a4 = i32 [0x2004c]\n 40917: a1 = u64 [a1]\n 40919: jump @1089 if a4 >=u a5\n      : @1088 (gas: 3)\n 40922: u32 [0x2004c] = a5\n 40927: a4 = a5\n 40929: fallthrough\n      : @1089 (gas: 8)\n 40930: a5 = a1 | s1\n 40933: s0 = a2 | a3\n 40936: a5 = a5 | s0\n 40939: a5 = a5 >> 0x20\n 40942: s0 = s0 | s1\n 40945: s0 = s0 << 0x20\n 40948: a5 = a5 | s0\n 40951: jump @1105 if a5 != 0\n      : @1090 (gas: 7)\n 40955: u64 [sp + 0x28] = ra\n 40958: u64 [sp + 0x8] = a2\n 40961: u64 [sp + 0x30] = t0\n 40964: u64 [sp + 0x10] = s1\n 40967: u64 [sp + 0x18] = a3\n 40970: i32 a5 = a1 >> 0x10\n 40973: jump @1105 if a5 != 0\n      : @1091 (gas: 3)\n 40977: a5 = a1 + 0x3f\n 40980: t2 = a5 & 0x1ffe0\n 40985: jump @1105 if t2 >u 65536\n      : @1092 (gas: 97)\n 40992: u64 [sp + 32] = 0x1ffe0\n 40998: u64 [sp + 0x50] = a1\n 41001: u64 [sp + 0x48] = a0\n 41004: a0 = 0x20060\n 41009: s0 = i32 [sp + 0x60]\n 41012: u64 [sp + 0x58] = a0\n 41015: s0 = s0 + a0\n 41018: a5 = u8 [s0 + 0x19]\n 41021: a0 = u8 [s0 + 0x18]\n 41024: a3 = u8 [s0 + 0x1a]\n 41027: a2 = u8 [s0 + 0x1b]\n 41030: a5 = a5 << 0x8\n 41033: a0 = a0 | a5\n 41036: a3 = a3 << 0x10\n 41039: a2 = a2 << 0x18\n 41042: a2 = a2 | a3\n 41045: a0 = a0 | a2\n 41048: a2 = u8 [s0 + 0x1d]\n 41051: a3 = u8 [s0 + 0x1c]\n 41054: a5 = u8 [s0 + 0x1e]\n 41057: s1 = u8 [s0 + 0x1f]\n 41060: a2 = a2 << 0x8\n 41063: a2 = a2 | a3\n 41066: a5 = a5 << 0x10\n 41069: s1 = s1 << 0x18\n 41072: a5 = a5 | s1\n 41075: a2 = a2 | a5\n 41078: a2 = a2 << 0x20\n 41081: t0 = a2 | a0\n 41084: a0 = u8 [s0 + 0x11]\n 41087: a2 = u8 [s0 + 0x10]\n 41090: a3 = u8 [s0 + 0x12]\n 41093: a5 = u8 [s0 + 0x13]\n 41096: a0 = a0 << 0x8\n 41099: a0 = a0 | a2\n 41102: a3 = a3 << 0x10\n 41105: a5 = a5 << 0x18\n 41108: a3 = a3 | a5\n 41111: a0 = a0 | a3\n 41114: a2 = u8 [s0 + 0x15]\n 41117: a3 = u8 [s0 + 0x14]\n 41120: a5 = u8 [s0 + 0x16]\n 41123: s1 = u8 [s0 + 0x17]\n 41126: a2 = a2 << 0x8\n 41129: a2 = a2 | a3\n 41132: a5 = a5 << 0x10\n 41135: s1 = s1 << 0x18\n 41138: a5 = a5 | s1\n 41141: a2 = a2 | a5\n 41144: a2 = a2 << 0x20\n 41147: ra = a2 | a0\n 41150: a0 = u8 [s0 + 0x9]\n 41153: a2 = u8 [s0 + 0x8]\n 41156: a3 = u8 [s0 + 0xa]\n 41159: a5 = u8 [s0 + 0xb]\n 41162: a0 = a0 << 0x8\n 41165: a0 = a0 | a2\n 41168: a3 = a3 << 0x10\n 41171: a5 = a5 << 0x18\n 41174: a3 = a3 | a5\n 41177: a0 = a0 | a3\n 41180: a2 = u8 [s0 + 0xd]\n 41183: a3 = u8 [s0 + 0xc]\n 41186: a5 = u8 [s0 + 0xe]\n 41189: s1 = u8 [s0 + 0xf]\n 41192: a2 = a2 << 0x8\n 41195: a2 = a2 | a3\n 41198: a5 = a5 << 0x10\n 41201: s1 = s1 << 0x18\n 41204: a5 = a5 | s1\n 41207: a2 = a2 | a5\n 41210: a2 = a2 << 0x20\n 41213: t1 = a2 | a0\n 41216: a0 = u8 [s0 + 0x1]\n 41219: a2 = u8 [s0]\n 41221: a3 = u8 [s0 + 0x2]\n 41224: a5 = u8 [s0 + 0x3]\n 41227: a0 = a0 << 0x8\n 41230: a0 = a0 | a2\n 41233: a3 = a3 << 0x10\n 41236: a5 = a5 << 0x18\n 41239: a3 = a3 | a5\n 41242: a0 = a0 | a3\n 41245: a2 = u8 [s0 + 0x5]\n 41248: a3 = u8 [s0 + 0x4]\n 41251: a5 = u8 [s0 + 0x6]\n 41254: s0 = u8 [s0 + 0x7]\n 41257: a2 = a2 << 0x8\n 41260: a2 = a2 | a3\n 41263: a5 = a5 << 0x10\n 41266: s0 = s0 << 0x18\n 41269: a5 = a5 | s0\n 41272: a2 = a2 | a5\n 41275: a2 = a2 << 0x20\n 41278: a5 = a2 | a0\n 41281: u64 [sp + 0x40] = a4\n 41284: jump @1094 if a4 >=u t2\n      : @1093 (gas: 4)\n 41287: a0 = u64 [sp + 0x48]\n 41290: u32 [a0] = t2\n 41292: u64 [sp + 0x40] = t2\n 41295: fallthrough\n      : @1094 (gas: 78)\n 41296: t2 = u64 [sp + 0x50]\n 41299: i32 s0 = t2 + 0\n 41301: a0 = u64 [sp + 0x58]\n 41304: s0 = s0 + a0\n 41307: u8 [s0 + 0x10] = ra\n 41310: a0 = t1 >> 0x38\n 41313: u8 [s0 + 0xf] = a0\n 41316: a0 = t1 >> 0x30\n 41319: u8 [s0 + 0xe] = a0\n 41322: a0 = t1 >> 0x28\n 41325: u8 [s0 + 0xd] = a0\n 41328: a0 = t1 >> 0x20\n 41331: u8 [s0 + 0xc] = a0\n 41334: a0 = t1 >> 0x18\n 41337: u8 [s0 + 0xb] = a0\n 41340: a0 = t1 >> 0x10\n 41343: u8 [s0 + 0xa] = a0\n 41346: a0 = t1 >> 0x8\n 41349: u8 [s0 + 0x9] = a0\n 41352: u8 [s0 + 0x8] = t1\n 41355: a0 = a5 >> 0x38\n 41358: u8 [s0 + 0x7] = a0\n 41361: a0 = a5 >> 0x30\n 41364: u8 [s0 + 0x6] = a0\n 41367: a0 = a5 >> 0x28\n 41370: u8 [s0 + 0x5] = a0\n 41373: a0 = a5 >> 0x20\n 41376: u8 [s0 + 0x4] = a0\n 41379: a0 = a5 >> 0x18\n 41382: u8 [s0 + 0x3] = a0\n 41385: a0 = a5 >> 0x10\n 41388: u8 [s0 + 0x2] = a0\n 41391: a0 = a5 >> 0x8\n 41394: u8 [s0 + 0x1] = a0\n 41397: u8 [s0] = a5\n 41399: u8 [s0 + 0x18] = t0\n 41402: a0 = ra >> 0x38\n 41405: u8 [s0 + 0x17] = a0\n 41408: a0 = ra >> 0x30\n 41411: u8 [s0 + 0x16] = a0\n 41414: a0 = ra >> 0x28\n 41417: u8 [s0 + 0x15] = a0\n 41420: a0 = ra >> 0x20\n 41423: u8 [s0 + 0x14] = a0\n 41426: a0 = ra >> 0x18\n 41429: u8 [s0 + 0x13] = a0\n 41432: a0 = ra >> 0x10\n 41435: u8 [s0 + 0x12] = a0\n 41438: a0 = ra >> 0x8\n 41441: u8 [s0 + 0x11] = a0\n 41444: a0 = t0 >> 0x38\n 41447: u8 [s0 + 0x1f] = a0\n 41450: a0 = t0 >> 0x30\n 41453: u8 [s0 + 0x1e] = a0\n 41456: a0 = t0 >> 0x28\n 41459: u8 [s0 + 0x1d] = a0\n 41462: a0 = t0 >> 0x20\n 41465: u8 [s0 + 0x1c] = a0\n 41468: a0 = t0 >> 0x18\n 41471: u8 [s0 + 0x1b] = a0\n 41474: a0 = t0 >> 0x10\n 41477: u8 [s0 + 0x1a] = a0\n 41480: t0 = t0 >> 0x8\n 41483: a0 = u64 [sp + 0x30]\n 41486: a2 = a0 >u 0\n 41488: a1 = u64 [sp + 0x28]\n 41491: a3 = a1 >u 0\n 41493: a3 = a2 if a1 == 0\n 41496: a2 = 0xffffffdf\n 41506: a4 = u64 [sp + 0x60]\n 41509: a2 = a2 <u a4\n 41512: s1 = u64 [sp + 0x38]\n 41515: a5 = s1 >u 0\n 41517: a5 = a2 if s1 == 0\n 41520: a2 = a0 | a1\n 41523: a5 = a3 if a2 != 0\n 41526: u8 [s0 + 0x19] = t0\n 41529: jump @1105 if a5 != 0\n      : @1095 (gas: 5)\n 41533: i32 a0 = a4 >> 0x5\n 41536: t1 = u64 [sp + 0x48]\n 41539: ra = u64 [sp + 0x40]\n 41542: a1 = u64 [sp + 0x20]\n 41545: jump @1105 if a0 >u 2046\n      : @1096 (gas: 3)\n 41551: a0 = a4 + 0x5f\n 41554: a2 = a0 & a1\n 41557: jump @1105 if a2 >u 65536\n      : @1097 (gas: 1)\n 41564: jump @1099 if ra >=u a2\n      : @1098 (gas: 3)\n 41567: u32 [t1] = a2\n 41569: ra = a2\n 41571: fallthrough\n      : @1099 (gas: 13)\n 41572: a5 = u64 [sp + 0x10]\n 41575: a0 = a5 >u 0\n 41577: a4 = u64 [sp + 0x18]\n 41580: a2 = a4 >u 0\n 41582: a2 = a0 if a4 == 0\n 41585: a0 = 0xffffffdf\n 41595: a0 = a0 <u t2\n 41598: s0 = u64 [sp + 0x8]\n 41601: a3 = s0 >u 0\n 41603: a3 = a0 if s0 == 0\n 41606: a0 = a5 | a4\n 41609: a3 = a2 if a0 != 0\n 41612: jump @1105 if a3 != 0\n      : @1100 (gas: 2)\n 41616: i32 a0 = t2 >> 0x5\n 41619: jump @1105 if a0 >u 2046\n      : @1101 (gas: 3)\n 41625: a0 = t2 + 0x5f\n 41628: t0 = a0 & a1\n 41631: jump @1105 if t0 >u 65536\n      : @1102 (gas: 93)\n 41638: a0 = u64 [sp + 0x60]\n 41641: i32 a4 = a0 + 0x20\n 41644: a0 = u64 [sp + 0x58]\n 41647: a4 = a4 + a0\n 41650: a0 = u8 [a4 + 0x19]\n 41653: a3 = u8 [a4 + 0x18]\n 41656: a5 = u8 [a4 + 0x1a]\n 41659: s1 = u8 [a4 + 0x1b]\n 41662: a0 = a0 << 0x8\n 41665: a0 = a0 | a3\n 41668: a5 = a5 << 0x10\n 41671: s1 = s1 << 0x18\n 41674: a5 = a5 | s1\n 41677: a0 = a0 | a5\n 41680: a3 = u8 [a4 + 0x1d]\n 41683: a5 = u8 [a4 + 0x1c]\n 41686: s1 = u8 [a4 + 0x1e]\n 41689: s0 = u8 [a4 + 0x1f]\n 41692: a3 = a3 << 0x8\n 41695: a3 = a3 | a5\n 41698: s1 = s1 << 0x10\n 41701: s0 = s0 << 0x18\n 41704: s0 = s0 | s1\n 41707: a3 = a3 | s0\n 41710: a3 = a3 << 0x20\n 41713: a0 = a0 | a3\n 41716: a3 = u8 [a4 + 0x11]\n 41719: a5 = u8 [a4 + 0x10]\n 41722: s1 = u8 [a4 + 0x12]\n 41725: s0 = u8 [a4 + 0x13]\n 41728: a3 = a3 << 0x8\n 41731: a3 = a3 | a5\n 41734: s1 = s1 << 0x10\n 41737: s0 = s0 << 0x18\n 41740: s0 = s0 | s1\n 41743: a3 = a3 | s0\n 41746: a5 = u8 [a4 + 0x15]\n 41749: s1 = u8 [a4 + 0x14]\n 41752: s0 = u8 [a4 + 0x16]\n 41755: a1 = u8 [a4 + 0x17]\n 41758: a5 = a5 << 0x8\n 41761: a5 = a5 | s1\n 41764: s0 = s0 << 0x10\n 41767: a1 = a1 << 0x18\n 41770: a1 = a1 | s0\n 41773: a1 = a1 | a5\n 41776: a1 = a1 << 0x20\n 41779: a3 = a3 | a1\n 41782: a1 = u8 [a4 + 0x9]\n 41785: a5 = u8 [a4 + 0x8]\n 41788: s1 = u8 [a4 + 0xa]\n 41791: s0 = u8 [a4 + 0xb]\n 41794: a1 = a1 << 0x8\n 41797: a1 = a1 | a5\n 41800: s1 = s1 << 0x10\n 41803: s0 = s0 << 0x18\n 41806: s0 = s0 | s1\n 41809: a1 = a1 | s0\n 41812: a5 = u8 [a4 + 0xd]\n 41815: s1 = u8 [a4 + 0xc]\n 41818: s0 = u8 [a4 + 0xe]\n 41821: a2 = u8 [a4 + 0xf]\n 41824: a5 = a5 << 0x8\n 41827: a5 = a5 | s1\n 41830: s0 = s0 << 0x10\n 41833: a2 = a2 << 0x18\n 41836: a2 = a2 | s0\n 41839: a2 = a2 | a5\n 41842: a2 = a2 << 0x20\n 41845: a5 = a2 | a1\n 41848: a1 = u8 [a4 + 0x1]\n 41851: a2 = u8 [a4]\n 41853: s1 = u8 [a4 + 0x2]\n 41856: s0 = u8 [a4 + 0x3]\n 41859: a1 = a1 << 0x8\n 41862: a1 = a1 | a2\n 41865: s1 = s1 << 0x10\n 41868: s0 = s0 << 0x18\n 41871: s0 = s0 | s1\n 41874: a1 = a1 | s0\n 41877: a2 = u8 [a4 + 0x5]\n 41880: s1 = u8 [a4 + 0x4]\n 41883: s0 = u8 [a4 + 0x6]\n 41886: a4 = u8 [a4 + 0x7]\n 41889: a2 = a2 << 0x8\n 41892: a2 = a2 | s1\n 41895: s0 = s0 << 0x10\n 41898: a4 = a4 << 0x18\n 41901: a4 = a4 | s0\n 41904: a2 = a2 | a4\n 41907: a2 = a2 << 0x20\n 41910: a4 = a2 | a1\n 41913: jump @1104 if ra >=u t0\n      : @1103 (gas: 2)\n 41916: u32 [t1] = t0\n 41918: fallthrough\n      : @1104 (gas: 69)\n 41919: a1 = u64 [sp + 0x50]\n 41922: i32 a1 = a1 + 0x20\n 41925: a2 = u64 [sp + 0x58]\n 41928: a1 = a1 + a2\n 41931: u8 [a1 + 0x10] = a3\n 41934: a2 = a5 >> 0x38\n 41937: u8 [a1 + 0xf] = a2\n 41940: a2 = a5 >> 0x30\n 41943: u8 [a1 + 0xe] = a2\n 41946: a2 = a5 >> 0x28\n 41949: u8 [a1 + 0xd] = a2\n 41952: a2 = a5 >> 0x20\n 41955: u8 [a1 + 0xc] = a2\n 41958: a2 = a5 >> 0x18\n 41961: u8 [a1 + 0xb] = a2\n 41964: a2 = a5 >> 0x10\n 41967: u8 [a1 + 0xa] = a2\n 41970: a2 = a5 >> 0x8\n 41973: u8 [a1 + 0x9] = a2\n 41976: u8 [a1 + 0x8] = a5\n 41979: a2 = a4 >> 0x38\n 41982: u8 [a1 + 0x7] = a2\n 41985: a2 = a4 >> 0x30\n 41988: u8 [a1 + 0x6] = a2\n 41991: a2 = a4 >> 0x28\n 41994: u8 [a1 + 0x5] = a2\n 41997: a2 = a4 >> 0x20\n 42000: u8 [a1 + 0x4] = a2\n 42003: a2 = a4 >> 0x18\n 42006: u8 [a1 + 0x3] = a2\n 42009: a2 = a4 >> 0x10\n 42012: u8 [a1 + 0x2] = a2\n 42015: a2 = a4 >> 0x8\n 42018: u8 [a1 + 0x1] = a2\n 42021: u8 [a1] = a4\n 42023: u8 [a1 + 0x18] = a0\n 42026: a2 = a3 >> 0x38\n 42029: u8 [a1 + 0x17] = a2\n 42032: a2 = a3 >> 0x30\n 42035: u8 [a1 + 0x16] = a2\n 42038: a2 = a3 >> 0x28\n 42041: u8 [a1 + 0x15] = a2\n 42044: a2 = a3 >> 0x20\n 42047: u8 [a1 + 0x14] = a2\n 42050: a2 = a3 >> 0x18\n 42053: u8 [a1 + 0x13] = a2\n 42056: a2 = a3 >> 0x10\n 42059: u8 [a1 + 0x12] = a2\n 42062: a3 = a3 >> 0x8\n 42065: u8 [a1 + 0x11] = a3\n 42068: a2 = a0 >> 0x38\n 42071: u8 [a1 + 0x1f] = a2\n 42074: a2 = a0 >> 0x30\n 42077: u8 [a1 + 0x1e] = a2\n 42080: a2 = a0 >> 0x28\n 42083: u8 [a1 + 0x1d] = a2\n 42086: a2 = a0 >> 0x20\n 42089: u8 [a1 + 0x1c] = a2\n 42092: a2 = a0 >> 0x18\n 42095: u8 [a1 + 0x1b] = a2\n 42098: a2 = a0 >> 0x10\n 42101: u8 [a1 + 0x1a] = a2\n 42104: a0 = a0 >> 0x8\n 42107: u8 [a1 + 0x19] = a0\n 42110: ra = u64 [sp + 0x78]\n 42113: s0 = u64 [sp + 0x70]\n 42116: s1 = u64 [sp + 0x68]\n 42119: sp = sp + 0x80\n 42123: ret\n      : @1105 (gas: 1)\n 42125: trap\n      : @1106 (gas: 9)\n 42126: sp = sp + 0xffffffffffffff80\n 42129: u64 [sp + 0x78] = ra\n 42132: u64 [sp + 0x70] = s0\n 42135: u64 [sp + 0x68] = s1\n 42138: s0 = sp + 0x80\n 42142: sp = sp & 0xffffffffffffffe0\n 42145: u64 [sp + 0x50] = a0\n 42148: ecalli 10 // 'return_data_size'\n 42150: fallthrough\n      : @1107 (gas: 1)\n 42151: jump @1128 if a0 == 0\n      : @1108 (gas: 2)\n 42155: ecalli 10 // 'return_data_size'\n 42157: fallthrough\n      : @1109 (gas: 3)\n 42158: a2 = 0x2004c\n 42163: a3 = i32 [0x2004c]\n 42168: jump @1111 if a3 >u 95\n      : @1110 (gas: 3)\n 42172: a3 = 0x60\n 42175: u32 [0x2004c] = a3\n 42180: fallthrough\n      : @1111 (gas: 39)\n 42181: u64 [sp + 0x18] = a3\n 42184: u64 [sp + 0x28] = a2\n 42187: a4 = 0x20060\n 42192: a1 = u64 [0x200a0]\n 42197: a2 = u64 [0x200a8]\n 42202: a3 = u64 [0x200b8]\n 42207: u64 [sp + 0x48] = a4\n 42210: a4 = u64 [0x200b0]\n 42215: t1 = reverse a1\n 42217: t0 = reverse a2\n 42219: a5 = reverse a3\n 42221: a4 = reverse a4\n 42223: a1 = a0 + 0x1f\n 42226: u64 [sp + 0x20] = a0\n 42229: a2 = a1 <u a0\n 42232: a1 = a1 & 0xffffffffffffffe0\n 42235: a3 = a1 + 0x3f\n 42238: a1 = a3 <u a1\n 42241: a1 = a1 + a2\n 42244: a3 = a3 & 0xffffffffffffffe0\n 42247: a1 = a1 + a4\n 42250: a0 = a5 + a3\n 42253: u64 [sp + 0x58] = a5\n 42256: a2 = a0 <u a5\n 42259: ra = a1 + a2\n 42262: a1 = ra ^ a4\n 42265: u64 [sp + 0x40] = a4\n 42268: a5 = ra <u a4\n 42271: a5 = a2 if a1 == 0\n 42274: a4 = t0 + a5\n 42277: a2 = a4 <u t0\n 42280: a1 = t1 + a2\n 42283: t2 = a4 >u 0\n 42285: s1 = a1 >u 0\n 42287: s1 = t2 if a1 == 0\n 42290: t2 = a4 | a1\n 42293: a3 = ra >u 0\n 42295: a3 = s1 if t2 != 0\n 42298: jump @1130 if a3 != 0\n      : @1112 (gas: 7)\n 42302: a3 = a1 ^ t1\n 42305: s1 = a1 <u t1\n 42308: a2 = s1 if a3 != 0\n 42311: s1 = a4 ^ t0\n 42314: a3 = a3 | s1\n 42317: a5 = a2 if a3 != 0\n 42320: jump @1130 if a5 != 0\n      : @1113 (gas: 19)\n 42324: a1 = reverse a1\n 42326: a2 = reverse a4\n 42328: a3 = reverse ra\n 42330: a4 = reverse a0\n 42332: a0 = u64 [sp + 0x48]\n 42335: u64 [a0 + 0x58] = a4\n 42338: u64 [a0 + 0x50] = a3\n 42341: u64 [a0 + 0x48] = a2\n 42344: a4 = u64 [sp + 0x58]\n 42347: a2 = a4 | t0\n 42350: s1 = u64 [sp + 0x40]\n 42353: a3 = s1 | t1\n 42356: a2 = a2 | a3\n 42359: a2 = a2 >> 0x20\n 42362: a3 = a3 | t0\n 42365: a3 = a3 << 0x20\n 42368: a2 = a2 | a3\n 42371: u64 [a0 + 0x40] = a1\n 42374: jump @1127 if a2 != 0\n      : @1114 (gas: 2)\n 42378: i32 a1 = a4 >> 0x10\n 42381: jump @1127 if a1 != 0\n      : @1115 (gas: 3)\n 42385: i32 a3 = a4 + 0x3f\n 42388: a1 = a3 & 0x1ffe0\n 42393: jump @1127 if a1 >u 65536\n      : @1116 (gas: 5)\n 42400: u64 [sp + 0x10] = a3\n 42403: u64 [sp + 0x30] = t0\n 42406: u64 [sp + 0x38] = t1\n 42409: a2 = u64 [sp + 0x18]\n 42412: jump @1118 if a2 >=u a1\n      : @1117 (gas: 3)\n 42415: a2 = u64 [sp + 0x28]\n 42418: u32 [a2] = a1\n 42420: fallthrough\n      : @1118 (gas: 45)\n 42421: i32 a1 = a4 + 0\n 42423: a1 = a1 + a0\n 42426: a0 = u64 [sp + 0x20]\n 42429: a0 = reverse a0\n 42431: a2 = a0 >> 0x38\n 42434: u8 [a1 + 0x1f] = a2\n 42437: a2 = a0 >> 0x30\n 42440: u8 [a1 + 0x1e] = a2\n 42443: a2 = a0 >> 0x28\n 42446: u8 [a1 + 0x1d] = a2\n 42449: a2 = a0 >> 0x20\n 42452: u8 [a1 + 0x1c] = a2\n 42455: a2 = a0 >> 0x18\n 42458: u8 [a1 + 0x1b] = a2\n 42461: a2 = a0 >> 0x10\n 42464: u8 [a1 + 0x1a] = a2\n 42467: a2 = a0 >> 0x8\n 42470: u8 [a1 + 0x19] = a2\n 42473: u8 [a1 + 0x18] = a0\n 42476: u8 [a1 + 23] = 0\n 42479: u8 [a1 + 22] = 0\n 42482: u8 [a1 + 21] = 0\n 42485: u8 [a1 + 20] = 0\n 42488: u8 [a1 + 19] = 0\n 42491: u8 [a1 + 18] = 0\n 42494: u8 [a1 + 17] = 0\n 42497: u8 [a1 + 16] = 0\n 42500: u8 [a1 + 15] = 0\n 42503: u8 [a1 + 14] = 0\n 42506: u8 [a1 + 13] = 0\n 42509: u8 [a1 + 12] = 0\n 42512: u8 [a1 + 11] = 0\n 42515: u8 [a1 + 10] = 0\n 42518: u8 [a1 + 9] = 0\n 42521: u8 [a1 + 8] = 0\n 42524: u8 [a1 + 7] = 0\n 42527: u8 [a1 + 6] = 0\n 42530: u8 [a1 + 5] = 0\n 42533: u8 [a1 + 4] = 0\n 42536: u8 [a1 + 3] = 0\n 42539: u8 [a1 + 2] = 0\n 42542: u8 [a1 + 1] = 0\n 42545: u8 [a1 + 0] = 0\n 42547: ecalli 10 // 'return_data_size'\n 42549: fallthrough\n      : @1119 (gas: 9)\n 42550: a4 = u64 [sp + 0x58]\n 42553: a1 = u64 [sp + 0x38]\n 42556: a2 = u64 [sp + 0x30]\n 42559: a1 = a1 | a2\n 42562: a2 = 0xffffffe0\n 42572: a2 = a4 <u a2\n 42575: a2 = 0 if s1 != 0\n 42577: a2 = 0 if a1 != 0\n 42579: jump @1127 if a2 == 0\n      : @1120 (gas: 2)\n 42582: a1 = a0 >> 0x20\n 42585: jump @1127 if a1 != 0\n      : @1121 (gas: 3)\n 42588: i32 a1 = a4 >> 0x5\n 42591: a5 = u64 [sp + 0x28]\n 42594: jump @1127 if a1 >=u 2047\n      : @1122 (gas: 4)\n 42599: a1 = u64 [sp + 0x10]\n 42602: i32 a1 = a1 + a0\n 42605: a1 = a1 & 0xffffffffffffffe0\n 42608: jump @1127 if a1 >u 65536\n      : @1123 (gas: 3)\n 42614: a3 = i32 [a5]\n 42616: a2 = a4 + 0x20\n 42619: jump @1125 if a3 >=u a1\n      : @1124 (gas: 2)\n 42622: u32 [a5] = a1\n 42624: fallthrough\n      : @1125 (gas: 9)\n 42625: i32 s1 = a0 + 0\n 42627: a1 = u64 [sp + 0x48]\n 42630: i32 a2 = a2 + a1\n 42633: u32 [sp + 0x60] = a0\n 42636: i32 a1 = sp + 0x60\n 42639: a0 = a2\n 42641: a2 = 0\n 42643: ecalli 9 // 'return_data_copy'\n 42645: fallthrough\n      : @1126 (gas: 6)\n 42646: a0 = i32 [sp + 0x60]\n 42649: a1 = u64 [sp + 0x38]\n 42652: a2 = u64 [sp + 0x30]\n 42655: a3 = u64 [sp + 0x40]\n 42658: a4 = u64 [sp + 0x58]\n 42661: jump @1129 if a0 >=u s1\n      : @1127 (gas: 1)\n 42664: trap\n      : @1128 (gas: 5)\n 42665: a3 = 0\n 42667: a2 = 0\n 42669: a1 = 0\n 42671: a4 = 0x60\n 42674: fallthrough\n      : @1129 (gas: 11)\n 42675: a0 = u64 [sp + 0x50]\n 42678: u64 [a0] = a4\n 42680: u64 [a0 + 0x8] = a3\n 42683: u64 [a0 + 0x10] = a2\n 42686: u64 [a0 + 0x18] = a1\n 42689: sp = s0 + 0xffffffffffffff80\n 42692: ra = u64 [sp + 0x78]\n 42695: s0 = u64 [sp + 0x70]\n 42698: s1 = u64 [sp + 0x68]\n 42701: sp = sp + 0x80\n 42705: ret\n      : @1130 (gas: 19)\n 42707: a1 = u64 [sp + 0x48]\n 42710: u64 [a1 + 16] = 0\n 42713: u64 [a1 + 24] = 0\n 42716: u64 [a1 + 8] = 0\n 42719: u64 [a1 + 0] = 0x717b484e\n 42725: u32 [a1 + 32] = 0x41000000\n 42732: u32 [a1 + 20] = 0\n 42735: u32 [a1 + 24] = 0\n 42738: u32 [a1 + 28] = 0\n 42741: u32 [a1 + 8] = 0\n 42744: u32 [a1 + 12] = 0\n 42747: u32 [a1 + 16] = 0\n 42750: u32 [a1 + 4] = 0\n 42753: i32 a1 = a1 + 0\n 42755: a0 = 0x1\n 42758: a2 = 0x24\n 42761: ra = 0x60\n 42764: ecalli 11 // 'seal_return'\n 42766: fallthrough\n      : @1131 [@dyn 48] (gas: 22)\n 42767: sp = sp + 0xffffffffffffff60\n 42771: u64 [sp + 0x98] = ra\n 42775: u64 [sp + 0x90] = s0\n 42779: u64 [sp + 0x88] = s1\n 42783: s0 = sp + 0xa0\n 42787: sp = sp & 0xffffffffffffffe0\n 42790: u64 [sp + 88] = 0\n 42793: u64 [sp + 80] = 0\n 42796: u64 [sp + 72] = 0\n 42799: u64 [sp + 64] = 0\n 42802: u64 [sp + 120] = 0\n 42805: u64 [sp + 112] = 0\n 42808: u64 [sp + 104] = 0\n 42811: u64 [sp + 96] = 0\n 42814: u32 [sp + 32] = 0x20\n 42818: i32 a1 = sp + 0x40\n 42821: i32 a3 = sp + 0x60\n 42824: i32 a4 = sp + 0x20\n 42827: a2 = 0xffffffffffffffff\n 42830: a0 = 0\n 42832: ecalli 6 // 'get_storage'\n 42834: fallthrough\n      : @1132 (gas: 10)\n 42835: a0 = u64 [sp + 0x70]\n 42838: a1 = u64 [sp + 0x60]\n 42841: a2 = u64 [sp + 0x68]\n 42844: a3 = u64 [sp + 0x78]\n 42847: a1 = a1 | a0\n 42850: a0 = 0x200000000000000\n 42860: a3 = a3 ^ a0\n 42863: a2 = a2 | a3\n 42866: a1 = a1 | a2\n 42869: jump @1134 if a1 == 0\n      : @1133 (gas: 20)\n 42872: u64 [sp + 88] = 0\n 42875: u64 [sp + 80] = 0\n 42878: u64 [sp + 72] = 0\n 42881: u64 [sp + 64] = 0\n 42884: u64 [sp + 112] = 0\n 42887: u64 [sp + 104] = 0\n 42890: u64 [sp + 96] = 0\n 42893: u64 [sp + 0x78] = a0\n 42896: i32 a1 = sp + 0x40\n 42899: i32 a3 = sp + 0x60\n 42902: a2 = 0xffffffffffffffff\n 42905: a4 = 0x20\n 42908: a0 = 0\n 42910: ecalli 13 // 'set_storage'\n 42912: sp = s0 + 0xffffffffffffff60\n 42916: ra = u64 [sp + 0x98]\n 42920: s0 = u64 [sp + 0x90]\n 42924: s1 = u64 [sp + 0x88]\n 42928: sp = sp + 0xa0\n 42932: ret\n      : @1134 (gas: 3)\n 42934: t0 = 0x2004c\n 42939: a3 = i32 [0x2004c]\n 42944: jump @1136 if a3 >u 95\n      : @1135 (gas: 3)\n 42948: a3 = 0x60\n 42951: u32 [0x2004c] = a3\n 42956: fallthrough\n      : @1136 (gas: 17)\n 42957: s1 = 0x20060\n 42962: a0 = u64 [0x200a8]\n 42967: a2 = u64 [0x200b8]\n 42972: a4 = u64 [0x200a0]\n 42977: a1 = u64 [0x200b0]\n 42982: a5 = reverse a0\n 42984: a0 = reverse a2\n 42986: a4 = reverse a4\n 42988: ra = reverse a1\n 42990: a1 = ra | a4\n 42993: a2 = a0 | a5\n 42996: a2 = a2 | a1\n 42999: a2 = a2 >> 0x20\n 43002: a1 = a1 | a5\n 43005: a1 = a1 << 0x20\n 43008: a1 = a1 | a2\n 43011: jump @1154 if a1 != 0\n      : @1137 (gas: 2)\n 43015: i32 a1 = a0 >> 0x10\n 43018: jump @1154 if a1 != 0\n      : @1138 (gas: 4)\n 43022: t2 = 0x1ffe0\n 43027: a1 = a0 + 0x3f\n 43030: a2 = a1 & t2\n 43033: jump @1154 if a2 >u 65536\n      : @1139 (gas: 1)\n 43040: jump @1141 if a3 >=u a2\n      : @1140 (gas: 3)\n 43043: u32 [0x2004c] = a2\n 43048: a3 = a2\n 43050: fallthrough\n      : @1141 (gas: 41)\n 43051: i32 a2 = a0 + 0\n 43053: u64 [sp + 0x18] = a2\n 43056: a2 = a2 + s1\n 43059: u8 [a2 + 31] = 0\n 43062: u8 [a2 + 30] = 0\n 43065: u8 [a2 + 29] = 0\n 43068: u8 [a2 + 28] = 0\n 43071: u8 [a2 + 27] = 0\n 43074: u8 [a2 + 26] = 0\n 43077: u8 [a2 + 25] = 0\n 43080: u8 [a2 + 24] = 0\n 43083: u8 [a2 + 23] = 0\n 43086: u8 [a2 + 22] = 0\n 43089: u8 [a2 + 21] = 0\n 43092: u8 [a2 + 20] = 0\n 43095: u8 [a2 + 19] = 0\n 43098: u8 [a2 + 18] = 0\n 43101: u8 [a2 + 17] = 0\n 43104: u8 [a2 + 16] = 0\n 43107: u8 [a2 + 15] = 0\n 43110: u8 [a2 + 14] = 0\n 43113: u8 [a2 + 13] = 0\n 43116: u8 [a2 + 12] = 0\n 43119: u8 [a2 + 11] = 0\n 43122: u8 [a2 + 10] = 0\n 43125: u8 [a2 + 9] = 0\n 43128: u8 [a2 + 8] = 0\n 43131: u8 [a2 + 7] = 0\n 43134: u8 [a2 + 6] = 0\n 43137: u8 [a2 + 5] = 0\n 43140: u8 [a2 + 4] = 0\n 43143: u8 [a2 + 3] = 0xa0\n 43148: u8 [a2 + 2] = 0x79\n 43152: u8 [a2 + 1] = 0xc3\n 43157: t1 = a5 | a4\n 43160: a4 = 0xfffffffc\n 43170: a4 = a0 <u a4\n 43173: a4 = 0 if ra != 0\n 43175: a4 = 0 if t1 != 0\n 43177: u8 [a2 + 0] = 0x8\n 43180: jump @1154 if a4 == 0\n      : @1142 (gas: 2)\n 43184: a2 = u64 [sp + 0x18]\n 43187: jump @1154 if a2 >=u 65532\n      : @1143 (gas: 3)\n 43194: a1 = a0 + 0x43\n 43197: a2 = a1 & 0x1ffe0\n 43202: jump @1154 if a2 >u 65536\n      : @1144 (gas: 2)\n 43209: i32 a4 = a0 + 0x4\n 43212: jump @1146 if a3 >=u a2\n      : @1145 (gas: 3)\n 43215: u32 [0x2004c] = a2\n 43220: a3 = a2\n 43222: fallthrough\n      : @1146 (gas: 38)\n 43223: a2 = s1 + a4\n 43226: u8 [a2 + 31] = 0x20\n 43230: u8 [a2 + 30] = 0\n 43233: u8 [a2 + 29] = 0\n 43236: u8 [a2 + 28] = 0\n 43239: u8 [a2 + 27] = 0\n 43242: u8 [a2 + 26] = 0\n 43245: u8 [a2 + 25] = 0\n 43248: u8 [a2 + 24] = 0\n 43251: u8 [a2 + 23] = 0\n 43254: u8 [a2 + 22] = 0\n 43257: u8 [a2 + 21] = 0\n 43260: u8 [a2 + 20] = 0\n 43263: u8 [a2 + 19] = 0\n 43266: u8 [a2 + 18] = 0\n 43269: u8 [a2 + 17] = 0\n 43272: u8 [a2 + 16] = 0\n 43275: u8 [a2 + 15] = 0\n 43278: u8 [a2 + 14] = 0\n 43281: u8 [a2 + 13] = 0\n 43284: u8 [a2 + 12] = 0\n 43287: u8 [a2 + 11] = 0\n 43290: u8 [a2 + 10] = 0\n 43293: u8 [a2 + 9] = 0\n 43296: u8 [a2 + 8] = 0\n 43299: u8 [a2 + 7] = 0\n 43302: u8 [a2 + 6] = 0\n 43305: u8 [a2 + 5] = 0\n 43308: u8 [a2 + 4] = 0\n 43311: u8 [a2 + 3] = 0\n 43314: u8 [a2 + 2] = 0\n 43317: u8 [a2 + 1] = 0\n 43320: a1 = 0xffffffdc\n 43330: a1 = a0 <u a1\n 43333: a1 = 0 if ra != 0\n 43335: a1 = 0 if t1 != 0\n 43337: u8 [a2 + 0] = 0\n 43339: jump @1154 if a1 == 0\n      : @1147 (gas: 2)\n 43343: a2 = u64 [sp + 0x18]\n 43346: jump @1154 if a2 >=u 65500\n      : @1148 (gas: 3)\n 43353: a1 = a0 + 0x63\n 43356: a2 = a1 & 0x1ffe0\n 43361: jump @1154 if a2 >u 65536\n      : @1149 (gas: 2)\n 43368: i32 a4 = a0 + 0x24\n 43371: jump @1151 if a3 >=u a2\n      : @1150 (gas: 3)\n 43374: u32 [0x2004c] = a2\n 43379: a3 = a2\n 43381: fallthrough\n      : @1151 (gas: 38)\n 43382: a2 = s1 + a4\n 43385: u8 [a2 + 31] = 0x1f\n 43389: u8 [a2 + 30] = 0\n 43392: u8 [a2 + 29] = 0\n 43395: u8 [a2 + 28] = 0\n 43398: u8 [a2 + 27] = 0\n 43401: u8 [a2 + 26] = 0\n 43404: u8 [a2 + 25] = 0\n 43407: u8 [a2 + 24] = 0\n 43410: u8 [a2 + 23] = 0\n 43413: u8 [a2 + 22] = 0\n 43416: u8 [a2 + 21] = 0\n 43419: u8 [a2 + 20] = 0\n 43422: u8 [a2 + 19] = 0\n 43425: u8 [a2 + 18] = 0\n 43428: u8 [a2 + 17] = 0\n 43431: u8 [a2 + 16] = 0\n 43434: u8 [a2 + 15] = 0\n 43437: u8 [a2 + 14] = 0\n 43440: u8 [a2 + 13] = 0\n 43443: u8 [a2 + 12] = 0\n 43446: u8 [a2 + 11] = 0\n 43449: u8 [a2 + 10] = 0\n 43452: u8 [a2 + 9] = 0\n 43455: u8 [a2 + 8] = 0\n 43458: u8 [a2 + 7] = 0\n 43461: u8 [a2 + 6] = 0\n 43464: u8 [a2 + 5] = 0\n 43467: u8 [a2 + 4] = 0\n 43470: u8 [a2 + 3] = 0\n 43473: u8 [a2 + 2] = 0\n 43476: u8 [a2 + 1] = 0\n 43479: a1 = 0xffffffbc\n 43489: a1 = a0 <u a1\n 43492: a1 = 0 if ra != 0\n 43494: a1 = 0 if t1 != 0\n 43496: u8 [a2 + 0] = 0\n 43498: jump @1154 if a1 == 0\n      : @1152 (gas: 2)\n 43501: a2 = u64 [sp + 0x18]\n 43504: jump @1154 if a2 >=u 65468\n      : @1153 (gas: 3)\n 43510: a1 = a0 + 0x83\n 43514: a2 = a1 & 0x1ffe0\n 43519: jump @1155 if a2 <=u 65536\n      : @1154 (gas: 1)\n 43525: trap\n      : @1155 (gas: 1)\n 43526: jump @1157 if a3 >=u a2\n      : @1156 (gas: 2)\n 43529: u32 [0x2004c] = a2\n 43534: fallthrough\n      : @1157 (gas: 40)\n 43535: i32 a1 = a0 + 0x44\n 43538: s1 = s1 + a1\n 43541: u8 [s1 + 31] = 0\n 43544: u8 [s1 + 30] = 0x6c\n 43548: u8 [s1 + 29] = 0x6c\n 43552: u8 [s1 + 28] = 0x61\n 43556: t0 = 0x63\n 43559: u8 [s1 + 0x1b] = t0\n 43562: u8 [s1 + 26] = 0x20\n 43566: t1 = 0x74\n 43569: u8 [s1 + 0x19] = t1\n 43572: a4 = 0x6e\n 43575: u8 [s1 + 0x18] = a4\n 43578: u8 [s1 + 23] = 0x61\n 43582: a5 = 0x72\n 43585: u8 [s1 + 0x16] = a5\n 43588: u8 [s1 + 0x15] = t1\n 43591: u8 [s1 + 0x14] = a4\n 43594: u8 [s1 + 19] = 0x65\n 43598: u8 [s1 + 18] = 0x65\n 43602: u8 [s1 + 0x11] = a5\n 43605: u8 [s1 + 16] = 0x20\n 43609: u8 [s1 + 15] = 0x3a\n 43613: u8 [s1 + 14] = 0x64\n 43617: u8 [s1 + 0xd] = a5\n 43620: u8 [s1 + 12] = 0x61\n 43624: u8 [s1 + 11] = 0x75\n 43628: u8 [s1 + 10] = 0x47\n 43632: u8 [s1 + 9] = 0x79\n 43636: u8 [s1 + 0x8] = t0\n 43639: u8 [s1 + 0x7] = a4\n 43642: u8 [s1 + 6] = 0x61\n 43646: u8 [s1 + 0x5] = a5\n 43649: u8 [s1 + 0x4] = t1\n 43652: u8 [s1 + 0x3] = a4\n 43655: u8 [s1 + 2] = 0x65\n 43659: u8 [s1 + 1] = 0x65\n 43663: u8 [s1 + 0] = 0x52\n 43666: a1 = 0x64\n 43669: ra = 98, jump @8\n      : @1158 [@dyn 49] (gas: 7)\n 43675: i32 a1 = a0 + 0\n 43677: a0 = 0x1\n 43680: a2 = 0x64\n 43683: ecalli 11 // 'seal_return'\n 43685: a0 = 0\n 43687: ra = 0x64\n 43690: jump @14\n      : @1159 [export #0: 'call'] (gas: 2)\n 43694: a0 = 0\n 43696: ra = 100, jump @14\n      : @1160 [@dyn 50] [export #1: 'deploy'] (gas: 2)\n 43702: a0 = 0x1\n 43705: ra = 102, jump @14\n      : @1161 [@dyn 51] (gas: 1)\n 43711: trap\n","bytecode":{"object":""},"deployedBytecode":{"object":""},"methodIdentifiers":{"commitments(uint256)":"49ce8997","denomination()":"8bca6d16","deposit(uint256)":"b6b55f25","nextLeafIdx()":"45e0523f","nullifierHashes(uint256)":"1f79a1e9","roots(uint256)":"c2b40ae4","treeLevel()":"b8e79564","withdraw(uint256[2],uint256[2][2],uint256[2],uint256[2])":"c78784d7"}},"irOptimized":"/// @use-src 1:\"contracts/ReentrancyGuard.sol\", 2:\"contracts/Tornado.sol\"\nobject \"Tornado_697\" {\n    code {\n        {\n            /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"Tornado_697\")\n            let argSize := sub(codesize(), programSize)\n            let memPtr := /** @src -1:-1:-1 */ 0\n            /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(memPtr, programSize, argSize)\n            if slt(sub(add(memPtr, argSize), memPtr), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n            let value0 := abi_decode_address_fromMemory(memPtr)\n            let value1 := abi_decode_address_fromMemory(add(memPtr, 32))\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 1:1716:1717  \"1\" */ 0x01)\n            /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n            sstore(/** @src 2:367:369  \"10\" */ 0x02, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ or(and(sload(/** @src 2:367:369  \"10\" */ 0x02), /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ not(shl(160, 255))), shl(161, 5)))\n            sstore(/** @src 2:405:414  \"0.1 ether\" */ 0x03, 0x016345785d8a0000)\n            /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n            sstore(/** @src 2:450:451  \"0\" */ 0x04, /** @src -1:-1:-1 */ 0)\n            /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n            let memPtr_1 := /** @src -1:-1:-1 */ 0\n            /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n            memPtr_1 := mload(64)\n            let newFreePtr_1 := add(memPtr_1, 320)\n            if or(gt(newFreePtr_1, sub(shl(64, 1), 1)), lt(newFreePtr_1, memPtr_1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 2:450:451  \"0\" */ 0x04, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr_1)\n            mstore(memPtr_1, /** @src 2:690:767  \"23183772226880328093887215408966704399401918833188238128725944610428185466379\" */ 0x33418cd1669b4e7f4bf473ec2db9a489b3d6f9f11b91d0b3b6004432ab53d60b)\n            /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n            mstore(/** @src 2:680:1557  \"[...\" */ add(memPtr_1, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 32), /** @src 2:777:854  \"24000819369602093814416139508614852491908395579435466932859056804037806454973\" */ 0x350ffb7c45ccf8940c163b192252495b614def57272b6f8d9a53a5b3e44ef8bd)\n            /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n            mstore(/** @src 2:680:1557  \"[...\" */ add(memPtr_1, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 64), /** @src 2:864:941  \"90767735163385213280029221395007952082767922246267858237072012090673396196740\" */ 0xc8acb7af851baf91a82b1ad46b01ac506ce80387170890dea377d21e85202584)\n            /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n            mstore(/** @src 2:680:1557  \"[...\" */ add(memPtr_1, 96), /** @src 2:951:1028  \"36838446922933702266161394000006956756061899673576454513992013853093276527813\" */ 0x5171d273154b2764aa5903210e16bd1899b18648d1358d41887a113227e9acc5)\n            /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n            mstore(/** @src 2:680:1557  \"[...\" */ add(memPtr_1, 128), /** @src 2:1038:1115  \"68942419351509126448570740374747181965696714458775214939345221885282113404505\" */ 0x986c06cb04d613f57cf7a1da410e0f22c794e1ec1ae125898cfc9662a5e5be59)\n            /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n            mstore(/** @src 2:680:1557  \"[...\" */ add(memPtr_1, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 160), /** @src 2:1125:1202  \"50082386515045053504076326033442809551011315580267173564563197889162423619623\" */ 0x6eb9a05106eff3031621027680204b2e9326b0e5191bd62f3cd7bf7f6d94d027)\n            /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n            mstore(/** @src 2:680:1557  \"[...\" */ add(memPtr_1, 192), /** @src 2:1212:1289  \"73182421758286469310850848737411980736456210038565066977682644585724928397862\" */ 0xa1cbc8691493398c061f547b4882edbb6a38ce1730c8a2605e9d8138d4ad1226)\n            /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n            mstore(/** @src 2:680:1557  \"[...\" */ add(memPtr_1, 224), /** @src 2:1299:1376  \"60176431197461170637692882955627917456800648458772472331451918908568455016445\" */ 0x850aa72f3d8bc65181e9c29d76f7614e2f939ade9442abac29fc8a0329deeffd)\n            /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n            mstore(/** @src 2:680:1557  \"[...\" */ add(memPtr_1, 256), /** @src 2:1386:1464  \"105740430515862457360623134126179561153993738774115400861400649215360807197726\" */ 0xe9c6f678752dbfc89028bf8b9b1cce608b34b742b75fbae878ec2c6ae803dc1e)\n            /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n            mstore(/** @src 2:680:1557  \"[...\" */ add(memPtr_1, 288), /** @src 2:1474:1551  \"76840483767501885884368002925517179365815019383466879774586151314479309584255\" */ 0xa9e22c2e1f4531bc4389032bb472b97c25a7298d27ba4fefd75439a1be46f77f)\n            /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n            let srcPtr := memPtr_1\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n            for { }\n            lt(i, /** @src 2:367:369  \"10\" */ 0x0a)\n            /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n            {\n                i := add(i, /** @src 1:1716:1717  \"1\" */ 0x01)\n            }\n            /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n            {\n                let _1 := mload(srcPtr)\n                srcPtr := add(srcPtr, 32)\n                sstore(add(/** @src 2:680:1557  \"[...\" */ 0x09, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ i), _1)\n            }\n            sstore(/** @src 2:367:369  \"10\" */ 0x02, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ or(and(sload(/** @src 2:367:369  \"10\" */ 0x02), /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ not(sub(shl(160, 1), 1))), and(/** @src 2:1794:1809  \"Hasher(_hasher)\" */ value0, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ sub(shl(160, 1), 1))))\n            sstore(/** @src 1:1716:1717  \"1\" */ 0x01, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ or(and(sload(/** @src 1:1716:1717  \"1\" */ 0x01), /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ not(sub(shl(160, 1), 1))), and(value1, sub(shl(160, 1), 1))))\n            let _2 := mload(64)\n            let _3 := datasize(\"Tornado_697_deployed\")\n            codecopy(_2, dataoffset(\"Tornado_697_deployed\"), _3)\n            return(_2, _3)\n        }\n        function abi_decode_address_fromMemory(offset) -> value\n        {\n            value := mload(offset)\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        }\n    }\n    /// @use-src 1:\"contracts/ReentrancyGuard.sol\", 2:\"contracts/Tornado.sol\"\n    object \"Tornado_697_deployed\" {\n        code {\n            {\n                /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x1f79a1e9 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 2:545:592  \"mapping(uint256 => bool) public nullifierHashes\" */ 7)\n                        /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                        mstore(_1, iszero(iszero(and(sload(keccak256(0, 64)), 0xff))))\n                        return(_1, 32)\n                    }\n                    case 0x45e0523f {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _2 := sload(4)\n                        let memPos := mload(64)\n                        mstore(memPos, _2)\n                        return(memPos, 32)\n                    }\n                    case 0x49ce8997 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 2:598:641  \"mapping(uint256 => bool) public commitments\" */ 8)\n                        /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                        let value := and(sload(keccak256(0, 64)), 0xff)\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, iszero(iszero(value)))\n                        return(memPos_1, 32)\n                    }\n                    case 0x8bca6d16 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _3 := sload(/** @src 2:375:414  \"uint256 public denomination = 0.1 ether\" */ 3)\n                        /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, _3)\n                        return(memPos_2, 32)\n                    }\n                    case 0xb6b55f25 {\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_1 := calldataload(4)\n                        /// @src 1:2227:2330  \"modifier nonReentrant() {...\"\n                        fun_nonReentrantBefore()\n                        /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                        if iszero(/** @src 2:1938:1963  \"msg.value == denomination\" */ eq(/** @src 2:1938:1947  \"msg.value\" */ callvalue(), /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ sload(/** @src 2:1951:1963  \"denomination\" */ 0x03)))\n                        /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 16)\n                            mstore(add(memPtr, 68), \"incorrect-amount\")\n                            revert(memPtr, 100)\n                        }\n                        mstore(0, value_1)\n                        mstore(32, /** @src 2:2003:2014  \"commitments\" */ 0x08)\n                        /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                        if iszero(/** @src 2:2002:2027  \"!commitments[_commitment]\" */ iszero(/** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ and(sload(keccak256(0, 64)), 0xff)))\n                        {\n                            let memPtr_1 := mload(64)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, 4), 32)\n                            mstore(add(memPtr_1, 36), 19)\n                            mstore(add(memPtr_1, 68), \"existing-commitment\")\n                            revert(memPtr_1, 100)\n                        }\n                        let _4 := sload(4)\n                        let value_2 := and(shr(160, sload(/** @src 2:2088:2097  \"treeLevel\" */ 0x02)), /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 0xff)\n                        if gt(value_2, 0xff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        if iszero(/** @src 2:2069:2097  \"nextLeafIdx < 2 ** treeLevel\" */ lt(_4, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ shl(value_2, 1)))\n                        {\n                            let memPtr_2 := mload(64)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, 4), 32)\n                            mstore(add(memPtr_2, 36), 9)\n                            mstore(add(memPtr_2, 68), \"tree-full\")\n                            revert(memPtr_2, 100)\n                        }\n                        let size := 0\n                        let _5 := size\n                        _5 := size\n                        size := 320\n                        let memPtr_3 := mload(64)\n                        finalize_allocation(memPtr_3, size)\n                        let size_1 := 0\n                        let _6 := 0\n                        _6 := 0\n                        size_1 := size\n                        calldatacopy(memPtr_3, calldatasize(), size)\n                        let size_2 := 0\n                        let _7 := 0\n                        _7 := 0\n                        size_2 := size\n                        let memPtr_4 := mload(64)\n                        finalize_allocation(memPtr_4, size)\n                        let size_3 := 0\n                        let _8 := 0\n                        _8 := 0\n                        size_3 := size\n                        calldatacopy(memPtr_4, calldatasize(), size)\n                        /// @src 2:2230:2262  \"uint256 currentIdx = nextLeafIdx\"\n                        let var_currentIdx := _4\n                        /// @src 2:2272:2305  \"uint256 currentHash = _commitment\"\n                        let var_currentHash := value_1\n                        /// @src 2:2316:2328  \"uint256 left\"\n                        let var_left := /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 0\n                        /// @src 2:2338:2351  \"uint256 right\"\n                        let var_right := /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ var_left\n                        let size_4 := var_left\n                        let _9 := var_left\n                        _9 := var_left\n                        size_4 := 64\n                        let memPtr_5 := mload(size_4)\n                        finalize_allocation(memPtr_5, size_4)\n                        let size_5 := var_left\n                        let _10 := var_left\n                        _10 := var_left\n                        size_5 := size_4\n                        calldatacopy(memPtr_5, calldatasize(), size_4)\n                        /// @src 2:2405:2416  \"uint8 i = 0\"\n                        let var_i := /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ var_left\n                        let addr := add(memPtr_5, 32)\n                        /// @src 2:2401:3120  \"for(uint8 i = 0; i < treeLevel; i++){...\"\n                        for { }\n                        /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 1\n                        /// @src 2:2405:2416  \"uint8 i = 0\"\n                        {\n                            /// @src 2:2433:2436  \"i++\"\n                            var_i := /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ and(add(/** @src 2:2433:2436  \"i++\" */ var_i, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 1), 0xff)\n                        }\n                        /// @src 2:2433:2436  \"i++\"\n                        {\n                            /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                            let value_3 := and(shr(160, sload(/** @src 2:2088:2097  \"treeLevel\" */ 0x02)), /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 0xff)\n                            let _11 := and(/** @src 2:2418:2431  \"i < treeLevel\" */ var_i, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 0xff)\n                            /// @src 2:2418:2431  \"i < treeLevel\"\n                            if iszero(lt(/** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ _11, /** @src 2:2418:2431  \"i < treeLevel\" */ value_3)) { break }\n                            /// @src 2:2464:2859  \"if(currentIdx % 2 == 0){...\"\n                            switch /** @src 2:2467:2486  \"currentIdx % 2 == 0\" */ iszero(/** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ and(var_currentIdx, 1))\n                            case /** @src 2:2464:2859  \"if(currentIdx % 2 == 0){...\" */ 0 {\n                                /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                                mstore(0, _11)\n                                mstore(32, /** @src 2:2872:2885  \"lastLevelHash\" */ 0x06)\n                                /// @src 2:2693:2716  \"left = lastLevelHash[i]\"\n                                var_left := /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ sload(keccak256(0, size_4))\n                                /// @src 2:2734:2753  \"right = currentHash\"\n                                var_right := var_currentHash\n                                /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                                mstore(0, _11)\n                                mstore(32, /** @src 2:2872:2885  \"lastLevelHash\" */ 0x06)\n                                /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                                mstore(/** @src 2:2771:2805  \"hashPairings[i] = lastLevelHash[i]\" */ memory_array_index_access_uint256(memPtr_3, _11), /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ sload(keccak256(0, size_4)))\n                                mstore(/** @src 2:2823:2844  \"hashDirections[i] = 1\" */ memory_array_index_access_uint256(memPtr_4, _11), /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 1)\n                            }\n                            default /// @src 2:2464:2859  \"if(currentIdx % 2 == 0){...\"\n                            {\n                                /// @src 2:2505:2523  \"left = currentHash\"\n                                var_left := var_currentHash\n                                /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                                let _12 := iszero(lt(var_i, 10))\n                                if _12\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x32)\n                                    revert(0, 0x24)\n                                }\n                                /// @src 2:2541:2565  \"right = levelDefaults[i]\"\n                                var_right := /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ sload(add(/** @src 2:2549:2562  \"levelDefaults\" */ 0x09, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ var_i))\n                                _12 := 0\n                                mstore(/** @src 2:2583:2617  \"hashPairings[i] = levelDefaults[i]\" */ memory_array_index_access_uint256(memPtr_3, _11), /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ var_right)\n                                mstore(/** @src 2:2635:2656  \"hashDirections[i] = 0\" */ memory_array_index_access_uint256(memPtr_4, _11), /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ _12)\n                            }\n                            mstore(0, _11)\n                            mstore(32, /** @src 2:2872:2885  \"lastLevelHash\" */ 0x06)\n                            /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                            sstore(keccak256(0, size_4), var_currentHash)\n                            mstore(memPtr_5, var_left)\n                            mstore(addr, var_right)\n                            let value_4 := and(sload(/** @src 2:2088:2097  \"treeLevel\" */ 0x02), /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                            /// @src 2:2987:3038  \"hasher.MiMC5Sponge{ gas: 150000 }(ins, _commitment)\"\n                            let _13 := /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ mload(size_4)\n                            /// @src 2:2987:3038  \"hasher.MiMC5Sponge{ gas: 150000 }(ins, _commitment)\"\n                            mstore(_13, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ shl(226, 0x3588b969))\n                            abi_encode_array_uint256(memPtr_5, /** @src 2:2987:3038  \"hasher.MiMC5Sponge{ gas: 150000 }(ins, _commitment)\" */ add(_13, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 4))\n                            mstore(add(/** @src 2:2987:3038  \"hasher.MiMC5Sponge{ gas: 150000 }(ins, _commitment)\" */ _13, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 68), value_1)\n                            /// @src 2:2987:3038  \"hasher.MiMC5Sponge{ gas: 150000 }(ins, _commitment)\"\n                            let _14 := staticcall(/** @src 2:3012:3018  \"150000\" */ 0x0249f0, /** @src 2:2987:3038  \"hasher.MiMC5Sponge{ gas: 150000 }(ins, _commitment)\" */ value_4, _13, 100, _13, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 32)\n                            /// @src 2:2987:3038  \"hasher.MiMC5Sponge{ gas: 150000 }(ins, _commitment)\"\n                            if iszero(_14)\n                            {\n                                /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                                let pos := mload(size_4)\n                                returndatacopy(pos, 0, returndatasize())\n                                revert(pos, returndatasize())\n                            }\n                            /// @src 2:2987:3038  \"hasher.MiMC5Sponge{ gas: 150000 }(ins, _commitment)\"\n                            let expr := /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 0\n                            /// @src 2:2987:3038  \"hasher.MiMC5Sponge{ gas: 150000 }(ins, _commitment)\"\n                            if _14\n                            {\n                                let _15 := /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 32\n                                /// @src 2:2987:3038  \"hasher.MiMC5Sponge{ gas: 150000 }(ins, _commitment)\"\n                                if gt(/** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ _15, /** @src 2:2987:3038  \"hasher.MiMC5Sponge{ gas: 150000 }(ins, _commitment)\" */ returndatasize()) { _15 := returndatasize() }\n                                finalize_allocation(_13, _15)\n                                /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                                if slt(sub(/** @src 2:2987:3038  \"hasher.MiMC5Sponge{ gas: 150000 }(ins, _commitment)\" */ add(_13, _15), /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ _13), 32) { revert(expr, expr) }\n                                /// @src 2:2987:3038  \"hasher.MiMC5Sponge{ gas: 150000 }(ins, _commitment)\"\n                                expr := /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ mload(_13)\n                            }\n                            /// @src 2:3053:3068  \"currentHash = h\"\n                            var_currentHash := expr\n                            /// @src 2:3082:3109  \"currentIdx = currentIdx / 2\"\n                            var_currentIdx := /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ shr(1, var_currentIdx)\n                        }\n                        mstore(0, var_currentHash)\n                        mstore(32, 5)\n                        let dataSlot := keccak256(0, size_4)\n                        sstore(dataSlot, or(and(sload(dataSlot), not(255)), 1))\n                        let _16 := sload(4)\n                        let sum := add(_16, 1)\n                        if gt(_16, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        sstore(4, sum)\n                        mstore(0, value_1)\n                        mstore(32, /** @src 2:2003:2014  \"commitments\" */ 0x08)\n                        /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                        let dataSlot_1 := keccak256(0, size_4)\n                        sstore(dataSlot_1, or(and(sload(dataSlot_1), not(255)), 1))\n                        /// @src 2:3265:3311  \"Deposit(newRoot, hashPairings, hashDirections)\"\n                        let _17 := /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ mload(size_4)\n                        mstore(_17, var_currentHash)\n                        let pos_1 := add(_17, 32)\n                        pos_1 := pos_1\n                        let srcPtr := memPtr_3\n                        let i := 0\n                        for { } lt(i, 10) { i := add(i, 1) }\n                        {\n                            mstore(pos_1, mload(srcPtr))\n                            pos_1 := add(pos_1, 32)\n                            srcPtr := add(srcPtr, 32)\n                        }\n                        let pos_2 := add(_17, 352)\n                        pos_2 := pos_2\n                        let srcPtr_1 := memPtr_4\n                        let i_1 := 0\n                        for { } lt(i_1, 10) { i_1 := add(i_1, 1) }\n                        {\n                            mstore(pos_2, and(mload(srcPtr_1), 0xff))\n                            pos_2 := add(pos_2, 32)\n                            srcPtr_1 := add(srcPtr_1, 32)\n                        }\n                        /// @src 2:3265:3311  \"Deposit(newRoot, hashPairings, hashDirections)\"\n                        log1(_17, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 672, /** @src 2:3265:3311  \"Deposit(newRoot, hashPairings, hashDirections)\" */ 0xe6ab8667cb740d6c65a4ad321c031eb42f6c5085d5753238d1b2e1e370c13483)\n                        /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                        sstore(0, 1)\n                        return(0, 0)\n                    }\n                    case 0xb8e79564 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_5 := and(shr(160, sload(/** @src 2:342:369  \"uint8 public treeLevel = 10\" */ 2)), /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 0xff)\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, value_5)\n                        return(memPos_3, 32)\n                    }\n                    case 0xc2b40ae4 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 2:457:494  \"mapping(uint256 => bool) public roots\" */ 5)\n                        /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                        let value_6 := and(sload(keccak256(0, 64)), 0xff)\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, iszero(iszero(value_6)))\n                        return(memPos_4, 32)\n                    }\n                    case 0xc78784d7 {\n                        if slt(add(calldatasize(), not(3)), 320) { revert(0, 0) }\n                        let array := 0\n                        if iszero(slt(35, calldatasize())) { revert(array, array) }\n                        let size_6 := array\n                        let _18 := array\n                        _18 := array\n                        size_6 := 64\n                        let memPtr_6 := mload(size_6)\n                        finalize_allocation(memPtr_6, size_6)\n                        let dst := memPtr_6\n                        if gt(68, calldatasize()) { revert(array, array) }\n                        let src := 4\n                        for { } lt(src, 68) { src := add(src, 0x20) }\n                        {\n                            mstore(dst, calldataload(src))\n                            dst := add(dst, 0x20)\n                        }\n                        array := memPtr_6\n                        if iszero(slt(99, calldatasize())) { revert(0, 0) }\n                        let size_7 := 0\n                        let _19 := 0\n                        _19 := 0\n                        size_7 := size_6\n                        let memPtr_7 := mload(size_6)\n                        finalize_allocation(memPtr_7, size_6)\n                        let dst_1 := memPtr_7\n                        if gt(196, calldatasize()) { revert(0, 0) }\n                        let src_1 := 68\n                        for { } lt(src_1, 196) { src_1 := add(src_1, size_6) }\n                        {\n                            let array_1 := 0\n                            if iszero(slt(add(src_1, 0x1f), calldatasize())) { revert(array_1, array_1) }\n                            let size_8 := array_1\n                            let _20 := array_1\n                            _20 := array_1\n                            size_8 := size_6\n                            let memPtr_8 := mload(size_6)\n                            finalize_allocation(memPtr_8, size_6)\n                            let dst_2 := memPtr_8\n                            let srcEnd := add(src_1, size_6)\n                            if gt(srcEnd, calldatasize()) { revert(array_1, array_1) }\n                            let src_2 := src_1\n                            for { } lt(src_2, srcEnd) { src_2 := add(src_2, 0x20) }\n                            {\n                                mstore(dst_2, calldataload(src_2))\n                                dst_2 := add(dst_2, 0x20)\n                            }\n                            array_1 := memPtr_8\n                            mstore(dst_1, memPtr_8)\n                            dst_1 := add(dst_1, 0x20)\n                        }\n                        let array_2 := 0\n                        if iszero(slt(227, calldatasize())) { revert(array_2, array_2) }\n                        let size_9 := array_2\n                        let _21 := array_2\n                        _21 := array_2\n                        size_9 := size_6\n                        let memPtr_9 := mload(size_6)\n                        finalize_allocation(memPtr_9, size_6)\n                        let dst_3 := memPtr_9\n                        if gt(260, calldatasize()) { revert(array_2, array_2) }\n                        let src_3 := 196\n                        for { } lt(src_3, 260) { src_3 := add(src_3, 0x20) }\n                        {\n                            mstore(dst_3, calldataload(src_3))\n                            dst_3 := add(dst_3, 0x20)\n                        }\n                        array_2 := memPtr_9\n                        let array_3 := 0\n                        if iszero(slt(291, calldatasize())) { revert(array_3, array_3) }\n                        let size_10 := array_3\n                        let _22 := array_3\n                        _22 := array_3\n                        size_10 := size_6\n                        let memPtr_10 := mload(size_6)\n                        finalize_allocation(memPtr_10, size_6)\n                        let dst_4 := memPtr_10\n                        if gt(324, calldatasize()) { revert(array_3, array_3) }\n                        let src_4 := 260\n                        for { } lt(src_4, 324) { src_4 := add(src_4, 0x20) }\n                        {\n                            mstore(dst_4, calldataload(src_4))\n                            dst_4 := add(dst_4, 0x20)\n                        }\n                        array_3 := memPtr_10\n                        /// @src 1:2227:2330  \"modifier nonReentrant() {...\"\n                        fun_nonReentrantBefore()\n                        /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                        let _23 := mload(memPtr_10)\n                        let _24 := mload(add(memPtr_10, 0x20))\n                        mstore(0, _24)\n                        mstore(0x20, /** @src 2:3586:3601  \"nullifierHashes\" */ 0x07)\n                        /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                        if iszero(/** @src 2:3585:3617  \"!nullifierHashes[_nullifierHash]\" */ iszero(/** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ and(sload(keccak256(0, size_6)), 0xff)))\n                        {\n                            let memPtr_11 := mload(size_6)\n                            mstore(memPtr_11, shl(229, 4594637))\n                            mstore(add(memPtr_11, 4), 0x20)\n                            mstore(add(memPtr_11, 36), 13)\n                            mstore(add(memPtr_11, 68), \"already-spent\")\n                            revert(memPtr_11, 100)\n                        }\n                        mstore(0, _23)\n                        mstore(0x20, 5)\n                        if iszero(and(sload(keccak256(0, size_6)), 0xff))\n                        {\n                            let memPtr_12 := mload(size_6)\n                            mstore(memPtr_12, shl(229, 4594637))\n                            mstore(add(memPtr_12, 4), 0x20)\n                            mstore(add(memPtr_12, 36), 8)\n                            mstore(add(memPtr_12, 68), \"not-root\")\n                            revert(memPtr_12, 100)\n                        }\n                        let value_7 := and(sload(1), sub(shl(160, 1), 1))\n                        let memPtr_13 := mload(size_6)\n                        let newFreePtr := add(memPtr_13, 96)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_13))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(size_6, newFreePtr)\n                        mstore(memPtr_13, _23)\n                        mstore(/** @src 2:3826:3856  \"[_root, _nullifierHash, _addr]\" */ add(memPtr_13, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 0x20), _24)\n                        mstore(/** @src 2:3826:3856  \"[_root, _nullifierHash, _addr]\" */ add(memPtr_13, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ size_6), /** @src 2:3721:3731  \"msg.sender\" */ caller())\n                        /// @src 2:3778:3858  \"abi.encodeCall(IVerifier.verifyProof, (a, b, c, [_root, _nullifierHash, _addr]))\"\n                        let expr_mpos := /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ mload(size_6)\n                        /// @src 2:3778:3858  \"abi.encodeCall(IVerifier.verifyProof, (a, b, c, [_root, _nullifierHash, _addr]))\"\n                        let _25 := add(expr_mpos, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 0x20)\n                        /// @src 2:3778:3858  \"abi.encodeCall(IVerifier.verifyProof, (a, b, c, [_root, _nullifierHash, _addr]))\"\n                        mstore(_25, shl(225, 0x08a3cff5))\n                        /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                        abi_encode_array_uint256(memPtr_6, /** @src 2:3778:3858  \"abi.encodeCall(IVerifier.verifyProof, (a, b, c, [_root, _nullifierHash, _addr]))\" */ add(expr_mpos, 36))\n                        /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                        let pos_3 := add(/** @src 2:3778:3858  \"abi.encodeCall(IVerifier.verifyProof, (a, b, c, [_root, _nullifierHash, _addr]))\" */ expr_mpos, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 100)\n                        pos_3 := pos_3\n                        let srcPtr_2 := memPtr_7\n                        let i_2 := 0\n                        for { }\n                        lt(i_2, /** @src 2:2088:2097  \"treeLevel\" */ 0x02)\n                        /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                        { i_2 := add(i_2, 1) }\n                        {\n                            let _26 := mload(srcPtr_2)\n                            let pos_4 := pos_3\n                            pos_4 := pos_3\n                            let srcPtr_3 := _26\n                            let i_3 := 0\n                            for { }\n                            lt(i_3, /** @src 2:2088:2097  \"treeLevel\" */ 0x02)\n                            /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                            { i_3 := add(i_3, 1) }\n                            {\n                                mstore(pos_4, mload(srcPtr_3))\n                                pos_4 := add(pos_4, 0x20)\n                                srcPtr_3 := add(srcPtr_3, 0x20)\n                            }\n                            pos_3 := add(pos_3, size_6)\n                            srcPtr_2 := add(srcPtr_2, 0x20)\n                        }\n                        abi_encode_array_uint256(memPtr_9, add(/** @src 2:3778:3858  \"abi.encodeCall(IVerifier.verifyProof, (a, b, c, [_root, _nullifierHash, _addr]))\" */ expr_mpos, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 228))\n                        let pos_5 := add(/** @src 2:3778:3858  \"abi.encodeCall(IVerifier.verifyProof, (a, b, c, [_root, _nullifierHash, _addr]))\" */ expr_mpos, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 292)\n                        pos_5 := pos_5\n                        let srcPtr_4 := memPtr_13\n                        let i_4 := 0\n                        for { }\n                        lt(i_4, /** @src 2:3826:3856  \"[_root, _nullifierHash, _addr]\" */ 3)\n                        /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                        { i_4 := add(i_4, 1) }\n                        {\n                            mstore(pos_5, mload(srcPtr_4))\n                            pos_5 := add(pos_5, 0x20)\n                            srcPtr_4 := add(srcPtr_4, 0x20)\n                        }\n                        /// @src 2:3778:3858  \"abi.encodeCall(IVerifier.verifyProof, (a, b, c, [_root, _nullifierHash, _addr]))\"\n                        mstore(expr_mpos, 356)\n                        finalize_allocation(expr_mpos, 388)\n                        /// @src 2:3764:3859  \"verifier.call(abi.encodeCall(IVerifier.verifyProof, (a, b, c, [_root, _nullifierHash, _addr])))\"\n                        let expr_component := call(gas(), value_7, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 0, /** @src 2:3764:3859  \"verifier.call(abi.encodeCall(IVerifier.verifyProof, (a, b, c, [_root, _nullifierHash, _addr])))\" */ _25, mload(expr_mpos), /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 0, 0)\n                        /// @src 2:3764:3859  \"verifier.call(abi.encodeCall(IVerifier.verifyProof, (a, b, c, [_root, _nullifierHash, _addr])))\"\n                        pop(extract_returndata())\n                        /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                        if iszero(expr_component)\n                        {\n                            let memPtr_14 := mload(size_6)\n                            mstore(memPtr_14, shl(229, 4594637))\n                            mstore(add(memPtr_14, 4), 0x20)\n                            mstore(add(memPtr_14, /** @src 2:3778:3858  \"abi.encodeCall(IVerifier.verifyProof, (a, b, c, [_root, _nullifierHash, _addr]))\" */ 36), /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 13)\n                            mstore(add(memPtr_14, 68), \"invalid-proof\")\n                            revert(memPtr_14, 100)\n                        }\n                        mstore(0, _24)\n                        mstore(0x20, /** @src 2:3586:3601  \"nullifierHashes\" */ 0x07)\n                        /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                        let dataSlot_2 := keccak256(0, size_6)\n                        sstore(dataSlot_2, or(and(sload(dataSlot_2), not(255)), 1))\n                        /// @src 2:4032:4070  \"target.call{ value: denomination }(\\\"\\\")\"\n                        let expr_component_1 := call(gas(), /** @src 2:3721:3731  \"msg.sender\" */ caller(), /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ sload(/** @src 2:3826:3856  \"[_root, _nullifierHash, _addr]\" */ 3), /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 0, 0, 0, 0)\n                        /// @src 2:4032:4070  \"target.call{ value: denomination }(\\\"\\\")\"\n                        pop(extract_returndata())\n                        /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                        if iszero(expr_component_1)\n                        {\n                            let memPtr_15 := mload(size_6)\n                            mstore(memPtr_15, shl(229, 4594637))\n                            mstore(add(memPtr_15, 4), 0x20)\n                            mstore(add(memPtr_15, /** @src 2:3778:3858  \"abi.encodeCall(IVerifier.verifyProof, (a, b, c, [_root, _nullifierHash, _addr]))\" */ 36), /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 14)\n                            mstore(add(memPtr_15, 68), \"payment-failed\")\n                            revert(memPtr_15, 100)\n                        }\n                        /// @src 2:4126:4164  \"Withdrawal(msg.sender, _nullifierHash)\"\n                        let _27 := /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ mload(size_6)\n                        mstore(_27, /** @src 2:3721:3731  \"msg.sender\" */ caller())\n                        /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                        mstore(add(_27, 0x20), _24)\n                        /// @src 2:4126:4164  \"Withdrawal(msg.sender, _nullifierHash)\"\n                        log1(_27, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ size_6, /** @src 2:4126:4164  \"Withdrawal(msg.sender, _nullifierHash)\" */ 0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65)\n                        /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                        sstore(0, 1)\n                        return(0, 0)\n                    }\n                }\n                revert(0, 0)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function memory_array_index_access_uint256(baseRef, index) -> addr\n            {\n                if iszero(lt(index, 0x0a))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(baseRef, shl(5, index))\n            }\n            function abi_encode_array_uint256(value, pos)\n            {\n                pos := pos\n                let srcPtr := value\n                let i := 0\n                for { } lt(i, 0x02) { i := add(i, 1) }\n                {\n                    mstore(pos, mload(srcPtr))\n                    pos := add(pos, 0x20)\n                    srcPtr := add(srcPtr, 0x20)\n                }\n            }\n            function extract_returndata() -> data\n            {\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _1 := returndatasize()\n                    if gt(_1, 0xffffffffffffffff)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 0x24)\n                    }\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, add(and(add(_1, 31), not(31)), 0x20))\n                    mstore(memPtr, _1)\n                    data := memPtr\n                    returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ returndatasize())\n                }\n            }\n            /// @ast-id 244 @src 1:2336:2623  \"function _nonReentrantBefore() private {...\"\n            function fun_nonReentrantBefore()\n            {\n                /// @src 1:1759:1760  \"2\"\n                if /** @src 1:2468:2487  \"_status != _ENTERED\" */ eq(/** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ sload(/** @src 1:2468:2475  \"_status\" */ 0x00), /** @src 1:1759:1760  \"2\" */ 0x02)\n                {\n                    let memPtr := /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ mload(64)\n                    /// @src 1:1759:1760  \"2\"\n                    mstore(memPtr, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ shl(229, 4594637))\n                    /// @src 1:1759:1760  \"2\"\n                    mstore(add(memPtr, 4), 32)\n                    /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                    mstore(/** @src 1:1759:1760  \"2\" */ add(memPtr, 36), 31)\n                    mstore(/** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ add(/** @src 1:1759:1760  \"2\" */ memPtr, /** @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\" */ 68), /** @src 1:1759:1760  \"2\" */ \"ReentrancyGuard: reentrant call\")\n                    revert(memPtr, 100)\n                }\n                /// @src 2:258:4190  \"contract Tornado is ReentrancyGuard {...\"\n                sstore(/** @src 1:2468:2475  \"_status\" */ 0x00, /** @src 1:1759:1760  \"2\" */ 0x02)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220feca9a55459e08bb5842070b3ba9d59984a45d6424c5fc5b47eddd09e9718d5e64736f6c634300081d0033\"\n    }\n}\n","hash":"019332690ac066578bdee4409c6f27ee4c0d2ebf68fc709d5a164c2d7942afc3","factoryDependencies":{}}},"contracts/Verifier.sol":{"Pairing":{"abi":[],"metadata":{"llvm_arguments":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"revive_pallet_version":null,"revive_version":"0.1.0-dev.14+commit.f6a412e.llvm-18.1.8","solc_metadata":"{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Verifier.sol\":\"Pairing\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Verifier.sol\":{\"keccak256\":\"0x287d16ba786d888ca58410d5d99188582b9627bf26c414d3bf29fb912a8a4c27\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ac6974fc8a2d686b8303580acc23282cdd458950fdbfc13dce67acb31df6a6a6\",\"dweb:/ipfs/QmSA3NoFntCeuM2yFMeFGSs1jMZfEvyfZVBXL1bftxQvUh\"]}},\"version\":1}","solc_version":"0.8.29+commit.ab55807c.Darwin.appleclang"},"evm":{"assembly":"// RO data = 0/0 bytes\n// RW data = 4/65616 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 114\n// Code size = 372 bytes\n\n      : @0 (gas: 2)\n     0: a3 = i32 [0x20008]\n     5: jump @2 if a3 >=u 128\n      : @1 (gas: 4)\n    10: u32 [0x20008] = 0x80\n    17: a1 = 0x20010\n    22: a0 = a1 + 0x80\n    26: jump @17\n      : @2 (gas: 3)\n    29: a1 = 0x20010\n    34: a0 = a1 + 0x80\n    38: jump @17\n      : @3 (gas: 6)\n    41: sp = sp + 0xfffffffffffffff0\n    44: u64 [sp + 0x8] = ra\n    47: u64 [sp] = s0\n    49: s0 = a0 & 0x1\n    52: ecalli 2 // 'call_data_size'\n    54: fallthrough\n      : @4 (gas: 2)\n    55: u32 [0x20004] = a0\n    60: jump @6 if s0 == 0\n      : @5 (gas: 1)\n    63: ra = 2, jump @7\n      : @6 [@dyn 1] (gas: 1)\n    67: ra = 4, jump @18\n      : @7 [@dyn 2] (gas: 9)\n    72: sp = sp + 0xffffffffffffffa0\n    75: u64 [sp + 0x58] = ra\n    78: u64 [sp + 0x50] = s0\n    81: u64 [sp + 0x48] = s1\n    84: s0 = sp + 0x60\n    87: sp = sp & 0xffffffffffffffe0\n    90: a2 = 0x20008\n    95: a0 = i32 [0x20008]\n   100: jump @9 if a0 >u 95\n      : @8 (gas: 2)\n   104: u32 [0x20008] = 0x60\n   110: fallthrough\n      : @9 (gas: 14)\n   111: u64 [sp + 0x18] = a2\n   114: s1 = 0x20010\n   119: u64 [0x20060] = 0\n   124: u64 [0x20058] = 0\n   129: u64 [0x20050] = 0\n   134: a0 = 0x8000000000000000\n   144: u64 [0x20068] = a0\n   149: u64 [sp + 56] = 0\n   152: u64 [sp + 48] = 0\n   155: u64 [sp + 40] = 0\n   158: u64 [sp + 32] = 0\n   161: i32 a0 = sp + 0x20\n   164: ecalli 5 // 'value_transferred'\n   166: fallthrough\n      : @10 (gas: 8)\n   167: a0 = u64 [sp + 0x30]\n   170: a1 = u64 [sp + 0x38]\n   173: a2 = u64 [sp + 0x28]\n   176: a3 = u64 [sp + 0x20]\n   179: a1 = a1 | a2\n   182: a0 = a0 | a3\n   185: a0 = a0 | a1\n   188: jump @12 if a0 == 0\n      : @11 (gas: 5)\n   191: i32 a1 = s1 + 0\n   193: a0 = 0x1\n   196: a2 = 0\n   198: ecalli 3 // 'seal_return'\n   200: fallthrough\n      : @12 (gas: 3)\n   201: a2 = u64 [sp + 0x18]\n   204: a0 = i32 [a2]\n   206: jump @14 if a0 >u 127\n      : @13 (gas: 2)\n   210: u32 [a2 + 0] = 0x80\n   214: fallthrough\n      : @14 (gas: 8)\n   215: i32 a0 = s1 + 0x80\n   219: a1 = 0\n   221: a2 = 0\n   223: ecalli 1 // 'call_data_copy'\n   225: s1 = 0x30010\n   230: i32 a0 = s1 + 0\n   232: ecalli 0 // 'address'\n   233: fallthrough\n      : @15 (gas: 20)\n   234: a0 = u64 [0x30018]\n   239: a1 = i32 [0x30020]\n   244: a2 = u64 [0x30010]\n   249: a0 = reverse a0\n   251: a3 = a0 << 0x20\n   254: a1 = reverse a1\n   256: a1 = a1 >> 0x20\n   259: a3 = a3 | a1\n   262: a1 = a0 >> 0x20\n   265: a2 = reverse a2\n   267: a4 = a2 << 0x20\n   270: a0 = 0x30030\n   275: a4 = a4 | a1\n   278: a2 = a2 >> 0x20\n   281: a1 = i32 [0x20000]\n   286: u64 [0x30040] = a2\n   291: u64 [0x30048] = 0\n   296: u64 [0x30038] = a4\n   301: u64 [0x30030] = a3\n   306: jump @0 if a1 == 0\n      : @16 (gas: 3)\n   310: i32 a0 = a0 + 0\n   312: ecalli 4 // 'set_immutable_data'\n   314: jump @0\n      : @17 (gas: 6)\n   317: i32 a1 = a0 + 0\n   319: a0 = 0\n   321: a2 = 0\n   323: ra = 0x6\n   326: ecalli 3 // 'seal_return'\n   328: fallthrough\n      : @18 [@dyn 3] (gas: 10)\n   329: sp = sp + 0xfffffffffffffff8\n   332: u64 [sp] = ra\n   334: a1 = 0x20010\n   339: i32 a1 = a1 + 0\n   341: a0 = 0x1\n   344: a2 = 0\n   346: ecalli 3 // 'seal_return'\n   348: a0 = 0\n   350: ra = 0x8\n   353: jump @3\n      : @19 [export #0: 'call'] (gas: 2)\n   356: a0 = 0\n   358: ra = 8, jump @3\n      : @20 [@dyn 4] [export #1: 'deploy'] (gas: 2)\n   363: a0 = 0x1\n   366: ra = 10, jump @3\n      : @21 [@dyn 5] (gas: 1)\n   371: trap\n","bytecode":{"object":"50564d00005002000000000000010700c15000c00080030420000000046a06000000000700000015000000230000002e000000400000006164647265737363616c6c5f646174615f636f707963616c6c5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f6461746176616c75655f7472616e7366657272656405110281640463616c6c816b066465706c6f790681b1050281744300480049016b017301390a080002552a800018200308000280003308100002958780002823013308100002958780002817019511f07b10087b158475010a02013d070400025105075010020950100406019511a07b10587b15507b16489515608411e03309080002390708000256175f0b200308000260017b19183306100002210360000221035800022103500002140700000000000000803e076800024911384911304911284911208317200a0501821730821838821928821a20d49808d4a707d4870751070d836833070133090a0301821918819756177f09480980000183678000330833090a01330610000383670a013a0718000339082000033a091000036f77977a206f88988820d48a0a9878206f99979b203307300003d48b0b98992039080000023e0940000321034800033e0b3800033e0a3000035108cefe83770a0428c6fe8378330733093300060a03019511f87b103308100002838833070133090a03330733000828c8fe3307501008c3fe33070150100abbfe00210442244492d2900849928410c1841042002149d22449925253c4a84287104a494a4842082144a54a53285552480800"},"deployedBytecode":{"object":"50564d00005002000000000000010700c15000c00080030420000000046a06000000000700000015000000230000002e000000400000006164647265737363616c6c5f646174615f636f707963616c6c5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f6461746176616c75655f7472616e7366657272656405110281640463616c6c816b066465706c6f790681b1050281744300480049016b017301390a080002552a800018200308000280003308100002958780002823013308100002958780002817019511f07b10087b158475010a02013d070400025105075010020950100406019511a07b10587b15507b16489515608411e03309080002390708000256175f0b200308000260017b19183306100002210360000221035800022103500002140700000000000000803e076800024911384911304911284911208317200a0501821730821838821928821a20d49808d4a707d4870751070d836833070133090a0301821918819756177f09480980000183678000330833090a01330610000383670a013a0718000339082000033a091000036f77977a206f88988820d48a0a9878206f99979b203307300003d48b0b98992039080000023e0940000321034800033e0b3800033e0a3000035108cefe83770a0428c6fe8378330733093300060a03019511f87b103308100002838833070133090a03330733000828c8fe3307501008c3fe33070150100abbfe00210442244492d2900849928410c1841042002149d22449925253c4a84287104a494a4842082144a54a53285552480800"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 3:\"contracts/Verifier.sol\"\nobject \"Pairing_1329\" {\n    code {\n        {\n            /// @src 3:1257:7120  \"library Pairing {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Pairing_1329_deployed\")\n            codecopy(_1, dataoffset(\"Pairing_1329_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 3:\"contracts/Verifier.sol\"\n    object \"Pairing_1329_deployed\" {\n        code {\n            {\n                /// @src 3:1257:7120  \"library Pairing {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220cf753ef9be9a2e61b361a4d9999b0d1a44e3ffc4d242ec2d46b4a5617474724b64736f6c634300081d0033\"\n    }\n}\n","hash":"8b158bb55984648c396b795d1c9353a449659c662e1198eef93f5b4326bd999c","factoryDependencies":{}},"Verifier":{"abi":[{"inputs":[{"internalType":"uint256[2]","name":"a","type":"uint256[2]"},{"internalType":"uint256[2][2]","name":"b","type":"uint256[2][2]"},{"internalType":"uint256[2]","name":"c","type":"uint256[2]"},{"internalType":"uint256[3]","name":"input","type":"uint256[3]"}],"name":"verifyProof","outputs":[{"internalType":"bool","name":"r","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":{"llvm_arguments":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"revive_pallet_version":null,"revive_version":"0.1.0-dev.14+commit.f6a412e.llvm-18.1.8","solc_metadata":"{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[3]\",\"name\":\"input\",\"type\":\"uint256[3]\"}],\"name\":\"verifyProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"r\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"verifyProof(uint256[2],uint256[2][2],uint256[2],uint256[3])\":{\"returns\":{\"r\":\" bool true if proof is valid\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Verifier.sol\":\"Verifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Verifier.sol\":{\"keccak256\":\"0x287d16ba786d888ca58410d5d99188582b9627bf26c414d3bf29fb912a8a4c27\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ac6974fc8a2d686b8303580acc23282cdd458950fdbfc13dce67acb31df6a6a6\",\"dweb:/ipfs/QmSA3NoFntCeuM2yFMeFGSs1jMZfEvyfZVBXL1bftxQvUh\"]}},\"version\":1}","solc_version":"0.8.29+commit.ab55807c.Darwin.appleclang"},"evm":{"assembly":"// RO data = 0/0 bytes\n// RW data = 64/65648 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 28720\n// Code size = 91124 bytes\n\n      : @0 (gas: 2)\n     0: i32 a2 = a0 >> 0x10\n     3: jump @5 if a2 != 0\n      : @1 (gas: 4)\n     6: a1 = a1 + a0\n     9: i32 a1 = a1 + 0x1f\n    12: a1 = a1 & 0xffffffffffffffe0\n    15: jump @5 if a1 >u 65536\n      : @2 (gas: 3)\n    21: a2 = 0x20044\n    26: a3 = i32 [0x20044]\n    31: jump @4 if a3 >=u a1\n      : @3 (gas: 2)\n    34: u32 [0x20044] = a1\n    39: fallthrough\n      : @4 (gas: 4)\n    40: a1 = 0x20050\n    45: i32 a0 = a0 + 0\n    47: a0 = a0 + a1\n    50: ret\n      : @5 (gas: 1)\n    52: trap\n      : @6 (gas: 6)\n    53: sp = sp + 0xfffffffffffffff0\n    56: u64 [sp + 0x8] = ra\n    59: u64 [sp] = s0\n    61: s0 = a0 & 0x1\n    64: ecalli 3 // 'call_data_size'\n    66: fallthrough\n      : @7 (gas: 2)\n    67: u32 [0x20040] = a0\n    72: jump @9 if s0 == 0\n      : @8 (gas: 1)\n    75: ra = 2, jump @10\n      : @9 [@dyn 1] (gas: 1)\n    79: ra = 4, jump @22\n      : @10 [@dyn 2] (gas: 9)\n    84: sp = sp + 0xffffffffffffffa0\n    87: u64 [sp + 0x58] = ra\n    90: u64 [sp + 0x50] = s0\n    93: u64 [sp + 0x48] = s1\n    96: s0 = sp + 0x60\n    99: sp = sp & 0xffffffffffffffe0\n   102: a2 = 0x20044\n   107: a0 = i32 [0x20044]\n   112: jump @12 if a0 >u 95\n      : @11 (gas: 2)\n   116: u32 [0x20044] = 0x60\n   122: fallthrough\n      : @12 (gas: 14)\n   123: u64 [sp + 0x18] = a2\n   126: s1 = 0x20050\n   131: u64 [0x200a0] = 0\n   136: u64 [0x20098] = 0\n   141: u64 [0x20090] = 0\n   146: a0 = 0x8000000000000000\n   156: u64 [0x200a8] = a0\n   161: u64 [sp + 56] = 0\n   164: u64 [sp + 48] = 0\n   167: u64 [sp + 40] = 0\n   170: u64 [sp + 32] = 0\n   173: i32 a0 = sp + 0x20\n   176: ecalli 7 // 'value_transferred'\n   178: fallthrough\n      : @13 (gas: 8)\n   179: a0 = u64 [sp + 0x30]\n   182: a1 = u64 [sp + 0x38]\n   185: a2 = u64 [sp + 0x28]\n   188: a3 = u64 [sp + 0x20]\n   191: a1 = a1 | a2\n   194: a0 = a0 | a3\n   197: a0 = a0 | a1\n   200: jump @15 if a0 == 0\n      : @14 (gas: 5)\n   203: i32 a1 = s1 + 0\n   205: a0 = 0x1\n   208: a2 = 0\n   210: ecalli 5 // 'seal_return'\n   212: fallthrough\n      : @15 (gas: 3)\n   213: a2 = u64 [sp + 0x18]\n   216: a0 = i32 [a2]\n   218: jump @17 if a0 >u 127\n      : @16 (gas: 2)\n   222: u32 [a2 + 0] = 0x80\n   226: fallthrough\n      : @17 (gas: 5)\n   227: i32 a0 = s1 + 0x80\n   231: a1 = 0\n   233: a2 = 0\n   235: ecalli 1 // 'call_data_copy'\n   237: fallthrough\n      : @18 (gas: 2)\n   238: a1 = i32 [0x20048]\n   243: jump @20 if a1 == 0\n      : @19 (gas: 4)\n   246: a0 = 0x30070\n   251: i32 a0 = a0 + 0\n   253: ecalli 6 // 'set_immutable_data'\n   255: fallthrough\n      : @20 (gas: 3)\n   256: a0 = 0x80\n   260: a1 = 0\n   262: ra = 6, jump @0\n      : @21 [@dyn 3] (gas: 6)\n   267: i32 a1 = a0 + 0\n   269: a0 = 0\n   271: a2 = 0\n   273: ra = 0x8\n   276: ecalli 5 // 'seal_return'\n   278: fallthrough\n      : @22 [@dyn 4] (gas: 9)\n   279: sp = sp + 0xfffffffffffffd20\n   283: u64 [sp + 0x2d8] = ra\n   287: u64 [sp + 0x2d0] = s0\n   291: u64 [sp + 0x2c8] = s1\n   295: s0 = sp + 0x2e0\n   299: sp = sp & 0xffffffffffffffe0\n   302: s1 = 0x20044\n   307: a0 = i32 [0x20044]\n   312: jump @24 if a0 >u 95\n      : @23 (gas: 2)\n   316: u32 [0x20044] = 0x60\n   322: fallthrough\n      : @24 (gas: 11)\n   323: a2 = 0x20050\n   328: a1 = 0x20040\n   333: u64 [0x200a0] = 0\n   338: u64 [0x20098] = 0\n   343: u64 [sp + 0x90] = a1\n   347: a1 = i32 [0x20040]\n   352: a0 = 0x8000000000000000\n   362: u64 [0x200a8] = a0\n   367: u64 [sp + 0xa8] = a2\n   371: u64 [0x20090] = 0\n   376: jump @84 if a1 <u 4\n      : @25 (gas: 4)\n   381: i32 a0 = sp + 0x260\n   385: a1 = 0\n   387: ecalli 2 // 'call_data_load'\n   389: fallthrough\n      : @26 (gas: 4)\n   390: a0 = u32 [sp + 0x27c]\n   394: a0 = a0 << 0x20\n   397: a1 = 0x11479fea00000000\n   407: jump @84 if a0 != a1\n      : @27 (gas: 8)\n   411: u64 [sp + 0xb0] = s1\n   415: u64 [sp + 664] = 0\n   419: u64 [sp + 656] = 0\n   423: u64 [sp + 648] = 0\n   427: u64 [sp + 640] = 0\n   431: i32 a0 = sp + 0x280\n   435: ecalli 7 // 'value_transferred'\n   437: fallthrough\n      : @28 (gas: 8)\n   438: a0 = u64 [sp + 0x290]\n   442: a1 = u64 [sp + 0x298]\n   446: a2 = u64 [sp + 0x288]\n   450: a3 = u64 [sp + 0x280]\n   454: a1 = a1 | a2\n   457: a0 = a0 | a3\n   460: a0 = a0 | a1\n   463: jump @84 if a0 != 0\n      : @29 (gas: 3)\n   467: s1 = u64 [sp + 0x90]\n   471: a0 = i32 [s1]\n   473: jump @84 if a0 <=u 355\n      : @30 (gas: 14)\n   479: a0 = a0 << 0x20\n   482: a3 = a0 >> 0x20\n   485: u64 [sp + 536] = 0\n   489: u64 [sp + 528] = 0\n   493: u64 [sp + 520] = 0\n   497: u64 [sp + 568] = 0\n   501: u64 [sp + 560] = 0\n   505: u64 [sp + 552] = 0\n   509: u64 [sp + 544] = 0x4\n   514: a0 = sp + 0x240\n   518: a1 = sp + 0x220\n   522: a2 = sp + 0x200\n   526: u64 [sp + 0x200] = a3\n   530: ra = 10, jump @105\n      : @31 [@dyn 5] (gas: 2)\n   535: a0 = i32 [s1]\n   537: jump @84 if a0 <=u 99\n      : @32 (gas: 13)\n   542: u64 [sp + 0xa0] = a0\n   546: a1 = u64 [sp + 0x258]\n   550: u64 [sp + 0x38] = a1\n   553: a1 = u64 [sp + 0x250]\n   557: u64 [sp + 0x40] = a1\n   560: a1 = u64 [sp + 0x248]\n   564: u64 [sp + 0x48] = a1\n   567: a0 = u64 [sp + 0xb0]\n   571: a1 = i32 [a0]\n   573: a2 = u64 [sp + 0x240]\n   577: u64 [sp + 0x50] = a2\n   580: t0 = u64 [sp + 0xa8]\n   584: jump @34 if a1 >u 95\n      : @33 (gas: 2)\n   588: u32 [a0 + 0] = 0x60\n   591: fallthrough\n      : @34 (gas: 14)\n   592: a1 = u64 [t0 + 0x50]\n   595: a5 = u64 [t0 + 0x58]\n   598: a3 = u64 [t0 + 0x40]\n   601: a4 = u64 [t0 + 0x48]\n   604: a2 = reverse a1\n   606: a5 = reverse a5\n   608: t2 = reverse a3\n   610: s1 = reverse a4\n   612: a0 = s1 | t2\n   615: a1 = a5 <u 0xffffffffffffffc0\n   618: a1 = 0 if a2 != 0\n   620: u64 [sp + 0xb8] = a0\n   624: a1 = 0 if a0 != 0\n   626: jump @85 if a1 == 0\n      : @35 (gas: 22)\n   630: ra = a5 + 0x40\n   633: a1 = ra <u a5\n   636: a4 = a2 + a1\n   639: a3 = a4 <u a2\n   642: a3 = a1 if a1 == 0\n   645: a3 = a3 + s1\n   648: a1 = a3 <u s1\n   651: a1 = a1 + t2\n   654: a0 = reverse a1\n   656: t1 = reverse a3\n   658: a1 = reverse a4\n   660: u64 [sp + 0x88] = ra\n   664: a3 = reverse ra\n   666: u64 [t0 + 0x58] = a3\n   669: u64 [sp + 0x68] = a1\n   672: u64 [t0 + 0x50] = a1\n   675: u64 [sp + 0x58] = t1\n   678: u64 [t0 + 0x48] = t1\n   681: u64 [sp + 0x60] = a0\n   684: u64 [t0 + 0x40] = a0\n   687: a0 = u64 [sp + 0xa0]\n   691: jump @86 if a0 <=u 195\n      : @36 (gas: 6)\n   697: u64 [sp + 0x70] = a3\n   700: a0 = a5 <u 0xffffffffffffff80\n   703: a0 = 0 if a2 != 0\n   705: a1 = u64 [sp + 0xb8]\n   709: a0 = 0 if a1 != 0\n   711: jump @85 if a0 == 0\n      : @37 (gas: 24)\n   715: a0 = a5 + 0x80\n   719: a1 = a0 <u a5\n   722: a4 = a2 + a1\n   725: a3 = a4 <u a2\n   728: a3 = a1 if a1 == 0\n   731: a3 = a3 + s1\n   734: u64 [sp + 0x80] = s1\n   738: a1 = a3 <u s1\n   741: u64 [sp + 0x78] = t2\n   744: a1 = a1 + t2\n   747: a1 = reverse a1\n   749: a3 = reverse a3\n   751: a4 = reverse a4\n   753: a0 = reverse a0\n   755: u64 [t0 + 0x58] = a0\n   758: u64 [t0 + 0x50] = a4\n   761: u64 [t0 + 0x48] = a3\n   764: u64 [t0 + 0x40] = a1\n   767: i32 a0 = sp + 0x2a0\n   771: a1 = 0x44\n   774: u64 [sp + 0xa0] = a5\n   778: u64 [sp + 0x98] = a2\n   782: ecalli 2 // 'call_data_load'\n   784: fallthrough\n      : @38 (gas: 8)\n   785: a0 = 0xffffffc0\n   795: a1 = u64 [sp + 0xa0]\n   799: a0 = a1 <u a0\n   802: a1 = u64 [sp + 0x98]\n   806: a0 = 0 if a1 != 0\n   808: a1 = u64 [sp + 0xb8]\n   812: a0 = 0 if a1 != 0\n   814: jump @83 if a0 == 0\n      : @39 (gas: 3)\n   818: s1 = u64 [sp + 0x88]\n   822: i32 a0 = s1 >> 0x10\n   825: jump @83 if a0 != 0\n      : @40 (gas: 3)\n   829: a0 = s1 + 0x3f\n   832: a0 = a0 & 0x1ffe0\n   837: jump @83 if a0 >u 65536\n      : @41 (gas: 8)\n   844: u64 [sp + 48] = 0x1ffe0\n   850: a1 = u64 [sp + 0x2b8]\n   854: a2 = u64 [sp + 0x2b0]\n   858: a3 = u64 [sp + 0x2a8]\n   862: a4 = u64 [sp + 0xb0]\n   866: a5 = i32 [a4]\n   868: a4 = u64 [sp + 0x2a0]\n   872: jump @43 if a5 >=u a0\n      : @42 (gas: 3)\n   875: a5 = u64 [sp + 0xb0]\n   879: u32 [a5] = a0\n   881: fallthrough\n      : @43 (gas: 71)\n   882: i32 a0 = s1 + 0\n   884: a5 = u64 [sp + 0xa8]\n   888: a0 = a0 + a5\n   891: a1 = reverse a1\n   893: a2 = reverse a2\n   895: a3 = reverse a3\n   897: a4 = reverse a4\n   899: a5 = a4 >> 0x38\n   902: u8 [a0 + 0x1f] = a5\n   905: a5 = a4 >> 0x30\n   908: u8 [a0 + 0x1e] = a5\n   911: a5 = a4 >> 0x28\n   914: u8 [a0 + 0x1d] = a5\n   917: a5 = a4 >> 0x20\n   920: u8 [a0 + 0x1c] = a5\n   923: a5 = a4 >> 0x18\n   926: u8 [a0 + 0x1b] = a5\n   929: a5 = a4 >> 0x10\n   932: u8 [a0 + 0x1a] = a5\n   935: a5 = a4 >> 0x8\n   938: u8 [a0 + 0x19] = a5\n   941: u8 [a0 + 0x18] = a4\n   944: u8 [a0 + 0x10] = a3\n   947: a4 = a3 >> 0x38\n   950: u8 [a0 + 0x17] = a4\n   953: a4 = a3 >> 0x30\n   956: u8 [a0 + 0x16] = a4\n   959: a4 = a3 >> 0x28\n   962: u8 [a0 + 0x15] = a4\n   965: a4 = a3 >> 0x20\n   968: u8 [a0 + 0x14] = a4\n   971: a4 = a3 >> 0x18\n   974: u8 [a0 + 0x13] = a4\n   977: a4 = a3 >> 0x10\n   980: u8 [a0 + 0x12] = a4\n   983: a3 = a3 >> 0x8\n   986: u8 [a0 + 0x11] = a3\n   989: u8 [a0 + 0x8] = a2\n   992: a3 = a2 >> 0x38\n   995: u8 [a0 + 0xf] = a3\n   998: a3 = a2 >> 0x30\n  1001: u8 [a0 + 0xe] = a3\n  1004: a3 = a2 >> 0x28\n  1007: u8 [a0 + 0xd] = a3\n  1010: a3 = a2 >> 0x20\n  1013: u8 [a0 + 0xc] = a3\n  1016: a3 = a2 >> 0x18\n  1019: u8 [a0 + 0xb] = a3\n  1022: a3 = a2 >> 0x10\n  1025: u8 [a0 + 0xa] = a3\n  1028: a2 = a2 >> 0x8\n  1031: u8 [a0 + 0x9] = a2\n  1034: u8 [a0] = a1\n  1036: a2 = a1 >> 0x38\n  1039: u8 [a0 + 0x7] = a2\n  1042: a2 = a1 >> 0x30\n  1045: u8 [a0 + 0x6] = a2\n  1048: a2 = a1 >> 0x28\n  1051: u8 [a0 + 0x5] = a2\n  1054: a2 = a1 >> 0x20\n  1057: u8 [a0 + 0x4] = a2\n  1060: a2 = a1 >> 0x18\n  1063: u8 [a0 + 0x3] = a2\n  1066: a2 = a1 >> 0x10\n  1069: u8 [a0 + 0x2] = a2\n  1072: a1 = a1 >> 0x8\n  1075: u8 [a0 + 0x1] = a1\n  1078: i32 a0 = sp + 0x2a0\n  1082: a1 = 0x64\n  1085: ecalli 2 // 'call_data_load'\n  1087: fallthrough\n      : @44 (gas: 14)\n  1088: a0 = u64 [sp + 0x80]\n  1092: a0 = a0 >u 0\n  1094: a2 = u64 [sp + 0x78]\n  1097: a1 = a2 >u 0\n  1099: a1 = a0 if a2 == 0\n  1102: a0 = 0xffffff9f\n  1112: t1 = u64 [sp + 0xa0]\n  1116: a0 = a0 <u t1\n  1119: a3 = u64 [sp + 0x98]\n  1123: a2 = a3 >u 0\n  1125: a2 = a0 if a3 == 0\n  1128: a0 = u64 [sp + 0xb8]\n  1132: a2 = a1 if a0 != 0\n  1135: jump @83 if a2 != 0\n      : @45 (gas: 3)\n  1139: i32 t2 = t1 >> 0x5\n  1142: a1 = u64 [sp + 0x30]\n  1145: jump @83 if t2 >u 2044\n      : @46 (gas: 3)\n  1151: a0 = t1 + 0x9f\n  1155: a1 = a1 & a0\n  1158: jump @83 if a1 >u 65536\n      : @47 (gas: 8)\n  1165: a2 = u64 [sp + 0x2b8]\n  1169: a3 = u64 [sp + 0x2b0]\n  1173: a4 = u64 [sp + 0x2a8]\n  1177: a0 = u64 [sp + 0xb0]\n  1181: a0 = i32 [a0]\n  1183: a5 = u64 [sp + 0x2a0]\n  1187: i32 s1 = t1 + 0x60\n  1190: jump @49 if a0 >=u a1\n      : @48 (gas: 4)\n  1193: a0 = u64 [sp + 0xb0]\n  1197: u32 [a0] = a1\n  1199: a0 = a1\n  1201: fallthrough\n      : @49 (gas: 69)\n  1202: t0 = u64 [sp + 0xa8]\n  1206: a1 = t0 + s1\n  1209: a2 = reverse a2\n  1211: a3 = reverse a3\n  1213: a4 = reverse a4\n  1215: s1 = reverse a5\n  1217: u8 [a1 + 0x18] = s1\n  1220: a5 = s1 >> 0x38\n  1223: u8 [a1 + 0x1f] = a5\n  1226: a5 = s1 >> 0x30\n  1229: u8 [a1 + 0x1e] = a5\n  1232: a5 = s1 >> 0x28\n  1235: u8 [a1 + 0x1d] = a5\n  1238: a5 = s1 >> 0x20\n  1241: u8 [a1 + 0x1c] = a5\n  1244: a5 = s1 >> 0x18\n  1247: u8 [a1 + 0x1b] = a5\n  1250: a5 = s1 >> 0x10\n  1253: u8 [a1 + 0x1a] = a5\n  1256: s1 = s1 >> 0x8\n  1259: u8 [a1 + 0x19] = s1\n  1262: u8 [a1 + 0x10] = a4\n  1265: a5 = a4 >> 0x38\n  1268: u8 [a1 + 0x17] = a5\n  1271: a5 = a4 >> 0x30\n  1274: u8 [a1 + 0x16] = a5\n  1277: a5 = a4 >> 0x28\n  1280: u8 [a1 + 0x15] = a5\n  1283: a5 = a4 >> 0x20\n  1286: u8 [a1 + 0x14] = a5\n  1289: a5 = a4 >> 0x18\n  1292: u8 [a1 + 0x13] = a5\n  1295: a5 = a4 >> 0x10\n  1298: u8 [a1 + 0x12] = a5\n  1301: a4 = a4 >> 0x8\n  1304: u8 [a1 + 0x11] = a4\n  1307: u8 [a1 + 0x8] = a3\n  1310: a4 = a3 >> 0x38\n  1313: u8 [a1 + 0xf] = a4\n  1316: a4 = a3 >> 0x30\n  1319: u8 [a1 + 0xe] = a4\n  1322: a4 = a3 >> 0x28\n  1325: u8 [a1 + 0xd] = a4\n  1328: a4 = a3 >> 0x20\n  1331: u8 [a1 + 0xc] = a4\n  1334: a4 = a3 >> 0x18\n  1337: u8 [a1 + 0xb] = a4\n  1340: a4 = a3 >> 0x10\n  1343: u8 [a1 + 0xa] = a4\n  1346: a3 = a3 >> 0x8\n  1349: u8 [a1 + 0x9] = a3\n  1352: u8 [a1] = a2\n  1354: a3 = a2 >> 0x38\n  1357: u8 [a1 + 0x7] = a3\n  1360: a3 = a2 >> 0x30\n  1363: u8 [a1 + 0x6] = a3\n  1366: a3 = a2 >> 0x28\n  1369: u8 [a1 + 0x5] = a3\n  1372: a3 = a2 >> 0x20\n  1375: u8 [a1 + 0x4] = a3\n  1378: a3 = a2 >> 0x18\n  1381: u8 [a1 + 0x3] = a3\n  1384: a3 = a2 >> 0x10\n  1387: u8 [a1 + 0x2] = a3\n  1390: a2 = a2 >> 0x8\n  1393: i32 a3 = t1 >> 0x10\n  1396: u8 [a1 + 0x1] = a2\n  1399: a2 = u64 [sp + 0x30]\n  1402: jump @83 if a3 != 0\n      : @50 (gas: 3)\n  1406: a1 = t1 + 0x3f\n  1409: a1 = a1 & a2\n  1412: jump @83 if a1 >u 65536\n      : @51 (gas: 2)\n  1419: a5 = u64 [sp + 0xb0]\n  1423: jump @53 if a0 >=u a1\n      : @52 (gas: 3)\n  1426: u32 [a5] = a1\n  1428: a0 = a1\n  1430: fallthrough\n      : @53 (gas: 69)\n  1431: i32 a1 = t1 + 0\n  1433: a1 = a1 + t0\n  1436: a3 = u64 [sp + 0x68]\n  1439: u8 [a1 + 0x10] = a3\n  1442: a4 = u64 [sp + 0x58]\n  1445: a2 = a4 >> 0x38\n  1448: u8 [a1 + 0xf] = a2\n  1451: a2 = a4 >> 0x30\n  1454: u8 [a1 + 0xe] = a2\n  1457: a2 = a4 >> 0x28\n  1460: u8 [a1 + 0xd] = a2\n  1463: a2 = a4 >> 0x20\n  1466: u8 [a1 + 0xc] = a2\n  1469: a2 = a4 >> 0x18\n  1472: u8 [a1 + 0xb] = a2\n  1475: a2 = a4 >> 0x10\n  1478: u8 [a1 + 0xa] = a2\n  1481: a2 = a4 >> 0x8\n  1484: u8 [a1 + 0x9] = a2\n  1487: u8 [a1 + 0x8] = a4\n  1490: a4 = u64 [sp + 0x60]\n  1493: a2 = a4 >> 0x38\n  1496: u8 [a1 + 0x7] = a2\n  1499: a2 = a4 >> 0x30\n  1502: u8 [a1 + 0x6] = a2\n  1505: a2 = a4 >> 0x28\n  1508: u8 [a1 + 0x5] = a2\n  1511: a2 = a4 >> 0x20\n  1514: u8 [a1 + 0x4] = a2\n  1517: a2 = a4 >> 0x18\n  1520: u8 [a1 + 0x3] = a2\n  1523: a2 = a4 >> 0x10\n  1526: u8 [a1 + 0x2] = a2\n  1529: a2 = a4 >> 0x8\n  1532: u8 [a1 + 0x1] = a2\n  1535: u8 [a1] = a4\n  1537: a4 = u64 [sp + 0x70]\n  1540: u8 [a1 + 0x18] = a4\n  1543: a2 = a3 >> 0x38\n  1546: u8 [a1 + 0x17] = a2\n  1549: a2 = a3 >> 0x30\n  1552: u8 [a1 + 0x16] = a2\n  1555: a2 = a3 >> 0x28\n  1558: u8 [a1 + 0x15] = a2\n  1561: a2 = a3 >> 0x20\n  1564: u8 [a1 + 0x14] = a2\n  1567: a2 = a3 >> 0x18\n  1570: u8 [a1 + 0x13] = a2\n  1573: a2 = a3 >> 0x10\n  1576: u8 [a1 + 0x12] = a2\n  1579: a2 = a3 >> 0x8\n  1582: u8 [a1 + 0x11] = a2\n  1585: a2 = a4 >> 0x38\n  1588: u8 [a1 + 0x1f] = a2\n  1591: a2 = a4 >> 0x30\n  1594: u8 [a1 + 0x1e] = a2\n  1597: a2 = a4 >> 0x28\n  1600: u8 [a1 + 0x1d] = a2\n  1603: a2 = a4 >> 0x20\n  1606: u8 [a1 + 0x1c] = a2\n  1609: a2 = a4 >> 0x18\n  1612: u8 [a1 + 0x1b] = a2\n  1615: a3 = a4 >> 0x10\n  1618: a2 = u64 [sp + 0x90]\n  1622: a2 = i32 [a2]\n  1624: u8 [a1 + 0x1a] = a3\n  1627: a3 = a4 >> 0x8\n  1630: u8 [a1 + 0x19] = a3\n  1633: jump @86 if a2 <u 164\n      : @54 (gas: 2)\n  1639: u64 [sp + 0x70] = a2\n  1642: jump @56 if a0 >u 95\n      : @55 (gas: 2)\n  1646: u32 [a5 + 0] = 0x60\n  1649: fallthrough\n      : @56 (gas: 23)\n  1650: a0 = u64 [t0 + 0x58]\n  1653: a1 = u64 [t0 + 0x50]\n  1656: a4 = u64 [t0 + 0x48]\n  1659: a5 = u64 [t0 + 0x40]\n  1662: u64 [sp + 0x18] = a0\n  1665: a2 = reverse a0\n  1667: u64 [sp + 0x10] = a1\n  1670: a3 = reverse a1\n  1672: s1 = reverse a4\n  1674: a1 = reverse a5\n  1676: a0 = a1 >u 0\n  1678: t1 = s1 >u 0\n  1680: t1 = a0 if a1 != 0\n  1683: ra = a3 >u 0\n  1685: a0 = a2 <u 0xffffffffffffffc0\n  1688: a0 = a0 ^ 0x1\n  1691: u64 [sp + 0x58] = ra\n  1694: a0 = ra if a3 != 0\n  1697: u64 [sp + 0xb8] = a1\n  1701: a1 = a1 | s1\n  1704: u64 [sp + 0x60] = t1\n  1707: a0 = t1 if a1 != 0\n  1710: jump @85 if a0 != 0\n      : @57 (gas: 25)\n  1714: u64 [sp + 0x28] = a1\n  1717: u64 [sp] = a5\n  1719: u64 [sp + 0x8] = a4\n  1722: u64 [sp + 0x20] = t2\n  1725: a0 = a2 + 0x40\n  1728: a1 = a0 <u a2\n  1731: a5 = a3 + a1\n  1734: a4 = a5 <u a3\n  1737: a4 = a1 if a1 == 0\n  1740: a4 = a4 + s1\n  1743: a1 = a4 <u s1\n  1746: u64 [sp + 0x68] = a2\n  1749: a2 = u64 [sp + 0xb8]\n  1753: a1 = a1 + a2\n  1756: a1 = reverse a1\n  1758: a4 = reverse a4\n  1760: a5 = reverse a5\n  1762: a0 = reverse a0\n  1764: u64 [t0 + 0x58] = a0\n  1767: u64 [t0 + 0x50] = a5\n  1770: u64 [t0 + 0x48] = a4\n  1773: u64 [t0 + 0x40] = a1\n  1776: u64 [sp + 0x88] = a3\n  1780: a1 = u64 [sp + 0x70]\n  1783: jump @84 if a1 <u 196\n      : @58 (gas: 4)\n  1789: i32 a0 = sp + 0x2a0\n  1793: a1 = 0x84\n  1797: ecalli 2 // 'call_data_load'\n  1799: fallthrough\n      : @59 (gas: 12)\n  1800: a3 = u64 [sp + 0x68]\n  1803: a0 = a3 | s1\n  1806: a1 = u64 [sp + 0xb8]\n  1810: a2 = u64 [sp + 0x88]\n  1814: a1 = a1 | a2\n  1817: a0 = a0 | a1\n  1820: a0 = a0 >> 0x20\n  1823: a1 = a1 | s1\n  1826: a1 = a1 << 0x20\n  1829: a0 = a0 | a1\n  1832: a1 = u64 [sp + 0x30]\n  1835: jump @83 if a0 != 0\n      : @60 (gas: 3)\n  1839: s1 = a3\n  1841: i32 a0 = a3 >> 0x10\n  1844: jump @83 if a0 != 0\n      : @61 (gas: 3)\n  1848: a0 = s1 + 0x3f\n  1851: a0 = a0 & a1\n  1854: jump @83 if a0 >u 65536\n      : @62 (gas: 7)\n  1861: t0 = u64 [sp + 0x2b8]\n  1865: a2 = u64 [sp + 0x2b0]\n  1869: a3 = u64 [sp + 0x2a8]\n  1873: a1 = u64 [sp + 0xb0]\n  1877: a5 = i32 [a1]\n  1879: a4 = u64 [sp + 0x2a0]\n  1883: jump @64 if a5 >=u a0\n      : @63 (gas: 2)\n  1886: u32 [a1] = a0\n  1888: fallthrough\n      : @64 (gas: 71)\n  1889: i32 a0 = s1 + 0\n  1891: a5 = u64 [sp + 0xa8]\n  1895: a0 = a0 + a5\n  1898: a1 = reverse t0\n  1900: a2 = reverse a2\n  1902: a3 = reverse a3\n  1904: a4 = reverse a4\n  1906: a5 = a4 >> 0x38\n  1909: u8 [a0 + 0x1f] = a5\n  1912: a5 = a4 >> 0x30\n  1915: u8 [a0 + 0x1e] = a5\n  1918: a5 = a4 >> 0x28\n  1921: u8 [a0 + 0x1d] = a5\n  1924: a5 = a4 >> 0x20\n  1927: u8 [a0 + 0x1c] = a5\n  1930: a5 = a4 >> 0x18\n  1933: u8 [a0 + 0x1b] = a5\n  1936: a5 = a4 >> 0x10\n  1939: u8 [a0 + 0x1a] = a5\n  1942: a5 = a4 >> 0x8\n  1945: u8 [a0 + 0x19] = a5\n  1948: u8 [a0 + 0x18] = a4\n  1951: u8 [a0 + 0x10] = a3\n  1954: a4 = a3 >> 0x38\n  1957: u8 [a0 + 0x17] = a4\n  1960: a4 = a3 >> 0x30\n  1963: u8 [a0 + 0x16] = a4\n  1966: a4 = a3 >> 0x28\n  1969: u8 [a0 + 0x15] = a4\n  1972: a4 = a3 >> 0x20\n  1975: u8 [a0 + 0x14] = a4\n  1978: a4 = a3 >> 0x18\n  1981: u8 [a0 + 0x13] = a4\n  1984: a4 = a3 >> 0x10\n  1987: u8 [a0 + 0x12] = a4\n  1990: a3 = a3 >> 0x8\n  1993: u8 [a0 + 0x11] = a3\n  1996: u8 [a0 + 0x8] = a2\n  1999: a3 = a2 >> 0x38\n  2002: u8 [a0 + 0xf] = a3\n  2005: a3 = a2 >> 0x30\n  2008: u8 [a0 + 0xe] = a3\n  2011: a3 = a2 >> 0x28\n  2014: u8 [a0 + 0xd] = a3\n  2017: a3 = a2 >> 0x20\n  2020: u8 [a0 + 0xc] = a3\n  2023: a3 = a2 >> 0x18\n  2026: u8 [a0 + 0xb] = a3\n  2029: a3 = a2 >> 0x10\n  2032: u8 [a0 + 0xa] = a3\n  2035: a2 = a2 >> 0x8\n  2038: u8 [a0 + 0x9] = a2\n  2041: u8 [a0] = a1\n  2043: a2 = a1 >> 0x38\n  2046: u8 [a0 + 0x7] = a2\n  2049: a2 = a1 >> 0x30\n  2052: u8 [a0 + 0x6] = a2\n  2055: a2 = a1 >> 0x28\n  2058: u8 [a0 + 0x5] = a2\n  2061: a2 = a1 >> 0x20\n  2064: u8 [a0 + 0x4] = a2\n  2067: a2 = a1 >> 0x18\n  2070: u8 [a0 + 0x3] = a2\n  2073: a2 = a1 >> 0x10\n  2076: u8 [a0 + 0x2] = a2\n  2079: a1 = a1 >> 0x8\n  2082: u8 [a0 + 0x1] = a1\n  2085: i32 a0 = sp + 0x2a0\n  2089: a1 = 0xa4\n  2093: ecalli 2 // 'call_data_load'\n  2095: fallthrough\n      : @65 (gas: 10)\n  2096: a0 = 0xffffffdf\n  2106: a0 = a0 <u s1\n  2109: a1 = u64 [sp + 0x88]\n  2113: a2 = u64 [sp + 0x58]\n  2116: a0 = a2 if a1 != 0\n  2119: a1 = u64 [sp + 0x60]\n  2122: a2 = u64 [sp + 0x28]\n  2125: a0 = a1 if a2 != 0\n  2128: a2 = u64 [sp + 0x30]\n  2131: jump @83 if a0 != 0\n      : @66 (gas: 2)\n  2135: i32 a0 = s1 >> 0x5\n  2138: jump @83 if a0 >u 2046\n      : @67 (gas: 3)\n  2144: a0 = s1 + 0x5f\n  2147: a1 = a0 & a2\n  2150: jump @83 if a1 >u 65536\n      : @68 (gas: 8)\n  2157: a2 = u64 [sp + 0x2b8]\n  2161: a3 = u64 [sp + 0x2b0]\n  2165: a4 = u64 [sp + 0x2a8]\n  2169: a0 = u64 [sp + 0xb0]\n  2173: a0 = i32 [a0]\n  2175: a5 = u64 [sp + 0x2a0]\n  2179: i32 s1 = s1 + 0x20\n  2182: jump @70 if a0 >=u a1\n      : @69 (gas: 4)\n  2185: a0 = u64 [sp + 0xb0]\n  2189: u32 [a0] = a1\n  2191: a0 = a1\n  2193: fallthrough\n      : @70 (gas: 70)\n  2194: a1 = u64 [sp + 0xa8]\n  2198: a1 = a1 + s1\n  2201: a2 = reverse a2\n  2203: a3 = reverse a3\n  2205: a4 = reverse a4\n  2207: s1 = reverse a5\n  2209: u8 [a1 + 0x18] = s1\n  2212: a5 = s1 >> 0x38\n  2215: u8 [a1 + 0x1f] = a5\n  2218: a5 = s1 >> 0x30\n  2221: u8 [a1 + 0x1e] = a5\n  2224: a5 = s1 >> 0x28\n  2227: u8 [a1 + 0x1d] = a5\n  2230: a5 = s1 >> 0x20\n  2233: u8 [a1 + 0x1c] = a5\n  2236: a5 = s1 >> 0x18\n  2239: u8 [a1 + 0x1b] = a5\n  2242: a5 = s1 >> 0x10\n  2245: u8 [a1 + 0x1a] = a5\n  2248: s1 = s1 >> 0x8\n  2251: u8 [a1 + 0x19] = s1\n  2254: u8 [a1 + 0x10] = a4\n  2257: a5 = a4 >> 0x38\n  2260: u8 [a1 + 0x17] = a5\n  2263: a5 = a4 >> 0x30\n  2266: u8 [a1 + 0x16] = a5\n  2269: a5 = a4 >> 0x28\n  2272: u8 [a1 + 0x15] = a5\n  2275: a5 = a4 >> 0x20\n  2278: u8 [a1 + 0x14] = a5\n  2281: a5 = a4 >> 0x18\n  2284: u8 [a1 + 0x13] = a5\n  2287: a5 = a4 >> 0x10\n  2290: u8 [a1 + 0x12] = a5\n  2293: a4 = a4 >> 0x8\n  2296: u8 [a1 + 0x11] = a4\n  2299: u8 [a1 + 0x8] = a3\n  2302: a4 = a3 >> 0x38\n  2305: u8 [a1 + 0xf] = a4\n  2308: a4 = a3 >> 0x30\n  2311: u8 [a1 + 0xe] = a4\n  2314: a4 = a3 >> 0x28\n  2317: u8 [a1 + 0xd] = a4\n  2320: a4 = a3 >> 0x20\n  2323: u8 [a1 + 0xc] = a4\n  2326: a4 = a3 >> 0x18\n  2329: u8 [a1 + 0xb] = a4\n  2332: a4 = a3 >> 0x10\n  2335: u8 [a1 + 0xa] = a4\n  2338: a3 = a3 >> 0x8\n  2341: u8 [a1 + 0x9] = a3\n  2344: u8 [a1] = a2\n  2346: a3 = a2 >> 0x38\n  2349: u8 [a1 + 0x7] = a3\n  2352: a3 = a2 >> 0x30\n  2355: u8 [a1 + 0x6] = a3\n  2358: a3 = a2 >> 0x28\n  2361: u8 [a1 + 0x5] = a3\n  2364: a3 = a2 >> 0x20\n  2367: u8 [a1 + 0x4] = a3\n  2370: a3 = a2 >> 0x18\n  2373: u8 [a1 + 0x3] = a3\n  2376: a3 = a2 >> 0x10\n  2379: u8 [a1 + 0x2] = a3\n  2382: a2 = a2 >> 0x8\n  2385: u8 [a1 + 0x1] = a2\n  2388: a4 = u64 [sp + 0xa0]\n  2392: a2 = u64 [sp + 0x30]\n  2395: a1 = u64 [sp + 0x20]\n  2398: jump @83 if a1 >u 2046\n      : @71 (gas: 3)\n  2404: a1 = a4 + 0x5f\n  2407: a1 = a1 & a2\n  2410: jump @83 if a1 >u 65536\n      : @72 (gas: 2)\n  2417: i32 a2 = a4 + 0x20\n  2420: jump @74 if a0 >=u a1\n      : @73 (gas: 3)\n  2423: a0 = u64 [sp + 0xb0]\n  2427: u32 [a0] = a1\n  2429: fallthrough\n      : @74 (gas: 69)\n  2430: a0 = u64 [sp + 0xa8]\n  2434: a0 = a0 + a2\n  2437: a3 = u64 [sp + 0x8]\n  2440: u8 [a0 + 0x8] = a3\n  2443: a2 = u64 [sp]\n  2445: a1 = a2 >> 0x38\n  2448: u8 [a0 + 0x7] = a1\n  2451: a1 = a2 >> 0x30\n  2454: u8 [a0 + 0x6] = a1\n  2457: a1 = a2 >> 0x28\n  2460: u8 [a0 + 0x5] = a1\n  2463: a1 = a2 >> 0x20\n  2466: u8 [a0 + 0x4] = a1\n  2469: a1 = a2 >> 0x18\n  2472: u8 [a0 + 0x3] = a1\n  2475: a1 = a2 >> 0x10\n  2478: u8 [a0 + 0x2] = a1\n  2481: a1 = a2 >> 0x8\n  2484: u8 [a0 + 0x1] = a1\n  2487: u8 [a0] = a2\n  2489: a2 = u64 [sp + 0x10]\n  2492: u8 [a0 + 0x10] = a2\n  2495: a1 = a3 >> 0x38\n  2498: u8 [a0 + 0xf] = a1\n  2501: a1 = a3 >> 0x30\n  2504: u8 [a0 + 0xe] = a1\n  2507: a1 = a3 >> 0x28\n  2510: u8 [a0 + 0xd] = a1\n  2513: a1 = a3 >> 0x20\n  2516: u8 [a0 + 0xc] = a1\n  2519: a1 = a3 >> 0x18\n  2522: u8 [a0 + 0xb] = a1\n  2525: a1 = a3 >> 0x10\n  2528: u8 [a0 + 0xa] = a1\n  2531: a1 = a3 >> 0x8\n  2534: u8 [a0 + 0x9] = a1\n  2537: a3 = u64 [sp + 0x18]\n  2540: u8 [a0 + 0x18] = a3\n  2543: a1 = a2 >> 0x38\n  2546: u8 [a0 + 0x17] = a1\n  2549: a1 = a2 >> 0x30\n  2552: u8 [a0 + 0x16] = a1\n  2555: a1 = a2 >> 0x28\n  2558: u8 [a0 + 0x15] = a1\n  2561: a1 = a2 >> 0x20\n  2564: u8 [a0 + 0x14] = a1\n  2567: a1 = a2 >> 0x18\n  2570: u8 [a0 + 0x13] = a1\n  2573: a1 = a2 >> 0x10\n  2576: u8 [a0 + 0x12] = a1\n  2579: a1 = a2 >> 0x8\n  2582: u8 [a0 + 0x11] = a1\n  2585: a1 = a3 >> 0x38\n  2588: u8 [a0 + 0x1f] = a1\n  2591: a1 = a3 >> 0x30\n  2594: u8 [a0 + 0x1e] = a1\n  2597: a1 = a3 >> 0x28\n  2600: u8 [a0 + 0x1d] = a1\n  2603: a1 = a3 >> 0x20\n  2606: u8 [a0 + 0x1c] = a1\n  2609: a1 = a3 >> 0x18\n  2612: u8 [a0 + 0x1b] = a1\n  2615: a2 = a3 >> 0x10\n  2618: a1 = u64 [sp + 0x90]\n  2622: a1 = i32 [a1]\n  2624: u8 [a0 + 0x1a] = a2\n  2627: a2 = a3 >> 0x8\n  2630: u8 [a0 + 0x19] = a2\n  2633: jump @84 if a1 <=u 227\n      : @75 (gas: 14)\n  2639: a1 = a1 << 0x20\n  2642: a3 = a1 >> 0x20\n  2645: u64 [sp + 440] = 0\n  2649: u64 [sp + 432] = 0\n  2653: u64 [sp + 424] = 0\n  2657: u64 [sp + 472] = 0\n  2661: u64 [sp + 464] = 0\n  2665: u64 [sp + 456] = 0\n  2669: u64 [sp + 448] = 0xc4\n  2675: a0 = sp + 0x1e0\n  2679: a1 = sp + 0x1c0\n  2683: a2 = sp + 0x1a0\n  2687: u64 [sp + 0x1a0] = a3\n  2691: ra = 12, jump @105\n      : @76 [@dyn 6] (gas: 16)\n  2696: a0 = u64 [sp + 0x1e0]\n  2700: u64 [sp + 0xb8] = a0\n  2704: a0 = u64 [sp + 0x1e8]\n  2708: u64 [sp + 0x88] = a0\n  2712: a0 = u64 [sp + 0x1f0]\n  2716: u64 [sp + 0x70] = a0\n  2719: s1 = u64 [sp + 0x1f8]\n  2723: a0 = u64 [sp + 0x90]\n  2727: a0 = u32 [a0]\n  2729: u64 [sp + 376] = 0\n  2733: u64 [sp + 368] = 0\n  2737: u64 [sp + 0x160] = a0\n  2741: a0 = sp + 0x180\n  2745: a1 = sp + 0x160\n  2749: u64 [sp + 360] = 0\n  2753: ra = 14, jump @135\n      : @77 [@dyn 7] (gas: 37)\n  2758: a0 = u64 [sp + 0x180]\n  2762: a1 = u64 [sp + 0x188]\n  2766: a2 = u64 [sp + 0x190]\n  2770: a3 = u64 [sp + 0x198]\n  2774: u64 [sp + 0xd8] = a3\n  2778: u64 [sp + 0xd0] = a2\n  2782: u64 [sp + 0xc8] = a1\n  2786: u64 [sp + 0xc0] = a0\n  2790: u64 [sp + 0xf8] = s1\n  2794: a0 = u64 [sp + 0x70]\n  2797: u64 [sp + 0xf0] = a0\n  2801: a0 = u64 [sp + 0x88]\n  2805: u64 [sp + 0xe8] = a0\n  2809: a0 = u64 [sp + 0xb8]\n  2813: u64 [sp + 0xe0] = a0\n  2817: a0 = u64 [sp + 0x78]\n  2820: u64 [sp + 0x118] = a0\n  2824: a0 = u64 [sp + 0x80]\n  2828: u64 [sp + 0x110] = a0\n  2832: a0 = u64 [sp + 0x98]\n  2836: u64 [sp + 0x108] = a0\n  2840: a0 = u64 [sp + 0xa0]\n  2844: u64 [sp + 0x100] = a0\n  2848: a0 = u64 [sp + 0x38]\n  2851: u64 [sp + 0x138] = a0\n  2855: a0 = u64 [sp + 0x40]\n  2858: u64 [sp + 0x130] = a0\n  2862: a0 = u64 [sp + 0x48]\n  2865: u64 [sp + 0x128] = a0\n  2869: a0 = sp + 0x140\n  2873: a1 = sp + 0x120\n  2877: a2 = sp + 0x100\n  2881: a3 = sp + 0xe0\n  2885: a4 = sp + 0xc0\n  2889: a5 = u64 [sp + 0x50]\n  2892: u64 [sp + 0x120] = a5\n  2896: ra = 16, jump @335\n      : @78 [@dyn 8] (gas: 7)\n  2901: t0 = u64 [sp + 0x158]\n  2905: t2 = u64 [sp + 0x150]\n  2909: t1 = u64 [sp + 0x148]\n  2913: a0 = u64 [sp + 0xb0]\n  2917: a5 = i32 [a0]\n  2919: a4 = u64 [sp + 0x140]\n  2923: jump @80 if a5 >u 95\n      : @79 (gas: 4)\n  2927: a5 = 0x60\n  2930: a0 = u64 [sp + 0xb0]\n  2934: u32 [a0] = a5\n  2936: fallthrough\n      : @80 (gas: 17)\n  2937: a2 = u64 [sp + 0xa8]\n  2941: a0 = u64 [a2 + 0x48]\n  2944: s1 = u64 [a2 + 0x58]\n  2947: a1 = u64 [a2 + 0x40]\n  2950: a2 = u64 [a2 + 0x50]\n  2953: a3 = reverse a0\n  2955: a0 = reverse s1\n  2957: a1 = reverse a1\n  2959: a2 = reverse a2\n  2961: a1 = a1 | a2\n  2964: a2 = a0 | a3\n  2967: a2 = a2 | a1\n  2970: a2 = a2 >> 0x20\n  2973: a1 = a1 | a3\n  2976: a1 = a1 << 0x20\n  2979: a1 = a1 | a2\n  2982: jump @83 if a1 != 0\n      : @81 (gas: 2)\n  2985: i32 a1 = a0 >> 0x10\n  2988: jump @83 if a1 != 0\n      : @82 (gas: 4)\n  2991: a1 = a0 + 0x3f\n  2994: s1 = u64 [sp + 0x30]\n  2997: s1 = s1 & a1\n  3000: jump @87 if s1 <=u 65536\n      : @83 (gas: 1)\n  3006: trap\n      : @84 (gas: 5)\n  3007: a1 = i32 [sp + 0xa8]\n  3011: a0 = 0x1\n  3014: a2 = 0\n  3016: ecalli 5 // 'seal_return'\n  3018: fallthrough\n      : @85 (gas: 17)\n  3019: u64 [t0 + 16] = 0\n  3022: u64 [t0 + 24] = 0\n  3025: u64 [t0 + 8] = 0\n  3028: u64 [t0 + 0] = 0x717b484e\n  3034: u32 [t0 + 32] = 0x41000000\n  3041: u32 [t0 + 20] = 0\n  3044: u32 [t0 + 24] = 0\n  3047: u32 [t0 + 28] = 0\n  3050: u32 [t0 + 8] = 0\n  3053: u32 [t0 + 12] = 0\n  3056: u32 [t0 + 16] = 0\n  3059: u32 [t0 + 4] = 0\n  3062: i32 a1 = t0 + 0\n  3064: a0 = 0x1\n  3067: a2 = 0x24\n  3070: ecalli 5 // 'seal_return'\n  3072: fallthrough\n      : @86 (gas: 5)\n  3073: i32 a1 = t0 + 0\n  3075: a0 = 0x1\n  3078: a2 = 0\n  3080: ecalli 5 // 'seal_return'\n  3082: fallthrough\n      : @87 (gas: 1)\n  3083: jump @89 if a5 >=u s1\n      : @88 (gas: 3)\n  3086: a1 = u64 [sp + 0xb0]\n  3090: u32 [a1] = s1\n  3092: fallthrough\n      : @89 (gas: 41)\n  3093: a1 = a4 | t2\n  3096: a2 = t1 | t0\n  3099: a1 = a1 | a2\n  3102: a1 = a1 >u 0\n  3104: i32 a2 = a0 + 0\n  3106: a3 = u64 [sp + 0xa8]\n  3110: a2 = a2 + a3\n  3113: u8 [a2 + 30] = 0\n  3116: u8 [a2 + 29] = 0\n  3119: u8 [a2 + 28] = 0\n  3122: u8 [a2 + 27] = 0\n  3125: u8 [a2 + 26] = 0\n  3128: u8 [a2 + 25] = 0\n  3131: u8 [a2 + 24] = 0\n  3134: u8 [a2 + 23] = 0\n  3137: u8 [a2 + 22] = 0\n  3140: u8 [a2 + 21] = 0\n  3143: u8 [a2 + 20] = 0\n  3146: u8 [a2 + 19] = 0\n  3149: u8 [a2 + 18] = 0\n  3152: u8 [a2 + 17] = 0\n  3155: u8 [a2 + 16] = 0\n  3158: u8 [a2 + 15] = 0\n  3161: u8 [a2 + 14] = 0\n  3164: u8 [a2 + 13] = 0\n  3167: u8 [a2 + 12] = 0\n  3170: u8 [a2 + 11] = 0\n  3173: u8 [a2 + 10] = 0\n  3176: u8 [a2 + 9] = 0\n  3179: u8 [a2 + 8] = 0\n  3182: u8 [a2 + 7] = 0\n  3185: u8 [a2 + 6] = 0\n  3188: u8 [a2 + 5] = 0\n  3191: u8 [a2 + 4] = 0\n  3194: u8 [a2 + 3] = 0\n  3197: u8 [a2 + 2] = 0\n  3200: u8 [a2 + 1] = 0\n  3203: u8 [a2 + 0] = 0\n  3205: u8 [a2 + 0x1f] = a1\n  3208: a1 = 0x20\n  3211: ra = 18, jump @0\n      : @90 [@dyn 9] (gas: 6)\n  3216: i32 a1 = a0 + 0\n  3218: a2 = 0x20\n  3221: a0 = 0\n  3223: ra = 0x14\n  3226: ecalli 5 // 'seal_return'\n  3228: fallthrough\n      : @91 [@dyn 10] (gas: 7)\n  3229: a1 = 0x20050\n  3234: a2 = i32 [0x20044]\n  3239: u64 [0x20068] = 0\n  3244: u64 [0x20060] = 0\n  3249: u64 [0x20050] = 0x717b484e\n  3258: u64 [0x20058] = 0\n  3263: jump @93 if a2 >u 63\n      : @92 (gas: 2)\n  3267: u32 [0x20044] = 0x40\n  3273: fallthrough\n      : @93 (gas: 16)\n  3274: sp = sp + 0xfffffffffffffff8\n  3277: u64 [sp] = ra\n  3279: u32 [0x20070] = 0x41000000\n  3288: u32 [0x2006c] = 0\n  3293: u32 [0x20068] = 0\n  3298: u32 [0x20064] = 0\n  3303: u32 [0x20060] = 0\n  3308: u32 [0x2005c] = 0\n  3313: u32 [0x20058] = 0\n  3318: u32 [0x20054] = 0\n  3323: i32 a1 = a1 + 0\n  3325: a0 = 0x1\n  3328: a2 = 0x24\n  3331: ra = 0x16\n  3334: ecalli 5 // 'seal_return'\n  3336: fallthrough\n      : @94 [@dyn 11] (gas: 6)\n  3337: sp = sp + 0xffffffffffffffe8\n  3340: u64 [sp + 0x10] = ra\n  3343: u64 [sp + 0x8] = s0\n  3346: u64 [sp] = s1\n  3348: a2 = i32 [0x20044]\n  3353: jump @96 if a2 >u 95\n      : @95 (gas: 2)\n  3357: u32 [0x20044] = 0x60\n  3363: fallthrough\n      : @96 (gas: 14)\n  3364: a1 = 0x20050\n  3369: a2 = u64 [0x200a0]\n  3374: a3 = u64 [0x200a8]\n  3379: a4 = u64 [0x20090]\n  3384: a5 = u64 [0x20098]\n  3389: t2 = reverse a2\n  3391: a3 = reverse a3\n  3393: t1 = reverse a4\n  3395: a5 = reverse a5\n  3397: t0 = a5 | t1\n  3400: a4 = a3 <u 0xffffffffffffffc0\n  3403: a4 = 0 if t2 != 0\n  3405: a4 = 0 if t0 != 0\n  3407: jump @98 if a4 == 0\n      : @97 (gas: 25)\n  3410: t0 = a3 + 0x40\n  3413: a4 = t0 <u a3\n  3416: a2 = t2 + a4\n  3419: s0 = a2 <u t2\n  3422: s0 = a4 if a4 == 0\n  3425: s0 = s0 + a5\n  3428: a4 = s0 <u a5\n  3431: a4 = a4 + t1\n  3434: s1 = reverse a4\n  3436: s0 = reverse s0\n  3438: a2 = reverse a2\n  3440: a4 = reverse t0\n  3442: u64 [0x200a8] = a4\n  3447: u64 [0x200a0] = a2\n  3452: u64 [0x20098] = s0\n  3457: u64 [0x20090] = s1\n  3462: u64 [a0 + 0x10] = a5\n  3465: u64 [a0 + 0x18] = t1\n  3468: u64 [a0] = a3\n  3470: u64 [a0 + 0x8] = t2\n  3473: ra = u64 [sp + 0x10]\n  3476: s0 = u64 [sp + 0x8]\n  3479: s1 = u64 [sp]\n  3481: sp = sp + 0x18\n  3484: ret\n      : @98 (gas: 18)\n  3486: u64 [0x20060] = 0\n  3491: u64 [0x20068] = 0\n  3496: u64 [0x20058] = 0\n  3501: u64 [0x20050] = 0x717b484e\n  3510: u32 [0x20070] = 0x41000000\n  3519: u32 [0x20064] = 0\n  3524: u32 [0x20068] = 0\n  3529: u32 [0x2006c] = 0\n  3534: u32 [0x20058] = 0\n  3539: u32 [0x2005c] = 0\n  3544: u32 [0x20060] = 0\n  3549: u32 [0x20054] = 0\n  3554: i32 a1 = a1 + 0\n  3556: a0 = 0x1\n  3559: a2 = 0x24\n  3562: ra = 0x18\n  3565: ecalli 5 // 'seal_return'\n  3567: fallthrough\n      : @99 [@dyn 12] (gas: 13)\n  3568: sp = sp + 0xffffffffffffffc0\n  3571: u64 [sp + 0x38] = ra\n  3574: u64 [sp + 0x30] = s0\n  3577: u64 [sp + 0x28] = s1\n  3580: a2 = u64 [a1 + 0x18]\n  3583: u64 [sp + 0x8] = a2\n  3586: a2 = u64 [a1 + 0x10]\n  3589: u64 [sp] = a2\n  3591: a3 = u64 [a1 + 0x8]\n  3594: s1 = i32 [0x20044]\n  3599: a4 = u64 [a1]\n  3601: u64 [sp + 0x20] = a0\n  3604: jump @101 if s1 >u 95\n      : @100 (gas: 2)\n  3608: u32 [0x20044] = 0x60\n  3614: fallthrough\n      : @101 (gas: 43)\n  3615: a1 = 0x20050\n  3620: a5 = u64 [0x200a0]\n  3625: s1 = u64 [0x200a8]\n  3630: t0 = u64 [0x20098]\n  3635: a0 = reverse a5\n  3637: s1 = reverse s1\n  3639: a5 = a4 + 0x1f\n  3642: t1 = a5 <u a4\n  3645: a2 = a3 + t1\n  3648: a5 = a5 & 0xffffffffffffffe0\n  3651: a5 = a5 + s1\n  3654: u64 [sp + 0x18] = s1\n  3657: u64 [sp + 0x10] = a5\n  3660: a5 = a5 <u s1\n  3663: a4 = a0 + a2\n  3666: t2 = a4 + a5\n  3669: s0 = u64 [0x20090]\n  3674: ra = t2 ^ a0\n  3677: s1 = t2 <u a0\n  3680: s1 = a5 if ra == 0\n  3683: a2 = a2 <u a3\n  3686: ra = reverse s0\n  3688: t0 = reverse t0\n  3690: a2 = t1 if t1 == 0\n  3693: a3 = u64 [sp]\n  3695: a2 = a2 + a3\n  3698: t1 = a2 <u a3\n  3701: a2 = a2 + t0\n  3704: s0 = a2 + s1\n  3707: a5 = u64 [sp + 0x8]\n  3710: a5 = a5 + ra\n  3713: a5 = a5 + t1\n  3716: a4 = s0 <u a2\n  3719: a2 = a2 <u t0\n  3722: a2 = a2 + a5\n  3725: a2 = a2 + a4\n  3728: a4 = a2 >u 0\n  3730: a5 = s0 >u 0\n  3732: a5 = a4 if a2 != 0\n  3735: t1 = s0 | a2\n  3738: a4 = t2 >u 0\n  3740: a4 = a5 if t1 != 0\n  3743: jump @104 if a4 != 0\n      : @102 (gas: 8)\n  3746: t1 = s0 <u t0\n  3749: a5 = a2 ^ ra\n  3752: a4 = a2 <u ra\n  3755: a4 = t1 if a5 == 0\n  3758: a3 = s0 ^ t0\n  3761: a3 = a3 | a5\n  3764: s1 = a4 if a3 != 0\n  3767: jump @104 if s1 != 0\n      : @103 (gas: 20)\n  3770: a2 = reverse a2\n  3772: a3 = reverse s0\n  3774: a4 = reverse t2\n  3776: a5 = u64 [sp + 0x10]\n  3779: a5 = reverse a5\n  3781: u64 [0x200a8] = a5\n  3786: u64 [0x200a0] = a4\n  3791: u64 [0x20098] = a3\n  3796: u64 [0x20090] = a2\n  3801: a1 = u64 [sp + 0x20]\n  3804: u64 [a1 + 0x10] = t0\n  3807: u64 [a1 + 0x18] = ra\n  3810: a2 = u64 [sp + 0x18]\n  3813: u64 [a1] = a2\n  3815: u64 [a1 + 0x8] = a0\n  3818: ra = u64 [sp + 0x38]\n  3821: s0 = u64 [sp + 0x30]\n  3824: s1 = u64 [sp + 0x28]\n  3827: sp = sp + 0x40\n  3830: ret\n      : @104 (gas: 18)\n  3832: u64 [0x20060] = 0\n  3837: u64 [0x20068] = 0\n  3842: u64 [0x20058] = 0\n  3847: u64 [0x20050] = 0x717b484e\n  3856: u32 [0x20070] = 0x41000000\n  3865: u32 [0x20064] = 0\n  3870: u32 [0x20068] = 0\n  3875: u32 [0x2006c] = 0\n  3880: u32 [0x20058] = 0\n  3885: u32 [0x2005c] = 0\n  3890: u32 [0x20060] = 0\n  3895: u32 [0x20054] = 0\n  3900: i32 a1 = a1 + 0\n  3902: a0 = 0x1\n  3905: a2 = 0x24\n  3908: ra = 0x1a\n  3911: ecalli 5 // 'seal_return'\n  3913: fallthrough\n      : @105 [@dyn 13] (gas: 22)\n  3914: sp = sp + 0xffffffffffffff20\n  3918: u64 [sp + 0xd8] = ra\n  3922: u64 [sp + 0xd0] = s0\n  3926: u64 [sp + 0xc8] = s1\n  3930: s0 = sp + 0xe0\n  3934: sp = sp & 0xffffffffffffffe0\n  3937: a3 = u64 [a2 + 0x18]\n  3940: u64 [sp + 0x90] = a3\n  3944: a3 = u64 [a2 + 0x10]\n  3947: u64 [sp + 0x98] = a3\n  3951: t0 = u64 [a2 + 0x8]\n  3954: t1 = u64 [a2]\n  3956: a2 = 0x20044\n  3961: t2 = u64 [a1 + 0x18]\n  3964: a5 = u64 [a1 + 0x10]\n  3967: u64 [sp + 0x80] = a5\n  3971: a3 = u64 [a1 + 0x8]\n  3974: u64 [sp + 0x60] = a2\n  3977: s1 = i32 [0x20044]\n  3982: a4 = u64 [a1]\n  3984: u64 [sp] = a0\n  3986: jump @107 if s1 >u 95\n      : @106 (gas: 3)\n  3990: a1 = u64 [sp + 0x60]\n  3993: u32 [a1 + 0] = 0x60\n  3996: fallthrough\n      : @107 (gas: 17)\n  3997: ra = 0x20050\n  4002: a0 = u64 [0x200a0]\n  4007: a1 = u64 [0x200a8]\n  4012: a5 = u64 [0x20090]\n  4017: a2 = u64 [0x20098]\n  4022: s1 = reverse a0\n  4024: a1 = reverse a1\n  4026: a5 = reverse a5\n  4028: a0 = reverse a2\n  4030: u64 [sp + 0x8] = a0\n  4033: a0 = a0 | a5\n  4036: u64 [sp + 0x10] = a1\n  4039: a1 = a1 <u 0xffffffffffffffc0\n  4042: u64 [sp + 0x18] = s1\n  4045: a1 = 0 if s1 != 0\n  4047: a1 = 0 if a0 != 0\n  4049: jump @121 if a1 == 0\n      : @108 (gas: 48)\n  4053: a2 = a4 + 0x40\n  4056: u64 [sp + 0x70] = a4\n  4059: a0 = a2 <u a4\n  4062: a4 = a3 + a0\n  4065: a1 = a4 <u a3\n  4068: a1 = a0 if a0 == 0\n  4071: u64 [sp + 0x78] = a3\n  4074: a0 = u64 [sp + 0x80]\n  4078: a1 = a1 + a0\n  4081: a0 = a1 <u a0\n  4084: a3 = t2 + a0\n  4087: u64 [sp + 0x58] = a2\n  4090: t1 = t1 <u a2\n  4093: a2 = a4 ^ t0\n  4096: u64 [sp + 0x50] = a4\n  4099: a0 = t0 <u a4\n  4102: a0 = t1 if a2 == 0\n  4105: t0 = u64 [sp + 0x98]\n  4109: t1 = t0 <u a1\n  4112: a4 = u64 [sp + 0x90]\n  4116: a2 = a3 ^ a4\n  4119: u64 [sp + 0x40] = a3\n  4122: a4 = a4 <u a3\n  4125: a4 = t1 if a2 == 0\n  4128: s1 = u64 [sp + 0x10]\n  4131: t1 = s1 + 0x40\n  4134: u64 [sp + 0x48] = a1\n  4137: a3 = a1 ^ t0\n  4140: a2 = a2 | a3\n  4143: a3 = t1 <u s1\n  4146: a0 = a4 if a2 != 0\n  4149: a1 = u64 [sp + 0x18]\n  4152: a2 = a1 + a3\n  4155: a4 = a2 <u a1\n  4158: a4 = a3 if a3 == 0\n  4161: a1 = reverse t1\n  4163: u64 [0x200a8] = a1\n  4168: a3 = u64 [sp + 0x8]\n  4171: a4 = a4 + a3\n  4174: a1 = reverse a2\n  4176: u64 [0x200a0] = a1\n  4181: a1 = reverse a4\n  4183: u64 [0x20098] = a1\n  4188: a1 = a4 <u a3\n  4191: a1 = a1 + a5\n  4194: a1 = reverse a1\n  4196: u64 [0x20090] = a1\n  4201: jump @122 if a0 != 0\n      : @109 (gas: 11)\n  4205: t1 = u64 [sp + 0x78]\n  4208: a0 = t1 + 0x1\n  4211: t0 = u64 [sp + 0x70]\n  4214: a1 = t0 <u 0xffffffffffffffc0\n  4217: a1 = a1 ^ 0x1\n  4220: a1 = 0 if a0 != 0\n  4222: a2 = u64 [sp + 0x80]\n  4226: a0 = a2 & t2\n  4229: a0 = a0 + 0x1\n  4232: a1 = 0 if a0 != 0\n  4234: jump @119 if a1 != 0\n      : @110 (gas: 12)\n  4238: i32 a0 = sp + 0xa0\n  4242: u64 [sp + 0x38] = a0\n  4245: u64 [sp + 40] = 0x1ffe0\n  4251: a1 = u64 [sp + 0x10]\n  4254: a0 = u64 [sp + 0x18]\n  4257: u64 [sp + 0x88] = a0\n  4261: a0 = u64 [sp + 0x8]\n  4264: u64 [sp + 0x90] = a0\n  4268: u64 [sp + 0x98] = a5\n  4272: u64 [sp + 0x20] = a5\n  4275: u64 [sp + 0x30] = ra\n  4278: jump @112\n      : @111 (gas: 113)\n  4281: a1 = u64 [sp + 0xb8]\n  4285: a2 = u64 [sp + 0xa0]\n  4289: a3 = u64 [sp + 0xa8]\n  4293: i32 a0 = s1 + 0\n  4295: a0 = a0 + a4\n  4298: a2 = reverse a2\n  4300: a4 = a2 >> 0x38\n  4303: u8 [a0 + 0x1f] = a4\n  4306: a4 = a2 >> 0x30\n  4309: u8 [a0 + 0x1e] = a4\n  4312: a4 = a2 >> 0x28\n  4315: u8 [a0 + 0x1d] = a4\n  4318: a4 = a2 >> 0x20\n  4321: u8 [a0 + 0x1c] = a4\n  4324: a4 = a2 >> 0x18\n  4327: u8 [a0 + 0x1b] = a4\n  4330: a4 = a2 >> 0x10\n  4333: u8 [a0 + 0x1a] = a4\n  4336: a4 = a2 >> 0x8\n  4339: u8 [a0 + 0x19] = a4\n  4342: a4 = u64 [sp + 0xb0]\n  4346: a3 = reverse a3\n  4348: u8 [a0 + 0x18] = a2\n  4351: a2 = a3 >> 0x38\n  4354: u8 [a0 + 0x17] = a2\n  4357: a2 = a3 >> 0x30\n  4360: u8 [a0 + 0x16] = a2\n  4363: a2 = a3 >> 0x28\n  4366: u8 [a0 + 0x15] = a2\n  4369: a2 = a3 >> 0x20\n  4372: u8 [a0 + 0x14] = a2\n  4375: a2 = a3 >> 0x18\n  4378: u8 [a0 + 0x13] = a2\n  4381: a2 = a3 >> 0x10\n  4384: u8 [a0 + 0x12] = a2\n  4387: a1 = reverse a1\n  4389: a2 = reverse a4\n  4391: u8 [a0 + 0x10] = a3\n  4394: a3 = a3 >> 0x8\n  4397: u8 [a0 + 0x11] = a3\n  4400: u8 [a0 + 0x8] = a2\n  4403: a3 = a2 >> 0x38\n  4406: u8 [a0 + 0xf] = a3\n  4409: a3 = a2 >> 0x30\n  4412: u8 [a0 + 0xe] = a3\n  4415: a3 = a2 >> 0x28\n  4418: u8 [a0 + 0xd] = a3\n  4421: a3 = a2 >> 0x20\n  4424: u8 [a0 + 0xc] = a3\n  4427: a3 = a2 >> 0x18\n  4430: u8 [a0 + 0xb] = a3\n  4433: a3 = a2 >> 0x10\n  4436: u8 [a0 + 0xa] = a3\n  4439: a2 = a2 >> 0x8\n  4442: u8 [a0 + 0x9] = a2\n  4445: u8 [a0] = a1\n  4447: a2 = a1 >> 0x38\n  4450: u8 [a0 + 0x7] = a2\n  4453: a2 = a1 >> 0x30\n  4456: u8 [a0 + 0x6] = a2\n  4459: a2 = a1 >> 0x28\n  4462: u8 [a0 + 0x5] = a2\n  4465: a2 = a1 >> 0x20\n  4468: u8 [a0 + 0x4] = a2\n  4471: a2 = a1 >> 0x18\n  4474: u8 [a0 + 0x3] = a2\n  4477: a2 = a1 >> 0x10\n  4480: u8 [a0 + 0x2] = a2\n  4483: a1 = a1 >> 0x8\n  4486: u8 [a0 + 0x1] = a1\n  4489: a0 = u64 [sp + 0x70]\n  4492: t0 = a0 + 0x20\n  4495: a2 = t0 <u a0\n  4498: t1 = ra + a2\n  4501: a3 = t1 <u ra\n  4504: a3 = a2 if a2 == 0\n  4507: a0 = u64 [sp + 0x80]\n  4511: a2 = a0 + a3\n  4514: a3 = a2 <u a0\n  4517: t2 = t2 + a3\n  4520: a4 = u64 [sp + 0x48]\n  4523: a1 = s1\n  4525: ra = a2 <u a4\n  4528: a0 = u64 [sp + 0x58]\n  4531: a5 = t0 <u a0\n  4534: a0 = u64 [sp + 0x50]\n  4537: s1 = t1 ^ a0\n  4540: a3 = t1 <u a0\n  4543: a3 = a5 if s1 == 0\n  4546: a0 = u64 [sp + 0x40]\n  4549: a5 = t2 ^ a0\n  4552: s1 = t2 <u a0\n  4555: s1 = ra if a5 == 0\n  4558: a4 = a4 ^ a2\n  4561: a4 = a4 | a5\n  4564: a3 = s1 if a4 != 0\n  4567: a4 = a1 + 0x20\n  4570: a5 = a4 <u a1\n  4573: a0 = u64 [sp + 0x88]\n  4577: s1 = a0 + a5\n  4580: a0 = s1 <u a0\n  4583: a0 = a5 if a5 == 0\n  4586: a1 = u64 [sp + 0x90]\n  4590: a0 = a0 + a1\n  4593: a5 = a0 <u a1\n  4596: a1 = u64 [sp + 0x98]\n  4600: a1 = a1 + a5\n  4603: u64 [sp + 0x98] = a1\n  4607: a1 = a4\n  4609: u64 [sp + 0x88] = s1\n  4613: u64 [sp + 0x90] = a0\n  4617: a5 = u64 [sp + 0x20]\n  4620: jump @119 if a3 == 0\n      : @112 (gas: 12)\n  4624: s1 = a1\n  4626: a0 = t0 | a2\n  4629: u64 [sp + 0x68] = t2\n  4632: u64 [sp + 0x78] = t1\n  4635: a1 = t1 | t2\n  4638: a0 = a0 | a1\n  4641: a0 = a0 >> 0x20\n  4644: u64 [sp + 0x80] = a2\n  4648: a1 = a1 | a2\n  4651: a1 = a1 << 0x20\n  4654: a0 = a0 | a1\n  4657: jump @120 if a0 != 0\n      : @113 (gas: 5)\n  4661: u64 [sp + 0x70] = t0\n  4664: i32 a1 = t0 + 0\n  4666: a0 = u64 [sp + 0x38]\n  4669: ecalli 2 // 'call_data_load'\n  4671: fallthrough\n      : @114 (gas: 11)\n  4672: a2 = u64 [sp + 0x90]\n  4676: a0 = s1 | a2\n  4679: a1 = u64 [sp + 0x98]\n  4683: a3 = u64 [sp + 0x88]\n  4687: a1 = a1 | a3\n  4690: a0 = a0 | a1\n  4693: a0 = a0 >> 0x20\n  4696: a1 = a1 | a2\n  4699: a1 = a1 << 0x20\n  4702: a0 = a0 | a1\n  4705: jump @120 if a0 != 0\n      : @115 (gas: 3)\n  4708: i32 a0 = s1 >> 0x10\n  4711: a4 = u64 [sp + 0x30]\n  4714: jump @120 if a0 != 0\n      : @116 (gas: 4)\n  4717: a0 = s1 + 0x3f\n  4720: a1 = u64 [sp + 0x28]\n  4723: a0 = a0 & a1\n  4726: jump @120 if a0 >u 65536\n      : @117 (gas: 5)\n  4732: a1 = u64 [sp + 0x60]\n  4735: a1 = i32 [a1]\n  4737: t2 = u64 [sp + 0x68]\n  4740: ra = u64 [sp + 0x78]\n  4743: jump @111 if a1 >=u a0\n      : @118 (gas: 3)\n  4747: a1 = u64 [sp + 0x60]\n  4750: u32 [a1] = a0\n  4752: jump @111\n      : @119 (gas: 14)\n  4755: a0 = u64 [sp]\n  4757: a1 = u64 [sp + 0x10]\n  4760: u64 [a0] = a1\n  4762: a1 = u64 [sp + 0x18]\n  4765: u64 [a0 + 0x8] = a1\n  4768: a1 = u64 [sp + 0x8]\n  4771: u64 [a0 + 0x10] = a1\n  4774: u64 [a0 + 0x18] = a5\n  4777: sp = s0 + 0xffffffffffffff20\n  4781: ra = u64 [sp + 0xd8]\n  4785: s0 = u64 [sp + 0xd0]\n  4789: s1 = u64 [sp + 0xc8]\n  4793: sp = sp + 0xe0\n  4797: ret\n      : @120 (gas: 1)\n  4799: trap\n      : @121 (gas: 18)\n  4800: u64 [0x20060] = 0\n  4805: u64 [0x20068] = 0\n  4810: u64 [0x20058] = 0\n  4815: u64 [0x20050] = 0x717b484e\n  4824: u32 [0x20070] = 0x41000000\n  4833: u32 [0x20064] = 0\n  4838: u32 [0x20068] = 0\n  4843: u32 [0x2006c] = 0\n  4848: u32 [0x20058] = 0\n  4853: u32 [0x2005c] = 0\n  4858: u32 [0x20060] = 0\n  4863: u32 [0x20054] = 0\n  4868: i32 a1 = ra + 0\n  4870: a0 = 0x1\n  4873: a2 = 0x24\n  4876: ra = 0x1c\n  4879: ecalli 5 // 'seal_return'\n  4881: fallthrough\n      : @122 [@dyn 14] (gas: 6)\n  4882: i32 a1 = ra + 0\n  4884: a0 = 0x1\n  4887: a2 = 0\n  4889: ra = 0x1e\n  4892: ecalli 5 // 'seal_return'\n  4894: fallthrough\n      : @123 [@dyn 15] (gas: 20)\n  4895: sp = sp + 0xffffffffffffff80\n  4898: u64 [sp + 0x78] = ra\n  4901: u64 [sp + 0x70] = s0\n  4904: u64 [sp + 0x68] = s1\n  4907: s0 = sp + 0x80\n  4911: sp = sp & 0xfffffffffffffff0\n  4914: a2 = u64 [a1 + 0x8]\n  4917: t0 = u64 [a1]\n  4919: a4 = u64 [a1 + 0x10]\n  4922: a3 = u64 [a1 + 0x18]\n  4925: a1 = a2 >u 0\n  4927: s1 = t0 <u 0x24\n  4930: s1 = s1 ^ 0x1\n  4933: s1 = a1 if a2 != 0\n  4936: a1 = a3 >s 0\n  4938: a5 = a4 >u 0\n  4940: a5 = a1 if a3 != 0\n  4943: a1 = a4 | a3\n  4946: a5 = s1 if a1 == 0\n  4949: jump @126 if a5 == 0\n      : @124 (gas: 13)\n  4952: s1 = a0\n  4954: u64 [sp] = t0\n  4956: u64 [sp + 56] = 0\n  4959: u64 [sp + 48] = 0\n  4962: u64 [sp + 40] = 0\n  4965: u64 [sp + 32] = 0x4\n  4969: u64 [sp + 0x8] = a2\n  4972: u64 [sp + 0x10] = a4\n  4975: a0 = sp + 0x40\n  4978: a1 = sp + 0x20\n  4981: a2 = sp\n  4983: u64 [sp + 0x18] = a3\n  4986: ra = 32, jump @105\n      : @125 [@dyn 16] (gas: 14)\n  4991: a0 = u64 [sp + 0x50]\n  4994: a1 = u64 [sp + 0x58]\n  4997: a2 = u64 [sp + 0x40]\n  5000: a3 = u64 [sp + 0x48]\n  5003: u64 [s1 + 0x10] = a0\n  5006: u64 [s1 + 0x18] = a1\n  5009: u64 [s1] = a2\n  5011: u64 [s1 + 0x8] = a3\n  5014: sp = s0 + 0xffffffffffffff80\n  5017: ra = u64 [sp + 0x78]\n  5020: s0 = u64 [sp + 0x70]\n  5023: s1 = u64 [sp + 0x68]\n  5026: sp = sp + 0x80\n  5030: ret\n      : @126 (gas: 7)\n  5032: a1 = 0x20050\n  5037: i32 a1 = a1 + 0\n  5039: a0 = 0x1\n  5042: a2 = 0\n  5044: ra = 0x22\n  5047: ecalli 5 // 'seal_return'\n  5049: fallthrough\n      : @127 [@dyn 17] (gas: 20)\n  5050: sp = sp + 0xffffffffffffff80\n  5053: u64 [sp + 0x78] = ra\n  5056: u64 [sp + 0x70] = s0\n  5059: u64 [sp + 0x68] = s1\n  5062: s0 = sp + 0x80\n  5066: sp = sp & 0xfffffffffffffff0\n  5069: a2 = u64 [a1 + 0x8]\n  5072: t0 = u64 [a1]\n  5074: a4 = u64 [a1 + 0x10]\n  5077: a3 = u64 [a1 + 0x18]\n  5080: a1 = a2 >u 0\n  5082: s1 = t0 <u 0xe4\n  5086: s1 = s1 ^ 0x1\n  5089: s1 = a1 if a2 != 0\n  5092: a1 = a3 >s 0\n  5094: a5 = a4 >u 0\n  5096: a5 = a1 if a3 != 0\n  5099: a1 = a4 | a3\n  5102: a5 = s1 if a1 == 0\n  5105: jump @130 if a5 == 0\n      : @128 (gas: 13)\n  5108: s1 = a0\n  5110: u64 [sp] = t0\n  5112: u64 [sp + 56] = 0\n  5115: u64 [sp + 48] = 0\n  5118: u64 [sp + 40] = 0\n  5121: u64 [sp + 32] = 0xc4\n  5126: u64 [sp + 0x8] = a2\n  5129: u64 [sp + 0x10] = a4\n  5132: a0 = sp + 0x40\n  5135: a1 = sp + 0x20\n  5138: a2 = sp\n  5140: u64 [sp + 0x18] = a3\n  5143: ra = 36, jump @105\n      : @129 [@dyn 18] (gas: 14)\n  5148: a0 = u64 [sp + 0x50]\n  5151: a1 = u64 [sp + 0x58]\n  5154: a2 = u64 [sp + 0x40]\n  5157: a3 = u64 [sp + 0x48]\n  5160: u64 [s1 + 0x10] = a0\n  5163: u64 [s1 + 0x18] = a1\n  5166: u64 [s1] = a2\n  5168: u64 [s1 + 0x8] = a3\n  5171: sp = s0 + 0xffffffffffffff80\n  5174: ra = u64 [sp + 0x78]\n  5177: s0 = u64 [sp + 0x70]\n  5180: s1 = u64 [sp + 0x68]\n  5183: sp = sp + 0x80\n  5187: ret\n      : @130 (gas: 7)\n  5189: a1 = 0x20050\n  5194: i32 a1 = a1 + 0\n  5196: a0 = 0x1\n  5199: a2 = 0\n  5201: ra = 0x26\n  5204: ecalli 5 // 'seal_return'\n  5206: fallthrough\n      : @131 [@dyn 19] (gas: 37)\n  5207: sp = sp + 0xffffffffffffff60\n  5211: u64 [sp + 0x98] = ra\n  5215: u64 [sp + 0x90] = s0\n  5219: u64 [sp + 0x88] = s1\n  5223: s0 = sp + 0xa0\n  5227: sp = sp & 0xfffffffffffffff0\n  5230: t2 = u64 [a1]\n  5232: a5 = u64 [a2 + 0x8]\n  5235: ra = u64 [a1 + 0x8]\n  5238: s1 = u64 [a2]\n  5240: a3 = t2 + 0x1f\n  5243: t0 = a3 <u t2\n  5246: a4 = ra + t0\n  5249: u64 [sp + 0x10] = s1\n  5252: a3 = a3 <u s1\n  5255: s1 = a4 ^ a5\n  5258: u64 [sp + 0x18] = a5\n  5261: t1 = a4 <u a5\n  5264: t1 = a3 if s1 == 0\n  5267: a3 = u64 [a1 + 0x10]\n  5270: a5 = a4 <u ra\n  5273: a5 = t0 if t0 == 0\n  5276: a4 = u64 [a2 + 0x18]\n  5279: s1 = u64 [a1 + 0x18]\n  5282: a1 = u64 [a2 + 0x10]\n  5285: a5 = a5 + a3\n  5288: a2 = a5 <u a3\n  5291: u64 [sp + 0x8] = s1\n  5294: a2 = a2 + s1\n  5297: s1 = a2 ^ a4\n  5300: a2 = a2 <s a4\n  5303: t0 = a5 <u a1\n  5306: a2 = t0 if s1 == 0\n  5309: a5 = a5 ^ a1\n  5312: a5 = a5 | s1\n  5315: t1 = a2 if a5 != 0\n  5318: jump @134 if t1 == 0\n      : @132 (gas: 16)\n  5321: s1 = a0\n  5323: a0 = u64 [sp + 0x10]\n  5326: u64 [sp + 0x20] = a0\n  5329: u64 [sp + 0x40] = t2\n  5332: a0 = u64 [sp + 0x18]\n  5335: u64 [sp + 0x28] = a0\n  5338: u64 [sp + 0x48] = ra\n  5341: u64 [sp + 0x30] = a1\n  5344: u64 [sp + 0x50] = a3\n  5347: u64 [sp + 0x38] = a4\n  5350: a0 = sp + 0x60\n  5353: a1 = sp + 0x40\n  5356: a2 = sp + 0x20\n  5359: a3 = u64 [sp + 0x8]\n  5362: u64 [sp + 0x58] = a3\n  5365: ra = 40, jump @105\n      : @133 [@dyn 20] (gas: 14)\n  5370: a0 = u64 [sp + 0x70]\n  5373: a1 = u64 [sp + 0x78]\n  5376: a2 = u64 [sp + 0x60]\n  5379: a3 = u64 [sp + 0x68]\n  5382: u64 [s1 + 0x10] = a0\n  5385: u64 [s1 + 0x18] = a1\n  5388: u64 [s1] = a2\n  5390: u64 [s1 + 0x8] = a3\n  5393: sp = s0 + 0xffffffffffffff60\n  5397: ra = u64 [sp + 0x98]\n  5401: s0 = u64 [sp + 0x90]\n  5405: s1 = u64 [sp + 0x88]\n  5409: sp = sp + 0xa0\n  5413: ret\n      : @134 (gas: 7)\n  5415: a1 = 0x20050\n  5420: i32 a1 = a1 + 0\n  5422: a0 = 0x1\n  5425: a2 = 0\n  5427: ra = 0x2a\n  5430: ecalli 5 // 'seal_return'\n  5432: fallthrough\n      : @135 [@dyn 21] (gas: 20)\n  5433: sp = sp + 0xffffffffffffff60\n  5437: u64 [sp + 0x98] = ra\n  5441: u64 [sp + 0x90] = s0\n  5445: u64 [sp + 0x88] = s1\n  5449: s0 = sp + 0xa0\n  5453: sp = sp & 0xffffffffffffffe0\n  5456: t1 = u64 [a1 + 0x8]\n  5459: a2 = u64 [a1]\n  5461: a4 = u64 [a1 + 0x10]\n  5464: a1 = u64 [a1 + 0x18]\n  5467: a5 = t1 >u 0\n  5469: s1 = a2 <u 0x124\n  5473: s1 = s1 ^ 0x1\n  5476: s1 = a5 if t1 != 0\n  5479: a5 = a1 >s 0\n  5481: a3 = a4 >u 0\n  5483: a3 = a5 if a1 != 0\n  5486: a1 = a1 | a4\n  5489: a3 = s1 if a1 == 0\n  5492: jump @160 if a3 == 0\n      : @136 (gas: 5)\n  5496: u64 [sp + 0x58] = a2\n  5499: u64 [sp + 0x18] = a0\n  5502: a2 = 0x20044\n  5507: a0 = i32 [0x20044]\n  5512: jump @138 if a0 >u 95\n      : @137 (gas: 2)\n  5516: u32 [0x20044] = 0x60\n  5522: fallthrough\n      : @138 (gas: 16)\n  5523: u64 [sp + 0x38] = a2\n  5526: t0 = 0x20050\n  5531: a0 = u64 [0x200a0]\n  5536: a3 = u64 [0x200a8]\n  5541: a4 = u64 [0x20090]\n  5546: a5 = u64 [0x20098]\n  5551: s1 = reverse a0\n  5553: t2 = reverse a3\n  5555: ra = reverse a4\n  5557: a2 = reverse a5\n  5559: a3 = a2 | ra\n  5562: a0 = t2 <u 0xffffffffffffffa0\n  5565: a0 = 0 if s1 != 0\n  5567: u64 [sp + 0x30] = a3\n  5570: a0 = 0 if a3 != 0\n  5572: jump @161 if a0 == 0\n      : @139 (gas: 25)\n  5576: a0 = t2 + 0x60\n  5579: a3 = a0 <u t2\n  5582: a4 = s1 + a3\n  5585: a5 = a4 <u s1\n  5588: a5 = a3 if a3 == 0\n  5591: a0 = reverse a0\n  5593: u64 [0x200a8] = a0\n  5598: a5 = a5 + a2\n  5601: a0 = reverse a4\n  5603: u64 [0x200a0] = a0\n  5608: a0 = reverse a5\n  5610: u64 [0x20098] = a0\n  5615: a0 = u64 [sp + 0x58]\n  5618: a0 = a0 <u 0x164\n  5622: a0 = 0 if t1 != 0\n  5624: a0 = 0 if a1 != 0\n  5626: a1 = a5 <u a2\n  5629: a1 = a1 + ra\n  5632: a1 = reverse a1\n  5634: u64 [sp + 0x40] = t0\n  5637: u64 [0x20090] = a1\n  5642: u64 [sp + 0x58] = s1\n  5645: u64 [sp + 0x50] = t2\n  5648: u64 [sp + 0x48] = ra\n  5651: jump @162 if a0 != 0\n      : @140 (gas: 5)\n  5655: s1 = a2\n  5657: i32 a0 = sp + 0x60\n  5660: a1 = 0x104\n  5664: ecalli 2 // 'call_data_load'\n  5666: fallthrough\n      : @141 (gas: 11)\n  5667: a2 = u64 [sp + 0x50]\n  5670: a0 = a2 | s1\n  5673: a1 = u64 [sp + 0x58]\n  5676: a3 = u64 [sp + 0x48]\n  5679: a1 = a1 | a3\n  5682: a0 = a0 | a1\n  5685: a0 = a0 >> 0x20\n  5688: a1 = a1 | s1\n  5691: a1 = a1 << 0x20\n  5694: a0 = a0 | a1\n  5697: jump @159 if a0 != 0\n      : @142 (gas: 3)\n  5701: t0 = a2\n  5703: i32 a0 = a2 >> 0x10\n  5706: jump @159 if a0 != 0\n      : @143 (gas: 4)\n  5710: a0 = t0 + 0x3f\n  5713: u64 [sp + 32] = 0x1ffe0\n  5719: a0 = a0 & 0x1ffe0\n  5724: jump @159 if a0 >u 65536\n      : @144 (gas: 8)\n  5731: u64 [sp + 0x28] = s1\n  5734: a1 = u64 [sp + 0x78]\n  5737: a2 = u64 [sp + 0x70]\n  5740: a3 = u64 [sp + 0x68]\n  5743: s1 = u64 [sp + 0x38]\n  5746: a5 = i32 [s1]\n  5748: a4 = u64 [sp + 0x60]\n  5751: jump @146 if a5 >=u a0\n      : @145 (gas: 2)\n  5754: u32 [s1] = a0\n  5756: fallthrough\n      : @146 (gas: 71)\n  5757: i32 a0 = t0 + 0\n  5759: a5 = u64 [sp + 0x40]\n  5762: a0 = a0 + a5\n  5765: a1 = reverse a1\n  5767: a2 = reverse a2\n  5769: a3 = reverse a3\n  5771: a4 = reverse a4\n  5773: a5 = a4 >> 0x38\n  5776: u8 [a0 + 0x1f] = a5\n  5779: a5 = a4 >> 0x30\n  5782: u8 [a0 + 0x1e] = a5\n  5785: a5 = a4 >> 0x28\n  5788: u8 [a0 + 0x1d] = a5\n  5791: a5 = a4 >> 0x20\n  5794: u8 [a0 + 0x1c] = a5\n  5797: a5 = a4 >> 0x18\n  5800: u8 [a0 + 0x1b] = a5\n  5803: a5 = a4 >> 0x10\n  5806: u8 [a0 + 0x1a] = a5\n  5809: a5 = a4 >> 0x8\n  5812: u8 [a0 + 0x19] = a5\n  5815: u8 [a0 + 0x18] = a4\n  5818: u8 [a0 + 0x10] = a3\n  5821: a4 = a3 >> 0x38\n  5824: u8 [a0 + 0x17] = a4\n  5827: a4 = a3 >> 0x30\n  5830: u8 [a0 + 0x16] = a4\n  5833: a4 = a3 >> 0x28\n  5836: u8 [a0 + 0x15] = a4\n  5839: a4 = a3 >> 0x20\n  5842: u8 [a0 + 0x14] = a4\n  5845: a4 = a3 >> 0x18\n  5848: u8 [a0 + 0x13] = a4\n  5851: a4 = a3 >> 0x10\n  5854: u8 [a0 + 0x12] = a4\n  5857: a3 = a3 >> 0x8\n  5860: u8 [a0 + 0x11] = a3\n  5863: u8 [a0 + 0x8] = a2\n  5866: a3 = a2 >> 0x38\n  5869: u8 [a0 + 0xf] = a3\n  5872: a3 = a2 >> 0x30\n  5875: u8 [a0 + 0xe] = a3\n  5878: a3 = a2 >> 0x28\n  5881: u8 [a0 + 0xd] = a3\n  5884: a3 = a2 >> 0x20\n  5887: u8 [a0 + 0xc] = a3\n  5890: a3 = a2 >> 0x18\n  5893: u8 [a0 + 0xb] = a3\n  5896: a3 = a2 >> 0x10\n  5899: u8 [a0 + 0xa] = a3\n  5902: a2 = a2 >> 0x8\n  5905: u8 [a0 + 0x9] = a2\n  5908: u8 [a0] = a1\n  5910: a2 = a1 >> 0x38\n  5913: u8 [a0 + 0x7] = a2\n  5916: a2 = a1 >> 0x30\n  5919: u8 [a0 + 0x6] = a2\n  5922: a2 = a1 >> 0x28\n  5925: u8 [a0 + 0x5] = a2\n  5928: a2 = a1 >> 0x20\n  5931: u8 [a0 + 0x4] = a2\n  5934: a2 = a1 >> 0x18\n  5937: u8 [a0 + 0x3] = a2\n  5940: a2 = a1 >> 0x10\n  5943: u8 [a0 + 0x2] = a2\n  5946: a1 = a1 >> 0x8\n  5949: u8 [a0 + 0x1] = a1\n  5952: i32 a0 = sp + 0x60\n  5955: a1 = 0x124\n  5959: ecalli 2 // 'call_data_load'\n  5961: fallthrough\n      : @147 (gas: 14)\n  5962: a5 = u64 [sp + 0x50]\n  5965: a0 = u64 [sp + 0x28]\n  5968: a0 = a0 >u 0\n  5970: a1 = u64 [sp + 0x48]\n  5973: a2 = a1 >u 0\n  5975: a2 = a0 if a1 == 0\n  5978: a0 = 0xffffffdf\n  5988: a0 = a0 <u a5\n  5991: a1 = u64 [sp + 0x58]\n  5994: a3 = a1 >u 0\n  5996: a0 = a3 if a1 != 0\n  5999: a1 = u64 [sp + 0x30]\n  6002: a0 = a2 if a1 != 0\n  6005: jump @159 if a0 != 0\n      : @148 (gas: 2)\n  6009: i32 a0 = a5 >> 0x5\n  6012: jump @159 if a0 >u 2046\n      : @149 (gas: 4)\n  6018: a0 = a5 + 0x5f\n  6021: a1 = u64 [sp + 0x20]\n  6024: a0 = a0 & a1\n  6027: jump @159 if a0 >u 65536\n      : @150 (gas: 10)\n  6034: u64 [sp + 0x8] = a3\n  6037: u64 [sp + 0x10] = a2\n  6040: t0 = u64 [sp + 0x78]\n  6043: a2 = u64 [sp + 0x70]\n  6046: a3 = u64 [sp + 0x68]\n  6049: a1 = u64 [sp + 0x38]\n  6052: s1 = i32 [a1]\n  6054: a4 = u64 [sp + 0x60]\n  6057: i32 a5 = a5 + 0x20\n  6060: jump @152 if s1 >=u a0\n      : @151 (gas: 2)\n  6063: u32 [a1] = a0\n  6065: fallthrough\n      : @152 (gas: 70)\n  6066: a0 = u64 [sp + 0x40]\n  6069: a0 = a0 + a5\n  6072: a1 = reverse t0\n  6074: a2 = reverse a2\n  6076: a3 = reverse a3\n  6078: a4 = reverse a4\n  6080: u8 [a0 + 0x18] = a4\n  6083: a5 = a4 >> 0x38\n  6086: u8 [a0 + 0x1f] = a5\n  6089: a5 = a4 >> 0x30\n  6092: u8 [a0 + 0x1e] = a5\n  6095: a5 = a4 >> 0x28\n  6098: u8 [a0 + 0x1d] = a5\n  6101: a5 = a4 >> 0x20\n  6104: u8 [a0 + 0x1c] = a5\n  6107: a5 = a4 >> 0x18\n  6110: u8 [a0 + 0x1b] = a5\n  6113: a5 = a4 >> 0x10\n  6116: u8 [a0 + 0x1a] = a5\n  6119: a4 = a4 >> 0x8\n  6122: u8 [a0 + 0x19] = a4\n  6125: u8 [a0 + 0x10] = a3\n  6128: a4 = a3 >> 0x38\n  6131: u8 [a0 + 0x17] = a4\n  6134: a4 = a3 >> 0x30\n  6137: u8 [a0 + 0x16] = a4\n  6140: a4 = a3 >> 0x28\n  6143: u8 [a0 + 0x15] = a4\n  6146: a4 = a3 >> 0x20\n  6149: u8 [a0 + 0x14] = a4\n  6152: a4 = a3 >> 0x18\n  6155: u8 [a0 + 0x13] = a4\n  6158: a4 = a3 >> 0x10\n  6161: u8 [a0 + 0x12] = a4\n  6164: a3 = a3 >> 0x8\n  6167: u8 [a0 + 0x11] = a3\n  6170: u8 [a0 + 0x8] = a2\n  6173: a3 = a2 >> 0x38\n  6176: u8 [a0 + 0xf] = a3\n  6179: a3 = a2 >> 0x30\n  6182: u8 [a0 + 0xe] = a3\n  6185: a3 = a2 >> 0x28\n  6188: u8 [a0 + 0xd] = a3\n  6191: a3 = a2 >> 0x20\n  6194: u8 [a0 + 0xc] = a3\n  6197: a3 = a2 >> 0x18\n  6200: u8 [a0 + 0xb] = a3\n  6203: a3 = a2 >> 0x10\n  6206: u8 [a0 + 0xa] = a3\n  6209: a2 = a2 >> 0x8\n  6212: u8 [a0 + 0x9] = a2\n  6215: u8 [a0] = a1\n  6217: a2 = a1 >> 0x38\n  6220: u8 [a0 + 0x7] = a2\n  6223: a2 = a1 >> 0x30\n  6226: u8 [a0 + 0x6] = a2\n  6229: a2 = a1 >> 0x28\n  6232: u8 [a0 + 0x5] = a2\n  6235: a2 = a1 >> 0x20\n  6238: u8 [a0 + 0x4] = a2\n  6241: a2 = a1 >> 0x18\n  6244: u8 [a0 + 0x3] = a2\n  6247: a2 = a1 >> 0x10\n  6250: u8 [a0 + 0x2] = a2\n  6253: a1 = a1 >> 0x8\n  6256: u8 [a0 + 0x1] = a1\n  6259: i32 a0 = sp + 0x60\n  6262: a1 = 0x144\n  6266: ecalli 2 // 'call_data_load'\n  6268: fallthrough\n      : @153 (gas: 12)\n  6269: a0 = 0xffffffbf\n  6279: s1 = u64 [sp + 0x50]\n  6282: a0 = a0 <u s1\n  6285: t0 = u64 [sp + 0x58]\n  6288: a1 = u64 [sp + 0x8]\n  6291: a0 = a1 if t0 != 0\n  6294: a1 = u64 [sp + 0x30]\n  6297: a2 = u64 [sp + 0x10]\n  6300: a0 = a2 if a1 != 0\n  6303: t2 = u64 [sp + 0x18]\n  6306: ra = u64 [sp + 0x28]\n  6309: jump @159 if a0 != 0\n      : @154 (gas: 2)\n  6313: i32 a0 = s1 >> 0x6\n  6316: jump @159 if a0 >u 1022\n      : @155 (gas: 4)\n  6322: a0 = s1 + 0x7f\n  6325: a1 = u64 [sp + 0x20]\n  6328: a0 = a0 & a1\n  6331: jump @159 if a0 >u 65536\n      : @156 (gas: 7)\n  6338: a1 = u64 [sp + 0x78]\n  6341: a2 = u64 [sp + 0x70]\n  6344: a3 = u64 [sp + 0x68]\n  6347: t1 = u64 [sp + 0x38]\n  6350: a5 = i32 [t1]\n  6352: a4 = u64 [sp + 0x60]\n  6355: jump @158 if a5 >=u a0\n      : @157 (gas: 2)\n  6358: u32 [t1] = a0\n  6360: fallthrough\n      : @158 (gas: 78)\n  6361: i32 a0 = s1 + 0x40\n  6364: a5 = u64 [sp + 0x40]\n  6367: a0 = a0 + a5\n  6370: a1 = reverse a1\n  6372: a2 = reverse a2\n  6374: a3 = reverse a3\n  6376: a4 = reverse a4\n  6378: a5 = a4 >> 0x38\n  6381: u8 [a0 + 0x1f] = a5\n  6384: a5 = a4 >> 0x30\n  6387: u8 [a0 + 0x1e] = a5\n  6390: a5 = a4 >> 0x28\n  6393: u8 [a0 + 0x1d] = a5\n  6396: a5 = a4 >> 0x20\n  6399: u8 [a0 + 0x1c] = a5\n  6402: a5 = a4 >> 0x18\n  6405: u8 [a0 + 0x1b] = a5\n  6408: a5 = a4 >> 0x10\n  6411: u8 [a0 + 0x1a] = a5\n  6414: a5 = a4 >> 0x8\n  6417: u8 [a0 + 0x19] = a5\n  6420: u8 [a0 + 0x18] = a4\n  6423: u8 [a0 + 0x10] = a3\n  6426: a4 = a3 >> 0x38\n  6429: u8 [a0 + 0x17] = a4\n  6432: a4 = a3 >> 0x30\n  6435: u8 [a0 + 0x16] = a4\n  6438: a4 = a3 >> 0x28\n  6441: u8 [a0 + 0x15] = a4\n  6444: a4 = a3 >> 0x20\n  6447: u8 [a0 + 0x14] = a4\n  6450: a4 = a3 >> 0x18\n  6453: u8 [a0 + 0x13] = a4\n  6456: a4 = a3 >> 0x10\n  6459: u8 [a0 + 0x12] = a4\n  6462: a3 = a3 >> 0x8\n  6465: u8 [a0 + 0x11] = a3\n  6468: u8 [a0 + 0x8] = a2\n  6471: a3 = a2 >> 0x38\n  6474: u8 [a0 + 0xf] = a3\n  6477: a3 = a2 >> 0x30\n  6480: u8 [a0 + 0xe] = a3\n  6483: a3 = a2 >> 0x28\n  6486: u8 [a0 + 0xd] = a3\n  6489: a3 = a2 >> 0x20\n  6492: u8 [a0 + 0xc] = a3\n  6495: a3 = a2 >> 0x18\n  6498: u8 [a0 + 0xb] = a3\n  6501: a3 = a2 >> 0x10\n  6504: u8 [a0 + 0xa] = a3\n  6507: a2 = a2 >> 0x8\n  6510: u8 [a0 + 0x9] = a2\n  6513: u8 [a0] = a1\n  6515: a2 = a1 >> 0x38\n  6518: u8 [a0 + 0x7] = a2\n  6521: a2 = a1 >> 0x30\n  6524: u8 [a0 + 0x6] = a2\n  6527: a2 = a1 >> 0x28\n  6530: u8 [a0 + 0x5] = a2\n  6533: a2 = a1 >> 0x20\n  6536: u8 [a0 + 0x4] = a2\n  6539: a2 = a1 >> 0x18\n  6542: u8 [a0 + 0x3] = a2\n  6545: a2 = a1 >> 0x10\n  6548: u8 [a0 + 0x2] = a2\n  6551: a1 = a1 >> 0x8\n  6554: u8 [a0 + 0x1] = a1\n  6557: u64 [t2] = s1\n  6559: a0 = u64 [sp + 0x48]\n  6562: u64 [t2 + 0x18] = a0\n  6565: u64 [t2 + 0x8] = t0\n  6568: u64 [t2 + 0x10] = ra\n  6571: sp = s0 + 0xffffffffffffff60\n  6575: ra = u64 [sp + 0x98]\n  6579: s0 = u64 [sp + 0x90]\n  6583: s1 = u64 [sp + 0x88]\n  6587: sp = sp + 0xa0\n  6591: ret\n      : @159 (gas: 1)\n  6593: trap\n      : @160 (gas: 6)\n  6594: a1 = 0x20050\n  6599: i32 a1 = a1 + 0\n  6601: a0 = 0x1\n  6604: a2 = 0\n  6606: ecalli 5 // 'seal_return'\n  6608: fallthrough\n      : @161 (gas: 17)\n  6609: u64 [t0 + 16] = 0\n  6612: u64 [t0 + 24] = 0\n  6615: u64 [t0 + 8] = 0\n  6618: u64 [t0 + 0] = 0x717b484e\n  6624: u32 [t0 + 32] = 0x41000000\n  6631: u32 [t0 + 20] = 0\n  6634: u32 [t0 + 24] = 0\n  6637: u32 [t0 + 28] = 0\n  6640: u32 [t0 + 8] = 0\n  6643: u32 [t0 + 12] = 0\n  6646: u32 [t0 + 16] = 0\n  6649: u32 [t0 + 4] = 0\n  6652: i32 a1 = t0 + 0\n  6654: a0 = 0x1\n  6657: a2 = 0x24\n  6660: ecalli 5 // 'seal_return'\n  6662: fallthrough\n      : @162 (gas: 6)\n  6663: a1 = i32 [sp + 0x40]\n  6666: a0 = 0x1\n  6669: a2 = 0\n  6671: ra = 0x2c\n  6674: ecalli 5 // 'seal_return'\n  6676: fallthrough\n      : @163 [@dyn 22] (gas: 13)\n  6677: a2 = u64 [a1 + 0x10]\n  6680: a3 = u64 [a1 + 0x18]\n  6683: a4 = u64 [a1 + 0x8]\n  6686: a1 = u64 [a1]\n  6688: a3 = a3 | a4\n  6691: a1 = a1 | a2\n  6694: a1 = a1 | a3\n  6697: a1 = a1 >u 0\n  6699: u64 [a0 + 24] = 0\n  6702: u64 [a0 + 16] = 0\n  6705: u64 [a0 + 8] = 0\n  6708: u64 [a0] = a1\n  6710: ret\n      : @164 (gas: 8)\n  6712: sp = sp + 0xffffffffffffff88\n  6715: u64 [sp + 0x70] = ra\n  6718: u64 [sp + 0x68] = s0\n  6721: u64 [sp + 0x60] = s1\n  6724: a1 = 0x20044\n  6729: a3 = i32 [0x20044]\n  6734: u64 [sp + 0x18] = a0\n  6737: jump @166 if a3 >u 95\n      : @165 (gas: 3)\n  6741: a3 = 0x60\n  6744: u32 [0x20044] = a3\n  6749: fallthrough\n      : @166 (gas: 16)\n  6750: u64 [sp + 0x40] = a3\n  6753: u64 [sp + 0x50] = a1\n  6756: s1 = 0x20050\n  6761: a1 = u64 [0x200a0]\n  6766: a2 = u64 [0x200a8]\n  6771: a3 = u64 [0x20090]\n  6776: a4 = u64 [0x20098]\n  6781: t2 = reverse a1\n  6783: s0 = reverse a2\n  6785: ra = reverse a3\n  6787: t1 = reverse a4\n  6789: a2 = t1 | ra\n  6792: a1 = s0 <u 0xffffffffffffffc0\n  6795: a1 = 0 if t2 != 0\n  6797: a1 = 0 if a2 != 0\n  6799: jump @193 if a1 == 0\n      : @167 (gas: 25)\n  6803: a0 = s0 + 0x40\n  6806: a3 = a0 <u s0\n  6809: a4 = t2 + a3\n  6812: a5 = a4 <u t2\n  6815: a5 = a3 if a3 == 0\n  6818: a5 = a5 + t1\n  6821: a3 = a5 <u t1\n  6824: a3 = a3 + ra\n  6827: t0 = reverse a3\n  6829: a5 = reverse a5\n  6831: a3 = reverse a4\n  6833: a1 = reverse a0\n  6835: u64 [sp + 0x38] = a1\n  6838: u64 [0x200a8] = a1\n  6843: u64 [sp + 0x30] = a3\n  6846: u64 [0x200a0] = a3\n  6851: u64 [sp + 0x20] = a5\n  6854: u64 [0x20098] = a5\n  6859: a3 = s0 <u 0xffffffffffffff80\n  6862: a3 = 0 if t2 != 0\n  6864: a3 = 0 if a2 != 0\n  6866: u64 [sp + 0x28] = t0\n  6869: u64 [0x20090] = t0\n  6874: a1 = 0x20050\n  6879: jump @194 if a3 == 0\n      : @168 (gas: 21)\n  6883: a3 = s0 + 0x80\n  6887: a4 = a3 <u s0\n  6890: a5 = t2 + a4\n  6893: s1 = a5 <u t2\n  6896: s1 = a4 if a4 == 0\n  6899: s1 = s1 + t1\n  6902: a4 = s1 <u t1\n  6905: a4 = a4 + ra\n  6908: a4 = reverse a4\n  6910: s1 = reverse s1\n  6912: a5 = reverse a5\n  6914: a3 = reverse a3\n  6916: u64 [0x200a8] = a3\n  6921: u64 [0x200a0] = a5\n  6926: u64 [0x20098] = s1\n  6931: a3 = 0xffffffc0\n  6941: a3 = s0 <u a3\n  6944: a3 = 0 if t2 != 0\n  6946: a3 = 0 if a2 != 0\n  6948: u64 [0x20090] = a4\n  6953: jump @192 if a3 == 0\n      : @169 (gas: 2)\n  6957: i32 a2 = a0 >> 0x10\n  6960: jump @192 if a2 != 0\n      : @170 (gas: 4)\n  6964: a2 = a0 + 0x5f\n  6967: u64 [sp + 88] = 0x1ffe0\n  6973: a3 = a2 & 0x1ffe0\n  6978: jump @192 if a3 >u 65536\n      : @171 (gas: 9)\n  6985: s1 = 0x20050\n  6990: u64 [sp] = ra\n  6992: u64 [sp + 0x48] = s0\n  6995: u64 [sp + 0x8] = t1\n  6998: u64 [sp + 0x10] = t2\n  7001: s0 = 0x20040\n  7006: a2 = i32 [0x20040]\n  7011: a1 = u64 [sp + 0x40]\n  7014: jump @173 if a1 >=u a3\n      : @172 (gas: 3)\n  7017: a1 = u64 [sp + 0x50]\n  7020: u32 [a1] = a3\n  7022: fallthrough\n      : @173 (gas: 4)\n  7023: i32 a0 = a0 + s1\n  7026: a1 = 0x40\n  7029: ecalli 1 // 'call_data_copy'\n  7031: fallthrough\n      : @174 (gas: 3)\n  7032: a2 = u64 [sp + 0x48]\n  7035: i32 a0 = a2 >> 0x10\n  7038: jump @192 if a0 != 0\n      : @175 (gas: 4)\n  7042: a0 = a2 + 0x3f\n  7045: a1 = u64 [sp + 0x58]\n  7048: a1 = a1 & a0\n  7051: jump @192 if a1 >u 65536\n      : @176 (gas: 3)\n  7058: t2 = u64 [sp + 0x50]\n  7061: t0 = i32 [t2]\n  7063: jump @178 if t0 >=u a1\n      : @177 (gas: 3)\n  7066: u32 [t2] = a1\n  7068: t0 = a1\n  7070: fallthrough\n      : @178 (gas: 67)\n  7071: i32 a1 = a2 + 0\n  7073: a1 = a1 + s1\n  7076: a3 = u64 [sp + 0x30]\n  7079: u8 [a1 + 0x10] = a3\n  7082: a0 = u64 [sp + 0x20]\n  7085: a2 = a0 >> 0x38\n  7088: u8 [a1 + 0xf] = a2\n  7091: a2 = a0 >> 0x30\n  7094: u8 [a1 + 0xe] = a2\n  7097: a2 = a0 >> 0x28\n  7100: u8 [a1 + 0xd] = a2\n  7103: a2 = a0 >> 0x20\n  7106: u8 [a1 + 0xc] = a2\n  7109: a2 = a0 >> 0x18\n  7112: u8 [a1 + 0xb] = a2\n  7115: a2 = a0 >> 0x10\n  7118: u8 [a1 + 0xa] = a2\n  7121: a2 = a0 >> 0x8\n  7124: u8 [a1 + 0x9] = a2\n  7127: u8 [a1 + 0x8] = a0\n  7130: a0 = u64 [sp + 0x28]\n  7133: a2 = a0 >> 0x38\n  7136: u8 [a1 + 0x7] = a2\n  7139: a2 = a0 >> 0x30\n  7142: u8 [a1 + 0x6] = a2\n  7145: a2 = a0 >> 0x28\n  7148: u8 [a1 + 0x5] = a2\n  7151: a2 = a0 >> 0x20\n  7154: u8 [a1 + 0x4] = a2\n  7157: a2 = a0 >> 0x18\n  7160: u8 [a1 + 0x3] = a2\n  7163: a2 = a0 >> 0x10\n  7166: u8 [a1 + 0x2] = a2\n  7169: a2 = a0 >> 0x8\n  7172: u8 [a1 + 0x1] = a2\n  7175: u8 [a1] = a0\n  7177: a0 = u64 [sp + 0x38]\n  7180: u8 [a1 + 0x18] = a0\n  7183: a2 = a3 >> 0x38\n  7186: u8 [a1 + 0x17] = a2\n  7189: a2 = a3 >> 0x30\n  7192: u8 [a1 + 0x16] = a2\n  7195: a2 = a3 >> 0x28\n  7198: u8 [a1 + 0x15] = a2\n  7201: a2 = a3 >> 0x20\n  7204: u8 [a1 + 0x14] = a2\n  7207: a2 = a3 >> 0x18\n  7210: u8 [a1 + 0x13] = a2\n  7213: a2 = a3 >> 0x10\n  7216: u8 [a1 + 0x12] = a2\n  7219: a2 = a3 >> 0x8\n  7222: u8 [a1 + 0x11] = a2\n  7225: a2 = a0 >> 0x38\n  7228: u8 [a1 + 0x1f] = a2\n  7231: a2 = a0 >> 0x30\n  7234: u8 [a1 + 0x1e] = a2\n  7237: a2 = a0 >> 0x28\n  7240: u8 [a1 + 0x1d] = a2\n  7243: a2 = a0 >> 0x20\n  7246: u8 [a1 + 0x1c] = a2\n  7249: a2 = a0 >> 0x18\n  7252: u8 [a1 + 0x1b] = a2\n  7255: a2 = a0 >> 0x10\n  7258: u8 [a1 + 0x1a] = a2\n  7261: a2 = a0 >> 0x8\n  7264: u8 [a1 + 0x19] = a2\n  7267: jump @180 if t0 >u 95\n      : @179 (gas: 3)\n  7271: t0 = 0x60\n  7274: u32 [t2] = t0\n  7276: fallthrough\n      : @180 (gas: 17)\n  7277: a1 = u64 [0x200a0]\n  7282: a0 = u64 [0x200a8]\n  7287: a3 = u64 [0x20090]\n  7292: a4 = u64 [0x20098]\n  7297: u64 [sp + 0x38] = a1\n  7300: a2 = reverse a1\n  7302: u64 [sp + 0x40] = a0\n  7305: a1 = reverse a0\n  7307: u64 [sp + 0x30] = a3\n  7310: t1 = reverse a3\n  7312: u64 [sp + 0x28] = a4\n  7315: a3 = reverse a4\n  7317: a5 = a3 | t1\n  7320: a0 = a1 <u 0xffffffffffffffc0\n  7323: a0 = 0 if a2 != 0\n  7325: a0 = 0 if a5 != 0\n  7327: jump @193 if a0 == 0\n      : @181 (gas: 24)\n  7331: a0 = a1 + 0x40\n  7334: a5 = a0 <u a1\n  7337: s0 = a2 + a5\n  7340: a4 = s0 <u a2\n  7343: a4 = a5 if a5 == 0\n  7346: a4 = a4 + a3\n  7349: a5 = a4 <u a3\n  7352: a5 = a5 + t1\n  7355: a5 = reverse a5\n  7357: a4 = reverse a4\n  7359: s0 = reverse s0\n  7361: a0 = reverse a0\n  7363: u64 [0x200a8] = a0\n  7368: u64 [0x200a0] = s0\n  7373: u64 [0x20098] = a4\n  7378: a0 = a1 | a3\n  7381: a2 = a2 | t1\n  7384: a0 = a0 | a2\n  7387: a0 = a0 >> 0x20\n  7390: a2 = a2 | a3\n  7393: a2 = a2 << 0x20\n  7396: a0 = a0 | a2\n  7399: u64 [0x20090] = a5\n  7404: jump @192 if a0 != 0\n      : @182 (gas: 2)\n  7408: i32 a0 = a1 >> 0x10\n  7411: jump @192 if a0 != 0\n      : @183 (gas: 4)\n  7415: a0 = a1 + 0x5f\n  7418: a3 = u64 [sp + 0x58]\n  7421: a3 = a3 & a0\n  7424: jump @192 if a3 >u 65536\n      : @184 (gas: 3)\n  7431: s0 = s1\n  7433: a2 = i32 [0x20040]\n  7438: jump @186 if t0 >=u a3\n      : @185 (gas: 2)\n  7441: u32 [t2] = a3\n  7443: fallthrough\n      : @186 (gas: 4)\n  7444: i32 a0 = s0 + a1\n  7447: a1 = 0x40\n  7450: ecalli 1 // 'call_data_copy'\n  7452: fallthrough\n      : @187 (gas: 3)\n  7453: a5 = u64 [sp + 0x48]\n  7456: i32 a0 = a5 >> 0x5\n  7459: jump @192 if a0 >=u 2047\n      : @188 (gas: 4)\n  7465: a0 = a5 + 0x5f\n  7468: a1 = u64 [sp + 0x58]\n  7471: a0 = a0 & a1\n  7474: jump @192 if a0 >u 65536\n      : @189 (gas: 7)\n  7481: a4 = u64 [sp + 0x50]\n  7484: a1 = i32 [a4]\n  7486: a2 = u64 [sp + 0x18]\n  7489: a3 = u64 [sp + 0x10]\n  7492: t0 = u64 [sp + 0x8]\n  7495: s1 = u64 [sp]\n  7497: jump @191 if a1 >=u a0\n      : @190 (gas: 2)\n  7500: u32 [a4] = a0\n  7502: fallthrough\n      : @191 (gas: 75)\n  7503: i32 a0 = a5 + 0x20\n  7506: a0 = a0 + s0\n  7509: s0 = u64 [sp + 0x38]\n  7512: u8 [a0 + 0x10] = s0\n  7515: a4 = u64 [sp + 0x28]\n  7518: a1 = a4 >> 0x38\n  7521: u8 [a0 + 0xf] = a1\n  7524: a1 = a4 >> 0x30\n  7527: u8 [a0 + 0xe] = a1\n  7530: a1 = a4 >> 0x28\n  7533: u8 [a0 + 0xd] = a1\n  7536: a1 = a4 >> 0x20\n  7539: u8 [a0 + 0xc] = a1\n  7542: a1 = a4 >> 0x18\n  7545: u8 [a0 + 0xb] = a1\n  7548: a1 = a4 >> 0x10\n  7551: u8 [a0 + 0xa] = a1\n  7554: a1 = a4 >> 0x8\n  7557: u8 [a0 + 0x9] = a1\n  7560: u8 [a0 + 0x8] = a4\n  7563: a4 = u64 [sp + 0x30]\n  7566: a1 = a4 >> 0x38\n  7569: u8 [a0 + 0x7] = a1\n  7572: a1 = a4 >> 0x30\n  7575: u8 [a0 + 0x6] = a1\n  7578: a1 = a4 >> 0x28\n  7581: u8 [a0 + 0x5] = a1\n  7584: a1 = a4 >> 0x20\n  7587: u8 [a0 + 0x4] = a1\n  7590: a1 = a4 >> 0x18\n  7593: u8 [a0 + 0x3] = a1\n  7596: a1 = a4 >> 0x10\n  7599: u8 [a0 + 0x2] = a1\n  7602: a1 = a4 >> 0x8\n  7605: u8 [a0 + 0x1] = a1\n  7608: u8 [a0] = a4\n  7610: a4 = u64 [sp + 0x40]\n  7613: u8 [a0 + 0x18] = a4\n  7616: a1 = s0 >> 0x38\n  7619: u8 [a0 + 0x17] = a1\n  7622: a1 = s0 >> 0x30\n  7625: u8 [a0 + 0x16] = a1\n  7628: a1 = s0 >> 0x28\n  7631: u8 [a0 + 0x15] = a1\n  7634: a1 = s0 >> 0x20\n  7637: u8 [a0 + 0x14] = a1\n  7640: a1 = s0 >> 0x18\n  7643: u8 [a0 + 0x13] = a1\n  7646: a1 = s0 >> 0x10\n  7649: u8 [a0 + 0x12] = a1\n  7652: a1 = s0 >> 0x8\n  7655: u8 [a0 + 0x11] = a1\n  7658: a1 = a4 >> 0x38\n  7661: u8 [a0 + 0x1f] = a1\n  7664: a1 = a4 >> 0x30\n  7667: u8 [a0 + 0x1e] = a1\n  7670: a1 = a4 >> 0x28\n  7673: u8 [a0 + 0x1d] = a1\n  7676: a1 = a4 >> 0x20\n  7679: u8 [a0 + 0x1c] = a1\n  7682: a1 = a4 >> 0x18\n  7685: u8 [a0 + 0x1b] = a1\n  7688: a1 = a4 >> 0x10\n  7691: u8 [a0 + 0x1a] = a1\n  7694: a1 = a4 >> 0x8\n  7697: u8 [a0 + 0x19] = a1\n  7700: u64 [a2] = a5\n  7702: u64 [a2 + 0x18] = s1\n  7705: u64 [a2 + 0x8] = a3\n  7708: u64 [a2 + 0x10] = t0\n  7711: ra = u64 [sp + 0x70]\n  7714: s0 = u64 [sp + 0x68]\n  7717: s1 = u64 [sp + 0x60]\n  7720: sp = sp + 0x78\n  7723: ret\n      : @192 (gas: 1)\n  7725: trap\n      : @193 (gas: 17)\n  7726: u64 [0x20060] = 0\n  7731: u64 [0x20068] = 0\n  7736: u64 [0x20058] = 0\n  7741: u64 [0x20050] = 0x717b484e\n  7750: u32 [0x20070] = 0x41000000\n  7759: u32 [0x20064] = 0\n  7764: u32 [0x20068] = 0\n  7769: u32 [0x2006c] = 0\n  7774: u32 [0x20058] = 0\n  7779: u32 [0x2005c] = 0\n  7784: u32 [0x20060] = 0\n  7789: u32 [0x20054] = 0\n  7794: i32 a1 = s1 + 0\n  7796: a0 = 0x1\n  7799: a2 = 0x24\n  7802: ecalli 5 // 'seal_return'\n  7804: fallthrough\n      : @194 (gas: 18)\n  7805: u64 [a1 + 16] = 0\n  7808: u64 [a1 + 24] = 0\n  7811: u64 [a1 + 8] = 0\n  7814: u64 [a1 + 0] = 0x717b484e\n  7820: u32 [a1 + 32] = 0x41000000\n  7827: u32 [a1 + 20] = 0\n  7830: u32 [a1 + 24] = 0\n  7833: u32 [a1 + 28] = 0\n  7836: u32 [a1 + 8] = 0\n  7839: u32 [a1 + 12] = 0\n  7842: u32 [a1 + 16] = 0\n  7845: u32 [a1 + 4] = 0\n  7848: i32 a1 = a1 + 0\n  7850: a0 = 0x1\n  7853: a2 = 0x24\n  7856: ra = 0x2e\n  7859: ecalli 5 // 'seal_return'\n  7861: fallthrough\n      : @195 [@dyn 23] (gas: 9)\n  7862: sp = sp + 0xffffffffffffff50\n  7866: u64 [sp + 0xa8] = ra\n  7870: u64 [sp + 0xa0] = s0\n  7874: u64 [sp + 0x98] = s1\n  7878: s0 = sp + 0xb0\n  7882: sp = sp & 0xfffffffffffffff0\n  7885: a2 = 0x20044\n  7890: a3 = i32 [0x20044]\n  7895: jump @197 if a3 >u 95\n      : @196 (gas: 3)\n  7899: a3 = 0x60\n  7902: u32 [0x20044] = a3\n  7907: fallthrough\n      : @197 (gas: 17)\n  7908: u64 [sp + 0x40] = a3\n  7911: u64 [sp + 0x60] = a2\n  7914: a1 = 0x20050\n  7919: a2 = u64 [0x200a0]\n  7924: a4 = u64 [0x200a8]\n  7929: a5 = u64 [0x20090]\n  7934: a3 = u64 [0x20098]\n  7939: a2 = reverse a2\n  7941: s1 = reverse a4\n  7943: ra = reverse a5\n  7945: t2 = reverse a3\n  7947: a4 = t2 | ra\n  7950: a3 = s1 <u 0xffffffffffffffa0\n  7953: a3 = 0 if a2 != 0\n  7955: u64 [sp + 0x58] = a4\n  7958: a3 = 0 if a4 != 0\n  7960: jump @232 if a3 == 0\n      : @198 (gas: 28)\n  7964: u64 [sp + 0x10] = a0\n  7967: a5 = s1 + 0x60\n  7970: a0 = a5 <u s1\n  7973: t1 = a2 + a0\n  7976: a3 = t1 <u a2\n  7979: a3 = a0 if a0 == 0\n  7982: a0 = t2 + a3\n  7985: a3 = a0 <u t2\n  7988: a3 = a3 + ra\n  7991: t0 = reverse a3\n  7993: a4 = reverse a0\n  7995: a3 = reverse t1\n  7997: u64 [sp + 0x38] = a5\n  8000: a0 = reverse a5\n  8002: u64 [sp + 0x30] = a0\n  8005: u64 [0x200a8] = a0\n  8010: u64 [sp + 0x28] = a3\n  8013: u64 [0x200a0] = a3\n  8018: u64 [sp + 0x18] = a4\n  8021: u64 [0x20098] = a4\n  8026: a5 = s1 <u 0xffffffffffffff60\n  8030: a5 = 0 if a2 != 0\n  8032: a4 = u64 [sp + 0x58]\n  8035: a5 = 0 if a4 != 0\n  8037: u64 [sp + 0x20] = t0\n  8040: u64 [0x20090] = t0\n  8045: t1 = 0x20050\n  8050: jump @231 if a5 == 0\n      : @199 (gas: 29)\n  8054: a5 = s1 + 0xa0\n  8058: a0 = a5 <u s1\n  8061: u64 [sp + 0x50] = s1\n  8064: s1 = a2 + a0\n  8067: u64 [sp + 0x68] = a2\n  8070: a1 = u64 [sp + 0x68]\n  8073: t0 = s1 <u a1\n  8076: t0 = a0 if a0 == 0\n  8079: t0 = t0 + t2\n  8082: u64 [sp + 0x8] = t2\n  8085: a0 = t0 <u t2\n  8088: u64 [sp] = ra\n  8090: a0 = a0 + ra\n  8093: a0 = reverse a0\n  8095: a3 = reverse t0\n  8097: t0 = u64 [sp + 0x68]\n  8100: a1 = reverse s1\n  8102: s1 = u64 [sp + 0x50]\n  8105: a5 = reverse a5\n  8107: u64 [0x200a8] = a5\n  8112: u64 [0x200a0] = a1\n  8117: u64 [0x20098] = a3\n  8122: a1 = 0xffffffa0\n  8132: a1 = s1 <u a1\n  8135: a1 = 0 if t0 != 0\n  8137: a1 = 0 if a4 != 0\n  8139: u64 [sp + 0x48] = t1\n  8142: u64 [0x20090] = a0\n  8147: jump @230 if a1 == 0\n      : @200 (gas: 5)\n  8151: a2 = u64 [sp + 0x38]\n  8154: i32 a0 = a2 >> 0x10\n  8157: t1 = u64 [sp + 0x60]\n  8160: ra = u64 [sp + 0x40]\n  8163: jump @230 if a0 != 0\n      : @201 (gas: 3)\n  8167: a0 = a2 + 0x3f\n  8170: a5 = a0 & 0x1ffe0\n  8175: jump @230 if a5 >u 65536\n      : @202 (gas: 1)\n  8182: jump @204 if ra >=u a5\n      : @203 (gas: 3)\n  8185: u32 [t1] = a5\n  8187: ra = a5\n  8189: fallthrough\n      : @204 (gas: 40)\n  8190: a0 = 0xffffff80\n  8200: a5 = s1 <u a0\n  8203: a5 = 0 if t0 != 0\n  8205: a5 = 0 if a4 != 0\n  8207: i32 a2 = a2 + 0\n  8209: a3 = u64 [sp + 0x48]\n  8212: a2 = a2 + a3\n  8215: u8 [a2 + 31] = 0\n  8218: u8 [a2 + 30] = 0\n  8221: u8 [a2 + 29] = 0\n  8224: u8 [a2 + 28] = 0\n  8227: u8 [a2 + 27] = 0\n  8230: u8 [a2 + 26] = 0\n  8233: u8 [a2 + 25] = 0\n  8236: u8 [a2 + 24] = 0\n  8239: u8 [a2 + 23] = 0\n  8242: u8 [a2 + 22] = 0\n  8245: u8 [a2 + 21] = 0\n  8248: u8 [a2 + 20] = 0\n  8251: u8 [a2 + 19] = 0\n  8254: u8 [a2 + 18] = 0\n  8257: u8 [a2 + 17] = 0\n  8260: u8 [a2 + 16] = 0\n  8263: u8 [a2 + 15] = 0\n  8266: u8 [a2 + 14] = 0\n  8269: u8 [a2 + 13] = 0\n  8272: u8 [a2 + 12] = 0\n  8275: u8 [a2 + 11] = 0\n  8278: u8 [a2 + 10] = 0\n  8281: u8 [a2 + 9] = 0\n  8284: u8 [a2 + 8] = 0\n  8287: u8 [a2 + 7] = 0\n  8290: u8 [a2 + 6] = 0\n  8293: u8 [a2 + 5] = 0\n  8296: u8 [a2 + 4] = 0\n  8299: u8 [a2 + 3] = 0\n  8302: u8 [a2 + 2] = 0\n  8305: u8 [a2 + 1] = 0\n  8308: u8 [a2 + 0] = 0\n  8310: jump @230 if a5 == 0\n      : @205 (gas: 2)\n  8314: i32 a0 = s1 >> 0x7\n  8317: jump @230 if a0 >=u 511\n      : @206 (gas: 3)\n  8323: a0 = s1 + 0xbf\n  8327: a2 = a0 & 0x1ffe0\n  8332: jump @230 if a2 >u 65536\n      : @207 (gas: 2)\n  8339: i32 a5 = s1 + 0x80\n  8343: jump @209 if ra >=u a2\n      : @208 (gas: 3)\n  8346: u32 [t1] = a2\n  8348: ra = a2\n  8350: fallthrough\n      : @209 (gas: 37)\n  8351: a2 = a3 + a5\n  8354: u8 [a2 + 31] = 0\n  8357: u8 [a2 + 30] = 0\n  8360: u8 [a2 + 29] = 0\n  8363: u8 [a2 + 28] = 0\n  8366: u8 [a2 + 27] = 0\n  8369: u8 [a2 + 26] = 0\n  8372: u8 [a2 + 25] = 0\n  8375: u8 [a2 + 24] = 0\n  8378: u8 [a2 + 23] = 0\n  8381: u8 [a2 + 22] = 0\n  8384: u8 [a2 + 21] = 0\n  8387: u8 [a2 + 20] = 0\n  8390: u8 [a2 + 19] = 0\n  8393: u8 [a2 + 18] = 0\n  8396: u8 [a2 + 17] = 0\n  8399: u8 [a2 + 16] = 0\n  8402: u8 [a2 + 15] = 0\n  8405: u8 [a2 + 14] = 0\n  8408: u8 [a2 + 13] = 0\n  8411: u8 [a2 + 12] = 0\n  8414: u8 [a2 + 11] = 0\n  8417: u8 [a2 + 10] = 0\n  8420: u8 [a2 + 9] = 0\n  8423: u8 [a2 + 8] = 0\n  8426: u8 [a2 + 7] = 0\n  8429: u8 [a2 + 6] = 0\n  8432: u8 [a2 + 5] = 0\n  8435: u8 [a2 + 4] = 0\n  8438: u8 [a2 + 3] = 0\n  8441: u8 [a2 + 2] = 0\n  8444: u8 [a2 + 1] = 0\n  8447: a0 = s1 + 0x3f\n  8450: u64 [sp + 88] = 0x1ffe0\n  8456: a5 = a0 & 0x1ffe0\n  8461: u8 [a2 + 0] = 0\n  8463: jump @211 if ra >=u a5\n      : @210 (gas: 2)\n  8466: u32 [t1] = a5\n  8468: fallthrough\n      : @211 (gas: 68)\n  8469: i32 a2 = s1 + 0\n  8471: a2 = a2 + a3\n  8474: a3 = u64 [sp + 0x28]\n  8477: u8 [a2 + 0x10] = a3\n  8480: a1 = u64 [sp + 0x18]\n  8483: a0 = a1 >> 0x38\n  8486: u8 [a2 + 0xf] = a0\n  8489: a0 = a1 >> 0x30\n  8492: u8 [a2 + 0xe] = a0\n  8495: a0 = a1 >> 0x28\n  8498: u8 [a2 + 0xd] = a0\n  8501: a0 = a1 >> 0x20\n  8504: u8 [a2 + 0xc] = a0\n  8507: a0 = a1 >> 0x18\n  8510: u8 [a2 + 0xb] = a0\n  8513: a0 = a1 >> 0x10\n  8516: u8 [a2 + 0xa] = a0\n  8519: a0 = a1 >> 0x8\n  8522: u8 [a2 + 0x9] = a0\n  8525: u8 [a2 + 0x8] = a1\n  8528: a1 = u64 [sp + 0x20]\n  8531: a0 = a1 >> 0x38\n  8534: u8 [a2 + 0x7] = a0\n  8537: a0 = a1 >> 0x30\n  8540: u8 [a2 + 0x6] = a0\n  8543: a0 = a1 >> 0x28\n  8546: u8 [a2 + 0x5] = a0\n  8549: a0 = a1 >> 0x20\n  8552: u8 [a2 + 0x4] = a0\n  8555: a0 = a1 >> 0x18\n  8558: u8 [a2 + 0x3] = a0\n  8561: a0 = a1 >> 0x10\n  8564: u8 [a2 + 0x2] = a0\n  8567: a0 = a1 >> 0x8\n  8570: u8 [a2 + 0x1] = a0\n  8573: u8 [a2] = a1\n  8575: a1 = u64 [sp + 0x30]\n  8578: u8 [a2 + 0x18] = a1\n  8581: a0 = a3 >> 0x38\n  8584: u8 [a2 + 0x17] = a0\n  8587: a0 = a3 >> 0x30\n  8590: u8 [a2 + 0x16] = a0\n  8593: a0 = a3 >> 0x28\n  8596: u8 [a2 + 0x15] = a0\n  8599: a0 = a3 >> 0x20\n  8602: u8 [a2 + 0x14] = a0\n  8605: a0 = a3 >> 0x18\n  8608: u8 [a2 + 0x13] = a0\n  8611: a0 = a3 >> 0x10\n  8614: u8 [a2 + 0x12] = a0\n  8617: a0 = a3 >> 0x8\n  8620: u8 [a2 + 0x11] = a0\n  8623: a0 = a1 >> 0x38\n  8626: u8 [a2 + 0x1f] = a0\n  8629: a0 = a1 >> 0x30\n  8632: u8 [a2 + 0x1e] = a0\n  8635: a0 = a1 >> 0x28\n  8638: u8 [a2 + 0x1d] = a0\n  8641: a0 = a1 >> 0x20\n  8644: u8 [a2 + 0x1c] = a0\n  8647: a0 = a1 >> 0x18\n  8650: u8 [a2 + 0x1b] = a0\n  8653: a0 = a1 >> 0x10\n  8656: u8 [a2 + 0x1a] = a0\n  8659: a0 = a1 >> 0x8\n  8662: u8 [a2 + 0x19] = a0\n  8665: a0 = sp + 0x70\n  8668: ra = 48, jump @164\n      : @212 [@dyn 24] (gas: 11)\n  8673: t0 = u64 [sp + 0x60]\n  8676: a1 = u64 [sp + 0x88]\n  8680: a2 = u64 [sp + 0x80]\n  8684: a3 = u64 [sp + 0x78]\n  8687: t1 = i32 [t0]\n  8689: a4 = u64 [sp + 0x70]\n  8692: a0 = s1 + 0x5f\n  8695: a5 = u64 [sp + 0x58]\n  8698: a5 = a5 & a0\n  8701: i32 a0 = s1 + 0x20\n  8704: jump @214 if t1 >=u a5\n      : @213 (gas: 3)\n  8707: u32 [t0] = a5\n  8709: t1 = a5\n  8711: fallthrough\n      : @214 (gas: 67)\n  8712: s1 = u64 [sp + 0x48]\n  8715: a0 = a0 + s1\n  8718: a1 = reverse a1\n  8720: a2 = reverse a2\n  8722: a3 = reverse a3\n  8724: a4 = reverse a4\n  8726: u8 [a0 + 0x18] = a4\n  8729: a5 = a4 >> 0x38\n  8732: u8 [a0 + 0x1f] = a5\n  8735: a5 = a4 >> 0x30\n  8738: u8 [a0 + 0x1e] = a5\n  8741: a5 = a4 >> 0x28\n  8744: u8 [a0 + 0x1d] = a5\n  8747: a5 = a4 >> 0x20\n  8750: u8 [a0 + 0x1c] = a5\n  8753: a5 = a4 >> 0x18\n  8756: u8 [a0 + 0x1b] = a5\n  8759: a5 = a4 >> 0x10\n  8762: u8 [a0 + 0x1a] = a5\n  8765: a4 = a4 >> 0x8\n  8768: u8 [a0 + 0x19] = a4\n  8771: u8 [a0 + 0x10] = a3\n  8774: a4 = a3 >> 0x38\n  8777: u8 [a0 + 0x17] = a4\n  8780: a4 = a3 >> 0x30\n  8783: u8 [a0 + 0x16] = a4\n  8786: a4 = a3 >> 0x28\n  8789: u8 [a0 + 0x15] = a4\n  8792: a4 = a3 >> 0x20\n  8795: u8 [a0 + 0x14] = a4\n  8798: a4 = a3 >> 0x18\n  8801: u8 [a0 + 0x13] = a4\n  8804: a4 = a3 >> 0x10\n  8807: u8 [a0 + 0x12] = a4\n  8810: a3 = a3 >> 0x8\n  8813: u8 [a0 + 0x11] = a3\n  8816: u8 [a0 + 0x8] = a2\n  8819: a3 = a2 >> 0x38\n  8822: u8 [a0 + 0xf] = a3\n  8825: a3 = a2 >> 0x30\n  8828: u8 [a0 + 0xe] = a3\n  8831: a3 = a2 >> 0x28\n  8834: u8 [a0 + 0xd] = a3\n  8837: a3 = a2 >> 0x20\n  8840: u8 [a0 + 0xc] = a3\n  8843: a3 = a2 >> 0x18\n  8846: u8 [a0 + 0xb] = a3\n  8849: a3 = a2 >> 0x10\n  8852: u8 [a0 + 0xa] = a3\n  8855: a2 = a2 >> 0x8\n  8858: u8 [a0 + 0x9] = a2\n  8861: u8 [a0] = a1\n  8863: a2 = a1 >> 0x38\n  8866: u8 [a0 + 0x7] = a2\n  8869: a2 = a1 >> 0x30\n  8872: u8 [a0 + 0x6] = a2\n  8875: a2 = a1 >> 0x28\n  8878: u8 [a0 + 0x5] = a2\n  8881: a2 = a1 >> 0x20\n  8884: u8 [a0 + 0x4] = a2\n  8887: a2 = a1 >> 0x18\n  8890: u8 [a0 + 0x3] = a2\n  8893: a2 = a1 >> 0x10\n  8896: u8 [a0 + 0x2] = a2\n  8899: a1 = a1 >> 0x8\n  8902: u8 [a0 + 0x1] = a1\n  8905: jump @216 if t1 >u 95\n      : @215 (gas: 3)\n  8909: t1 = 0x60\n  8912: u32 [t0] = t1\n  8914: fallthrough\n      : @216 (gas: 19)\n  8915: u64 [sp + 0x40] = t1\n  8918: a1 = u64 [s1 + 0x50]\n  8921: a0 = u64 [s1 + 0x58]\n  8924: a2 = u64 [s1 + 0x40]\n  8927: t2 = u64 [s1 + 0x48]\n  8930: u64 [sp + 0x28] = a1\n  8933: ra = reverse a1\n  8935: u64 [sp + 0x30] = a0\n  8938: a5 = reverse a0\n  8940: u64 [sp + 0x20] = a2\n  8943: a2 = reverse a2\n  8945: a1 = reverse t2\n  8947: a0 = a1 | a2\n  8950: t1 = s1\n  8952: t0 = a5 <u 0xffffffffffffffc0\n  8955: t0 = 0 if ra != 0\n  8957: u64 [sp + 0x38] = a0\n  8960: t0 = 0 if a0 != 0\n  8962: jump @231 if t0 == 0\n      : @217 (gas: 24)\n  8966: a3 = a5 + 0x40\n  8969: a4 = a3 <u a5\n  8972: a0 = ra + a4\n  8975: s1 = a0 <u ra\n  8978: s1 = a4 if a4 == 0\n  8981: s1 = s1 + a1\n  8984: a4 = s1 <u a1\n  8987: a4 = a4 + a2\n  8990: a4 = reverse a4\n  8992: s1 = reverse s1\n  8994: a0 = reverse a0\n  8996: a3 = reverse a3\n  8998: u64 [t1 + 0x58] = a3\n  9001: u64 [t1 + 0x50] = a0\n  9004: u64 [t1 + 0x48] = s1\n  9007: a0 = a5 | a1\n  9010: a2 = ra | a2\n  9013: a0 = a0 | a2\n  9016: a0 = a0 >> 0x20\n  9019: a1 = a1 | a2\n  9022: a1 = a1 << 0x20\n  9025: a0 = a0 | a1\n  9028: u64 [t1 + 0x40] = a4\n  9031: jump @230 if a0 != 0\n      : @218 (gas: 6)\n  9035: a4 = t1\n  9037: i32 a0 = a5 >> 0x10\n  9040: t0 = u64 [sp + 0x68]\n  9043: t1 = u64 [sp + 0x60]\n  9046: s1 = u64 [sp + 0x40]\n  9049: jump @230 if a0 != 0\n      : @219 (gas: 4)\n  9053: a0 = a5 + 0x3f\n  9056: a1 = u64 [sp + 0x58]\n  9059: a1 = a1 & a0\n  9062: jump @230 if a1 >u 65536\n      : @220 (gas: 2)\n  9069: a3 = u64 [sp + 0x50]\n  9072: jump @222 if s1 >=u a1\n      : @221 (gas: 3)\n  9075: u32 [t1] = a1\n  9077: s1 = a1\n  9079: fallthrough\n      : @222 (gas: 40)\n  9080: a0 = 0xffffffe0\n  9090: a1 = a5 <u a0\n  9093: a1 = 0 if ra != 0\n  9095: i32 a0 = a5 + 0\n  9097: a0 = a0 + a4\n  9100: u8 [a0 + 31] = 0\n  9103: u8 [a0 + 30] = 0\n  9106: u8 [a0 + 29] = 0\n  9109: u8 [a0 + 28] = 0\n  9112: u8 [a0 + 27] = 0\n  9115: u8 [a0 + 26] = 0\n  9118: u8 [a0 + 25] = 0\n  9121: u8 [a0 + 24] = 0\n  9124: u8 [a0 + 23] = 0\n  9127: u8 [a0 + 22] = 0\n  9130: u8 [a0 + 21] = 0\n  9133: u8 [a0 + 20] = 0\n  9136: u8 [a0 + 19] = 0\n  9139: u8 [a0 + 18] = 0\n  9142: u8 [a0 + 17] = 0\n  9145: u8 [a0 + 16] = 0\n  9148: u8 [a0 + 15] = 0\n  9151: u8 [a0 + 14] = 0\n  9154: u8 [a0 + 13] = 0\n  9157: u8 [a0 + 12] = 0\n  9160: u8 [a0 + 11] = 0\n  9163: u8 [a0 + 10] = 0\n  9166: u8 [a0 + 9] = 0\n  9169: u8 [a0 + 8] = 0\n  9172: u8 [a0 + 7] = 0\n  9175: u8 [a0 + 6] = 0\n  9178: u8 [a0 + 5] = 0\n  9181: u8 [a0 + 4] = 0\n  9184: u8 [a0 + 3] = 0\n  9187: u8 [a0 + 2] = 0\n  9190: u8 [a0 + 1] = 0\n  9193: a2 = u64 [sp + 0x38]\n  9196: a1 = 0 if a2 != 0\n  9198: u8 [a0 + 0] = 0\n  9200: jump @230 if a1 == 0\n      : @223 (gas: 3)\n  9204: i32 a0 = a5 >> 0x5\n  9207: a2 = u64 [sp + 0x58]\n  9210: jump @230 if a0 >=u 2047\n      : @224 (gas: 3)\n  9216: a0 = a5 + 0x5f\n  9219: a1 = a0 & a2\n  9222: jump @230 if a1 >u 65536\n      : @225 (gas: 2)\n  9229: i32 a0 = a5 + 0x20\n  9232: jump @227 if s1 >=u a1\n      : @226 (gas: 3)\n  9235: u32 [t1] = a1\n  9237: s1 = a1\n  9239: fallthrough\n      : @227 (gas: 36)\n  9240: a1 = a3 + 0x7f\n  9243: a1 = a1 & a2\n  9246: a0 = a0 + a4\n  9249: u8 [a0 + 31] = 0\n  9252: u8 [a0 + 30] = 0\n  9255: u8 [a0 + 29] = 0\n  9258: u8 [a0 + 28] = 0\n  9261: u8 [a0 + 27] = 0\n  9264: u8 [a0 + 26] = 0\n  9267: u8 [a0 + 25] = 0\n  9270: u8 [a0 + 24] = 0\n  9273: u8 [a0 + 23] = 0\n  9276: u8 [a0 + 22] = 0\n  9279: u8 [a0 + 21] = 0\n  9282: u8 [a0 + 20] = 0\n  9285: u8 [a0 + 19] = 0\n  9288: u8 [a0 + 18] = 0\n  9291: u8 [a0 + 17] = 0\n  9294: u8 [a0 + 16] = 0\n  9297: u8 [a0 + 15] = 0\n  9300: u8 [a0 + 14] = 0\n  9303: u8 [a0 + 13] = 0\n  9306: u8 [a0 + 12] = 0\n  9309: u8 [a0 + 11] = 0\n  9312: u8 [a0 + 10] = 0\n  9315: u8 [a0 + 9] = 0\n  9318: u8 [a0 + 8] = 0\n  9321: u8 [a0 + 7] = 0\n  9324: u8 [a0 + 6] = 0\n  9327: u8 [a0 + 5] = 0\n  9330: u8 [a0 + 4] = 0\n  9333: u8 [a0 + 3] = 0\n  9336: u8 [a0 + 2] = 0\n  9339: u8 [a0 + 1] = 0\n  9342: u8 [a0 + 0] = 0\n  9344: jump @229 if s1 >=u a1\n      : @228 (gas: 2)\n  9347: u32 [t1] = a1\n  9349: fallthrough\n      : @229 (gas: 78)\n  9350: i32 s1 = a3 + 0x40\n  9353: s1 = s1 + a4\n  9356: a2 = u64 [sp + 0x28]\n  9359: u8 [s1 + 0x10] = a2\n  9362: a0 = t2 >> 0x38\n  9365: u8 [s1 + 0xf] = a0\n  9368: a0 = t2 >> 0x30\n  9371: u8 [s1 + 0xe] = a0\n  9374: a0 = t2 >> 0x28\n  9377: u8 [s1 + 0xd] = a0\n  9380: a0 = t2 >> 0x20\n  9383: u8 [s1 + 0xc] = a0\n  9386: a0 = t2 >> 0x18\n  9389: u8 [s1 + 0xb] = a0\n  9392: a0 = t2 >> 0x10\n  9395: u8 [s1 + 0xa] = a0\n  9398: a0 = t2 >> 0x8\n  9401: u8 [s1 + 0x9] = a0\n  9404: u8 [s1 + 0x8] = t2\n  9407: a1 = u64 [sp + 0x20]\n  9410: a0 = a1 >> 0x38\n  9413: u8 [s1 + 0x7] = a0\n  9416: a0 = a1 >> 0x30\n  9419: u8 [s1 + 0x6] = a0\n  9422: a0 = a1 >> 0x28\n  9425: u8 [s1 + 0x5] = a0\n  9428: a0 = a1 >> 0x20\n  9431: u8 [s1 + 0x4] = a0\n  9434: a0 = a1 >> 0x18\n  9437: u8 [s1 + 0x3] = a0\n  9440: a0 = a1 >> 0x10\n  9443: u8 [s1 + 0x2] = a0\n  9446: a0 = a1 >> 0x8\n  9449: u8 [s1 + 0x1] = a0\n  9452: u8 [s1] = a1\n  9454: a1 = u64 [sp + 0x30]\n  9457: u8 [s1 + 0x18] = a1\n  9460: a0 = a2 >> 0x38\n  9463: u8 [s1 + 0x17] = a0\n  9466: a0 = a2 >> 0x30\n  9469: u8 [s1 + 0x16] = a0\n  9472: a0 = a2 >> 0x28\n  9475: u8 [s1 + 0x15] = a0\n  9478: a0 = a2 >> 0x20\n  9481: u8 [s1 + 0x14] = a0\n  9484: a0 = a2 >> 0x18\n  9487: u8 [s1 + 0x13] = a0\n  9490: a0 = a2 >> 0x10\n  9493: u8 [s1 + 0x12] = a0\n  9496: a0 = a2 >> 0x8\n  9499: u8 [s1 + 0x11] = a0\n  9502: a0 = a1 >> 0x38\n  9505: u8 [s1 + 0x1f] = a0\n  9508: a0 = a1 >> 0x30\n  9511: u8 [s1 + 0x1e] = a0\n  9514: a0 = a1 >> 0x28\n  9517: u8 [s1 + 0x1d] = a0\n  9520: a0 = a1 >> 0x20\n  9523: u8 [s1 + 0x1c] = a0\n  9526: a0 = a1 >> 0x18\n  9529: u8 [s1 + 0x1b] = a0\n  9532: a0 = a1 >> 0x10\n  9535: u8 [s1 + 0x1a] = a0\n  9538: a0 = a1 >> 0x8\n  9541: u8 [s1 + 0x19] = a0\n  9544: a0 = u64 [sp + 0x10]\n  9547: u64 [a0] = a3\n  9549: a1 = u64 [sp]\n  9551: u64 [a0 + 0x18] = a1\n  9554: u64 [a0 + 0x8] = t0\n  9557: a1 = u64 [sp + 0x8]\n  9560: u64 [a0 + 0x10] = a1\n  9563: sp = s0 + 0xffffffffffffff50\n  9567: ra = u64 [sp + 0xa8]\n  9571: s0 = u64 [sp + 0xa0]\n  9575: s1 = u64 [sp + 0x98]\n  9579: sp = sp + 0xb0\n  9583: ret\n      : @230 (gas: 1)\n  9585: trap\n      : @231 (gas: 17)\n  9586: u64 [t1 + 16] = 0\n  9589: u64 [t1 + 24] = 0\n  9592: u64 [t1 + 8] = 0\n  9595: u64 [t1 + 0] = 0x717b484e\n  9601: u32 [t1 + 32] = 0x41000000\n  9608: u32 [t1 + 20] = 0\n  9611: u32 [t1 + 24] = 0\n  9614: u32 [t1 + 28] = 0\n  9617: u32 [t1 + 8] = 0\n  9620: u32 [t1 + 12] = 0\n  9623: u32 [t1 + 16] = 0\n  9626: u32 [t1 + 4] = 0\n  9629: i32 a1 = t1 + 0\n  9631: a0 = 0x1\n  9634: a2 = 0x24\n  9637: ecalli 5 // 'seal_return'\n  9639: fallthrough\n      : @232 (gas: 18)\n  9640: u64 [a1 + 16] = 0\n  9643: u64 [a1 + 24] = 0\n  9646: u64 [a1 + 8] = 0\n  9649: u64 [a1 + 0] = 0x717b484e\n  9655: u32 [a1 + 32] = 0x41000000\n  9662: u32 [a1 + 20] = 0\n  9665: u32 [a1 + 24] = 0\n  9668: u32 [a1 + 28] = 0\n  9671: u32 [a1 + 8] = 0\n  9674: u32 [a1 + 12] = 0\n  9677: u32 [a1 + 16] = 0\n  9680: u32 [a1 + 4] = 0\n  9683: i32 a1 = a1 + 0\n  9685: a0 = 0x1\n  9688: a2 = 0x24\n  9691: ra = 0x32\n  9694: ecalli 5 // 'seal_return'\n  9696: fallthrough\n      : @233 [@dyn 25] (gas: 7)\n  9697: a1 = 0x20050\n  9702: a2 = i32 [0x20044]\n  9707: u64 [0x20068] = 0\n  9712: u64 [0x20060] = 0\n  9717: u64 [0x20050] = 0x717b484e\n  9726: u64 [0x20058] = 0\n  9731: jump @235 if a2 >u 63\n      : @234 (gas: 2)\n  9735: u32 [0x20044] = 0x40\n  9741: fallthrough\n      : @235 (gas: 16)\n  9742: sp = sp + 0xfffffffffffffff8\n  9745: u64 [sp] = ra\n  9747: u32 [0x20070] = 0x32000000\n  9756: u32 [0x2006c] = 0\n  9761: u32 [0x20068] = 0\n  9766: u32 [0x20064] = 0\n  9771: u32 [0x20060] = 0\n  9776: u32 [0x2005c] = 0\n  9781: u32 [0x20058] = 0\n  9786: u32 [0x20054] = 0\n  9791: i32 a1 = a1 + 0\n  9793: a0 = 0x1\n  9796: a2 = 0x24\n  9799: ra = 0x34\n  9802: ecalli 5 // 'seal_return'\n  9804: fallthrough\n      : @236 [@dyn 26] (gas: 17)\n  9805: a2 = u64 [a1]\n  9807: t0 = u64 [a1 + 0x18]\n  9810: a4 = u64 [a1 + 0x8]\n  9813: a1 = u64 [a1 + 0x10]\n  9816: a5 = a2 + 0x20\n  9819: a2 = a5 <u a2\n  9822: a3 = a4 + a2\n  9825: a4 = a3 <u a4\n  9828: a4 = a2 if a2 == 0\n  9831: a4 = a4 + a1\n  9834: a1 = a4 <u a1\n  9837: a1 = a1 + t0\n  9840: u64 [a0] = a5\n  9842: u64 [a0 + 0x8] = a3\n  9845: u64 [a0 + 0x10] = a4\n  9848: u64 [a0 + 0x18] = a1\n  9851: ret\n      : @237 (gas: 7)\n  9853: sp = sp + 0xffffffffffffffc8\n  9856: u64 [sp + 0x30] = ra\n  9859: u64 [sp + 0x28] = s0\n  9862: u64 [sp + 0x20] = s1\n  9865: ra = i32 [0x20044]\n  9870: u64 [sp + 0x18] = a0\n  9873: jump @239 if ra >u 95\n      : @238 (gas: 3)\n  9877: ra = 0x60\n  9880: u32 [0x20044] = ra\n  9885: fallthrough\n      : @239 (gas: 14)\n  9886: a1 = 0x20050\n  9891: a0 = u64 [0x200a0]\n  9896: a2 = u64 [0x200a8]\n  9901: a5 = u64 [0x20090]\n  9906: s0 = u64 [0x20098]\n  9911: a4 = reverse a0\n  9913: s1 = reverse a2\n  9915: t2 = reverse a5\n  9917: s0 = reverse s0\n  9919: t1 = s0 | t2\n  9922: a2 = s1 <u 0xffffffffffffff80\n  9925: a2 = 0 if a4 != 0\n  9927: a2 = 0 if t1 != 0\n  9929: jump @252 if a2 == 0\n      : @240 (gas: 24)\n  9933: a2 = s1 + 0x80\n  9937: a5 = a2 <u s1\n  9940: a3 = a4 + a5\n  9943: a0 = a3 <u a4\n  9946: a0 = a5 if a5 == 0\n  9949: a0 = a0 + s0\n  9952: a5 = a0 <u s0\n  9955: a5 = a5 + t2\n  9958: a5 = reverse a5\n  9960: a0 = reverse a0\n  9962: a3 = reverse a3\n  9964: a2 = reverse a2\n  9966: u64 [0x200a8] = a2\n  9971: u64 [0x200a0] = a3\n  9976: u64 [0x20098] = a0\n  9981: a0 = s1 | s0\n  9984: a2 = a4 | t2\n  9987: a0 = a0 | a2\n  9990: a0 = a0 >> 0x20\n  9993: a2 = a2 | s0\n  9996: a2 = a2 << 0x20\n  9999: a0 = a0 | a2\n 10002: u64 [0x20090] = a5\n 10007: jump @251 if a0 != 0\n      : @241 (gas: 2)\n 10011: i32 a0 = s1 >> 0x10\n 10014: jump @251 if a0 != 0\n      : @242 (gas: 3)\n 10018: a5 = s1 + 0x3f\n 10021: a5 = a5 & 0x1ffe0\n 10026: jump @251 if a5 >u 65536\n      : @243 (gas: 1)\n 10033: jump @245 if ra >=u a5\n      : @244 (gas: 3)\n 10036: u32 [0x20044] = a5\n 10041: ra = a5\n 10043: fallthrough\n      : @245 (gas: 40)\n 10044: u64 [sp + 0x10] = t2\n 10047: i32 a5 = s1 + 0\n 10049: a5 = a5 + a1\n 10052: u8 [a5 + 31] = 0x3\n 10056: u8 [a5 + 30] = 0\n 10059: u8 [a5 + 29] = 0\n 10062: u8 [a5 + 28] = 0\n 10065: u8 [a5 + 27] = 0\n 10068: u8 [a5 + 26] = 0\n 10071: u8 [a5 + 25] = 0\n 10074: u8 [a5 + 24] = 0\n 10077: u8 [a5 + 23] = 0\n 10080: u8 [a5 + 22] = 0\n 10083: u8 [a5 + 21] = 0\n 10086: u8 [a5 + 20] = 0\n 10089: u8 [a5 + 19] = 0\n 10092: u8 [a5 + 18] = 0\n 10095: u8 [a5 + 17] = 0\n 10098: u8 [a5 + 16] = 0\n 10101: u8 [a5 + 15] = 0\n 10104: u8 [a5 + 14] = 0\n 10107: u8 [a5 + 13] = 0\n 10110: u8 [a5 + 12] = 0\n 10113: u8 [a5 + 11] = 0\n 10116: u8 [a5 + 10] = 0\n 10119: u8 [a5 + 9] = 0\n 10122: u8 [a5 + 8] = 0\n 10125: u8 [a5 + 7] = 0\n 10128: u8 [a5 + 6] = 0\n 10131: u8 [a5 + 5] = 0\n 10134: u8 [a5 + 4] = 0\n 10137: u8 [a5 + 3] = 0\n 10140: u8 [a5 + 2] = 0\n 10143: u8 [a5 + 1] = 0\n 10146: a0 = 0xffffffe0\n 10156: a0 = s1 <u a0\n 10159: a0 = 0 if a4 != 0\n 10161: a0 = 0 if t1 != 0\n 10163: u8 [a5 + 0] = 0\n 10165: jump @251 if a0 == 0\n      : @246 (gas: 3)\n 10168: u64 [sp + 0x8] = s0\n 10171: i32 a0 = s1 >> 0x5\n 10174: jump @251 if a0 >=u 2047\n      : @247 (gas: 3)\n 10179: a0 = s1 + 0x9f\n 10183: a0 = a0 & 0x1ffe0\n 10188: jump @251 if a0 >u 65536\n      : @248 (gas: 4)\n 10194: u64 [sp] = a4\n 10196: s0 = u64 [sp + 0x18]\n 10199: a2 = i32 [0x20040]\n 10204: jump @250 if ra >=u a0\n      : @249 (gas: 2)\n 10207: u32 [0x20044] = a0\n 10212: fallthrough\n      : @250 (gas: 16)\n 10213: a1 = a1 + s1\n 10216: i32 a0 = a1 + 0x20\n 10219: a1 = 0x60\n 10222: ecalli 1 // 'call_data_copy'\n 10224: a0 = u64 [sp + 0x10]\n 10227: u64 [s0 + 0x18] = a0\n 10230: a0 = u64 [sp + 0x8]\n 10233: u64 [s0 + 0x10] = a0\n 10236: a0 = u64 [sp]\n 10238: u64 [s0 + 0x8] = a0\n 10241: u64 [s0] = s1\n 10243: ra = u64 [sp + 0x30]\n 10246: s0 = u64 [sp + 0x28]\n 10249: s1 = u64 [sp + 0x20]\n 10252: sp = sp + 0x38\n 10255: ret\n      : @251 (gas: 1)\n 10257: trap\n      : @252 (gas: 18)\n 10258: u64 [0x20060] = 0\n 10263: u64 [0x20068] = 0\n 10268: u64 [0x20058] = 0\n 10273: u64 [0x20050] = 0x717b484e\n 10282: u32 [0x20070] = 0x41000000\n 10291: u32 [0x20064] = 0\n 10296: u32 [0x20068] = 0\n 10301: u32 [0x2006c] = 0\n 10306: u32 [0x20058] = 0\n 10311: u32 [0x2005c] = 0\n 10316: u32 [0x20060] = 0\n 10321: u32 [0x20054] = 0\n 10326: i32 a1 = a1 + 0\n 10328: a0 = 0x1\n 10331: a2 = 0x24\n 10334: ra = 0x36\n 10337: ecalli 5 // 'seal_return'\n 10339: fallthrough\n      : @253 [@dyn 27] (gas: 11)\n 10340: sp = sp + 0xffffffffffffff88\n 10343: u64 [sp + 0x70] = ra\n 10346: u64 [sp + 0x68] = s0\n 10349: u64 [sp + 0x60] = s1\n 10352: a5 = u64 [a1 + 0x18]\n 10355: a4 = u64 [a1 + 0x10]\n 10358: s1 = u64 [a1 + 0x8]\n 10361: a2 = a4 | a5\n 10364: a3 = s1 <u 0x1\n 10367: a3 = 0 if a2 != 0\n 10369: jump @272 if a3 == 0\n      : @254 (gas: 13)\n 10373: u64 [sp] = a0\n 10375: u64 [sp + 0x20] = a5\n 10378: u64 [sp + 0x28] = a4\n 10381: a3 = u64 [a1]\n 10383: t1 = 0x20044\n 10388: a0 = a3 >> 0x3b\n 10391: a2 = i32 [0x20044]\n 10396: u64 [sp + 0x18] = s1\n 10399: a1 = s1 << 0x5\n 10402: a0 = a0 | a1\n 10405: u64 [sp + 0x10] = a3\n 10408: s1 = a3 << 0x5\n 10411: jump @256 if a2 >u 95\n      : @255 (gas: 3)\n 10415: a2 = 0x60\n 10418: u32 [0x20044] = a2\n 10423: fallthrough\n      : @256 (gas: 36)\n 10424: u64 [sp + 0x58] = a2\n 10427: u64 [sp + 0x48] = t1\n 10430: ra = 0x20050\n 10435: a1 = u64 [0x20090]\n 10440: a2 = u64 [0x20098]\n 10445: a3 = u64 [0x200a0]\n 10450: a4 = u64 [0x200a8]\n 10455: t1 = reverse a1\n 10457: t2 = reverse a2\n 10459: a5 = reverse a3\n 10461: a3 = reverse a4\n 10463: a1 = s1 + 0x3f\n 10466: u64 [sp + 0x8] = s1\n 10469: a2 = a1 <u s1\n 10472: a0 = a0 + a2\n 10475: a2 = a0 & 0x3f\n 10478: a0 = a1 & 0xffffffffffffffe0\n 10481: t0 = a3 + a0\n 10484: u64 [sp + 0x30] = a3\n 10487: a1 = t0 <u a3\n 10490: a2 = a2 + a5\n 10493: a2 = a2 + a1\n 10496: a3 = a2 ^ a5\n 10499: u64 [sp + 0x50] = a5\n 10502: s0 = a2 <u a5\n 10505: s0 = a1 if a3 == 0\n 10508: a3 = t2 + s0\n 10511: a1 = a3 <u t2\n 10514: a4 = t1 + a1\n 10517: a5 = a3 >u 0\n 10519: a0 = a4 >u 0\n 10521: a0 = a5 if a4 == 0\n 10524: a5 = a3 | a4\n 10527: s1 = a2 >u 0\n 10529: s1 = a0 if a5 != 0\n 10532: jump @271 if s1 != 0\n      : @257 (gas: 7)\n 10536: a0 = a4 ^ t1\n 10539: a5 = a4 <u t1\n 10542: a1 = a5 if a0 != 0\n 10545: a5 = a3 ^ t2\n 10548: a0 = a0 | a5\n 10551: s0 = a1 if a0 != 0\n 10554: jump @271 if s0 != 0\n      : @258 (gas: 18)\n 10558: a0 = reverse a4\n 10560: a1 = reverse a3\n 10562: a2 = reverse a2\n 10564: a3 = reverse t0\n 10566: u64 [0x200a8] = a3\n 10571: u64 [0x200a0] = a2\n 10576: u64 [0x20098] = a1\n 10581: s1 = u64 [sp + 0x30]\n 10584: a1 = s1 | t2\n 10587: a5 = u64 [sp + 0x50]\n 10590: a2 = a5 | t1\n 10593: a1 = a1 | a2\n 10596: a1 = a1 >> 0x20\n 10599: a2 = a2 | t2\n 10602: a2 = a2 << 0x20\n 10605: a1 = a1 | a2\n 10608: u64 [0x20090] = a0\n 10613: jump @270 if a1 != 0\n      : @259 (gas: 4)\n 10617: i32 a0 = s1 >> 0x10\n 10620: a3 = u64 [sp + 0x48]\n 10623: a4 = u64 [sp + 0x58]\n 10626: jump @270 if a0 != 0\n      : @260 (gas: 3)\n 10630: a0 = s1 + 0x3f\n 10633: a0 = a0 & 0x1ffe0\n 10638: jump @270 if a0 >u 65536\n      : @261 (gas: 3)\n 10645: u64 [sp + 0x38] = t1\n 10648: u64 [sp + 0x40] = t2\n 10651: jump @263 if a4 >=u a0\n      : @262 (gas: 3)\n 10654: u32 [a3] = a0\n 10656: a4 = a0\n 10658: fallthrough\n      : @263 (gas: 79)\n 10659: u64 [sp + 0x58] = a4\n 10662: i32 a0 = s1 + 0\n 10664: a0 = a0 + ra\n 10667: s0 = u64 [sp + 0x20]\n 10670: a2 = reverse s0\n 10672: t2 = u64 [sp + 0x28]\n 10675: t0 = reverse t2\n 10677: a4 = u64 [sp + 0x18]\n 10680: t1 = reverse a4\n 10682: a5 = u64 [sp + 0x10]\n 10685: a1 = reverse a5\n 10687: a3 = a1 >> 0x38\n 10690: u8 [a0 + 0x1f] = a3\n 10693: a3 = a1 >> 0x30\n 10696: u8 [a0 + 0x1e] = a3\n 10699: a3 = a1 >> 0x28\n 10702: u8 [a0 + 0x1d] = a3\n 10705: a3 = a1 >> 0x20\n 10708: u8 [a0 + 0x1c] = a3\n 10711: a3 = a1 >> 0x18\n 10714: u8 [a0 + 0x1b] = a3\n 10717: a3 = a1 >> 0x10\n 10720: u8 [a0 + 0x1a] = a3\n 10723: a3 = a1 >> 0x8\n 10726: u8 [a0 + 0x19] = a3\n 10729: u8 [a0 + 0x18] = a1\n 10732: u8 [a0 + 0x10] = t1\n 10735: a1 = t1 >> 0x38\n 10738: u8 [a0 + 0x17] = a1\n 10741: a1 = t1 >> 0x30\n 10744: u8 [a0 + 0x16] = a1\n 10747: a1 = t1 >> 0x28\n 10750: u8 [a0 + 0x15] = a1\n 10753: a1 = t1 >> 0x20\n 10756: u8 [a0 + 0x14] = a1\n 10759: a1 = t1 >> 0x18\n 10762: u8 [a0 + 0x13] = a1\n 10765: a1 = t1 >> 0x10\n 10768: u8 [a0 + 0x12] = a1\n 10771: a1 = t1 >> 0x8\n 10774: u8 [a0 + 0x11] = a1\n 10777: u8 [a0 + 0x8] = t0\n 10780: a1 = t0 >> 0x38\n 10783: u8 [a0 + 0xf] = a1\n 10786: a1 = t0 >> 0x30\n 10789: u8 [a0 + 0xe] = a1\n 10792: a1 = t0 >> 0x28\n 10795: u8 [a0 + 0xd] = a1\n 10798: a1 = t0 >> 0x20\n 10801: u8 [a0 + 0xc] = a1\n 10804: a1 = t0 >> 0x18\n 10807: u8 [a0 + 0xb] = a1\n 10810: a1 = t0 >> 0x10\n 10813: u8 [a0 + 0xa] = a1\n 10816: a1 = t0 >> 0x8\n 10819: u8 [a0 + 0x9] = a1\n 10822: u8 [a0] = a2\n 10824: a1 = a2 >> 0x38\n 10827: u8 [a0 + 0x7] = a1\n 10830: a1 = a2 >> 0x30\n 10833: u8 [a0 + 0x6] = a1\n 10836: a1 = a2 >> 0x28\n 10839: u8 [a0 + 0x5] = a1\n 10842: a1 = a2 >> 0x20\n 10845: u8 [a0 + 0x4] = a1\n 10848: a1 = a2 >> 0x18\n 10851: u8 [a0 + 0x3] = a1\n 10854: a1 = a2 >> 0x10\n 10857: u8 [a0 + 0x2] = a1\n 10860: a2 = a2 >> 0x8\n 10863: a1 = a5 | t2\n 10866: a3 = a4 | s0\n 10869: a1 = a1 | a3\n 10872: a1 = a1 >> 0x1b\n 10875: a3 = a3 | t2\n 10878: a3 = a3 << 0x25\n 10881: a1 = a1 | a3\n 10884: u8 [a0 + 0x1] = a2\n 10887: jump @270 if a1 != 0\n      : @264 (gas: 9)\n 10890: a0 = u64 [sp + 0x40]\n 10893: a1 = u64 [sp + 0x38]\n 10896: a0 = a0 | a1\n 10899: a1 = 0xffffffe0\n 10909: a1 = s1 <u a1\n 10912: a2 = u64 [sp + 0x50]\n 10915: a1 = 0 if a2 != 0\n 10917: a1 = 0 if a0 != 0\n 10919: jump @270 if a1 == 0\n      : @265 (gas: 4)\n 10922: i32 a0 = s1 >> 0x5\n 10925: a3 = u64 [sp + 0x48]\n 10928: a4 = u64 [sp + 0x58]\n 10931: jump @270 if a0 >=u 2047\n      : @266 (gas: 5)\n 10936: a1 = i32 [sp + 0x8]\n 10939: a0 = a1 + s1\n 10942: i32 a0 = a0 + 0x3f\n 10945: a0 = a0 & 0xffffffffffffffe0\n 10948: jump @270 if a0 >u 65536\n      : @267 (gas: 2)\n 10954: a2 = i32 [0x20040]\n 10959: jump @269 if a4 >=u a0\n      : @268 (gas: 2)\n 10962: u32 [a3] = a0\n 10964: fallthrough\n      : @269 (gas: 16)\n 10965: ra = ra + s1\n 10968: i32 a0 = ra + 0x20\n 10971: ecalli 1 // 'call_data_copy'\n 10973: s0 = u64 [sp]\n 10975: a0 = u64 [sp + 0x38]\n 10978: u64 [s0 + 0x18] = a0\n 10981: a0 = u64 [sp + 0x40]\n 10984: u64 [s0 + 0x10] = a0\n 10987: a0 = u64 [sp + 0x50]\n 10990: u64 [s0 + 0x8] = a0\n 10993: u64 [s0] = s1\n 10995: ra = u64 [sp + 0x70]\n 10998: s0 = u64 [sp + 0x68]\n 11001: s1 = u64 [sp + 0x60]\n 11004: sp = sp + 0x78\n 11007: ret\n      : @270 (gas: 1)\n 11009: trap\n      : @271 (gas: 17)\n 11010: u64 [0x20060] = 0\n 11015: u64 [0x20068] = 0\n 11020: u64 [0x20058] = 0\n 11025: u64 [0x20050] = 0x717b484e\n 11034: u32 [0x20070] = 0x41000000\n 11043: u32 [0x20064] = 0\n 11048: u32 [0x20068] = 0\n 11053: u32 [0x2006c] = 0\n 11058: u32 [0x20058] = 0\n 11063: u32 [0x2005c] = 0\n 11068: u32 [0x20060] = 0\n 11073: u32 [0x20054] = 0\n 11078: i32 a1 = ra + 0\n 11080: a0 = 0x1\n 11083: a2 = 0x24\n 11086: ecalli 5 // 'seal_return'\n 11088: fallthrough\n      : @272 (gas: 7)\n 11089: a1 = 0x20050\n 11094: a2 = i32 [0x20044]\n 11099: u64 [0x20068] = 0\n 11104: u64 [0x20060] = 0\n 11109: u64 [0x20050] = 0x717b484e\n 11118: u64 [0x20058] = 0\n 11123: jump @274 if a2 >u 63\n      : @273 (gas: 2)\n 11127: u32 [0x20044] = 0x40\n 11133: fallthrough\n      : @274 (gas: 14)\n 11134: u32 [0x20070] = 0x41000000\n 11143: u32 [0x2006c] = 0\n 11148: u32 [0x20068] = 0\n 11153: u32 [0x20064] = 0\n 11158: u32 [0x20060] = 0\n 11163: u32 [0x2005c] = 0\n 11168: u32 [0x20058] = 0\n 11173: u32 [0x20054] = 0\n 11178: i32 a1 = a1 + 0\n 11180: a0 = 0x1\n 11183: a2 = 0x24\n 11186: ra = 0x38\n 11189: ecalli 5 // 'seal_return'\n 11191: fallthrough\n      : @275 [@dyn 28] (gas: 12)\n 11192: sp = sp + 0xfffffffffffffff0\n 11195: u64 [sp + 0x8] = ra\n 11198: u64 [sp] = s0\n 11200: t0 = u64 [a2 + 0x18]\n 11203: a5 = u64 [a2 + 0x10]\n 11206: a3 = u64 [a2]\n 11208: a4 = u64 [a2 + 0x8]\n 11211: t1 = a5 | t0\n 11214: a2 = a3 <u 0x3\n 11217: a2 = 0 if a4 != 0\n 11219: a2 = 0 if t1 != 0\n 11221: jump @277 if a2 == 0\n      : @276 (gas: 36)\n 11224: t1 = u64 [a1 + 0x18]\n 11227: t2 = u64 [a1 + 0x10]\n 11230: a2 = u64 [a1 + 0x8]\n 11233: a1 = u64 [a1]\n 11235: s0 = a5 >> 0x3b\n 11238: t0 = t0 << 0x5\n 11241: t0 = t0 | s0\n 11244: s0 = a4 >> 0x3b\n 11247: a5 = a5 << 0x5\n 11250: a5 = a5 | s0\n 11253: s0 = a3 >> 0x3b\n 11256: a4 = a4 << 0x5\n 11259: a4 = a4 | s0\n 11262: a3 = a3 << 0x5\n 11265: a1 = a1 + a3\n 11268: a3 = a1 <u a3\n 11271: a2 = a2 + a4\n 11274: a2 = a2 + a3\n 11277: s0 = a2 ^ a4\n 11280: a4 = a2 <u a4\n 11283: a4 = a3 if s0 == 0\n 11286: t2 = t2 + a5\n 11289: a4 = a4 + t2\n 11292: a3 = a4 <u t2\n 11295: a5 = t2 <u a5\n 11298: t0 = t0 + t1\n 11301: a5 = a5 + t0\n 11304: a3 = a3 + a5\n 11307: u64 [a0] = a1\n 11309: u64 [a0 + 0x8] = a2\n 11312: u64 [a0 + 0x10] = a4\n 11315: u64 [a0 + 0x18] = a3\n 11318: ra = u64 [sp + 0x8]\n 11321: s0 = u64 [sp]\n 11323: sp = sp + 0x10\n 11326: ret\n      : @277 (gas: 7)\n 11328: a1 = 0x20050\n 11333: a2 = i32 [0x20044]\n 11338: u64 [0x20068] = 0\n 11343: u64 [0x20060] = 0\n 11348: u64 [0x20050] = 0x717b484e\n 11357: u64 [0x20058] = 0\n 11362: jump @279 if a2 >u 63\n      : @278 (gas: 2)\n 11366: u32 [0x20044] = 0x40\n 11372: fallthrough\n      : @279 (gas: 14)\n 11373: u32 [0x20070] = 0x32000000\n 11382: u32 [0x2006c] = 0\n 11387: u32 [0x20068] = 0\n 11392: u32 [0x20064] = 0\n 11397: u32 [0x20060] = 0\n 11402: u32 [0x2005c] = 0\n 11407: u32 [0x20058] = 0\n 11412: u32 [0x20054] = 0\n 11417: i32 a1 = a1 + 0\n 11419: a0 = 0x1\n 11422: a2 = 0x24\n 11425: ra = 0x3a\n 11428: ecalli 5 // 'seal_return'\n 11430: fallthrough\n      : @280 [@dyn 29] (gas: 16)\n 11431: sp = sp + 0xffffffffffffffb0\n 11434: u64 [sp + 0x48] = ra\n 11437: u64 [sp + 0x40] = s0\n 11440: u64 [sp + 0x38] = s1\n 11443: a2 = u64 [a1 + 0x10]\n 11446: a4 = u64 [a1 + 0x18]\n 11449: s1 = u64 [a1 + 0x8]\n 11452: t0 = u64 [a1]\n 11454: a3 = s1 | a4\n 11457: a5 = t0 | a2\n 11460: a5 = a5 | a3\n 11463: a5 = a5 >> 0x20\n 11466: a3 = a3 | a2\n 11469: a3 = a3 << 0x20\n 11472: a3 = a3 | a5\n 11475: jump @287 if a3 != 0\n      : @281 (gas: 2)\n 11479: i32 a3 = t0 >> 0x10\n 11482: jump @287 if a3 != 0\n      : @282 (gas: 3)\n 11486: a3 = t0 + 0x3f\n 11489: a3 = a3 & 0x1ffe0\n 11494: jump @287 if a3 >u 65536\n      : @283 (gas: 6)\n 11501: u64 [sp + 0x20] = s1\n 11504: u64 [sp + 0x28] = a4\n 11507: u64 [sp + 0x30] = a2\n 11510: a1 = 0x20044\n 11515: a2 = i32 [0x20044]\n 11520: jump @285 if a2 >=u a3\n      : @284 (gas: 3)\n 11523: u32 [0x20044] = a3\n 11528: a2 = a3\n 11530: fallthrough\n      : @285 (gas: 99)\n 11531: u64 [sp + 0x8] = a2\n 11534: u64 [sp + 0x10] = a1\n 11537: a1 = 0x20050\n 11542: i32 a5 = t0 + 0\n 11544: u64 [sp] = a1\n 11546: a5 = a5 + a1\n 11549: a3 = u8 [a5 + 0x11]\n 11552: s1 = u8 [a5 + 0x10]\n 11555: s0 = u8 [a5 + 0x12]\n 11558: a4 = u8 [a5 + 0x13]\n 11561: a3 = a3 << 0x8\n 11564: a3 = a3 | s1\n 11567: s0 = s0 << 0x10\n 11570: a4 = a4 << 0x18\n 11573: a4 = a4 | s0\n 11576: a3 = a3 | a4\n 11579: u64 [sp + 0x18] = a3\n 11582: a3 = u8 [a5 + 0x1]\n 11585: a4 = u8 [a5]\n 11587: s1 = u8 [a5 + 0x2]\n 11590: a2 = u8 [a5 + 0x3]\n 11593: a3 = a3 << 0x8\n 11596: a3 = a3 | a4\n 11599: s1 = s1 << 0x10\n 11602: a2 = a2 << 0x18\n 11605: a2 = a2 | s1\n 11608: s0 = a2 | a3\n 11611: a2 = u8 [a5 + 0x15]\n 11614: a3 = u8 [a5 + 0x14]\n 11617: a4 = u8 [a5 + 0x16]\n 11620: a1 = u8 [a5 + 0x17]\n 11623: a2 = a2 << 0x8\n 11626: a2 = a2 | a3\n 11629: a4 = a4 << 0x10\n 11632: a1 = a1 << 0x18\n 11635: a1 = a1 | a4\n 11638: a3 = a1 | a2\n 11641: t1 = u8 [a5 + 0x5]\n 11644: a2 = u8 [a5 + 0x4]\n 11647: a4 = u8 [a5 + 0x6]\n 11650: a1 = u8 [a5 + 0x7]\n 11653: t1 = t1 << 0x8\n 11656: a2 = t1 | a2\n 11659: a4 = a4 << 0x10\n 11662: a1 = a1 << 0x18\n 11665: a1 = a1 | a4\n 11668: a1 = a1 | a2\n 11671: t1 = u8 [a5 + 0x19]\n 11674: t2 = u8 [a5 + 0x18]\n 11677: a2 = u8 [a5 + 0x1a]\n 11680: a4 = u8 [a5 + 0x1b]\n 11683: t1 = t1 << 0x8\n 11686: t1 = t1 | t2\n 11689: a2 = a2 << 0x10\n 11692: a4 = a4 << 0x18\n 11695: a2 = a2 | a4\n 11698: t1 = a2 | t1\n 11701: t2 = u8 [a5 + 0x9]\n 11704: a4 = u8 [a5 + 0x8]\n 11707: a2 = u8 [a5 + 0xa]\n 11710: ra = u8 [a5 + 0xb]\n 11713: t2 = t2 << 0x8\n 11716: a4 = t2 | a4\n 11719: a2 = a2 << 0x10\n 11722: ra = ra << 0x18\n 11725: a2 = ra | a2\n 11728: t2 = a2 | a4\n 11731: ra = u8 [a5 + 0x1d]\n 11734: a4 = u8 [a5 + 0x1c]\n 11737: a2 = u8 [a5 + 0x1e]\n 11740: s1 = t0\n 11742: t0 = u8 [a5 + 0x1f]\n 11745: ra = ra << 0x8\n 11748: a4 = ra | a4\n 11751: a2 = a2 << 0x10\n 11754: t0 = t0 << 0x18\n 11757: a2 = t0 | a2\n 11760: t0 = a2 | a4\n 11763: a4 = u8 [a5 + 0xd]\n 11766: ra = u8 [a5 + 0xc]\n 11769: a2 = u8 [a5 + 0xe]\n 11772: a5 = u8 [a5 + 0xf]\n 11775: a4 = a4 << 0x8\n 11778: a4 = a4 | ra\n 11781: a2 = a2 << 0x10\n 11784: a5 = a5 << 0x18\n 11787: a2 = a2 | a5\n 11790: a2 = a2 | a4\n 11793: a2 = a2 | t0\n 11796: a2 = a2 << 0x20\n 11799: a4 = t2 | t1\n 11802: a2 = a2 | a4\n 11805: a1 = a1 | a3\n 11808: a1 = a1 << 0x20\n 11811: a3 = u64 [sp + 0x18]\n 11814: s0 = s0 | a3\n 11817: a1 = a1 | s0\n 11820: a1 = a1 | a2\n 11823: jump @288 if a1 == 0\n      : @286 (gas: 20)\n 11826: a1 = s1 + 0x20\n 11829: a2 = a1 <u s1\n 11832: a4 = u64 [sp + 0x20]\n 11835: a3 = a4 + a2\n 11838: a4 = a3 <u a4\n 11841: a4 = a2 if a2 == 0\n 11844: a2 = u64 [sp + 0x30]\n 11847: a4 = a4 + a2\n 11850: a2 = a4 <u a2\n 11853: a5 = u64 [sp + 0x28]\n 11856: a2 = a2 + a5\n 11859: u64 [a0] = a1\n 11861: u64 [a0 + 0x8] = a3\n 11864: u64 [a0 + 0x10] = a4\n 11867: u64 [a0 + 0x18] = a2\n 11870: ra = u64 [sp + 0x48]\n 11873: s0 = u64 [sp + 0x40]\n 11876: s1 = u64 [sp + 0x38]\n 11879: sp = sp + 0x50\n 11882: ret\n      : @287 (gas: 1)\n 11884: trap\n      : @288 (gas: 8)\n 11885: a1 = u64 [sp]\n 11887: u64 [a1 + 24] = 0\n 11890: u64 [a1 + 16] = 0\n 11893: u64 [a1 + 0] = 0x717b484e\n 11899: a2 = a1\n 11901: u64 [a1 + 8] = 0\n 11904: a1 = u64 [sp + 0x8]\n 11907: jump @290 if a1 >u 63\n      : @289 (gas: 3)\n 11911: a1 = u64 [sp + 0x10]\n 11914: u32 [a1 + 0] = 0x40\n 11917: fallthrough\n      : @290 (gas: 14)\n 11918: u32 [a2 + 32] = 0x32000000\n 11925: u32 [a2 + 28] = 0\n 11928: u32 [a2 + 24] = 0\n 11931: u32 [a2 + 20] = 0\n 11934: u32 [a2 + 16] = 0\n 11937: u32 [a2 + 12] = 0\n 11940: u32 [a2 + 8] = 0\n 11943: u32 [a2 + 4] = 0\n 11946: i32 a1 = a2 + 0\n 11948: a0 = 0x1\n 11951: a2 = 0x24\n 11954: ra = 0x3c\n 11957: ecalli 5 // 'seal_return'\n 11959: fallthrough\n      : @291 [@dyn 30] (gas: 16)\n 11960: sp = sp + 0xffffffffffffffc0\n 11963: u64 [sp + 0x38] = ra\n 11966: u64 [sp + 0x30] = s0\n 11969: u64 [sp + 0x28] = s1\n 11972: t2 = u64 [a1 + 0x10]\n 11975: a2 = u64 [a1 + 0x18]\n 11978: a4 = u64 [a1 + 0x8]\n 11981: t1 = u64 [a1]\n 11983: a3 = a4 | a2\n 11986: a5 = t1 | t2\n 11989: a5 = a5 | a3\n 11992: a5 = a5 >> 0x20\n 11995: a3 = a3 | t2\n 11998: a3 = a3 << 0x20\n 12001: a3 = a3 | a5\n 12004: jump @298 if a3 != 0\n      : @292 (gas: 2)\n 12008: i32 a3 = t1 >> 0x10\n 12011: jump @298 if a3 != 0\n      : @293 (gas: 3)\n 12015: a3 = t1 + 0x3f\n 12018: a3 = a3 & 0x1ffe0\n 12023: jump @298 if a3 >u 65536\n      : @294 (gas: 5)\n 12030: u64 [sp + 0x18] = a4\n 12033: u64 [sp + 0x20] = a2\n 12036: a1 = 0x20044\n 12041: a2 = i32 [0x20044]\n 12046: jump @296 if a2 >=u a3\n      : @295 (gas: 3)\n 12049: u32 [0x20044] = a3\n 12054: a2 = a3\n 12056: fallthrough\n      : @296 (gas: 108)\n 12057: u64 [sp + 0x8] = a2\n 12060: u64 [sp + 0x10] = a1\n 12063: a1 = 0x20050\n 12068: i32 a5 = t1 + 0\n 12070: u64 [sp] = a1\n 12072: a5 = a5 + a1\n 12075: a3 = u8 [a5 + 0x1]\n 12078: s0 = u8 [a5]\n 12080: s1 = u8 [a5 + 0x2]\n 12083: t0 = u8 [a5 + 0x3]\n 12086: a3 = a3 << 0x8\n 12089: a3 = a3 | s0\n 12092: s1 = s1 << 0x10\n 12095: t0 = t0 << 0x18\n 12098: s1 = t0 | s1\n 12101: a3 = a3 | s1\n 12104: s1 = u8 [a5 + 0x5]\n 12107: s0 = u8 [a5 + 0x4]\n 12110: a4 = u8 [a5 + 0x6]\n 12113: a2 = u8 [a5 + 0x7]\n 12116: s1 = s1 << 0x8\n 12119: s0 = s0 | s1\n 12122: a4 = a4 << 0x10\n 12125: a2 = a2 << 0x18\n 12128: a2 = a2 | a4\n 12131: a2 = a2 | s0\n 12134: a2 = a2 << 0x20\n 12137: t0 = a2 | a3\n 12140: a2 = u8 [a5 + 0x9]\n 12143: a3 = u8 [a5 + 0x8]\n 12146: a4 = u8 [a5 + 0xa]\n 12149: s1 = u8 [a5 + 0xb]\n 12152: a2 = a2 << 0x8\n 12155: a2 = a2 | a3\n 12158: a4 = a4 << 0x10\n 12161: s1 = s1 << 0x18\n 12164: a4 = a4 | s1\n 12167: a2 = a2 | a4\n 12170: a3 = u8 [a5 + 0xd]\n 12173: a4 = u8 [a5 + 0xc]\n 12176: s1 = u8 [a5 + 0xe]\n 12179: s0 = u8 [a5 + 0xf]\n 12182: a3 = a3 << 0x8\n 12185: a3 = a3 | a4\n 12188: s1 = s1 << 0x10\n 12191: s0 = s0 << 0x18\n 12194: s0 = s0 | s1\n 12197: a3 = a3 | s0\n 12200: a3 = a3 << 0x20\n 12203: s1 = a3 | a2\n 12206: a2 = u8 [a5 + 0x11]\n 12209: a3 = u8 [a5 + 0x10]\n 12212: a4 = u8 [a5 + 0x12]\n 12215: s0 = u8 [a5 + 0x13]\n 12218: a2 = a2 << 0x8\n 12221: a2 = a2 | a3\n 12224: a4 = a4 << 0x10\n 12227: s0 = s0 << 0x18\n 12230: a4 = a4 | s0\n 12233: a2 = a2 | a4\n 12236: a3 = u8 [a5 + 0x15]\n 12239: a4 = u8 [a5 + 0x14]\n 12242: s0 = u8 [a5 + 0x16]\n 12245: ra = u8 [a5 + 0x17]\n 12248: a3 = a3 << 0x8\n 12251: a3 = a3 | a4\n 12254: s0 = s0 << 0x10\n 12257: ra = ra << 0x18\n 12260: a4 = ra | s0\n 12263: a3 = a3 | a4\n 12266: a3 = a3 << 0x20\n 12269: a3 = a3 | a2\n 12272: a2 = u8 [a5 + 0x19]\n 12275: a4 = u8 [a5 + 0x18]\n 12278: s0 = u8 [a5 + 0x1a]\n 12281: a1 = u8 [a5 + 0x1b]\n 12284: a2 = a2 << 0x8\n 12287: a2 = a2 | a4\n 12290: s0 = s0 << 0x10\n 12293: a1 = a1 << 0x18\n 12296: a1 = a1 | s0\n 12299: a1 = a1 | a2\n 12302: a2 = u8 [a5 + 0x1d]\n 12305: a4 = u8 [a5 + 0x1c]\n 12308: s0 = u8 [a5 + 0x1e]\n 12311: a5 = u8 [a5 + 0x1f]\n 12314: a2 = a2 << 0x8\n 12317: a2 = a2 | a4\n 12320: s0 = s0 << 0x10\n 12323: a5 = a5 << 0x18\n 12326: a5 = a5 | s0\n 12329: a2 = a2 | a5\n 12332: a2 = a2 << 0x20\n 12335: a1 = a1 | a2\n 12338: a1 = reverse a1\n 12340: a2 = reverse a3\n 12342: a3 = reverse s1\n 12344: a4 = reverse t0\n 12346: a5 = a4 >u 0\n 12348: s1 = a3 >u 0\n 12350: s1 = a5 if a4 != 0\n 12353: a5 = a2 >u 0\n 12355: a1 = a1 <u 0x2\n 12358: a1 = a1 ^ 0x1\n 12361: a1 = a5 if a2 != 0\n 12364: a3 = a3 | a4\n 12367: a1 = s1 if a3 != 0\n 12370: jump @299 if a1 == 0\n      : @297 (gas: 19)\n 12373: a1 = t1 + 0x40\n 12376: a2 = a1 <u t1\n 12379: a4 = u64 [sp + 0x18]\n 12382: a3 = a4 + a2\n 12385: a4 = a3 <u a4\n 12388: a4 = a2 if a2 == 0\n 12391: a4 = a4 + t2\n 12394: a2 = a4 <u t2\n 12397: a5 = u64 [sp + 0x20]\n 12400: a2 = a2 + a5\n 12403: u64 [a0] = a1\n 12405: u64 [a0 + 0x8] = a3\n 12408: u64 [a0 + 0x10] = a4\n 12411: u64 [a0 + 0x18] = a2\n 12414: ra = u64 [sp + 0x38]\n 12417: s0 = u64 [sp + 0x30]\n 12420: s1 = u64 [sp + 0x28]\n 12423: sp = sp + 0x40\n 12426: ret\n      : @298 (gas: 1)\n 12428: trap\n      : @299 (gas: 8)\n 12429: a1 = u64 [sp]\n 12431: u64 [a1 + 24] = 0\n 12434: u64 [a1 + 16] = 0\n 12437: u64 [a1 + 0] = 0x717b484e\n 12443: a2 = a1\n 12445: u64 [a1 + 8] = 0\n 12448: a1 = u64 [sp + 0x8]\n 12451: jump @301 if a1 >u 63\n      : @300 (gas: 3)\n 12455: a1 = u64 [sp + 0x10]\n 12458: u32 [a1 + 0] = 0x40\n 12461: fallthrough\n      : @301 (gas: 14)\n 12462: u32 [a2 + 32] = 0x32000000\n 12469: u32 [a2 + 28] = 0\n 12472: u32 [a2 + 24] = 0\n 12475: u32 [a2 + 20] = 0\n 12478: u32 [a2 + 16] = 0\n 12481: u32 [a2 + 12] = 0\n 12484: u32 [a2 + 8] = 0\n 12487: u32 [a2 + 4] = 0\n 12490: i32 a1 = a2 + 0\n 12492: a0 = 0x1\n 12495: a2 = 0x24\n 12498: ra = 0x3e\n 12501: ecalli 5 // 'seal_return'\n 12503: fallthrough\n      : @302 [@dyn 31] (gas: 16)\n 12504: sp = sp + 0xffffffffffffffc0\n 12507: u64 [sp + 0x38] = ra\n 12510: u64 [sp + 0x30] = s0\n 12513: u64 [sp + 0x28] = s1\n 12516: t2 = u64 [a1 + 0x10]\n 12519: a2 = u64 [a1 + 0x18]\n 12522: a4 = u64 [a1 + 0x8]\n 12525: t1 = u64 [a1]\n 12527: a3 = a4 | a2\n 12530: a5 = t1 | t2\n 12533: a5 = a5 | a3\n 12536: a5 = a5 >> 0x20\n 12539: a3 = a3 | t2\n 12542: a3 = a3 << 0x20\n 12545: a3 = a3 | a5\n 12548: jump @309 if a3 != 0\n      : @303 (gas: 2)\n 12552: i32 a3 = t1 >> 0x10\n 12555: jump @309 if a3 != 0\n      : @304 (gas: 3)\n 12559: a3 = t1 + 0x3f\n 12562: a3 = a3 & 0x1ffe0\n 12567: jump @309 if a3 >u 65536\n      : @305 (gas: 5)\n 12574: u64 [sp + 0x18] = a4\n 12577: u64 [sp + 0x20] = a2\n 12580: a1 = 0x20044\n 12585: a2 = i32 [0x20044]\n 12590: jump @307 if a2 >=u a3\n      : @306 (gas: 3)\n 12593: u32 [0x20044] = a3\n 12598: a2 = a3\n 12600: fallthrough\n      : @307 (gas: 108)\n 12601: u64 [sp + 0x8] = a2\n 12604: u64 [sp + 0x10] = a1\n 12607: a1 = 0x20050\n 12612: i32 a5 = t1 + 0\n 12614: u64 [sp] = a1\n 12616: a5 = a5 + a1\n 12619: a3 = u8 [a5 + 0x1]\n 12622: s0 = u8 [a5]\n 12624: s1 = u8 [a5 + 0x2]\n 12627: t0 = u8 [a5 + 0x3]\n 12630: a3 = a3 << 0x8\n 12633: a3 = a3 | s0\n 12636: s1 = s1 << 0x10\n 12639: t0 = t0 << 0x18\n 12642: s1 = t0 | s1\n 12645: a3 = a3 | s1\n 12648: s1 = u8 [a5 + 0x5]\n 12651: s0 = u8 [a5 + 0x4]\n 12654: a4 = u8 [a5 + 0x6]\n 12657: a2 = u8 [a5 + 0x7]\n 12660: s1 = s1 << 0x8\n 12663: s0 = s0 | s1\n 12666: a4 = a4 << 0x10\n 12669: a2 = a2 << 0x18\n 12672: a2 = a2 | a4\n 12675: a2 = a2 | s0\n 12678: a2 = a2 << 0x20\n 12681: t0 = a2 | a3\n 12684: a2 = u8 [a5 + 0x9]\n 12687: a3 = u8 [a5 + 0x8]\n 12690: a4 = u8 [a5 + 0xa]\n 12693: s1 = u8 [a5 + 0xb]\n 12696: a2 = a2 << 0x8\n 12699: a2 = a2 | a3\n 12702: a4 = a4 << 0x10\n 12705: s1 = s1 << 0x18\n 12708: a4 = a4 | s1\n 12711: a2 = a2 | a4\n 12714: a3 = u8 [a5 + 0xd]\n 12717: a4 = u8 [a5 + 0xc]\n 12720: s1 = u8 [a5 + 0xe]\n 12723: s0 = u8 [a5 + 0xf]\n 12726: a3 = a3 << 0x8\n 12729: a3 = a3 | a4\n 12732: s1 = s1 << 0x10\n 12735: s0 = s0 << 0x18\n 12738: s0 = s0 | s1\n 12741: a3 = a3 | s0\n 12744: a3 = a3 << 0x20\n 12747: s1 = a3 | a2\n 12750: a2 = u8 [a5 + 0x11]\n 12753: a3 = u8 [a5 + 0x10]\n 12756: a4 = u8 [a5 + 0x12]\n 12759: s0 = u8 [a5 + 0x13]\n 12762: a2 = a2 << 0x8\n 12765: a2 = a2 | a3\n 12768: a4 = a4 << 0x10\n 12771: s0 = s0 << 0x18\n 12774: a4 = a4 | s0\n 12777: a2 = a2 | a4\n 12780: a3 = u8 [a5 + 0x15]\n 12783: a4 = u8 [a5 + 0x14]\n 12786: s0 = u8 [a5 + 0x16]\n 12789: ra = u8 [a5 + 0x17]\n 12792: a3 = a3 << 0x8\n 12795: a3 = a3 | a4\n 12798: s0 = s0 << 0x10\n 12801: ra = ra << 0x18\n 12804: a4 = ra | s0\n 12807: a3 = a3 | a4\n 12810: a3 = a3 << 0x20\n 12813: a3 = a3 | a2\n 12816: a2 = u8 [a5 + 0x19]\n 12819: a4 = u8 [a5 + 0x18]\n 12822: s0 = u8 [a5 + 0x1a]\n 12825: a1 = u8 [a5 + 0x1b]\n 12828: a2 = a2 << 0x8\n 12831: a2 = a2 | a4\n 12834: s0 = s0 << 0x10\n 12837: a1 = a1 << 0x18\n 12840: a1 = a1 | s0\n 12843: a1 = a1 | a2\n 12846: a2 = u8 [a5 + 0x1d]\n 12849: a4 = u8 [a5 + 0x1c]\n 12852: s0 = u8 [a5 + 0x1e]\n 12855: a5 = u8 [a5 + 0x1f]\n 12858: a2 = a2 << 0x8\n 12861: a2 = a2 | a4\n 12864: s0 = s0 << 0x10\n 12867: a5 = a5 << 0x18\n 12870: a5 = a5 | s0\n 12873: a2 = a2 | a5\n 12876: a2 = a2 << 0x20\n 12879: a1 = a1 | a2\n 12882: a1 = reverse a1\n 12884: a2 = reverse a3\n 12886: a3 = reverse s1\n 12888: a4 = reverse t0\n 12890: a5 = a4 >u 0\n 12892: s1 = a3 >u 0\n 12894: s1 = a5 if a4 != 0\n 12897: a5 = a2 >u 0\n 12899: a1 = a1 <u 0x3\n 12902: a1 = a1 ^ 0x1\n 12905: a1 = a5 if a2 != 0\n 12908: a3 = a3 | a4\n 12911: a1 = s1 if a3 != 0\n 12914: jump @310 if a1 == 0\n      : @308 (gas: 19)\n 12917: a1 = t1 + 0x60\n 12920: a2 = a1 <u t1\n 12923: a4 = u64 [sp + 0x18]\n 12926: a3 = a4 + a2\n 12929: a4 = a3 <u a4\n 12932: a4 = a2 if a2 == 0\n 12935: a4 = a4 + t2\n 12938: a2 = a4 <u t2\n 12941: a5 = u64 [sp + 0x20]\n 12944: a2 = a2 + a5\n 12947: u64 [a0] = a1\n 12949: u64 [a0 + 0x8] = a3\n 12952: u64 [a0 + 0x10] = a4\n 12955: u64 [a0 + 0x18] = a2\n 12958: ra = u64 [sp + 0x38]\n 12961: s0 = u64 [sp + 0x30]\n 12964: s1 = u64 [sp + 0x28]\n 12967: sp = sp + 0x40\n 12970: ret\n      : @309 (gas: 1)\n 12972: trap\n      : @310 (gas: 8)\n 12973: a1 = u64 [sp]\n 12975: u64 [a1 + 24] = 0\n 12978: u64 [a1 + 16] = 0\n 12981: u64 [a1 + 0] = 0x717b484e\n 12987: a2 = a1\n 12989: u64 [a1 + 8] = 0\n 12992: a1 = u64 [sp + 0x8]\n 12995: jump @312 if a1 >u 63\n      : @311 (gas: 3)\n 12999: a1 = u64 [sp + 0x10]\n 13002: u32 [a1 + 0] = 0x40\n 13005: fallthrough\n      : @312 (gas: 14)\n 13006: u32 [a2 + 32] = 0x32000000\n 13013: u32 [a2 + 28] = 0\n 13016: u32 [a2 + 24] = 0\n 13019: u32 [a2 + 20] = 0\n 13022: u32 [a2 + 16] = 0\n 13025: u32 [a2 + 12] = 0\n 13028: u32 [a2 + 8] = 0\n 13031: u32 [a2 + 4] = 0\n 13034: i32 a1 = a2 + 0\n 13036: a0 = 0x1\n 13039: a2 = 0x24\n 13042: ra = 0x40\n 13045: ecalli 5 // 'seal_return'\n 13047: fallthrough\n      : @313 [@dyn 32] (gas: 16)\n 13048: sp = sp + 0xffffffffffffffc0\n 13051: u64 [sp + 0x38] = ra\n 13054: u64 [sp + 0x30] = s0\n 13057: u64 [sp + 0x28] = s1\n 13060: t2 = u64 [a1 + 0x10]\n 13063: a2 = u64 [a1 + 0x18]\n 13066: a4 = u64 [a1 + 0x8]\n 13069: t1 = u64 [a1]\n 13071: a3 = a4 | a2\n 13074: a5 = t1 | t2\n 13077: a5 = a5 | a3\n 13080: a5 = a5 >> 0x20\n 13083: a3 = a3 | t2\n 13086: a3 = a3 << 0x20\n 13089: a3 = a3 | a5\n 13092: jump @320 if a3 != 0\n      : @314 (gas: 2)\n 13096: i32 a3 = t1 >> 0x10\n 13099: jump @320 if a3 != 0\n      : @315 (gas: 3)\n 13103: a3 = t1 + 0x3f\n 13106: a3 = a3 & 0x1ffe0\n 13111: jump @320 if a3 >u 65536\n      : @316 (gas: 5)\n 13118: u64 [sp + 0x18] = a4\n 13121: u64 [sp + 0x20] = a2\n 13124: a1 = 0x20044\n 13129: a2 = i32 [0x20044]\n 13134: jump @318 if a2 >=u a3\n      : @317 (gas: 3)\n 13137: u32 [0x20044] = a3\n 13142: a2 = a3\n 13144: fallthrough\n      : @318 (gas: 108)\n 13145: u64 [sp + 0x8] = a2\n 13148: u64 [sp + 0x10] = a1\n 13151: a1 = 0x20050\n 13156: i32 a5 = t1 + 0\n 13158: u64 [sp] = a1\n 13160: a5 = a5 + a1\n 13163: a3 = u8 [a5 + 0x1]\n 13166: s0 = u8 [a5]\n 13168: s1 = u8 [a5 + 0x2]\n 13171: t0 = u8 [a5 + 0x3]\n 13174: a3 = a3 << 0x8\n 13177: a3 = a3 | s0\n 13180: s1 = s1 << 0x10\n 13183: t0 = t0 << 0x18\n 13186: s1 = t0 | s1\n 13189: a3 = a3 | s1\n 13192: s1 = u8 [a5 + 0x5]\n 13195: s0 = u8 [a5 + 0x4]\n 13198: a4 = u8 [a5 + 0x6]\n 13201: a2 = u8 [a5 + 0x7]\n 13204: s1 = s1 << 0x8\n 13207: s0 = s0 | s1\n 13210: a4 = a4 << 0x10\n 13213: a2 = a2 << 0x18\n 13216: a2 = a2 | a4\n 13219: a2 = a2 | s0\n 13222: a2 = a2 << 0x20\n 13225: t0 = a2 | a3\n 13228: a2 = u8 [a5 + 0x9]\n 13231: a3 = u8 [a5 + 0x8]\n 13234: a4 = u8 [a5 + 0xa]\n 13237: s1 = u8 [a5 + 0xb]\n 13240: a2 = a2 << 0x8\n 13243: a2 = a2 | a3\n 13246: a4 = a4 << 0x10\n 13249: s1 = s1 << 0x18\n 13252: a4 = a4 | s1\n 13255: a2 = a2 | a4\n 13258: a3 = u8 [a5 + 0xd]\n 13261: a4 = u8 [a5 + 0xc]\n 13264: s1 = u8 [a5 + 0xe]\n 13267: s0 = u8 [a5 + 0xf]\n 13270: a3 = a3 << 0x8\n 13273: a3 = a3 | a4\n 13276: s1 = s1 << 0x10\n 13279: s0 = s0 << 0x18\n 13282: s0 = s0 | s1\n 13285: a3 = a3 | s0\n 13288: a3 = a3 << 0x20\n 13291: s1 = a3 | a2\n 13294: a2 = u8 [a5 + 0x11]\n 13297: a3 = u8 [a5 + 0x10]\n 13300: a4 = u8 [a5 + 0x12]\n 13303: s0 = u8 [a5 + 0x13]\n 13306: a2 = a2 << 0x8\n 13309: a2 = a2 | a3\n 13312: a4 = a4 << 0x10\n 13315: s0 = s0 << 0x18\n 13318: a4 = a4 | s0\n 13321: a2 = a2 | a4\n 13324: a3 = u8 [a5 + 0x15]\n 13327: a4 = u8 [a5 + 0x14]\n 13330: s0 = u8 [a5 + 0x16]\n 13333: ra = u8 [a5 + 0x17]\n 13336: a3 = a3 << 0x8\n 13339: a3 = a3 | a4\n 13342: s0 = s0 << 0x10\n 13345: ra = ra << 0x18\n 13348: a4 = ra | s0\n 13351: a3 = a3 | a4\n 13354: a3 = a3 << 0x20\n 13357: a3 = a3 | a2\n 13360: a2 = u8 [a5 + 0x19]\n 13363: a4 = u8 [a5 + 0x18]\n 13366: s0 = u8 [a5 + 0x1a]\n 13369: a1 = u8 [a5 + 0x1b]\n 13372: a2 = a2 << 0x8\n 13375: a2 = a2 | a4\n 13378: s0 = s0 << 0x10\n 13381: a1 = a1 << 0x18\n 13384: a1 = a1 | s0\n 13387: a1 = a1 | a2\n 13390: a2 = u8 [a5 + 0x1d]\n 13393: a4 = u8 [a5 + 0x1c]\n 13396: s0 = u8 [a5 + 0x1e]\n 13399: a5 = u8 [a5 + 0x1f]\n 13402: a2 = a2 << 0x8\n 13405: a2 = a2 | a4\n 13408: s0 = s0 << 0x10\n 13411: a5 = a5 << 0x18\n 13414: a5 = a5 | s0\n 13417: a2 = a2 | a5\n 13420: a2 = a2 << 0x20\n 13423: a1 = a1 | a2\n 13426: a1 = reverse a1\n 13428: a2 = reverse a3\n 13430: a3 = reverse s1\n 13432: a4 = reverse t0\n 13434: a5 = a4 >u 0\n 13436: s1 = a3 >u 0\n 13438: s1 = a5 if a4 != 0\n 13441: a5 = a2 >u 0\n 13443: a1 = a1 <u 0x4\n 13446: a1 = a1 ^ 0x1\n 13449: a1 = a5 if a2 != 0\n 13452: a3 = a3 | a4\n 13455: a1 = s1 if a3 != 0\n 13458: jump @321 if a1 == 0\n      : @319 (gas: 19)\n 13461: a1 = t1 + 0x80\n 13465: a2 = a1 <u t1\n 13468: a4 = u64 [sp + 0x18]\n 13471: a3 = a4 + a2\n 13474: a4 = a3 <u a4\n 13477: a4 = a2 if a2 == 0\n 13480: a4 = a4 + t2\n 13483: a2 = a4 <u t2\n 13486: a5 = u64 [sp + 0x20]\n 13489: a2 = a2 + a5\n 13492: u64 [a0] = a1\n 13494: u64 [a0 + 0x8] = a3\n 13497: u64 [a0 + 0x10] = a4\n 13500: u64 [a0 + 0x18] = a2\n 13503: ra = u64 [sp + 0x38]\n 13506: s0 = u64 [sp + 0x30]\n 13509: s1 = u64 [sp + 0x28]\n 13512: sp = sp + 0x40\n 13515: ret\n      : @320 (gas: 1)\n 13517: trap\n      : @321 (gas: 8)\n 13518: a1 = u64 [sp]\n 13520: u64 [a1 + 24] = 0\n 13523: u64 [a1 + 16] = 0\n 13526: u64 [a1 + 0] = 0x717b484e\n 13532: a2 = a1\n 13534: u64 [a1 + 8] = 0\n 13537: a1 = u64 [sp + 0x8]\n 13540: jump @323 if a1 >u 63\n      : @322 (gas: 3)\n 13544: a1 = u64 [sp + 0x10]\n 13547: u32 [a1 + 0] = 0x40\n 13550: fallthrough\n      : @323 (gas: 14)\n 13551: u32 [a2 + 32] = 0x32000000\n 13558: u32 [a2 + 28] = 0\n 13561: u32 [a2 + 24] = 0\n 13564: u32 [a2 + 20] = 0\n 13567: u32 [a2 + 16] = 0\n 13570: u32 [a2 + 12] = 0\n 13573: u32 [a2 + 8] = 0\n 13576: u32 [a2 + 4] = 0\n 13579: i32 a1 = a2 + 0\n 13581: a0 = 0x1\n 13584: a2 = 0x24\n 13587: ra = 0x42\n 13590: ecalli 5 // 'seal_return'\n 13592: fallthrough\n      : @324 [@dyn 33] (gas: 16)\n 13593: sp = sp + 0xffffffffffffffa0\n 13596: u64 [sp + 0x58] = ra\n 13599: u64 [sp + 0x50] = s0\n 13602: u64 [sp + 0x48] = s1\n 13605: a5 = u64 [a1 + 0x10]\n 13608: s1 = u64 [a1 + 0x18]\n 13611: s0 = u64 [a1 + 0x8]\n 13614: a1 = u64 [a1]\n 13616: a3 = s0 | s1\n 13619: a4 = a1 | a5\n 13622: a4 = a4 | a3\n 13625: a4 = a4 >> 0x20\n 13628: a3 = a3 | a5\n 13631: a3 = a3 << 0x20\n 13634: a3 = a3 | a4\n 13637: jump @331 if a3 != 0\n      : @325 (gas: 2)\n 13641: i32 a3 = a1 >> 0x10\n 13644: jump @331 if a3 != 0\n      : @326 (gas: 3)\n 13648: a3 = a1 + 0x3f\n 13651: a3 = a3 & 0x1ffe0\n 13656: jump @331 if a3 >u 65536\n      : @327 (gas: 13)\n 13663: u64 [sp + 0x28] = s0\n 13666: u64 [sp + 0x30] = s1\n 13669: u64 [sp + 0x38] = a5\n 13672: u64 [sp + 0x40] = a0\n 13675: a0 = 0x20044\n 13680: a4 = u64 [a2 + 0x18]\n 13683: u64 [sp + 0x18] = a4\n 13686: t2 = u64 [a2 + 0x10]\n 13689: t0 = u64 [a2 + 0x8]\n 13692: a4 = i32 [0x20044]\n 13697: a2 = u64 [a2]\n 13699: u64 [sp + 0x20] = a2\n 13702: jump @329 if a4 >=u a3\n      : @328 (gas: 3)\n 13705: u32 [0x20044] = a3\n 13710: a4 = a3\n 13712: fallthrough\n      : @329 (gas: 112)\n 13713: u64 [sp + 0x8] = a4\n 13716: u64 [sp + 0x10] = a0\n 13719: a0 = 0x20050\n 13724: i32 t1 = a1 + 0\n 13726: u64 [sp] = a0\n 13728: t1 = t1 + a0\n 13731: a3 = u8 [t1 + 0x1]\n 13734: a2 = u8 [t1]\n 13736: s1 = u8 [t1 + 0x2]\n 13739: a0 = u8 [t1 + 0x3]\n 13742: a3 = a3 << 0x8\n 13745: a2 = a2 | a3\n 13748: s1 = s1 << 0x10\n 13751: a0 = a0 << 0x18\n 13754: a0 = a0 | s1\n 13757: a0 = a0 | a2\n 13760: a2 = u8 [t1 + 0x5]\n 13763: a3 = u8 [t1 + 0x4]\n 13766: s1 = u8 [t1 + 0x6]\n 13769: a5 = u8 [t1 + 0x7]\n 13772: a2 = a2 << 0x8\n 13775: a2 = a2 | a3\n 13778: s1 = s1 << 0x10\n 13781: a5 = a5 << 0x18\n 13784: a5 = a5 | s1\n 13787: a2 = a2 | a5\n 13790: a2 = a2 << 0x20\n 13793: a3 = a2 | a0\n 13796: a0 = u8 [t1 + 0x9]\n 13799: a2 = u8 [t1 + 0x8]\n 13802: a5 = u8 [t1 + 0xa]\n 13805: s1 = u8 [t1 + 0xb]\n 13808: a0 = a0 << 0x8\n 13811: a0 = a0 | a2\n 13814: a5 = a5 << 0x10\n 13817: s1 = s1 << 0x18\n 13820: a5 = a5 | s1\n 13823: a0 = a0 | a5\n 13826: a2 = u8 [t1 + 0xd]\n 13829: a5 = u8 [t1 + 0xc]\n 13832: s1 = u8 [t1 + 0xe]\n 13835: a4 = u8 [t1 + 0xf]\n 13838: a2 = a2 << 0x8\n 13841: a2 = a2 | a5\n 13844: s1 = s1 << 0x10\n 13847: a4 = a4 << 0x18\n 13850: a4 = a4 | s1\n 13853: a2 = a2 | a4\n 13856: a2 = a2 << 0x20\n 13859: s0 = a2 | a0\n 13862: a0 = u8 [t1 + 0x11]\n 13865: a2 = u8 [t1 + 0x10]\n 13868: a4 = u8 [t1 + 0x12]\n 13871: a5 = u8 [t1 + 0x13]\n 13874: a0 = a0 << 0x8\n 13877: a0 = a0 | a2\n 13880: a4 = a4 << 0x10\n 13883: a5 = a5 << 0x18\n 13886: a4 = a4 | a5\n 13889: a0 = a0 | a4\n 13892: a2 = u8 [t1 + 0x15]\n 13895: a4 = u8 [t1 + 0x14]\n 13898: a5 = u8 [t1 + 0x16]\n 13901: s1 = u8 [t1 + 0x17]\n 13904: a2 = a2 << 0x8\n 13907: a2 = a2 | a4\n 13910: a5 = a5 << 0x10\n 13913: s1 = s1 << 0x18\n 13916: a5 = a5 | s1\n 13919: a2 = a2 | a5\n 13922: a2 = a2 << 0x20\n 13925: ra = a2 | a0\n 13928: a0 = u8 [t1 + 0x19]\n 13931: a2 = u8 [t1 + 0x18]\n 13934: a4 = u8 [t1 + 0x1a]\n 13937: a5 = u8 [t1 + 0x1b]\n 13940: a0 = a0 << 0x8\n 13943: a0 = a0 | a2\n 13946: a4 = a4 << 0x10\n 13949: a5 = a5 << 0x18\n 13952: a4 = a4 | a5\n 13955: a0 = a0 | a4\n 13958: a2 = u8 [t1 + 0x1d]\n 13961: a4 = u8 [t1 + 0x1c]\n 13964: a5 = u8 [t1 + 0x1e]\n 13967: s1 = u8 [t1 + 0x1f]\n 13970: a2 = a2 << 0x8\n 13973: a2 = a2 | a4\n 13976: a5 = a5 << 0x10\n 13979: s1 = s1 << 0x18\n 13982: a5 = a5 | s1\n 13985: a2 = a2 | a5\n 13988: a2 = a2 << 0x20\n 13991: a0 = a0 | a2\n 13994: a0 = reverse a0\n 13996: a2 = reverse ra\n 13998: a4 = reverse s0\n 14000: s1 = reverse a3\n 14002: a5 = a2 ^ t0\n 14005: a2 = t0 <u a2\n 14008: a3 = u64 [sp + 0x20]\n 14011: a0 = a3 <u a0\n 14014: a0 = a2 if a5 != 0\n 14017: s0 = u64 [sp + 0x18]\n 14020: a2 = s1 ^ s0\n 14023: s1 = s0 <u s1\n 14026: a5 = t2 <u a4\n 14029: a5 = s1 if a2 != 0\n 14032: a4 = a4 ^ t2\n 14035: a2 = a2 | a4\n 14038: a0 = a5 if a2 != 0\n 14041: jump @332 if a0 == 0\n      : @330 (gas: 45)\n 14045: a0 = t2 >> 0x3b\n 14048: a2 = s0 << 0x5\n 14051: a0 = a0 | a2\n 14054: a2 = t0 >> 0x3b\n 14057: s0 = t2 << 0x5\n 14060: a2 = a2 | s0\n 14063: a4 = a3 >> 0x3b\n 14066: t0 = t0 << 0x5\n 14069: s1 = t0 | a4\n 14072: a4 = a3 << 0x5\n 14075: a4 = a4 + a1\n 14078: a1 = a4 <u a1\n 14081: a5 = u64 [sp + 0x28]\n 14084: a3 = a5 + s1\n 14087: a3 = a3 + a1\n 14090: s0 = a3 ^ a5\n 14093: s1 = a3 <u a5\n 14096: s1 = a1 if s0 == 0\n 14099: a5 = u64 [sp + 0x38]\n 14102: a2 = a2 + a5\n 14105: s1 = s1 + a2\n 14108: a1 = s1 <u a2\n 14111: a2 = a2 <u a5\n 14114: a5 = u64 [sp + 0x30]\n 14117: a0 = a0 + a5\n 14120: a0 = a0 + a2\n 14123: a0 = a0 + a1\n 14126: a1 = a4 + 0x20\n 14129: a2 = a1 <u a4\n 14132: a4 = a3 + a2\n 14135: a3 = a4 <u a3\n 14138: a3 = a2 if a2 == 0\n 14141: a3 = a3 + s1\n 14144: a2 = a3 <u s1\n 14147: a0 = a0 + a2\n 14150: a2 = u64 [sp + 0x40]\n 14153: u64 [a2] = a1\n 14155: u64 [a2 + 0x8] = a4\n 14158: u64 [a2 + 0x10] = a3\n 14161: u64 [a2 + 0x18] = a0\n 14164: ra = u64 [sp + 0x58]\n 14167: s0 = u64 [sp + 0x50]\n 14170: s1 = u64 [sp + 0x48]\n 14173: sp = sp + 0x60\n 14176: ret\n      : @331 (gas: 1)\n 14178: trap\n      : @332 (gas: 8)\n 14179: a1 = u64 [sp]\n 14181: u64 [a1 + 24] = 0\n 14184: u64 [a1 + 16] = 0\n 14187: u64 [a1 + 0] = 0x717b484e\n 14193: a2 = a1\n 14195: u64 [a1 + 8] = 0\n 14198: a1 = u64 [sp + 0x8]\n 14201: jump @334 if a1 >u 63\n      : @333 (gas: 3)\n 14205: a1 = u64 [sp + 0x10]\n 14208: u32 [a1 + 0] = 0x40\n 14211: fallthrough\n      : @334 (gas: 14)\n 14212: u32 [a2 + 32] = 0x32000000\n 14219: u32 [a2 + 28] = 0\n 14222: u32 [a2 + 24] = 0\n 14225: u32 [a2 + 20] = 0\n 14228: u32 [a2 + 16] = 0\n 14231: u32 [a2 + 12] = 0\n 14234: u32 [a2 + 8] = 0\n 14237: u32 [a2 + 4] = 0\n 14240: i32 a1 = a2 + 0\n 14242: a0 = 0x1\n 14245: a2 = 0x24\n 14248: ra = 0x44\n 14251: ecalli 5 // 'seal_return'\n 14253: fallthrough\n      : @335 [@dyn 34] (gas: 40)\n 14254: sp = sp + 0xfffffffffffffc50\n 14258: u64 [sp + 0x3a8] = ra\n 14262: u64 [sp + 0x3a0] = s0\n 14266: u64 [sp + 0x398] = s1\n 14270: s0 = sp + 0x3b0\n 14274: sp = sp & 0xfffffffffffffff0\n 14277: a5 = u64 [a4 + 0x18]\n 14280: u64 [sp + 0x258] = a5\n 14284: a5 = u64 [a4 + 0x10]\n 14287: u64 [sp + 0x260] = a5\n 14291: a5 = u64 [a4 + 0x8]\n 14294: u64 [sp + 0x290] = a5\n 14298: a4 = u64 [a4]\n 14300: u64 [sp + 0x2c8] = a4\n 14304: a4 = u64 [a3 + 0x18]\n 14307: u64 [sp + 0x10] = a4\n 14310: a4 = u64 [a3 + 0x10]\n 14313: u64 [sp + 0x8] = a4\n 14316: a4 = u64 [a3 + 0x8]\n 14319: u64 [sp + 0x18] = a4\n 14322: a3 = u64 [a3]\n 14324: u64 [sp + 0x20] = a3\n 14327: a3 = u64 [a2 + 0x18]\n 14330: u64 [sp + 0x280] = a3\n 14334: a3 = u64 [a2 + 0x10]\n 14337: u64 [sp + 0x278] = a3\n 14341: a3 = u64 [a2 + 0x8]\n 14344: u64 [sp + 0x288] = a3\n 14348: a2 = u64 [a2]\n 14350: u64 [sp + 0x2a8] = a2\n 14354: a2 = u64 [a1 + 0x10]\n 14357: u64 [sp + 0x2e0] = a2\n 14361: a2 = u64 [a1]\n 14363: u64 [sp + 0x270] = a2\n 14367: a2 = u64 [a1 + 0x18]\n 14370: u64 [sp + 0x2d8] = a2\n 14374: s1 = u64 [a1 + 0x8]\n 14377: u64 [sp] = a0\n 14379: a0 = sp + 0x370\n 14383: ra = 70, jump @195\n      : @336 [@dyn 35] (gas: 11)\n 14388: t0 = u64 [sp + 0x2d8]\n 14392: a4 = u64 [sp + 0x2e0]\n 14396: a5 = u64 [sp + 0x270]\n 14400: a0 = s1 | t0\n 14403: a1 = a5 | a4\n 14406: a1 = a1 | a0\n 14409: a1 = a1 >> 0x20\n 14412: a0 = a0 | a4\n 14415: a0 = a0 << 0x20\n 14418: a0 = a0 | a1\n 14421: jump @338 if a0 == 0\n      : @337 (gas: 1)\n 14424: jump @587\n      : @338 (gas: 2)\n 14427: i32 a0 = a5 >> 0x10\n 14430: jump @340 if a0 == 0\n      : @339 (gas: 1)\n 14433: jump @587\n      : @340 (gas: 4)\n 14436: a0 = a5 + 0x3f\n 14439: u64 [sp + 744] = 0x1ffe0\n 14446: a0 = a0 & 0x1ffe0\n 14451: jump @342 if a0 <=u 65536\n      : @341 (gas: 1)\n 14457: jump @587\n      : @342 (gas: 11)\n 14460: a1 = 0x20044\n 14465: a2 = u64 [sp + 0x388]\n 14469: u64 [sp + 0x298] = a2\n 14473: a2 = u64 [sp + 0x380]\n 14477: u64 [sp + 0x2a0] = a2\n 14481: a2 = u64 [sp + 0x378]\n 14485: u64 [sp + 0x2b8] = a2\n 14489: u64 [sp + 0x2d0] = a1\n 14493: a3 = i32 [0x20044]\n 14498: a2 = u64 [sp + 0x370]\n 14502: jump @344 if a3 >=u a0\n      : @343 (gas: 4)\n 14505: a1 = u64 [sp + 0x2d0]\n 14509: u32 [a1] = a0\n 14511: a3 = a0\n 14513: fallthrough\n      : @344 (gas: 6)\n 14514: a0 = a4 | t0\n 14517: a1 = 0xffffffe0\n 14527: a1 = a5 <u a1\n 14530: a1 = 0 if s1 != 0\n 14532: a1 = 0 if a0 != 0\n 14534: jump @346 if a1 != 0\n      : @345 (gas: 1)\n 14537: jump @587\n      : @346 (gas: 2)\n 14540: i32 a0 = a5 >> 0x5\n 14543: jump @348 if a0 <u 2047\n      : @347 (gas: 1)\n 14548: jump @587\n      : @348 (gas: 4)\n 14551: a0 = a5 + 0x5f\n 14554: a1 = u64 [sp + 0x2e8]\n 14558: a0 = a0 & a1\n 14561: jump @350 if a0 <=u 65536\n      : @349 (gas: 1)\n 14567: jump @587\n      : @350 (gas: 1)\n 14570: jump @352 if a3 >=u a0\n      : @351 (gas: 4)\n 14573: a1 = u64 [sp + 0x2d0]\n 14577: u32 [a1] = a0\n 14579: a3 = a0\n 14581: fallthrough\n      : @352 (gas: 2)\n 14582: a4 = 0x20050\n 14587: jump @354 if a3 >u 95\n      : @353 (gas: 4)\n 14591: a3 = 0x60\n 14594: a0 = u64 [sp + 0x2d0]\n 14598: u32 [a0] = a3\n 14600: fallthrough\n      : @354 (gas: 22)\n 14601: u64 [sp + 0x2e0] = a3\n 14605: u64 [sp + 0x2b0] = a2\n 14609: a2 = u64 [0x200a0]\n 14614: a3 = u64 [0x200a8]\n 14619: a0 = u64 [0x20090]\n 14624: a1 = u64 [0x20098]\n 14629: u64 [sp + 0x38] = a2\n 14632: t0 = reverse a2\n 14634: u64 [sp + 0x40] = a3\n 14637: a3 = reverse a3\n 14639: u64 [sp + 0x30] = a0\n 14642: a2 = reverse a0\n 14644: u64 [sp + 0x28] = a1\n 14647: a0 = reverse a1\n 14649: u64 [sp + 0x268] = a0\n 14653: u64 [sp + 0x250] = a2\n 14657: a1 = a0 | a2\n 14660: a0 = a3 <u 0xffffffffffffffc0\n 14663: a0 = 0 if t0 != 0\n 14665: u64 [sp + 0x248] = a1\n 14669: a0 = 0 if a1 != 0\n 14671: jump @356 if a0 != 0\n      : @355 (gas: 1)\n 14674: jump @592\n      : @356 (gas: 159)\n 14677: i32 t1 = a5 + 0\n 14679: i32 t2 = a5 + 0x20\n 14682: t1 = t1 + a4\n 14685: t2 = t2 + a4\n 14688: a0 = u8 [t1 + 0x1d]\n 14691: u64 [sp + 0x230] = a0\n 14695: a0 = u8 [t1 + 0x1e]\n 14698: u64 [sp + 0x240] = a0\n 14702: a0 = u8 [t1 + 0x1f]\n 14705: u64 [sp + 0x238] = a0\n 14709: a2 = a3 + 0x40\n 14712: u64 [sp + 0x2c0] = a3\n 14716: a0 = u64 [sp + 0x2c0]\n 14720: a3 = a2 <u a0\n 14723: a0 = t0 + a3\n 14726: a1 = a0 <u t0\n 14729: a1 = a3 if a3 == 0\n 14732: a3 = u8 [t1 + 0x15]\n 14735: u64 [sp + 0x168] = a3\n 14739: a3 = u8 [t1 + 0x16]\n 14742: u64 [sp + 0x180] = a3\n 14746: a3 = u8 [t1 + 0x17]\n 14749: u64 [sp + 0x178] = a3\n 14753: a3 = u8 [t1 + 0xd]\n 14756: u64 [sp + 0x188] = a3\n 14760: a3 = u8 [t1 + 0xe]\n 14763: u64 [sp + 0x1a0] = a3\n 14767: a3 = u8 [t1 + 0xf]\n 14770: u64 [sp + 0x198] = a3\n 14774: a3 = u8 [t1 + 0x5]\n 14777: u64 [sp + 0x1a8] = a3\n 14781: a3 = u8 [t1 + 0x6]\n 14784: u64 [sp + 0x1c0] = a3\n 14788: a3 = u8 [t1 + 0x7]\n 14791: u64 [sp + 0x1b8] = a3\n 14795: a3 = u8 [t1 + 0x19]\n 14798: u64 [sp + 0x1d0] = a3\n 14802: a3 = u8 [t1 + 0x1a]\n 14805: u64 [sp + 0x1e0] = a3\n 14809: a3 = u8 [t1 + 0x1b]\n 14812: u64 [sp + 0x1d8] = a3\n 14816: a3 = u8 [t1 + 0x1c]\n 14819: u64 [sp + 0x148] = a3\n 14823: a3 = u8 [t1 + 0x11]\n 14826: u64 [sp + 0x1e8] = a3\n 14830: a3 = u8 [t1 + 0x12]\n 14833: u64 [sp + 0x1f8] = a3\n 14837: a3 = u8 [t1 + 0x13]\n 14840: u64 [sp + 0x1f0] = a3\n 14844: a3 = u8 [t1 + 0x14]\n 14847: u64 [sp + 0x150] = a3\n 14851: a3 = u8 [t1 + 0x9]\n 14854: u64 [sp + 0x200] = a3\n 14858: a3 = u8 [t1 + 0xa]\n 14861: u64 [sp + 0x210] = a3\n 14865: a3 = u8 [t1 + 0xb]\n 14868: u64 [sp + 0x208] = a3\n 14872: a3 = u8 [t1 + 0xc]\n 14875: u64 [sp + 0x158] = a3\n 14879: a3 = u8 [t1 + 0x1]\n 14882: u64 [sp + 0x218] = a3\n 14886: a3 = u8 [t1 + 0x2]\n 14889: u64 [sp + 0x228] = a3\n 14893: a3 = u8 [t1 + 0x3]\n 14896: u64 [sp + 0x220] = a3\n 14900: a3 = u8 [t1 + 0x4]\n 14903: u64 [sp + 0x160] = a3\n 14907: a3 = u8 [t1 + 0x18]\n 14910: u64 [sp + 0x170] = a3\n 14914: a3 = u8 [t1 + 0x10]\n 14917: u64 [sp + 0x190] = a3\n 14921: a3 = u8 [t1 + 0x8]\n 14924: u64 [sp + 0x1b0] = a3\n 14928: a3 = u8 [t1]\n 14930: u64 [sp + 0x1c8] = a3\n 14934: a3 = u8 [t2 + 0x1d]\n 14937: u64 [sp + 0x60] = a3\n 14940: a3 = u8 [t2 + 0x1e]\n 14943: u64 [sp + 0x90] = a3\n 14947: a3 = u8 [t2 + 0x1f]\n 14950: u64 [sp + 0x88] = a3\n 14954: a3 = u8 [t2 + 0x15]\n 14957: u64 [sp + 0x98] = a3\n 14961: a3 = u8 [t2 + 0x16]\n 14964: u64 [sp + 0xb0] = a3\n 14968: a3 = u8 [t2 + 0x17]\n 14971: u64 [sp + 0xa8] = a3\n 14975: a3 = u8 [t2 + 0xd]\n 14978: u64 [sp + 0xb8] = a3\n 14982: a3 = u8 [t2 + 0xe]\n 14985: u64 [sp + 0xd0] = a3\n 14989: a3 = u8 [t2 + 0xf]\n 14992: u64 [sp + 0xc8] = a3\n 14996: a3 = u8 [t2 + 0x5]\n 14999: u64 [sp + 0xd8] = a3\n 15003: a3 = u8 [t2 + 0x6]\n 15006: u64 [sp + 0xf0] = a3\n 15010: a3 = u8 [t2 + 0x7]\n 15013: u64 [sp + 0xe8] = a3\n 15017: a3 = u8 [t2 + 0x19]\n 15020: u64 [sp + 0xf8] = a3\n 15024: a3 = u8 [t2 + 0x1a]\n 15027: u64 [sp + 0x108] = a3\n 15031: a3 = u8 [t2 + 0x1b]\n 15034: u64 [sp + 0x100] = a3\n 15038: a3 = u8 [t2 + 0x1c]\n 15041: u64 [sp + 0x68] = a3\n 15044: a3 = u8 [t2 + 0x11]\n 15047: u64 [sp + 0x110] = a3\n 15051: a3 = u8 [t2 + 0x12]\n 15054: u64 [sp + 0x120] = a3\n 15058: a3 = u8 [t2 + 0x13]\n 15061: u64 [sp + 0x118] = a3\n 15065: a3 = u8 [t2 + 0x14]\n 15068: u64 [sp + 0x70] = a3\n 15071: a3 = u8 [t2 + 0x9]\n 15074: u64 [sp + 0x128] = a3\n 15078: a3 = u8 [t2 + 0xa]\n 15081: u64 [sp + 0x138] = a3\n 15085: a3 = u8 [t2 + 0xb]\n 15088: u64 [sp + 0x130] = a3\n 15092: a3 = u8 [t2 + 0xc]\n 15095: u64 [sp + 0x78] = a3\n 15098: a3 = u8 [t2 + 0x1]\n 15101: u64 [sp + 0x140] = a3\n 15105: ra = u8 [t2 + 0x2]\n 15108: t1 = u8 [t2 + 0x3]\n 15111: a3 = u8 [t2 + 0x4]\n 15114: u64 [sp + 0x80] = a3\n 15118: a3 = u8 [t2 + 0x18]\n 15121: u64 [sp + 0xa0] = a3\n 15125: a3 = u8 [t2 + 0x10]\n 15128: u64 [sp + 0xc0] = a3\n 15132: a3 = u8 [t2 + 0x8]\n 15135: u64 [sp + 0xe0] = a3\n 15139: a5 = u8 [t2]\n 15141: a3 = reverse a2\n 15143: u64 [0x200a8] = a3\n 15148: a3 = u64 [sp + 0x2c0]\n 15152: a0 = reverse a0\n 15154: u64 [0x200a0] = a0\n 15159: s1 = u64 [sp + 0x268]\n 15163: a1 = a1 + s1\n 15166: a0 = reverse a1\n 15168: u64 [0x20098] = a0\n 15173: a0 = a1 <u s1\n 15176: a1 = u64 [sp + 0x250]\n 15180: a0 = a0 + a1\n 15183: u64 [sp + 0x270] = t0\n 15187: a1 = t0 | a1\n 15190: a2 = a3 | s1\n 15193: a2 = a2 | a1\n 15196: a1 = a1 | s1\n 15199: a2 = a2 >> 0x20\n 15202: a1 = a1 << 0x20\n 15205: a1 = a1 | a2\n 15208: a0 = reverse a0\n 15210: u64 [0x20090] = a0\n 15215: jump @358 if a1 == 0\n      : @357 (gas: 1)\n 15218: jump @587\n      : @358 (gas: 6)\n 15221: u64 [sp + 0x48] = a5\n 15224: u64 [sp + 0x50] = t1\n 15227: u64 [sp + 0x58] = ra\n 15230: u64 [sp + 0x2d8] = a4\n 15234: i32 a0 = a3 >> 0x10\n 15237: jump @360 if a0 == 0\n      : @359 (gas: 1)\n 15240: jump @587\n      : @360 (gas: 5)\n 15243: a0 = a3 + 0x3f\n 15246: a1 = u64 [sp + 0x2e8]\n 15250: a1 = a1 & a0\n 15253: u64 [sp + 0x268] = a1\n 15257: jump @362 if a1 <=u 65536\n      : @361 (gas: 1)\n 15263: jump @587\n      : @362 (gas: 103)\n 15266: a0 = u64 [sp + 0x230]\n 15270: a0 = a0 << 0x8\n 15273: a3 = u64 [sp + 0x148]\n 15277: a3 = a3 | a0\n 15280: a0 = u64 [sp + 0x240]\n 15284: a0 = a0 << 0x10\n 15287: a1 = u64 [sp + 0x238]\n 15291: a1 = a1 << 0x18\n 15294: a0 = a0 | a1\n 15297: a1 = u64 [sp + 0x168]\n 15301: a1 = a1 << 0x8\n 15304: a2 = u64 [sp + 0x150]\n 15308: a5 = a1 | a2\n 15311: a1 = u64 [sp + 0x180]\n 15315: a1 = a1 << 0x10\n 15318: a4 = u64 [sp + 0x178]\n 15322: a4 = a4 << 0x18\n 15325: a4 = a4 | a1\n 15328: a1 = u64 [sp + 0x188]\n 15332: a1 = a1 << 0x8\n 15335: a2 = u64 [sp + 0x158]\n 15339: a1 = a1 | a2\n 15342: u64 [sp + 0x250] = a1\n 15346: a1 = u64 [sp + 0x1a0]\n 15350: a1 = a1 << 0x10\n 15353: s1 = u64 [sp + 0x198]\n 15357: s1 = s1 << 0x18\n 15360: s1 = s1 | a1\n 15363: a1 = u64 [sp + 0x1a8]\n 15367: a1 = a1 << 0x8\n 15370: a2 = u64 [sp + 0x160]\n 15374: a1 = a1 | a2\n 15377: u64 [sp + 0x240] = a1\n 15381: a1 = u64 [sp + 0x1c0]\n 15385: a1 = a1 << 0x10\n 15388: a2 = u64 [sp + 0x1b8]\n 15392: a2 = a2 << 0x18\n 15395: a1 = a1 | a2\n 15398: u64 [sp + 0x230] = a1\n 15402: a2 = u64 [sp + 0x1d0]\n 15406: a2 = a2 << 0x8\n 15409: a1 = u64 [sp + 0x170]\n 15413: a1 = a1 | a2\n 15416: u64 [sp + 0x1d0] = a1\n 15420: t0 = u64 [sp + 0x1e0]\n 15424: t0 = t0 << 0x10\n 15427: t1 = u64 [sp + 0x1d8]\n 15431: t1 = t1 << 0x18\n 15434: a1 = t1 | t0\n 15437: u64 [sp + 0x1e0] = a1\n 15441: a0 = a0 | a3\n 15444: u64 [sp + 0x238] = a0\n 15448: a3 = u64 [sp + 0x1e8]\n 15452: a3 = a3 << 0x8\n 15455: a0 = u64 [sp + 0x190]\n 15459: t0 = a3 | a0\n 15462: a0 = u64 [sp + 0x1f8]\n 15466: a0 = a0 << 0x10\n 15469: t2 = u64 [sp + 0x1f0]\n 15473: t2 = t2 << 0x18\n 15476: a0 = t2 | a0\n 15479: t2 = a4 | a5\n 15482: a5 = u64 [sp + 0x200]\n 15486: a5 = a5 << 0x8\n 15489: a1 = u64 [sp + 0x1b0]\n 15493: a5 = a5 | a1\n 15496: a4 = u64 [sp + 0x210]\n 15500: a4 = a4 << 0x10\n 15503: ra = u64 [sp + 0x208]\n 15507: ra = ra << 0x18\n 15510: a4 = ra | a4\n 15513: a1 = u64 [sp + 0x250]\n 15517: ra = s1 | a1\n 15520: a1 = u64 [sp + 0x218]\n 15524: a1 = a1 << 0x8\n 15527: s1 = u64 [sp + 0x1c8]\n 15531: a1 = a1 | s1\n 15534: s1 = u64 [sp + 0x228]\n 15538: s1 = s1 << 0x10\n 15541: t1 = u64 [sp + 0x220]\n 15545: t1 = t1 << 0x18\n 15548: s1 = t1 | s1\n 15551: a2 = u64 [sp + 0x240]\n 15555: a3 = u64 [sp + 0x230]\n 15559: t1 = a3 | a2\n 15562: a2 = u64 [sp + 0x1d0]\n 15566: a3 = u64 [sp + 0x1e0]\n 15570: a2 = a2 | a3\n 15573: a0 = a0 | t0\n 15576: a4 = a4 | a5\n 15579: s1 = s1 | a1\n 15582: a1 = u64 [sp + 0x238]\n 15586: a1 = a1 << 0x20\n 15589: a1 = a1 | a2\n 15592: a2 = t2 << 0x20\n 15595: a2 = a2 | a0\n 15598: ra = ra << 0x20\n 15601: a4 = ra | a4\n 15604: a3 = t1 << 0x20\n 15607: a3 = a3 | s1\n 15610: t0 = u64 [sp + 0x2e0]\n 15614: a5 = u64 [sp + 0x268]\n 15618: jump @364 if t0 >=u a5\n      : @363 (gas: 4)\n 15621: a0 = u64 [sp + 0x2d0]\n 15625: u32 [a0] = a5\n 15627: t0 = a5\n 15629: fallthrough\n      : @364 (gas: 71)\n 15630: s1 = u64 [sp + 0x2c0]\n 15634: i32 a0 = s1 + 0\n 15636: a5 = u64 [sp + 0x2d8]\n 15640: a0 = a0 + a5\n 15643: u8 [a0 + 0x10] = a2\n 15646: a5 = a4 >> 0x38\n 15649: u8 [a0 + 0xf] = a5\n 15652: a5 = a4 >> 0x30\n 15655: u8 [a0 + 0xe] = a5\n 15658: a5 = a4 >> 0x28\n 15661: u8 [a0 + 0xd] = a5\n 15664: a5 = a4 >> 0x20\n 15667: u8 [a0 + 0xc] = a5\n 15670: a5 = a4 >> 0x18\n 15673: u8 [a0 + 0xb] = a5\n 15676: a5 = a4 >> 0x10\n 15679: u8 [a0 + 0xa] = a5\n 15682: a5 = a4 >> 0x8\n 15685: u8 [a0 + 0x9] = a5\n 15688: u8 [a0 + 0x8] = a4\n 15691: a4 = a3 >> 0x38\n 15694: u8 [a0 + 0x7] = a4\n 15697: a4 = a3 >> 0x30\n 15700: u8 [a0 + 0x6] = a4\n 15703: a4 = a3 >> 0x28\n 15706: u8 [a0 + 0x5] = a4\n 15709: a4 = a3 >> 0x20\n 15712: u8 [a0 + 0x4] = a4\n 15715: a4 = a3 >> 0x18\n 15718: u8 [a0 + 0x3] = a4\n 15721: a4 = a3 >> 0x10\n 15724: u8 [a0 + 0x2] = a4\n 15727: a4 = a3 >> 0x8\n 15730: u8 [a0 + 0x1] = a4\n 15733: u8 [a0] = a3\n 15735: u8 [a0 + 0x18] = a1\n 15738: a3 = a2 >> 0x38\n 15741: u8 [a0 + 0x17] = a3\n 15744: a3 = a2 >> 0x30\n 15747: u8 [a0 + 0x16] = a3\n 15750: a3 = a2 >> 0x28\n 15753: u8 [a0 + 0x15] = a3\n 15756: a3 = a2 >> 0x20\n 15759: u8 [a0 + 0x14] = a3\n 15762: a3 = a2 >> 0x18\n 15765: u8 [a0 + 0x13] = a3\n 15768: a3 = a2 >> 0x10\n 15771: u8 [a0 + 0x12] = a3\n 15774: a2 = a2 >> 0x8\n 15777: u8 [a0 + 0x11] = a2\n 15780: a2 = a1 >> 0x38\n 15783: u8 [a0 + 0x1f] = a2\n 15786: a2 = a1 >> 0x30\n 15789: u8 [a0 + 0x1e] = a2\n 15792: a2 = a1 >> 0x28\n 15795: u8 [a0 + 0x1d] = a2\n 15798: a2 = a1 >> 0x20\n 15801: u8 [a0 + 0x1c] = a2\n 15804: a2 = a1 >> 0x18\n 15807: u8 [a0 + 0x1b] = a2\n 15810: a2 = a1 >> 0x10\n 15813: u8 [a0 + 0x1a] = a2\n 15816: a1 = a1 >> 0x8\n 15819: a2 = 0xffffffe0\n 15829: a2 = s1 <u a2\n 15832: a4 = u64 [sp + 0x270]\n 15836: a2 = 0 if a4 != 0\n 15838: a4 = u64 [sp + 0x248]\n 15842: a2 = 0 if a4 != 0\n 15844: u8 [a0 + 0x19] = a1\n 15847: jump @366 if a2 != 0\n      : @365 (gas: 1)\n 15850: jump @587\n      : @366 (gas: 4)\n 15853: a3 = s1\n 15855: u64 [sp + 0x2e0] = t0\n 15859: i32 a0 = s1 >> 0x5\n 15862: jump @368 if a0 <u 2047\n      : @367 (gas: 1)\n 15867: jump @587\n      : @368 (gas: 5)\n 15870: a0 = a3 + 0x5f\n 15873: a1 = u64 [sp + 0x2e8]\n 15877: a1 = a1 & a0\n 15880: u64 [sp + 0x270] = a1\n 15884: jump @370 if a1 <=u 65536\n      : @369 (gas: 1)\n 15890: jump @587\n      : @370 (gas: 105)\n 15893: a0 = u64 [sp + 0x60]\n 15896: a0 = a0 << 0x8\n 15899: s1 = u64 [sp + 0x68]\n 15902: s1 = s1 | a0\n 15905: a0 = u64 [sp + 0x90]\n 15909: a0 = a0 << 0x10\n 15912: a1 = u64 [sp + 0x88]\n 15916: a1 = a1 << 0x18\n 15919: a5 = a1 | a0\n 15922: a0 = u64 [sp + 0x98]\n 15926: a0 = a0 << 0x8\n 15929: a1 = u64 [sp + 0x70]\n 15932: t0 = a0 | a1\n 15935: a0 = u64 [sp + 0xb0]\n 15939: a0 = a0 << 0x10\n 15942: a4 = u64 [sp + 0xa8]\n 15946: a4 = a4 << 0x18\n 15949: a4 = a4 | a0\n 15952: a0 = u64 [sp + 0xb8]\n 15956: a0 = a0 << 0x8\n 15959: a1 = u64 [sp + 0x78]\n 15962: a0 = a0 | a1\n 15965: u64 [sp + 0x268] = a0\n 15969: a0 = u64 [sp + 0xd0]\n 15973: a0 = a0 << 0x10\n 15976: a2 = u64 [sp + 0xc8]\n 15980: a2 = a2 << 0x18\n 15983: a0 = a0 | a2\n 15986: a2 = u64 [sp + 0xd8]\n 15990: a2 = a2 << 0x8\n 15993: a1 = u64 [sp + 0x80]\n 15997: a1 = a1 | a2\n 16000: u64 [sp + 0x250] = a1\n 16004: a2 = u64 [sp + 0xf0]\n 16008: a2 = a2 << 0x10\n 16011: a3 = u64 [sp + 0xe8]\n 16015: a3 = a3 << 0x18\n 16018: a2 = a2 | a3\n 16021: u64 [sp + 0x240] = a2\n 16025: a3 = u64 [sp + 0xf8]\n 16029: a3 = a3 << 0x8\n 16032: a1 = u64 [sp + 0xa0]\n 16036: a1 = a1 | a3\n 16039: u64 [sp + 0x238] = a1\n 16043: a1 = u64 [sp + 0x108]\n 16047: a1 = a1 << 0x10\n 16050: t1 = u64 [sp + 0x100]\n 16054: t1 = t1 << 0x18\n 16057: a1 = t1 | a1\n 16060: u64 [sp + 0x230] = a1\n 16064: a5 = a5 | s1\n 16067: u64 [sp + 0x248] = a5\n 16071: s1 = u64 [sp + 0x110]\n 16075: s1 = s1 << 0x8\n 16078: a1 = u64 [sp + 0xc0]\n 16082: t1 = s1 | a1\n 16085: a1 = u64 [sp + 0x120]\n 16089: a1 = a1 << 0x10\n 16092: t2 = u64 [sp + 0x118]\n 16096: t2 = t2 << 0x18\n 16099: a1 = t2 | a1\n 16102: t2 = a4 | t0\n 16105: a5 = u64 [sp + 0x128]\n 16109: a5 = a5 << 0x8\n 16112: a2 = u64 [sp + 0xe0]\n 16116: a5 = a5 | a2\n 16119: a4 = u64 [sp + 0x138]\n 16123: a4 = a4 << 0x10\n 16126: ra = u64 [sp + 0x130]\n 16130: ra = ra << 0x18\n 16133: a4 = ra | a4\n 16136: a2 = u64 [sp + 0x268]\n 16140: ra = a0 | a2\n 16143: a2 = u64 [sp + 0x140]\n 16147: a2 = a2 << 0x8\n 16150: a0 = u64 [sp + 0x48]\n 16153: a2 = a2 | a0\n 16156: a0 = u64 [sp + 0x58]\n 16159: a0 = a0 << 0x10\n 16162: t0 = u64 [sp + 0x50]\n 16165: t0 = t0 << 0x18\n 16168: a0 = t0 | a0\n 16171: a3 = u64 [sp + 0x250]\n 16175: s1 = u64 [sp + 0x240]\n 16179: t0 = s1 | a3\n 16182: a3 = u64 [sp + 0x238]\n 16186: s1 = u64 [sp + 0x230]\n 16190: a3 = a3 | s1\n 16193: s1 = a1 | t1\n 16196: a4 = a4 | a5\n 16199: a0 = a0 | a2\n 16202: a1 = u64 [sp + 0x248]\n 16206: a1 = a1 << 0x20\n 16209: a1 = a1 | a3\n 16212: a2 = t2 << 0x20\n 16215: a2 = a2 | s1\n 16218: s1 = ra << 0x20\n 16221: s1 = s1 | a4\n 16224: a3 = t0 << 0x20\n 16227: a3 = a3 | a0\n 16230: a0 = u64 [sp + 0x2c0]\n 16234: i32 a0 = a0 + 0x20\n 16237: t1 = u64 [sp + 0x2e0]\n 16241: a5 = u64 [sp + 0x270]\n 16245: jump @372 if t1 >=u a5\n      : @371 (gas: 4)\n 16248: a4 = u64 [sp + 0x2d0]\n 16252: u32 [a4] = a5\n 16254: t1 = a5\n 16256: fallthrough\n      : @372 (gas: 74)\n 16257: t0 = u64 [sp + 0x2d8]\n 16261: a0 = a0 + t0\n 16264: u8 [a0 + 0x8] = s1\n 16267: a4 = a3 >> 0x38\n 16270: u8 [a0 + 0x7] = a4\n 16273: a4 = a3 >> 0x30\n 16276: u8 [a0 + 0x6] = a4\n 16279: a4 = a3 >> 0x28\n 16282: u8 [a0 + 0x5] = a4\n 16285: a4 = a3 >> 0x20\n 16288: u8 [a0 + 0x4] = a4\n 16291: a4 = a3 >> 0x18\n 16294: u8 [a0 + 0x3] = a4\n 16297: a4 = a3 >> 0x10\n 16300: u8 [a0 + 0x2] = a4\n 16303: a4 = a3 >> 0x8\n 16306: u8 [a0 + 0x1] = a4\n 16309: u8 [a0] = a3\n 16311: u8 [a0 + 0x10] = a2\n 16314: a3 = s1 >> 0x38\n 16317: u8 [a0 + 0xf] = a3\n 16320: a3 = s1 >> 0x30\n 16323: u8 [a0 + 0xe] = a3\n 16326: a3 = s1 >> 0x28\n 16329: u8 [a0 + 0xd] = a3\n 16332: a3 = s1 >> 0x20\n 16335: u8 [a0 + 0xc] = a3\n 16338: a3 = s1 >> 0x18\n 16341: u8 [a0 + 0xb] = a3\n 16344: a3 = s1 >> 0x10\n 16347: u8 [a0 + 0xa] = a3\n 16350: s1 = s1 >> 0x8\n 16353: u8 [a0 + 0x9] = s1\n 16356: u8 [a0 + 0x18] = a1\n 16359: a3 = a2 >> 0x38\n 16362: u8 [a0 + 0x17] = a3\n 16365: a3 = a2 >> 0x30\n 16368: u8 [a0 + 0x16] = a3\n 16371: a3 = a2 >> 0x28\n 16374: u8 [a0 + 0x15] = a3\n 16377: a3 = a2 >> 0x20\n 16380: u8 [a0 + 0x14] = a3\n 16383: a3 = a2 >> 0x18\n 16386: u8 [a0 + 0x13] = a3\n 16389: a3 = a2 >> 0x10\n 16392: u8 [a0 + 0x12] = a3\n 16395: a2 = a2 >> 0x8\n 16398: u8 [a0 + 0x11] = a2\n 16401: a2 = a1 >> 0x38\n 16404: u8 [a0 + 0x1f] = a2\n 16407: a2 = a1 >> 0x30\n 16410: u8 [a0 + 0x1e] = a2\n 16413: a2 = a1 >> 0x28\n 16416: u8 [a0 + 0x1d] = a2\n 16419: a2 = a1 >> 0x20\n 16422: u8 [a0 + 0x1c] = a2\n 16425: a2 = a1 >> 0x18\n 16428: u8 [a0 + 0x1b] = a2\n 16431: a2 = a1 >> 0x10\n 16434: u8 [a0 + 0x1a] = a2\n 16437: a1 = a1 >> 0x8\n 16440: a4 = u64 [sp + 0x2a0]\n 16444: a5 = u64 [sp + 0x2b0]\n 16448: a2 = a5 | a4\n 16451: a3 = u64 [sp + 0x2b8]\n 16455: s1 = u64 [sp + 0x298]\n 16459: a3 = a3 | s1\n 16462: a2 = a2 | a3\n 16465: a2 = a2 >> 0x20\n 16468: a3 = a3 | a4\n 16471: a3 = a3 << 0x20\n 16474: a2 = a2 | a3\n 16477: u8 [a0 + 0x19] = a1\n 16480: jump @374 if a2 == 0\n      : @373 (gas: 1)\n 16483: jump @587\n      : @374 (gas: 2)\n 16486: i32 a0 = a5 >> 0x10\n 16489: jump @376 if a0 == 0\n      : @375 (gas: 1)\n 16492: jump @587\n      : @376 (gas: 4)\n 16495: a0 = a5 + 0x3f\n 16498: a1 = u64 [sp + 0x2e8]\n 16502: a0 = a0 & a1\n 16505: jump @378 if a0 <=u 65536\n      : @377 (gas: 1)\n 16511: jump @587\n      : @378 (gas: 1)\n 16514: jump @380 if t1 >=u a0\n      : @379 (gas: 4)\n 16517: a1 = u64 [sp + 0x2d0]\n 16521: u32 [a1] = a0\n 16523: t1 = a0\n 16525: fallthrough\n      : @380 (gas: 82)\n 16526: u64 [sp + 0x2e0] = t1\n 16530: i32 a0 = a5 + 0\n 16532: a0 = a0 + t0\n 16535: a3 = u64 [sp + 0x38]\n 16538: u8 [a0 + 0x10] = a3\n 16541: a2 = u64 [sp + 0x28]\n 16544: a1 = a2 >> 0x38\n 16547: u8 [a0 + 0xf] = a1\n 16550: a1 = a2 >> 0x30\n 16553: u8 [a0 + 0xe] = a1\n 16556: a1 = a2 >> 0x28\n 16559: u8 [a0 + 0xd] = a1\n 16562: a1 = a2 >> 0x20\n 16565: u8 [a0 + 0xc] = a1\n 16568: a1 = a2 >> 0x18\n 16571: u8 [a0 + 0xb] = a1\n 16574: a1 = a2 >> 0x10\n 16577: u8 [a0 + 0xa] = a1\n 16580: a1 = a2 >> 0x8\n 16583: u8 [a0 + 0x9] = a1\n 16586: u8 [a0 + 0x8] = a2\n 16589: a2 = u64 [sp + 0x30]\n 16592: a1 = a2 >> 0x38\n 16595: u8 [a0 + 0x7] = a1\n 16598: a1 = a2 >> 0x30\n 16601: u8 [a0 + 0x6] = a1\n 16604: a1 = a2 >> 0x28\n 16607: u8 [a0 + 0x5] = a1\n 16610: a1 = a2 >> 0x20\n 16613: u8 [a0 + 0x4] = a1\n 16616: a1 = a2 >> 0x18\n 16619: u8 [a0 + 0x3] = a1\n 16622: a1 = a2 >> 0x10\n 16625: u8 [a0 + 0x2] = a1\n 16628: a1 = a2 >> 0x8\n 16631: u8 [a0 + 0x1] = a1\n 16634: u8 [a0] = a2\n 16636: a2 = u64 [sp + 0x40]\n 16639: u8 [a0 + 0x18] = a2\n 16642: a1 = a3 >> 0x38\n 16645: u8 [a0 + 0x17] = a1\n 16648: a1 = a3 >> 0x30\n 16651: u8 [a0 + 0x16] = a1\n 16654: a1 = a3 >> 0x28\n 16657: u8 [a0 + 0x15] = a1\n 16660: a1 = a3 >> 0x20\n 16663: u8 [a0 + 0x14] = a1\n 16666: a1 = a3 >> 0x18\n 16669: u8 [a0 + 0x13] = a1\n 16672: a1 = a3 >> 0x10\n 16675: u8 [a0 + 0x12] = a1\n 16678: a1 = a3 >> 0x8\n 16681: u8 [a0 + 0x11] = a1\n 16684: a1 = a2 >> 0x38\n 16687: u8 [a0 + 0x1f] = a1\n 16690: a1 = a2 >> 0x30\n 16693: u8 [a0 + 0x1e] = a1\n 16696: a1 = a2 >> 0x28\n 16699: u8 [a0 + 0x1d] = a1\n 16702: a1 = a2 >> 0x20\n 16705: u8 [a0 + 0x1c] = a1\n 16708: a1 = a2 >> 0x18\n 16711: u8 [a0 + 0x1b] = a1\n 16714: a1 = a2 >> 0x10\n 16717: u8 [a0 + 0x1a] = a1\n 16720: a1 = a2 >> 0x8\n 16723: u8 [a0 + 0x19] = a1\n 16726: t2 = u64 [t0 + 0x50]\n 16729: t1 = u64 [t0 + 0x58]\n 16732: a0 = u64 [t0 + 0x40]\n 16735: a1 = u64 [t0 + 0x48]\n 16738: a5 = reverse t2\n 16740: a2 = reverse t1\n 16742: ra = reverse a0\n 16744: a3 = t0\n 16746: u64 [sp + 0x230] = a1\n 16750: s1 = reverse a1\n 16752: t0 = s1 | ra\n 16755: a1 = a2 <u 0xffffffffffffffc0\n 16758: a1 = 0 if a5 != 0\n 16760: a1 = 0 if t0 != 0\n 16762: jump @382 if a1 != 0\n      : @381 (gas: 1)\n 16765: jump @593\n      : @382 (gas: 33)\n 16768: u64 [sp + 0x238] = a0\n 16772: a1 = a2 + 0x40\n 16775: u64 [sp + 0x2c0] = a2\n 16779: a2 = a1 <u a2\n 16782: a4 = a5 + a2\n 16785: u64 [sp + 0x268] = a5\n 16789: a5 = a4 <u a5\n 16792: a5 = a2 if a2 == 0\n 16795: a5 = a5 + s1\n 16798: a1 = reverse a1\n 16800: u64 [a3 + 0x58] = a1\n 16803: a1 = reverse a5\n 16805: a2 = reverse a4\n 16807: u64 [a3 + 0x50] = a2\n 16810: u64 [a3 + 0x48] = a1\n 16813: a4 = u64 [sp + 0x2a8]\n 16817: u64 [sp + 0x270] = s1\n 16821: s1 = u64 [sp + 0x278]\n 16825: a1 = a4 | s1\n 16828: a0 = u64 [sp + 0x288]\n 16832: a2 = u64 [sp + 0x280]\n 16836: a2 = a2 | a0\n 16839: a1 = a1 | a2\n 16842: a1 = a1 >> 0x20\n 16845: a2 = a2 | s1\n 16848: a2 = a2 << 0x20\n 16851: a1 = a1 | a2\n 16854: a0 = u64 [sp + 0x270]\n 16858: a2 = a5 <u a0\n 16861: a2 = a2 + ra\n 16864: a2 = reverse a2\n 16866: u64 [a3 + 0x40] = a2\n 16869: jump @384 if a1 == 0\n      : @383 (gas: 1)\n 16872: jump @587\n      : @384 (gas: 2)\n 16875: i32 a1 = a4 >> 0x10\n 16878: jump @386 if a1 == 0\n      : @385 (gas: 1)\n 16881: jump @587\n      : @386 (gas: 4)\n 16884: a1 = a4 + 0x3f\n 16887: a0 = u64 [sp + 0x2e8]\n 16891: a2 = a1 & a0\n 16894: jump @388 if a2 <=u 65536\n      : @387 (gas: 1)\n 16900: jump @587\n      : @388 (gas: 6)\n 16903: u64 [sp + 0x250] = ra\n 16907: u64 [sp + 0x240] = t0\n 16911: u64 [sp + 0x220] = t2\n 16915: u64 [sp + 0x228] = t1\n 16919: a0 = u64 [sp + 0x2e0]\n 16923: jump @390 if a0 >=u a2\n      : @389 (gas: 4)\n 16926: a0 = u64 [sp + 0x2d0]\n 16930: u32 [a0] = a2\n 16932: u64 [sp + 0x2e0] = a2\n 16936: fallthrough\n      : @390 (gas: 104)\n 16937: u64 [sp + 0x248] = a2\n 16941: i32 a4 = a4 + 0\n 16943: a0 = u64 [sp + 0x2d8]\n 16947: a4 = a4 + a0\n 16950: a1 = u8 [a4 + 0x11]\n 16953: a2 = u8 [a4 + 0x10]\n 16956: a5 = u8 [a4 + 0x12]\n 16959: s1 = u8 [a4 + 0x13]\n 16962: a1 = a1 << 0x8\n 16965: a1 = a1 | a2\n 16968: a5 = a5 << 0x10\n 16971: s1 = s1 << 0x18\n 16974: a5 = a5 | s1\n 16977: a1 = a1 | a5\n 16980: a2 = u8 [a4 + 0x15]\n 16983: a5 = u8 [a4 + 0x14]\n 16986: s1 = u8 [a4 + 0x16]\n 16989: t0 = u8 [a4 + 0x17]\n 16992: a2 = a2 << 0x8\n 16995: a2 = a2 | a5\n 16998: s1 = s1 << 0x10\n 17001: t0 = t0 << 0x18\n 17004: a5 = t0 | s1\n 17007: a2 = a2 | a5\n 17010: a2 = a2 << 0x20\n 17013: t0 = a2 | a1\n 17016: a1 = u8 [a4 + 0x1]\n 17019: a5 = u8 [a4]\n 17021: s1 = u8 [a4 + 0x2]\n 17024: a3 = u8 [a4 + 0x3]\n 17027: a1 = a1 << 0x8\n 17030: a1 = a1 | a5\n 17033: s1 = s1 << 0x10\n 17036: a3 = a3 << 0x18\n 17039: a3 = a3 | s1\n 17042: a1 = a1 | a3\n 17045: a3 = u8 [a4 + 0x5]\n 17048: a5 = u8 [a4 + 0x4]\n 17051: s1 = u8 [a4 + 0x6]\n 17054: a2 = u8 [a4 + 0x7]\n 17057: a3 = a3 << 0x8\n 17060: a3 = a3 | a5\n 17063: s1 = s1 << 0x10\n 17066: a2 = a2 << 0x18\n 17069: a2 = a2 | s1\n 17072: a2 = a2 | a3\n 17075: a2 = a2 << 0x20\n 17078: s1 = a2 | a1\n 17081: a1 = u8 [a4 + 0x19]\n 17084: a2 = u8 [a4 + 0x18]\n 17087: a3 = u8 [a4 + 0x1a]\n 17090: a5 = u8 [a4 + 0x1b]\n 17093: a1 = a1 << 0x8\n 17096: a1 = a1 | a2\n 17099: a3 = a3 << 0x10\n 17102: a5 = a5 << 0x18\n 17105: a3 = a3 | a5\n 17108: a1 = a1 | a3\n 17111: a2 = u8 [a4 + 0x1d]\n 17114: a3 = u8 [a4 + 0x1c]\n 17117: a5 = u8 [a4 + 0x1e]\n 17120: t2 = u8 [a4 + 0x1f]\n 17123: a2 = a2 << 0x8\n 17126: a2 = a2 | a3\n 17129: a5 = a5 << 0x10\n 17132: t2 = t2 << 0x18\n 17135: a3 = t2 | a5\n 17138: a2 = a2 | a3\n 17141: a2 = a2 << 0x20\n 17144: t2 = a2 | a1\n 17147: a2 = u8 [a4 + 0x9]\n 17150: a3 = u8 [a4 + 0x8]\n 17153: a5 = u8 [a4 + 0xa]\n 17156: a0 = u8 [a4 + 0xb]\n 17159: a2 = a2 << 0x8\n 17162: a2 = a2 | a3\n 17165: a5 = a5 << 0x10\n 17168: a0 = a0 << 0x18\n 17171: a0 = a0 | a5\n 17174: a0 = a0 | a2\n 17177: a2 = u8 [a4 + 0xd]\n 17180: a3 = u8 [a4 + 0xc]\n 17183: a5 = u8 [a4 + 0xe]\n 17186: a1 = u8 [a4 + 0xf]\n 17189: a2 = a2 << 0x8\n 17192: a2 = a2 | a3\n 17195: a5 = a5 << 0x10\n 17198: a1 = a1 << 0x18\n 17201: a1 = a1 | a5\n 17204: a1 = a1 | a2\n 17207: a1 = a1 << 0x20\n 17210: a0 = a0 | a1\n 17213: a0 = reverse a0\n 17215: a5 = reverse t2\n 17217: a1 = reverse s1\n 17219: a2 = reverse t0\n 17221: a1 = a1 | a2\n 17224: a2 = a5 | a0\n 17227: a2 = a2 | a1\n 17230: a2 = a2 >> 0x20\n 17233: a0 = a0 | a1\n 17236: a0 = a0 << 0x20\n 17239: a0 = a0 | a2\n 17242: jump @392 if a0 == 0\n      : @391 (gas: 1)\n 17245: jump @587\n      : @392 (gas: 5)\n 17248: i32 a0 = a5 >> 0x10\n 17251: a2 = u64 [sp + 0x2c0]\n 17255: a3 = u64 [sp + 0x268]\n 17259: s1 = u64 [sp + 0x270]\n 17263: jump @394 if a0 == 0\n      : @393 (gas: 1)\n 17266: jump @587\n      : @394 (gas: 4)\n 17269: a0 = a5 + 0x3f\n 17272: a1 = u64 [sp + 0x2e8]\n 17276: a1 = a1 & a0\n 17279: jump @396 if a1 <=u 65536\n      : @395 (gas: 1)\n 17285: jump @587\n      : @396 (gas: 2)\n 17288: a0 = u64 [sp + 0x2e0]\n 17292: jump @398 if a0 >=u a1\n      : @397 (gas: 4)\n 17295: a0 = u64 [sp + 0x2d0]\n 17299: u32 [a0] = a1\n 17301: u64 [sp + 0x2e0] = a1\n 17305: fallthrough\n      : @398 (gas: 9)\n 17306: a0 = a2 | s1\n 17309: a1 = u64 [sp + 0x250]\n 17313: a1 = a1 | a3\n 17316: a0 = a0 | a1\n 17319: a0 = a0 >> 0x20\n 17322: a1 = a1 | s1\n 17325: a1 = a1 << 0x20\n 17328: a0 = a0 | a1\n 17331: jump @400 if a0 == 0\n      : @399 (gas: 1)\n 17334: jump @587\n      : @400 (gas: 3)\n 17337: i32 a0 = a2 >> 0x10\n 17340: ra = u64 [sp + 0x2d8]\n 17344: jump @402 if a0 == 0\n      : @401 (gas: 1)\n 17347: jump @587\n      : @402 (gas: 4)\n 17350: a0 = a2 + 0x3f\n 17353: a1 = u64 [sp + 0x2e8]\n 17357: t0 = a0 & a1\n 17360: jump @404 if t0 <=u 65536\n      : @403 (gas: 1)\n 17366: jump @587\n      : @404 (gas: 92)\n 17369: i32 a2 = a5 + 0\n 17371: a2 = a2 + ra\n 17374: a0 = u8 [a2 + 0x19]\n 17377: a1 = u8 [a2 + 0x18]\n 17380: a5 = u8 [a2 + 0x1a]\n 17383: s1 = u8 [a2 + 0x1b]\n 17386: a0 = a0 << 0x8\n 17389: a0 = a0 | a1\n 17392: a5 = a5 << 0x10\n 17395: s1 = s1 << 0x18\n 17398: a5 = a5 | s1\n 17401: a0 = a0 | a5\n 17404: a1 = u8 [a2 + 0x1d]\n 17407: a5 = u8 [a2 + 0x1c]\n 17410: s1 = u8 [a2 + 0x1e]\n 17413: a3 = u8 [a2 + 0x1f]\n 17416: a1 = a1 << 0x8\n 17419: a1 = a1 | a5\n 17422: s1 = s1 << 0x10\n 17425: a3 = a3 << 0x18\n 17428: a3 = a3 | s1\n 17431: a1 = a1 | a3\n 17434: a1 = a1 << 0x20\n 17437: t2 = a1 | a0\n 17440: a1 = u8 [a2 + 0x11]\n 17443: a3 = u8 [a2 + 0x10]\n 17446: a5 = u8 [a2 + 0x12]\n 17449: s1 = u8 [a2 + 0x13]\n 17452: a1 = a1 << 0x8\n 17455: a1 = a1 | a3\n 17458: a5 = a5 << 0x10\n 17461: s1 = s1 << 0x18\n 17464: a5 = a5 | s1\n 17467: t1 = a5 | a1\n 17470: a3 = u8 [a2 + 0x15]\n 17473: a5 = u8 [a2 + 0x14]\n 17476: s1 = u8 [a2 + 0x16]\n 17479: a1 = u8 [a2 + 0x17]\n 17482: a3 = a3 << 0x8\n 17485: a3 = a3 | a5\n 17488: s1 = s1 << 0x10\n 17491: a1 = a1 << 0x18\n 17494: a1 = a1 | s1\n 17497: a1 = a1 | a3\n 17500: a1 = a1 << 0x20\n 17503: s1 = a1 | t1\n 17506: a1 = u8 [a2 + 0x9]\n 17509: a3 = u8 [a2 + 0x8]\n 17512: a5 = u8 [a2 + 0xa]\n 17515: a0 = u8 [a2 + 0xb]\n 17518: a1 = a1 << 0x8\n 17521: a1 = a1 | a3\n 17524: a5 = a5 << 0x10\n 17527: a0 = a0 << 0x18\n 17530: a0 = a0 | a5\n 17533: t1 = a0 | a1\n 17536: a1 = u8 [a2 + 0xd]\n 17539: a3 = u8 [a2 + 0xc]\n 17542: a5 = u8 [a2 + 0xe]\n 17545: a0 = u8 [a2 + 0xf]\n 17548: a1 = a1 << 0x8\n 17551: a1 = a1 | a3\n 17554: a5 = a5 << 0x10\n 17557: a0 = a0 << 0x18\n 17560: a0 = a0 | a5\n 17563: a0 = a0 | a1\n 17566: a0 = a0 << 0x20\n 17569: a5 = a0 | t1\n 17572: t1 = u8 [a2 + 0x1]\n 17575: a1 = u8 [a2]\n 17577: a3 = u8 [a2 + 0x2]\n 17580: a0 = u8 [a2 + 0x3]\n 17583: t1 = t1 << 0x8\n 17586: a1 = t1 | a1\n 17589: a3 = a3 << 0x10\n 17592: a0 = a0 << 0x18\n 17595: a0 = a0 | a3\n 17598: t1 = a0 | a1\n 17601: a1 = u8 [a2 + 0x5]\n 17604: a3 = u8 [a2 + 0x4]\n 17607: a0 = u8 [a2 + 0x6]\n 17610: a2 = u8 [a2 + 0x7]\n 17613: a1 = a1 << 0x8\n 17616: a1 = a1 | a3\n 17619: a0 = a0 << 0x10\n 17622: a2 = a2 << 0x18\n 17625: a0 = a0 | a2\n 17628: a0 = a0 | a1\n 17631: a0 = a0 << 0x20\n 17634: a1 = a0 | t1\n 17637: t1 = u64 [sp + 0x2e0]\n 17641: jump @406 if t1 >=u t0\n      : @405 (gas: 4)\n 17644: a0 = u64 [sp + 0x2d0]\n 17648: u32 [a0] = t0\n 17650: t1 = t0\n 17652: fallthrough\n      : @406 (gas: 64)\n 17653: a2 = i32 [sp + 0x2c0]\n 17657: a2 = a2 + ra\n 17660: u8 [a2 + 0x10] = s1\n 17663: a0 = a5 >> 0x38\n 17666: u8 [a2 + 0xf] = a0\n 17669: a0 = a5 >> 0x30\n 17672: u8 [a2 + 0xe] = a0\n 17675: a0 = a5 >> 0x28\n 17678: u8 [a2 + 0xd] = a0\n 17681: a0 = a5 >> 0x20\n 17684: u8 [a2 + 0xc] = a0\n 17687: a0 = a5 >> 0x18\n 17690: u8 [a2 + 0xb] = a0\n 17693: a0 = a5 >> 0x10\n 17696: u8 [a2 + 0xa] = a0\n 17699: a0 = a5 >> 0x8\n 17702: u8 [a2 + 0x9] = a0\n 17705: u8 [a2 + 0x8] = a5\n 17708: a0 = a1 >> 0x38\n 17711: u8 [a2 + 0x7] = a0\n 17714: a0 = a1 >> 0x30\n 17717: u8 [a2 + 0x6] = a0\n 17720: a0 = a1 >> 0x28\n 17723: u8 [a2 + 0x5] = a0\n 17726: a0 = a1 >> 0x20\n 17729: u8 [a2 + 0x4] = a0\n 17732: a0 = a1 >> 0x18\n 17735: u8 [a2 + 0x3] = a0\n 17738: a0 = a1 >> 0x10\n 17741: u8 [a2 + 0x2] = a0\n 17744: a0 = a1 >> 0x8\n 17747: u8 [a2 + 0x1] = a0\n 17750: u8 [a2] = a1\n 17752: u8 [a2 + 0x18] = t2\n 17755: a0 = s1 >> 0x38\n 17758: u8 [a2 + 0x17] = a0\n 17761: a0 = s1 >> 0x30\n 17764: u8 [a2 + 0x16] = a0\n 17767: a0 = s1 >> 0x28\n 17770: u8 [a2 + 0x15] = a0\n 17773: a0 = s1 >> 0x20\n 17776: u8 [a2 + 0x14] = a0\n 17779: a0 = s1 >> 0x18\n 17782: u8 [a2 + 0x13] = a0\n 17785: a0 = s1 >> 0x10\n 17788: u8 [a2 + 0x12] = a0\n 17791: s1 = s1 >> 0x8\n 17794: u8 [a2 + 0x11] = s1\n 17797: a0 = t2 >> 0x38\n 17800: u8 [a2 + 0x1f] = a0\n 17803: a0 = t2 >> 0x30\n 17806: u8 [a2 + 0x1e] = a0\n 17809: a0 = t2 >> 0x28\n 17812: u8 [a2 + 0x1d] = a0\n 17815: a0 = t2 >> 0x20\n 17818: u8 [a2 + 0x1c] = a0\n 17821: a0 = t2 >> 0x18\n 17824: u8 [a2 + 0x1b] = a0\n 17827: a0 = t2 >> 0x10\n 17830: u8 [a2 + 0x1a] = a0\n 17833: a0 = t2 >> 0x8\n 17836: u8 [a2 + 0x19] = a0\n 17839: a1 = u64 [sp + 0x248]\n 17843: jump @408 if t1 >=u a1\n      : @407 (gas: 4)\n 17846: a0 = u64 [sp + 0x2d0]\n 17850: u32 [a0] = a1\n 17852: t1 = a1\n 17854: fallthrough\n      : @408 (gas: 108)\n 17855: a0 = u8 [a4 + 0x19]\n 17858: a1 = u8 [a4 + 0x18]\n 17861: a2 = u8 [a4 + 0x1a]\n 17864: a3 = u8 [a4 + 0x1b]\n 17867: a0 = a0 << 0x8\n 17870: a0 = a0 | a1\n 17873: a2 = a2 << 0x10\n 17876: a3 = a3 << 0x18\n 17879: a2 = a2 | a3\n 17882: a0 = a0 | a2\n 17885: a1 = u8 [a4 + 0x1d]\n 17888: a2 = u8 [a4 + 0x1c]\n 17891: a3 = u8 [a4 + 0x1e]\n 17894: a5 = u8 [a4 + 0x1f]\n 17897: a1 = a1 << 0x8\n 17900: a1 = a1 | a2\n 17903: a3 = a3 << 0x10\n 17906: a5 = a5 << 0x18\n 17909: a3 = a3 | a5\n 17912: a1 = a1 | a3\n 17915: a1 = a1 << 0x20\n 17918: t0 = a1 | a0\n 17921: a1 = u8 [a4 + 0x11]\n 17924: a2 = u8 [a4 + 0x10]\n 17927: a3 = u8 [a4 + 0x12]\n 17930: a5 = u8 [a4 + 0x13]\n 17933: a1 = a1 << 0x8\n 17936: a1 = a1 | a2\n 17939: a3 = a3 << 0x10\n 17942: a5 = a5 << 0x18\n 17945: a3 = a3 | a5\n 17948: a1 = a1 | a3\n 17951: a2 = u8 [a4 + 0x15]\n 17954: a3 = u8 [a4 + 0x14]\n 17957: a5 = u8 [a4 + 0x16]\n 17960: s1 = u8 [a4 + 0x17]\n 17963: a2 = a2 << 0x8\n 17966: a2 = a2 | a3\n 17969: a5 = a5 << 0x10\n 17972: s1 = s1 << 0x18\n 17975: a5 = a5 | s1\n 17978: a2 = a2 | a5\n 17981: a2 = a2 << 0x20\n 17984: a2 = a2 | a1\n 17987: a1 = u8 [a4 + 0x9]\n 17990: a3 = u8 [a4 + 0x8]\n 17993: a5 = u8 [a4 + 0xa]\n 17996: s1 = u8 [a4 + 0xb]\n 17999: a1 = a1 << 0x8\n 18002: a1 = a1 | a3\n 18005: a5 = a5 << 0x10\n 18008: s1 = s1 << 0x18\n 18011: a5 = a5 | s1\n 18014: a1 = a1 | a5\n 18017: a3 = u8 [a4 + 0xd]\n 18020: a5 = u8 [a4 + 0xc]\n 18023: s1 = u8 [a4 + 0xe]\n 18026: a0 = u8 [a4 + 0xf]\n 18029: a3 = a3 << 0x8\n 18032: a3 = a3 | a5\n 18035: s1 = s1 << 0x10\n 18038: a0 = a0 << 0x18\n 18041: a0 = a0 | s1\n 18044: a0 = a0 | a3\n 18047: a0 = a0 << 0x20\n 18050: a1 = a1 | a0\n 18053: a0 = u8 [a4 + 0x1]\n 18056: a3 = u8 [a4]\n 18058: a5 = u8 [a4 + 0x2]\n 18061: s1 = u8 [a4 + 0x3]\n 18064: a0 = a0 << 0x8\n 18067: a0 = a0 | a3\n 18070: a5 = a5 << 0x10\n 18073: s1 = s1 << 0x18\n 18076: a5 = a5 | s1\n 18079: a0 = a0 | a5\n 18082: a3 = u8 [a4 + 0x5]\n 18085: a5 = u8 [a4 + 0x4]\n 18088: s1 = u8 [a4 + 0x6]\n 18091: a4 = u8 [a4 + 0x7]\n 18094: a3 = a3 << 0x8\n 18097: a3 = a3 | a5\n 18100: s1 = s1 << 0x10\n 18103: a4 = a4 << 0x18\n 18106: a4 = a4 | s1\n 18109: a3 = a3 | a4\n 18112: a3 = a3 << 0x20\n 18115: a0 = a0 | a3\n 18118: a3 = reverse a0\n 18120: a1 = reverse a1\n 18122: a2 = reverse a2\n 18124: a4 = reverse t0\n 18126: a0 = a4 + 0x20\n 18129: a4 = a0 <u a4\n 18132: a5 = a2 + a4\n 18135: a2 = a5 <u a2\n 18138: a2 = a4 if a4 == 0\n 18141: a2 = a2 + a1\n 18144: a1 = a2 <u a1\n 18147: a1 = a1 + a3\n 18150: a3 = a0 | a2\n 18153: a1 = a1 | a5\n 18156: a3 = a3 | a1\n 18159: a3 = a3 >> 0x20\n 18162: a1 = a1 | a2\n 18165: a1 = a1 << 0x20\n 18168: a1 = a1 | a3\n 18171: jump @410 if a1 == 0\n      : @409 (gas: 1)\n 18174: jump @587\n      : @410 (gas: 4)\n 18177: i32 a1 = a0 >> 0x10\n 18180: s1 = u64 [sp + 0x2c0]\n 18184: a3 = u64 [sp + 0x240]\n 18188: jump @412 if a1 == 0\n      : @411 (gas: 1)\n 18191: jump @587\n      : @412 (gas: 4)\n 18194: a1 = a0 + 0x3f\n 18197: a2 = u64 [sp + 0x2e8]\n 18201: a1 = a1 & a2\n 18204: jump @414 if a1 <=u 65536\n      : @413 (gas: 1)\n 18210: jump @587\n      : @414 (gas: 1)\n 18213: jump @416 if t1 >=u a1\n      : @415 (gas: 4)\n 18216: a2 = u64 [sp + 0x2d0]\n 18220: u32 [a2] = a1\n 18222: t1 = a1\n 18224: fallthrough\n      : @416 (gas: 6)\n 18225: a1 = 0xffffffe0\n 18235: a1 = s1 <u a1\n 18238: a2 = u64 [sp + 0x268]\n 18242: a1 = 0 if a2 != 0\n 18244: a1 = 0 if a3 != 0\n 18246: jump @418 if a1 != 0\n      : @417 (gas: 1)\n 18249: jump @587\n      : @418 (gas: 3)\n 18252: u64 [sp + 0x2e0] = t1\n 18256: i32 a1 = s1 >> 0x5\n 18259: jump @420 if a1 <u 2047\n      : @419 (gas: 1)\n 18264: jump @587\n      : @420 (gas: 4)\n 18267: a1 = s1 + 0x5f\n 18270: a2 = u64 [sp + 0x2e8]\n 18274: t0 = a1 & a2\n 18277: jump @422 if t0 <=u 65536\n      : @421 (gas: 1)\n 18283: jump @587\n      : @422 (gas: 94)\n 18286: i32 a0 = a0 + 0\n 18288: a4 = ra + a0\n 18291: a0 = u8 [a4 + 0x19]\n 18294: a1 = u8 [a4 + 0x18]\n 18297: a3 = u8 [a4 + 0x1a]\n 18300: a5 = u8 [a4 + 0x1b]\n 18303: a0 = a0 << 0x8\n 18306: a0 = a0 | a1\n 18309: a3 = a3 << 0x10\n 18312: a5 = a5 << 0x18\n 18315: a3 = a3 | a5\n 18318: a0 = a0 | a3\n 18321: a1 = u8 [a4 + 0x1d]\n 18324: a3 = u8 [a4 + 0x1c]\n 18327: a5 = u8 [a4 + 0x1e]\n 18330: s1 = u8 [a4 + 0x1f]\n 18333: a1 = a1 << 0x8\n 18336: a1 = a1 | a3\n 18339: a5 = a5 << 0x10\n 18342: s1 = s1 << 0x18\n 18345: a5 = a5 | s1\n 18348: a1 = a1 | a5\n 18351: a1 = a1 << 0x20\n 18354: t2 = a1 | a0\n 18357: a1 = u8 [a4 + 0x11]\n 18360: a3 = u8 [a4 + 0x10]\n 18363: a5 = u8 [a4 + 0x12]\n 18366: s1 = u8 [a4 + 0x13]\n 18369: a1 = a1 << 0x8\n 18372: a1 = a1 | a3\n 18375: a5 = a5 << 0x10\n 18378: s1 = s1 << 0x18\n 18381: a5 = a5 | s1\n 18384: a1 = a1 | a5\n 18387: a3 = u8 [a4 + 0x15]\n 18390: a5 = u8 [a4 + 0x14]\n 18393: s1 = u8 [a4 + 0x16]\n 18396: a2 = u8 [a4 + 0x17]\n 18399: a3 = a3 << 0x8\n 18402: a3 = a3 | a5\n 18405: s1 = s1 << 0x10\n 18408: a2 = a2 << 0x18\n 18411: a2 = a2 | s1\n 18414: a2 = a2 | a3\n 18417: a2 = a2 << 0x20\n 18420: a3 = a2 | a1\n 18423: a1 = u8 [a4 + 0x9]\n 18426: a2 = u8 [a4 + 0x8]\n 18429: a5 = u8 [a4 + 0xa]\n 18432: s1 = u8 [a4 + 0xb]\n 18435: a1 = a1 << 0x8\n 18438: a1 = a1 | a2\n 18441: a5 = a5 << 0x10\n 18444: s1 = s1 << 0x18\n 18447: a5 = a5 | s1\n 18450: t1 = a5 | a1\n 18453: a2 = u8 [a4 + 0xd]\n 18456: a5 = u8 [a4 + 0xc]\n 18459: s1 = u8 [a4 + 0xe]\n 18462: a1 = u8 [a4 + 0xf]\n 18465: a2 = a2 << 0x8\n 18468: a2 = a2 | a5\n 18471: s1 = s1 << 0x10\n 18474: a1 = a1 << 0x18\n 18477: a1 = a1 | s1\n 18480: a1 = a1 | a2\n 18483: a1 = a1 << 0x20\n 18486: a5 = a1 | t1\n 18489: a1 = u8 [a4 + 0x1]\n 18492: a2 = u8 [a4]\n 18494: s1 = u8 [a4 + 0x2]\n 18497: a0 = u8 [a4 + 0x3]\n 18500: a1 = a1 << 0x8\n 18503: a1 = a1 | a2\n 18506: s1 = s1 << 0x10\n 18509: a0 = a0 << 0x18\n 18512: a0 = a0 | s1\n 18515: a0 = a0 | a1\n 18518: a1 = u8 [a4 + 0x5]\n 18521: a2 = u8 [a4 + 0x4]\n 18524: s1 = u8 [a4 + 0x6]\n 18527: a4 = u8 [a4 + 0x7]\n 18530: a1 = a1 << 0x8\n 18533: a1 = a1 | a2\n 18536: s1 = s1 << 0x10\n 18539: a4 = a4 << 0x18\n 18542: a4 = a4 | s1\n 18545: a1 = a1 | a4\n 18548: a1 = a1 << 0x20\n 18551: a4 = a1 | a0\n 18554: a0 = u64 [sp + 0x2c0]\n 18558: i32 a1 = a0 + 0x20\n 18561: t1 = u64 [sp + 0x2e0]\n 18565: jump @424 if t1 >=u t0\n      : @423 (gas: 4)\n 18568: a0 = u64 [sp + 0x2d0]\n 18572: u32 [a0] = t0\n 18574: t1 = t0\n 18576: fallthrough\n      : @424 (gas: 80)\n 18577: a1 = a1 + ra\n 18580: u8 [a1 + 0x8] = a5\n 18583: a0 = a4 >> 0x38\n 18586: u8 [a1 + 0x7] = a0\n 18589: a0 = a4 >> 0x30\n 18592: u8 [a1 + 0x6] = a0\n 18595: a0 = a4 >> 0x28\n 18598: u8 [a1 + 0x5] = a0\n 18601: a0 = a4 >> 0x20\n 18604: u8 [a1 + 0x4] = a0\n 18607: a0 = a4 >> 0x18\n 18610: u8 [a1 + 0x3] = a0\n 18613: a0 = a4 >> 0x10\n 18616: u8 [a1 + 0x2] = a0\n 18619: a0 = a4 >> 0x8\n 18622: u8 [a1 + 0x1] = a0\n 18625: u8 [a1] = a4\n 18627: u8 [a1 + 0x10] = a3\n 18630: a0 = a5 >> 0x38\n 18633: u8 [a1 + 0xf] = a0\n 18636: a0 = a5 >> 0x30\n 18639: u8 [a1 + 0xe] = a0\n 18642: a0 = a5 >> 0x28\n 18645: u8 [a1 + 0xd] = a0\n 18648: a0 = a5 >> 0x20\n 18651: u8 [a1 + 0xc] = a0\n 18654: a0 = a5 >> 0x18\n 18657: u8 [a1 + 0xb] = a0\n 18660: a0 = a5 >> 0x10\n 18663: u8 [a1 + 0xa] = a0\n 18666: a5 = a5 >> 0x8\n 18669: u8 [a1 + 0x9] = a5\n 18672: u8 [a1 + 0x18] = t2\n 18675: a0 = a3 >> 0x38\n 18678: u8 [a1 + 0x17] = a0\n 18681: a0 = a3 >> 0x30\n 18684: u8 [a1 + 0x16] = a0\n 18687: a0 = a3 >> 0x28\n 18690: u8 [a1 + 0x15] = a0\n 18693: a0 = a3 >> 0x20\n 18696: u8 [a1 + 0x14] = a0\n 18699: a0 = a3 >> 0x18\n 18702: u8 [a1 + 0x13] = a0\n 18705: a0 = a3 >> 0x10\n 18708: u8 [a1 + 0x12] = a0\n 18711: a3 = a3 >> 0x8\n 18714: u8 [a1 + 0x11] = a3\n 18717: a0 = t2 >> 0x38\n 18720: u8 [a1 + 0x1f] = a0\n 18723: a0 = t2 >> 0x30\n 18726: u8 [a1 + 0x1e] = a0\n 18729: a0 = t2 >> 0x28\n 18732: u8 [a1 + 0x1d] = a0\n 18735: a0 = t2 >> 0x20\n 18738: u8 [a1 + 0x1c] = a0\n 18741: a0 = t2 >> 0x18\n 18744: u8 [a1 + 0x1b] = a0\n 18747: a0 = t2 >> 0x10\n 18750: u8 [a1 + 0x1a] = a0\n 18753: a0 = t2 >> 0x8\n 18756: u8 [a1 + 0x19] = a0\n 18759: a1 = u64 [ra + 0x50]\n 18762: a0 = u64 [ra + 0x58]\n 18765: a3 = u64 [ra + 0x40]\n 18768: a2 = u64 [ra + 0x48]\n 18771: u64 [sp + 0x250] = a1\n 18775: a4 = reverse a1\n 18777: u64 [sp + 0x268] = a0\n 18781: s1 = reverse a0\n 18783: t2 = ra\n 18785: u64 [sp + 0x240] = a3\n 18789: ra = reverse a3\n 18791: u64 [sp + 0x248] = a2\n 18795: t0 = reverse a2\n 18797: a1 = t0 | ra\n 18800: a0 = s1 <u 0xffffffffffffffc0\n 18803: a0 = 0 if a4 != 0\n 18805: u64 [sp + 0x270] = a1\n 18809: a0 = 0 if a1 != 0\n 18811: jump @426 if a0 != 0\n      : @425 (gas: 1)\n 18814: jump @594\n      : @426 (gas: 26)\n 18817: a0 = s1 + 0x40\n 18820: a1 = a0 <u s1\n 18823: a2 = a4 + a1\n 18826: a3 = a2 <u a4\n 18829: a3 = a1 if a1 == 0\n 18832: a0 = reverse a0\n 18834: u64 [t2 + 0x58] = a0\n 18837: a3 = a3 + t0\n 18840: a0 = reverse a2\n 18842: u64 [t2 + 0x50] = a0\n 18845: a0 = reverse a3\n 18847: u64 [t2 + 0x48] = a0\n 18850: a0 = u64 [sp + 0x280]\n 18854: a1 = u64 [sp + 0x278]\n 18858: a0 = a0 | a1\n 18861: a1 = 0xffffffe0\n 18871: a2 = u64 [sp + 0x2a8]\n 18875: a1 = a2 <u a1\n 18878: a5 = u64 [sp + 0x288]\n 18882: a1 = 0 if a5 != 0\n 18884: a1 = 0 if a0 != 0\n 18886: a0 = a3 <u t0\n 18889: a0 = a0 + ra\n 18892: a0 = reverse a0\n 18894: u64 [t2 + 0x40] = a0\n 18897: jump @428 if a1 != 0\n      : @427 (gas: 1)\n 18900: jump @587\n      : @428 (gas: 2)\n 18903: i32 a0 = a2 >> 0x5\n 18906: jump @430 if a0 <u 2047\n      : @429 (gas: 1)\n 18911: jump @587\n      : @430 (gas: 4)\n 18914: a0 = a2 + 0x5f\n 18917: a1 = u64 [sp + 0x2e8]\n 18921: a1 = a1 & a0\n 18924: jump @432 if a1 <=u 65536\n      : @431 (gas: 1)\n 18930: jump @587\n      : @432 (gas: 4)\n 18933: u64 [sp + 0x288] = a4\n 18937: u64 [sp + 0x2c0] = s1\n 18941: i32 s1 = a2 + 0x20\n 18944: jump @434 if t1 >=u a1\n      : @433 (gas: 4)\n 18947: a0 = u64 [sp + 0x2d0]\n 18951: u32 [a0] = a1\n 18953: t1 = a1\n 18955: fallthrough\n      : @434 (gas: 104)\n 18956: u64 [sp + 0x2a8] = a1\n 18960: u64 [sp + 0x2e0] = t1\n 18964: a0 = u64 [sp + 0x2d8]\n 18968: s1 = s1 + a0\n 18971: a0 = u8 [s1 + 0x11]\n 18974: a1 = u8 [s1 + 0x10]\n 18977: a2 = u8 [s1 + 0x12]\n 18980: a3 = u8 [s1 + 0x13]\n 18983: a0 = a0 << 0x8\n 18986: a0 = a0 | a1\n 18989: a2 = a2 << 0x10\n 18992: a3 = a3 << 0x18\n 18995: a2 = a2 | a3\n 18998: a0 = a0 | a2\n 19001: a1 = u8 [s1 + 0x15]\n 19004: a2 = u8 [s1 + 0x14]\n 19007: a3 = u8 [s1 + 0x16]\n 19010: t1 = u8 [s1 + 0x17]\n 19013: a1 = a1 << 0x8\n 19016: a1 = a1 | a2\n 19019: a3 = a3 << 0x10\n 19022: t1 = t1 << 0x18\n 19025: a2 = t1 | a3\n 19028: a1 = a1 | a2\n 19031: a1 = a1 << 0x20\n 19034: t1 = a1 | a0\n 19037: a0 = u8 [s1 + 0x1]\n 19040: a2 = u8 [s1]\n 19042: a3 = u8 [s1 + 0x2]\n 19045: a4 = u8 [s1 + 0x3]\n 19048: a0 = a0 << 0x8\n 19051: a0 = a0 | a2\n 19054: a3 = a3 << 0x10\n 19057: a4 = a4 << 0x18\n 19060: a3 = a3 | a4\n 19063: a0 = a0 | a3\n 19066: a2 = u8 [s1 + 0x5]\n 19069: a3 = u8 [s1 + 0x4]\n 19072: a4 = u8 [s1 + 0x6]\n 19075: a1 = u8 [s1 + 0x7]\n 19078: a2 = a2 << 0x8\n 19081: a2 = a2 | a3\n 19084: a4 = a4 << 0x10\n 19087: a1 = a1 << 0x18\n 19090: a1 = a1 | a4\n 19093: a1 = a1 | a2\n 19096: a1 = a1 << 0x20\n 19099: a2 = a1 | a0\n 19102: a0 = u8 [s1 + 0x19]\n 19105: a1 = u8 [s1 + 0x18]\n 19108: a3 = u8 [s1 + 0x1a]\n 19111: a4 = u8 [s1 + 0x1b]\n 19114: a0 = a0 << 0x8\n 19117: a0 = a0 | a1\n 19120: a3 = a3 << 0x10\n 19123: a4 = a4 << 0x18\n 19126: a3 = a3 | a4\n 19129: a0 = a0 | a3\n 19132: a1 = u8 [s1 + 0x1d]\n 19135: a3 = u8 [s1 + 0x1c]\n 19138: a4 = u8 [s1 + 0x1e]\n 19141: t2 = u8 [s1 + 0x1f]\n 19144: a1 = a1 << 0x8\n 19147: a1 = a1 | a3\n 19150: a4 = a4 << 0x10\n 19153: t2 = t2 << 0x18\n 19156: a3 = t2 | a4\n 19159: a1 = a1 | a3\n 19162: a1 = a1 << 0x20\n 19165: t2 = a1 | a0\n 19168: a1 = u8 [s1 + 0x9]\n 19171: a3 = u8 [s1 + 0x8]\n 19174: a4 = u8 [s1 + 0xa]\n 19177: a5 = u8 [s1 + 0xb]\n 19180: a1 = a1 << 0x8\n 19183: a1 = a1 | a3\n 19186: a4 = a4 << 0x10\n 19189: a5 = a5 << 0x18\n 19192: a4 = a4 | a5\n 19195: a1 = a1 | a4\n 19198: a3 = u8 [s1 + 0xd]\n 19201: a4 = u8 [s1 + 0xc]\n 19204: a5 = u8 [s1 + 0xe]\n 19207: a0 = u8 [s1 + 0xf]\n 19210: a3 = a3 << 0x8\n 19213: a3 = a3 | a4\n 19216: a5 = a5 << 0x10\n 19219: a0 = a0 << 0x18\n 19222: a0 = a0 | a5\n 19225: a0 = a0 | a3\n 19228: a0 = a0 << 0x20\n 19231: a0 = a0 | a1\n 19234: a1 = reverse a0\n 19236: a0 = reverse t2\n 19238: a2 = reverse a2\n 19240: a3 = reverse t1\n 19242: a2 = a2 | a3\n 19245: a3 = a0 | a1\n 19248: a3 = a3 | a2\n 19251: a3 = a3 >> 0x20\n 19254: a1 = a1 | a2\n 19257: a1 = a1 << 0x20\n 19260: a1 = a1 | a3\n 19263: jump @436 if a1 == 0\n      : @435 (gas: 1)\n 19266: jump @587\n      : @436 (gas: 5)\n 19269: i32 a1 = a0 >> 0x10\n 19272: a3 = u64 [sp + 0x2e0]\n 19276: a4 = u64 [sp + 0x2c0]\n 19280: a5 = u64 [sp + 0x288]\n 19284: jump @438 if a1 == 0\n      : @437 (gas: 1)\n 19287: jump @587\n      : @438 (gas: 4)\n 19290: a1 = a0 + 0x3f\n 19293: a2 = u64 [sp + 0x2e8]\n 19297: a1 = a1 & a2\n 19300: jump @440 if a1 <=u 65536\n      : @439 (gas: 1)\n 19306: jump @587\n      : @440 (gas: 1)\n 19309: jump @442 if a3 >=u a1\n      : @441 (gas: 4)\n 19312: a2 = u64 [sp + 0x2d0]\n 19316: u32 [a2] = a1\n 19318: a3 = a1\n 19320: fallthrough\n      : @442 (gas: 8)\n 19321: a1 = a4 | t0\n 19324: a2 = a5 | ra\n 19327: a1 = a1 | a2\n 19330: a1 = a1 >> 0x20\n 19333: a2 = a2 | t0\n 19336: a2 = a2 << 0x20\n 19339: a1 = a1 | a2\n 19342: jump @444 if a1 == 0\n      : @443 (gas: 1)\n 19345: jump @587\n      : @444 (gas: 4)\n 19348: u64 [sp + 0x2e0] = a3\n 19352: i32 a1 = a4 >> 0x10\n 19355: ra = u64 [sp + 0x2d8]\n 19359: jump @446 if a1 == 0\n      : @445 (gas: 1)\n 19362: jump @587\n      : @446 (gas: 4)\n 19365: a1 = a4 + 0x3f\n 19368: a2 = u64 [sp + 0x2e8]\n 19372: t0 = a1 & a2\n 19375: jump @448 if t0 <=u 65536\n      : @447 (gas: 1)\n 19381: jump @587\n      : @448 (gas: 92)\n 19384: i32 a0 = a0 + 0\n 19386: a2 = ra + a0\n 19389: a0 = u8 [a2 + 0x19]\n 19392: a3 = u8 [a2 + 0x18]\n 19395: a4 = u8 [a2 + 0x1a]\n 19398: a5 = u8 [a2 + 0x1b]\n 19401: a0 = a0 << 0x8\n 19404: a0 = a0 | a3\n 19407: a4 = a4 << 0x10\n 19410: a5 = a5 << 0x18\n 19413: a4 = a4 | a5\n 19416: a0 = a0 | a4\n 19419: a3 = u8 [a2 + 0x1d]\n 19422: a4 = u8 [a2 + 0x1c]\n 19425: a5 = u8 [a2 + 0x1e]\n 19428: a1 = u8 [a2 + 0x1f]\n 19431: a3 = a3 << 0x8\n 19434: a3 = a3 | a4\n 19437: a5 = a5 << 0x10\n 19440: a1 = a1 << 0x18\n 19443: a1 = a1 | a5\n 19446: a1 = a1 | a3\n 19449: a1 = a1 << 0x20\n 19452: t2 = a1 | a0\n 19455: a0 = u8 [a2 + 0x11]\n 19458: a1 = u8 [a2 + 0x10]\n 19461: a3 = u8 [a2 + 0x12]\n 19464: a4 = u8 [a2 + 0x13]\n 19467: a0 = a0 << 0x8\n 19470: a0 = a0 | a1\n 19473: a3 = a3 << 0x10\n 19476: a4 = a4 << 0x18\n 19479: a3 = a3 | a4\n 19482: t1 = a3 | a0\n 19485: a1 = u8 [a2 + 0x15]\n 19488: a3 = u8 [a2 + 0x14]\n 19491: a4 = u8 [a2 + 0x16]\n 19494: a0 = u8 [a2 + 0x17]\n 19497: a1 = a1 << 0x8\n 19500: a1 = a1 | a3\n 19503: a4 = a4 << 0x10\n 19506: a0 = a0 << 0x18\n 19509: a0 = a0 | a4\n 19512: a0 = a0 | a1\n 19515: a0 = a0 << 0x20\n 19518: a3 = a0 | t1\n 19521: a0 = u8 [a2 + 0x9]\n 19524: a1 = u8 [a2 + 0x8]\n 19527: a4 = u8 [a2 + 0xa]\n 19530: a5 = u8 [a2 + 0xb]\n 19533: a0 = a0 << 0x8\n 19536: a0 = a0 | a1\n 19539: a4 = a4 << 0x10\n 19542: a5 = a5 << 0x18\n 19545: a4 = a4 | a5\n 19548: t1 = a4 | a0\n 19551: a1 = u8 [a2 + 0xd]\n 19554: a4 = u8 [a2 + 0xc]\n 19557: a5 = u8 [a2 + 0xe]\n 19560: a0 = u8 [a2 + 0xf]\n 19563: a1 = a1 << 0x8\n 19566: a1 = a1 | a4\n 19569: a5 = a5 << 0x10\n 19572: a0 = a0 << 0x18\n 19575: a0 = a0 | a5\n 19578: a0 = a0 | a1\n 19581: a0 = a0 << 0x20\n 19584: a0 = a0 | t1\n 19587: t1 = u8 [a2 + 0x1]\n 19590: a4 = u8 [a2]\n 19592: a5 = u8 [a2 + 0x2]\n 19595: a1 = u8 [a2 + 0x3]\n 19598: t1 = t1 << 0x8\n 19601: a4 = t1 | a4\n 19604: a5 = a5 << 0x10\n 19607: a1 = a1 << 0x18\n 19610: a1 = a1 | a5\n 19613: t1 = a1 | a4\n 19616: a4 = u8 [a2 + 0x5]\n 19619: a5 = u8 [a2 + 0x4]\n 19622: a1 = u8 [a2 + 0x6]\n 19625: a2 = u8 [a2 + 0x7]\n 19628: a4 = a4 << 0x8\n 19631: a4 = a4 | a5\n 19634: a1 = a1 << 0x10\n 19637: a2 = a2 << 0x18\n 19640: a1 = a1 | a2\n 19643: a1 = a1 | a4\n 19646: a1 = a1 << 0x20\n 19649: a2 = a1 | t1\n 19652: t1 = u64 [sp + 0x2e0]\n 19656: jump @450 if t1 >=u t0\n      : @449 (gas: 4)\n 19659: a1 = u64 [sp + 0x2d0]\n 19663: u32 [a1] = t0\n 19665: t1 = t0\n 19667: fallthrough\n      : @450 (gas: 64)\n 19668: a1 = i32 [sp + 0x2c0]\n 19672: a1 = a1 + ra\n 19675: u8 [a1 + 0x10] = a3\n 19678: a4 = a0 >> 0x38\n 19681: u8 [a1 + 0xf] = a4\n 19684: a4 = a0 >> 0x30\n 19687: u8 [a1 + 0xe] = a4\n 19690: a4 = a0 >> 0x28\n 19693: u8 [a1 + 0xd] = a4\n 19696: a4 = a0 >> 0x20\n 19699: u8 [a1 + 0xc] = a4\n 19702: a4 = a0 >> 0x18\n 19705: u8 [a1 + 0xb] = a4\n 19708: a4 = a0 >> 0x10\n 19711: u8 [a1 + 0xa] = a4\n 19714: a4 = a0 >> 0x8\n 19717: u8 [a1 + 0x9] = a4\n 19720: u8 [a1 + 0x8] = a0\n 19723: a0 = a2 >> 0x38\n 19726: u8 [a1 + 0x7] = a0\n 19729: a0 = a2 >> 0x30\n 19732: u8 [a1 + 0x6] = a0\n 19735: a0 = a2 >> 0x28\n 19738: u8 [a1 + 0x5] = a0\n 19741: a0 = a2 >> 0x20\n 19744: u8 [a1 + 0x4] = a0\n 19747: a0 = a2 >> 0x18\n 19750: u8 [a1 + 0x3] = a0\n 19753: a0 = a2 >> 0x10\n 19756: u8 [a1 + 0x2] = a0\n 19759: a0 = a2 >> 0x8\n 19762: u8 [a1 + 0x1] = a0\n 19765: u8 [a1] = a2\n 19767: u8 [a1 + 0x18] = t2\n 19770: a0 = a3 >> 0x38\n 19773: u8 [a1 + 0x17] = a0\n 19776: a0 = a3 >> 0x30\n 19779: u8 [a1 + 0x16] = a0\n 19782: a0 = a3 >> 0x28\n 19785: u8 [a1 + 0x15] = a0\n 19788: a0 = a3 >> 0x20\n 19791: u8 [a1 + 0x14] = a0\n 19794: a0 = a3 >> 0x18\n 19797: u8 [a1 + 0x13] = a0\n 19800: a0 = a3 >> 0x10\n 19803: u8 [a1 + 0x12] = a0\n 19806: a3 = a3 >> 0x8\n 19809: u8 [a1 + 0x11] = a3\n 19812: a0 = t2 >> 0x38\n 19815: u8 [a1 + 0x1f] = a0\n 19818: a0 = t2 >> 0x30\n 19821: u8 [a1 + 0x1e] = a0\n 19824: a0 = t2 >> 0x28\n 19827: u8 [a1 + 0x1d] = a0\n 19830: a0 = t2 >> 0x20\n 19833: u8 [a1 + 0x1c] = a0\n 19836: a0 = t2 >> 0x18\n 19839: u8 [a1 + 0x1b] = a0\n 19842: a0 = t2 >> 0x10\n 19845: u8 [a1 + 0x1a] = a0\n 19848: a0 = t2 >> 0x8\n 19851: u8 [a1 + 0x19] = a0\n 19854: a1 = u64 [sp + 0x2a8]\n 19858: jump @452 if t1 >=u a1\n      : @451 (gas: 4)\n 19861: a0 = u64 [sp + 0x2d0]\n 19865: u32 [a0] = a1\n 19867: t1 = a1\n 19869: fallthrough\n      : @452 (gas: 109)\n 19870: a0 = u8 [s1 + 0x19]\n 19873: a1 = u8 [s1 + 0x18]\n 19876: a2 = u8 [s1 + 0x1a]\n 19879: a3 = u8 [s1 + 0x1b]\n 19882: a0 = a0 << 0x8\n 19885: a0 = a0 | a1\n 19888: a2 = a2 << 0x10\n 19891: a3 = a3 << 0x18\n 19894: a2 = a2 | a3\n 19897: a0 = a0 | a2\n 19900: a1 = u8 [s1 + 0x1d]\n 19903: a2 = u8 [s1 + 0x1c]\n 19906: a3 = u8 [s1 + 0x1e]\n 19909: a4 = u8 [s1 + 0x1f]\n 19912: a1 = a1 << 0x8\n 19915: a1 = a1 | a2\n 19918: a3 = a3 << 0x10\n 19921: a4 = a4 << 0x18\n 19924: a3 = a3 | a4\n 19927: a1 = a1 | a3\n 19930: a1 = a1 << 0x20\n 19933: t0 = a1 | a0\n 19936: a1 = u8 [s1 + 0x11]\n 19939: a2 = u8 [s1 + 0x10]\n 19942: a3 = u8 [s1 + 0x12]\n 19945: a4 = u8 [s1 + 0x13]\n 19948: a1 = a1 << 0x8\n 19951: a1 = a1 | a2\n 19954: a3 = a3 << 0x10\n 19957: a4 = a4 << 0x18\n 19960: a3 = a3 | a4\n 19963: a1 = a1 | a3\n 19966: a2 = u8 [s1 + 0x15]\n 19969: a3 = u8 [s1 + 0x14]\n 19972: a4 = u8 [s1 + 0x16]\n 19975: a5 = u8 [s1 + 0x17]\n 19978: a2 = a2 << 0x8\n 19981: a2 = a2 | a3\n 19984: a4 = a4 << 0x10\n 19987: a5 = a5 << 0x18\n 19990: a4 = a4 | a5\n 19993: a2 = a2 | a4\n 19996: a2 = a2 << 0x20\n 19999: a1 = a1 | a2\n 20002: a2 = u8 [s1 + 0x9]\n 20005: a3 = u8 [s1 + 0x8]\n 20008: a4 = u8 [s1 + 0xa]\n 20011: a5 = u8 [s1 + 0xb]\n 20014: a2 = a2 << 0x8\n 20017: a2 = a2 | a3\n 20020: a4 = a4 << 0x10\n 20023: a5 = a5 << 0x18\n 20026: a4 = a4 | a5\n 20029: a2 = a2 | a4\n 20032: a3 = u8 [s1 + 0xd]\n 20035: a4 = u8 [s1 + 0xc]\n 20038: a5 = u8 [s1 + 0xe]\n 20041: a0 = u8 [s1 + 0xf]\n 20044: a3 = a3 << 0x8\n 20047: a3 = a3 | a4\n 20050: a5 = a5 << 0x10\n 20053: a0 = a0 << 0x18\n 20056: a0 = a0 | a5\n 20059: a0 = a0 | a3\n 20062: a0 = a0 << 0x20\n 20065: a2 = a2 | a0\n 20068: a0 = u8 [s1 + 0x1]\n 20071: a3 = u8 [s1]\n 20073: a4 = u8 [s1 + 0x2]\n 20076: a5 = u8 [s1 + 0x3]\n 20079: a0 = a0 << 0x8\n 20082: a0 = a0 | a3\n 20085: a4 = a4 << 0x10\n 20088: a5 = a5 << 0x18\n 20091: a4 = a4 | a5\n 20094: a0 = a0 | a4\n 20097: a3 = u8 [s1 + 0x5]\n 20100: a4 = u8 [s1 + 0x4]\n 20103: a5 = u8 [s1 + 0x6]\n 20106: s1 = u8 [s1 + 0x7]\n 20109: a3 = a3 << 0x8\n 20112: a3 = a3 | a4\n 20115: a5 = a5 << 0x10\n 20118: s1 = s1 << 0x18\n 20121: a5 = a5 | s1\n 20124: a3 = a3 | a5\n 20127: a3 = a3 << 0x20\n 20130: a0 = a0 | a3\n 20133: a3 = reverse a0\n 20135: a2 = reverse a2\n 20137: a1 = reverse a1\n 20139: a4 = reverse t0\n 20141: a0 = a4 + 0x20\n 20144: a4 = a0 <u a4\n 20147: a5 = a1 + a4\n 20150: a1 = a5 <u a1\n 20153: a1 = a4 if a4 == 0\n 20156: a1 = a1 + a2\n 20159: a2 = a1 <u a2\n 20162: a2 = a2 + a3\n 20165: a3 = a0 | a1\n 20168: a2 = a2 | a5\n 20171: a3 = a3 | a2\n 20174: a3 = a3 >> 0x20\n 20177: a1 = a1 | a2\n 20180: a1 = a1 << 0x20\n 20183: a1 = a1 | a3\n 20186: a3 = u64 [sp + 0x288]\n 20190: jump @454 if a1 == 0\n      : @453 (gas: 1)\n 20193: jump @587\n      : @454 (gas: 3)\n 20196: i32 a1 = a0 >> 0x10\n 20199: ra = u64 [sp + 0x2c0]\n 20203: jump @456 if a1 == 0\n      : @455 (gas: 1)\n 20206: jump @587\n      : @456 (gas: 4)\n 20209: a1 = a0 + 0x3f\n 20212: a2 = u64 [sp + 0x2e8]\n 20216: a1 = a1 & a2\n 20219: jump @458 if a1 <=u 65536\n      : @457 (gas: 1)\n 20225: jump @587\n      : @458 (gas: 1)\n 20228: jump @460 if t1 >=u a1\n      : @459 (gas: 4)\n 20231: a2 = u64 [sp + 0x2d0]\n 20235: u32 [a2] = a1\n 20237: t1 = a1\n 20239: fallthrough\n      : @460 (gas: 6)\n 20240: a1 = 0xffffffe0\n 20250: a1 = ra <u a1\n 20253: a1 = 0 if a3 != 0\n 20255: a2 = u64 [sp + 0x270]\n 20259: a1 = 0 if a2 != 0\n 20261: jump @462 if a1 != 0\n      : @461 (gas: 1)\n 20264: jump @587\n      : @462 (gas: 3)\n 20267: u64 [sp + 0x2e0] = t1\n 20271: i32 a1 = ra >> 0x5\n 20274: jump @464 if a1 <u 2047\n      : @463 (gas: 1)\n 20279: jump @587\n      : @464 (gas: 4)\n 20282: a1 = ra + 0x5f\n 20285: a2 = u64 [sp + 0x2e8]\n 20289: t0 = a1 & a2\n 20292: jump @466 if t0 <=u 65536\n      : @465 (gas: 1)\n 20298: jump @587\n      : @466 (gas: 94)\n 20301: i32 a0 = a0 + 0\n 20303: a3 = u64 [sp + 0x2d8]\n 20307: a3 = a3 + a0\n 20310: a0 = u8 [a3 + 0x19]\n 20313: a2 = u8 [a3 + 0x18]\n 20316: a4 = u8 [a3 + 0x1a]\n 20319: a5 = u8 [a3 + 0x1b]\n 20322: a0 = a0 << 0x8\n 20325: a0 = a0 | a2\n 20328: a4 = a4 << 0x10\n 20331: a5 = a5 << 0x18\n 20334: a4 = a4 | a5\n 20337: a0 = a0 | a4\n 20340: a2 = u8 [a3 + 0x1d]\n 20343: a4 = u8 [a3 + 0x1c]\n 20346: a5 = u8 [a3 + 0x1e]\n 20349: s1 = u8 [a3 + 0x1f]\n 20352: a2 = a2 << 0x8\n 20355: a2 = a2 | a4\n 20358: a5 = a5 << 0x10\n 20361: s1 = s1 << 0x18\n 20364: a5 = a5 | s1\n 20367: a2 = a2 | a5\n 20370: a2 = a2 << 0x20\n 20373: t2 = a2 | a0\n 20376: a2 = u8 [a3 + 0x11]\n 20379: a4 = u8 [a3 + 0x10]\n 20382: a5 = u8 [a3 + 0x12]\n 20385: s1 = u8 [a3 + 0x13]\n 20388: a2 = a2 << 0x8\n 20391: a2 = a2 | a4\n 20394: a5 = a5 << 0x10\n 20397: s1 = s1 << 0x18\n 20400: a5 = a5 | s1\n 20403: a2 = a2 | a5\n 20406: a4 = u8 [a3 + 0x15]\n 20409: a5 = u8 [a3 + 0x14]\n 20412: s1 = u8 [a3 + 0x16]\n 20415: a1 = u8 [a3 + 0x17]\n 20418: a4 = a4 << 0x8\n 20421: a4 = a4 | a5\n 20424: s1 = s1 << 0x10\n 20427: a1 = a1 << 0x18\n 20430: a1 = a1 | s1\n 20433: a1 = a1 | a4\n 20436: a1 = a1 << 0x20\n 20439: a2 = a2 | a1\n 20442: a1 = u8 [a3 + 0x9]\n 20445: a4 = u8 [a3 + 0x8]\n 20448: a5 = u8 [a3 + 0xa]\n 20451: s1 = u8 [a3 + 0xb]\n 20454: a1 = a1 << 0x8\n 20457: a1 = a1 | a4\n 20460: a5 = a5 << 0x10\n 20463: s1 = s1 << 0x18\n 20466: a5 = a5 | s1\n 20469: t1 = a5 | a1\n 20472: a4 = u8 [a3 + 0xd]\n 20475: a5 = u8 [a3 + 0xc]\n 20478: s1 = u8 [a3 + 0xe]\n 20481: a1 = u8 [a3 + 0xf]\n 20484: a4 = a4 << 0x8\n 20487: a4 = a4 | a5\n 20490: s1 = s1 << 0x10\n 20493: a1 = a1 << 0x18\n 20496: a1 = a1 | s1\n 20499: a1 = a1 | a4\n 20502: a1 = a1 << 0x20\n 20505: a5 = a1 | t1\n 20508: a1 = u8 [a3 + 0x1]\n 20511: a4 = u8 [a3]\n 20513: s1 = u8 [a3 + 0x2]\n 20516: a0 = u8 [a3 + 0x3]\n 20519: a1 = a1 << 0x8\n 20522: a1 = a1 | a4\n 20525: s1 = s1 << 0x10\n 20528: a0 = a0 << 0x18\n 20531: a0 = a0 | s1\n 20534: a0 = a0 | a1\n 20537: a1 = u8 [a3 + 0x5]\n 20540: a4 = u8 [a3 + 0x4]\n 20543: s1 = u8 [a3 + 0x6]\n 20546: a3 = u8 [a3 + 0x7]\n 20549: a1 = a1 << 0x8\n 20552: a1 = a1 | a4\n 20555: s1 = s1 << 0x10\n 20558: a3 = a3 << 0x18\n 20561: a3 = a3 | s1\n 20564: a1 = a1 | a3\n 20567: a1 = a1 << 0x20\n 20570: a3 = a1 | a0\n 20573: i32 a4 = ra + 0x20\n 20576: a0 = u64 [sp + 0x2e0]\n 20580: jump @468 if a0 >=u t0\n      : @467 (gas: 4)\n 20583: a0 = u64 [sp + 0x2d0]\n 20587: u32 [a0] = t0\n 20589: a0 = t0\n 20591: fallthrough\n      : @468 (gas: 80)\n 20592: u64 [sp + 0x2e0] = a0\n 20596: ra = u64 [sp + 0x2d8]\n 20600: a1 = ra + a4\n 20603: u8 [a1 + 0x8] = a5\n 20606: a0 = a3 >> 0x38\n 20609: u8 [a1 + 0x7] = a0\n 20612: a0 = a3 >> 0x30\n 20615: u8 [a1 + 0x6] = a0\n 20618: a0 = a3 >> 0x28\n 20621: u8 [a1 + 0x5] = a0\n 20624: a0 = a3 >> 0x20\n 20627: u8 [a1 + 0x4] = a0\n 20630: a0 = a3 >> 0x18\n 20633: u8 [a1 + 0x3] = a0\n 20636: a0 = a3 >> 0x10\n 20639: u8 [a1 + 0x2] = a0\n 20642: a0 = a3 >> 0x8\n 20645: u8 [a1 + 0x1] = a0\n 20648: u8 [a1] = a3\n 20650: u8 [a1 + 0x10] = a2\n 20653: a0 = a5 >> 0x38\n 20656: u8 [a1 + 0xf] = a0\n 20659: a0 = a5 >> 0x30\n 20662: u8 [a1 + 0xe] = a0\n 20665: a0 = a5 >> 0x28\n 20668: u8 [a1 + 0xd] = a0\n 20671: a0 = a5 >> 0x20\n 20674: u8 [a1 + 0xc] = a0\n 20677: a0 = a5 >> 0x18\n 20680: u8 [a1 + 0xb] = a0\n 20683: a0 = a5 >> 0x10\n 20686: u8 [a1 + 0xa] = a0\n 20689: a5 = a5 >> 0x8\n 20692: u8 [a1 + 0x9] = a5\n 20695: u8 [a1 + 0x18] = t2\n 20698: a0 = a2 >> 0x38\n 20701: u8 [a1 + 0x17] = a0\n 20704: a0 = a2 >> 0x30\n 20707: u8 [a1 + 0x16] = a0\n 20710: a0 = a2 >> 0x28\n 20713: u8 [a1 + 0x15] = a0\n 20716: a0 = a2 >> 0x20\n 20719: u8 [a1 + 0x14] = a0\n 20722: a0 = a2 >> 0x18\n 20725: u8 [a1 + 0x13] = a0\n 20728: a0 = a2 >> 0x10\n 20731: u8 [a1 + 0x12] = a0\n 20734: a2 = a2 >> 0x8\n 20737: u8 [a1 + 0x11] = a2\n 20740: a0 = t2 >> 0x38\n 20743: u8 [a1 + 0x1f] = a0\n 20746: a0 = t2 >> 0x30\n 20749: u8 [a1 + 0x1e] = a0\n 20752: a0 = t2 >> 0x28\n 20755: u8 [a1 + 0x1d] = a0\n 20758: a0 = t2 >> 0x20\n 20761: u8 [a1 + 0x1c] = a0\n 20764: a0 = t2 >> 0x18\n 20767: u8 [a1 + 0x1b] = a0\n 20770: a0 = t2 >> 0x10\n 20773: u8 [a1 + 0x1a] = a0\n 20776: a0 = t2 >> 0x8\n 20779: u8 [a1 + 0x19] = a0\n 20782: a1 = u64 [ra + 0x50]\n 20785: a0 = u64 [ra + 0x58]\n 20788: t0 = u64 [ra + 0x40]\n 20791: a2 = u64 [ra + 0x48]\n 20794: u64 [sp + 0x288] = a1\n 20798: t1 = reverse a1\n 20800: u64 [sp + 0x2a8] = a0\n 20804: a1 = reverse a0\n 20806: a0 = reverse t0\n 20808: u64 [sp + 0x280] = a2\n 20812: a3 = reverse a2\n 20814: a2 = a3 | a0\n 20817: a4 = a1 <u 0xffffffffffffffc0\n 20820: a4 = 0 if t1 != 0\n 20822: u64 [sp + 0x2c0] = a2\n 20826: a4 = 0 if a2 != 0\n 20828: jump @470 if a4 != 0\n      : @469 (gas: 1)\n 20831: jump @591\n      : @470 (gas: 24)\n 20834: a4 = a1 + 0x40\n 20837: s1 = a4 <u a1\n 20840: a2 = t1 + s1\n 20843: t2 = a2 <u t1\n 20846: t2 = s1 if s1 == 0\n 20849: t2 = t2 + a3\n 20852: s1 = t2 <u a3\n 20855: s1 = s1 + a0\n 20858: s1 = reverse s1\n 20860: a5 = reverse t2\n 20862: a2 = reverse a2\n 20864: a4 = reverse a4\n 20866: u64 [ra + 0x58] = a4\n 20869: u64 [ra + 0x50] = a2\n 20872: u64 [ra + 0x48] = a5\n 20875: a2 = a1 | a3\n 20878: a0 = t1 | a0\n 20881: a2 = a2 | a0\n 20884: a2 = a2 >> 0x20\n 20887: a0 = a0 | a3\n 20890: a0 = a0 << 0x20\n 20893: a0 = a0 | a2\n 20896: u64 [ra + 0x40] = s1\n 20899: jump @472 if a0 == 0\n      : @471 (gas: 1)\n 20902: jump @587\n      : @472 (gas: 4)\n 20905: i32 a0 = a1 >> 0x10\n 20908: a4 = u64 [sp + 0x228]\n 20912: a5 = u64 [sp + 0x220]\n 20916: jump @474 if a0 == 0\n      : @473 (gas: 1)\n 20919: jump @587\n      : @474 (gas: 4)\n 20922: a0 = a1 + 0x3f\n 20925: a2 = u64 [sp + 0x2e8]\n 20929: a0 = a0 & a2\n 20932: jump @476 if a0 <=u 65536\n      : @475 (gas: 1)\n 20938: jump @587\n      : @476 (gas: 2)\n 20941: a2 = u64 [sp + 0x2e0]\n 20945: jump @478 if a2 >=u a0\n      : @477 (gas: 4)\n 20948: a2 = u64 [sp + 0x2d0]\n 20952: u32 [a2] = a0\n 20954: u64 [sp + 0x2e0] = a0\n 20958: fallthrough\n      : @478 (gas: 71)\n 20959: i32 a3 = a1 + 0\n 20961: a0 = u64 [sp + 0x2d8]\n 20965: a3 = a3 + a0\n 20968: u8 [a3 + 0x10] = a5\n 20971: a2 = u64 [sp + 0x230]\n 20975: a0 = a2 >> 0x38\n 20978: u8 [a3 + 0xf] = a0\n 20981: a0 = a2 >> 0x30\n 20984: u8 [a3 + 0xe] = a0\n 20987: a0 = a2 >> 0x28\n 20990: u8 [a3 + 0xd] = a0\n 20993: a0 = a2 >> 0x20\n 20996: u8 [a3 + 0xc] = a0\n 20999: a0 = a2 >> 0x18\n 21002: u8 [a3 + 0xb] = a0\n 21005: a0 = a2 >> 0x10\n 21008: u8 [a3 + 0xa] = a0\n 21011: a0 = a2 >> 0x8\n 21014: u8 [a3 + 0x9] = a0\n 21017: u8 [a3 + 0x8] = a2\n 21020: a2 = u64 [sp + 0x238]\n 21024: a0 = a2 >> 0x38\n 21027: u8 [a3 + 0x7] = a0\n 21030: a0 = a2 >> 0x30\n 21033: u8 [a3 + 0x6] = a0\n 21036: a0 = a2 >> 0x28\n 21039: u8 [a3 + 0x5] = a0\n 21042: a0 = a2 >> 0x20\n 21045: u8 [a3 + 0x4] = a0\n 21048: a0 = a2 >> 0x18\n 21051: u8 [a3 + 0x3] = a0\n 21054: a0 = a2 >> 0x10\n 21057: u8 [a3 + 0x2] = a0\n 21060: a0 = a2 >> 0x8\n 21063: u8 [a3 + 0x1] = a0\n 21066: u8 [a3] = a2\n 21068: u8 [a3 + 0x18] = a4\n 21071: a0 = a5 >> 0x38\n 21074: u8 [a3 + 0x17] = a0\n 21077: a0 = a5 >> 0x30\n 21080: u8 [a3 + 0x16] = a0\n 21083: a0 = a5 >> 0x28\n 21086: u8 [a3 + 0x15] = a0\n 21089: a0 = a5 >> 0x20\n 21092: u8 [a3 + 0x14] = a0\n 21095: a0 = a5 >> 0x18\n 21098: u8 [a3 + 0x13] = a0\n 21101: a0 = a5 >> 0x10\n 21104: u8 [a3 + 0x12] = a0\n 21107: a0 = a5 >> 0x8\n 21110: u8 [a3 + 0x11] = a0\n 21113: a0 = a4 >> 0x38\n 21116: u8 [a3 + 0x1f] = a0\n 21119: a0 = a4 >> 0x30\n 21122: u8 [a3 + 0x1e] = a0\n 21125: a0 = a4 >> 0x28\n 21128: u8 [a3 + 0x1d] = a0\n 21131: a0 = a4 >> 0x20\n 21134: u8 [a3 + 0x1c] = a0\n 21137: a0 = a4 >> 0x18\n 21140: u8 [a3 + 0x1b] = a0\n 21143: a0 = a4 >> 0x10\n 21146: u8 [a3 + 0x1a] = a0\n 21149: a0 = a4 >> 0x8\n 21152: a2 = 0xffffffe0\n 21162: a2 = a1 <u a2\n 21165: a2 = 0 if t1 != 0\n 21167: a4 = u64 [sp + 0x2c0]\n 21171: a2 = 0 if a4 != 0\n 21173: u8 [a3 + 0x19] = a0\n 21176: jump @480 if a2 != 0\n      : @479 (gas: 1)\n 21179: jump @587\n      : @480 (gas: 4)\n 21182: i32 a0 = a1 >> 0x5\n 21185: a5 = u64 [sp + 0x2b0]\n 21189: a4 = u64 [sp + 0x2e0]\n 21193: jump @482 if a0 <u 2047\n      : @481 (gas: 1)\n 21198: jump @587\n      : @482 (gas: 4)\n 21201: a0 = a1 + 0x5f\n 21204: a2 = u64 [sp + 0x2e8]\n 21208: a0 = a0 & a2\n 21211: jump @484 if a0 <=u 65536\n      : @483 (gas: 1)\n 21217: jump @587\n      : @484 (gas: 3)\n 21220: i32 a1 = a1 + 0x20\n 21223: ra = u64 [sp + 0x2d8]\n 21227: jump @486 if a4 >=u a0\n      : @485 (gas: 4)\n 21230: a2 = u64 [sp + 0x2d0]\n 21234: u32 [a2] = a0\n 21236: a4 = a0\n 21238: fallthrough\n      : @486 (gas: 74)\n 21239: a1 = a1 + ra\n 21242: a2 = u64 [sp + 0x248]\n 21246: u8 [a1 + 0x8] = a2\n 21249: a3 = u64 [sp + 0x240]\n 21253: a0 = a3 >> 0x38\n 21256: u8 [a1 + 0x7] = a0\n 21259: a0 = a3 >> 0x30\n 21262: u8 [a1 + 0x6] = a0\n 21265: a0 = a3 >> 0x28\n 21268: u8 [a1 + 0x5] = a0\n 21271: a0 = a3 >> 0x20\n 21274: u8 [a1 + 0x4] = a0\n 21277: a0 = a3 >> 0x18\n 21280: u8 [a1 + 0x3] = a0\n 21283: a0 = a3 >> 0x10\n 21286: u8 [a1 + 0x2] = a0\n 21289: a0 = a3 >> 0x8\n 21292: u8 [a1 + 0x1] = a0\n 21295: u8 [a1] = a3\n 21297: a3 = u64 [sp + 0x250]\n 21301: u8 [a1 + 0x10] = a3\n 21304: a0 = a2 >> 0x38\n 21307: u8 [a1 + 0xf] = a0\n 21310: a0 = a2 >> 0x30\n 21313: u8 [a1 + 0xe] = a0\n 21316: a0 = a2 >> 0x28\n 21319: u8 [a1 + 0xd] = a0\n 21322: a0 = a2 >> 0x20\n 21325: u8 [a1 + 0xc] = a0\n 21328: a0 = a2 >> 0x18\n 21331: u8 [a1 + 0xb] = a0\n 21334: a0 = a2 >> 0x10\n 21337: u8 [a1 + 0xa] = a0\n 21340: a0 = a2 >> 0x8\n 21343: u8 [a1 + 0x9] = a0\n 21346: a2 = u64 [sp + 0x268]\n 21350: u8 [a1 + 0x18] = a2\n 21353: a0 = a3 >> 0x38\n 21356: u8 [a1 + 0x17] = a0\n 21359: a0 = a3 >> 0x30\n 21362: u8 [a1 + 0x16] = a0\n 21365: a0 = a3 >> 0x28\n 21368: u8 [a1 + 0x15] = a0\n 21371: a0 = a3 >> 0x20\n 21374: u8 [a1 + 0x14] = a0\n 21377: a0 = a3 >> 0x18\n 21380: u8 [a1 + 0x13] = a0\n 21383: a0 = a3 >> 0x10\n 21386: u8 [a1 + 0x12] = a0\n 21389: a0 = a3 >> 0x8\n 21392: u8 [a1 + 0x11] = a0\n 21395: a0 = a2 >> 0x38\n 21398: u8 [a1 + 0x1f] = a0\n 21401: a0 = a2 >> 0x30\n 21404: u8 [a1 + 0x1e] = a0\n 21407: a0 = a2 >> 0x28\n 21410: u8 [a1 + 0x1d] = a0\n 21413: a0 = a2 >> 0x20\n 21416: u8 [a1 + 0x1c] = a0\n 21419: a0 = a2 >> 0x18\n 21422: u8 [a1 + 0x1b] = a0\n 21425: a0 = a2 >> 0x10\n 21428: u8 [a1 + 0x1a] = a0\n 21431: a0 = a2 >> 0x8\n 21434: a2 = u64 [sp + 0x2a0]\n 21438: a3 = u64 [sp + 0x298]\n 21442: s1 = a2 | a3\n 21445: a2 = 0xffffffe0\n 21455: a2 = a5 <u a2\n 21458: a3 = u64 [sp + 0x2b8]\n 21462: a2 = 0 if a3 != 0\n 21464: a2 = 0 if s1 != 0\n 21466: u8 [a1 + 0x19] = a0\n 21469: jump @488 if a2 != 0\n      : @487 (gas: 1)\n 21472: jump @587\n      : @488 (gas: 2)\n 21475: i32 a0 = a5 >> 0x5\n 21478: jump @490 if a0 <u 2047\n      : @489 (gas: 1)\n 21483: jump @587\n      : @490 (gas: 4)\n 21486: a0 = a5 + 0x5f\n 21489: a1 = u64 [sp + 0x2e8]\n 21493: a0 = a0 & a1\n 21496: jump @492 if a0 <=u 65536\n      : @491 (gas: 1)\n 21502: jump @587\n      : @492 (gas: 3)\n 21505: u64 [sp + 0x278] = s1\n 21509: i32 a1 = a5 + 0x20\n 21512: jump @494 if a4 >=u a0\n      : @493 (gas: 4)\n 21515: a2 = u64 [sp + 0x2d0]\n 21519: u32 [a2] = a0\n 21521: a4 = a0\n 21523: fallthrough\n      : @494 (gas: 77)\n 21524: t2 = a4\n 21526: a1 = a1 + ra\n 21529: a2 = u64 [sp + 0x280]\n 21533: u8 [a1 + 0x8] = a2\n 21536: a0 = t0 >> 0x38\n 21539: u8 [a1 + 0x7] = a0\n 21542: a0 = t0 >> 0x30\n 21545: u8 [a1 + 0x6] = a0\n 21548: a0 = t0 >> 0x28\n 21551: u8 [a1 + 0x5] = a0\n 21554: a0 = t0 >> 0x20\n 21557: u8 [a1 + 0x4] = a0\n 21560: a0 = t0 >> 0x18\n 21563: u8 [a1 + 0x3] = a0\n 21566: a0 = t0 >> 0x10\n 21569: u8 [a1 + 0x2] = a0\n 21572: a0 = t0 >> 0x8\n 21575: u8 [a1 + 0x1] = a0\n 21578: u8 [a1] = t0\n 21580: a3 = u64 [sp + 0x288]\n 21584: u8 [a1 + 0x10] = a3\n 21587: a0 = a2 >> 0x38\n 21590: u8 [a1 + 0xf] = a0\n 21593: a0 = a2 >> 0x30\n 21596: u8 [a1 + 0xe] = a0\n 21599: a0 = a2 >> 0x28\n 21602: u8 [a1 + 0xd] = a0\n 21605: a0 = a2 >> 0x20\n 21608: u8 [a1 + 0xc] = a0\n 21611: a0 = a2 >> 0x18\n 21614: u8 [a1 + 0xb] = a0\n 21617: a0 = a2 >> 0x10\n 21620: u8 [a1 + 0xa] = a0\n 21623: a0 = a2 >> 0x8\n 21626: u8 [a1 + 0x9] = a0\n 21629: a2 = u64 [sp + 0x2a8]\n 21633: u8 [a1 + 0x18] = a2\n 21636: a0 = a3 >> 0x38\n 21639: u8 [a1 + 0x17] = a0\n 21642: a0 = a3 >> 0x30\n 21645: u8 [a1 + 0x16] = a0\n 21648: a0 = a3 >> 0x28\n 21651: u8 [a1 + 0x15] = a0\n 21654: a0 = a3 >> 0x20\n 21657: u8 [a1 + 0x14] = a0\n 21660: a0 = a3 >> 0x18\n 21663: u8 [a1 + 0x13] = a0\n 21666: a0 = a3 >> 0x10\n 21669: u8 [a1 + 0x12] = a0\n 21672: a0 = a3 >> 0x8\n 21675: u8 [a1 + 0x11] = a0\n 21678: a0 = a2 >> 0x38\n 21681: u8 [a1 + 0x1f] = a0\n 21684: a0 = a2 >> 0x30\n 21687: u8 [a1 + 0x1e] = a0\n 21690: a0 = a2 >> 0x28\n 21693: u8 [a1 + 0x1d] = a0\n 21696: a0 = a2 >> 0x20\n 21699: u8 [a1 + 0x1c] = a0\n 21702: a0 = a2 >> 0x18\n 21705: u8 [a1 + 0x1b] = a0\n 21708: a0 = a2 >> 0x10\n 21711: u8 [a1 + 0x1a] = a0\n 21714: a0 = a2 >> 0x8\n 21717: t1 = u64 [sp + 0x20]\n 21720: a5 = u64 [sp + 0x8]\n 21723: a2 = t1 | a5\n 21726: s1 = u64 [sp + 0x18]\n 21729: a4 = u64 [sp + 0x10]\n 21732: a3 = s1 | a4\n 21735: a2 = a2 | a3\n 21738: a2 = a2 >> 0x20\n 21741: a3 = a3 | a5\n 21744: a3 = a3 << 0x20\n 21747: a2 = a2 | a3\n 21750: u8 [a1 + 0x19] = a0\n 21753: jump @496 if a2 == 0\n      : @495 (gas: 1)\n 21756: jump @587\n      : @496 (gas: 2)\n 21759: i32 a0 = t1 >> 0x10\n 21762: jump @498 if a0 == 0\n      : @497 (gas: 1)\n 21765: jump @587\n      : @498 (gas: 4)\n 21768: a0 = t1 + 0x3f\n 21771: a1 = u64 [sp + 0x2e8]\n 21775: a0 = a0 & a1\n 21778: jump @500 if a0 <=u 65536\n      : @499 (gas: 1)\n 21784: jump @587\n      : @500 (gas: 1)\n 21787: jump @502 if t2 >=u a0\n      : @501 (gas: 4)\n 21790: a1 = u64 [sp + 0x2d0]\n 21794: u32 [a1] = a0\n 21796: t2 = a0\n 21798: fallthrough\n      : @502 (gas: 6)\n 21799: a0 = a5 | a4\n 21802: a1 = 0xffffffe0\n 21812: a1 = t1 <u a1\n 21815: a1 = 0 if s1 != 0\n 21817: a1 = 0 if a0 != 0\n 21819: jump @504 if a1 != 0\n      : @503 (gas: 1)\n 21822: jump @587\n      : @504 (gas: 2)\n 21825: i32 a0 = t1 >> 0x5\n 21828: jump @506 if a0 <u 2047\n      : @505 (gas: 1)\n 21833: jump @587\n      : @506 (gas: 4)\n 21836: a0 = t1 + 0x5f\n 21839: a1 = u64 [sp + 0x2e8]\n 21843: a0 = a0 & a1\n 21846: jump @508 if a0 <=u 65536\n      : @507 (gas: 1)\n 21852: jump @587\n      : @508 (gas: 1)\n 21855: jump @510 if t2 >=u a0\n      : @509 (gas: 4)\n 21858: a1 = u64 [sp + 0x2d0]\n 21862: u32 [a1] = a0\n 21864: t2 = a0\n 21866: fallthrough\n      : @510 (gas: 20)\n 21867: u64 [sp + 0x2e0] = t2\n 21871: a3 = u64 [ra + 0x50]\n 21874: a2 = u64 [ra + 0x58]\n 21877: a1 = u64 [ra + 0x40]\n 21880: a0 = u64 [ra + 0x48]\n 21883: u64 [sp + 0x58] = a3\n 21886: s1 = reverse a3\n 21888: u64 [sp + 0x60] = a2\n 21891: a4 = reverse a2\n 21893: u64 [sp + 0x48] = a1\n 21896: a2 = reverse a1\n 21898: u64 [sp + 0x50] = a0\n 21901: a1 = reverse a0\n 21903: u64 [sp + 0x2a8] = a2\n 21907: a2 = a2 | a1\n 21910: a0 = a4 <u 0xffffffffffffffc0\n 21913: a0 = 0 if s1 != 0\n 21915: u64 [sp + 0x280] = a2\n 21919: a0 = 0 if a2 != 0\n 21921: jump @512 if a0 != 0\n      : @511 (gas: 1)\n 21924: jump @591\n      : @512 (gas: 163)\n 21927: i32 t0 = t1 + 0\n 21929: t0 = t0 + ra\n 21932: a0 = u8 [t0 + 0x1d]\n 21935: u64 [sp + 0x250] = a0\n 21939: a0 = u8 [t0 + 0x1e]\n 21942: u64 [sp + 0x270] = a0\n 21946: a0 = u8 [t0 + 0x1f]\n 21949: u64 [sp + 0x268] = a0\n 21953: a2 = a4 + 0x40\n 21956: a3 = a2 <u a4\n 21959: a0 = s1 + a3\n 21962: u64 [sp + 0x288] = a0\n 21966: ra = a0 <u s1\n 21969: ra = a3 if a3 == 0\n 21972: a0 = u8 [t0 + 0x15]\n 21975: u64 [sp + 0x188] = a0\n 21979: a0 = u8 [t0 + 0x16]\n 21982: u64 [sp + 0x1a0] = a0\n 21986: a0 = u8 [t0 + 0x17]\n 21989: u64 [sp + 0x198] = a0\n 21993: a0 = u8 [t0 + 0xd]\n 21996: u64 [sp + 0x1a8] = a0\n 22000: a0 = u8 [t0 + 0xe]\n 22003: u64 [sp + 0x1c0] = a0\n 22007: a0 = u8 [t0 + 0xf]\n 22010: u64 [sp + 0x1b8] = a0\n 22014: a0 = u8 [t0 + 0x5]\n 22017: u64 [sp + 0x1c8] = a0\n 22021: a0 = u8 [t0 + 0x6]\n 22024: u64 [sp + 0x1e0] = a0\n 22028: a0 = u8 [t0 + 0x7]\n 22031: u64 [sp + 0x1d8] = a0\n 22035: a0 = u8 [t0 + 0x19]\n 22038: u64 [sp + 0x1f0] = a0\n 22042: a0 = u8 [t0 + 0x1a]\n 22045: u64 [sp + 0x200] = a0\n 22049: a0 = u8 [t0 + 0x1b]\n 22052: u64 [sp + 0x1f8] = a0\n 22056: a0 = u8 [t0 + 0x1c]\n 22059: u64 [sp + 0x168] = a0\n 22063: a0 = u8 [t0 + 0x11]\n 22066: u64 [sp + 0x208] = a0\n 22070: a0 = u8 [t0 + 0x12]\n 22073: u64 [sp + 0x218] = a0\n 22077: a0 = u8 [t0 + 0x13]\n 22080: u64 [sp + 0x210] = a0\n 22084: a0 = u8 [t0 + 0x14]\n 22087: u64 [sp + 0x170] = a0\n 22091: a0 = u8 [t0 + 0x9]\n 22094: u64 [sp + 0x220] = a0\n 22098: a0 = u8 [t0 + 0xa]\n 22101: u64 [sp + 0x230] = a0\n 22105: a0 = u8 [t0 + 0xb]\n 22108: u64 [sp + 0x228] = a0\n 22112: a0 = u8 [t0 + 0xc]\n 22115: u64 [sp + 0x178] = a0\n 22119: a0 = u8 [t0 + 0x1]\n 22122: u64 [sp + 0x238] = a0\n 22126: a0 = u8 [t0 + 0x2]\n 22129: u64 [sp + 0x248] = a0\n 22133: a0 = u8 [t0 + 0x3]\n 22136: u64 [sp + 0x240] = a0\n 22140: a0 = u8 [t0 + 0x4]\n 22143: u64 [sp + 0x180] = a0\n 22147: a0 = u8 [t0 + 0x18]\n 22150: u64 [sp + 0x190] = a0\n 22154: a0 = u8 [t0 + 0x10]\n 22157: u64 [sp + 0x1b0] = a0\n 22161: a0 = u8 [t0 + 0x8]\n 22164: u64 [sp + 0x1d0] = a0\n 22168: a0 = u8 [t0]\n 22170: u64 [sp + 0x1e8] = a0\n 22174: i32 a3 = t1 + 0x20\n 22177: u64 [sp + 0x2c0] = a4\n 22181: a4 = u64 [sp + 0x2d8]\n 22185: a3 = a3 + a4\n 22188: a4 = u64 [sp + 0x2c0]\n 22192: a0 = u8 [a3 + 0x18]\n 22195: u64 [sp + 0x160] = a0\n 22199: a5 = u8 [a3 + 0x19]\n 22202: u64 [sp + 0x148] = a5\n 22206: a0 = u8 [a3 + 0x1a]\n 22209: u64 [sp + 0x158] = a0\n 22213: a0 = u8 [a3 + 0x1b]\n 22216: u64 [sp + 0x150] = a0\n 22220: a5 = u8 [a3 + 0x1c]\n 22223: u64 [sp + 0xf8] = a5\n 22227: a0 = u8 [a3 + 0x1d]\n 22230: u64 [sp + 0x80] = a0\n 22234: a0 = u8 [a3 + 0x1e]\n 22237: u64 [sp + 0xd8] = a0\n 22241: a0 = u8 [a3 + 0x1f]\n 22244: u64 [sp + 0xd0] = a0\n 22248: t2 = u8 [a3 + 0x10]\n 22251: u64 [sp + 0x140] = t2\n 22255: a5 = u8 [a3 + 0x11]\n 22258: u64 [sp + 0x128] = a5\n 22262: a5 = u8 [a3 + 0x12]\n 22265: u64 [sp + 0x138] = a5\n 22269: a0 = u8 [a3 + 0x13]\n 22272: u64 [sp + 0x130] = a0\n 22276: a5 = u8 [a3 + 0x14]\n 22279: u64 [sp + 0xf0] = a5\n 22283: a0 = u8 [a3 + 0x15]\n 22286: u64 [sp + 0x98] = a0\n 22290: a0 = u8 [a3 + 0x16]\n 22293: u64 [sp + 0xc8] = a0\n 22297: a0 = u8 [a3 + 0x17]\n 22300: u64 [sp + 0xc0] = a0\n 22304: a0 = u8 [a3 + 0x8]\n 22307: u64 [sp + 0x120] = a0\n 22311: a5 = u8 [a3 + 0x9]\n 22314: u64 [sp + 0x110] = a5\n 22318: t1 = u8 [a3 + 0xa]\n 22321: u64 [sp + 0x118] = t1\n 22325: t1 = u8 [a3 + 0xb]\n 22328: a5 = u8 [a3 + 0xc]\n 22331: u64 [sp + 0xe8] = a5\n 22335: a0 = u8 [a3 + 0xd]\n 22338: u64 [sp + 0x90] = a0\n 22342: a0 = u8 [a3 + 0xe]\n 22345: u64 [sp + 0xb8] = a0\n 22349: a0 = u8 [a3 + 0xf]\n 22352: u64 [sp + 0xb0] = a0\n 22356: t0 = u8 [a3]\n 22358: a5 = u8 [a3 + 0x1]\n 22361: u64 [sp + 0x100] = a5\n 22365: t2 = u8 [a3 + 0x2]\n 22368: u64 [sp + 0x108] = t2\n 22372: a5 = u8 [a3 + 0x3]\n 22375: a0 = u8 [a3 + 0x4]\n 22378: u64 [sp + 0xe0] = a0\n 22382: a0 = u8 [a3 + 0x5]\n 22385: u64 [sp + 0x88] = a0\n 22389: a0 = u8 [a3 + 0x6]\n 22392: u64 [sp + 0xa8] = a0\n 22396: a0 = u8 [a3 + 0x7]\n 22399: u64 [sp + 0xa0] = a0\n 22403: a2 = reverse a2\n 22405: a3 = u64 [sp + 0x2d8]\n 22409: u64 [a3 + 0x58] = a2\n 22412: a0 = u64 [sp + 0x288]\n 22416: a0 = reverse a0\n 22418: a2 = u64 [sp + 0x2d8]\n 22422: u64 [a2 + 0x50] = a0\n 22425: ra = ra + a1\n 22428: a0 = reverse ra\n 22430: a2 = u64 [sp + 0x2d8]\n 22434: u64 [a2 + 0x48] = a0\n 22437: a0 = ra <u a1\n 22440: a2 = u64 [sp + 0x2a8]\n 22444: a0 = a0 + a2\n 22447: a2 = a2 | s1\n 22450: a3 = a4 | a1\n 22453: a3 = a3 | a2\n 22456: a1 = a1 | a2\n 22459: a3 = a3 >> 0x20\n 22462: a1 = a1 << 0x20\n 22465: a1 = a1 | a3\n 22468: a0 = reverse a0\n 22470: a2 = u64 [sp + 0x2d8]\n 22474: u64 [a2 + 0x40] = a0\n 22477: jump @514 if a1 == 0\n      : @513 (gas: 1)\n 22480: jump @587\n      : @514 (gas: 6)\n 22483: u64 [sp + 0x68] = a5\n 22486: u64 [sp + 0x70] = t0\n 22489: u64 [sp + 0x78] = t1\n 22492: u64 [sp + 0x2a8] = s1\n 22496: i32 a0 = a4 >> 0x10\n 22499: jump @516 if a0 == 0\n      : @515 (gas: 1)\n 22502: jump @587\n      : @516 (gas: 5)\n 22505: a0 = a4 + 0x3f\n 22508: a1 = u64 [sp + 0x2e8]\n 22512: a1 = a1 & a0\n 22515: u64 [sp + 0x288] = a1\n 22519: jump @518 if a1 <=u 65536\n      : @517 (gas: 1)\n 22525: jump @587\n      : @518 (gas: 103)\n 22528: a0 = u64 [sp + 0x250]\n 22532: a0 = a0 << 0x8\n 22535: a4 = u64 [sp + 0x168]\n 22539: a4 = a4 | a0\n 22542: a0 = u64 [sp + 0x270]\n 22546: a0 = a0 << 0x10\n 22549: a1 = u64 [sp + 0x268]\n 22553: a1 = a1 << 0x18\n 22556: a0 = a0 | a1\n 22559: a1 = u64 [sp + 0x188]\n 22563: a1 = a1 << 0x8\n 22566: a2 = u64 [sp + 0x170]\n 22570: s1 = a1 | a2\n 22573: a1 = u64 [sp + 0x1a0]\n 22577: a1 = a1 << 0x10\n 22580: a5 = u64 [sp + 0x198]\n 22584: a5 = a5 << 0x18\n 22587: a5 = a5 | a1\n 22590: a1 = u64 [sp + 0x1a8]\n 22594: a1 = a1 << 0x8\n 22597: a2 = u64 [sp + 0x178]\n 22601: a1 = a1 | a2\n 22604: u64 [sp + 0x270] = a1\n 22608: a1 = u64 [sp + 0x1c0]\n 22612: a1 = a1 << 0x10\n 22615: a2 = u64 [sp + 0x1b8]\n 22619: a2 = a2 << 0x18\n 22622: a1 = a1 | a2\n 22625: a2 = u64 [sp + 0x1c8]\n 22629: a2 = a2 << 0x8\n 22632: a3 = u64 [sp + 0x180]\n 22636: a2 = a2 | a3\n 22639: u64 [sp + 0x268] = a2\n 22643: a2 = u64 [sp + 0x1e0]\n 22647: a2 = a2 << 0x10\n 22650: a3 = u64 [sp + 0x1d8]\n 22654: a3 = a3 << 0x18\n 22657: a2 = a2 | a3\n 22660: u64 [sp + 0x1e0] = a2\n 22664: a3 = u64 [sp + 0x1f0]\n 22668: a3 = a3 << 0x8\n 22671: a2 = u64 [sp + 0x190]\n 22675: a2 = a2 | a3\n 22678: u64 [sp + 0x1f0] = a2\n 22682: t1 = u64 [sp + 0x200]\n 22686: t1 = t1 << 0x10\n 22689: t0 = u64 [sp + 0x1f8]\n 22693: t0 = t0 << 0x18\n 22696: a2 = t0 | t1\n 22699: u64 [sp + 0x200] = a2\n 22703: a0 = a0 | a4\n 22706: u64 [sp + 0x250] = a0\n 22710: a4 = u64 [sp + 0x208]\n 22714: a4 = a4 << 0x8\n 22717: a0 = u64 [sp + 0x1b0]\n 22721: t0 = a4 | a0\n 22724: a0 = u64 [sp + 0x218]\n 22728: a0 = a0 << 0x10\n 22731: t2 = u64 [sp + 0x210]\n 22735: t2 = t2 << 0x18\n 22738: a0 = t2 | a0\n 22741: t2 = a5 | s1\n 22744: s1 = u64 [sp + 0x220]\n 22748: s1 = s1 << 0x8\n 22751: a2 = u64 [sp + 0x1d0]\n 22755: s1 = s1 | a2\n 22758: a5 = u64 [sp + 0x230]\n 22762: a5 = a5 << 0x10\n 22765: ra = u64 [sp + 0x228]\n 22769: ra = ra << 0x18\n 22772: a5 = ra | a5\n 22775: a2 = u64 [sp + 0x270]\n 22779: ra = a1 | a2\n 22782: a2 = u64 [sp + 0x238]\n 22786: a2 = a2 << 0x8\n 22789: a1 = u64 [sp + 0x1e8]\n 22793: a2 = a2 | a1\n 22796: a1 = u64 [sp + 0x248]\n 22800: a1 = a1 << 0x10\n 22803: t1 = u64 [sp + 0x240]\n 22807: t1 = t1 << 0x18\n 22810: a1 = t1 | a1\n 22813: a3 = u64 [sp + 0x268]\n 22817: a4 = u64 [sp + 0x1e0]\n 22821: t1 = a4 | a3\n 22824: a3 = u64 [sp + 0x1f0]\n 22828: a4 = u64 [sp + 0x200]\n 22832: a3 = a3 | a4\n 22835: a0 = a0 | t0\n 22838: a5 = a5 | s1\n 22841: a1 = a1 | a2\n 22844: a2 = u64 [sp + 0x250]\n 22848: a2 = a2 << 0x20\n 22851: a2 = a2 | a3\n 22854: a3 = t2 << 0x20\n 22857: a3 = a3 | a0\n 22860: ra = ra << 0x20\n 22863: a5 = ra | a5\n 22866: a4 = t1 << 0x20\n 22869: a4 = a4 | a1\n 22872: t0 = u64 [sp + 0x2e0]\n 22876: a1 = u64 [sp + 0x288]\n 22880: jump @520 if t0 >=u a1\n      : @519 (gas: 4)\n 22883: a0 = u64 [sp + 0x2d0]\n 22887: u32 [a0] = a1\n 22889: t0 = a1\n 22891: fallthrough\n      : @520 (gas: 71)\n 22892: s1 = u64 [sp + 0x2c0]\n 22896: i32 a0 = s1 + 0\n 22898: a1 = u64 [sp + 0x2d8]\n 22902: a0 = a0 + a1\n 22905: u8 [a0 + 0x10] = a3\n 22908: a1 = a5 >> 0x38\n 22911: u8 [a0 + 0xf] = a1\n 22914: a1 = a5 >> 0x30\n 22917: u8 [a0 + 0xe] = a1\n 22920: a1 = a5 >> 0x28\n 22923: u8 [a0 + 0xd] = a1\n 22926: a1 = a5 >> 0x20\n 22929: u8 [a0 + 0xc] = a1\n 22932: a1 = a5 >> 0x18\n 22935: u8 [a0 + 0xb] = a1\n 22938: a1 = a5 >> 0x10\n 22941: u8 [a0 + 0xa] = a1\n 22944: a1 = a5 >> 0x8\n 22947: u8 [a0 + 0x9] = a1\n 22950: u8 [a0 + 0x8] = a5\n 22953: a1 = a4 >> 0x38\n 22956: u8 [a0 + 0x7] = a1\n 22959: a1 = a4 >> 0x30\n 22962: u8 [a0 + 0x6] = a1\n 22965: a1 = a4 >> 0x28\n 22968: u8 [a0 + 0x5] = a1\n 22971: a1 = a4 >> 0x20\n 22974: u8 [a0 + 0x4] = a1\n 22977: a1 = a4 >> 0x18\n 22980: u8 [a0 + 0x3] = a1\n 22983: a1 = a4 >> 0x10\n 22986: u8 [a0 + 0x2] = a1\n 22989: a1 = a4 >> 0x8\n 22992: u8 [a0 + 0x1] = a1\n 22995: u8 [a0] = a4\n 22997: u8 [a0 + 0x18] = a2\n 23000: a1 = a3 >> 0x38\n 23003: u8 [a0 + 0x17] = a1\n 23006: a1 = a3 >> 0x30\n 23009: u8 [a0 + 0x16] = a1\n 23012: a1 = a3 >> 0x28\n 23015: u8 [a0 + 0x15] = a1\n 23018: a1 = a3 >> 0x20\n 23021: u8 [a0 + 0x14] = a1\n 23024: a1 = a3 >> 0x18\n 23027: u8 [a0 + 0x13] = a1\n 23030: a1 = a3 >> 0x10\n 23033: u8 [a0 + 0x12] = a1\n 23036: a3 = a3 >> 0x8\n 23039: u8 [a0 + 0x11] = a3\n 23042: a1 = a2 >> 0x38\n 23045: u8 [a0 + 0x1f] = a1\n 23048: a1 = a2 >> 0x30\n 23051: u8 [a0 + 0x1e] = a1\n 23054: a1 = a2 >> 0x28\n 23057: u8 [a0 + 0x1d] = a1\n 23060: a1 = a2 >> 0x20\n 23063: u8 [a0 + 0x1c] = a1\n 23066: a1 = a2 >> 0x18\n 23069: u8 [a0 + 0x1b] = a1\n 23072: a1 = a2 >> 0x10\n 23075: u8 [a0 + 0x1a] = a1\n 23078: a2 = a2 >> 0x8\n 23081: a1 = 0xffffffe0\n 23091: a1 = s1 <u a1\n 23094: a3 = u64 [sp + 0x2a8]\n 23098: a1 = 0 if a3 != 0\n 23100: a3 = u64 [sp + 0x280]\n 23104: a1 = 0 if a3 != 0\n 23106: u8 [a0 + 0x19] = a2\n 23109: jump @522 if a1 != 0\n      : @521 (gas: 1)\n 23112: jump @587\n      : @522 (gas: 4)\n 23115: a4 = s1\n 23117: u64 [sp + 0x2e0] = t0\n 23121: i32 a0 = s1 >> 0x5\n 23124: jump @524 if a0 <u 2047\n      : @523 (gas: 1)\n 23129: jump @587\n      : @524 (gas: 5)\n 23132: a0 = a4 + 0x5f\n 23135: a1 = u64 [sp + 0x2e8]\n 23139: a1 = a1 & a0\n 23142: u64 [sp + 0x2a8] = a1\n 23146: jump @526 if a1 <=u 65536\n      : @525 (gas: 1)\n 23152: jump @587\n      : @526 (gas: 105)\n 23155: a0 = u64 [sp + 0x80]\n 23159: a0 = a0 << 0x8\n 23162: a4 = u64 [sp + 0xf8]\n 23166: a4 = a4 | a0\n 23169: a0 = u64 [sp + 0xd8]\n 23173: a0 = a0 << 0x10\n 23176: a1 = u64 [sp + 0xd0]\n 23180: a1 = a1 << 0x18\n 23183: t1 = a1 | a0\n 23186: a0 = u64 [sp + 0x98]\n 23190: a0 = a0 << 0x8\n 23193: a1 = u64 [sp + 0xf0]\n 23197: s1 = a0 | a1\n 23200: a0 = u64 [sp + 0xc8]\n 23204: a0 = a0 << 0x10\n 23207: a5 = u64 [sp + 0xc0]\n 23211: a5 = a5 << 0x18\n 23214: a5 = a5 | a0\n 23217: a0 = u64 [sp + 0x90]\n 23221: a0 = a0 << 0x8\n 23224: a1 = u64 [sp + 0xe8]\n 23228: a0 = a0 | a1\n 23231: u64 [sp + 0x288] = a0\n 23235: a0 = u64 [sp + 0xb8]\n 23239: a0 = a0 << 0x10\n 23242: a2 = u64 [sp + 0xb0]\n 23246: a2 = a2 << 0x18\n 23249: a0 = a0 | a2\n 23252: a2 = u64 [sp + 0x88]\n 23256: a2 = a2 << 0x8\n 23259: a1 = u64 [sp + 0xe0]\n 23263: a1 = a1 | a2\n 23266: u64 [sp + 0x280] = a1\n 23270: a2 = u64 [sp + 0xa8]\n 23274: a2 = a2 << 0x10\n 23277: a3 = u64 [sp + 0xa0]\n 23281: a3 = a3 << 0x18\n 23284: a2 = a2 | a3\n 23287: u64 [sp + 0x268] = a2\n 23291: a3 = u64 [sp + 0x148]\n 23295: a3 = a3 << 0x8\n 23298: a1 = u64 [sp + 0x160]\n 23302: a1 = a1 | a3\n 23305: u64 [sp + 0x250] = a1\n 23309: a1 = u64 [sp + 0x158]\n 23313: a1 = a1 << 0x10\n 23316: t0 = u64 [sp + 0x150]\n 23320: t0 = t0 << 0x18\n 23323: a1 = t0 | a1\n 23326: u64 [sp + 0x248] = a1\n 23330: a2 = t1 | a4\n 23333: u64 [sp + 0x270] = a2\n 23337: a4 = u64 [sp + 0x128]\n 23341: a4 = a4 << 0x8\n 23344: a2 = u64 [sp + 0x140]\n 23348: t1 = a4 | a2\n 23351: a4 = u64 [sp + 0x138]\n 23355: a4 = a4 << 0x10\n 23358: t2 = u64 [sp + 0x130]\n 23362: t2 = t2 << 0x18\n 23365: a4 = t2 | a4\n 23368: t2 = a5 | s1\n 23371: s1 = u64 [sp + 0x110]\n 23375: s1 = s1 << 0x8\n 23378: a2 = u64 [sp + 0x120]\n 23382: s1 = s1 | a2\n 23385: a5 = u64 [sp + 0x118]\n 23389: a5 = a5 << 0x10\n 23392: ra = u64 [sp + 0x78]\n 23395: ra = ra << 0x18\n 23398: a5 = ra | a5\n 23401: a2 = u64 [sp + 0x288]\n 23405: ra = a0 | a2\n 23408: a2 = u64 [sp + 0x100]\n 23412: a2 = a2 << 0x8\n 23415: a0 = u64 [sp + 0x70]\n 23418: a2 = a2 | a0\n 23421: a0 = u64 [sp + 0x108]\n 23425: a0 = a0 << 0x10\n 23428: t0 = u64 [sp + 0x68]\n 23431: t0 = t0 << 0x18\n 23434: a0 = t0 | a0\n 23437: a3 = u64 [sp + 0x280]\n 23441: a1 = u64 [sp + 0x268]\n 23445: t0 = a1 | a3\n 23448: a1 = u64 [sp + 0x250]\n 23452: a3 = u64 [sp + 0x248]\n 23456: a1 = a1 | a3\n 23459: a3 = a4 | t1\n 23462: a5 = a5 | s1\n 23465: a0 = a0 | a2\n 23468: a2 = u64 [sp + 0x270]\n 23472: a2 = a2 << 0x20\n 23475: a1 = a1 | a2\n 23478: a2 = t2 << 0x20\n 23481: a2 = a2 | a3\n 23484: a3 = ra << 0x20\n 23487: a3 = a3 | a5\n 23490: a4 = t0 << 0x20\n 23493: a4 = a4 | a0\n 23496: a0 = u64 [sp + 0x2c0]\n 23500: i32 a0 = a0 + 0x20\n 23503: t1 = u64 [sp + 0x2e0]\n 23507: s1 = u64 [sp + 0x2a8]\n 23511: jump @528 if t1 >=u s1\n      : @527 (gas: 4)\n 23514: a5 = u64 [sp + 0x2d0]\n 23518: u32 [a5] = s1\n 23520: t1 = s1\n 23522: fallthrough\n      : @528 (gas: 70)\n 23523: t0 = u64 [sp + 0x2d8]\n 23527: a0 = a0 + t0\n 23530: u8 [a0 + 0x8] = a3\n 23533: a5 = a4 >> 0x38\n 23536: u8 [a0 + 0x7] = a5\n 23539: a5 = a4 >> 0x30\n 23542: u8 [a0 + 0x6] = a5\n 23545: a5 = a4 >> 0x28\n 23548: u8 [a0 + 0x5] = a5\n 23551: a5 = a4 >> 0x20\n 23554: u8 [a0 + 0x4] = a5\n 23557: a5 = a4 >> 0x18\n 23560: u8 [a0 + 0x3] = a5\n 23563: a5 = a4 >> 0x10\n 23566: u8 [a0 + 0x2] = a5\n 23569: a5 = a4 >> 0x8\n 23572: u8 [a0 + 0x1] = a5\n 23575: u8 [a0] = a4\n 23577: u8 [a0 + 0x10] = a2\n 23580: a4 = a3 >> 0x38\n 23583: u8 [a0 + 0xf] = a4\n 23586: a4 = a3 >> 0x30\n 23589: u8 [a0 + 0xe] = a4\n 23592: a4 = a3 >> 0x28\n 23595: u8 [a0 + 0xd] = a4\n 23598: a4 = a3 >> 0x20\n 23601: u8 [a0 + 0xc] = a4\n 23604: a4 = a3 >> 0x18\n 23607: u8 [a0 + 0xb] = a4\n 23610: a4 = a3 >> 0x10\n 23613: u8 [a0 + 0xa] = a4\n 23616: a3 = a3 >> 0x8\n 23619: u8 [a0 + 0x9] = a3\n 23622: u8 [a0 + 0x18] = a1\n 23625: a3 = a2 >> 0x38\n 23628: u8 [a0 + 0x17] = a3\n 23631: a3 = a2 >> 0x30\n 23634: u8 [a0 + 0x16] = a3\n 23637: a3 = a2 >> 0x28\n 23640: u8 [a0 + 0x15] = a3\n 23643: a3 = a2 >> 0x20\n 23646: u8 [a0 + 0x14] = a3\n 23649: a3 = a2 >> 0x18\n 23652: u8 [a0 + 0x13] = a3\n 23655: a3 = a2 >> 0x10\n 23658: u8 [a0 + 0x12] = a3\n 23661: a2 = a2 >> 0x8\n 23664: u8 [a0 + 0x11] = a2\n 23667: a2 = a1 >> 0x38\n 23670: u8 [a0 + 0x1f] = a2\n 23673: a2 = a1 >> 0x30\n 23676: u8 [a0 + 0x1e] = a2\n 23679: a2 = a1 >> 0x28\n 23682: u8 [a0 + 0x1d] = a2\n 23685: a2 = a1 >> 0x20\n 23688: u8 [a0 + 0x1c] = a2\n 23691: a2 = a1 >> 0x18\n 23694: u8 [a0 + 0x1b] = a2\n 23697: a2 = a1 >> 0x10\n 23700: u8 [a0 + 0x1a] = a2\n 23703: a1 = a1 >> 0x8\n 23706: a2 = 0xffffffc0\n 23716: a4 = u64 [sp + 0x2b0]\n 23720: a2 = a4 <u a2\n 23723: a3 = u64 [sp + 0x2b8]\n 23727: a2 = 0 if a3 != 0\n 23729: a3 = u64 [sp + 0x278]\n 23733: a2 = 0 if a3 != 0\n 23735: u8 [a0 + 0x19] = a1\n 23738: jump @587 if a2 == 0\n      : @529 (gas: 2)\n 23742: i32 a0 = a4 >> 0x6\n 23745: jump @587 if a0 >=u 1023\n      : @530 (gas: 4)\n 23751: a0 = a4 + 0x7f\n 23754: a1 = u64 [sp + 0x2e8]\n 23758: a0 = a0 & a1\n 23761: jump @587 if a0 >u 65536\n      : @531 (gas: 2)\n 23768: i32 a1 = a4 + 0x40\n 23771: jump @533 if t1 >=u a0\n      : @532 (gas: 3)\n 23774: a2 = u64 [sp + 0x2d0]\n 23778: u32 [a2] = a0\n 23780: fallthrough\n      : @533 (gas: 67)\n 23781: a0 = t0 + a1\n 23784: a2 = u64 [sp + 0x50]\n 23787: u8 [a0 + 0x8] = a2\n 23790: a3 = u64 [sp + 0x48]\n 23793: a1 = a3 >> 0x38\n 23796: u8 [a0 + 0x7] = a1\n 23799: a1 = a3 >> 0x30\n 23802: u8 [a0 + 0x6] = a1\n 23805: a1 = a3 >> 0x28\n 23808: u8 [a0 + 0x5] = a1\n 23811: a1 = a3 >> 0x20\n 23814: u8 [a0 + 0x4] = a1\n 23817: a1 = a3 >> 0x18\n 23820: u8 [a0 + 0x3] = a1\n 23823: a1 = a3 >> 0x10\n 23826: u8 [a0 + 0x2] = a1\n 23829: a1 = a3 >> 0x8\n 23832: u8 [a0 + 0x1] = a1\n 23835: u8 [a0] = a3\n 23837: a3 = u64 [sp + 0x58]\n 23840: u8 [a0 + 0x10] = a3\n 23843: a1 = a2 >> 0x38\n 23846: u8 [a0 + 0xf] = a1\n 23849: a1 = a2 >> 0x30\n 23852: u8 [a0 + 0xe] = a1\n 23855: a1 = a2 >> 0x28\n 23858: u8 [a0 + 0xd] = a1\n 23861: a1 = a2 >> 0x20\n 23864: u8 [a0 + 0xc] = a1\n 23867: a1 = a2 >> 0x18\n 23870: u8 [a0 + 0xb] = a1\n 23873: a1 = a2 >> 0x10\n 23876: u8 [a0 + 0xa] = a1\n 23879: a1 = a2 >> 0x8\n 23882: u8 [a0 + 0x9] = a1\n 23885: a2 = u64 [sp + 0x60]\n 23888: u8 [a0 + 0x18] = a2\n 23891: a1 = a3 >> 0x38\n 23894: u8 [a0 + 0x17] = a1\n 23897: a1 = a3 >> 0x30\n 23900: u8 [a0 + 0x16] = a1\n 23903: a1 = a3 >> 0x28\n 23906: u8 [a0 + 0x15] = a1\n 23909: a1 = a3 >> 0x20\n 23912: u8 [a0 + 0x14] = a1\n 23915: a1 = a3 >> 0x18\n 23918: u8 [a0 + 0x13] = a1\n 23921: a1 = a3 >> 0x10\n 23924: u8 [a0 + 0x12] = a1\n 23927: a1 = a3 >> 0x8\n 23930: u8 [a0 + 0x11] = a1\n 23933: a1 = a2 >> 0x38\n 23936: u8 [a0 + 0x1f] = a1\n 23939: a1 = a2 >> 0x30\n 23942: u8 [a0 + 0x1e] = a1\n 23945: a1 = a2 >> 0x28\n 23948: u8 [a0 + 0x1d] = a1\n 23951: a1 = a2 >> 0x20\n 23954: u8 [a0 + 0x1c] = a1\n 23957: a1 = a2 >> 0x18\n 23960: u8 [a0 + 0x1b] = a1\n 23963: a1 = a2 >> 0x10\n 23966: u8 [a0 + 0x1a] = a1\n 23969: a1 = a2 >> 0x8\n 23972: u8 [a0 + 0x19] = a1\n 23975: a0 = sp + 0x350\n 23979: ra = 72, jump @237\n      : @534 [@dyn 36] (gas: 15)\n 23984: a0 = u64 [sp + 0x358]\n 23988: a1 = u64 [sp + 0x368]\n 23992: s1 = u64 [sp + 0x350]\n 23996: a2 = u64 [sp + 0x360]\n 24000: u64 [sp + 0x2a8] = a0\n 24004: u64 [sp + 0x288] = a1\n 24008: a0 = a0 | a1\n 24011: a1 = s1 | a2\n 24014: a1 = a1 | a0\n 24017: a1 = a1 >> 0x20\n 24020: u64 [sp + 0x280] = a2\n 24024: a0 = a0 | a2\n 24027: a0 = a0 << 0x20\n 24030: a0 = a0 | a1\n 24033: jump @581 if a0 != 0\n      : @535 (gas: 3)\n 24037: i32 a0 = s1 >> 0x10\n 24040: a3 = u64 [sp + 0x2c8]\n 24044: jump @578 if a0 != 0\n      : @536 (gas: 5)\n 24048: a0 = s1 + 0x3f\n 24051: a1 = u64 [sp + 0x2e8]\n 24055: a2 = a0 & a1\n 24058: t0 = u64 [sp + 0x2d8]\n 24062: jump @578 if a2 >u 65536\n      : @537 (gas: 11)\n 24069: a4 = u64 [sp + 0x260]\n 24073: a0 = a3 | a4\n 24076: a1 = u64 [sp + 0x290]\n 24080: a5 = u64 [sp + 0x258]\n 24084: a1 = a1 | a5\n 24087: a0 = a0 | a1\n 24090: a0 = a0 >> 0x20\n 24093: a1 = a1 | a4\n 24096: a1 = a1 << 0x20\n 24099: a0 = a0 | a1\n 24102: jump @587 if a0 != 0\n      : @538 (gas: 2)\n 24106: i32 a0 = a3 >> 0x10\n 24109: jump @587 if a0 != 0\n      : @539 (gas: 4)\n 24113: a0 = a3 + 0x3f\n 24116: a1 = u64 [sp + 0x2e8]\n 24120: a0 = a0 & a1\n 24123: jump @587 if a0 >u 65536\n      : @540 (gas: 4)\n 24130: a1 = u64 [sp + 0x2d0]\n 24134: a1 = i32 [a1]\n 24136: i32 a5 = s1 + 0\n 24138: jump @542 if a1 >=u a0\n      : @541 (gas: 4)\n 24141: a1 = u64 [sp + 0x2d0]\n 24145: u32 [a1] = a0\n 24147: a1 = a0\n 24149: fallthrough\n      : @542 (gas: 3)\n 24150: u64 [sp + 0x2e0] = s1\n 24154: a5 = a5 + t0\n 24157: jump @544 if a1 >=u a2\n      : @543 (gas: 4)\n 24160: a0 = u64 [sp + 0x2d0]\n 24164: u32 [a0] = a2\n 24166: a1 = a2\n 24168: fallthrough\n      : @544 (gas: 94)\n 24169: u64 [sp + 0x278] = a2\n 24173: u64 [sp + 0x2c0] = a1\n 24177: a0 = u8 [a5 + 0x11]\n 24180: a1 = u8 [a5 + 0x10]\n 24183: a2 = u8 [a5 + 0x12]\n 24186: a3 = u8 [a5 + 0x13]\n 24189: a0 = a0 << 0x8\n 24192: a0 = a0 | a1\n 24195: a2 = a2 << 0x10\n 24198: a3 = a3 << 0x18\n 24201: a2 = a2 | a3\n 24204: a0 = a0 | a2\n 24207: u64 [sp + 0x270] = a0\n 24211: a1 = u8 [a5 + 0x1]\n 24214: a2 = u8 [a5]\n 24216: a3 = u8 [a5 + 0x2]\n 24219: a4 = u8 [a5 + 0x3]\n 24222: a1 = a1 << 0x8\n 24225: a1 = a1 | a2\n 24228: a3 = a3 << 0x10\n 24231: a4 = a4 << 0x18\n 24234: a2 = a4 | a3\n 24237: t1 = a2 | a1\n 24240: a1 = u8 [a5 + 0x15]\n 24243: a3 = u8 [a5 + 0x14]\n 24246: a4 = u8 [a5 + 0x16]\n 24249: s1 = u8 [a5 + 0x17]\n 24252: a1 = a1 << 0x8\n 24255: a1 = a1 | a3\n 24258: a4 = a4 << 0x10\n 24261: s1 = s1 << 0x18\n 24264: a4 = a4 | s1\n 24267: t2 = a4 | a1\n 24270: a1 = u8 [a5 + 0x5]\n 24273: a3 = u8 [a5 + 0x4]\n 24276: s1 = u8 [a5 + 0x6]\n 24279: a0 = u8 [a5 + 0x7]\n 24282: a1 = a1 << 0x8\n 24285: a1 = a1 | a3\n 24288: s1 = s1 << 0x10\n 24291: a0 = a0 << 0x18\n 24294: a0 = a0 | s1\n 24297: ra = a0 | a1\n 24300: a0 = u8 [a5 + 0x19]\n 24303: a1 = u8 [a5 + 0x18]\n 24306: a3 = u8 [a5 + 0x1a]\n 24309: a2 = u8 [a5 + 0x1b]\n 24312: a0 = a0 << 0x8\n 24315: a0 = a0 | a1\n 24318: a3 = a3 << 0x10\n 24321: a2 = a2 << 0x18\n 24324: a1 = a2 | a3\n 24327: t0 = a1 | a0\n 24330: a0 = u8 [a5 + 0x9]\n 24333: a2 = u8 [a5 + 0x8]\n 24336: a3 = u8 [a5 + 0xa]\n 24339: a4 = u8 [a5 + 0xb]\n 24342: a0 = a0 << 0x8\n 24345: a0 = a0 | a2\n 24348: a3 = a3 << 0x10\n 24351: a4 = a4 << 0x18\n 24354: a3 = a3 | a4\n 24357: a3 = a3 | a0\n 24360: a0 = u8 [a5 + 0x1d]\n 24363: a2 = u8 [a5 + 0x1c]\n 24366: a4 = u8 [a5 + 0x1e]\n 24369: s1 = u8 [a5 + 0x1f]\n 24372: a0 = a0 << 0x8\n 24375: a0 = a0 | a2\n 24378: a4 = a4 << 0x10\n 24381: s1 = s1 << 0x18\n 24384: a4 = a4 | s1\n 24387: a1 = a4 | a0\n 24390: a2 = u8 [a5 + 0xd]\n 24393: a4 = u8 [a5 + 0xc]\n 24396: s1 = u8 [a5 + 0xe]\n 24399: a0 = u8 [a5 + 0xf]\n 24402: a2 = a2 << 0x8\n 24405: a2 = a2 | a4\n 24408: s1 = s1 << 0x10\n 24411: a0 = a0 << 0x18\n 24414: a0 = a0 | s1\n 24417: a0 = a0 | a2\n 24420: a0 = a0 | a1\n 24423: a0 = a0 << 0x20\n 24426: a1 = a3 | t0\n 24429: a0 = a0 | a1\n 24432: a1 = ra | t2\n 24435: a1 = a1 << 0x20\n 24438: a2 = u64 [sp + 0x270]\n 24442: a2 = t1 | a2\n 24445: a1 = a1 | a2\n 24448: a0 = a0 | a1\n 24451: jump @588 if a0 == 0\n      : @545 (gas: 19)\n 24455: t0 = u64 [sp + 0x280]\n 24459: a0 = t0 >u 0\n 24461: a2 = u64 [sp + 0x288]\n 24465: s1 = a2 >u 0\n 24467: s1 = a0 if a2 == 0\n 24470: a0 = 0xffffffdf\n 24480: a3 = u64 [sp + 0x2e0]\n 24484: a0 = a0 <u a3\n 24487: a1 = u64 [sp + 0x2a8]\n 24491: a4 = a1 >u 0\n 24493: u64 [sp + 0x268] = a4\n 24497: a0 = a4 if a1 != 0\n 24500: a1 = t0 | a2\n 24503: u64 [sp + 0x270] = s1\n 24507: u64 [sp + 0x250] = a1\n 24511: a0 = s1 if a1 != 0\n 24514: a1 = u64 [sp + 0x2d8]\n 24518: a2 = u64 [sp + 0x2c8]\n 24522: jump @587 if a0 != 0\n      : @546 (gas: 3)\n 24526: i32 a4 = a3 >> 0x5\n 24529: u64 [sp + 0x208] = a4\n 24533: jump @587 if a4 >u 2046\n      : @547 (gas: 5)\n 24539: a0 = a3 + 0x5f\n 24542: a3 = u64 [sp + 0x2e8]\n 24546: a3 = a3 & a0\n 24549: u64 [sp + 0x248] = a3\n 24553: jump @587 if a3 >u 65536\n      : @548 (gas: 115)\n 24560: i32 a0 = a2 + 0\n 24562: a0 = a0 + a1\n 24565: a2 = u8 [a0 + 0x1d]\n 24568: a1 = u8 [a0 + 0x1e]\n 24571: s1 = u8 [a0 + 0x1f]\n 24574: a4 = u8 [a0 + 0x15]\n 24577: t1 = u8 [a0 + 0x16]\n 24580: t0 = u8 [a0 + 0x17]\n 24583: t2 = u8 [a0 + 0xd]\n 24586: ra = u8 [a0 + 0xe]\n 24589: a3 = u8 [a0 + 0xf]\n 24592: u64 [sp + 0x240] = a3\n 24596: a3 = u8 [a0 + 0x1c]\n 24599: a2 = a2 << 0x8\n 24602: a1 = a1 << 0x10\n 24605: s1 = s1 << 0x18\n 24608: a2 = a2 | a3\n 24611: u64 [sp + 0x230] = a2\n 24615: a2 = u8 [a0 + 0x14]\n 24618: s1 = s1 | a1\n 24621: a1 = u8 [a0 + 0x5]\n 24624: a4 = a4 << 0x8\n 24627: a2 = a2 | a4\n 24630: u64 [sp + 0x238] = a2\n 24634: a2 = u8 [a0 + 0x6]\n 24637: t1 = t1 << 0x10\n 24640: t0 = t0 << 0x18\n 24643: t0 = t0 | t1\n 24646: a3 = u8 [a0 + 0xc]\n 24649: t2 = t2 << 0x8\n 24652: ra = ra << 0x10\n 24655: a4 = u64 [sp + 0x240]\n 24659: a4 = a4 << 0x18\n 24662: a3 = t2 | a3\n 24665: u64 [sp + 0x228] = a3\n 24669: a3 = u8 [a0 + 0x4]\n 24672: t2 = a4 | ra\n 24675: a4 = u8 [a0 + 0x7]\n 24678: a1 = a1 << 0x8\n 24681: a1 = a1 | a3\n 24684: u64 [sp + 0x240] = a1\n 24688: a3 = u8 [a0 + 0x19]\n 24691: a2 = a2 << 0x10\n 24694: a4 = a4 << 0x18\n 24697: a2 = a2 | a4\n 24700: u64 [sp + 0x220] = a2\n 24704: a2 = u8 [a0 + 0x18]\n 24707: a4 = u8 [a0 + 0x1a]\n 24710: a1 = u8 [a0 + 0x1b]\n 24713: a3 = a3 << 0x8\n 24716: a2 = a2 | a3\n 24719: u64 [sp + 0x218] = a2\n 24723: a4 = a4 << 0x10\n 24726: a1 = a1 << 0x18\n 24729: a1 = a1 | a4\n 24732: u64 [sp + 0x210] = a1\n 24736: a1 = u64 [sp + 0x230]\n 24740: a1 = a1 | s1\n 24743: u64 [sp + 0x230] = a1\n 24747: a1 = u8 [a0 + 0x11]\n 24750: s1 = u8 [a0 + 0x10]\n 24753: a2 = u8 [a0 + 0x12]\n 24756: a3 = u8 [a0 + 0x13]\n 24759: a1 = a1 << 0x8\n 24762: t1 = a1 | s1\n 24765: a2 = a2 << 0x10\n 24768: a3 = a3 << 0x18\n 24771: s1 = a3 | a2\n 24774: a1 = u64 [sp + 0x238]\n 24778: a1 = t0 | a1\n 24781: u64 [sp + 0x238] = a1\n 24785: a2 = u8 [a0 + 0x9]\n 24788: a3 = u8 [a0 + 0x8]\n 24791: a1 = u8 [a0 + 0xa]\n 24794: a4 = u8 [a0 + 0xb]\n 24797: a2 = a2 << 0x8\n 24800: t0 = a2 | a3\n 24803: a1 = a1 << 0x10\n 24806: a4 = a4 << 0x18\n 24809: a2 = a4 | a1\n 24812: a1 = u64 [sp + 0x228]\n 24816: t2 = t2 | a1\n 24819: a3 = u8 [a0 + 0x1]\n 24822: a4 = u8 [a0]\n 24824: a1 = u8 [a0 + 0x2]\n 24827: a0 = u8 [a0 + 0x3]\n 24830: a3 = a3 << 0x8\n 24833: a3 = a3 | a4\n 24836: a1 = a1 << 0x10\n 24839: a0 = a0 << 0x18\n 24842: a0 = a0 | a1\n 24845: a1 = u64 [sp + 0x240]\n 24849: a4 = u64 [sp + 0x220]\n 24853: a4 = a4 | a1\n 24856: a1 = u64 [sp + 0x218]\n 24860: ra = u64 [sp + 0x210]\n 24864: a1 = ra | a1\n 24867: s1 = s1 | t1\n 24870: a2 = a2 | t0\n 24873: a3 = a3 | a0\n 24876: a0 = u64 [sp + 0x230]\n 24880: a0 = a0 << 0x20\n 24883: a0 = a0 | a1\n 24886: ra = u64 [sp + 0x238]\n 24890: ra = ra << 0x20\n 24893: s1 = ra | s1\n 24896: a1 = t2 << 0x20\n 24899: a1 = a1 | a2\n 24902: a4 = a4 << 0x20\n 24905: a3 = a3 | a4\n 24908: a2 = u64 [sp + 0x2e0]\n 24912: i32 t1 = a2 + 0x20\n 24915: t0 = u64 [sp + 0x2c0]\n 24919: a2 = u64 [sp + 0x248]\n 24923: jump @550 if t0 >=u a2\n      : @549 (gas: 4)\n 24926: a4 = u64 [sp + 0x2d0]\n 24930: u32 [a4] = a2\n 24932: t0 = a2\n 24934: fallthrough\n      : @550 (gas: 79)\n 24935: a4 = u64 [sp + 0x2d8]\n 24939: a2 = a4 + t1\n 24942: u8 [a2 + 0x8] = a1\n 24945: a4 = a3 >> 0x38\n 24948: u8 [a2 + 0x7] = a4\n 24951: a4 = a3 >> 0x30\n 24954: u8 [a2 + 0x6] = a4\n 24957: a4 = a3 >> 0x28\n 24960: u8 [a2 + 0x5] = a4\n 24963: a4 = a3 >> 0x20\n 24966: u8 [a2 + 0x4] = a4\n 24969: a4 = a3 >> 0x18\n 24972: u8 [a2 + 0x3] = a4\n 24975: a4 = a3 >> 0x10\n 24978: u8 [a2 + 0x2] = a4\n 24981: a4 = a3 >> 0x8\n 24984: u8 [a2 + 0x1] = a4\n 24987: u8 [a2] = a3\n 24989: u8 [a2 + 0x10] = s1\n 24992: a3 = a1 >> 0x38\n 24995: u8 [a2 + 0xf] = a3\n 24998: a3 = a1 >> 0x30\n 25001: u8 [a2 + 0xe] = a3\n 25004: a3 = a1 >> 0x28\n 25007: u8 [a2 + 0xd] = a3\n 25010: a3 = a1 >> 0x20\n 25013: u8 [a2 + 0xc] = a3\n 25016: a3 = a1 >> 0x18\n 25019: u8 [a2 + 0xb] = a3\n 25022: a3 = a1 >> 0x10\n 25025: u8 [a2 + 0xa] = a3\n 25028: a1 = a1 >> 0x8\n 25031: u8 [a2 + 0x9] = a1\n 25034: u8 [a2 + 0x18] = a0\n 25037: a1 = s1 >> 0x38\n 25040: u8 [a2 + 0x17] = a1\n 25043: a1 = s1 >> 0x30\n 25046: u8 [a2 + 0x16] = a1\n 25049: a1 = s1 >> 0x28\n 25052: u8 [a2 + 0x15] = a1\n 25055: a1 = s1 >> 0x20\n 25058: u8 [a2 + 0x14] = a1\n 25061: a1 = s1 >> 0x18\n 25064: u8 [a2 + 0x13] = a1\n 25067: a1 = s1 >> 0x10\n 25070: u8 [a2 + 0x12] = a1\n 25073: s1 = s1 >> 0x8\n 25076: u8 [a2 + 0x11] = s1\n 25079: a1 = a0 >> 0x38\n 25082: u8 [a2 + 0x1f] = a1\n 25085: a1 = a0 >> 0x30\n 25088: u8 [a2 + 0x1e] = a1\n 25091: a1 = a0 >> 0x28\n 25094: u8 [a2 + 0x1d] = a1\n 25097: a1 = a0 >> 0x20\n 25100: u8 [a2 + 0x1c] = a1\n 25103: a1 = a0 >> 0x18\n 25106: u8 [a2 + 0x1b] = a1\n 25109: a1 = a0 >> 0x10\n 25112: u8 [a2 + 0x1a] = a1\n 25115: t1 = t0\n 25117: t0 = a0 >> 0x8\n 25120: t2 = u64 [sp + 0x260]\n 25124: a1 = t2 >u 0\n 25126: a0 = u64 [sp + 0x258]\n 25130: s1 = a0 >u 0\n 25132: s1 = a1 if a0 == 0\n 25135: a1 = 0xffffffdf\n 25145: a3 = u64 [sp + 0x2c8]\n 25149: a1 = a1 <u a3\n 25152: a4 = u64 [sp + 0x290]\n 25156: ra = a4 >u 0\n 25158: u64 [sp + 0x248] = ra\n 25162: a1 = ra if a4 != 0\n 25165: ra = t2 | a0\n 25168: a1 = s1 if ra != 0\n 25171: u8 [a2 + 0x19] = t0\n 25174: a4 = u64 [sp + 0x278]\n 25178: jump @587 if a1 != 0\n      : @551 (gas: 2)\n 25182: i32 a0 = a3 >> 0x5\n 25185: jump @587 if a0 >u 2046\n      : @552 (gas: 4)\n 25191: a0 = a3 + 0x5f\n 25194: a1 = u64 [sp + 0x2e8]\n 25198: a0 = a0 & a1\n 25201: jump @587 if a0 >u 65536\n      : @553 (gas: 2)\n 25208: a2 = t1\n 25210: jump @555 if t1 >=u a0\n      : @554 (gas: 4)\n 25213: a1 = u64 [sp + 0x2d0]\n 25217: u32 [a1] = a0\n 25219: a2 = a0\n 25221: fallthrough\n      : @555 (gas: 2)\n 25222: u64 [sp + 0x260] = s1\n 25226: jump @557 if a2 >=u a4\n      : @556 (gas: 4)\n 25229: a0 = u64 [sp + 0x2d0]\n 25233: u32 [a0] = a4\n 25235: a2 = a4\n 25237: fallthrough\n      : @557 (gas: 96)\n 25238: u64 [sp + 0x2c0] = a2\n 25242: a0 = u8 [a5 + 0x19]\n 25245: a1 = u8 [a5 + 0x18]\n 25248: a2 = u8 [a5 + 0x1a]\n 25251: a3 = u8 [a5 + 0x1b]\n 25254: a0 = a0 << 0x8\n 25257: a0 = a0 | a1\n 25260: a2 = a2 << 0x10\n 25263: a3 = a3 << 0x18\n 25266: a2 = a2 | a3\n 25269: a0 = a0 | a2\n 25272: a1 = u8 [a5 + 0x1d]\n 25275: a2 = u8 [a5 + 0x1c]\n 25278: a3 = u8 [a5 + 0x1e]\n 25281: a4 = u8 [a5 + 0x1f]\n 25284: a1 = a1 << 0x8\n 25287: a1 = a1 | a2\n 25290: a3 = a3 << 0x10\n 25293: a4 = a4 << 0x18\n 25296: a3 = a3 | a4\n 25299: a1 = a1 | a3\n 25302: a1 = a1 << 0x20\n 25305: t0 = a1 | a0\n 25308: a1 = u8 [a5 + 0x11]\n 25311: a2 = u8 [a5 + 0x10]\n 25314: a3 = u8 [a5 + 0x12]\n 25317: a4 = u8 [a5 + 0x13]\n 25320: a1 = a1 << 0x8\n 25323: a1 = a1 | a2\n 25326: a3 = a3 << 0x10\n 25329: a4 = a4 << 0x18\n 25332: a3 = a3 | a4\n 25335: a1 = a1 | a3\n 25338: a2 = u8 [a5 + 0x15]\n 25341: a3 = u8 [a5 + 0x14]\n 25344: a4 = u8 [a5 + 0x16]\n 25347: s1 = u8 [a5 + 0x17]\n 25350: a2 = a2 << 0x8\n 25353: a2 = a2 | a3\n 25356: a4 = a4 << 0x10\n 25359: s1 = s1 << 0x18\n 25362: a4 = a4 | s1\n 25365: a2 = a2 | a4\n 25368: a2 = a2 << 0x20\n 25371: t1 = a2 | a1\n 25374: a1 = u8 [a5 + 0x1]\n 25377: a3 = u8 [a5]\n 25379: a4 = u8 [a5 + 0x2]\n 25382: s1 = u8 [a5 + 0x3]\n 25385: a1 = a1 << 0x8\n 25388: a1 = a1 | a3\n 25391: a4 = a4 << 0x10\n 25394: s1 = s1 << 0x18\n 25397: a4 = a4 | s1\n 25400: t2 = a4 | a1\n 25403: a3 = u8 [a5 + 0x9]\n 25406: a4 = u8 [a5 + 0x8]\n 25409: s1 = u8 [a5 + 0xa]\n 25412: a0 = u8 [a5 + 0xb]\n 25415: a3 = a3 << 0x8\n 25418: a3 = a3 | a4\n 25421: s1 = s1 << 0x10\n 25424: a0 = a0 << 0x18\n 25427: a0 = a0 | s1\n 25430: a3 = a3 | a0\n 25433: a0 = u8 [a5 + 0x5]\n 25436: a4 = u8 [a5 + 0x4]\n 25439: s1 = u8 [a5 + 0x6]\n 25442: a2 = u8 [a5 + 0x7]\n 25445: a0 = a0 << 0x8\n 25448: a0 = a0 | a4\n 25451: s1 = s1 << 0x10\n 25454: a2 = a2 << 0x18\n 25457: a2 = a2 | s1\n 25460: a0 = a0 | a2\n 25463: a2 = u8 [a5 + 0xd]\n 25466: a4 = u8 [a5 + 0xc]\n 25469: s1 = u8 [a5 + 0xe]\n 25472: a1 = u8 [a5 + 0xf]\n 25475: a2 = a2 << 0x8\n 25478: a2 = a2 | a4\n 25481: s1 = s1 << 0x10\n 25484: a1 = a1 << 0x18\n 25487: a1 = a1 | s1\n 25490: a1 = a1 | a2\n 25493: a2 = reverse t1\n 25495: a4 = reverse t0\n 25497: a4 = a4 <u 0x2\n 25500: a4 = 0 if a2 != 0\n 25502: a0 = a0 | a1\n 25505: a0 = a0 << 0x20\n 25508: a1 = a3 | t2\n 25511: a0 = a0 | a1\n 25514: a0 = reverse a0\n 25516: a4 = 0 if a0 != 0\n 25518: jump @588 if a4 != 0\n      : @558 (gas: 11)\n 25522: a0 = 0xffffffbf\n 25532: a3 = u64 [sp + 0x2e0]\n 25536: a0 = a0 <u a3\n 25539: a1 = u64 [sp + 0x2a8]\n 25543: a2 = u64 [sp + 0x268]\n 25547: a0 = a2 if a1 != 0\n 25550: a1 = u64 [sp + 0x270]\n 25554: a2 = u64 [sp + 0x250]\n 25558: a0 = a1 if a2 != 0\n 25561: a2 = u64 [sp + 0x2c8]\n 25565: jump @587 if a0 != 0\n      : @559 (gas: 3)\n 25569: u64 [sp + 0x258] = ra\n 25573: i32 a0 = a3 >> 0x6\n 25576: jump @587 if a0 >u 1022\n      : @560 (gas: 5)\n 25582: a0 = a3 + 0x7f\n 25585: a1 = u64 [sp + 0x2e8]\n 25589: a1 = a1 & a0\n 25592: u64 [sp + 0x240] = a1\n 25596: jump @587 if a1 >u 65536\n      : @561 (gas: 120)\n 25603: i32 a0 = a2 + 0x20\n 25606: a1 = u64 [sp + 0x2d8]\n 25610: a0 = a0 + a1\n 25613: a2 = u8 [a0 + 0x1d]\n 25616: a1 = u8 [a0 + 0x1e]\n 25619: s1 = u8 [a0 + 0x1f]\n 25622: a4 = u8 [a0 + 0x15]\n 25625: t0 = u8 [a0 + 0x16]\n 25628: t1 = u8 [a0 + 0x17]\n 25631: t2 = u8 [a0 + 0xd]\n 25634: a3 = u8 [a0 + 0xe]\n 25637: u64 [sp + 0x238] = a3\n 25641: ra = u8 [a0 + 0xf]\n 25644: a3 = u8 [a0 + 0x1c]\n 25647: a2 = a2 << 0x8\n 25650: a1 = a1 << 0x10\n 25653: s1 = s1 << 0x18\n 25656: a2 = a2 | a3\n 25659: u64 [sp + 0x228] = a2\n 25663: a2 = u8 [a0 + 0x14]\n 25666: s1 = s1 | a1\n 25669: a1 = u8 [a0 + 0x5]\n 25672: a4 = a4 << 0x8\n 25675: a2 = a2 | a4\n 25678: u64 [sp + 0x230] = a2\n 25682: a2 = u8 [a0 + 0x6]\n 25685: t0 = t0 << 0x10\n 25688: t1 = t1 << 0x18\n 25691: a3 = t1 | t0\n 25694: u64 [sp + 0x218] = a3\n 25698: a3 = u8 [a0 + 0xc]\n 25701: a4 = t2 << 0x8\n 25704: t0 = u64 [sp + 0x238]\n 25708: t0 = t0 << 0x10\n 25711: ra = ra << 0x18\n 25714: a3 = a3 | a4\n 25717: u64 [sp + 0x220] = a3\n 25721: a3 = u8 [a0 + 0x4]\n 25724: a4 = ra | t0\n 25727: u64 [sp + 0x210] = a4\n 25731: a4 = u8 [a0 + 0x7]\n 25734: a1 = a1 << 0x8\n 25737: a1 = a1 | a3\n 25740: u64 [sp + 0x238] = a1\n 25744: t0 = u8 [a0 + 0x19]\n 25747: a2 = a2 << 0x10\n 25750: a4 = a4 << 0x18\n 25753: a2 = a2 | a4\n 25756: u64 [sp + 0x200] = a2\n 25760: a2 = u8 [a0 + 0x18]\n 25763: a3 = u8 [a0 + 0x1a]\n 25766: a1 = u8 [a0 + 0x1b]\n 25769: a4 = t0 << 0x8\n 25772: a2 = a2 | a4\n 25775: u64 [sp + 0x1f8] = a2\n 25779: a3 = a3 << 0x10\n 25782: a1 = a1 << 0x18\n 25785: a1 = a1 | a3\n 25788: u64 [sp + 0x1f0] = a1\n 25792: a1 = u64 [sp + 0x228]\n 25796: a1 = a1 | s1\n 25799: u64 [sp + 0x228] = a1\n 25803: a1 = u8 [a0 + 0x11]\n 25806: a2 = u8 [a0 + 0x10]\n 25809: s1 = u8 [a0 + 0x12]\n 25812: a3 = u8 [a0 + 0x13]\n 25815: a1 = a1 << 0x8\n 25818: t2 = a1 | a2\n 25821: s1 = s1 << 0x10\n 25824: a1 = a3 << 0x18\n 25827: t1 = a1 | s1\n 25830: a1 = u64 [sp + 0x230]\n 25834: a2 = u64 [sp + 0x218]\n 25838: a1 = a1 | a2\n 25841: u64 [sp + 0x230] = a1\n 25845: a3 = u8 [a0 + 0x9]\n 25848: s1 = u8 [a0 + 0x8]\n 25851: a1 = u8 [a0 + 0xa]\n 25854: a2 = u8 [a0 + 0xb]\n 25857: a3 = a3 << 0x8\n 25860: s1 = s1 | a3\n 25863: a1 = a1 << 0x10\n 25866: a2 = a2 << 0x18\n 25869: a4 = a2 | a1\n 25872: a1 = u64 [sp + 0x220]\n 25876: a2 = u64 [sp + 0x210]\n 25880: t0 = a2 | a1\n 25883: a2 = u8 [a0 + 0x1]\n 25886: a1 = u8 [a0]\n 25888: a3 = u8 [a0 + 0x2]\n 25891: a0 = u8 [a0 + 0x3]\n 25894: a2 = a2 << 0x8\n 25897: a1 = a1 | a2\n 25900: a3 = a3 << 0x10\n 25903: a0 = a0 << 0x18\n 25906: a0 = a0 | a3\n 25909: a2 = u64 [sp + 0x238]\n 25913: a3 = u64 [sp + 0x200]\n 25917: a3 = a3 | a2\n 25920: a2 = u64 [sp + 0x1f8]\n 25924: ra = u64 [sp + 0x1f0]\n 25928: a2 = ra | a2\n 25931: t2 = t1 | t2\n 25934: a4 = a4 | s1\n 25937: a1 = a1 | a0\n 25940: a0 = u64 [sp + 0x228]\n 25944: a0 = a0 << 0x20\n 25947: t1 = a0 | a2\n 25950: ra = u64 [sp + 0x230]\n 25954: ra = ra << 0x20\n 25957: a0 = ra | t2\n 25960: a2 = t0 << 0x20\n 25963: a2 = a2 | a4\n 25966: a3 = a3 << 0x20\n 25969: t2 = a3 | a1\n 25972: a1 = u64 [sp + 0x2e0]\n 25976: i32 ra = a1 + 0x40\n 25979: t0 = u64 [sp + 0x2c0]\n 25983: a3 = u64 [sp + 0x240]\n 25987: jump @563 if t0 >=u a3\n      : @562 (gas: 4)\n 25990: a1 = u64 [sp + 0x2d0]\n 25994: u32 [a1] = a3\n 25996: t0 = a3\n 25998: fallthrough\n      : @563 (gas: 73)\n 25999: a1 = 0xffffffbf\n 26009: s1 = u64 [sp + 0x2c8]\n 26013: a4 = a1 <u s1\n 26016: a1 = u64 [sp + 0x290]\n 26020: a3 = u64 [sp + 0x248]\n 26024: a4 = a3 if a1 != 0\n 26027: a1 = u64 [sp + 0x260]\n 26031: a3 = u64 [sp + 0x258]\n 26035: a4 = a1 if a3 != 0\n 26038: a3 = u64 [sp + 0x2d8]\n 26042: ra = ra + a3\n 26045: a1 = t2 >> 0x38\n 26048: u8 [ra + 0x7] = a1\n 26051: a1 = t2 >> 0x30\n 26054: u8 [ra + 0x6] = a1\n 26057: a1 = t2 >> 0x28\n 26060: u8 [ra + 0x5] = a1\n 26063: a1 = t2 >> 0x20\n 26066: u8 [ra + 0x4] = a1\n 26069: a1 = t2 >> 0x18\n 26072: u8 [ra + 0x3] = a1\n 26075: a1 = t2 >> 0x10\n 26078: u8 [ra + 0x2] = a1\n 26081: a1 = t2 >> 0x8\n 26084: u8 [ra + 0x1] = a1\n 26087: u8 [ra] = t2\n 26089: a1 = a2 >> 0x38\n 26092: u8 [ra + 0xf] = a1\n 26095: a1 = a2 >> 0x30\n 26098: u8 [ra + 0xe] = a1\n 26101: a1 = a2 >> 0x28\n 26104: u8 [ra + 0xd] = a1\n 26107: a1 = a2 >> 0x20\n 26110: u8 [ra + 0xc] = a1\n 26113: a1 = a2 >> 0x18\n 26116: u8 [ra + 0xb] = a1\n 26119: a1 = a2 >> 0x10\n 26122: u8 [ra + 0xa] = a1\n 26125: u8 [ra + 0x8] = a2\n 26128: a2 = a2 >> 0x8\n 26131: u8 [ra + 0x9] = a2\n 26134: a1 = a0 >> 0x38\n 26137: u8 [ra + 0x17] = a1\n 26140: a1 = a0 >> 0x30\n 26143: u8 [ra + 0x16] = a1\n 26146: a1 = a0 >> 0x28\n 26149: u8 [ra + 0x15] = a1\n 26152: a1 = a0 >> 0x20\n 26155: u8 [ra + 0x14] = a1\n 26158: a1 = a0 >> 0x18\n 26161: u8 [ra + 0x13] = a1\n 26164: a1 = a0 >> 0x10\n 26167: u8 [ra + 0x12] = a1\n 26170: u8 [ra + 0x10] = a0\n 26173: a0 = a0 >> 0x8\n 26176: u8 [ra + 0x11] = a0\n 26179: a0 = t1 >> 0x38\n 26182: u8 [ra + 0x1f] = a0\n 26185: a0 = t1 >> 0x30\n 26188: u8 [ra + 0x1e] = a0\n 26191: a0 = t1 >> 0x28\n 26194: u8 [ra + 0x1d] = a0\n 26197: a0 = t1 >> 0x20\n 26200: u8 [ra + 0x1c] = a0\n 26203: a0 = t1 >> 0x18\n 26206: u8 [ra + 0x1b] = a0\n 26209: a0 = t1 >> 0x10\n 26212: u8 [ra + 0x1a] = a0\n 26215: u8 [ra + 0x18] = t1\n 26218: a0 = t1 >> 0x8\n 26221: u8 [ra + 0x19] = a0\n 26224: a2 = u64 [sp + 0x278]\n 26228: jump @587 if a4 != 0\n      : @564 (gas: 2)\n 26232: i32 a0 = s1 >> 0x6\n 26235: jump @587 if a0 >u 1022\n      : @565 (gas: 4)\n 26241: a0 = s1 + 0x7f\n 26244: a1 = u64 [sp + 0x2e8]\n 26248: a0 = a0 & a1\n 26251: jump @587 if a0 >u 65536\n      : @566 (gas: 2)\n 26258: t2 = a3\n 26260: jump @568 if t0 >=u a0\n      : @567 (gas: 4)\n 26263: a1 = u64 [sp + 0x2d0]\n 26267: u32 [a1] = a0\n 26269: t0 = a0\n 26271: fallthrough\n      : @568 (gas: 1)\n 26272: jump @570 if t0 >=u a2\n      : @569 (gas: 4)\n 26275: a0 = u64 [sp + 0x2d0]\n 26279: u32 [a0] = a2\n 26281: t0 = a2\n 26283: fallthrough\n      : @570 (gas: 96)\n 26284: u64 [sp + 0x2c0] = t0\n 26288: a0 = u8 [a5 + 0x19]\n 26291: a1 = u8 [a5 + 0x18]\n 26294: a2 = u8 [a5 + 0x1a]\n 26297: a3 = u8 [a5 + 0x1b]\n 26300: a0 = a0 << 0x8\n 26303: a0 = a0 | a1\n 26306: a2 = a2 << 0x10\n 26309: a3 = a3 << 0x18\n 26312: a2 = a2 | a3\n 26315: a0 = a0 | a2\n 26318: a1 = u8 [a5 + 0x1d]\n 26321: a2 = u8 [a5 + 0x1c]\n 26324: a3 = u8 [a5 + 0x1e]\n 26327: a4 = u8 [a5 + 0x1f]\n 26330: a1 = a1 << 0x8\n 26333: a1 = a1 | a2\n 26336: a3 = a3 << 0x10\n 26339: a4 = a4 << 0x18\n 26342: a3 = a3 | a4\n 26345: a1 = a1 | a3\n 26348: a1 = a1 << 0x20\n 26351: t0 = a1 | a0\n 26354: a1 = u8 [a5 + 0x11]\n 26357: a2 = u8 [a5 + 0x10]\n 26360: a3 = u8 [a5 + 0x12]\n 26363: a4 = u8 [a5 + 0x13]\n 26366: a1 = a1 << 0x8\n 26369: a1 = a1 | a2\n 26372: a3 = a3 << 0x10\n 26375: a4 = a4 << 0x18\n 26378: a3 = a3 | a4\n 26381: a1 = a1 | a3\n 26384: a2 = u8 [a5 + 0x15]\n 26387: a3 = u8 [a5 + 0x14]\n 26390: a4 = u8 [a5 + 0x16]\n 26393: s1 = u8 [a5 + 0x17]\n 26396: a2 = a2 << 0x8\n 26399: a2 = a2 | a3\n 26402: a4 = a4 << 0x10\n 26405: s1 = s1 << 0x18\n 26408: a4 = a4 | s1\n 26411: a2 = a2 | a4\n 26414: a2 = a2 << 0x20\n 26417: t1 = a2 | a1\n 26420: a2 = u8 [a5 + 0x1]\n 26423: a3 = u8 [a5]\n 26425: a4 = u8 [a5 + 0x2]\n 26428: s1 = u8 [a5 + 0x3]\n 26431: a2 = a2 << 0x8\n 26434: a2 = a2 | a3\n 26437: a4 = a4 << 0x10\n 26440: s1 = s1 << 0x18\n 26443: a4 = a4 | s1\n 26446: a2 = a2 | a4\n 26449: a3 = u8 [a5 + 0x9]\n 26452: a4 = u8 [a5 + 0x8]\n 26455: s1 = u8 [a5 + 0xa]\n 26458: a0 = u8 [a5 + 0xb]\n 26461: a3 = a3 << 0x8\n 26464: a3 = a3 | a4\n 26467: s1 = s1 << 0x10\n 26470: a0 = a0 << 0x18\n 26473: a0 = a0 | s1\n 26476: a3 = a3 | a0\n 26479: a0 = u8 [a5 + 0x5]\n 26482: a4 = u8 [a5 + 0x4]\n 26485: s1 = u8 [a5 + 0x6]\n 26488: a1 = u8 [a5 + 0x7]\n 26491: a0 = a0 << 0x8\n 26494: a0 = a0 | a4\n 26497: s1 = s1 << 0x10\n 26500: a1 = a1 << 0x18\n 26503: a1 = a1 | s1\n 26506: a0 = a0 | a1\n 26509: a1 = u8 [a5 + 0xd]\n 26512: a4 = u8 [a5 + 0xc]\n 26515: s1 = u8 [a5 + 0xe]\n 26518: a5 = u8 [a5 + 0xf]\n 26521: a1 = a1 << 0x8\n 26524: a1 = a1 | a4\n 26527: s1 = s1 << 0x10\n 26530: a5 = a5 << 0x18\n 26533: a5 = a5 | s1\n 26536: a1 = a1 | a5\n 26539: a4 = reverse t1\n 26541: a5 = reverse t0\n 26543: a5 = a5 <u 0x3\n 26546: a5 = 0 if a4 != 0\n 26548: a0 = a0 | a1\n 26551: a0 = a0 << 0x20\n 26554: a2 = a2 | a3\n 26557: a0 = a0 | a2\n 26560: a0 = reverse a0\n 26562: a5 = 0 if a0 != 0\n 26564: jump @588 if a5 != 0\n      : @571 (gas: 11)\n 26568: a0 = 0xffffff9f\n 26578: a2 = u64 [sp + 0x2e0]\n 26582: a0 = a0 <u a2\n 26585: a1 = u64 [sp + 0x2a8]\n 26589: a3 = u64 [sp + 0x268]\n 26593: a0 = a3 if a1 != 0\n 26596: a1 = u64 [sp + 0x270]\n 26600: a3 = u64 [sp + 0x250]\n 26604: a0 = a1 if a3 != 0\n 26607: a1 = u64 [sp + 0x2c8]\n 26611: jump @587 if a0 != 0\n      : @572 (gas: 2)\n 26615: a3 = u64 [sp + 0x208]\n 26619: jump @587 if a3 >u 2044\n      : @573 (gas: 5)\n 26625: a0 = a2 + 0x9f\n 26629: a2 = u64 [sp + 0x2e8]\n 26633: a2 = a2 & a0\n 26636: u64 [sp + 0x2e8] = a2\n 26640: jump @587 if a2 >u 65536\n      : @574 (gas: 109)\n 26647: i32 a0 = a1 + 0x40\n 26650: a0 = a0 + t2\n 26653: a4 = u8 [a0 + 0x1d]\n 26656: s1 = u8 [a0 + 0x1e]\n 26659: a2 = u8 [a0 + 0x1f]\n 26662: t2 = u8 [a0 + 0x15]\n 26665: a3 = u8 [a0 + 0x16]\n 26668: a5 = u8 [a0 + 0x17]\n 26671: t1 = u8 [a0 + 0xd]\n 26674: t0 = u8 [a0 + 0xe]\n 26677: a1 = u8 [a0 + 0x1c]\n 26680: a4 = a4 << 0x8\n 26683: s1 = s1 << 0x10\n 26686: a2 = a2 << 0x18\n 26689: a1 = a1 | a4\n 26692: u64 [sp + 0x290] = a1\n 26696: a1 = u8 [a0 + 0x14]\n 26699: a2 = a2 | s1\n 26702: u64 [sp + 0x278] = a2\n 26706: a4 = u8 [a0 + 0xf]\n 26709: t2 = t2 << 0x8\n 26712: a1 = t2 | a1\n 26715: u64 [sp + 0x2c8] = a1\n 26719: t2 = u8 [a0 + 0x5]\n 26722: a3 = a3 << 0x10\n 26725: a5 = a5 << 0x18\n 26728: a5 = a5 | a3\n 26731: a3 = u8 [a0 + 0xc]\n 26734: t1 = t1 << 0x8\n 26737: t0 = t0 << 0x10\n 26740: a4 = a4 << 0x18\n 26743: a1 = t1 | a3\n 26746: u64 [sp + 0x270] = a1\n 26750: a3 = u8 [a0 + 0x4]\n 26753: s1 = a4 | t0\n 26756: a4 = u8 [a0 + 0x6]\n 26759: a1 = u8 [a0 + 0x7]\n 26762: t2 = t2 << 0x8\n 26765: a2 = t2 | a3\n 26768: u64 [sp + 0x268] = a2\n 26772: a4 = a4 << 0x10\n 26775: a1 = a1 << 0x18\n 26778: a1 = a1 | a4\n 26781: u64 [sp + 0x260] = a1\n 26785: a1 = u8 [a0 + 0x19]\n 26788: a3 = u8 [a0 + 0x18]\n 26791: t0 = u8 [a0 + 0x1a]\n 26794: a2 = u8 [a0 + 0x1b]\n 26797: a1 = a1 << 0x8\n 26800: ra = a1 | a3\n 26803: t0 = t0 << 0x10\n 26806: a2 = a2 << 0x18\n 26809: t2 = a2 | t0\n 26812: a1 = u64 [sp + 0x290]\n 26816: a2 = u64 [sp + 0x278]\n 26820: a1 = a1 | a2\n 26823: u64 [sp + 0x290] = a1\n 26827: a1 = u8 [a0 + 0x11]\n 26830: a2 = u8 [a0 + 0x10]\n 26833: a3 = u8 [a0 + 0x12]\n 26836: a4 = u8 [a0 + 0x13]\n 26839: a1 = a1 << 0x8\n 26842: t1 = a1 | a2\n 26845: a3 = a3 << 0x10\n 26848: a1 = a4 << 0x18\n 26851: t0 = a1 | a3\n 26854: a1 = u64 [sp + 0x2c8]\n 26858: a1 = a1 | a5\n 26861: u64 [sp + 0x2c8] = a1\n 26865: a3 = u8 [a0 + 0x9]\n 26868: a4 = u8 [a0 + 0x8]\n 26871: a1 = u8 [a0 + 0xa]\n 26874: a2 = u8 [a0 + 0xb]\n 26877: a3 = a3 << 0x8\n 26880: a5 = a3 | a4\n 26883: a1 = a1 << 0x10\n 26886: a2 = a2 << 0x18\n 26889: a3 = a2 | a1\n 26892: a1 = u64 [sp + 0x270]\n 26896: s1 = s1 | a1\n 26899: a2 = u8 [a0 + 0x1]\n 26902: a4 = u8 [a0]\n 26904: a1 = u8 [a0 + 0x2]\n 26907: a0 = u8 [a0 + 0x3]\n 26910: a2 = a2 << 0x8\n 26913: a2 = a2 | a4\n 26916: a1 = a1 << 0x10\n 26919: a0 = a0 << 0x18\n 26922: a0 = a0 | a1\n 26925: a1 = u64 [sp + 0x268]\n 26929: a4 = u64 [sp + 0x260]\n 26933: a1 = a1 | a4\n 26936: a4 = t2 | ra\n 26939: t0 = t0 | t1\n 26942: a3 = a3 | a5\n 26945: a5 = a0 | a2\n 26948: a0 = u64 [sp + 0x290]\n 26952: a0 = a0 << 0x20\n 26955: a0 = a0 | a4\n 26958: a2 = u64 [sp + 0x2c8]\n 26962: a2 = a2 << 0x20\n 26965: a2 = a2 | t0\n 26968: a4 = s1 << 0x20\n 26971: a4 = a4 | a3\n 26974: a1 = a1 << 0x20\n 26977: a3 = a1 | a5\n 26980: a1 = u64 [sp + 0x2c0]\n 26984: a5 = u64 [sp + 0x2e8]\n 26988: jump @576 if a1 >=u a5\n      : @575 (gas: 3)\n 26991: a1 = u64 [sp + 0x2d0]\n 26995: u32 [a1] = a5\n 26997: fallthrough\n      : @576 (gas: 83)\n 26998: s1 = u64 [sp + 0x2e0]\n 27002: i32 a1 = s1 + 0x60\n 27005: a5 = u64 [sp + 0x2d8]\n 27009: a1 = a1 + a5\n 27012: u8 [a1 + 0x10] = a2\n 27015: a5 = a4 >> 0x38\n 27018: u8 [a1 + 0xf] = a5\n 27021: a5 = a4 >> 0x30\n 27024: u8 [a1 + 0xe] = a5\n 27027: a5 = a4 >> 0x28\n 27030: u8 [a1 + 0xd] = a5\n 27033: a5 = a4 >> 0x20\n 27036: u8 [a1 + 0xc] = a5\n 27039: a5 = a4 >> 0x18\n 27042: u8 [a1 + 0xb] = a5\n 27045: a5 = a4 >> 0x10\n 27048: u8 [a1 + 0xa] = a5\n 27051: a5 = a4 >> 0x8\n 27054: u8 [a1 + 0x9] = a5\n 27057: u8 [a1 + 0x8] = a4\n 27060: a4 = a3 >> 0x38\n 27063: u8 [a1 + 0x7] = a4\n 27066: a4 = a3 >> 0x30\n 27069: u8 [a1 + 0x6] = a4\n 27072: a4 = a3 >> 0x28\n 27075: u8 [a1 + 0x5] = a4\n 27078: a4 = a3 >> 0x20\n 27081: u8 [a1 + 0x4] = a4\n 27084: a4 = a3 >> 0x18\n 27087: u8 [a1 + 0x3] = a4\n 27090: a4 = a3 >> 0x10\n 27093: u8 [a1 + 0x2] = a4\n 27096: a4 = a3 >> 0x8\n 27099: u8 [a1 + 0x1] = a4\n 27102: u8 [a1] = a3\n 27104: u8 [a1 + 0x18] = a0\n 27107: a3 = a2 >> 0x38\n 27110: u8 [a1 + 0x17] = a3\n 27113: a3 = a2 >> 0x30\n 27116: u8 [a1 + 0x16] = a3\n 27119: a3 = a2 >> 0x28\n 27122: u8 [a1 + 0x15] = a3\n 27125: a3 = a2 >> 0x20\n 27128: u8 [a1 + 0x14] = a3\n 27131: a3 = a2 >> 0x18\n 27134: u8 [a1 + 0x13] = a3\n 27137: a3 = a2 >> 0x10\n 27140: u8 [a1 + 0x12] = a3\n 27143: a2 = a2 >> 0x8\n 27146: u8 [a1 + 0x11] = a2\n 27149: a2 = a0 >> 0x38\n 27152: u8 [a1 + 0x1f] = a2\n 27155: a2 = a0 >> 0x30\n 27158: u8 [a1 + 0x1e] = a2\n 27161: a2 = a0 >> 0x28\n 27164: u8 [a1 + 0x1d] = a2\n 27167: a2 = a0 >> 0x20\n 27170: u8 [a1 + 0x1c] = a2\n 27173: a2 = a0 >> 0x18\n 27176: u8 [a1 + 0x1b] = a2\n 27179: a2 = a0 >> 0x10\n 27182: u8 [a1 + 0x1a] = a2\n 27185: a0 = a0 >> 0x8\n 27188: u8 [a1 + 0x19] = a0\n 27191: a0 = u64 [sp + 0x298]\n 27195: u64 [sp + 0x308] = a0\n 27199: a0 = u64 [sp + 0x2a0]\n 27203: u64 [sp + 0x300] = a0\n 27207: a0 = u64 [sp + 0x2b8]\n 27211: u64 [sp + 0x2f8] = a0\n 27215: a0 = u64 [sp + 0x2b0]\n 27219: u64 [sp + 0x2f0] = a0\n 27223: a0 = u64 [sp + 0x288]\n 27227: u64 [sp + 0x328] = a0\n 27231: a0 = u64 [sp + 0x280]\n 27235: u64 [sp + 0x320] = a0\n 27239: a0 = u64 [sp + 0x2a8]\n 27243: u64 [sp + 0x318] = a0\n 27247: a0 = sp + 0x330\n 27251: a1 = sp + 0x310\n 27255: a2 = sp + 0x2f0\n 27259: u64 [sp + 0x310] = s1\n 27263: ra = 74, jump @677\n      : @577 [@dyn 37] (gas: 16)\n 27268: a0 = u64 [sp + 0x330]\n 27272: a1 = u64 [sp + 0x340]\n 27276: a2 = u64 [sp + 0x348]\n 27280: a3 = u64 [sp + 0x338]\n 27284: a0 = a0 ^ 0x1\n 27287: a4 = u64 [sp]\n 27289: u64 [a4 + 0x10] = a1\n 27292: u64 [a4 + 0x18] = a2\n 27295: u64 [a4] = a0\n 27297: u64 [a4 + 0x8] = a3\n 27300: sp = s0 + 0xfffffffffffffc50\n 27304: ra = u64 [sp + 0x3a8]\n 27308: s0 = u64 [sp + 0x3a0]\n 27312: s1 = u64 [sp + 0x398]\n 27316: sp = sp + 0x3b0\n 27320: ret\n      : @578 (gas: 11)\n 27322: a2 = u64 [sp + 0x260]\n 27326: a0 = a3 | a2\n 27329: a1 = u64 [sp + 0x290]\n 27333: a4 = u64 [sp + 0x258]\n 27337: a1 = a1 | a4\n 27340: a0 = a0 | a1\n 27343: a0 = a0 >> 0x20\n 27346: a1 = a1 | a2\n 27349: a1 = a1 << 0x20\n 27352: a0 = a0 | a1\n 27355: jump @587 if a0 != 0\n      : @579 (gas: 2)\n 27358: i32 a0 = a3 >> 0x10\n 27361: jump @587 if a0 != 0\n      : @580 (gas: 2)\n 27364: a0 = a3 + 0x3f\n 27367: jump @584\n      : @581 (gas: 12)\n 27369: a2 = u64 [sp + 0x2c8]\n 27373: a3 = u64 [sp + 0x260]\n 27377: a0 = a2 | a3\n 27380: a1 = u64 [sp + 0x290]\n 27384: a4 = u64 [sp + 0x258]\n 27388: a1 = a1 | a4\n 27391: a0 = a0 | a1\n 27394: a0 = a0 >> 0x20\n 27397: a1 = a1 | a3\n 27400: a1 = a1 << 0x20\n 27403: a0 = a0 | a1\n 27406: jump @587 if a0 != 0\n      : @582 (gas: 2)\n 27409: i32 a0 = a2 >> 0x10\n 27412: jump @587 if a0 != 0\n      : @583 (gas: 2)\n 27415: a0 = a2 + 0x3f\n 27418: fallthrough\n      : @584 (gas: 3)\n 27419: a1 = u64 [sp + 0x2e8]\n 27423: a0 = a0 & a1\n 27426: jump @587 if a0 >u 65536\n      : @585 (gas: 3)\n 27432: a1 = u64 [sp + 0x2d0]\n 27436: a1 = i32 [a1]\n 27438: jump @587 if a1 >=u a0\n      : @586 (gas: 3)\n 27441: a1 = u64 [sp + 0x2d0]\n 27445: u32 [a1] = a0\n 27447: trap\n      : @587 (gas: 1)\n 27448: trap\n      : @588 (gas: 7)\n 27449: a1 = u64 [sp + 0x2d8]\n 27453: u64 [a1 + 24] = 0\n 27456: u64 [a1 + 16] = 0\n 27459: u64 [a1 + 0] = 0x717b484e\n 27465: u64 [a1 + 8] = 0\n 27468: a1 = u64 [sp + 0x2c0]\n 27472: jump @590 if a1 >u 63\n      : @589 (gas: 3)\n 27476: a1 = u64 [sp + 0x2d0]\n 27480: u32 [a1 + 0] = 0x40\n 27483: fallthrough\n      : @590 (gas: 15)\n 27484: a1 = u64 [sp + 0x2d8]\n 27488: u32 [a1 + 32] = 0x32000000\n 27495: u32 [a1 + 28] = 0\n 27498: u32 [a1 + 24] = 0\n 27501: u32 [a1 + 20] = 0\n 27504: u32 [a1 + 16] = 0\n 27507: u32 [a1 + 12] = 0\n 27510: u32 [a1 + 8] = 0\n 27513: u32 [a1 + 4] = 0\n 27516: i32 a1 = a1 + 0\n 27518: a0 = 0x1\n 27521: a2 = 0x24\n 27524: ra = 0x4c\n 27527: ecalli 5 // 'seal_return'\n 27529: fallthrough\n      : @591 [@dyn 38] (gas: 17)\n 27530: u64 [ra + 16] = 0\n 27533: u64 [ra + 24] = 0\n 27536: u64 [ra + 8] = 0\n 27539: u64 [ra + 0] = 0x717b484e\n 27545: u32 [ra + 32] = 0x41000000\n 27552: u32 [ra + 20] = 0\n 27555: u32 [ra + 24] = 0\n 27558: u32 [ra + 28] = 0\n 27561: u32 [ra + 8] = 0\n 27564: u32 [ra + 12] = 0\n 27567: u32 [ra + 16] = 0\n 27570: u32 [ra + 4] = 0\n 27573: i32 a1 = ra + 0\n 27575: a0 = 0x1\n 27578: a2 = 0x24\n 27581: ecalli 5 // 'seal_return'\n 27583: fallthrough\n      : @592 (gas: 17)\n 27584: u64 [a4 + 16] = 0\n 27587: u64 [a4 + 24] = 0\n 27590: u64 [a4 + 8] = 0\n 27593: u64 [a4 + 0] = 0x717b484e\n 27599: u32 [a4 + 32] = 0x41000000\n 27606: u32 [a4 + 20] = 0\n 27609: u32 [a4 + 24] = 0\n 27612: u32 [a4 + 28] = 0\n 27615: u32 [a4 + 8] = 0\n 27618: u32 [a4 + 12] = 0\n 27621: u32 [a4 + 16] = 0\n 27624: u32 [a4 + 4] = 0\n 27627: i32 a1 = a4 + 0\n 27629: a0 = 0x1\n 27632: a2 = 0x24\n 27635: ecalli 5 // 'seal_return'\n 27637: fallthrough\n      : @593 (gas: 17)\n 27638: u64 [a3 + 16] = 0\n 27641: u64 [a3 + 24] = 0\n 27644: u64 [a3 + 8] = 0\n 27647: u64 [a3 + 0] = 0x717b484e\n 27653: u32 [a3 + 32] = 0x41000000\n 27660: u32 [a3 + 20] = 0\n 27663: u32 [a3 + 24] = 0\n 27666: u32 [a3 + 28] = 0\n 27669: u32 [a3 + 8] = 0\n 27672: u32 [a3 + 12] = 0\n 27675: u32 [a3 + 16] = 0\n 27678: u32 [a3 + 4] = 0\n 27681: i32 a1 = a3 + 0\n 27683: a0 = 0x1\n 27686: a2 = 0x24\n 27689: ecalli 5 // 'seal_return'\n 27691: fallthrough\n      : @594 (gas: 18)\n 27692: u64 [t2 + 16] = 0\n 27695: u64 [t2 + 24] = 0\n 27698: u64 [t2 + 8] = 0\n 27701: u64 [t2 + 0] = 0x717b484e\n 27707: u32 [t2 + 32] = 0x41000000\n 27714: u32 [t2 + 20] = 0\n 27717: u32 [t2 + 24] = 0\n 27720: u32 [t2 + 28] = 0\n 27723: u32 [t2 + 8] = 0\n 27726: u32 [t2 + 12] = 0\n 27729: u32 [t2 + 16] = 0\n 27732: u32 [t2 + 4] = 0\n 27735: i32 a1 = t2 + 0\n 27737: a0 = 0x1\n 27740: a2 = 0x24\n 27743: ra = 0x4e\n 27746: ecalli 5 // 'seal_return'\n 27748: fallthrough\n      : @595 [@dyn 39] (gas: 7)\n 27749: a1 = 0x20050\n 27754: a2 = i32 [0x20044]\n 27759: u64 [0x20068] = 0\n 27764: u64 [0x20060] = 0\n 27769: u64 [0x20050] = 0x717b484e\n 27778: u64 [0x20058] = 0\n 27783: jump @597 if a2 >u 63\n      : @596 (gas: 2)\n 27787: u32 [0x20044] = 0x40\n 27793: fallthrough\n      : @597 (gas: 16)\n 27794: sp = sp + 0xfffffffffffffff8\n 27797: u64 [sp] = ra\n 27799: u32 [0x20070] = 0x11000000\n 27808: u32 [0x2006c] = 0\n 27813: u32 [0x20068] = 0\n 27818: u32 [0x20064] = 0\n 27823: u32 [0x20060] = 0\n 27828: u32 [0x2005c] = 0\n 27833: u32 [0x20058] = 0\n 27838: u32 [0x20054] = 0\n 27843: i32 a1 = a1 + 0\n 27845: a0 = 0x1\n 27848: a2 = 0x24\n 27851: ra = 0x50\n 27854: ecalli 5 // 'seal_return'\n 27856: fallthrough\n      : @598 [@dyn 40] (gas: 16)\n 27857: a2 = u64 [a1]\n 27859: t0 = u64 [a1 + 0x18]\n 27862: a3 = u64 [a1 + 0x8]\n 27865: a5 = u64 [a1 + 0x10]\n 27868: a4 = a2 + 0x1\n 27871: a2 = a4 <u 0x1\n 27874: a2 = a2 + a3\n 27877: a3 = a4 | a2\n 27880: a3 = a3 <u 0x1\n 27883: a3 = a3 + a5\n 27886: a5 = a3 <u a5\n 27889: a5 = a5 + t0\n 27892: t0 = a2 | a5\n 27895: a1 = a4 | a3\n 27898: a1 = a1 | t0\n 27901: jump @600 if a1 == 0\n      : @599 (gas: 5)\n 27904: u64 [a0] = a4\n 27906: u64 [a0 + 0x8] = a2\n 27909: u64 [a0 + 0x10] = a3\n 27912: u64 [a0 + 0x18] = a5\n 27915: ret\n      : @600 (gas: 7)\n 27917: a1 = 0x20050\n 27922: a2 = i32 [0x20044]\n 27927: u64 [0x20068] = 0\n 27932: u64 [0x20060] = 0\n 27937: u64 [0x20050] = 0x717b484e\n 27946: u64 [0x20058] = 0\n 27951: jump @602 if a2 >u 63\n      : @601 (gas: 2)\n 27955: u32 [0x20044] = 0x40\n 27961: fallthrough\n      : @602 (gas: 16)\n 27962: sp = sp + 0xfffffffffffffff8\n 27965: u64 [sp] = ra\n 27967: u32 [0x20070] = 0x11000000\n 27976: u32 [0x2006c] = 0\n 27981: u32 [0x20068] = 0\n 27986: u32 [0x20064] = 0\n 27991: u32 [0x20060] = 0\n 27996: u32 [0x2005c] = 0\n 28001: u32 [0x20058] = 0\n 28006: u32 [0x20054] = 0\n 28011: i32 a1 = a1 + 0\n 28013: a0 = 0x1\n 28016: a2 = 0x24\n 28019: ra = 0x52\n 28022: ecalli 5 // 'seal_return'\n 28024: fallthrough\n      : @603 [@dyn 41] (gas: 19)\n 28025: sp = sp + 0xfffffffffffffff0\n 28028: u64 [sp + 0x8] = ra\n 28031: u64 [sp] = s0\n 28033: s0 = u64 [a1 + 0x18]\n 28036: t2 = u64 [a1]\n 28038: a3 = u64 [a1 + 0x10]\n 28041: a1 = u64 [a1 + 0x8]\n 28044: t0 = s0 + 0x1\n 28047: t1 = s0 <u 0xffffffffffffffff\n 28050: a5 = a3 <u 0xffffffffffffffff\n 28053: a5 = t1 if t0 != 0\n 28056: t0 = a1 + 0x1\n 28059: t1 = a1 <u 0xffffffffffffffff\n 28062: a4 = t2 <u 0xfffffffffffffffe\n 28065: a4 = t1 if t0 != 0\n 28068: a2 = a3 & s0\n 28071: a2 = a2 + 0x1\n 28074: a4 = a5 if a2 != 0\n 28077: jump @605 if a4 == 0\n      : @604 (gas: 16)\n 28080: a2 = t2 + 0x2\n 28083: a4 = a2 <u t2\n 28086: a5 = a1 + a4\n 28089: a1 = a5 <u a1\n 28092: a1 = a4 if a4 == 0\n 28095: a1 = a1 + a3\n 28098: a3 = a1 <u a3\n 28101: a3 = a3 + s0\n 28104: u64 [a0] = a2\n 28106: u64 [a0 + 0x8] = a5\n 28109: u64 [a0 + 0x10] = a1\n 28112: u64 [a0 + 0x18] = a3\n 28115: ra = u64 [sp + 0x8]\n 28118: s0 = u64 [sp]\n 28120: sp = sp + 0x10\n 28123: ret\n      : @605 (gas: 7)\n 28125: a1 = 0x20050\n 28130: a2 = i32 [0x20044]\n 28135: u64 [0x20068] = 0\n 28140: u64 [0x20060] = 0\n 28145: u64 [0x20050] = 0x717b484e\n 28154: u64 [0x20058] = 0\n 28159: jump @607 if a2 >u 63\n      : @606 (gas: 2)\n 28163: u32 [0x20044] = 0x40\n 28169: fallthrough\n      : @607 (gas: 14)\n 28170: u32 [0x20070] = 0x11000000\n 28179: u32 [0x2006c] = 0\n 28184: u32 [0x20068] = 0\n 28189: u32 [0x20064] = 0\n 28194: u32 [0x20060] = 0\n 28199: u32 [0x2005c] = 0\n 28204: u32 [0x20058] = 0\n 28209: u32 [0x20054] = 0\n 28214: i32 a1 = a1 + 0\n 28216: a0 = 0x1\n 28219: a2 = 0x24\n 28222: ra = 0x54\n 28225: ecalli 5 // 'seal_return'\n 28227: fallthrough\n      : @608 [@dyn 42] (gas: 19)\n 28228: sp = sp + 0xfffffffffffffff0\n 28231: u64 [sp + 0x8] = ra\n 28234: u64 [sp] = s0\n 28236: s0 = u64 [a1 + 0x18]\n 28239: t2 = u64 [a1]\n 28241: a3 = u64 [a1 + 0x10]\n 28244: a1 = u64 [a1 + 0x8]\n 28247: t0 = s0 + 0x1\n 28250: t1 = s0 <u 0xffffffffffffffff\n 28253: a5 = a3 <u 0xffffffffffffffff\n 28256: a5 = t1 if t0 != 0\n 28259: t0 = a1 + 0x1\n 28262: t1 = a1 <u 0xffffffffffffffff\n 28265: a4 = t2 <u 0xfffffffffffffffd\n 28268: a4 = t1 if t0 != 0\n 28271: a2 = a3 & s0\n 28274: a2 = a2 + 0x1\n 28277: a4 = a5 if a2 != 0\n 28280: jump @610 if a4 == 0\n      : @609 (gas: 16)\n 28283: a2 = t2 + 0x3\n 28286: a4 = a2 <u t2\n 28289: a5 = a1 + a4\n 28292: a1 = a5 <u a1\n 28295: a1 = a4 if a4 == 0\n 28298: a1 = a1 + a3\n 28301: a3 = a1 <u a3\n 28304: a3 = a3 + s0\n 28307: u64 [a0] = a2\n 28309: u64 [a0 + 0x8] = a5\n 28312: u64 [a0 + 0x10] = a1\n 28315: u64 [a0 + 0x18] = a3\n 28318: ra = u64 [sp + 0x8]\n 28321: s0 = u64 [sp]\n 28323: sp = sp + 0x10\n 28326: ret\n      : @610 (gas: 7)\n 28328: a1 = 0x20050\n 28333: a2 = i32 [0x20044]\n 28338: u64 [0x20068] = 0\n 28343: u64 [0x20060] = 0\n 28348: u64 [0x20050] = 0x717b484e\n 28357: u64 [0x20058] = 0\n 28362: jump @612 if a2 >u 63\n      : @611 (gas: 2)\n 28366: u32 [0x20044] = 0x40\n 28372: fallthrough\n      : @612 (gas: 14)\n 28373: u32 [0x20070] = 0x11000000\n 28382: u32 [0x2006c] = 0\n 28387: u32 [0x20068] = 0\n 28392: u32 [0x20064] = 0\n 28397: u32 [0x20060] = 0\n 28402: u32 [0x2005c] = 0\n 28407: u32 [0x20058] = 0\n 28412: u32 [0x20054] = 0\n 28417: i32 a1 = a1 + 0\n 28419: a0 = 0x1\n 28422: a2 = 0x24\n 28425: ra = 0x56\n 28428: ecalli 5 // 'seal_return'\n 28430: fallthrough\n      : @613 [@dyn 43] (gas: 19)\n 28431: sp = sp + 0xfffffffffffffff0\n 28434: u64 [sp + 0x8] = ra\n 28437: u64 [sp] = s0\n 28439: s0 = u64 [a1 + 0x18]\n 28442: t2 = u64 [a1]\n 28444: a3 = u64 [a1 + 0x10]\n 28447: a1 = u64 [a1 + 0x8]\n 28450: t0 = s0 + 0x1\n 28453: t1 = s0 <u 0xffffffffffffffff\n 28456: a5 = a3 <u 0xffffffffffffffff\n 28459: a5 = t1 if t0 != 0\n 28462: t0 = a1 + 0x1\n 28465: t1 = a1 <u 0xffffffffffffffff\n 28468: a4 = t2 <u 0xfffffffffffffffc\n 28471: a4 = t1 if t0 != 0\n 28474: a2 = a3 & s0\n 28477: a2 = a2 + 0x1\n 28480: a4 = a5 if a2 != 0\n 28483: jump @615 if a4 == 0\n      : @614 (gas: 16)\n 28486: a2 = t2 + 0x4\n 28489: a4 = a2 <u t2\n 28492: a5 = a1 + a4\n 28495: a1 = a5 <u a1\n 28498: a1 = a4 if a4 == 0\n 28501: a1 = a1 + a3\n 28504: a3 = a1 <u a3\n 28507: a3 = a3 + s0\n 28510: u64 [a0] = a2\n 28512: u64 [a0 + 0x8] = a5\n 28515: u64 [a0 + 0x10] = a1\n 28518: u64 [a0 + 0x18] = a3\n 28521: ra = u64 [sp + 0x8]\n 28524: s0 = u64 [sp]\n 28526: sp = sp + 0x10\n 28529: ret\n      : @615 (gas: 7)\n 28531: a1 = 0x20050\n 28536: a2 = i32 [0x20044]\n 28541: u64 [0x20068] = 0\n 28546: u64 [0x20060] = 0\n 28551: u64 [0x20050] = 0x717b484e\n 28560: u64 [0x20058] = 0\n 28565: jump @617 if a2 >u 63\n      : @616 (gas: 2)\n 28569: u32 [0x20044] = 0x40\n 28575: fallthrough\n      : @617 (gas: 14)\n 28576: u32 [0x20070] = 0x11000000\n 28585: u32 [0x2006c] = 0\n 28590: u32 [0x20068] = 0\n 28595: u32 [0x20064] = 0\n 28600: u32 [0x20060] = 0\n 28605: u32 [0x2005c] = 0\n 28610: u32 [0x20058] = 0\n 28615: u32 [0x20054] = 0\n 28620: i32 a1 = a1 + 0\n 28622: a0 = 0x1\n 28625: a2 = 0x24\n 28628: ra = 0x58\n 28631: ecalli 5 // 'seal_return'\n 28633: fallthrough\n      : @618 [@dyn 44] (gas: 19)\n 28634: sp = sp + 0xfffffffffffffff0\n 28637: u64 [sp + 0x8] = ra\n 28640: u64 [sp] = s0\n 28642: s0 = u64 [a1 + 0x18]\n 28645: t2 = u64 [a1]\n 28647: a3 = u64 [a1 + 0x10]\n 28650: a1 = u64 [a1 + 0x8]\n 28653: t0 = s0 + 0x1\n 28656: t1 = s0 <u 0xffffffffffffffff\n 28659: a5 = a3 <u 0xffffffffffffffff\n 28662: a5 = t1 if t0 != 0\n 28665: t0 = a1 + 0x1\n 28668: t1 = a1 <u 0xffffffffffffffff\n 28671: a4 = t2 <u 0xfffffffffffffffb\n 28674: a4 = t1 if t0 != 0\n 28677: a2 = a3 & s0\n 28680: a2 = a2 + 0x1\n 28683: a4 = a5 if a2 != 0\n 28686: jump @620 if a4 == 0\n      : @619 (gas: 16)\n 28689: a2 = t2 + 0x5\n 28692: a4 = a2 <u t2\n 28695: a5 = a1 + a4\n 28698: a1 = a5 <u a1\n 28701: a1 = a4 if a4 == 0\n 28704: a1 = a1 + a3\n 28707: a3 = a1 <u a3\n 28710: a3 = a3 + s0\n 28713: u64 [a0] = a2\n 28715: u64 [a0 + 0x8] = a5\n 28718: u64 [a0 + 0x10] = a1\n 28721: u64 [a0 + 0x18] = a3\n 28724: ra = u64 [sp + 0x8]\n 28727: s0 = u64 [sp]\n 28729: sp = sp + 0x10\n 28732: ret\n      : @620 (gas: 7)\n 28734: a1 = 0x20050\n 28739: a2 = i32 [0x20044]\n 28744: u64 [0x20068] = 0\n 28749: u64 [0x20060] = 0\n 28754: u64 [0x20050] = 0x717b484e\n 28763: u64 [0x20058] = 0\n 28768: jump @622 if a2 >u 63\n      : @621 (gas: 2)\n 28772: u32 [0x20044] = 0x40\n 28778: fallthrough\n      : @622 (gas: 14)\n 28779: u32 [0x20070] = 0x11000000\n 28788: u32 [0x2006c] = 0\n 28793: u32 [0x20068] = 0\n 28798: u32 [0x20064] = 0\n 28803: u32 [0x20060] = 0\n 28808: u32 [0x2005c] = 0\n 28813: u32 [0x20058] = 0\n 28818: u32 [0x20054] = 0\n 28823: i32 a1 = a1 + 0\n 28825: a0 = 0x1\n 28828: a2 = 0x24\n 28831: ra = 0x5a\n 28834: ecalli 5 // 'seal_return'\n 28836: fallthrough\n      : @623 [@dyn 45] (gas: 12)\n 28837: sp = sp + 0xffffffffffffffe8\n 28840: u64 [sp + 0x10] = ra\n 28843: u64 [sp + 0x8] = s0\n 28846: u64 [sp] = s1\n 28848: a1 = u64 [a0 + 0x10]\n 28851: a2 = u64 [a0 + 0x18]\n 28854: a3 = u64 [a0 + 0x8]\n 28857: a0 = u64 [a0]\n 28859: a2 = a2 | a3\n 28862: a0 = a0 | a1\n 28865: a0 = a0 | a2\n 28868: jump @625 if a0 == 0\n      : @624 (gas: 5)\n 28871: ra = u64 [sp + 0x10]\n 28874: s0 = u64 [sp + 0x8]\n 28877: s1 = u64 [sp]\n 28879: sp = sp + 0x18\n 28882: ret\n      : @625 (gas: 3)\n 28884: t0 = 0x20044\n 28889: s0 = i32 [0x20044]\n 28894: jump @627 if s0 >u 95\n      : @626 (gas: 3)\n 28898: s0 = 0x60\n 28901: u32 [0x20044] = s0\n 28906: fallthrough\n      : @627 (gas: 17)\n 28907: a2 = 0x20050\n 28912: a0 = u64 [0x20098]\n 28917: a3 = u64 [0x200a8]\n 28922: a4 = u64 [0x20090]\n 28927: s1 = u64 [0x200a0]\n 28932: a1 = reverse a0\n 28934: a0 = reverse a3\n 28936: a4 = reverse a4\n 28938: ra = reverse s1\n 28940: a3 = ra | a4\n 28943: a5 = a0 | a1\n 28946: a5 = a5 | a3\n 28949: a5 = a5 >> 0x20\n 28952: a3 = a3 | a1\n 28955: a3 = a3 << 0x20\n 28958: a3 = a3 | a5\n 28961: jump @645 if a3 != 0\n      : @628 (gas: 2)\n 28965: i32 a3 = a0 >> 0x10\n 28968: jump @645 if a3 != 0\n      : @629 (gas: 4)\n 28972: t2 = 0x1ffe0\n 28977: a3 = a0 + 0x3f\n 28980: a3 = a3 & t2\n 28983: jump @645 if a3 >u 65536\n      : @630 (gas: 1)\n 28990: jump @632 if s0 >=u a3\n      : @631 (gas: 3)\n 28993: u32 [0x20044] = a3\n 28998: s0 = a3\n 29000: fallthrough\n      : @632 (gas: 40)\n 29001: i32 a5 = a0 + 0\n 29003: s1 = a2 + a5\n 29006: u8 [s1 + 31] = 0\n 29009: u8 [s1 + 30] = 0\n 29012: u8 [s1 + 29] = 0\n 29015: u8 [s1 + 28] = 0\n 29018: u8 [s1 + 27] = 0\n 29021: u8 [s1 + 26] = 0\n 29024: u8 [s1 + 25] = 0\n 29027: u8 [s1 + 24] = 0\n 29030: u8 [s1 + 23] = 0\n 29033: u8 [s1 + 22] = 0\n 29036: u8 [s1 + 21] = 0\n 29039: u8 [s1 + 20] = 0\n 29042: u8 [s1 + 19] = 0\n 29045: u8 [s1 + 18] = 0\n 29048: u8 [s1 + 17] = 0\n 29051: u8 [s1 + 16] = 0\n 29054: u8 [s1 + 15] = 0\n 29057: u8 [s1 + 14] = 0\n 29060: u8 [s1 + 13] = 0\n 29063: u8 [s1 + 12] = 0\n 29066: u8 [s1 + 11] = 0\n 29069: u8 [s1 + 10] = 0\n 29072: u8 [s1 + 9] = 0\n 29075: u8 [s1 + 8] = 0\n 29078: u8 [s1 + 7] = 0\n 29081: u8 [s1 + 6] = 0\n 29084: u8 [s1 + 5] = 0\n 29087: u8 [s1 + 4] = 0\n 29090: u8 [s1 + 3] = 0xa0\n 29095: u8 [s1 + 2] = 0x79\n 29099: u8 [s1 + 1] = 0xc3\n 29104: t1 = a1 | a4\n 29107: a1 = 0xfffffffc\n 29117: a1 = a0 <u a1\n 29120: a1 = 0 if ra != 0\n 29122: a1 = 0 if t1 != 0\n 29124: u8 [s1 + 0] = 0x8\n 29127: jump @645 if a1 == 0\n      : @633 (gas: 1)\n 29131: jump @645 if a5 >=u 65532\n      : @634 (gas: 3)\n 29138: a1 = a0 + 0x43\n 29141: a3 = a1 & 0x1ffe0\n 29146: jump @645 if a3 >u 65536\n      : @635 (gas: 2)\n 29153: i32 a4 = a0 + 0x4\n 29156: jump @637 if s0 >=u a3\n      : @636 (gas: 3)\n 29159: u32 [0x20044] = a3\n 29164: s0 = a3\n 29166: fallthrough\n      : @637 (gas: 38)\n 29167: a4 = a4 + a2\n 29170: u8 [a4 + 31] = 0x20\n 29174: u8 [a4 + 30] = 0\n 29177: u8 [a4 + 29] = 0\n 29180: u8 [a4 + 28] = 0\n 29183: u8 [a4 + 27] = 0\n 29186: u8 [a4 + 26] = 0\n 29189: u8 [a4 + 25] = 0\n 29192: u8 [a4 + 24] = 0\n 29195: u8 [a4 + 23] = 0\n 29198: u8 [a4 + 22] = 0\n 29201: u8 [a4 + 21] = 0\n 29204: u8 [a4 + 20] = 0\n 29207: u8 [a4 + 19] = 0\n 29210: u8 [a4 + 18] = 0\n 29213: u8 [a4 + 17] = 0\n 29216: u8 [a4 + 16] = 0\n 29219: u8 [a4 + 15] = 0\n 29222: u8 [a4 + 14] = 0\n 29225: u8 [a4 + 13] = 0\n 29228: u8 [a4 + 12] = 0\n 29231: u8 [a4 + 11] = 0\n 29234: u8 [a4 + 10] = 0\n 29237: u8 [a4 + 9] = 0\n 29240: u8 [a4 + 8] = 0\n 29243: u8 [a4 + 7] = 0\n 29246: u8 [a4 + 6] = 0\n 29249: u8 [a4 + 5] = 0\n 29252: u8 [a4 + 4] = 0\n 29255: u8 [a4 + 3] = 0\n 29258: u8 [a4 + 2] = 0\n 29261: u8 [a4 + 1] = 0\n 29264: a1 = 0xffffffdc\n 29274: a1 = a0 <u a1\n 29277: a1 = 0 if ra != 0\n 29279: a1 = 0 if t1 != 0\n 29281: u8 [a4 + 0] = 0\n 29283: jump @645 if a1 == 0\n      : @638 (gas: 1)\n 29287: jump @645 if a5 >=u 65500\n      : @639 (gas: 3)\n 29294: a1 = a0 + 0x63\n 29297: a3 = a1 & 0x1ffe0\n 29302: jump @645 if a3 >u 65536\n      : @640 (gas: 2)\n 29309: i32 a4 = a0 + 0x24\n 29312: jump @642 if s0 >=u a3\n      : @641 (gas: 3)\n 29315: u32 [0x20044] = a3\n 29320: s0 = a3\n 29322: fallthrough\n      : @642 (gas: 38)\n 29323: a4 = a4 + a2\n 29326: u8 [a4 + 31] = 0x12\n 29330: u8 [a4 + 30] = 0\n 29333: u8 [a4 + 29] = 0\n 29336: u8 [a4 + 28] = 0\n 29339: u8 [a4 + 27] = 0\n 29342: u8 [a4 + 26] = 0\n 29345: u8 [a4 + 25] = 0\n 29348: u8 [a4 + 24] = 0\n 29351: u8 [a4 + 23] = 0\n 29354: u8 [a4 + 22] = 0\n 29357: u8 [a4 + 21] = 0\n 29360: u8 [a4 + 20] = 0\n 29363: u8 [a4 + 19] = 0\n 29366: u8 [a4 + 18] = 0\n 29369: u8 [a4 + 17] = 0\n 29372: u8 [a4 + 16] = 0\n 29375: u8 [a4 + 15] = 0\n 29378: u8 [a4 + 14] = 0\n 29381: u8 [a4 + 13] = 0\n 29384: u8 [a4 + 12] = 0\n 29387: u8 [a4 + 11] = 0\n 29390: u8 [a4 + 10] = 0\n 29393: u8 [a4 + 9] = 0\n 29396: u8 [a4 + 8] = 0\n 29399: u8 [a4 + 7] = 0\n 29402: u8 [a4 + 6] = 0\n 29405: u8 [a4 + 5] = 0\n 29408: u8 [a4 + 4] = 0\n 29411: u8 [a4 + 3] = 0\n 29414: u8 [a4 + 2] = 0\n 29417: u8 [a4 + 1] = 0\n 29420: a1 = 0xffffffbc\n 29430: a1 = a0 <u a1\n 29433: a1 = 0 if ra != 0\n 29435: a1 = 0 if t1 != 0\n 29437: u8 [a4 + 0] = 0\n 29439: jump @645 if a1 == 0\n      : @643 (gas: 1)\n 29442: jump @645 if a5 >=u 65468\n      : @644 (gas: 3)\n 29448: a1 = a0 + 0x83\n 29452: a3 = a1 & 0x1ffe0\n 29457: jump @646 if a3 <=u 65536\n      : @645 (gas: 1)\n 29463: trap\n      : @646 (gas: 1)\n 29464: jump @648 if s0 >=u a3\n      : @647 (gas: 2)\n 29467: u32 [0x20044] = a3\n 29472: fallthrough\n      : @648 (gas: 38)\n 29473: i32 a1 = a0 + 0x44\n 29476: a2 = a2 + a1\n 29479: u8 [a2 + 31] = 0\n 29482: u8 [a2 + 30] = 0\n 29485: u8 [a2 + 29] = 0\n 29488: u8 [a2 + 28] = 0\n 29491: u8 [a2 + 27] = 0\n 29494: u8 [a2 + 26] = 0\n 29497: u8 [a2 + 25] = 0\n 29500: u8 [a2 + 24] = 0\n 29503: u8 [a2 + 23] = 0\n 29506: u8 [a2 + 22] = 0\n 29509: u8 [a2 + 21] = 0\n 29512: u8 [a2 + 20] = 0\n 29515: u8 [a2 + 19] = 0\n 29518: u8 [a2 + 18] = 0\n 29521: u8 [a2 + 17] = 0x74\n 29525: u8 [a2 + 16] = 0x75\n 29529: u8 [a2 + 15] = 0x70\n 29533: u8 [a2 + 14] = 0x6e\n 29537: u8 [a2 + 13] = 0x69\n 29541: u8 [a2 + 12] = 0x2d\n 29545: u8 [a2 + 11] = 0x64\n 29549: u8 [a2 + 10] = 0x61\n 29553: u8 [a2 + 9] = 0x62\n 29557: u8 [a2 + 8] = 0x2d\n 29561: u8 [a2 + 7] = 0x72\n 29565: a4 = 0x65\n 29568: u8 [a2 + 0x6] = a4\n 29571: u8 [a2 + 5] = 0x69\n 29575: a5 = 0x66\n 29578: u8 [a2 + 0x4] = a5\n 29581: u8 [a2 + 3] = 0x69\n 29585: u8 [a2 + 2] = 0x72\n 29589: u8 [a2 + 0x1] = a4\n 29592: u8 [a2 + 0] = 0x76\n 29595: a1 = 0x64\n 29598: ra = 92, jump @0\n      : @649 [@dyn 46] (gas: 6)\n 29603: i32 a1 = a0 + 0\n 29605: a0 = 0x1\n 29608: a2 = 0x64\n 29611: ra = 0x5e\n 29614: ecalli 5 // 'seal_return'\n 29616: fallthrough\n      : @650 [@dyn 47] (gas: 12)\n 29617: sp = sp + 0xffffffffffffffe8\n 29620: u64 [sp + 0x10] = ra\n 29623: u64 [sp + 0x8] = s0\n 29626: u64 [sp] = s1\n 29628: a1 = u64 [a0 + 0x10]\n 29631: a2 = u64 [a0 + 0x18]\n 29634: a3 = u64 [a0 + 0x8]\n 29637: a0 = u64 [a0]\n 29639: a2 = a2 | a3\n 29642: a0 = a0 | a1\n 29645: a0 = a0 | a2\n 29648: jump @652 if a0 == 0\n      : @651 (gas: 5)\n 29651: ra = u64 [sp + 0x10]\n 29654: s0 = u64 [sp + 0x8]\n 29657: s1 = u64 [sp]\n 29659: sp = sp + 0x18\n 29662: ret\n      : @652 (gas: 3)\n 29664: t0 = 0x20044\n 29669: s0 = i32 [0x20044]\n 29674: jump @654 if s0 >u 95\n      : @653 (gas: 3)\n 29678: s0 = 0x60\n 29681: u32 [0x20044] = s0\n 29686: fallthrough\n      : @654 (gas: 17)\n 29687: a2 = 0x20050\n 29692: a0 = u64 [0x20098]\n 29697: a3 = u64 [0x200a8]\n 29702: a4 = u64 [0x20090]\n 29707: s1 = u64 [0x200a0]\n 29712: a1 = reverse a0\n 29714: a0 = reverse a3\n 29716: a4 = reverse a4\n 29718: ra = reverse s1\n 29720: a3 = ra | a4\n 29723: a5 = a0 | a1\n 29726: a5 = a5 | a3\n 29729: a5 = a5 >> 0x20\n 29732: a3 = a3 | a1\n 29735: a3 = a3 << 0x20\n 29738: a3 = a3 | a5\n 29741: jump @672 if a3 != 0\n      : @655 (gas: 2)\n 29745: i32 a3 = a0 >> 0x10\n 29748: jump @672 if a3 != 0\n      : @656 (gas: 4)\n 29752: t2 = 0x1ffe0\n 29757: a3 = a0 + 0x3f\n 29760: a3 = a3 & t2\n 29763: jump @672 if a3 >u 65536\n      : @657 (gas: 1)\n 29770: jump @659 if s0 >=u a3\n      : @658 (gas: 3)\n 29773: u32 [0x20044] = a3\n 29778: s0 = a3\n 29780: fallthrough\n      : @659 (gas: 40)\n 29781: i32 a5 = a0 + 0\n 29783: s1 = a2 + a5\n 29786: u8 [s1 + 31] = 0\n 29789: u8 [s1 + 30] = 0\n 29792: u8 [s1 + 29] = 0\n 29795: u8 [s1 + 28] = 0\n 29798: u8 [s1 + 27] = 0\n 29801: u8 [s1 + 26] = 0\n 29804: u8 [s1 + 25] = 0\n 29807: u8 [s1 + 24] = 0\n 29810: u8 [s1 + 23] = 0\n 29813: u8 [s1 + 22] = 0\n 29816: u8 [s1 + 21] = 0\n 29819: u8 [s1 + 20] = 0\n 29822: u8 [s1 + 19] = 0\n 29825: u8 [s1 + 18] = 0\n 29828: u8 [s1 + 17] = 0\n 29831: u8 [s1 + 16] = 0\n 29834: u8 [s1 + 15] = 0\n 29837: u8 [s1 + 14] = 0\n 29840: u8 [s1 + 13] = 0\n 29843: u8 [s1 + 12] = 0\n 29846: u8 [s1 + 11] = 0\n 29849: u8 [s1 + 10] = 0\n 29852: u8 [s1 + 9] = 0\n 29855: u8 [s1 + 8] = 0\n 29858: u8 [s1 + 7] = 0\n 29861: u8 [s1 + 6] = 0\n 29864: u8 [s1 + 5] = 0\n 29867: u8 [s1 + 4] = 0\n 29870: u8 [s1 + 3] = 0xa0\n 29875: u8 [s1 + 2] = 0x79\n 29879: u8 [s1 + 1] = 0xc3\n 29884: t1 = a1 | a4\n 29887: a1 = 0xfffffffc\n 29897: a1 = a0 <u a1\n 29900: a1 = 0 if ra != 0\n 29902: a1 = 0 if t1 != 0\n 29904: u8 [s1 + 0] = 0x8\n 29907: jump @672 if a1 == 0\n      : @660 (gas: 1)\n 29911: jump @672 if a5 >=u 65532\n      : @661 (gas: 3)\n 29918: a1 = a0 + 0x43\n 29921: a3 = a1 & 0x1ffe0\n 29926: jump @672 if a3 >u 65536\n      : @662 (gas: 2)\n 29933: i32 a4 = a0 + 0x4\n 29936: jump @664 if s0 >=u a3\n      : @663 (gas: 3)\n 29939: u32 [0x20044] = a3\n 29944: s0 = a3\n 29946: fallthrough\n      : @664 (gas: 38)\n 29947: a4 = a4 + a2\n 29950: u8 [a4 + 31] = 0x20\n 29954: u8 [a4 + 30] = 0\n 29957: u8 [a4 + 29] = 0\n 29960: u8 [a4 + 28] = 0\n 29963: u8 [a4 + 27] = 0\n 29966: u8 [a4 + 26] = 0\n 29969: u8 [a4 + 25] = 0\n 29972: u8 [a4 + 24] = 0\n 29975: u8 [a4 + 23] = 0\n 29978: u8 [a4 + 22] = 0\n 29981: u8 [a4 + 21] = 0\n 29984: u8 [a4 + 20] = 0\n 29987: u8 [a4 + 19] = 0\n 29990: u8 [a4 + 18] = 0\n 29993: u8 [a4 + 17] = 0\n 29996: u8 [a4 + 16] = 0\n 29999: u8 [a4 + 15] = 0\n 30002: u8 [a4 + 14] = 0\n 30005: u8 [a4 + 13] = 0\n 30008: u8 [a4 + 12] = 0\n 30011: u8 [a4 + 11] = 0\n 30014: u8 [a4 + 10] = 0\n 30017: u8 [a4 + 9] = 0\n 30020: u8 [a4 + 8] = 0\n 30023: u8 [a4 + 7] = 0\n 30026: u8 [a4 + 6] = 0\n 30029: u8 [a4 + 5] = 0\n 30032: u8 [a4 + 4] = 0\n 30035: u8 [a4 + 3] = 0\n 30038: u8 [a4 + 2] = 0\n 30041: u8 [a4 + 1] = 0\n 30044: a1 = 0xffffffdc\n 30054: a1 = a0 <u a1\n 30057: a1 = 0 if ra != 0\n 30059: a1 = 0 if t1 != 0\n 30061: u8 [a4 + 0] = 0\n 30063: jump @672 if a1 == 0\n      : @665 (gas: 1)\n 30067: jump @672 if a5 >=u 65500\n      : @666 (gas: 3)\n 30074: a1 = a0 + 0x63\n 30077: a3 = a1 & 0x1ffe0\n 30082: jump @672 if a3 >u 65536\n      : @667 (gas: 2)\n 30089: i32 a4 = a0 + 0x24\n 30092: jump @669 if s0 >=u a3\n      : @668 (gas: 3)\n 30095: u32 [0x20044] = a3\n 30100: s0 = a3\n 30102: fallthrough\n      : @669 (gas: 38)\n 30103: a4 = a4 + a2\n 30106: u8 [a4 + 31] = 0x1f\n 30110: u8 [a4 + 30] = 0\n 30113: u8 [a4 + 29] = 0\n 30116: u8 [a4 + 28] = 0\n 30119: u8 [a4 + 27] = 0\n 30122: u8 [a4 + 26] = 0\n 30125: u8 [a4 + 25] = 0\n 30128: u8 [a4 + 24] = 0\n 30131: u8 [a4 + 23] = 0\n 30134: u8 [a4 + 22] = 0\n 30137: u8 [a4 + 21] = 0\n 30140: u8 [a4 + 20] = 0\n 30143: u8 [a4 + 19] = 0\n 30146: u8 [a4 + 18] = 0\n 30149: u8 [a4 + 17] = 0\n 30152: u8 [a4 + 16] = 0\n 30155: u8 [a4 + 15] = 0\n 30158: u8 [a4 + 14] = 0\n 30161: u8 [a4 + 13] = 0\n 30164: u8 [a4 + 12] = 0\n 30167: u8 [a4 + 11] = 0\n 30170: u8 [a4 + 10] = 0\n 30173: u8 [a4 + 9] = 0\n 30176: u8 [a4 + 8] = 0\n 30179: u8 [a4 + 7] = 0\n 30182: u8 [a4 + 6] = 0\n 30185: u8 [a4 + 5] = 0\n 30188: u8 [a4 + 4] = 0\n 30191: u8 [a4 + 3] = 0\n 30194: u8 [a4 + 2] = 0\n 30197: u8 [a4 + 1] = 0\n 30200: a1 = 0xffffffbc\n 30210: a1 = a0 <u a1\n 30213: a1 = 0 if ra != 0\n 30215: a1 = 0 if t1 != 0\n 30217: u8 [a4 + 0] = 0\n 30219: jump @672 if a1 == 0\n      : @670 (gas: 1)\n 30222: jump @672 if a5 >=u 65468\n      : @671 (gas: 3)\n 30228: a1 = a0 + 0x83\n 30232: a3 = a1 & 0x1ffe0\n 30237: jump @673 if a3 <=u 65536\n      : @672 (gas: 1)\n 30243: trap\n      : @673 (gas: 1)\n 30244: jump @675 if s0 >=u a3\n      : @674 (gas: 2)\n 30247: u32 [0x20044] = a3\n 30252: fallthrough\n      : @675 (gas: 42)\n 30253: i32 a1 = a0 + 0x44\n 30256: a2 = a2 + a1\n 30259: u8 [a2 + 31] = 0\n 30262: u8 [a2 + 30] = 0x64\n 30266: u8 [a2 + 29] = 0x6c\n 30270: u8 [a2 + 28] = 0x65\n 30274: t1 = 0x69\n 30277: u8 [a2 + 0x1b] = t1\n 30280: t0 = 0x66\n 30283: u8 [a2 + 0x1a] = t0\n 30286: s1 = 0x2d\n 30289: u8 [a2 + 0x19] = s1\n 30292: a5 = 0x72\n 30295: u8 [a2 + 0x18] = a5\n 30298: a4 = 0x61\n 30301: u8 [a2 + 0x17] = a4\n 30304: u8 [a2 + 22] = 0x6c\n 30308: u8 [a2 + 0x15] = a4\n 30311: u8 [a2 + 20] = 0x63\n 30315: s0 = 0x73\n 30318: u8 [a2 + 0x13] = s0\n 30321: u8 [a2 + 0x12] = s1\n 30324: u8 [a2 + 17] = 0x6b\n 30328: u8 [a2 + 0x10] = a5\n 30331: u8 [a2 + 0xf] = a4\n 30334: u8 [a2 + 14] = 0x6e\n 30338: u8 [a2 + 0xd] = s0\n 30341: u8 [a2 + 0xc] = s1\n 30344: u8 [a2 + 11] = 0x65\n 30348: u8 [a2 + 10] = 0x74\n 30352: u8 [a2 + 9] = 0x67\n 30356: u8 [a2 + 0x8] = s1\n 30359: u8 [a2 + 0x7] = a5\n 30362: u8 [a2 + 6] = 0x65\n 30366: u8 [a2 + 0x5] = t1\n 30369: u8 [a2 + 0x4] = t0\n 30372: u8 [a2 + 0x3] = t1\n 30375: u8 [a2 + 0x2] = a5\n 30378: u8 [a2 + 1] = 0x65\n 30382: u8 [a2 + 0] = 0x76\n 30385: a1 = 0x64\n 30388: ra = 96, jump @0\n      : @676 [@dyn 48] (gas: 6)\n 30393: i32 a1 = a0 + 0\n 30395: a0 = 0x1\n 30398: a2 = 0x64\n 30401: ra = 0x62\n 30404: ecalli 5 // 'seal_return'\n 30406: fallthrough\n      : @677 [@dyn 49] (gas: 24)\n 30407: sp = sp + 0xfffffffffffffae0\n 30411: u64 [sp + 0x518] = ra\n 30415: u64 [sp + 0x510] = s0\n 30419: u64 [sp + 0x508] = s1\n 30423: s0 = sp + 0x520\n 30427: sp = sp & 0xfffffffffffffff0\n 30430: a3 = u64 [a2 + 0x18]\n 30433: u64 [sp + 0x118] = a3\n 30437: a3 = u64 [a2 + 0x10]\n 30440: u64 [sp + 0x110] = a3\n 30444: a3 = u64 [a2 + 0x8]\n 30447: u64 [sp + 0x130] = a3\n 30451: a2 = u64 [a2]\n 30453: u64 [sp + 0x128] = a2\n 30457: s1 = u64 [a1 + 0x10]\n 30460: a2 = u64 [a1]\n 30462: u64 [sp + 0x1c8] = a2\n 30466: a2 = u64 [a1 + 0x18]\n 30469: u64 [sp + 0x1d0] = a2\n 30473: a1 = u64 [a1 + 0x8]\n 30476: u64 [sp + 0x1b8] = a1\n 30480: u64 [sp + 0x100] = a0\n 30484: a0 = sp + 0x4e0\n 30488: ra = 100, jump @893\n      : @678 [@dyn 50] (gas: 12)\n 30493: a3 = u64 [sp + 0x1c8]\n 30497: a0 = u64 [sp + 0x1d0]\n 30501: a1 = u64 [sp + 0x1b8]\n 30505: a0 = a0 | a1\n 30508: a1 = a3 | s1\n 30511: a1 = a1 | a0\n 30514: a1 = a1 >> 0x20\n 30517: u64 [sp + 0x1b0] = s1\n 30521: a0 = a0 | s1\n 30524: a0 = a0 << 0x20\n 30527: a0 = a0 | a1\n 30530: jump @680 if a0 == 0\n      : @679 (gas: 1)\n 30533: jump @821\n      : @680 (gas: 2)\n 30536: i32 a0 = a3 >> 0x10\n 30539: jump @682 if a0 == 0\n      : @681 (gas: 1)\n 30542: jump @821\n      : @682 (gas: 4)\n 30545: a0 = a3 + 0x3f\n 30548: u64 [sp + 496] = 0x1ffe0\n 30555: a2 = a0 & 0x1ffe0\n 30560: jump @684 if a2 <=u 65536\n      : @683 (gas: 1)\n 30566: jump @821\n      : @684 (gas: 11)\n 30569: a0 = 0x20044\n 30574: a1 = u64 [sp + 0x4f8]\n 30578: u64 [sp + 0x140] = a1\n 30582: a1 = u64 [sp + 0x4f0]\n 30586: u64 [sp + 0x138] = a1\n 30590: a1 = u64 [sp + 0x4e8]\n 30594: u64 [sp + 0x120] = a1\n 30598: u64 [sp + 0x218] = a0\n 30602: a0 = i32 [0x20044]\n 30607: t1 = u64 [sp + 0x4e0]\n 30611: jump @686 if a0 >=u a2\n      : @685 (gas: 4)\n 30614: a0 = u64 [sp + 0x218]\n 30618: u32 [a0] = a2\n 30620: a0 = a2\n 30622: fallthrough\n      : @686 (gas: 101)\n 30623: u64 [sp + 0x210] = a0\n 30627: u64 [sp + 0x1e0] = a2\n 30631: t2 = 0x20050\n 30636: i32 a1 = a3 + 0\n 30638: a0 = t2 + a1\n 30641: a1 = u8 [a0 + 0x11]\n 30644: a2 = u8 [a0 + 0x10]\n 30647: a3 = u8 [a0 + 0x12]\n 30650: a4 = u8 [a0 + 0x13]\n 30653: a1 = a1 << 0x8\n 30656: a1 = a1 | a2\n 30659: a3 = a3 << 0x10\n 30662: a4 = a4 << 0x18\n 30665: a3 = a3 | a4\n 30668: a1 = a1 | a3\n 30671: a2 = u8 [a0 + 0x15]\n 30674: a3 = u8 [a0 + 0x14]\n 30677: a4 = u8 [a0 + 0x16]\n 30680: a5 = u8 [a0 + 0x17]\n 30683: a2 = a2 << 0x8\n 30686: a2 = a2 | a3\n 30689: a4 = a4 << 0x10\n 30692: a5 = a5 << 0x18\n 30695: a4 = a4 | a5\n 30698: a2 = a2 | a4\n 30701: a2 = a2 << 0x20\n 30704: ra = a2 | a1\n 30707: a2 = u8 [a0 + 0x1]\n 30710: a3 = u8 [a0]\n 30712: a4 = u8 [a0 + 0x2]\n 30715: a5 = u8 [a0 + 0x3]\n 30718: a2 = a2 << 0x8\n 30721: a2 = a2 | a3\n 30724: a4 = a4 << 0x10\n 30727: a5 = a5 << 0x18\n 30730: a4 = a4 | a5\n 30733: a2 = a2 | a4\n 30736: a3 = u8 [a0 + 0x5]\n 30739: a4 = u8 [a0 + 0x4]\n 30742: a5 = u8 [a0 + 0x6]\n 30745: s1 = u8 [a0 + 0x7]\n 30748: a3 = a3 << 0x8\n 30751: a3 = a3 | a4\n 30754: a5 = a5 << 0x10\n 30757: s1 = s1 << 0x18\n 30760: a5 = a5 | s1\n 30763: a3 = a3 | a5\n 30766: a3 = a3 << 0x20\n 30769: t0 = a3 | a2\n 30772: a2 = u8 [a0 + 0x19]\n 30775: a3 = u8 [a0 + 0x18]\n 30778: a4 = u8 [a0 + 0x1a]\n 30781: a5 = u8 [a0 + 0x1b]\n 30784: a2 = a2 << 0x8\n 30787: a2 = a2 | a3\n 30790: a4 = a4 << 0x10\n 30793: a5 = a5 << 0x18\n 30796: a4 = a4 | a5\n 30799: a2 = a2 | a4\n 30802: a3 = u8 [a0 + 0x1d]\n 30805: a4 = u8 [a0 + 0x1c]\n 30808: a5 = u8 [a0 + 0x1e]\n 30811: s1 = u8 [a0 + 0x1f]\n 30814: a3 = a3 << 0x8\n 30817: a3 = a3 | a4\n 30820: a5 = a5 << 0x10\n 30823: s1 = s1 << 0x18\n 30826: a5 = a5 | s1\n 30829: a3 = a3 | a5\n 30832: a3 = a3 << 0x20\n 30835: a3 = a3 | a2\n 30838: a2 = u8 [a0 + 0x9]\n 30841: a4 = u8 [a0 + 0x8]\n 30844: a5 = u8 [a0 + 0xa]\n 30847: s1 = u8 [a0 + 0xb]\n 30850: a2 = a2 << 0x8\n 30853: a2 = a2 | a4\n 30856: a5 = a5 << 0x10\n 30859: s1 = s1 << 0x18\n 30862: a5 = a5 | s1\n 30865: a2 = a2 | a5\n 30868: a4 = u8 [a0 + 0xd]\n 30871: a5 = u8 [a0 + 0xc]\n 30874: s1 = u8 [a0 + 0xe]\n 30877: u64 [sp + 0x1d8] = a0\n 30881: a1 = u8 [a0 + 0xf]\n 30884: a4 = a4 << 0x8\n 30887: a4 = a4 | a5\n 30890: s1 = s1 << 0x10\n 30893: a1 = a1 << 0x18\n 30896: a1 = a1 | s1\n 30899: a1 = a1 | a4\n 30902: a1 = a1 << 0x20\n 30905: a4 = a1 | a2\n 30908: u64 [sp + 0x200] = a3\n 30912: a1 = a4 & a3\n 30915: u64 [sp + 0x208] = ra\n 30919: a2 = t0 & ra\n 30922: a1 = a1 & a2\n 30925: u64 [sp + 0x1e8] = t2\n 30929: jump @688 if a1 != 4294967295\n      : @687 (gas: 1)\n 30933: jump @828\n      : @688 (gas: 19)\n 30936: a2 = t1 + 0x80\n 30940: a1 = a2 <u t1\n 30943: a3 = u64 [sp + 0x120]\n 30947: a5 = a3 + a1\n 30950: s1 = a5 <u a3\n 30953: s1 = a1 if a1 == 0\n 30956: a1 = u64 [sp + 0x138]\n 30960: s1 = s1 + a1\n 30963: a1 = s1 <u a1\n 30966: a0 = u64 [sp + 0x140]\n 30970: a1 = a1 + a0\n 30973: a3 = a2 | s1\n 30976: a1 = a1 | a5\n 30979: a3 = a3 | a1\n 30982: a3 = a3 >> 0x20\n 30985: a1 = a1 | s1\n 30988: a1 = a1 << 0x20\n 30991: a1 = a1 | a3\n 30994: jump @690 if a1 == 0\n      : @689 (gas: 1)\n 30997: jump @821\n      : @690 (gas: 2)\n 31000: i32 a1 = a2 >> 0x10\n 31003: jump @692 if a1 == 0\n      : @691 (gas: 1)\n 31006: jump @821\n      : @692 (gas: 4)\n 31009: a1 = a2 + 0x3f\n 31012: a3 = u64 [sp + 0x1f0]\n 31016: a3 = a3 & a1\n 31019: jump @694 if a3 <=u 65536\n      : @693 (gas: 1)\n 31025: jump @821\n      : @694 (gas: 4)\n 31028: ra = a4\n 31030: u64 [sp + 0x108] = t1\n 31034: a0 = u64 [sp + 0x210]\n 31038: jump @696 if a0 >=u a3\n      : @695 (gas: 4)\n 31041: a1 = u64 [sp + 0x218]\n 31045: u32 [a1] = a3\n 31047: a0 = a3\n 31049: fallthrough\n      : @696 (gas: 105)\n 31050: u64 [sp + 0x210] = a0\n 31054: u64 [sp + 0x168] = a3\n 31058: i32 a2 = a2 + 0\n 31060: t2 = t2 + a2\n 31063: a1 = u8 [t2 + 0x11]\n 31066: a2 = u8 [t2 + 0x10]\n 31069: a3 = u8 [t2 + 0x12]\n 31072: a5 = u8 [t2 + 0x13]\n 31075: a1 = a1 << 0x8\n 31078: a1 = a1 | a2\n 31081: a3 = a3 << 0x10\n 31084: a5 = a5 << 0x18\n 31087: a3 = a3 | a5\n 31090: a1 = a1 | a3\n 31093: a2 = u8 [t2 + 0x15]\n 31096: a3 = u8 [t2 + 0x14]\n 31099: a5 = u8 [t2 + 0x16]\n 31102: s1 = u8 [t2 + 0x17]\n 31105: a2 = a2 << 0x8\n 31108: a2 = a2 | a3\n 31111: a5 = a5 << 0x10\n 31114: s1 = s1 << 0x18\n 31117: a5 = a5 | s1\n 31120: a2 = a2 | a5\n 31123: a2 = a2 << 0x20\n 31126: a5 = a2 | a1\n 31129: a1 = u8 [t2 + 0x1]\n 31132: a2 = u8 [t2]\n 31134: a3 = u8 [t2 + 0x2]\n 31137: s1 = u8 [t2 + 0x3]\n 31140: a1 = a1 << 0x8\n 31143: a1 = a1 | a2\n 31146: a3 = a3 << 0x10\n 31149: s1 = s1 << 0x18\n 31152: a3 = a3 | s1\n 31155: a1 = a1 | a3\n 31158: a2 = u8 [t2 + 0x5]\n 31161: a3 = u8 [t2 + 0x4]\n 31164: s1 = u8 [t2 + 0x6]\n 31167: a4 = u8 [t2 + 0x7]\n 31170: a2 = a2 << 0x8\n 31173: a2 = a2 | a3\n 31176: s1 = s1 << 0x10\n 31179: a4 = a4 << 0x18\n 31182: a4 = a4 | s1\n 31185: a2 = a2 | a4\n 31188: a2 = a2 << 0x20\n 31191: s1 = a2 | a1\n 31194: a1 = u8 [t2 + 0x19]\n 31197: a2 = u8 [t2 + 0x18]\n 31200: a3 = u8 [t2 + 0x1a]\n 31203: a4 = u8 [t2 + 0x1b]\n 31206: a1 = a1 << 0x8\n 31209: a1 = a1 | a2\n 31212: a3 = a3 << 0x10\n 31215: a4 = a4 << 0x18\n 31218: a3 = a3 | a4\n 31221: a1 = a1 | a3\n 31224: a2 = u8 [t2 + 0x1d]\n 31227: a3 = u8 [t2 + 0x1c]\n 31230: a4 = u8 [t2 + 0x1e]\n 31233: t1 = u8 [t2 + 0x1f]\n 31236: a2 = a2 << 0x8\n 31239: a2 = a2 | a3\n 31242: a4 = a4 << 0x10\n 31245: t1 = t1 << 0x18\n 31248: a3 = t1 | a4\n 31251: a2 = a2 | a3\n 31254: a2 = a2 << 0x20\n 31257: t1 = a2 | a1\n 31260: a1 = u8 [t2 + 0x9]\n 31263: a3 = u8 [t2 + 0x8]\n 31266: a4 = u8 [t2 + 0xa]\n 31269: a0 = u8 [t2 + 0xb]\n 31272: a1 = a1 << 0x8\n 31275: a1 = a1 | a3\n 31278: a4 = a4 << 0x10\n 31281: a0 = a0 << 0x18\n 31284: a0 = a0 | a4\n 31287: a0 = a0 | a1\n 31290: a1 = u8 [t2 + 0xd]\n 31293: a3 = u8 [t2 + 0xc]\n 31296: a4 = u8 [t2 + 0xe]\n 31299: u64 [sp + 0x170] = t2\n 31303: a2 = u8 [t2 + 0xf]\n 31306: a1 = a1 << 0x8\n 31309: a1 = a1 | a3\n 31312: a4 = a4 << 0x10\n 31315: a2 = a2 << 0x18\n 31318: a2 = a2 | a4\n 31321: a1 = a1 | a2\n 31324: a1 = a1 << 0x20\n 31327: a0 = a0 | a1\n 31330: a0 = reverse a0\n 31332: a2 = reverse t1\n 31334: a1 = reverse s1\n 31336: a3 = reverse a5\n 31338: a1 = a1 | a3\n 31341: a3 = a2 | a0\n 31344: a3 = a3 | a1\n 31347: a3 = a3 >> 0x20\n 31350: a0 = a0 | a1\n 31353: a0 = a0 << 0x20\n 31356: a0 = a0 | a3\n 31359: jump @698 if a0 == 0\n      : @697 (gas: 1)\n 31362: jump @821\n      : @698 (gas: 2)\n 31365: i32 a0 = a2 >> 0x10\n 31368: jump @700 if a0 == 0\n      : @699 (gas: 1)\n 31371: jump @821\n      : @700 (gas: 4)\n 31374: a0 = a2 + 0x3f\n 31377: a5 = u64 [sp + 0x1f0]\n 31381: a5 = a5 & a0\n 31384: jump @702 if a5 <=u 65536\n      : @701 (gas: 1)\n 31390: jump @821\n      : @702 (gas: 17)\n 31393: a0 = u64 [sp + 0x200]\n 31397: a3 = reverse a0\n 31399: t2 = a3 + 0x1\n 31402: a0 = u64 [sp + 0x208]\n 31406: a1 = reverse a0\n 31408: a0 = t2 <u 0x1\n 31411: t1 = a1 + a0\n 31414: a0 = t2 | t1\n 31417: a4 = reverse ra\n 31419: a1 = a0 <u 0x1\n 31422: ra = a4 + a1\n 31425: t0 = reverse t0\n 31427: a0 = ra <u a4\n 31430: a0 = a0 + t0\n 31433: u64 [sp + 0x208] = a0\n 31437: a0 = u64 [sp + 0x210]\n 31441: jump @704 if a0 >=u a5\n      : @703 (gas: 3)\n 31444: a0 = u64 [sp + 0x218]\n 31448: u32 [a0] = a5\n 31450: fallthrough\n      : @704 (gas: 112)\n 31451: i32 a0 = a2 + 0\n 31453: a1 = u64 [sp + 0x1e8]\n 31457: a0 = a0 + a1\n 31460: a2 = u8 [a0 + 0x1]\n 31463: a4 = u8 [a0]\n 31465: a5 = u8 [a0 + 0x2]\n 31468: s1 = u8 [a0 + 0x3]\n 31471: a2 = a2 << 0x8\n 31474: a2 = a2 | a4\n 31477: a5 = a5 << 0x10\n 31480: s1 = s1 << 0x18\n 31483: a5 = a5 | s1\n 31486: a2 = a2 | a5\n 31489: a4 = u8 [a0 + 0x5]\n 31492: a5 = u8 [a0 + 0x4]\n 31495: s1 = u8 [a0 + 0x6]\n 31498: a1 = u8 [a0 + 0x7]\n 31501: a4 = a4 << 0x8\n 31504: a4 = a4 | a5\n 31507: s1 = s1 << 0x10\n 31510: a1 = a1 << 0x18\n 31513: a1 = a1 | s1\n 31516: a1 = a1 | a4\n 31519: a1 = a1 << 0x20\n 31522: a1 = a1 | a2\n 31525: u64 [sp + 0x210] = a1\n 31529: a1 = u8 [a0 + 0x11]\n 31532: a2 = u8 [a0 + 0x10]\n 31535: a4 = u8 [a0 + 0x12]\n 31538: s1 = u8 [a0 + 0x13]\n 31541: a1 = a1 << 0x8\n 31544: a1 = a1 | a2\n 31547: a4 = a4 << 0x10\n 31550: s1 = s1 << 0x18\n 31553: a4 = a4 | s1\n 31556: a1 = a1 | a4\n 31559: a2 = u8 [a0 + 0x15]\n 31562: a4 = u8 [a0 + 0x14]\n 31565: s1 = u8 [a0 + 0x16]\n 31568: a5 = u8 [a0 + 0x17]\n 31571: a2 = a2 << 0x8\n 31574: a2 = a2 | a4\n 31577: s1 = s1 << 0x10\n 31580: a5 = a5 << 0x18\n 31583: a5 = a5 | s1\n 31586: a2 = a2 | a5\n 31589: a2 = a2 << 0x20\n 31592: s1 = a2 | a1\n 31595: a1 = u8 [a0 + 0x9]\n 31598: a2 = u8 [a0 + 0x8]\n 31601: a4 = u8 [a0 + 0xa]\n 31604: a5 = u8 [a0 + 0xb]\n 31607: a1 = a1 << 0x8\n 31610: a1 = a1 | a2\n 31613: a4 = a4 << 0x10\n 31616: a5 = a5 << 0x18\n 31619: a4 = a4 | a5\n 31622: a1 = a1 | a4\n 31625: a2 = u8 [a0 + 0xd]\n 31628: a4 = u8 [a0 + 0xc]\n 31631: a5 = u8 [a0 + 0xe]\n 31634: t0 = u8 [a0 + 0xf]\n 31637: a2 = a2 << 0x8\n 31640: a2 = a2 | a4\n 31643: a5 = a5 << 0x10\n 31646: t0 = t0 << 0x18\n 31649: a4 = t0 | a5\n 31652: a2 = a2 | a4\n 31655: a2 = a2 << 0x20\n 31658: a2 = a2 | a1\n 31661: a1 = u8 [a0 + 0x19]\n 31664: a4 = u8 [a0 + 0x18]\n 31667: a5 = u8 [a0 + 0x1a]\n 31670: a3 = u8 [a0 + 0x1b]\n 31673: a1 = a1 << 0x8\n 31676: a1 = a1 | a4\n 31679: a5 = a5 << 0x10\n 31682: a3 = a3 << 0x18\n 31685: a3 = a3 | a5\n 31688: a1 = a1 | a3\n 31691: a3 = u8 [a0 + 0x1d]\n 31694: a4 = u8 [a0 + 0x1c]\n 31697: a5 = u8 [a0 + 0x1e]\n 31700: a0 = u8 [a0 + 0x1f]\n 31703: a3 = a3 << 0x8\n 31706: a3 = a3 | a4\n 31709: a5 = a5 << 0x10\n 31712: a0 = a0 << 0x18\n 31715: a0 = a0 | a5\n 31718: a0 = a0 | a3\n 31721: a0 = a0 << 0x20\n 31724: a0 = a0 | a1\n 31727: a1 = u64 [sp + 0x210]\n 31731: a1 = reverse a1\n 31733: a3 = u64 [sp + 0x208]\n 31737: a1 = a1 ^ a3\n 31740: a3 = reverse s1\n 31742: a3 = t1 ^ a3\n 31745: a1 = a1 | a3\n 31748: a2 = reverse a2\n 31750: a2 = ra ^ a2\n 31753: a0 = reverse a0\n 31755: a0 = t2 ^ a0\n 31758: a0 = a0 | a2\n 31761: a0 = a0 | a1\n 31764: a0 = a0 <u 0x1\n 31767: u64 [sp + 1240] = 0\n 31771: u64 [sp + 1232] = 0\n 31775: u64 [sp + 0x4c0] = a0\n 31779: a0 = sp + 0x4c0\n 31783: u64 [sp + 1224] = 0\n 31787: ra = 102, jump @623\n      : @705 [@dyn 51] (gas: 3)\n 31792: a0 = u64 [sp + 0x218]\n 31796: t0 = i32 [a0]\n 31798: jump @707 if t0 >u 95\n      : @706 (gas: 4)\n 31802: t0 = 0x60\n 31805: a0 = u64 [sp + 0x218]\n 31809: u32 [a0] = t0\n 31811: fallthrough\n      : @707 (gas: 16)\n 31812: t1 = u64 [sp + 0x1e8]\n 31816: a1 = u64 [t1 + 0x50]\n 31819: a2 = u64 [t1 + 0x58]\n 31822: a3 = u64 [t1 + 0x40]\n 31825: a4 = u64 [t1 + 0x48]\n 31828: t2 = reverse a1\n 31830: s1 = reverse a2\n 31832: a1 = reverse a3\n 31834: a0 = reverse a4\n 31836: a3 = a0 | a1\n 31839: a2 = s1 <u 0xffffffffffffffc0\n 31842: a2 = 0 if t2 != 0\n 31844: u64 [sp + 0x210] = a3\n 31848: a2 = 0 if a3 != 0\n 31850: ra = u64 [sp + 0x1e0]\n 31854: jump @709 if a2 != 0\n      : @708 (gas: 1)\n 31857: jump @831\n      : @709 (gas: 24)\n 31860: a2 = s1 + 0x40\n 31863: a3 = a2 <u s1\n 31866: a4 = t2 + a3\n 31869: a5 = a4 <u t2\n 31872: a5 = a3 if a3 == 0\n 31875: a5 = a5 + a0\n 31878: a3 = a5 <u a0\n 31881: a3 = a3 + a1\n 31884: a3 = reverse a3\n 31886: a5 = reverse a5\n 31888: a4 = reverse a4\n 31890: a2 = reverse a2\n 31892: u64 [t1 + 0x58] = a2\n 31895: u64 [t1 + 0x50] = a4\n 31898: u64 [t1 + 0x48] = a5\n 31901: a2 = s1 | a0\n 31904: a4 = t2 | a1\n 31907: a2 = a2 | a4\n 31910: a2 = a2 >> 0x20\n 31913: a4 = a4 | a0\n 31916: a4 = a4 << 0x20\n 31919: a2 = a2 | a4\n 31922: u64 [t1 + 0x40] = a3\n 31925: jump @711 if a2 == 0\n      : @710 (gas: 1)\n 31928: jump @821\n      : @711 (gas: 3)\n 31931: u64 [sp + 0x1c0] = a0\n 31935: i32 a2 = s1 >> 0x10\n 31938: jump @713 if a2 == 0\n      : @712 (gas: 1)\n 31941: jump @821\n      : @713 (gas: 5)\n 31944: a2 = s1 + 0x3f\n 31947: a0 = u64 [sp + 0x1f0]\n 31951: a2 = a2 & a0\n 31954: a3 = 0x10000\n 31959: jump @715 if a3 >=u a2\n      : @714 (gas: 1)\n 31962: jump @821\n      : @715 (gas: 2)\n 31965: a4 = a1\n 31967: jump @717 if t0 >=u a2\n      : @716 (gas: 4)\n 31970: a0 = u64 [sp + 0x218]\n 31974: u32 [a0] = a2\n 31976: t0 = a2\n 31978: fallthrough\n      : @717 (gas: 40)\n 31979: a2 = 0xffffffe0\n 31989: a2 = s1 <u a2\n 31992: a2 = 0 if t2 != 0\n 31994: a0 = u64 [sp + 0x210]\n 31998: a2 = 0 if a0 != 0\n 32000: i32 a1 = s1 + 0\n 32002: a1 = a1 + t1\n 32005: u8 [a1 + 31] = 0\n 32008: u8 [a1 + 30] = 0\n 32011: u8 [a1 + 29] = 0\n 32014: u8 [a1 + 28] = 0\n 32017: u8 [a1 + 27] = 0\n 32020: u8 [a1 + 26] = 0\n 32023: u8 [a1 + 25] = 0\n 32026: u8 [a1 + 24] = 0\n 32029: u8 [a1 + 23] = 0\n 32032: u8 [a1 + 22] = 0\n 32035: u8 [a1 + 21] = 0\n 32038: u8 [a1 + 20] = 0\n 32041: u8 [a1 + 19] = 0\n 32044: u8 [a1 + 18] = 0\n 32047: u8 [a1 + 17] = 0\n 32050: u8 [a1 + 16] = 0\n 32053: u8 [a1 + 15] = 0\n 32056: u8 [a1 + 14] = 0\n 32059: u8 [a1 + 13] = 0\n 32062: u8 [a1 + 12] = 0\n 32065: u8 [a1 + 11] = 0\n 32068: u8 [a1 + 10] = 0\n 32071: u8 [a1 + 9] = 0\n 32074: u8 [a1 + 8] = 0\n 32077: u8 [a1 + 7] = 0\n 32080: u8 [a1 + 6] = 0\n 32083: u8 [a1 + 5] = 0\n 32086: u8 [a1 + 4] = 0\n 32089: u8 [a1 + 3] = 0\n 32092: u8 [a1 + 2] = 0\n 32095: u8 [a1 + 1] = 0\n 32098: u8 [a1 + 0] = 0\n 32100: jump @719 if a2 != 0\n      : @718 (gas: 1)\n 32103: jump @821\n      : @719 (gas: 2)\n 32106: i32 a1 = s1 >> 0x5\n 32109: jump @721 if a1 <u 2047\n      : @720 (gas: 1)\n 32114: jump @821\n      : @721 (gas: 4)\n 32117: a1 = s1 + 0x5f\n 32120: a2 = u64 [sp + 0x1f0]\n 32124: a2 = a2 & a1\n 32127: jump @723 if a2 <=u 65536\n      : @722 (gas: 1)\n 32133: jump @821\n      : @723 (gas: 2)\n 32136: i32 a1 = s1 + 0x20\n 32139: jump @725 if t0 >=u a2\n      : @724 (gas: 4)\n 32142: a0 = u64 [sp + 0x218]\n 32146: u32 [a0] = a2\n 32148: t0 = a2\n 32150: fallthrough\n      : @725 (gas: 54)\n 32151: u64 [sp + 512] = 0\n 32155: u64 [sp + 504] = 0\n 32159: u64 [sp + 528] = 0\n 32163: u64 [sp + 520] = 0\n 32167: a1 = a1 + t1\n 32170: u8 [a1 + 31] = 0\n 32173: u8 [a1 + 30] = 0\n 32176: u8 [a1 + 29] = 0\n 32179: u8 [a1 + 28] = 0\n 32182: u8 [a1 + 27] = 0\n 32185: u8 [a1 + 26] = 0\n 32188: u8 [a1 + 25] = 0\n 32191: u8 [a1 + 24] = 0\n 32194: u8 [a1 + 23] = 0\n 32197: u8 [a1 + 22] = 0\n 32200: u8 [a1 + 21] = 0\n 32203: u8 [a1 + 20] = 0\n 32206: u8 [a1 + 19] = 0\n 32209: u8 [a1 + 18] = 0\n 32212: u8 [a1 + 17] = 0\n 32215: u8 [a1 + 16] = 0\n 32218: u8 [a1 + 15] = 0\n 32221: u8 [a1 + 14] = 0\n 32224: u8 [a1 + 13] = 0\n 32227: u8 [a1 + 12] = 0\n 32230: u8 [a1 + 11] = 0\n 32233: u8 [a1 + 10] = 0\n 32236: u8 [a1 + 9] = 0\n 32239: u8 [a1 + 8] = 0\n 32242: u8 [a1 + 7] = 0\n 32245: u8 [a1 + 6] = 0\n 32248: u8 [a1 + 5] = 0\n 32251: u8 [a1 + 4] = 0\n 32254: u8 [a1 + 3] = 0\n 32257: u8 [a1 + 2] = 0\n 32260: u8 [a1 + 1] = 0\n 32263: u8 [a1 + 0] = 0\n 32265: a1 = u64 [sp + 0x1c8]\n 32269: a0 = a1 + 0x20\n 32272: u64 [sp + 0x160] = a0\n 32276: a1 = a0 <u a1\n 32279: a2 = u64 [sp + 0x1b8]\n 32283: a0 = a2 + a1\n 32286: u64 [sp + 0x158] = a0\n 32290: a2 = a0 <u a2\n 32293: a2 = a1 if a1 == 0\n 32296: a0 = u64 [sp + 0x1b0]\n 32300: a2 = a2 + a0\n 32303: u64 [sp + 0x150] = a2\n 32307: a1 = a2 <u a0\n 32310: a0 = u64 [sp + 0x1d0]\n 32314: a1 = a1 + a0\n 32317: u64 [sp + 0x148] = a1\n 32321: jump @729\n      : @726 (gas: 203)\n 32324: i32 a1 = t0 + 0\n 32326: a3 = ra + a1\n 32329: a0 = u8 [a3 + 0x19]\n 32332: a1 = u8 [a3 + 0x18]\n 32335: a2 = u8 [a3 + 0x1a]\n 32338: a4 = u8 [a3 + 0x1b]\n 32341: a0 = a0 << 0x8\n 32344: a0 = a0 | a1\n 32347: a2 = a2 << 0x10\n 32350: a4 = a4 << 0x18\n 32353: a2 = a2 | a4\n 32356: a0 = a0 | a2\n 32359: a1 = u8 [a3 + 0x1d]\n 32362: a2 = u8 [a3 + 0x1c]\n 32365: a4 = u8 [a3 + 0x1e]\n 32368: a5 = u8 [a3 + 0x1f]\n 32371: a1 = a1 << 0x8\n 32374: a1 = a1 | a2\n 32377: a4 = a4 << 0x10\n 32380: a5 = a5 << 0x18\n 32383: a4 = a4 | a5\n 32386: a1 = a1 | a4\n 32389: a1 = a1 << 0x20\n 32392: a0 = a0 | a1\n 32395: u64 [sp + 0x210] = a0\n 32399: a0 = u8 [a3 + 0x11]\n 32402: a1 = u8 [a3 + 0x10]\n 32405: a2 = u8 [a3 + 0x12]\n 32408: a4 = u8 [a3 + 0x13]\n 32411: a0 = a0 << 0x8\n 32414: a0 = a0 | a1\n 32417: a2 = a2 << 0x10\n 32420: a4 = a4 << 0x18\n 32423: a2 = a2 | a4\n 32426: a0 = a0 | a2\n 32429: a1 = u8 [a3 + 0x15]\n 32432: a2 = u8 [a3 + 0x14]\n 32435: a4 = u8 [a3 + 0x16]\n 32438: a5 = u8 [a3 + 0x17]\n 32441: a1 = a1 << 0x8\n 32444: a1 = a1 | a2\n 32447: a4 = a4 << 0x10\n 32450: a5 = a5 << 0x18\n 32453: a4 = a4 | a5\n 32456: a1 = a1 | a4\n 32459: a1 = a1 << 0x20\n 32462: a0 = a0 | a1\n 32465: u64 [sp + 0x208] = a0\n 32469: a0 = u8 [a3 + 0x9]\n 32472: a2 = u8 [a3 + 0x8]\n 32475: a4 = u8 [a3 + 0xa]\n 32478: a5 = u8 [a3 + 0xb]\n 32481: a0 = a0 << 0x8\n 32484: a0 = a0 | a2\n 32487: a4 = a4 << 0x10\n 32490: a5 = a5 << 0x18\n 32493: a4 = a4 | a5\n 32496: a0 = a0 | a4\n 32499: a2 = u8 [a3 + 0xd]\n 32502: a4 = u8 [a3 + 0xc]\n 32505: a5 = u8 [a3 + 0xe]\n 32508: s1 = u8 [a3 + 0xf]\n 32511: a2 = a2 << 0x8\n 32514: a2 = a2 | a4\n 32517: a5 = a5 << 0x10\n 32520: s1 = s1 << 0x18\n 32523: a5 = a5 | s1\n 32526: a2 = a2 | a5\n 32529: a2 = a2 << 0x20\n 32532: t1 = a2 | a0\n 32535: a0 = u8 [a3 + 0x1]\n 32538: a4 = u8 [a3]\n 32540: a5 = u8 [a3 + 0x2]\n 32543: s1 = u8 [a3 + 0x3]\n 32546: a0 = a0 << 0x8\n 32549: a0 = a0 | a4\n 32552: a5 = a5 << 0x10\n 32555: s1 = s1 << 0x18\n 32558: a5 = a5 | s1\n 32561: a0 = a0 | a5\n 32564: a4 = u8 [a3 + 0x5]\n 32567: a5 = u8 [a3 + 0x4]\n 32570: s1 = u8 [a3 + 0x6]\n 32573: a3 = u8 [a3 + 0x7]\n 32576: a4 = a4 << 0x8\n 32579: a4 = a4 | a5\n 32582: s1 = s1 << 0x10\n 32585: a3 = a3 << 0x18\n 32588: a3 = a3 | s1\n 32591: a3 = a3 | a4\n 32594: a3 = a3 << 0x20\n 32597: ra = a3 | a0\n 32600: t0 = u64 [sp + 0x188]\n 32604: a0 = u8 [t0 + 0x1]\n 32607: a4 = u8 [t0]\n 32609: a5 = u8 [t0 + 0x2]\n 32612: s1 = u8 [t0 + 0x3]\n 32615: a0 = a0 << 0x8\n 32618: a0 = a0 | a4\n 32621: a5 = a5 << 0x10\n 32624: s1 = s1 << 0x18\n 32627: a5 = a5 | s1\n 32630: a0 = a0 | a5\n 32633: a4 = u8 [t0 + 0x5]\n 32636: a5 = u8 [t0 + 0x4]\n 32639: s1 = u8 [t0 + 0x6]\n 32642: a1 = u8 [t0 + 0x7]\n 32645: a4 = a4 << 0x8\n 32648: a4 = a4 | a5\n 32651: s1 = s1 << 0x10\n 32654: a1 = a1 << 0x18\n 32657: a1 = a1 | s1\n 32660: a1 = a1 | a4\n 32663: a1 = a1 << 0x20\n 32666: t2 = a1 | a0\n 32669: a0 = u8 [t0 + 0x9]\n 32672: a1 = u8 [t0 + 0x8]\n 32675: a5 = u8 [t0 + 0xa]\n 32678: s1 = u8 [t0 + 0xb]\n 32681: a0 = a0 << 0x8\n 32684: a0 = a0 | a1\n 32687: a5 = a5 << 0x10\n 32690: s1 = s1 << 0x18\n 32693: a5 = a5 | s1\n 32696: a0 = a0 | a5\n 32699: a1 = u8 [t0 + 0xd]\n 32702: a5 = u8 [t0 + 0xc]\n 32705: s1 = u8 [t0 + 0xe]\n 32708: a2 = u8 [t0 + 0xf]\n 32711: a1 = a1 << 0x8\n 32714: a1 = a1 | a5\n 32717: s1 = s1 << 0x10\n 32720: a2 = a2 << 0x18\n 32723: a2 = a2 | s1\n 32726: a1 = a1 | a2\n 32729: a1 = a1 << 0x20\n 32732: a5 = a1 | a0\n 32735: a0 = u8 [t0 + 0x11]\n 32738: a1 = u8 [t0 + 0x10]\n 32741: a2 = u8 [t0 + 0x12]\n 32744: s1 = u8 [t0 + 0x13]\n 32747: a0 = a0 << 0x8\n 32750: a0 = a0 | a1\n 32753: a2 = a2 << 0x10\n 32756: s1 = s1 << 0x18\n 32759: a2 = a2 | s1\n 32762: a0 = a0 | a2\n 32765: a1 = u8 [t0 + 0x15]\n 32768: a2 = u8 [t0 + 0x14]\n 32771: s1 = u8 [t0 + 0x16]\n 32774: a3 = u8 [t0 + 0x17]\n 32777: a1 = a1 << 0x8\n 32780: a1 = a1 | a2\n 32783: s1 = s1 << 0x10\n 32786: a3 = a3 << 0x18\n 32789: a3 = a3 | s1\n 32792: a1 = a1 | a3\n 32795: a1 = a1 << 0x20\n 32798: a4 = a1 | a0\n 32801: a1 = u8 [t0 + 0x19]\n 32804: a2 = u8 [t0 + 0x18]\n 32807: a3 = u8 [t0 + 0x1a]\n 32810: s1 = u8 [t0 + 0x1b]\n 32813: a1 = a1 << 0x8\n 32816: a1 = a1 | a2\n 32819: a3 = a3 << 0x10\n 32822: s1 = s1 << 0x18\n 32825: a3 = a3 | s1\n 32828: a1 = a1 | a3\n 32831: a2 = u8 [t0 + 0x1d]\n 32834: a3 = u8 [t0 + 0x1c]\n 32837: s1 = u8 [t0 + 0x1e]\n 32840: a0 = u8 [t0 + 0x1f]\n 32843: a2 = a2 << 0x8\n 32846: a2 = a2 | a3\n 32849: s1 = s1 << 0x10\n 32852: a0 = a0 << 0x18\n 32855: a0 = a0 | s1\n 32858: a0 = a0 | a2\n 32861: a0 = a0 << 0x20\n 32864: a0 = a0 | a1\n 32867: a1 = reverse ra\n 32869: a2 = reverse t1\n 32871: a3 = u64 [sp + 0x208]\n 32875: a3 = reverse a3\n 32877: s1 = u64 [sp + 0x210]\n 32881: s1 = reverse s1\n 32883: t1 = reverse a0\n 32885: a0 = reverse a4\n 32887: a4 = reverse a5\n 32889: a5 = reverse t2\n 32891: u64 [sp + 0x2b0] = a2\n 32895: u64 [sp + 0x2a8] = a3\n 32899: u64 [sp + 0x2a0] = s1\n 32903: u64 [sp + 0x2b8] = a1\n 32907: u64 [sp + 0x298] = a5\n 32911: u64 [sp + 0x290] = a4\n 32915: u64 [sp + 0x288] = a0\n 32919: a0 = sp + 0x2c0\n 32923: a1 = sp + 0x2a0\n 32927: a2 = sp + 0x280\n 32931: u64 [sp + 0x280] = t1\n 32935: ra = 104, jump @1253\n      : @727 [@dyn 52] (gas: 20)\n 32940: a0 = u64 [sp + 0x2c0]\n 32944: a1 = u64 [sp + 0x2c8]\n 32948: a2 = u64 [sp + 0x2d0]\n 32952: a3 = u64 [sp + 0x2d8]\n 32956: u64 [sp + 0x238] = a3\n 32960: u64 [sp + 0x230] = a2\n 32964: u64 [sp + 0x228] = a1\n 32968: u64 [sp + 0x220] = a0\n 32972: a0 = u64 [sp + 0x1b8]\n 32976: u64 [sp + 0x258] = a0\n 32980: a0 = u64 [sp + 0x1c0]\n 32984: u64 [sp + 0x250] = a0\n 32988: a0 = u64 [sp + 0x1c8]\n 32992: u64 [sp + 0x248] = a0\n 32996: a0 = sp + 0x260\n 33000: a1 = sp + 0x240\n 33004: a2 = sp + 0x220\n 33008: a3 = u64 [sp + 0x1d0]\n 33012: u64 [sp + 0x240] = a3\n 33016: ra = 106, jump @1308\n      : @728 [@dyn 53] (gas: 17)\n 33021: a4 = u64 [sp + 0x278]\n 33025: a0 = u64 [sp + 0x270]\n 33029: u64 [sp + 0x1c0] = a0\n 33033: t2 = u64 [sp + 0x268]\n 33037: s1 = u64 [sp + 0x260]\n 33041: a0 = u64 [sp + 0x218]\n 33045: t0 = i32 [a0]\n 33047: a0 = u64 [sp + 0x1b0]\n 33051: u64 [sp + 0x200] = a0\n 33055: a0 = u64 [sp + 0x1a8]\n 33059: u64 [sp + 0x1f8] = a0\n 33063: a0 = u64 [sp + 0x1a0]\n 33067: u64 [sp + 0x210] = a0\n 33071: a0 = u64 [sp + 0x198]\n 33075: u64 [sp + 0x208] = a0\n 33079: ra = u64 [sp + 0x1e0]\n 33083: fallthrough\n      : @729 (gas: 5)\n 33084: u64 [sp + 0x1b8] = a4\n 33088: u64 [sp + 0x1c8] = t2\n 33092: u64 [sp + 0x1d0] = s1\n 33096: i32 a1 = t0 + 0\n 33098: jump @731 if a1 >=u ra\n      : @730 (gas: 4)\n 33101: a0 = u64 [sp + 0x218]\n 33105: u32 [a0] = ra\n 33107: t0 = ra\n 33109: fallthrough\n      : @731 (gas: 110)\n 33110: t2 = u64 [sp + 0x1d8]\n 33114: a1 = u8 [t2 + 0x1]\n 33117: a2 = u8 [t2]\n 33119: a3 = u8 [t2 + 0x2]\n 33122: a4 = u8 [t2 + 0x3]\n 33125: a1 = a1 << 0x8\n 33128: a1 = a1 | a2\n 33131: a3 = a3 << 0x10\n 33134: a4 = a4 << 0x18\n 33137: a3 = a3 | a4\n 33140: a1 = a1 | a3\n 33143: a2 = u8 [t2 + 0x5]\n 33146: a3 = u8 [t2 + 0x4]\n 33149: a4 = u8 [t2 + 0x6]\n 33152: a5 = u8 [t2 + 0x7]\n 33155: a2 = a2 << 0x8\n 33158: a2 = a2 | a3\n 33161: a4 = a4 << 0x10\n 33164: a5 = a5 << 0x18\n 33167: a4 = a4 | a5\n 33170: a2 = a2 | a4\n 33173: a2 = a2 << 0x20\n 33176: t1 = a2 | a1\n 33179: a2 = u8 [t2 + 0x9]\n 33182: a3 = u8 [t2 + 0x8]\n 33185: a4 = u8 [t2 + 0xa]\n 33188: a5 = u8 [t2 + 0xb]\n 33191: a2 = a2 << 0x8\n 33194: a2 = a2 | a3\n 33197: a4 = a4 << 0x10\n 33200: a5 = a5 << 0x18\n 33203: a4 = a4 | a5\n 33206: a2 = a2 | a4\n 33209: a3 = u8 [t2 + 0xd]\n 33212: a4 = u8 [t2 + 0xc]\n 33215: a5 = u8 [t2 + 0xe]\n 33218: s1 = u8 [t2 + 0xf]\n 33221: a3 = a3 << 0x8\n 33224: a3 = a3 | a4\n 33227: a5 = a5 << 0x10\n 33230: s1 = s1 << 0x18\n 33233: a5 = a5 | s1\n 33236: a3 = a3 | a5\n 33239: a3 = a3 << 0x20\n 33242: a2 = a2 | a3\n 33245: a3 = u8 [t2 + 0x11]\n 33248: a4 = u8 [t2 + 0x10]\n 33251: a5 = u8 [t2 + 0x12]\n 33254: s1 = u8 [t2 + 0x13]\n 33257: a3 = a3 << 0x8\n 33260: a3 = a3 | a4\n 33263: a5 = a5 << 0x10\n 33266: s1 = s1 << 0x18\n 33269: a5 = a5 | s1\n 33272: a3 = a3 | a5\n 33275: a4 = u8 [t2 + 0x15]\n 33278: a5 = u8 [t2 + 0x14]\n 33281: s1 = u8 [t2 + 0x16]\n 33284: a0 = u8 [t2 + 0x17]\n 33287: a4 = a4 << 0x8\n 33290: a4 = a4 | a5\n 33293: s1 = s1 << 0x10\n 33296: a0 = a0 << 0x18\n 33299: a0 = a0 | s1\n 33302: a0 = a0 | a4\n 33305: a0 = a0 << 0x20\n 33308: a3 = a3 | a0\n 33311: a0 = u8 [t2 + 0x19]\n 33314: a4 = u8 [t2 + 0x18]\n 33317: a5 = u8 [t2 + 0x1a]\n 33320: s1 = u8 [t2 + 0x1b]\n 33323: a0 = a0 << 0x8\n 33326: a0 = a0 | a4\n 33329: a5 = a5 << 0x10\n 33332: s1 = s1 << 0x18\n 33335: a5 = a5 | s1\n 33338: a0 = a0 | a5\n 33341: a4 = u8 [t2 + 0x1d]\n 33344: a5 = u8 [t2 + 0x1c]\n 33347: s1 = u8 [t2 + 0x1e]\n 33350: a1 = u8 [t2 + 0x1f]\n 33353: a4 = a4 << 0x8\n 33356: a4 = a4 | a5\n 33359: s1 = s1 << 0x10\n 33362: a1 = a1 << 0x18\n 33365: a1 = a1 | s1\n 33368: a1 = a1 | a4\n 33371: a1 = a1 << 0x20\n 33374: a0 = a0 | a1\n 33377: a0 = reverse a0\n 33379: a1 = reverse a3\n 33381: a2 = reverse a2\n 33383: a3 = reverse t1\n 33385: a5 = u64 [sp + 0x1f8]\n 33389: a4 = a5 ^ a1\n 33392: a1 = a5 <u a1\n 33395: a5 = u64 [sp + 0x200]\n 33399: a0 = a5 <u a0\n 33402: a0 = a1 if a4 != 0\n 33405: a4 = u64 [sp + 0x208]\n 33409: a1 = a4 ^ a3\n 33412: a3 = a4 <u a3\n 33415: a5 = u64 [sp + 0x210]\n 33419: a4 = a5 <u a2\n 33422: a4 = a3 if a1 != 0\n 33425: a2 = a2 ^ a5\n 33428: a1 = a1 | a2\n 33431: a0 = a4 if a1 != 0\n 33434: t2 = u64 [sp + 0x1e8]\n 33438: jump @769 if a0 == 0\n      : @732 (gas: 2)\n 33442: i32 a0 = t0 + 0\n 33444: jump @734 if a0 >=u ra\n      : @733 (gas: 4)\n 33447: a0 = u64 [sp + 0x218]\n 33451: u32 [a0] = ra\n 33453: t0 = ra\n 33455: fallthrough\n      : @734 (gas: 40)\n 33456: ra = u64 [sp + 0x210]\n 33460: a0 = ra >> 0x3b\n 33463: a2 = u64 [sp + 0x208]\n 33467: a2 = a2 << 0x5\n 33470: t1 = a2 | a0\n 33473: a2 = u64 [sp + 0x200]\n 33477: a0 = a2 >> 0x3b\n 33480: s1 = u64 [sp + 0x1f8]\n 33484: a1 = s1 << 0x5\n 33487: a0 = a0 | a1\n 33490: a1 = a2 << 0x5\n 33493: a3 = u64 [sp + 0x160]\n 33497: a1 = a1 + a3\n 33500: a3 = a1 <u a3\n 33503: a5 = u64 [sp + 0x158]\n 33507: a0 = a0 + a5\n 33510: a0 = a0 + a3\n 33513: a4 = a0 ^ a5\n 33516: a5 = a0 <u a5\n 33519: a5 = a3 if a4 == 0\n 33522: a3 = s1 >> 0x3b\n 33525: a4 = ra << 0x5\n 33528: a3 = a3 | a4\n 33531: a4 = u64 [sp + 0x150]\n 33535: a3 = a3 + a4\n 33538: a4 = a3 <u a4\n 33541: a2 = u64 [sp + 0x148]\n 33545: a2 = a2 + t1\n 33548: a2 = a2 + a4\n 33551: a5 = a5 + a3\n 33554: a3 = a5 <u a3\n 33557: a2 = a2 + a3\n 33560: a0 = a0 | a2\n 33563: a2 = a1 | a5\n 33566: a2 = a2 | a0\n 33569: a0 = a0 | a5\n 33572: a2 = a2 >> 0x20\n 33575: a0 = a0 << 0x20\n 33578: a0 = a0 | a2\n 33581: jump @736 if a0 == 0\n      : @735 (gas: 1)\n 33584: jump @821\n      : @736 (gas: 2)\n 33587: i32 a0 = a1 >> 0x10\n 33590: jump @738 if a0 == 0\n      : @737 (gas: 1)\n 33593: jump @821\n      : @738 (gas: 4)\n 33596: a0 = a1 + 0x3f\n 33599: a2 = u64 [sp + 0x1f0]\n 33603: a2 = a2 & a0\n 33606: jump @740 if a2 <=u 65536\n      : @739 (gas: 1)\n 33612: jump @821\n      : @740 (gas: 2)\n 33615: i32 t0 = t0 + 0\n 33617: jump @742 if t0 >=u a2\n      : @741 (gas: 3)\n 33620: a0 = u64 [sp + 0x218]\n 33624: u32 [a0] = a2\n 33626: fallthrough\n      : @742 (gas: 117)\n 33627: u64 [sp + 0x180] = a2\n 33631: i32 a1 = a1 + 0\n 33633: t2 = t2 + a1\n 33636: a0 = u8 [t2 + 0x1]\n 33639: a1 = u8 [t2]\n 33641: a2 = u8 [t2 + 0x2]\n 33644: a3 = u8 [t2 + 0x3]\n 33647: a0 = a0 << 0x8\n 33650: a0 = a0 | a1\n 33653: a2 = a2 << 0x10\n 33656: a3 = a3 << 0x18\n 33659: a2 = a2 | a3\n 33662: a0 = a0 | a2\n 33665: a1 = u8 [t2 + 0x5]\n 33668: a2 = u8 [t2 + 0x4]\n 33671: a3 = u8 [t2 + 0x6]\n 33674: a4 = u8 [t2 + 0x7]\n 33677: a1 = a1 << 0x8\n 33680: a1 = a1 | a2\n 33683: a3 = a3 << 0x10\n 33686: a4 = a4 << 0x18\n 33689: a3 = a3 | a4\n 33692: a1 = a1 | a3\n 33695: a1 = a1 << 0x20\n 33698: t0 = a1 | a0\n 33701: a1 = u8 [t2 + 0x9]\n 33704: a2 = u8 [t2 + 0x8]\n 33707: a3 = u8 [t2 + 0xa]\n 33710: a4 = u8 [t2 + 0xb]\n 33713: a1 = a1 << 0x8\n 33716: a1 = a1 | a2\n 33719: a3 = a3 << 0x10\n 33722: a4 = a4 << 0x18\n 33725: a3 = a3 | a4\n 33728: a1 = a1 | a3\n 33731: a2 = u8 [t2 + 0xd]\n 33734: a3 = u8 [t2 + 0xc]\n 33737: a4 = u8 [t2 + 0xe]\n 33740: a5 = u8 [t2 + 0xf]\n 33743: a2 = a2 << 0x8\n 33746: a2 = a2 | a3\n 33749: a4 = a4 << 0x10\n 33752: a5 = a5 << 0x18\n 33755: a4 = a4 | a5\n 33758: a2 = a2 | a4\n 33761: a2 = a2 << 0x20\n 33764: t1 = a2 | a1\n 33767: a2 = u8 [t2 + 0x11]\n 33770: a3 = u8 [t2 + 0x10]\n 33773: a4 = u8 [t2 + 0x12]\n 33776: a5 = u8 [t2 + 0x13]\n 33779: a2 = a2 << 0x8\n 33782: a2 = a2 | a3\n 33785: a4 = a4 << 0x10\n 33788: a5 = a5 << 0x18\n 33791: a4 = a4 | a5\n 33794: a2 = a2 | a4\n 33797: a3 = u8 [t2 + 0x15]\n 33800: a4 = u8 [t2 + 0x14]\n 33803: a5 = u8 [t2 + 0x16]\n 33806: a0 = u8 [t2 + 0x17]\n 33809: a3 = a3 << 0x8\n 33812: a3 = a3 | a4\n 33815: a5 = a5 << 0x10\n 33818: a0 = a0 << 0x18\n 33821: a0 = a0 | a5\n 33824: a0 = a0 | a3\n 33827: a0 = a0 << 0x20\n 33830: a2 = a2 | a0\n 33833: a0 = u8 [t2 + 0x19]\n 33836: a3 = u8 [t2 + 0x18]\n 33839: a4 = u8 [t2 + 0x1a]\n 33842: a5 = u8 [t2 + 0x1b]\n 33845: a0 = a0 << 0x8\n 33848: a0 = a0 | a3\n 33851: a4 = a4 << 0x10\n 33854: a5 = a5 << 0x18\n 33857: a4 = a4 | a5\n 33860: a0 = a0 | a4\n 33863: a3 = u8 [t2 + 0x1d]\n 33866: a4 = u8 [t2 + 0x1c]\n 33869: a5 = u8 [t2 + 0x1e]\n 33872: u64 [sp + 0x188] = t2\n 33876: a1 = u8 [t2 + 0x1f]\n 33879: a3 = a3 << 0x8\n 33882: a3 = a3 | a4\n 33885: a5 = a5 << 0x10\n 33888: a1 = a1 << 0x18\n 33891: a1 = a1 | a5\n 33894: a1 = a1 | a3\n 33897: a1 = a1 << 0x20\n 33900: t2 = a1 | a0\n 33903: ra = reverse a2\n 33905: t1 = reverse t1\n 33907: a0 = u64 [0x20000]\n 33912: a4 = u64 [0x20008]\n 33917: a5 = reverse t0\n 33919: a3 = a5 ^ a0\n 33922: a0 = a5 <u a0\n 33925: a5 = t1 <u a4\n 33928: a1 = u64 [0x20010]\n 33933: a5 = a0 if a3 != 0\n 33936: a0 = u64 [0x20018]\n 33941: a2 = ra ^ a1\n 33944: a1 = ra <u a1\n 33947: s1 = reverse t2\n 33949: a0 = s1 <u a0\n 33952: a0 = a1 if a2 != 0\n 33955: a1 = t1 ^ a4\n 33958: a1 = a1 | a3\n 33961: a0 = a5 if a1 != 0\n 33964: u64 [sp + 760] = 0\n 33968: u64 [sp + 752] = 0\n 33972: u64 [sp + 0x2e0] = a0\n 33976: a0 = sp + 0x2e0\n 33980: u64 [sp + 744] = 0\n 33984: ra = 108, jump @650\n      : @743 [@dyn 54] (gas: 4)\n 33989: a0 = u64 [sp + 0x218]\n 33993: t1 = i32 [a0]\n 33995: a1 = u64 [sp + 0x168]\n 33999: jump @745 if t1 >=u a1\n      : @744 (gas: 4)\n 34002: a0 = u64 [sp + 0x218]\n 34006: u32 [a0] = a1\n 34008: t1 = a1\n 34010: fallthrough\n      : @745 (gas: 101)\n 34011: t0 = u64 [sp + 0x170]\n 34015: a0 = u8 [t0 + 0x11]\n 34018: a1 = u8 [t0 + 0x10]\n 34021: a2 = u8 [t0 + 0x12]\n 34024: a3 = u8 [t0 + 0x13]\n 34027: a0 = a0 << 0x8\n 34030: a0 = a0 | a1\n 34033: a2 = a2 << 0x10\n 34036: a3 = a3 << 0x18\n 34039: a2 = a2 | a3\n 34042: a0 = a0 | a2\n 34045: a1 = u8 [t0 + 0x15]\n 34048: a2 = u8 [t0 + 0x14]\n 34051: a3 = u8 [t0 + 0x16]\n 34054: a4 = u8 [t0 + 0x17]\n 34057: a1 = a1 << 0x8\n 34060: a1 = a1 | a2\n 34063: a3 = a3 << 0x10\n 34066: a4 = a4 << 0x18\n 34069: a3 = a3 | a4\n 34072: a1 = a1 | a3\n 34075: a1 = a1 << 0x20\n 34078: t2 = a1 | a0\n 34081: a1 = u8 [t0 + 0x1]\n 34084: a2 = u8 [t0]\n 34086: a3 = u8 [t0 + 0x2]\n 34089: a4 = u8 [t0 + 0x3]\n 34092: a1 = a1 << 0x8\n 34095: a1 = a1 | a2\n 34098: a3 = a3 << 0x10\n 34101: a4 = a4 << 0x18\n 34104: a3 = a3 | a4\n 34107: a1 = a1 | a3\n 34110: a2 = u8 [t0 + 0x5]\n 34113: a3 = u8 [t0 + 0x4]\n 34116: a4 = u8 [t0 + 0x6]\n 34119: a5 = u8 [t0 + 0x7]\n 34122: a2 = a2 << 0x8\n 34125: a2 = a2 | a3\n 34128: a4 = a4 << 0x10\n 34131: a5 = a5 << 0x18\n 34134: a4 = a4 | a5\n 34137: a2 = a2 | a4\n 34140: a2 = a2 << 0x20\n 34143: a2 = a2 | a1\n 34146: a1 = u8 [t0 + 0x19]\n 34149: a3 = u8 [t0 + 0x18]\n 34152: a4 = u8 [t0 + 0x1a]\n 34155: a5 = u8 [t0 + 0x1b]\n 34158: a1 = a1 << 0x8\n 34161: a1 = a1 | a3\n 34164: a4 = a4 << 0x10\n 34167: a5 = a5 << 0x18\n 34170: a4 = a4 | a5\n 34173: a1 = a1 | a4\n 34176: a3 = u8 [t0 + 0x1d]\n 34179: a4 = u8 [t0 + 0x1c]\n 34182: a5 = u8 [t0 + 0x1e]\n 34185: s1 = u8 [t0 + 0x1f]\n 34188: a3 = a3 << 0x8\n 34191: a3 = a3 | a4\n 34194: a5 = a5 << 0x10\n 34197: s1 = s1 << 0x18\n 34200: a5 = a5 | s1\n 34203: a3 = a3 | a5\n 34206: a3 = a3 << 0x20\n 34209: a3 = a3 | a1\n 34212: a1 = u8 [t0 + 0x9]\n 34215: a4 = u8 [t0 + 0x8]\n 34218: a5 = u8 [t0 + 0xa]\n 34221: s1 = u8 [t0 + 0xb]\n 34224: a1 = a1 << 0x8\n 34227: a1 = a1 | a4\n 34230: a5 = a5 << 0x10\n 34233: s1 = s1 << 0x18\n 34236: a5 = a5 | s1\n 34239: a1 = a1 | a5\n 34242: a4 = u8 [t0 + 0xd]\n 34245: a5 = u8 [t0 + 0xc]\n 34248: s1 = u8 [t0 + 0xe]\n 34251: a0 = u8 [t0 + 0xf]\n 34254: a4 = a4 << 0x8\n 34257: a4 = a4 | a5\n 34260: s1 = s1 << 0x10\n 34263: a0 = a0 << 0x18\n 34266: a0 = a0 | s1\n 34269: a0 = a0 | a4\n 34272: a0 = a0 << 0x20\n 34275: a0 = a0 | a1\n 34278: a4 = reverse a0\n 34280: t0 = reverse a3\n 34282: a3 = reverse a2\n 34284: a5 = reverse t2\n 34286: a0 = a5 | a3\n 34289: a2 = t0 | a4\n 34292: a2 = a2 | a0\n 34295: a2 = a2 >> 0x20\n 34298: a0 = a0 | a4\n 34301: a0 = a0 << 0x20\n 34304: a0 = a0 | a2\n 34307: jump @747 if a0 == 0\n      : @746 (gas: 1)\n 34310: jump @821\n      : @747 (gas: 3)\n 34313: i32 a0 = t0 >> 0x10\n 34316: a1 = u64 [sp + 0x1e8]\n 34320: jump @749 if a0 == 0\n      : @748 (gas: 1)\n 34323: jump @821\n      : @749 (gas: 4)\n 34326: a0 = t0 + 0x3f\n 34329: a2 = u64 [sp + 0x1f0]\n 34333: a0 = a0 & a2\n 34336: jump @751 if a0 <=u 65536\n      : @750 (gas: 1)\n 34342: jump @821\n      : @751 (gas: 4)\n 34345: u64 [sp + 0x1a0] = a5\n 34349: u64 [sp + 0x1a8] = a3\n 34353: u64 [sp + 0x1b0] = a4\n 34357: jump @753 if t1 >=u a0\n      : @752 (gas: 4)\n 34360: a2 = u64 [sp + 0x218]\n 34364: u32 [a2] = a0\n 34366: t1 = a0\n 34368: fallthrough\n      : @753 (gas: 124)\n 34369: u64 [sp + 0x178] = t1\n 34373: i32 a5 = t0 + 0\n 34375: a5 = a5 + a1\n 34378: a0 = u8 [a5 + 0x1]\n 34381: a2 = u8 [a5]\n 34383: s1 = u8 [a5 + 0x2]\n 34386: a4 = u8 [a5 + 0x3]\n 34389: a0 = a0 << 0x8\n 34392: a0 = a0 | a2\n 34395: s1 = s1 << 0x10\n 34398: a4 = a4 << 0x18\n 34401: a4 = a4 | s1\n 34404: a0 = a0 | a4\n 34407: a2 = u8 [a5 + 0x5]\n 34410: a4 = u8 [a5 + 0x4]\n 34413: s1 = u8 [a5 + 0x6]\n 34416: a1 = u8 [a5 + 0x7]\n 34419: a2 = a2 << 0x8\n 34422: a2 = a2 | a4\n 34425: s1 = s1 << 0x10\n 34428: a1 = a1 << 0x18\n 34431: a1 = a1 | s1\n 34434: a1 = a1 | a2\n 34437: a1 = a1 << 0x20\n 34440: a0 = a0 | a1\n 34443: u64 [sp + 0x198] = a0\n 34447: a0 = u8 [a5 + 0x9]\n 34450: a1 = u8 [a5 + 0x8]\n 34453: a2 = u8 [a5 + 0xa]\n 34456: a4 = u8 [a5 + 0xb]\n 34459: a0 = a0 << 0x8\n 34462: a0 = a0 | a1\n 34465: a2 = a2 << 0x10\n 34468: a4 = a4 << 0x18\n 34471: a2 = a2 | a4\n 34474: a0 = a0 | a2\n 34477: a1 = u8 [a5 + 0xd]\n 34480: a2 = u8 [a5 + 0xc]\n 34483: a4 = u8 [a5 + 0xe]\n 34486: s1 = u8 [a5 + 0xf]\n 34489: a1 = a1 << 0x8\n 34492: a1 = a1 | a2\n 34495: a4 = a4 << 0x10\n 34498: s1 = s1 << 0x18\n 34501: a4 = a4 | s1\n 34504: a1 = a1 | a4\n 34507: a1 = a1 << 0x20\n 34510: a0 = a0 | a1\n 34513: u64 [sp + 0x190] = a0\n 34517: a1 = u8 [a5 + 0x11]\n 34520: a2 = u8 [a5 + 0x10]\n 34523: a4 = u8 [a5 + 0x12]\n 34526: s1 = u8 [a5 + 0x13]\n 34529: a1 = a1 << 0x8\n 34532: a1 = a1 | a2\n 34535: a4 = a4 << 0x10\n 34538: s1 = s1 << 0x18\n 34541: a4 = a4 | s1\n 34544: a1 = a1 | a4\n 34547: a2 = u8 [a5 + 0x15]\n 34550: a4 = u8 [a5 + 0x14]\n 34553: s1 = u8 [a5 + 0x16]\n 34556: t2 = u8 [a5 + 0x17]\n 34559: a2 = a2 << 0x8\n 34562: a2 = a2 | a4\n 34565: s1 = s1 << 0x10\n 34568: t2 = t2 << 0x18\n 34571: a4 = t2 | s1\n 34574: a2 = a2 | a4\n 34577: a2 = a2 << 0x20\n 34580: a3 = a2 | a1\n 34583: a1 = u8 [a5 + 0x19]\n 34586: a4 = u8 [a5 + 0x18]\n 34589: s1 = u8 [a5 + 0x1a]\n 34592: a2 = u8 [a5 + 0x1b]\n 34595: a1 = a1 << 0x8\n 34598: a1 = a1 | a4\n 34601: s1 = s1 << 0x10\n 34604: a2 = a2 << 0x18\n 34607: a2 = a2 | s1\n 34610: a4 = u8 [a5 + 0x1d]\n 34613: s1 = u8 [a5 + 0x1c]\n 34616: t1 = u64 [sp + 0x200]\n 34620: t1 = t1 + 0x1\n 34623: a1 = a1 | a2\n 34626: a4 = a4 << 0x8\n 34629: a4 = a4 | s1\n 34632: a2 = u8 [a5 + 0x1e]\n 34635: a5 = u8 [a5 + 0x1f]\n 34638: s1 = t1 <u 0x1\n 34641: a0 = u64 [sp + 0x1f8]\n 34645: t2 = a0 + s1\n 34648: a2 = a2 << 0x10\n 34651: a5 = a5 << 0x18\n 34654: a2 = a2 | a5\n 34657: a5 = t1 | t2\n 34660: a5 = a5 <u 0x1\n 34663: s1 = u64 [sp + 0x210]\n 34667: ra = s1 + a5\n 34670: a2 = a2 | a4\n 34673: a4 = ra <u s1\n 34676: a5 = u64 [sp + 0x208]\n 34680: a4 = a4 + a5\n 34683: a2 = a2 << 0x20\n 34686: a1 = a1 | a2\n 34689: a1 = reverse a1\n 34691: a5 = reverse a3\n 34693: a2 = a4\n 34695: a0 = u64 [sp + 0x190]\n 34699: a0 = reverse a0\n 34701: a3 = u64 [sp + 0x198]\n 34705: a3 = reverse a3\n 34707: s1 = a5 ^ t2\n 34710: a5 = t2 <u a5\n 34713: a1 = t1 <u a1\n 34716: a1 = a5 if s1 != 0\n 34719: s1 = a3 ^ a4\n 34722: a3 = a4 <u a3\n 34725: a5 = ra <u a0\n 34728: a5 = a3 if s1 != 0\n 34731: a0 = a0 ^ ra\n 34734: a0 = a0 | s1\n 34737: a1 = a5 if a0 != 0\n 34740: jump @755 if a1 != 0\n      : @754 (gas: 1)\n 34743: jump @826\n      : @755 (gas: 46)\n 34746: a4 = ra\n 34748: a0 = ra >> 0x3b\n 34751: u64 [sp + 0x198] = a2\n 34755: a1 = a2 << 0x5\n 34758: a0 = a0 | a1\n 34761: a1 = t1 >> 0x3b\n 34764: a2 = t2 << 0x5\n 34767: a1 = a1 | a2\n 34770: a2 = t1 << 0x5\n 34773: a3 = a2 + t0\n 34776: a2 = a3 <u a2\n 34779: ra = u64 [sp + 0x1a0]\n 34783: ra = ra + a1\n 34786: ra = ra + a2\n 34789: a5 = ra ^ a1\n 34792: a1 = ra <u a1\n 34795: a1 = a2 if a5 == 0\n 34798: a2 = t2 >> 0x3b\n 34801: u64 [sp + 0x1a0] = a4\n 34805: a4 = a4 << 0x5\n 34808: a2 = a2 | a4\n 34811: a4 = u64 [sp + 0x1a8]\n 34815: a0 = a0 + a4\n 34818: t0 = u64 [sp + 0x1b0]\n 34822: t0 = t0 + a2\n 34825: a4 = t0 + a1\n 34828: a1 = t0 <u a2\n 34831: a2 = a4 <u t0\n 34834: a0 = a0 + a1\n 34837: a0 = a0 + a2\n 34840: t0 = a3 + 0x20\n 34843: a2 = t0 <u a3\n 34846: a3 = ra + a2\n 34849: a5 = a3 <u ra\n 34852: a5 = a2 if a2 == 0\n 34855: a5 = a5 + a4\n 34858: a2 = a5 <u a4\n 34861: a0 = a0 + a2\n 34864: a0 = a0 | a3\n 34867: a2 = t0 | a5\n 34870: a2 = a2 | a0\n 34873: a0 = a0 | a5\n 34876: a2 = a2 >> 0x20\n 34879: a0 = a0 << 0x20\n 34882: a0 = a0 | a2\n 34885: jump @757 if a0 == 0\n      : @756 (gas: 1)\n 34888: jump @821\n      : @757 (gas: 4)\n 34891: i32 a0 = t0 >> 0x10\n 34894: ra = u64 [sp + 0x1e8]\n 34898: a3 = u64 [sp + 0x1e0]\n 34902: jump @759 if a0 == 0\n      : @758 (gas: 1)\n 34905: jump @821\n      : @759 (gas: 4)\n 34908: a0 = t0 + 0x3f\n 34911: a2 = u64 [sp + 0x1f0]\n 34915: a0 = a0 & a2\n 34918: jump @761 if a0 <=u 65536\n      : @760 (gas: 1)\n 34924: jump @821\n      : @761 (gas: 2)\n 34927: a1 = u64 [sp + 0x178]\n 34931: jump @763 if a1 >=u a0\n      : @762 (gas: 4)\n 34934: a2 = u64 [sp + 0x218]\n 34938: u32 [a2] = a0\n 34940: a1 = a0\n 34942: fallthrough\n      : @763 (gas: 3)\n 34943: u64 [sp + 0x1a8] = t2\n 34947: u64 [sp + 0x1b0] = t1\n 34951: jump @765 if a1 >=u a3\n      : @764 (gas: 4)\n 34954: a0 = u64 [sp + 0x218]\n 34958: u32 [a0] = a3\n 34960: a1 = a3\n 34962: fallthrough\n      : @765 (gas: 112)\n 34963: t2 = a1\n 34965: a1 = u64 [sp + 0x1d8]\n 34969: a0 = u8 [a1 + 0x1]\n 34972: a2 = u8 [a1]\n 34974: a3 = u8 [a1 + 0x2]\n 34977: a4 = u8 [a1 + 0x3]\n 34980: a0 = a0 << 0x8\n 34983: a0 = a0 | a2\n 34986: a3 = a3 << 0x10\n 34989: a4 = a4 << 0x18\n 34992: a3 = a3 | a4\n 34995: a0 = a0 | a3\n 34998: a2 = u8 [a1 + 0x5]\n 35001: a3 = u8 [a1 + 0x4]\n 35004: a4 = u8 [a1 + 0x6]\n 35007: a5 = u8 [a1 + 0x7]\n 35010: a2 = a2 << 0x8\n 35013: a2 = a2 | a3\n 35016: a4 = a4 << 0x10\n 35019: a5 = a5 << 0x18\n 35022: a4 = a4 | a5\n 35025: a2 = a2 | a4\n 35028: a2 = a2 << 0x20\n 35031: a0 = a0 | a2\n 35034: u64 [sp + 0x190] = a0\n 35038: a0 = u8 [a1 + 0x9]\n 35041: a3 = u8 [a1 + 0x8]\n 35044: a4 = u8 [a1 + 0xa]\n 35047: a5 = u8 [a1 + 0xb]\n 35050: a0 = a0 << 0x8\n 35053: a0 = a0 | a3\n 35056: a4 = a4 << 0x10\n 35059: a5 = a5 << 0x18\n 35062: a4 = a4 | a5\n 35065: t1 = a4 | a0\n 35068: a3 = u8 [a1 + 0x11]\n 35071: a4 = u8 [a1 + 0x10]\n 35074: a5 = u8 [a1 + 0x12]\n 35077: s1 = u8 [a1 + 0x13]\n 35080: a3 = a3 << 0x8\n 35083: a3 = a3 | a4\n 35086: a5 = a5 << 0x10\n 35089: s1 = s1 << 0x18\n 35092: a5 = a5 | s1\n 35095: a3 = a3 | a5\n 35098: a4 = u8 [a1 + 0x15]\n 35101: a5 = u8 [a1 + 0x14]\n 35104: s1 = u8 [a1 + 0x16]\n 35107: a2 = u8 [a1 + 0x17]\n 35110: a4 = a4 << 0x8\n 35113: a4 = a4 | a5\n 35116: s1 = s1 << 0x10\n 35119: a2 = a2 << 0x18\n 35122: a2 = a2 | s1\n 35125: a2 = a2 | a4\n 35128: a2 = a2 << 0x20\n 35131: a3 = a3 | a2\n 35134: a2 = u8 [a1 + 0x19]\n 35137: a4 = u8 [a1 + 0x18]\n 35140: a5 = u8 [a1 + 0x1a]\n 35143: s1 = u8 [a1 + 0x1b]\n 35146: a2 = a2 << 0x8\n 35149: a2 = a2 | a4\n 35152: a5 = a5 << 0x10\n 35155: s1 = s1 << 0x18\n 35158: a5 = a5 | s1\n 35161: a2 = a2 | a5\n 35164: a4 = u8 [a1 + 0x1d]\n 35167: a5 = u8 [a1 + 0x1c]\n 35170: s1 = u8 [a1 + 0x1e]\n 35173: a0 = u8 [a1 + 0x1f]\n 35176: a4 = a4 << 0x8\n 35179: a4 = a4 | a5\n 35182: s1 = s1 << 0x10\n 35185: a0 = a0 << 0x18\n 35188: a0 = a0 | s1\n 35191: a0 = a0 | a4\n 35194: a0 = a0 << 0x20\n 35197: a0 = a0 | a2\n 35200: a2 = reverse a3\n 35202: a3 = u64 [sp + 0x1f8]\n 35206: a4 = a2 ^ a3\n 35209: a2 = a3 <u a2\n 35212: a5 = u8 [a1 + 0xc]\n 35215: a0 = reverse a0\n 35217: a3 = u64 [sp + 0x200]\n 35221: a3 = a3 <u a0\n 35224: a0 = u8 [a1 + 0xd]\n 35227: a3 = a2 if a4 != 0\n 35230: a2 = u8 [a1 + 0xe]\n 35233: a4 = u8 [a1 + 0xf]\n 35236: a0 = a0 << 0x8\n 35239: a0 = a0 | a5\n 35242: a2 = a2 << 0x10\n 35245: a4 = a4 << 0x18\n 35248: a2 = a2 | a4\n 35251: a0 = a0 | a2\n 35254: a0 = a0 << 0x20\n 35257: a0 = a0 | t1\n 35260: a0 = reverse a0\n 35262: a1 = u64 [sp + 0x190]\n 35266: a2 = reverse a1\n 35268: a1 = u64 [sp + 0x208]\n 35272: a4 = a2 ^ a1\n 35275: a2 = a1 <u a2\n 35278: a1 = u64 [sp + 0x210]\n 35282: a5 = a1 <u a0\n 35285: a5 = a2 if a4 != 0\n 35288: a0 = a0 ^ a1\n 35291: a0 = a0 | a4\n 35294: a3 = a5 if a0 != 0\n 35297: jump @767 if a3 != 0\n      : @766 (gas: 1)\n 35300: jump @822\n      : @767 (gas: 2)\n 35303: a1 = u64 [sp + 0x180]\n 35307: jump @726 if t2 >=u a1\n      : @768 (gas: 3)\n 35311: a0 = u64 [sp + 0x218]\n 35315: u32 [a0] = a1\n 35317: jump @726\n      : @769 (gas: 3)\n 35320: i32 a0 = t0 + 0\n 35322: a1 = u64 [sp + 0x168]\n 35326: jump @771 if a0 >=u a1\n      : @770 (gas: 4)\n 35329: a0 = u64 [sp + 0x218]\n 35333: u32 [a0] = a1\n 35335: t0 = a1\n 35337: fallthrough\n      : @771 (gas: 101)\n 35338: ra = u64 [sp + 0x170]\n 35342: a0 = u8 [ra + 0x11]\n 35345: a1 = u8 [ra + 0x10]\n 35348: a2 = u8 [ra + 0x12]\n 35351: a3 = u8 [ra + 0x13]\n 35354: a0 = a0 << 0x8\n 35357: a0 = a0 | a1\n 35360: a2 = a2 << 0x10\n 35363: a3 = a3 << 0x18\n 35366: a2 = a2 | a3\n 35369: a0 = a0 | a2\n 35372: a1 = u8 [ra + 0x15]\n 35375: a2 = u8 [ra + 0x14]\n 35378: a3 = u8 [ra + 0x16]\n 35381: a4 = u8 [ra + 0x17]\n 35384: a1 = a1 << 0x8\n 35387: a1 = a1 | a2\n 35390: a3 = a3 << 0x10\n 35393: a4 = a4 << 0x18\n 35396: a3 = a3 | a4\n 35399: a1 = a1 | a3\n 35402: a1 = a1 << 0x20\n 35405: t1 = a1 | a0\n 35408: a0 = u8 [ra + 0x1]\n 35411: a1 = u8 [ra]\n 35413: a3 = u8 [ra + 0x2]\n 35416: a4 = u8 [ra + 0x3]\n 35419: a0 = a0 << 0x8\n 35422: a0 = a0 | a1\n 35425: a3 = a3 << 0x10\n 35428: a4 = a4 << 0x18\n 35431: a3 = a3 | a4\n 35434: a0 = a0 | a3\n 35437: a1 = u8 [ra + 0x5]\n 35440: a3 = u8 [ra + 0x4]\n 35443: a4 = u8 [ra + 0x6]\n 35446: a5 = u8 [ra + 0x7]\n 35449: a1 = a1 << 0x8\n 35452: a1 = a1 | a3\n 35455: a4 = a4 << 0x10\n 35458: a5 = a5 << 0x18\n 35461: a4 = a4 | a5\n 35464: a1 = a1 | a4\n 35467: a1 = a1 << 0x20\n 35470: a4 = a1 | a0\n 35473: a0 = u8 [ra + 0x19]\n 35476: a1 = u8 [ra + 0x18]\n 35479: a3 = u8 [ra + 0x1a]\n 35482: a5 = u8 [ra + 0x1b]\n 35485: a0 = a0 << 0x8\n 35488: a0 = a0 | a1\n 35491: a3 = a3 << 0x10\n 35494: a5 = a5 << 0x18\n 35497: a3 = a3 | a5\n 35500: a0 = a0 | a3\n 35503: a1 = u8 [ra + 0x1d]\n 35506: a3 = u8 [ra + 0x1c]\n 35509: a5 = u8 [ra + 0x1e]\n 35512: s1 = u8 [ra + 0x1f]\n 35515: a1 = a1 << 0x8\n 35518: a1 = a1 | a3\n 35521: a5 = a5 << 0x10\n 35524: s1 = s1 << 0x18\n 35527: a5 = a5 | s1\n 35530: a1 = a1 | a5\n 35533: a1 = a1 << 0x20\n 35536: a1 = a1 | a0\n 35539: a0 = u8 [ra + 0x9]\n 35542: a3 = u8 [ra + 0x8]\n 35545: a5 = u8 [ra + 0xa]\n 35548: s1 = u8 [ra + 0xb]\n 35551: a0 = a0 << 0x8\n 35554: a0 = a0 | a3\n 35557: a5 = a5 << 0x10\n 35560: s1 = s1 << 0x18\n 35563: a5 = a5 | s1\n 35566: a0 = a0 | a5\n 35569: a3 = u8 [ra + 0xd]\n 35572: a5 = u8 [ra + 0xc]\n 35575: s1 = u8 [ra + 0xe]\n 35578: a2 = u8 [ra + 0xf]\n 35581: a3 = a3 << 0x8\n 35584: a3 = a3 | a5\n 35587: s1 = s1 << 0x10\n 35590: a2 = a2 << 0x18\n 35593: a2 = a2 | s1\n 35596: a2 = a2 | a3\n 35599: a2 = a2 << 0x20\n 35602: a0 = a0 | a2\n 35605: a3 = reverse a0\n 35607: ra = reverse a1\n 35609: a5 = reverse a4\n 35611: a1 = reverse t1\n 35613: a2 = a1 | a5\n 35616: a4 = ra | a3\n 35619: a4 = a4 | a2\n 35622: a4 = a4 >> 0x20\n 35625: a2 = a2 | a3\n 35628: a2 = a2 << 0x20\n 35631: a2 = a2 | a4\n 35634: jump @821 if a2 != 0\n      : @772 (gas: 2)\n 35638: i32 a2 = ra >> 0x10\n 35641: jump @821 if a2 != 0\n      : @773 (gas: 4)\n 35645: a2 = ra + 0x3f\n 35648: a0 = u64 [sp + 0x1f0]\n 35652: a2 = a2 & a0\n 35655: jump @821 if a2 >u 65536\n      : @774 (gas: 5)\n 35662: u64 [sp + 0x200] = a5\n 35666: u64 [sp + 0x208] = a3\n 35670: u64 [sp + 0x210] = a1\n 35674: i32 a4 = t0 + 0\n 35676: jump @776 if a4 >=u a2\n      : @775 (gas: 4)\n 35679: a0 = u64 [sp + 0x218]\n 35683: u32 [a0] = a2\n 35685: t0 = a2\n 35687: fallthrough\n      : @776 (gas: 96)\n 35688: i32 a5 = ra + 0\n 35690: a5 = a5 + t2\n 35693: a2 = u8 [a5 + 0x11]\n 35696: a4 = u8 [a5 + 0x10]\n 35699: s1 = u8 [a5 + 0x12]\n 35702: a0 = u8 [a5 + 0x13]\n 35705: a2 = a2 << 0x8\n 35708: a2 = a2 | a4\n 35711: s1 = s1 << 0x10\n 35714: a0 = a0 << 0x18\n 35717: a0 = a0 | s1\n 35720: a0 = a0 | a2\n 35723: u64 [sp + 0x1f8] = a0\n 35727: a0 = u8 [a5 + 0x1]\n 35730: a2 = u8 [a5]\n 35732: a4 = u8 [a5 + 0x2]\n 35735: s1 = u8 [a5 + 0x3]\n 35738: a0 = a0 << 0x8\n 35741: a0 = a0 | a2\n 35744: a4 = a4 << 0x10\n 35747: s1 = s1 << 0x18\n 35750: a4 = a4 | s1\n 35753: a0 = a0 | a4\n 35756: u64 [sp + 0x1e0] = a0\n 35760: a0 = u8 [a5 + 0x15]\n 35763: a2 = u8 [a5 + 0x14]\n 35766: a4 = u8 [a5 + 0x16]\n 35769: s1 = u8 [a5 + 0x17]\n 35772: a0 = a0 << 0x8\n 35775: a0 = a0 | a2\n 35778: a4 = a4 << 0x10\n 35781: s1 = s1 << 0x18\n 35784: a2 = s1 | a4\n 35787: a2 = a2 | a0\n 35790: a0 = u8 [a5 + 0x5]\n 35793: a4 = u8 [a5 + 0x4]\n 35796: s1 = u8 [a5 + 0x6]\n 35799: a3 = u8 [a5 + 0x7]\n 35802: a0 = a0 << 0x8\n 35805: a0 = a0 | a4\n 35808: s1 = s1 << 0x10\n 35811: a3 = a3 << 0x18\n 35814: a3 = a3 | s1\n 35817: a4 = a3 | a0\n 35820: a0 = u8 [a5 + 0x19]\n 35823: a3 = u8 [a5 + 0x18]\n 35826: s1 = u8 [a5 + 0x1a]\n 35829: a1 = u8 [a5 + 0x1b]\n 35832: a0 = a0 << 0x8\n 35835: a0 = a0 | a3\n 35838: s1 = s1 << 0x10\n 35841: a1 = a1 << 0x18\n 35844: a1 = a1 | s1\n 35847: s1 = a1 | a0\n 35850: t1 = u8 [a5 + 0x9]\n 35853: a1 = u8 [a5 + 0x8]\n 35856: a3 = u8 [a5 + 0xa]\n 35859: a0 = u8 [a5 + 0xb]\n 35862: t1 = t1 << 0x8\n 35865: a1 = t1 | a1\n 35868: a3 = a3 << 0x10\n 35871: a0 = a0 << 0x18\n 35874: a0 = a0 | a3\n 35877: t1 = a0 | a1\n 35880: a0 = u8 [a5 + 0x1d]\n 35883: a1 = u8 [a5 + 0x1c]\n 35886: a3 = u8 [a5 + 0x1e]\n 35889: t2 = u8 [a5 + 0x1f]\n 35892: a0 = a0 << 0x8\n 35895: a0 = a0 | a1\n 35898: a3 = a3 << 0x10\n 35901: t2 = t2 << 0x18\n 35904: a1 = t2 | a3\n 35907: t2 = a1 | a0\n 35910: a1 = u8 [a5 + 0xd]\n 35913: a3 = u8 [a5 + 0xc]\n 35916: a0 = u8 [a5 + 0xe]\n 35919: a5 = u8 [a5 + 0xf]\n 35922: a1 = a1 << 0x8\n 35925: a1 = a1 | a3\n 35928: a0 = a0 << 0x10\n 35931: a5 = a5 << 0x18\n 35934: a0 = a0 | a5\n 35937: a0 = a0 | a1\n 35940: a0 = a0 | t2\n 35943: a1 = t1 | s1\n 35946: a0 = a0 << 0x20\n 35949: a0 = a0 | a1\n 35952: a2 = a2 | a4\n 35955: a1 = u64 [sp + 0x1f8]\n 35959: a3 = u64 [sp + 0x1e0]\n 35963: a1 = a1 | a3\n 35966: a2 = a2 << 0x20\n 35969: a1 = a1 | a2\n 35972: a0 = a0 | a1\n 35975: jump @832 if a0 == 0\n      : @777 (gas: 11)\n 35979: a0 = u64 [sp + 0x208]\n 35983: a1 = u64 [sp + 0x200]\n 35987: a0 = a0 | a1\n 35990: a1 = 0xffffffe0\n 36000: a1 = ra <u a1\n 36003: a2 = u64 [sp + 0x210]\n 36007: a1 = 0 if a2 != 0\n 36009: a1 = 0 if a0 != 0\n 36011: t1 = u64 [sp + 0x1d0]\n 36015: t2 = u64 [sp + 0x1c8]\n 36019: jump @821 if a1 == 0\n      : @778 (gas: 3)\n 36023: i32 a0 = ra >> 0x5\n 36026: a3 = u64 [sp + 0x1e8]\n 36030: jump @821 if a0 >=u 2047\n      : @779 (gas: 4)\n 36036: a0 = ra + 0x5f\n 36039: a2 = u64 [sp + 0x1f0]\n 36043: a2 = a2 & a0\n 36046: jump @821 if a2 >u 65536\n      : @780 (gas: 3)\n 36053: i32 t0 = t0 + 0\n 36055: i32 a0 = ra + 0x20\n 36058: jump @782 if t0 >=u a2\n      : @781 (gas: 3)\n 36061: a1 = u64 [sp + 0x218]\n 36065: u32 [a1] = a2\n 36067: fallthrough\n      : @782 (gas: 107)\n 36068: a0 = a0 + a3\n 36071: a1 = u8 [a0 + 0x1]\n 36074: a2 = u8 [a0]\n 36076: a3 = u8 [a0 + 0x2]\n 36079: a4 = u8 [a0 + 0x3]\n 36082: a1 = a1 << 0x8\n 36085: a1 = a1 | a2\n 36088: a3 = a3 << 0x10\n 36091: a4 = a4 << 0x18\n 36094: a3 = a3 | a4\n 36097: a1 = a1 | a3\n 36100: a2 = u8 [a0 + 0x5]\n 36103: a3 = u8 [a0 + 0x4]\n 36106: a4 = u8 [a0 + 0x6]\n 36109: a5 = u8 [a0 + 0x7]\n 36112: a2 = a2 << 0x8\n 36115: a2 = a2 | a3\n 36118: a4 = a4 << 0x10\n 36121: a5 = a5 << 0x18\n 36124: a4 = a4 | a5\n 36127: a2 = a2 | a4\n 36130: a2 = a2 << 0x20\n 36133: t0 = a2 | a1\n 36136: a2 = u8 [a0 + 0x9]\n 36139: a3 = u8 [a0 + 0x8]\n 36142: a4 = u8 [a0 + 0xa]\n 36145: a5 = u8 [a0 + 0xb]\n 36148: a2 = a2 << 0x8\n 36151: a2 = a2 | a3\n 36154: a4 = a4 << 0x10\n 36157: a5 = a5 << 0x18\n 36160: a4 = a4 | a5\n 36163: a2 = a2 | a4\n 36166: a3 = u8 [a0 + 0xd]\n 36169: a4 = u8 [a0 + 0xc]\n 36172: a5 = u8 [a0 + 0xe]\n 36175: s1 = u8 [a0 + 0xf]\n 36178: a3 = a3 << 0x8\n 36181: a3 = a3 | a4\n 36184: a5 = a5 << 0x10\n 36187: s1 = s1 << 0x18\n 36190: a5 = a5 | s1\n 36193: a3 = a3 | a5\n 36196: a3 = a3 << 0x20\n 36199: a2 = a2 | a3\n 36202: a3 = u8 [a0 + 0x11]\n 36205: a4 = u8 [a0 + 0x10]\n 36208: a5 = u8 [a0 + 0x12]\n 36211: s1 = u8 [a0 + 0x13]\n 36214: a3 = a3 << 0x8\n 36217: a3 = a3 | a4\n 36220: a5 = a5 << 0x10\n 36223: s1 = s1 << 0x18\n 36226: a5 = a5 | s1\n 36229: a3 = a3 | a5\n 36232: a4 = u8 [a0 + 0x15]\n 36235: a5 = u8 [a0 + 0x14]\n 36238: s1 = u8 [a0 + 0x16]\n 36241: a1 = u8 [a0 + 0x17]\n 36244: a4 = a4 << 0x8\n 36247: a4 = a4 | a5\n 36250: s1 = s1 << 0x10\n 36253: a1 = a1 << 0x18\n 36256: a1 = a1 | s1\n 36259: a1 = a1 | a4\n 36262: a1 = a1 << 0x20\n 36265: a3 = a3 | a1\n 36268: a1 = u8 [a0 + 0x19]\n 36271: a4 = u8 [a0 + 0x18]\n 36274: a5 = u8 [a0 + 0x1a]\n 36277: s1 = u8 [a0 + 0x1b]\n 36280: a1 = a1 << 0x8\n 36283: a1 = a1 | a4\n 36286: a5 = a5 << 0x10\n 36289: s1 = s1 << 0x18\n 36292: a5 = a5 | s1\n 36295: a1 = a1 | a5\n 36298: a4 = u8 [a0 + 0x1d]\n 36301: a5 = u8 [a0 + 0x1c]\n 36304: s1 = u8 [a0 + 0x1e]\n 36307: a0 = u8 [a0 + 0x1f]\n 36310: a4 = a4 << 0x8\n 36313: a4 = a4 | a5\n 36316: s1 = s1 << 0x10\n 36319: a0 = a0 << 0x18\n 36322: a0 = a0 | s1\n 36325: a0 = a0 | a4\n 36328: a0 = a0 << 0x20\n 36331: a0 = a0 | a1\n 36334: a4 = reverse a0\n 36336: a0 = reverse a3\n 36338: a1 = reverse a2\n 36340: a2 = reverse t0\n 36342: a3 = u64 [sp + 0x1b8]\n 36346: u64 [sp + 0x498] = a3\n 36350: a3 = u64 [sp + 0x1c0]\n 36354: u64 [sp + 0x490] = a3\n 36358: u64 [sp + 0x488] = t2\n 36362: u64 [sp + 0x480] = t1\n 36366: u64 [sp + 0x478] = a2\n 36370: u64 [sp + 0x470] = a1\n 36374: u64 [sp + 0x468] = a0\n 36378: a0 = sp + 0x4a0\n 36382: a1 = sp + 0x480\n 36386: a2 = sp + 0x460\n 36390: u64 [sp + 0x460] = a4\n 36394: ra = 110, jump @1308\n      : @783 [@dyn 55] (gas: 12)\n 36399: a3 = u64 [sp + 0x128]\n 36403: a4 = u64 [sp + 0x110]\n 36407: a0 = a3 | a4\n 36410: a1 = u64 [sp + 0x130]\n 36414: a2 = u64 [sp + 0x118]\n 36418: a1 = a1 | a2\n 36421: a0 = a0 | a1\n 36424: a0 = a0 >> 0x20\n 36427: a1 = a1 | a4\n 36430: a1 = a1 << 0x20\n 36433: a0 = a0 | a1\n 36436: jump @821 if a0 != 0\n      : @784 (gas: 2)\n 36440: i32 a0 = a3 >> 0x10\n 36443: jump @821 if a0 != 0\n      : @785 (gas: 4)\n 36447: a0 = a3 + 0x3f\n 36450: a1 = u64 [sp + 0x1f0]\n 36454: a0 = a0 & a1\n 36457: jump @821 if a0 >u 65536\n      : @786 (gas: 12)\n 36464: a1 = u64 [sp + 0x4b8]\n 36468: u64 [sp + 0x1f8] = a1\n 36472: a1 = u64 [sp + 0x4b0]\n 36476: u64 [sp + 0x200] = a1\n 36480: a1 = u64 [sp + 0x4a8]\n 36484: u64 [sp + 0x208] = a1\n 36488: a1 = u64 [sp + 0x218]\n 36492: a1 = i32 [a1]\n 36494: a2 = u64 [sp + 0x4a0]\n 36498: u64 [sp + 0x1e0] = a2\n 36502: a2 = u64 [sp + 0x1e8]\n 36506: jump @788 if a1 >=u a0\n      : @787 (gas: 3)\n 36509: a1 = u64 [sp + 0x218]\n 36513: u32 [a1] = a0\n 36515: fallthrough\n      : @788 (gas: 101)\n 36516: i32 a0 = a3 + 0\n 36518: a0 = a0 + a2\n 36521: a1 = u8 [a0 + 0x1]\n 36524: a2 = u8 [a0]\n 36526: a3 = u8 [a0 + 0x2]\n 36529: a4 = u8 [a0 + 0x3]\n 36532: a1 = a1 << 0x8\n 36535: a1 = a1 | a2\n 36538: a3 = a3 << 0x10\n 36541: a4 = a4 << 0x18\n 36544: a3 = a3 | a4\n 36547: a1 = a1 | a3\n 36550: a2 = u8 [a0 + 0x5]\n 36553: a3 = u8 [a0 + 0x4]\n 36556: a4 = u8 [a0 + 0x6]\n 36559: a5 = u8 [a0 + 0x7]\n 36562: a2 = a2 << 0x8\n 36565: a2 = a2 | a3\n 36568: a4 = a4 << 0x10\n 36571: a5 = a5 << 0x18\n 36574: a4 = a4 | a5\n 36577: a2 = a2 | a4\n 36580: a2 = a2 << 0x20\n 36583: t0 = a2 | a1\n 36586: a2 = u8 [a0 + 0x9]\n 36589: a3 = u8 [a0 + 0x8]\n 36592: a4 = u8 [a0 + 0xa]\n 36595: a5 = u8 [a0 + 0xb]\n 36598: a2 = a2 << 0x8\n 36601: a2 = a2 | a3\n 36604: a4 = a4 << 0x10\n 36607: a5 = a5 << 0x18\n 36610: a4 = a4 | a5\n 36613: a2 = a2 | a4\n 36616: a3 = u8 [a0 + 0xd]\n 36619: a4 = u8 [a0 + 0xc]\n 36622: a5 = u8 [a0 + 0xe]\n 36625: s1 = u8 [a0 + 0xf]\n 36628: a3 = a3 << 0x8\n 36631: a3 = a3 | a4\n 36634: a5 = a5 << 0x10\n 36637: s1 = s1 << 0x18\n 36640: a5 = a5 | s1\n 36643: a3 = a3 | a5\n 36646: a3 = a3 << 0x20\n 36649: a2 = a2 | a3\n 36652: a3 = u8 [a0 + 0x11]\n 36655: a4 = u8 [a0 + 0x10]\n 36658: a5 = u8 [a0 + 0x12]\n 36661: s1 = u8 [a0 + 0x13]\n 36664: a3 = a3 << 0x8\n 36667: a3 = a3 | a4\n 36670: a5 = a5 << 0x10\n 36673: s1 = s1 << 0x18\n 36676: a5 = a5 | s1\n 36679: a3 = a3 | a5\n 36682: a4 = u8 [a0 + 0x15]\n 36685: a5 = u8 [a0 + 0x14]\n 36688: s1 = u8 [a0 + 0x16]\n 36691: a1 = u8 [a0 + 0x17]\n 36694: a4 = a4 << 0x8\n 36697: a4 = a4 | a5\n 36700: s1 = s1 << 0x10\n 36703: a1 = a1 << 0x18\n 36706: a1 = a1 | s1\n 36709: a1 = a1 | a4\n 36712: a1 = a1 << 0x20\n 36715: a3 = a3 | a1\n 36718: a1 = u8 [a0 + 0x19]\n 36721: a4 = u8 [a0 + 0x18]\n 36724: a5 = u8 [a0 + 0x1a]\n 36727: s1 = u8 [a0 + 0x1b]\n 36730: a1 = a1 << 0x8\n 36733: a1 = a1 | a4\n 36736: a5 = a5 << 0x10\n 36739: s1 = s1 << 0x18\n 36742: a5 = a5 | s1\n 36745: a1 = a1 | a5\n 36748: a4 = u8 [a0 + 0x1d]\n 36751: a5 = u8 [a0 + 0x1c]\n 36754: s1 = u8 [a0 + 0x1e]\n 36757: a0 = u8 [a0 + 0x1f]\n 36760: a4 = a4 << 0x8\n 36763: a4 = a4 | a5\n 36766: s1 = s1 << 0x10\n 36769: a0 = a0 << 0x18\n 36772: a0 = a0 | s1\n 36775: a0 = a0 | a4\n 36778: a0 = a0 << 0x20\n 36781: a0 = a0 | a1\n 36784: a4 = reverse a0\n 36786: a0 = reverse a3\n 36788: a1 = reverse a2\n 36790: a2 = reverse t0\n 36792: u64 [sp + 0x438] = a2\n 36796: u64 [sp + 0x430] = a1\n 36800: u64 [sp + 0x428] = a0\n 36804: a0 = sp + 0x440\n 36808: a1 = sp + 0x420\n 36812: u64 [sp + 0x420] = a4\n 36816: ra = 112, jump @1378\n      : @789 [@dyn 56] (gas: 10)\n 36821: a5 = u64 [sp + 0x128]\n 36825: a0 = u64 [sp + 0x118]\n 36829: a1 = u64 [sp + 0x110]\n 36833: a0 = a0 | a1\n 36836: a1 = 0xffffffe0\n 36846: a1 = a5 <u a1\n 36849: a2 = u64 [sp + 0x130]\n 36853: a1 = 0 if a2 != 0\n 36855: a1 = 0 if a0 != 0\n 36857: jump @821 if a1 == 0\n      : @790 (gas: 4)\n 36861: i32 a1 = a5 >> 0x5\n 36864: ra = u64 [sp + 0x108]\n 36868: s1 = u64 [sp + 0x120]\n 36872: jump @821 if a1 >=u 2047\n      : @791 (gas: 4)\n 36878: a1 = a5 + 0x5f\n 36881: a2 = u64 [sp + 0x1f0]\n 36885: a1 = a1 & a2\n 36888: jump @821 if a1 >u 65536\n      : @792 (gas: 10)\n 36895: a4 = u64 [sp + 0x458]\n 36899: t1 = u64 [sp + 0x450]\n 36903: t0 = u64 [sp + 0x448]\n 36907: a2 = u64 [sp + 0x218]\n 36911: a3 = i32 [a2]\n 36913: a2 = u64 [sp + 0x440]\n 36917: u64 [sp + 0x1d8] = a2\n 36921: t2 = u64 [sp + 0x1e8]\n 36925: u64 [sp + 0x210] = a3\n 36929: jump @794 if a3 >=u a1\n      : @793 (gas: 4)\n 36932: a2 = u64 [sp + 0x218]\n 36936: u32 [a2] = a1\n 36938: u64 [sp + 0x210] = a1\n 36942: fallthrough\n      : @794 (gas: 10)\n 36943: a3 = u64 [sp + 0x138]\n 36947: a1 = ra | a3\n 36950: a2 = u64 [sp + 0x140]\n 36954: a2 = a2 | s1\n 36957: a1 = a1 | a2\n 36960: a1 = a1 >> 0x20\n 36963: a2 = a2 | a3\n 36966: a2 = a2 << 0x20\n 36969: a1 = a1 | a2\n 36972: jump @821 if a1 != 0\n      : @795 (gas: 2)\n 36976: i32 a1 = ra >> 0x10\n 36979: jump @821 if a1 != 0\n      : @796 (gas: 4)\n 36983: a1 = ra + 0x3f\n 36986: a2 = u64 [sp + 0x1f0]\n 36990: a1 = a1 & a2\n 36993: jump @821 if a1 >u 65536\n      : @797 (gas: 2)\n 37000: a2 = u64 [sp + 0x210]\n 37004: jump @799 if a2 >=u a1\n      : @798 (gas: 4)\n 37007: a2 = u64 [sp + 0x218]\n 37011: u32 [a2] = a1\n 37013: u64 [sp + 0x210] = a1\n 37017: fallthrough\n      : @799 (gas: 9)\n 37018: u64 [sp + 0x1d0] = a4\n 37022: a1 = u64 [sp + 0x140]\n 37026: a2 = u64 [sp + 0x138]\n 37030: a1 = a1 | a2\n 37033: a2 = 0xffffffe0\n 37043: a2 = ra <u a2\n 37046: a2 = 0 if s1 != 0\n 37048: a2 = 0 if a1 != 0\n 37050: jump @821 if a2 == 0\n      : @800 (gas: 2)\n 37054: i32 a2 = ra >> 0x5\n 37057: jump @821 if a2 >=u 2047\n      : @801 (gas: 4)\n 37063: a3 = ra + 0x5f\n 37066: a4 = u64 [sp + 0x1f0]\n 37070: a3 = a3 & a4\n 37073: jump @821 if a3 >u 65536\n      : @802 (gas: 2)\n 37080: a4 = u64 [sp + 0x210]\n 37084: jump @804 if a4 >=u a3\n      : @803 (gas: 4)\n 37087: a4 = u64 [sp + 0x218]\n 37091: u32 [a4] = a3\n 37093: u64 [sp + 0x210] = a3\n 37097: fallthrough\n      : @804 (gas: 5)\n 37098: a3 = 0xffffffc0\n 37108: a3 = ra <u a3\n 37111: a3 = 0 if s1 != 0\n 37113: a3 = 0 if a1 != 0\n 37115: jump @821 if a3 == 0\n      : @805 (gas: 2)\n 37119: i32 a3 = ra >> 0x6\n 37122: jump @821 if a3 >=u 1023\n      : @806 (gas: 4)\n 37128: a3 = ra + 0x7f\n 37131: a4 = u64 [sp + 0x1f0]\n 37135: a3 = a3 & a4\n 37138: jump @821 if a3 >u 65536\n      : @807 (gas: 2)\n 37145: a4 = u64 [sp + 0x210]\n 37149: jump @809 if a4 >=u a3\n      : @808 (gas: 4)\n 37152: a4 = u64 [sp + 0x218]\n 37156: u32 [a4] = a3\n 37158: u64 [sp + 0x210] = a3\n 37162: fallthrough\n      : @809 (gas: 6)\n 37163: a3 = 0xffffffc0\n 37173: a3 = a5 <u a3\n 37176: a4 = u64 [sp + 0x130]\n 37180: a3 = 0 if a4 != 0\n 37182: a3 = 0 if a0 != 0\n 37184: jump @821 if a3 == 0\n      : @810 (gas: 2)\n 37188: i32 a0 = a5 >> 0x6\n 37191: jump @821 if a0 >=u 1023\n      : @811 (gas: 4)\n 37197: a0 = a5 + 0x7f\n 37200: a3 = u64 [sp + 0x1f0]\n 37204: a0 = a0 & a3\n 37207: jump @821 if a0 >u 65536\n      : @812 (gas: 2)\n 37214: a3 = u64 [sp + 0x210]\n 37218: jump @814 if a3 >=u a0\n      : @813 (gas: 4)\n 37221: a3 = u64 [sp + 0x218]\n 37225: u32 [a3] = a0\n 37227: u64 [sp + 0x210] = a0\n 37231: fallthrough\n      : @814 (gas: 5)\n 37232: a0 = 0xffffffa0\n 37242: a0 = ra <u a0\n 37245: a0 = 0 if s1 != 0\n 37247: a0 = 0 if a1 != 0\n 37249: jump @821 if a0 == 0\n      : @815 (gas: 3)\n 37253: u64 [sp + 0x1c0] = t1\n 37257: u64 [sp + 0x1c8] = t0\n 37261: jump @821 if a2 >=u 2045\n      : @816 (gas: 5)\n 37267: a0 = ra + 0x9f\n 37271: a1 = u64 [sp + 0x1f0]\n 37275: a1 = a1 & a0\n 37278: u64 [sp + 0x1f0] = a1\n 37282: jump @821 if a1 >u 65536\n      : @817 (gas: 633)\n 37289: i32 s1 = a5 + 0x20\n 37292: s1 = s1 + t2\n 37295: a1 = u8 [s1 + 0x1d]\n 37298: a2 = u8 [s1 + 0x1e]\n 37301: a3 = u8 [s1 + 0x1f]\n 37304: t0 = u8 [s1 + 0x15]\n 37307: t1 = u8 [s1 + 0x16]\n 37310: a0 = u8 [s1 + 0x1c]\n 37313: a5 = u8 [s1 + 0x17]\n 37316: a4 = u8 [s1 + 0xd]\n 37319: a1 = a1 << 0x8\n 37322: a0 = a0 | a1\n 37325: u64 [sp + 0x1b8] = a0\n 37329: a0 = u8 [s1 + 0xe]\n 37332: a2 = a2 << 0x10\n 37335: a3 = a3 << 0x18\n 37338: a2 = a2 | a3\n 37341: u64 [sp + 0x1a8] = a2\n 37345: a1 = u8 [s1 + 0x14]\n 37348: t0 = t0 << 0x8\n 37351: t1 = t1 << 0x10\n 37354: a5 = a5 << 0x18\n 37357: a1 = t0 | a1\n 37360: u64 [sp + 0x1b0] = a1\n 37364: a1 = u8 [s1 + 0xc]\n 37367: a2 = a5 | t1\n 37370: u64 [sp + 0x1a0] = a2\n 37374: a2 = u8 [s1 + 0xf]\n 37377: a4 = a4 << 0x8\n 37380: t1 = a4 | a1\n 37383: a1 = u8 [s1 + 0x5]\n 37386: a0 = a0 << 0x10\n 37389: a2 = a2 << 0x18\n 37392: a0 = a0 | a2\n 37395: u64 [sp + 0x190] = a0\n 37399: a0 = u8 [s1 + 0x4]\n 37402: a2 = u8 [s1 + 0x6]\n 37405: a3 = u8 [s1 + 0x7]\n 37408: a1 = a1 << 0x8\n 37411: a0 = a0 | a1\n 37414: u64 [sp + 0x198] = a0\n 37418: a2 = a2 << 0x10\n 37421: a3 = a3 << 0x18\n 37424: a2 = a2 | a3\n 37427: u64 [sp + 0x188] = a2\n 37431: i32 a0 = ra + 0\n 37433: a0 = a0 + t2\n 37436: a1 = u8 [a0 + 0x1d]\n 37439: a2 = u8 [a0 + 0x1c]\n 37442: a3 = u8 [a0 + 0x1e]\n 37445: a4 = u8 [a0 + 0x1f]\n 37448: a1 = a1 << 0x8\n 37451: a1 = a1 | a2\n 37454: u64 [sp + 0x180] = a1\n 37458: a3 = a3 << 0x10\n 37461: a4 = a4 << 0x18\n 37464: a3 = a3 | a4\n 37467: u64 [sp + 0x178] = a3\n 37471: a1 = u8 [a0 + 0x15]\n 37474: a2 = u8 [a0 + 0x14]\n 37477: a3 = u8 [a0 + 0x16]\n 37480: a4 = u8 [a0 + 0x17]\n 37483: a1 = a1 << 0x8\n 37486: a1 = a1 | a2\n 37489: u64 [sp + 0x170] = a1\n 37493: a3 = a3 << 0x10\n 37496: a4 = a4 << 0x18\n 37499: a3 = a3 | a4\n 37502: u64 [sp + 0x168] = a3\n 37506: a1 = u8 [a0 + 0xd]\n 37509: a2 = u8 [a0 + 0xc]\n 37512: a3 = u8 [a0 + 0xe]\n 37515: a4 = u8 [a0 + 0xf]\n 37518: a1 = a1 << 0x8\n 37521: a1 = a1 | a2\n 37524: u64 [sp + 0x160] = a1\n 37528: a3 = a3 << 0x10\n 37531: a4 = a4 << 0x18\n 37534: a3 = a3 | a4\n 37537: u64 [sp + 0x158] = a3\n 37541: a1 = u8 [a0 + 0x5]\n 37544: a2 = u8 [a0 + 0x4]\n 37547: a3 = u8 [a0 + 0x6]\n 37550: a4 = u8 [a0 + 0x7]\n 37553: a1 = a1 << 0x8\n 37556: a1 = a1 | a2\n 37559: u64 [sp + 0x150] = a1\n 37563: a3 = a3 << 0x10\n 37566: a4 = a4 << 0x18\n 37569: a3 = a3 | a4\n 37572: u64 [sp + 0x148] = a3\n 37576: i32 a1 = ra + 0x20\n 37579: a1 = a1 + t2\n 37582: a2 = u8 [a1 + 0x1d]\n 37585: a3 = u8 [a1 + 0x1c]\n 37588: a4 = u8 [a1 + 0x1e]\n 37591: a5 = u8 [a1 + 0x1f]\n 37594: a2 = a2 << 0x8\n 37597: a2 = a2 | a3\n 37600: u64 [sp + 0x140] = a2\n 37604: a4 = a4 << 0x10\n 37607: a5 = a5 << 0x18\n 37610: a4 = a4 | a5\n 37613: u64 [sp + 0x138] = a4\n 37617: a2 = u8 [a1 + 0x15]\n 37620: a3 = u8 [a1 + 0x14]\n 37623: a4 = u8 [a1 + 0x16]\n 37626: a5 = u8 [a1 + 0x17]\n 37629: a2 = a2 << 0x8\n 37632: a2 = a2 | a3\n 37635: u64 [sp + 0x130] = a2\n 37639: a4 = a4 << 0x10\n 37642: a5 = a5 << 0x18\n 37645: a4 = a4 | a5\n 37648: u64 [sp + 0x120] = a4\n 37652: a2 = u8 [a1 + 0xd]\n 37655: a3 = u8 [a1 + 0xc]\n 37658: a4 = u8 [a1 + 0xe]\n 37661: a5 = u8 [a1 + 0xf]\n 37664: a2 = a2 << 0x8\n 37667: a2 = a2 | a3\n 37670: u64 [sp + 0x118] = a2\n 37674: a4 = a4 << 0x10\n 37677: a5 = a5 << 0x18\n 37680: a4 = a4 | a5\n 37683: u64 [sp + 0x110] = a4\n 37687: a2 = u8 [a1 + 0x5]\n 37690: a3 = u8 [a1 + 0x4]\n 37693: a4 = u8 [a1 + 0x6]\n 37696: a5 = u8 [a1 + 0x7]\n 37699: a2 = a2 << 0x8\n 37702: a2 = a2 | a3\n 37705: u64 [sp + 0xf8] = a2\n 37709: a4 = a4 << 0x10\n 37712: a5 = a5 << 0x18\n 37715: a4 = a4 | a5\n 37718: u64 [sp + 0xf0] = a4\n 37722: i32 a3 = ra + 0x40\n 37725: a3 = a3 + t2\n 37728: a2 = u8 [a3 + 0x1d]\n 37731: a4 = u8 [a3 + 0x1c]\n 37734: a5 = u8 [a3 + 0x1e]\n 37737: t0 = u8 [a3 + 0x1f]\n 37740: a2 = a2 << 0x8\n 37743: t2 = a2 | a4\n 37746: a5 = a5 << 0x10\n 37749: t0 = t0 << 0x18\n 37752: ra = t0 | a5\n 37755: a2 = u8 [a3 + 0x15]\n 37758: a4 = u8 [a3 + 0x14]\n 37761: a5 = u8 [a3 + 0x16]\n 37764: t0 = u8 [a3 + 0x17]\n 37767: a2 = a2 << 0x8\n 37770: a2 = a2 | a4\n 37773: u64 [sp + 0xe8] = a2\n 37777: a5 = a5 << 0x10\n 37780: t0 = t0 << 0x18\n 37783: a2 = t0 | a5\n 37786: u64 [sp + 0xe0] = a2\n 37790: a2 = u8 [a3 + 0xd]\n 37793: a4 = u8 [a3 + 0xc]\n 37796: a5 = u8 [a3 + 0xe]\n 37799: t0 = u8 [a3 + 0xf]\n 37802: a2 = a2 << 0x8\n 37805: a2 = a2 | a4\n 37808: u64 [sp + 0xd8] = a2\n 37812: a5 = a5 << 0x10\n 37815: t0 = t0 << 0x18\n 37818: a2 = t0 | a5\n 37821: u64 [sp + 0xd0] = a2\n 37825: a2 = u8 [a3 + 0x5]\n 37828: a4 = u8 [a3 + 0x4]\n 37831: a5 = u8 [a3 + 0x6]\n 37834: t0 = u8 [a3 + 0x7]\n 37837: a2 = a2 << 0x8\n 37840: a2 = a2 | a4\n 37843: u64 [sp + 0xc8] = a2\n 37847: a5 = a5 << 0x10\n 37850: t0 = t0 << 0x18\n 37853: a2 = t0 | a5\n 37856: u64 [sp + 0xc0] = a2\n 37860: a2 = u8 [s1 + 0x19]\n 37863: a4 = u8 [s1 + 0x18]\n 37866: a5 = u8 [s1 + 0x1a]\n 37869: t0 = u8 [s1 + 0x1b]\n 37872: a2 = a2 << 0x8\n 37875: a2 = a2 | a4\n 37878: u64 [sp + 0xb8] = a2\n 37882: a5 = a5 << 0x10\n 37885: t0 = t0 << 0x18\n 37888: a2 = t0 | a5\n 37891: u64 [sp + 0xb0] = a2\n 37895: a2 = u64 [sp + 0x1b8]\n 37899: a4 = u64 [sp + 0x1a8]\n 37903: a2 = a2 | a4\n 37906: u64 [sp + 0x1b8] = a2\n 37910: a2 = u8 [s1 + 0x11]\n 37913: a4 = u8 [s1 + 0x10]\n 37916: a5 = u8 [s1 + 0x12]\n 37919: t0 = u8 [s1 + 0x13]\n 37922: a2 = a2 << 0x8\n 37925: a2 = a2 | a4\n 37928: u64 [sp + 0xa8] = a2\n 37932: a5 = a5 << 0x10\n 37935: t0 = t0 << 0x18\n 37938: a2 = t0 | a5\n 37941: u64 [sp + 0xa0] = a2\n 37945: a2 = u64 [sp + 0x1b0]\n 37949: a4 = u64 [sp + 0x1a0]\n 37953: a2 = a2 | a4\n 37956: u64 [sp + 0x1b0] = a2\n 37960: a2 = u8 [s1 + 0x9]\n 37963: a4 = u8 [s1 + 0x8]\n 37966: a5 = u8 [s1 + 0xa]\n 37969: t0 = u8 [s1 + 0xb]\n 37972: a2 = a2 << 0x8\n 37975: a2 = a2 | a4\n 37978: u64 [sp + 0x98] = a2\n 37982: a5 = a5 << 0x10\n 37985: t0 = t0 << 0x18\n 37988: t0 = t0 | a5\n 37991: a2 = u64 [sp + 0x190]\n 37995: a2 = a2 | t1\n 37998: u64 [sp + 0x1a8] = a2\n 38002: a2 = u8 [s1 + 0x1]\n 38005: a4 = u8 [s1]\n 38007: a5 = u8 [s1 + 0x2]\n 38010: s1 = u8 [s1 + 0x3]\n 38013: a2 = a2 << 0x8\n 38016: t1 = a2 | a4\n 38019: a5 = a5 << 0x10\n 38022: s1 = s1 << 0x18\n 38025: a5 = a5 | s1\n 38028: u64 [sp + 0x90] = a5\n 38032: a2 = u64 [sp + 0x198]\n 38036: a4 = u64 [sp + 0x188]\n 38040: a2 = a2 | a4\n 38043: u64 [sp + 0x1a0] = a2\n 38047: a2 = u8 [a0 + 0x19]\n 38050: a4 = u8 [a0 + 0x18]\n 38053: a5 = u8 [a0 + 0x1a]\n 38056: s1 = u8 [a0 + 0x1b]\n 38059: a2 = a2 << 0x8\n 38062: a2 = a2 | a4\n 38065: u64 [sp + 0x88] = a2\n 38069: a5 = a5 << 0x10\n 38072: s1 = s1 << 0x18\n 38075: a5 = a5 | s1\n 38078: u64 [sp + 0x80] = a5\n 38082: a2 = u64 [sp + 0x180]\n 38086: a4 = u64 [sp + 0x178]\n 38090: a2 = a2 | a4\n 38093: u64 [sp + 0x198] = a2\n 38097: a2 = u8 [a0 + 0x11]\n 38100: a4 = u8 [a0 + 0x10]\n 38103: a5 = u8 [a0 + 0x12]\n 38106: s1 = u8 [a0 + 0x13]\n 38109: a2 = a2 << 0x8\n 38112: a2 = a2 | a4\n 38115: u64 [sp + 0x78] = a2\n 38118: a5 = a5 << 0x10\n 38121: s1 = s1 << 0x18\n 38124: a5 = a5 | s1\n 38127: u64 [sp + 0x70] = a5\n 38130: a2 = u64 [sp + 0x170]\n 38134: a4 = u64 [sp + 0x168]\n 38138: a2 = a2 | a4\n 38141: u64 [sp + 0x190] = a2\n 38145: a2 = u8 [a0 + 0x9]\n 38148: a4 = u8 [a0 + 0x8]\n 38151: a5 = u8 [a0 + 0xa]\n 38154: s1 = u8 [a0 + 0xb]\n 38157: a2 = a2 << 0x8\n 38160: a2 = a2 | a4\n 38163: u64 [sp + 0x168] = a2\n 38167: a5 = a5 << 0x10\n 38170: s1 = s1 << 0x18\n 38173: a5 = a5 | s1\n 38176: u64 [sp + 0x68] = a5\n 38179: a2 = u64 [sp + 0x160]\n 38183: a4 = u64 [sp + 0x158]\n 38187: a2 = a2 | a4\n 38190: u64 [sp + 0x188] = a2\n 38194: a2 = u8 [a0 + 0x1]\n 38197: a4 = u8 [a0]\n 38199: a5 = u8 [a0 + 0x2]\n 38202: a0 = u8 [a0 + 0x3]\n 38205: a2 = a2 << 0x8\n 38208: a2 = a2 | a4\n 38211: u64 [sp + 0x158] = a2\n 38215: a5 = a5 << 0x10\n 38218: a0 = a0 << 0x18\n 38221: a0 = a0 | a5\n 38224: u64 [sp + 0x60] = a0\n 38227: a0 = u64 [sp + 0x150]\n 38231: a2 = u64 [sp + 0x148]\n 38235: a0 = a0 | a2\n 38238: u64 [sp + 0x180] = a0\n 38242: a0 = u8 [a1 + 0x19]\n 38245: a2 = u8 [a1 + 0x18]\n 38248: a4 = u8 [a1 + 0x1a]\n 38251: a5 = u8 [a1 + 0x1b]\n 38254: a0 = a0 << 0x8\n 38257: a0 = a0 | a2\n 38260: u64 [sp + 0x148] = a0\n 38264: a4 = a4 << 0x10\n 38267: a5 = a5 << 0x18\n 38270: a4 = a4 | a5\n 38273: u64 [sp + 0x58] = a4\n 38276: a0 = u64 [sp + 0x140]\n 38280: a2 = u64 [sp + 0x138]\n 38284: a0 = a0 | a2\n 38287: u64 [sp + 0x178] = a0\n 38291: a0 = u8 [a1 + 0x11]\n 38294: a2 = u8 [a1 + 0x10]\n 38297: a4 = u8 [a1 + 0x12]\n 38300: a5 = u8 [a1 + 0x13]\n 38303: a0 = a0 << 0x8\n 38306: a0 = a0 | a2\n 38309: u64 [sp + 0x138] = a0\n 38313: a4 = a4 << 0x10\n 38316: a5 = a5 << 0x18\n 38319: a4 = a4 | a5\n 38322: u64 [sp + 0x50] = a4\n 38325: a0 = u64 [sp + 0x130]\n 38329: a2 = u64 [sp + 0x120]\n 38333: a0 = a0 | a2\n 38336: u64 [sp + 0x170] = a0\n 38340: a0 = u8 [a1 + 0x9]\n 38343: a2 = u8 [a1 + 0x8]\n 38346: a4 = u8 [a1 + 0xa]\n 38349: a5 = u8 [a1 + 0xb]\n 38352: a0 = a0 << 0x8\n 38355: a0 = a0 | a2\n 38358: u64 [sp + 0x120] = a0\n 38362: a4 = a4 << 0x10\n 38365: a5 = a5 << 0x18\n 38368: a4 = a4 | a5\n 38371: u64 [sp + 0x48] = a4\n 38374: a0 = u64 [sp + 0x118]\n 38378: a2 = u64 [sp + 0x110]\n 38382: a0 = a0 | a2\n 38385: u64 [sp + 0x160] = a0\n 38389: a0 = u8 [a1 + 0x1]\n 38392: a2 = u8 [a1]\n 38394: a4 = u8 [a1 + 0x2]\n 38397: a1 = u8 [a1 + 0x3]\n 38400: a0 = a0 << 0x8\n 38403: a0 = a0 | a2\n 38406: u64 [sp + 0x110] = a0\n 38410: a4 = a4 << 0x10\n 38413: a1 = a1 << 0x18\n 38416: a1 = a1 | a4\n 38419: u64 [sp + 0x40] = a1\n 38422: a0 = u64 [sp + 0xf8]\n 38426: a1 = u64 [sp + 0xf0]\n 38430: a0 = a0 | a1\n 38433: u64 [sp + 0x150] = a0\n 38437: a0 = u8 [a3 + 0x19]\n 38440: a1 = u8 [a3 + 0x18]\n 38443: a2 = u8 [a3 + 0x1a]\n 38446: a4 = u8 [a3 + 0x1b]\n 38449: a0 = a0 << 0x8\n 38452: a0 = a0 | a1\n 38455: u64 [sp + 0xf0] = a0\n 38459: a2 = a2 << 0x10\n 38462: a4 = a4 << 0x18\n 38465: a2 = a2 | a4\n 38468: u64 [sp + 0x38] = a2\n 38471: a0 = ra | t2\n 38474: u64 [sp + 0x140] = a0\n 38478: a0 = u8 [a3 + 0x11]\n 38481: a1 = u8 [a3 + 0x10]\n 38484: a2 = u8 [a3 + 0x12]\n 38487: a4 = u8 [a3 + 0x13]\n 38490: a0 = a0 << 0x8\n 38493: a0 = a0 | a1\n 38496: u64 [sp + 0x30] = a0\n 38499: a2 = a2 << 0x10\n 38502: a4 = a4 << 0x18\n 38505: a2 = a2 | a4\n 38508: u64 [sp + 0x28] = a2\n 38511: a0 = u64 [sp + 0xe8]\n 38515: a1 = u64 [sp + 0xe0]\n 38519: a0 = a0 | a1\n 38522: u64 [sp + 0x130] = a0\n 38526: a0 = u8 [a3 + 0x9]\n 38529: a1 = u8 [a3 + 0x8]\n 38532: a2 = u8 [a3 + 0xa]\n 38535: a4 = u8 [a3 + 0xb]\n 38538: a0 = a0 << 0x8\n 38541: a0 = a0 | a1\n 38544: u64 [sp + 0xe8] = a0\n 38548: a2 = a2 << 0x10\n 38551: a4 = a4 << 0x18\n 38554: a2 = a2 | a4\n 38557: u64 [sp + 0xe0] = a2\n 38561: a0 = u64 [sp + 0xd8]\n 38565: a1 = u64 [sp + 0xd0]\n 38569: a0 = a0 | a1\n 38572: u64 [sp + 0x118] = a0\n 38576: a0 = u8 [a3 + 0x1]\n 38579: a1 = u8 [a3]\n 38581: a2 = u8 [a3 + 0x2]\n 38584: a3 = u8 [a3 + 0x3]\n 38587: a0 = a0 << 0x8\n 38590: a0 = a0 | a1\n 38593: u64 [sp + 0xd8] = a0\n 38597: a2 = a2 << 0x10\n 38600: a0 = a3 << 0x18\n 38603: a0 = a0 | a2\n 38606: a1 = u64 [sp + 0xc8]\n 38610: a2 = u64 [sp + 0xc0]\n 38614: a1 = a1 | a2\n 38617: u64 [sp + 0xf8] = a1\n 38621: a1 = u64 [sp + 0xb8]\n 38625: a2 = u64 [sp + 0xb0]\n 38629: a1 = a1 | a2\n 38632: u64 [sp + 0xd0] = a1\n 38636: a1 = u64 [sp + 0xa8]\n 38640: a2 = u64 [sp + 0xa0]\n 38644: a1 = a1 | a2\n 38647: u64 [sp + 0xc8] = a1\n 38651: a2 = u64 [sp + 0x98]\n 38655: a1 = t0 | a2\n 38658: u64 [sp + 0xc0] = a1\n 38662: a3 = u64 [sp + 0x90]\n 38666: a3 = a3 | t1\n 38669: a4 = u64 [sp + 0x88]\n 38673: a5 = u64 [sp + 0x80]\n 38677: a4 = a4 | a5\n 38680: a5 = u64 [sp + 0x78]\n 38683: s1 = u64 [sp + 0x70]\n 38686: a5 = a5 | s1\n 38689: s1 = u64 [sp + 0x168]\n 38693: a1 = u64 [sp + 0x68]\n 38696: t0 = a1 | s1\n 38699: a1 = u64 [sp + 0x158]\n 38703: s1 = u64 [sp + 0x60]\n 38706: t1 = s1 | a1\n 38709: a1 = u64 [sp + 0x148]\n 38713: s1 = u64 [sp + 0x58]\n 38716: t2 = s1 | a1\n 38719: a1 = u64 [sp + 0x138]\n 38723: s1 = u64 [sp + 0x50]\n 38726: s1 = s1 | a1\n 38729: a1 = u64 [sp + 0x120]\n 38733: a2 = u64 [sp + 0x48]\n 38736: ra = a2 | a1\n 38739: a1 = u64 [sp + 0x110]\n 38743: a2 = u64 [sp + 0x40]\n 38746: a1 = a1 | a2\n 38749: u64 [sp + 0x158] = a1\n 38753: a1 = u64 [sp + 0xf0]\n 38757: a2 = u64 [sp + 0x38]\n 38760: a1 = a1 | a2\n 38763: u64 [sp + 0x148] = a1\n 38767: a1 = u64 [sp + 0x30]\n 38770: a2 = u64 [sp + 0x28]\n 38773: a1 = a1 | a2\n 38776: u64 [sp + 0x138] = a1\n 38780: a1 = u64 [sp + 0xe8]\n 38784: a2 = u64 [sp + 0xe0]\n 38788: a2 = a2 | a1\n 38791: a1 = u64 [sp + 0xd8]\n 38795: a0 = a0 | a1\n 38798: u64 [sp + 0x120] = a0\n 38802: a0 = u64 [sp + 0x1b8]\n 38806: a0 = a0 << 0x20\n 38809: a1 = u64 [sp + 0xd0]\n 38813: a0 = a0 | a1\n 38816: u64 [sp + 0x1b8] = a0\n 38820: a0 = u64 [sp + 0x1b0]\n 38824: a0 = a0 << 0x20\n 38827: a1 = u64 [sp + 0xc8]\n 38831: a0 = a0 | a1\n 38834: u64 [sp + 0x1b0] = a0\n 38838: a0 = u64 [sp + 0x1a8]\n 38842: a0 = a0 << 0x20\n 38845: a1 = u64 [sp + 0xc0]\n 38849: a0 = a0 | a1\n 38852: u64 [sp + 0x1a8] = a0\n 38856: a0 = u64 [sp + 0x1a0]\n 38860: a0 = a0 << 0x20\n 38863: a0 = a0 | a3\n 38866: u64 [sp + 0x1a0] = a0\n 38870: a0 = u64 [sp + 0x198]\n 38874: a0 = a0 << 0x20\n 38877: a0 = a0 | a4\n 38880: u64 [sp + 0x198] = a0\n 38884: a0 = u64 [sp + 0x190]\n 38888: a0 = a0 << 0x20\n 38891: a0 = a0 | a5\n 38894: u64 [sp + 0x190] = a0\n 38898: a0 = u64 [sp + 0x188]\n 38902: a0 = a0 << 0x20\n 38905: a0 = a0 | t0\n 38908: u64 [sp + 0x188] = a0\n 38912: a0 = u64 [sp + 0x180]\n 38916: a0 = a0 << 0x20\n 38919: a0 = a0 | t1\n 38922: u64 [sp + 0x180] = a0\n 38926: a0 = u64 [sp + 0x178]\n 38930: a0 = a0 << 0x20\n 38933: a0 = a0 | t2\n 38936: u64 [sp + 0x178] = a0\n 38940: t2 = u64 [sp + 0x1e8]\n 38944: a0 = u64 [sp + 0x170]\n 38948: a0 = a0 << 0x20\n 38951: a0 = a0 | s1\n 38954: u64 [sp + 0x170] = a0\n 38958: a0 = u64 [sp + 0x160]\n 38962: a0 = a0 << 0x20\n 38965: a0 = a0 | ra\n 38968: u64 [sp + 0x168] = a0\n 38972: a0 = u64 [sp + 0x150]\n 38976: a0 = a0 << 0x20\n 38979: a1 = u64 [sp + 0x158]\n 38983: a0 = a0 | a1\n 38986: u64 [sp + 0x160] = a0\n 38990: a0 = u64 [sp + 0x140]\n 38994: a0 = a0 << 0x20\n 38997: a1 = u64 [sp + 0x148]\n 39001: a0 = a0 | a1\n 39004: u64 [sp + 0x158] = a0\n 39008: a0 = u64 [sp + 0x130]\n 39012: a0 = a0 << 0x20\n 39015: a1 = u64 [sp + 0x138]\n 39019: a0 = a0 | a1\n 39022: u64 [sp + 0x150] = a0\n 39026: a0 = u64 [sp + 0x118]\n 39030: a0 = a0 << 0x20\n 39033: a0 = a0 | a2\n 39036: u64 [sp + 0x148] = a0\n 39040: a0 = u64 [sp + 0xf8]\n 39044: a0 = a0 << 0x20\n 39047: a1 = u64 [sp + 0x120]\n 39051: a0 = a0 | a1\n 39054: u64 [sp + 0x140] = a0\n 39058: a0 = u64 [sp + 0x128]\n 39062: i32 a5 = a0 + 0x40\n 39065: a5 = a5 + t2\n 39068: a0 = u8 [a5 + 0x19]\n 39071: a1 = u8 [a5 + 0x18]\n 39074: a2 = u8 [a5 + 0x1a]\n 39077: a3 = u8 [a5 + 0x1b]\n 39080: a0 = a0 << 0x8\n 39083: a0 = a0 | a1\n 39086: a2 = a2 << 0x10\n 39089: a3 = a3 << 0x18\n 39092: a2 = a2 | a3\n 39095: a0 = a0 | a2\n 39098: a1 = u8 [a5 + 0x1d]\n 39101: a2 = u8 [a5 + 0x1c]\n 39104: a3 = u8 [a5 + 0x1e]\n 39107: a4 = u8 [a5 + 0x1f]\n 39110: a1 = a1 << 0x8\n 39113: a1 = a1 | a2\n 39116: a3 = a3 << 0x10\n 39119: a4 = a4 << 0x18\n 39122: a3 = a3 | a4\n 39125: a1 = a1 | a3\n 39128: a1 = a1 << 0x20\n 39131: t0 = a1 | a0\n 39134: a1 = u8 [a5 + 0x11]\n 39137: a2 = u8 [a5 + 0x10]\n 39140: a3 = u8 [a5 + 0x12]\n 39143: a4 = u8 [a5 + 0x13]\n 39146: a1 = a1 << 0x8\n 39149: a1 = a1 | a2\n 39152: a3 = a3 << 0x10\n 39155: a4 = a4 << 0x18\n 39158: a3 = a3 | a4\n 39161: a1 = a1 | a3\n 39164: a2 = u8 [a5 + 0x15]\n 39167: a3 = u8 [a5 + 0x14]\n 39170: a4 = u8 [a5 + 0x16]\n 39173: s1 = u8 [a5 + 0x17]\n 39176: a2 = a2 << 0x8\n 39179: a2 = a2 | a3\n 39182: a4 = a4 << 0x10\n 39185: s1 = s1 << 0x18\n 39188: a4 = a4 | s1\n 39191: a2 = a2 | a4\n 39194: a2 = a2 << 0x20\n 39197: t1 = a2 | a1\n 39200: a1 = u8 [a5 + 0x9]\n 39203: a2 = u8 [a5 + 0x8]\n 39206: a3 = u8 [a5 + 0xa]\n 39209: s1 = u8 [a5 + 0xb]\n 39212: a1 = a1 << 0x8\n 39215: a1 = a1 | a2\n 39218: a3 = a3 << 0x10\n 39221: s1 = s1 << 0x18\n 39224: a3 = a3 | s1\n 39227: a1 = a1 | a3\n 39230: a2 = u8 [a5 + 0xd]\n 39233: a3 = u8 [a5 + 0xc]\n 39236: s1 = u8 [a5 + 0xe]\n 39239: a0 = u8 [a5 + 0xf]\n 39242: a2 = a2 << 0x8\n 39245: a2 = a2 | a3\n 39248: s1 = s1 << 0x10\n 39251: a0 = a0 << 0x18\n 39254: a0 = a0 | s1\n 39257: a0 = a0 | a2\n 39260: a0 = a0 << 0x20\n 39263: a1 = a1 | a0\n 39266: a0 = u8 [a5 + 0x1]\n 39269: a2 = u8 [a5]\n 39271: a3 = u8 [a5 + 0x2]\n 39274: s1 = u8 [a5 + 0x3]\n 39277: a0 = a0 << 0x8\n 39280: a0 = a0 | a2\n 39283: a3 = a3 << 0x10\n 39286: s1 = s1 << 0x18\n 39289: a3 = a3 | s1\n 39292: a0 = a0 | a3\n 39295: a2 = u8 [a5 + 0x5]\n 39298: a3 = u8 [a5 + 0x4]\n 39301: s1 = u8 [a5 + 0x6]\n 39304: a5 = u8 [a5 + 0x7]\n 39307: a2 = a2 << 0x8\n 39310: a2 = a2 | a3\n 39313: s1 = s1 << 0x10\n 39316: a5 = a5 << 0x18\n 39319: a5 = a5 | s1\n 39322: a2 = a2 | a5\n 39325: a2 = a2 << 0x20\n 39328: a3 = a2 | a0\n 39331: a0 = u64 [sp + 0x210]\n 39335: a2 = u64 [sp + 0x1f0]\n 39339: jump @819 if a0 >=u a2\n      : @818 (gas: 3)\n 39342: a0 = u64 [sp + 0x218]\n 39346: u32 [a0] = a2\n 39348: fallthrough\n      : @819 (gas: 218)\n 39349: a0 = u64 [sp + 0x108]\n 39353: i32 ra = a0 + 0x60\n 39356: ra = ra + t2\n 39359: a0 = u8 [ra + 0x1]\n 39362: a2 = u8 [ra]\n 39364: a5 = u8 [ra + 0x2]\n 39367: s1 = u8 [ra + 0x3]\n 39370: a0 = a0 << 0x8\n 39373: a0 = a0 | a2\n 39376: a5 = a5 << 0x10\n 39379: s1 = s1 << 0x18\n 39382: a5 = a5 | s1\n 39385: a0 = a0 | a5\n 39388: a2 = u8 [ra + 0x5]\n 39391: a5 = u8 [ra + 0x4]\n 39394: s1 = u8 [ra + 0x6]\n 39397: t2 = u8 [ra + 0x7]\n 39400: a2 = a2 << 0x8\n 39403: a2 = a2 | a5\n 39406: s1 = s1 << 0x10\n 39409: t2 = t2 << 0x18\n 39412: a5 = t2 | s1\n 39415: a2 = a2 | a5\n 39418: a2 = a2 << 0x20\n 39421: a0 = a0 | a2\n 39424: u64 [sp + 0x218] = a0\n 39428: a0 = u8 [ra + 0x9]\n 39431: a2 = u8 [ra + 0x8]\n 39434: a5 = u8 [ra + 0xa]\n 39437: s1 = u8 [ra + 0xb]\n 39440: a0 = a0 << 0x8\n 39443: a0 = a0 | a2\n 39446: a5 = a5 << 0x10\n 39449: s1 = s1 << 0x18\n 39452: a5 = a5 | s1\n 39455: a0 = a0 | a5\n 39458: a2 = u8 [ra + 0xd]\n 39461: a5 = u8 [ra + 0xc]\n 39464: s1 = u8 [ra + 0xe]\n 39467: a4 = u8 [ra + 0xf]\n 39470: a2 = a2 << 0x8\n 39473: a2 = a2 | a5\n 39476: s1 = s1 << 0x10\n 39479: a4 = a4 << 0x18\n 39482: a4 = a4 | s1\n 39485: a2 = a2 | a4\n 39488: a2 = a2 << 0x20\n 39491: a0 = a0 | a2\n 39494: u64 [sp + 0x210] = a0\n 39498: a0 = u8 [ra + 0x11]\n 39501: a2 = u8 [ra + 0x10]\n 39504: a4 = u8 [ra + 0x12]\n 39507: a5 = u8 [ra + 0x13]\n 39510: a0 = a0 << 0x8\n 39513: a0 = a0 | a2\n 39516: a4 = a4 << 0x10\n 39519: a5 = a5 << 0x18\n 39522: a4 = a4 | a5\n 39525: a0 = a0 | a4\n 39528: a2 = u8 [ra + 0x15]\n 39531: a4 = u8 [ra + 0x14]\n 39534: a5 = u8 [ra + 0x16]\n 39537: s1 = u8 [ra + 0x17]\n 39540: a2 = a2 << 0x8\n 39543: a2 = a2 | a4\n 39546: a5 = a5 << 0x10\n 39549: s1 = s1 << 0x18\n 39552: a5 = a5 | s1\n 39555: a2 = a2 | a5\n 39558: a2 = a2 << 0x20\n 39561: a0 = a0 | a2\n 39564: u64 [sp + 0x1e8] = a0\n 39568: a0 = u8 [ra + 0x19]\n 39571: a2 = u8 [ra + 0x18]\n 39574: a4 = u8 [ra + 0x1a]\n 39577: a5 = u8 [ra + 0x1b]\n 39580: a0 = a0 << 0x8\n 39583: a0 = a0 | a2\n 39586: a4 = a4 << 0x10\n 39589: a5 = a5 << 0x18\n 39592: a4 = a4 | a5\n 39595: a0 = a0 | a4\n 39598: a2 = u8 [ra + 0x1d]\n 39601: a4 = u8 [ra + 0x1c]\n 39604: a5 = u8 [ra + 0x1e]\n 39607: s1 = u8 [ra + 0x1f]\n 39610: a2 = a2 << 0x8\n 39613: a2 = a2 | a4\n 39616: a5 = a5 << 0x10\n 39619: s1 = s1 << 0x18\n 39622: a5 = a5 | s1\n 39625: a2 = a2 | a5\n 39628: a2 = a2 << 0x20\n 39631: a0 = a0 | a2\n 39634: ra = reverse t0\n 39636: a5 = reverse t1\n 39638: a4 = reverse a1\n 39640: a2 = reverse a3\n 39642: a1 = u64 [sp + 0x158]\n 39646: a1 = reverse a1\n 39648: u64 [sp + 0x158] = a1\n 39652: a1 = u64 [sp + 0x150]\n 39656: t0 = reverse a1\n 39658: a1 = u64 [sp + 0x148]\n 39662: a3 = reverse a1\n 39664: a1 = u64 [sp + 0x140]\n 39668: a1 = reverse a1\n 39670: s1 = u64 [sp + 0x178]\n 39674: s1 = reverse s1\n 39676: u64 [sp + 0x178] = s1\n 39680: s1 = u64 [sp + 0x170]\n 39684: s1 = reverse s1\n 39686: u64 [sp + 0x170] = s1\n 39690: s1 = u64 [sp + 0x168]\n 39694: s1 = reverse s1\n 39696: u64 [sp + 0x168] = s1\n 39700: s1 = u64 [sp + 0x160]\n 39704: t1 = reverse s1\n 39706: s1 = u64 [sp + 0x198]\n 39710: s1 = reverse s1\n 39712: u64 [sp + 0x198] = s1\n 39716: s1 = u64 [sp + 0x190]\n 39720: s1 = reverse s1\n 39722: u64 [sp + 0x190] = s1\n 39726: s1 = u64 [sp + 0x188]\n 39730: s1 = reverse s1\n 39732: u64 [sp + 0x188] = s1\n 39736: s1 = u64 [sp + 0x180]\n 39740: t2 = reverse s1\n 39742: s1 = u64 [sp + 0x1b8]\n 39746: s1 = reverse s1\n 39748: u64 [sp + 0x1b8] = s1\n 39752: s1 = u64 [sp + 0x1b0]\n 39756: s1 = reverse s1\n 39758: u64 [sp + 0x1b0] = s1\n 39762: s1 = u64 [sp + 0x1a8]\n 39766: s1 = reverse s1\n 39768: u64 [sp + 0x1a8] = s1\n 39772: s1 = u64 [sp + 0x1a0]\n 39776: s1 = reverse s1\n 39778: a0 = reverse a0\n 39780: u64 [sp + 0x1f0] = a0\n 39784: a0 = u64 [sp + 0x1e8]\n 39788: a0 = reverse a0\n 39790: u64 [sp + 0x1e8] = a0\n 39794: a0 = u64 [sp + 0x210]\n 39798: a0 = reverse a0\n 39800: u64 [sp + 0x210] = a0\n 39804: a0 = u64 [sp + 0x218]\n 39808: a0 = reverse a0\n 39810: u64 [sp + 0x218] = a0\n 39814: a0 = sp + 0x300\n 39818: u64 [sp + 0x10] = a0\n 39821: a0 = sp + 0x320\n 39825: u64 [sp + 0x8] = a0\n 39828: a0 = sp + 0x340\n 39832: u64 [sp] = a0\n 39834: u64 [sp + 0x338] = a2\n 39838: u64 [sp + 0x330] = a4\n 39842: u64 [sp + 0x328] = a5\n 39846: u64 [sp + 0x320] = ra\n 39850: u64 [sp + 0x358] = a1\n 39854: u64 [sp + 0x350] = a3\n 39858: u64 [sp + 0x348] = t0\n 39862: a0 = u64 [sp + 0x158]\n 39866: u64 [sp + 0x340] = a0\n 39870: a0 = u64 [sp + 0x1f8]\n 39874: u64 [sp + 0x378] = a0\n 39878: a0 = u64 [sp + 0x200]\n 39882: u64 [sp + 0x370] = a0\n 39886: a0 = u64 [sp + 0x208]\n 39890: u64 [sp + 0x368] = a0\n 39894: a0 = u64 [sp + 0x1e0]\n 39898: u64 [sp + 0x360] = a0\n 39902: u64 [sp + 0x398] = t1\n 39906: a0 = u64 [sp + 0x168]\n 39910: u64 [sp + 0x390] = a0\n 39914: a0 = u64 [sp + 0x170]\n 39918: u64 [sp + 0x388] = a0\n 39922: a0 = u64 [sp + 0x178]\n 39926: u64 [sp + 0x380] = a0\n 39930: u64 [sp + 0x3b8] = t2\n 39934: a0 = u64 [sp + 0x188]\n 39938: u64 [sp + 0x3b0] = a0\n 39942: a0 = u64 [sp + 0x190]\n 39946: u64 [sp + 0x3a8] = a0\n 39950: a0 = u64 [sp + 0x198]\n 39954: u64 [sp + 0x3a0] = a0\n 39958: u64 [sp + 0x3d8] = s1\n 39962: a0 = u64 [sp + 0x1a8]\n 39966: u64 [sp + 0x3d0] = a0\n 39970: a0 = u64 [sp + 0x1b0]\n 39974: u64 [sp + 0x3c8] = a0\n 39978: a0 = u64 [sp + 0x1b8]\n 39982: u64 [sp + 0x3c0] = a0\n 39986: a0 = u64 [sp + 0x1d0]\n 39990: u64 [sp + 0x3f8] = a0\n 39994: a0 = u64 [sp + 0x1c0]\n 39998: u64 [sp + 0x3f0] = a0\n 40002: a0 = u64 [sp + 0x1c8]\n 40006: u64 [sp + 0x3e8] = a0\n 40010: a0 = u64 [sp + 0x1d8]\n 40014: u64 [sp + 0x3e0] = a0\n 40018: a0 = u64 [sp + 0x218]\n 40022: u64 [sp + 0x318] = a0\n 40026: a0 = u64 [sp + 0x210]\n 40030: u64 [sp + 0x310] = a0\n 40034: a0 = u64 [sp + 0x1e8]\n 40038: u64 [sp + 0x308] = a0\n 40042: a0 = sp + 0x400\n 40046: a1 = sp + 0x3e0\n 40050: a2 = sp + 0x3c0\n 40054: a3 = sp + 0x3a0\n 40058: a4 = sp + 0x380\n 40062: a5 = sp + 0x360\n 40066: s1 = u64 [sp + 0x1f0]\n 40070: u64 [sp + 0x300] = s1\n 40074: ra = 114, jump @1463\n      : @820 [@dyn 57] (gas: 16)\n 40079: a0 = u64 [sp + 0x400]\n 40083: a1 = u64 [sp + 0x410]\n 40087: a2 = u64 [sp + 0x418]\n 40091: a3 = u64 [sp + 0x408]\n 40095: a0 = a0 ^ 0x1\n 40098: a4 = u64 [sp + 0x100]\n 40102: u64 [a4 + 0x10] = a1\n 40105: u64 [a4 + 0x18] = a2\n 40108: u64 [a4] = a0\n 40110: u64 [a4 + 0x8] = a3\n 40113: sp = s0 + 0xfffffffffffffae0\n 40117: ra = u64 [sp + 0x518]\n 40121: s0 = u64 [sp + 0x510]\n 40125: s1 = u64 [sp + 0x508]\n 40129: sp = sp + 0x520\n 40133: ret\n      : @821 (gas: 1)\n 40135: trap\n      : @822 (gas: 5)\n 40136: u64 [ra + 24] = 0\n 40139: u64 [ra + 16] = 0\n 40142: u64 [ra + 0] = 0x717b484e\n 40148: u64 [ra + 8] = 0\n 40151: jump @824 if t2 >u 63\n      : @823 (gas: 4)\n 40155: a1 = u64 [sp + 0x218]\n 40159: u32 [a1 + 0] = 0x40\n 40162: a0 = 0x32000000\n 40168: jump @825\n      : @824 (gas: 2)\n 40170: a0 = 0x32000000\n 40176: fallthrough\n      : @825 (gas: 14)\n 40177: a1 = u64 [sp + 0x1e8]\n 40181: u32 [a1 + 0x20] = a0\n 40184: u32 [a1 + 28] = 0\n 40187: u32 [a1 + 24] = 0\n 40190: u32 [a1 + 20] = 0\n 40193: u32 [a1 + 16] = 0\n 40196: u32 [a1 + 12] = 0\n 40199: u32 [a1 + 8] = 0\n 40202: u32 [a1 + 4] = 0\n 40205: i32 a1 = a1 + 0\n 40207: a0 = 0x1\n 40210: a2 = 0x24\n 40213: ecalli 5 // 'seal_return'\n 40215: fallthrough\n      : @826 (gas: 7)\n 40216: a1 = u64 [sp + 0x1e8]\n 40220: u64 [a1 + 24] = 0\n 40223: u64 [a1 + 16] = 0\n 40226: u64 [a1 + 0] = 0x717b484e\n 40232: u64 [a1 + 8] = 0\n 40235: a1 = u64 [sp + 0x178]\n 40239: jump @823 if a1 <=u 63\n      : @827 (gas: 1)\n 40243: jump @824\n      : @828 (gas: 6)\n 40245: u64 [0x20068] = 0\n 40250: u64 [0x20060] = 0\n 40255: u64 [0x20050] = 0x717b484e\n 40264: u64 [0x20058] = 0\n 40269: a0 = u64 [sp + 0x210]\n 40273: jump @830 if a0 >u 63\n      : @829 (gas: 4)\n 40277: a1 = u64 [sp + 0x218]\n 40281: u32 [a1 + 0] = 0x40\n 40284: a0 = 0x11000000\n 40290: jump @825\n      : @830 (gas: 2)\n 40292: a0 = 0x11000000\n 40298: jump @825\n      : @831 (gas: 17)\n 40300: u64 [t1 + 16] = 0\n 40303: u64 [t1 + 24] = 0\n 40306: u64 [t1 + 8] = 0\n 40309: u64 [t1 + 0] = 0x717b484e\n 40315: u32 [t1 + 32] = 0x41000000\n 40322: u32 [t1 + 20] = 0\n 40325: u32 [t1 + 24] = 0\n 40328: u32 [t1 + 28] = 0\n 40331: u32 [t1 + 8] = 0\n 40334: u32 [t1 + 12] = 0\n 40337: u32 [t1 + 16] = 0\n 40340: u32 [t1 + 4] = 0\n 40343: i32 a1 = t1 + 0\n 40345: a0 = 0x1\n 40348: a2 = 0x24\n 40351: ecalli 5 // 'seal_return'\n 40353: fallthrough\n      : @832 (gas: 7)\n 40354: a1 = u64 [sp + 0x1e8]\n 40358: u64 [a1 + 24] = 0\n 40361: u64 [a1 + 16] = 0\n 40364: u64 [a1 + 0] = 0x717b484e\n 40370: i32 t0 = t0 + 0\n 40372: u64 [a1 + 8] = 0\n 40375: jump @823 if t0 <=u 63\n      : @833 (gas: 1)\n 40380: jump @824\n      : @834 (gas: 10)\n 40383: sp = sp + 0xffffffffffffff20\n 40387: u64 [sp + 0xd8] = ra\n 40391: u64 [sp + 0xd0] = s0\n 40395: u64 [sp + 0xc8] = s1\n 40399: s0 = sp + 0xe0\n 40403: sp = sp & 0xfffffffffffffff0\n 40406: a2 = 0x20044\n 40411: a3 = i32 [0x20044]\n 40416: u64 [sp + 0x40] = a3\n 40419: jump @836 if a3 >u 95\n      : @835 (gas: 3)\n 40423: u64 [sp + 64] = 0x60\n 40427: u32 [0x20044] = 0x60\n 40433: fallthrough\n      : @836 (gas: 16)\n 40434: u64 [sp + 0x50] = a2\n 40437: s1 = 0x20050\n 40442: a4 = u64 [0x200a0]\n 40447: a1 = u64 [0x200a8]\n 40452: a2 = u64 [0x20090]\n 40457: a3 = u64 [0x20098]\n 40462: a4 = reverse a4\n 40464: a1 = reverse a1\n 40466: t1 = reverse a2\n 40468: a2 = reverse a3\n 40470: a3 = a1\n 40472: t2 = a2 | t1\n 40475: a1 = a1 <u 0xffffffffffffff60\n 40479: a1 = 0 if a4 != 0\n 40481: a1 = 0 if t2 != 0\n 40483: jump @863 if a1 == 0\n      : @837 (gas: 27)\n 40487: u64 [sp + 0x30] = a0\n 40490: ra = a3 + 0xa0\n 40494: a0 = ra <u a3\n 40497: a1 = a4 + a0\n 40500: u64 [sp + 0x58] = a3\n 40503: a3 = a1 <u a4\n 40506: a3 = a0 if a0 == 0\n 40509: a0 = a2 + a3\n 40512: a3 = a0 <u a2\n 40515: a3 = a3 + t1\n 40518: t0 = reverse a3\n 40520: a3 = u64 [sp + 0x58]\n 40523: a5 = reverse a0\n 40525: a1 = reverse a1\n 40527: a0 = reverse ra\n 40529: u64 [sp + 0x18] = a0\n 40532: u64 [0x200a8] = a0\n 40537: u64 [sp + 0x10] = a1\n 40540: u64 [0x200a0] = a1\n 40545: u64 [sp] = a5\n 40547: u64 [0x20098] = a5\n 40552: a5 = a3 <u 0xffffffffffffff20\n 40556: a5 = 0 if a4 != 0\n 40558: a5 = 0 if t2 != 0\n 40560: u64 [sp + 0x8] = t0\n 40563: u64 [0x20090] = t0\n 40568: jump @863 if a5 == 0\n      : @838 (gas: 27)\n 40572: a5 = a3 + 0xe0\n 40576: a0 = a5 <u a3\n 40579: a1 = a4 + a0\n 40582: u64 [sp + 0x48] = a4\n 40585: a3 = u64 [sp + 0x48]\n 40588: t0 = a1 <u a3\n 40591: t0 = a0 if a0 == 0\n 40594: t0 = t0 + a2\n 40597: u64 [sp + 0x28] = a2\n 40600: a0 = t0 <u a2\n 40603: u64 [sp + 0x20] = t1\n 40606: a0 = a0 + t1\n 40609: a0 = reverse a0\n 40611: a3 = reverse t0\n 40613: t0 = u64 [sp + 0x48]\n 40616: a1 = reverse a1\n 40618: a5 = reverse a5\n 40620: u64 [0x200a8] = a5\n 40625: u64 [0x200a0] = a1\n 40630: u64 [0x20098] = a3\n 40635: a3 = u64 [sp + 0x58]\n 40638: a1 = 0xffffff60\n 40648: a1 = a3 <u a1\n 40651: a1 = 0 if t0 != 0\n 40653: a1 = 0 if t2 != 0\n 40655: u64 [0x20090] = a0\n 40660: jump @862 if a1 == 0\n      : @839 (gas: 3)\n 40664: i32 a0 = ra >> 0x10\n 40667: a1 = u64 [sp + 0x50]\n 40670: jump @862 if a0 != 0\n      : @840 (gas: 3)\n 40674: a0 = ra + 0x3f\n 40677: a5 = a0 & 0x1ffe0\n 40682: jump @862 if a5 >u 65536\n      : @841 (gas: 2)\n 40689: t1 = u64 [sp + 0x40]\n 40692: jump @843 if t1 >=u a5\n      : @842 (gas: 3)\n 40695: u32 [a1] = a5\n 40697: t1 = a5\n 40699: fallthrough\n      : @843 (gas: 39)\n 40700: a0 = 0xffffff40\n 40710: a5 = a3 <u a0\n 40713: a5 = 0 if t0 != 0\n 40715: a5 = 0 if t2 != 0\n 40717: i32 a2 = ra + 0\n 40719: a2 = a2 + s1\n 40722: u8 [a2 + 31] = 0\n 40725: u8 [a2 + 30] = 0\n 40728: u8 [a2 + 29] = 0\n 40731: u8 [a2 + 28] = 0\n 40734: u8 [a2 + 27] = 0\n 40737: u8 [a2 + 26] = 0\n 40740: u8 [a2 + 25] = 0\n 40743: u8 [a2 + 24] = 0\n 40746: u8 [a2 + 23] = 0\n 40749: u8 [a2 + 22] = 0\n 40752: u8 [a2 + 21] = 0\n 40755: u8 [a2 + 20] = 0\n 40758: u8 [a2 + 19] = 0\n 40761: u8 [a2 + 18] = 0\n 40764: u8 [a2 + 17] = 0\n 40767: u8 [a2 + 16] = 0\n 40770: u8 [a2 + 15] = 0\n 40773: u8 [a2 + 14] = 0\n 40776: u8 [a2 + 13] = 0\n 40779: u8 [a2 + 12] = 0\n 40782: u8 [a2 + 11] = 0\n 40785: u8 [a2 + 10] = 0\n 40788: u8 [a2 + 9] = 0\n 40791: u8 [a2 + 8] = 0\n 40794: u8 [a2 + 7] = 0\n 40797: u8 [a2 + 6] = 0\n 40800: u8 [a2 + 5] = 0\n 40803: u8 [a2 + 4] = 0\n 40806: u8 [a2 + 3] = 0\n 40809: u8 [a2 + 2] = 0\n 40812: u8 [a2 + 1] = 0\n 40815: u8 [a2 + 0] = 0\n 40817: jump @862 if a5 == 0\n      : @844 (gas: 2)\n 40821: i32 a0 = a3 >> 0x6\n 40824: jump @862 if a0 >=u 1021\n      : @845 (gas: 3)\n 40830: a0 = a3 + 0xff\n 40834: a2 = a0 & 0x1ffe0\n 40839: jump @862 if a2 >u 65536\n      : @846 (gas: 3)\n 40846: i32 a5 = a3 + 0xc0\n 40850: a1 = u64 [sp + 0x50]\n 40853: jump @848 if t1 >=u a2\n      : @847 (gas: 3)\n 40856: u32 [a1] = a2\n 40858: t1 = a2\n 40860: fallthrough\n      : @848 (gas: 37)\n 40861: a2 = s1 + a5\n 40864: u8 [a2 + 31] = 0\n 40867: u8 [a2 + 30] = 0\n 40870: u8 [a2 + 29] = 0\n 40873: u8 [a2 + 28] = 0\n 40876: u8 [a2 + 27] = 0\n 40879: u8 [a2 + 26] = 0\n 40882: u8 [a2 + 25] = 0\n 40885: u8 [a2 + 24] = 0\n 40888: u8 [a2 + 23] = 0\n 40891: u8 [a2 + 22] = 0\n 40894: u8 [a2 + 21] = 0\n 40897: u8 [a2 + 20] = 0\n 40900: u8 [a2 + 19] = 0\n 40903: u8 [a2 + 18] = 0\n 40906: u8 [a2 + 17] = 0\n 40909: u8 [a2 + 16] = 0\n 40912: u8 [a2 + 15] = 0\n 40915: u8 [a2 + 14] = 0\n 40918: u8 [a2 + 13] = 0\n 40921: u8 [a2 + 12] = 0\n 40924: u8 [a2 + 11] = 0\n 40927: u8 [a2 + 10] = 0\n 40930: u8 [a2 + 9] = 0\n 40933: u8 [a2 + 8] = 0\n 40936: u8 [a2 + 7] = 0\n 40939: u8 [a2 + 6] = 0\n 40942: u8 [a2 + 5] = 0\n 40945: u8 [a2 + 4] = 0\n 40948: u8 [a2 + 3] = 0\n 40951: u8 [a2 + 2] = 0\n 40954: u8 [a2 + 1] = 0\n 40957: a0 = a3 + 0x3f\n 40960: u64 [sp + 56] = 0x1ffe0\n 40966: a5 = a0 & 0x1ffe0\n 40971: u8 [a2 + 0] = 0\n 40973: jump @850 if t1 >=u a5\n      : @849 (gas: 2)\n 40976: u32 [a1] = a5\n 40978: fallthrough\n      : @850 (gas: 70)\n 40979: i32 a2 = a3 + 0\n 40981: u64 [sp + 0x40] = s1\n 40984: a2 = a2 + s1\n 40987: a4 = u64 [sp + 0x10]\n 40990: u8 [a2 + 0x10] = a4\n 40993: a1 = u64 [sp]\n 40995: a0 = a1 >> 0x38\n 40998: u8 [a2 + 0xf] = a0\n 41001: a0 = a1 >> 0x30\n 41004: u8 [a2 + 0xe] = a0\n 41007: a0 = a1 >> 0x28\n 41010: u8 [a2 + 0xd] = a0\n 41013: a0 = a1 >> 0x20\n 41016: u8 [a2 + 0xc] = a0\n 41019: a0 = a1 >> 0x18\n 41022: u8 [a2 + 0xb] = a0\n 41025: a0 = a1 >> 0x10\n 41028: u8 [a2 + 0xa] = a0\n 41031: a0 = a1 >> 0x8\n 41034: u8 [a2 + 0x9] = a0\n 41037: u8 [a2 + 0x8] = a1\n 41040: a1 = u64 [sp + 0x8]\n 41043: a0 = a1 >> 0x38\n 41046: u8 [a2 + 0x7] = a0\n 41049: a0 = a1 >> 0x30\n 41052: u8 [a2 + 0x6] = a0\n 41055: a0 = a1 >> 0x28\n 41058: u8 [a2 + 0x5] = a0\n 41061: a0 = a1 >> 0x20\n 41064: u8 [a2 + 0x4] = a0\n 41067: a0 = a1 >> 0x18\n 41070: u8 [a2 + 0x3] = a0\n 41073: a0 = a1 >> 0x10\n 41076: u8 [a2 + 0x2] = a0\n 41079: a0 = a1 >> 0x8\n 41082: u8 [a2 + 0x1] = a0\n 41085: u8 [a2] = a1\n 41087: a1 = u64 [sp + 0x18]\n 41090: u8 [a2 + 0x18] = a1\n 41093: a0 = a4 >> 0x38\n 41096: u8 [a2 + 0x17] = a0\n 41099: a0 = a4 >> 0x30\n 41102: u8 [a2 + 0x16] = a0\n 41105: a0 = a4 >> 0x28\n 41108: u8 [a2 + 0x15] = a0\n 41111: a0 = a4 >> 0x20\n 41114: u8 [a2 + 0x14] = a0\n 41117: a0 = a4 >> 0x18\n 41120: u8 [a2 + 0x13] = a0\n 41123: a0 = a4 >> 0x10\n 41126: u8 [a2 + 0x12] = a0\n 41129: a0 = a4 >> 0x8\n 41132: u8 [a2 + 0x11] = a0\n 41135: a0 = a1 >> 0x38\n 41138: u8 [a2 + 0x1f] = a0\n 41141: a0 = a1 >> 0x30\n 41144: u8 [a2 + 0x1e] = a0\n 41147: a0 = a1 >> 0x28\n 41150: u8 [a2 + 0x1d] = a0\n 41153: a0 = a1 >> 0x20\n 41156: u8 [a2 + 0x1c] = a0\n 41159: a0 = a1 >> 0x18\n 41162: u8 [a2 + 0x1b] = a0\n 41165: a0 = a1 >> 0x10\n 41168: u8 [a2 + 0x1a] = a0\n 41171: a0 = a1 >> 0x8\n 41174: u8 [a2 + 0x19] = a0\n 41177: a0 = sp + 0xa0\n 41181: s1 = a3\n 41183: ra = 116, jump @164\n      : @851 [@dyn 58] (gas: 11)\n 41189: a2 = u64 [sp + 0x50]\n 41192: t0 = u64 [sp + 0xb8]\n 41196: t1 = u64 [sp + 0xb0]\n 41200: a3 = u64 [sp + 0xa8]\n 41204: a1 = i32 [a2]\n 41206: a4 = u64 [sp + 0xa0]\n 41210: a0 = s1 + 0x5f\n 41213: a5 = u64 [sp + 0x38]\n 41216: a5 = a5 & a0\n 41219: i32 a0 = s1 + 0x20\n 41222: jump @853 if a1 >=u a5\n      : @852 (gas: 2)\n 41225: u32 [a2] = a5\n 41227: fallthrough\n      : @853 (gas: 68)\n 41228: a5 = u64 [sp + 0x40]\n 41231: a0 = a0 + a5\n 41234: a1 = reverse t0\n 41236: a2 = reverse t1\n 41238: a3 = reverse a3\n 41240: a4 = reverse a4\n 41242: u8 [a0 + 0x18] = a4\n 41245: a5 = a4 >> 0x38\n 41248: u8 [a0 + 0x1f] = a5\n 41251: a5 = a4 >> 0x30\n 41254: u8 [a0 + 0x1e] = a5\n 41257: a5 = a4 >> 0x28\n 41260: u8 [a0 + 0x1d] = a5\n 41263: a5 = a4 >> 0x20\n 41266: u8 [a0 + 0x1c] = a5\n 41269: a5 = a4 >> 0x18\n 41272: u8 [a0 + 0x1b] = a5\n 41275: a5 = a4 >> 0x10\n 41278: u8 [a0 + 0x1a] = a5\n 41281: a4 = a4 >> 0x8\n 41284: u8 [a0 + 0x19] = a4\n 41287: u8 [a0 + 0x10] = a3\n 41290: a4 = a3 >> 0x38\n 41293: u8 [a0 + 0x17] = a4\n 41296: a4 = a3 >> 0x30\n 41299: u8 [a0 + 0x16] = a4\n 41302: a4 = a3 >> 0x28\n 41305: u8 [a0 + 0x15] = a4\n 41308: a4 = a3 >> 0x20\n 41311: u8 [a0 + 0x14] = a4\n 41314: a4 = a3 >> 0x18\n 41317: u8 [a0 + 0x13] = a4\n 41320: a4 = a3 >> 0x10\n 41323: u8 [a0 + 0x12] = a4\n 41326: a3 = a3 >> 0x8\n 41329: u8 [a0 + 0x11] = a3\n 41332: u8 [a0 + 0x8] = a2\n 41335: a3 = a2 >> 0x38\n 41338: u8 [a0 + 0xf] = a3\n 41341: a3 = a2 >> 0x30\n 41344: u8 [a0 + 0xe] = a3\n 41347: a3 = a2 >> 0x28\n 41350: u8 [a0 + 0xd] = a3\n 41353: a3 = a2 >> 0x20\n 41356: u8 [a0 + 0xc] = a3\n 41359: a3 = a2 >> 0x18\n 41362: u8 [a0 + 0xb] = a3\n 41365: a3 = a2 >> 0x10\n 41368: u8 [a0 + 0xa] = a3\n 41371: a2 = a2 >> 0x8\n 41374: u8 [a0 + 0x9] = a2\n 41377: u8 [a0] = a1\n 41379: a2 = a1 >> 0x38\n 41382: u8 [a0 + 0x7] = a2\n 41385: a2 = a1 >> 0x30\n 41388: u8 [a0 + 0x6] = a2\n 41391: a2 = a1 >> 0x28\n 41394: u8 [a0 + 0x5] = a2\n 41397: a2 = a1 >> 0x20\n 41400: u8 [a0 + 0x4] = a2\n 41403: a2 = a1 >> 0x18\n 41406: u8 [a0 + 0x3] = a2\n 41409: a2 = a1 >> 0x10\n 41412: u8 [a0 + 0x2] = a2\n 41415: a1 = a1 >> 0x8\n 41418: u8 [a0 + 0x1] = a1\n 41421: a0 = sp + 0x80\n 41425: ra = 118, jump @164\n      : @854 [@dyn 59] (gas: 12)\n 41431: a2 = u64 [sp + 0x50]\n 41434: t0 = u64 [sp + 0x98]\n 41438: t1 = u64 [sp + 0x90]\n 41442: a3 = u64 [sp + 0x88]\n 41446: s1 = i32 [a2]\n 41448: a4 = u64 [sp + 0x80]\n 41452: a1 = u64 [sp + 0x58]\n 41455: a0 = a1 + 0x7f\n 41458: a5 = u64 [sp + 0x38]\n 41461: a5 = a5 & a0\n 41464: i32 a0 = a1 + 0x40\n 41467: jump @856 if s1 >=u a5\n      : @855 (gas: 2)\n 41470: u32 [a2] = a5\n 41472: fallthrough\n      : @856 (gas: 68)\n 41473: a1 = u64 [sp + 0x40]\n 41476: a0 = a0 + a1\n 41479: a1 = reverse t0\n 41481: a2 = reverse t1\n 41483: a3 = reverse a3\n 41485: a4 = reverse a4\n 41487: u8 [a0 + 0x18] = a4\n 41490: a5 = a4 >> 0x38\n 41493: u8 [a0 + 0x1f] = a5\n 41496: a5 = a4 >> 0x30\n 41499: u8 [a0 + 0x1e] = a5\n 41502: a5 = a4 >> 0x28\n 41505: u8 [a0 + 0x1d] = a5\n 41508: a5 = a4 >> 0x20\n 41511: u8 [a0 + 0x1c] = a5\n 41514: a5 = a4 >> 0x18\n 41517: u8 [a0 + 0x1b] = a5\n 41520: a5 = a4 >> 0x10\n 41523: u8 [a0 + 0x1a] = a5\n 41526: a4 = a4 >> 0x8\n 41529: u8 [a0 + 0x19] = a4\n 41532: u8 [a0 + 0x10] = a3\n 41535: a4 = a3 >> 0x38\n 41538: u8 [a0 + 0x17] = a4\n 41541: a4 = a3 >> 0x30\n 41544: u8 [a0 + 0x16] = a4\n 41547: a4 = a3 >> 0x28\n 41550: u8 [a0 + 0x15] = a4\n 41553: a4 = a3 >> 0x20\n 41556: u8 [a0 + 0x14] = a4\n 41559: a4 = a3 >> 0x18\n 41562: u8 [a0 + 0x13] = a4\n 41565: a4 = a3 >> 0x10\n 41568: u8 [a0 + 0x12] = a4\n 41571: a3 = a3 >> 0x8\n 41574: u8 [a0 + 0x11] = a3\n 41577: u8 [a0 + 0x8] = a2\n 41580: a3 = a2 >> 0x38\n 41583: u8 [a0 + 0xf] = a3\n 41586: a3 = a2 >> 0x30\n 41589: u8 [a0 + 0xe] = a3\n 41592: a3 = a2 >> 0x28\n 41595: u8 [a0 + 0xd] = a3\n 41598: a3 = a2 >> 0x20\n 41601: u8 [a0 + 0xc] = a3\n 41604: a3 = a2 >> 0x18\n 41607: u8 [a0 + 0xb] = a3\n 41610: a3 = a2 >> 0x10\n 41613: u8 [a0 + 0xa] = a3\n 41616: a2 = a2 >> 0x8\n 41619: u8 [a0 + 0x9] = a2\n 41622: u8 [a0] = a1\n 41624: a2 = a1 >> 0x38\n 41627: u8 [a0 + 0x7] = a2\n 41630: a2 = a1 >> 0x30\n 41633: u8 [a0 + 0x6] = a2\n 41636: a2 = a1 >> 0x28\n 41639: u8 [a0 + 0x5] = a2\n 41642: a2 = a1 >> 0x20\n 41645: u8 [a0 + 0x4] = a2\n 41648: a2 = a1 >> 0x18\n 41651: u8 [a0 + 0x3] = a2\n 41654: a2 = a1 >> 0x10\n 41657: u8 [a0 + 0x2] = a2\n 41660: a1 = a1 >> 0x8\n 41663: u8 [a0 + 0x1] = a1\n 41666: a0 = sp + 0x60\n 41669: ra = 120, jump @164\n      : @857 [@dyn 60] (gas: 12)\n 41675: t1 = u64 [sp + 0x50]\n 41678: a2 = u64 [sp + 0x78]\n 41681: a3 = u64 [sp + 0x70]\n 41684: a4 = u64 [sp + 0x68]\n 41687: t0 = i32 [t1]\n 41689: a5 = u64 [sp + 0x60]\n 41692: a1 = u64 [sp + 0x58]\n 41695: a0 = a1 + 0x9f\n 41699: t2 = u64 [sp + 0x38]\n 41702: a0 = a0 & t2\n 41705: i32 a1 = a1 + 0x60\n 41708: jump @859 if t0 >=u a0\n      : @858 (gas: 3)\n 41711: u32 [t1] = a0\n 41713: t0 = a0\n 41715: fallthrough\n      : @859 (gas: 70)\n 41716: s1 = u64 [sp + 0x40]\n 41719: a1 = a1 + s1\n 41722: a2 = reverse a2\n 41724: a3 = reverse a3\n 41726: a4 = reverse a4\n 41728: a0 = reverse a5\n 41730: u8 [a1 + 0x18] = a0\n 41733: a5 = a0 >> 0x38\n 41736: u8 [a1 + 0x1f] = a5\n 41739: a5 = a0 >> 0x30\n 41742: u8 [a1 + 0x1e] = a5\n 41745: a5 = a0 >> 0x28\n 41748: u8 [a1 + 0x1d] = a5\n 41751: a5 = a0 >> 0x20\n 41754: u8 [a1 + 0x1c] = a5\n 41757: a5 = a0 >> 0x18\n 41760: u8 [a1 + 0x1b] = a5\n 41763: a5 = a0 >> 0x10\n 41766: u8 [a1 + 0x1a] = a5\n 41769: a0 = a0 >> 0x8\n 41772: u8 [a1 + 0x19] = a0\n 41775: u8 [a1 + 0x10] = a4\n 41778: a0 = a4 >> 0x38\n 41781: u8 [a1 + 0x17] = a0\n 41784: a0 = a4 >> 0x30\n 41787: u8 [a1 + 0x16] = a0\n 41790: a0 = a4 >> 0x28\n 41793: u8 [a1 + 0x15] = a0\n 41796: a0 = a4 >> 0x20\n 41799: u8 [a1 + 0x14] = a0\n 41802: a0 = a4 >> 0x18\n 41805: u8 [a1 + 0x13] = a0\n 41808: a0 = a4 >> 0x10\n 41811: u8 [a1 + 0x12] = a0\n 41814: a4 = a4 >> 0x8\n 41817: u8 [a1 + 0x11] = a4\n 41820: u8 [a1 + 0x8] = a3\n 41823: a0 = a3 >> 0x38\n 41826: u8 [a1 + 0xf] = a0\n 41829: a0 = a3 >> 0x30\n 41832: u8 [a1 + 0xe] = a0\n 41835: a0 = a3 >> 0x28\n 41838: u8 [a1 + 0xd] = a0\n 41841: a0 = a3 >> 0x20\n 41844: u8 [a1 + 0xc] = a0\n 41847: a0 = a3 >> 0x18\n 41850: u8 [a1 + 0xb] = a0\n 41853: a0 = a3 >> 0x10\n 41856: u8 [a1 + 0xa] = a0\n 41859: a3 = a3 >> 0x8\n 41862: u8 [a1 + 0x9] = a3\n 41865: u8 [a1] = a2\n 41867: a0 = a2 >> 0x38\n 41870: u8 [a1 + 0x7] = a0\n 41873: a0 = a2 >> 0x30\n 41876: u8 [a1 + 0x6] = a0\n 41879: a0 = a2 >> 0x28\n 41882: u8 [a1 + 0x5] = a0\n 41885: a0 = a2 >> 0x20\n 41888: u8 [a1 + 0x4] = a0\n 41891: a0 = a2 >> 0x18\n 41894: u8 [a1 + 0x3] = a0\n 41897: a0 = a2 >> 0x10\n 41900: u8 [a1 + 0x2] = a0\n 41903: a2 = a2 >> 0x8\n 41906: a3 = u64 [sp + 0x58]\n 41909: a0 = a3 + 0xbf\n 41913: a0 = a0 & t2\n 41916: u8 [a1 + 0x1] = a2\n 41919: jump @861 if t0 >=u a0\n      : @860 (gas: 2)\n 41922: u32 [t1] = a0\n 41924: fallthrough\n      : @861 (gas: 48)\n 41925: i32 a0 = a3 + 0x80\n 41929: a0 = a0 + s1\n 41932: u8 [a0 + 31] = 0x60\n 41936: u8 [a0 + 30] = 0\n 41939: u8 [a0 + 29] = 0\n 41942: u8 [a0 + 28] = 0\n 41945: u8 [a0 + 27] = 0\n 41948: u8 [a0 + 26] = 0\n 41951: u8 [a0 + 25] = 0\n 41954: u8 [a0 + 24] = 0\n 41957: u8 [a0 + 23] = 0\n 41960: u8 [a0 + 22] = 0\n 41963: u8 [a0 + 21] = 0\n 41966: u8 [a0 + 20] = 0\n 41969: u8 [a0 + 19] = 0\n 41972: u8 [a0 + 18] = 0\n 41975: u8 [a0 + 17] = 0\n 41978: u8 [a0 + 16] = 0\n 41981: u8 [a0 + 15] = 0\n 41984: u8 [a0 + 14] = 0\n 41987: u8 [a0 + 13] = 0\n 41990: u8 [a0 + 12] = 0\n 41993: u8 [a0 + 11] = 0\n 41996: u8 [a0 + 10] = 0\n 41999: u8 [a0 + 9] = 0\n 42002: u8 [a0 + 8] = 0\n 42005: u8 [a0 + 7] = 0\n 42008: u8 [a0 + 6] = 0\n 42011: u8 [a0 + 5] = 0\n 42014: u8 [a0 + 4] = 0\n 42017: u8 [a0 + 3] = 0\n 42020: u8 [a0 + 2] = 0\n 42023: u8 [a0 + 1] = 0\n 42026: u8 [a0 + 0] = 0\n 42028: a0 = u64 [sp + 0x30]\n 42031: u64 [a0] = a3\n 42033: a1 = u64 [sp + 0x20]\n 42036: u64 [a0 + 0x18] = a1\n 42039: a1 = u64 [sp + 0x48]\n 42042: u64 [a0 + 0x8] = a1\n 42045: a1 = u64 [sp + 0x28]\n 42048: u64 [a0 + 0x10] = a1\n 42051: sp = s0 + 0xffffffffffffff20\n 42055: ra = u64 [sp + 0xd8]\n 42059: s0 = u64 [sp + 0xd0]\n 42063: s1 = u64 [sp + 0xc8]\n 42067: sp = sp + 0xe0\n 42071: ret\n      : @862 (gas: 1)\n 42073: trap\n      : @863 (gas: 18)\n 42074: u64 [0x20060] = 0\n 42079: u64 [0x20068] = 0\n 42084: u64 [0x20058] = 0\n 42089: u64 [0x20050] = 0x717b484e\n 42098: u32 [0x20070] = 0x41000000\n 42107: u32 [0x20064] = 0\n 42112: u32 [0x20068] = 0\n 42117: u32 [0x2006c] = 0\n 42122: u32 [0x20058] = 0\n 42127: u32 [0x2005c] = 0\n 42132: u32 [0x20060] = 0\n 42137: u32 [0x20054] = 0\n 42142: i32 a1 = s1 + 0\n 42144: a0 = 0x1\n 42147: a2 = 0x24\n 42150: ra = 0x7a\n 42153: ecalli 5 // 'seal_return'\n 42155: fallthrough\n      : @864 [@dyn 61] (gas: 9)\n 42156: sp = sp + 0xffffffffffffff68\n 42160: u64 [sp + 0x90] = ra\n 42164: u64 [sp + 0x88] = s0\n 42168: u64 [sp + 0x80] = s1\n 42172: a1 = 0x20044\n 42177: u64 [sp + 0x28] = a1\n 42180: t2 = i32 [0x20044]\n 42185: t1 = a0\n 42187: jump @866 if t2 >u 95\n      : @865 (gas: 4)\n 42191: t2 = 0x60\n 42194: a0 = u64 [sp + 0x28]\n 42197: u32 [a0] = t2\n 42199: fallthrough\n      : @866 (gas: 14)\n 42200: t0 = 0x20050\n 42205: a0 = u64 [0x200a0]\n 42210: a1 = u64 [0x200a8]\n 42215: a2 = u64 [0x20090]\n 42220: a3 = u64 [0x20098]\n 42225: s1 = reverse a0\n 42227: a4 = reverse a1\n 42229: s0 = reverse a2\n 42231: a5 = reverse a3\n 42233: a0 = a5 | s0\n 42236: a1 = a4 <u 0xffffffffffffff60\n 42240: a1 = 0 if s1 != 0\n 42242: a1 = 0 if a0 != 0\n 42244: jump @892 if a1 == 0\n      : @867 (gas: 24)\n 42248: a0 = a4 + 0xa0\n 42252: a1 = a0 <u a4\n 42255: a2 = s1 + a1\n 42258: a3 = a2 <u s1\n 42261: a3 = a1 if a1 == 0\n 42264: a3 = a3 + a5\n 42267: a1 = a3 <u a5\n 42270: a1 = a1 + s0\n 42273: a1 = reverse a1\n 42275: a3 = reverse a3\n 42277: a2 = reverse a2\n 42279: a0 = reverse a0\n 42281: u64 [0x200a8] = a0\n 42286: u64 [0x200a0] = a2\n 42291: u64 [0x20098] = a3\n 42296: a0 = a4 | a5\n 42299: a2 = s1 | s0\n 42302: a0 = a0 | a2\n 42305: a0 = a0 >> 0x20\n 42308: a2 = a2 | a5\n 42311: a2 = a2 << 0x20\n 42314: a0 = a0 | a2\n 42317: u64 [0x20090] = a1\n 42322: jump @891 if a0 != 0\n      : @868 (gas: 2)\n 42326: i32 a0 = a4 >> 0x10\n 42329: jump @891 if a0 != 0\n      : @869 (gas: 4)\n 42333: a0 = a4 + 0x3f\n 42336: u64 [sp + 120] = 0x1ffe0\n 42342: a0 = a0 & 0x1ffe0\n 42347: jump @891 if a0 >u 65536\n      : @870 (gas: 5)\n 42354: u64 [sp + 0x8] = a5\n 42357: u64 [sp + 0x18] = s0\n 42360: u64 [sp + 0x20] = s1\n 42363: u64 [sp] = t1\n 42365: jump @872 if t2 >=u a0\n      : @871 (gas: 4)\n 42368: a1 = u64 [sp + 0x28]\n 42371: u32 [a1] = a0\n 42373: t2 = a0\n 42375: fallthrough\n      : @872 (gas: 44)\n 42376: u64 [sp + 0x48] = t2\n 42379: u64 [sp + 112] = 0\n 42382: u64 [sp + 104] = 0\n 42385: u64 [sp + 96] = 0\n 42388: u64 [sp + 88] = 0\n 42391: u64 [sp + 0x10] = a4\n 42394: i32 a0 = a4 + 0\n 42396: a0 = a0 + t0\n 42399: u8 [a0 + 31] = 0x4\n 42403: u8 [a0 + 30] = 0\n 42406: u8 [a0 + 29] = 0\n 42409: u8 [a0 + 28] = 0\n 42412: u8 [a0 + 27] = 0\n 42415: u8 [a0 + 26] = 0\n 42418: u8 [a0 + 25] = 0\n 42421: u8 [a0 + 24] = 0\n 42424: u8 [a0 + 23] = 0\n 42427: u8 [a0 + 22] = 0\n 42430: u8 [a0 + 21] = 0\n 42433: u8 [a0 + 20] = 0\n 42436: u8 [a0 + 19] = 0\n 42439: u8 [a0 + 18] = 0\n 42442: u8 [a0 + 17] = 0\n 42445: u8 [a0 + 16] = 0\n 42448: u8 [a0 + 15] = 0\n 42451: u8 [a0 + 14] = 0\n 42454: u8 [a0 + 13] = 0\n 42457: u8 [a0 + 12] = 0\n 42460: u8 [a0 + 11] = 0\n 42463: u8 [a0 + 10] = 0\n 42466: u8 [a0 + 9] = 0\n 42469: u8 [a0 + 8] = 0\n 42472: u8 [a0 + 7] = 0\n 42475: u8 [a0 + 6] = 0\n 42478: u8 [a0 + 5] = 0\n 42481: u8 [a0 + 4] = 0\n 42484: u8 [a0 + 3] = 0\n 42487: u8 [a0 + 2] = 0\n 42490: u8 [a0 + 1] = 0\n 42493: u8 [a0 + 0] = 0\n 42495: a0 = 0xffffffe0\n 42505: u64 [sp + 0x50] = a0\n 42508: u64 [sp + 0x40] = t0\n 42511: jump @874\n      : @873 (gas: 86)\n 42514: u64 [sp + 0x48] = s0\n 42517: i32 a3 = a3 + 0x20\n 42520: a3 = a3 + a5\n 42523: u8 [a3 + 0x8] = ra\n 42526: a1 = a0 >> 0x38\n 42529: u8 [a3 + 0x7] = a1\n 42532: a1 = a0 >> 0x30\n 42535: u8 [a3 + 0x6] = a1\n 42538: a1 = a0 >> 0x28\n 42541: u8 [a3 + 0x5] = a1\n 42544: a1 = a0 >> 0x20\n 42547: u8 [a3 + 0x4] = a1\n 42550: a1 = a0 >> 0x18\n 42553: u8 [a3 + 0x3] = a1\n 42556: a1 = a0 >> 0x10\n 42559: u8 [a3 + 0x2] = a1\n 42562: a1 = a0 >> 0x8\n 42565: u8 [a3 + 0x1] = a1\n 42568: u8 [a3] = a0\n 42570: u8 [a3 + 0x10] = t2\n 42573: a0 = ra >> 0x38\n 42576: u8 [a3 + 0xf] = a0\n 42579: a0 = ra >> 0x30\n 42582: u8 [a3 + 0xe] = a0\n 42585: a0 = ra >> 0x28\n 42588: u8 [a3 + 0xd] = a0\n 42591: a0 = ra >> 0x20\n 42594: u8 [a3 + 0xc] = a0\n 42597: a0 = ra >> 0x18\n 42600: u8 [a3 + 0xb] = a0\n 42603: a0 = ra >> 0x10\n 42606: u8 [a3 + 0xa] = a0\n 42609: a0 = ra >> 0x8\n 42612: u8 [a3 + 0x9] = a0\n 42615: a1 = u64 [sp + 0x30]\n 42618: u8 [a3 + 0x18] = a1\n 42621: a0 = t2 >> 0x38\n 42624: u8 [a3 + 0x17] = a0\n 42627: a0 = t2 >> 0x30\n 42630: u8 [a3 + 0x16] = a0\n 42633: a0 = t2 >> 0x28\n 42636: u8 [a3 + 0x15] = a0\n 42639: a0 = t2 >> 0x20\n 42642: u8 [a3 + 0x14] = a0\n 42645: a0 = t2 >> 0x18\n 42648: u8 [a3 + 0x13] = a0\n 42651: a0 = t2 >> 0x10\n 42654: u8 [a3 + 0x12] = a0\n 42657: a0 = t2 >> 0x8\n 42660: u8 [a3 + 0x11] = a0\n 42663: a0 = a1 >> 0x38\n 42666: u8 [a3 + 0x1f] = a0\n 42669: a0 = a1 >> 0x30\n 42672: u8 [a3 + 0x1e] = a0\n 42675: a0 = a1 >> 0x28\n 42678: u8 [a3 + 0x1d] = a0\n 42681: a0 = a1 >> 0x20\n 42684: u8 [a3 + 0x1c] = a0\n 42687: a0 = a1 >> 0x18\n 42690: u8 [a3 + 0x1b] = a0\n 42693: a0 = a1 >> 0x10\n 42696: u8 [a3 + 0x1a] = a0\n 42699: t1 = a1 >> 0x8\n 42702: s0 = u64 [sp + 0x70]\n 42705: a1 = s0 + 0x20\n 42708: a2 = a1 <u s0\n 42711: a4 = u64 [sp + 0x68]\n 42714: a0 = a4 + a2\n 42717: a5 = a0 <u a4\n 42720: a5 = a2 if a2 == 0\n 42723: s1 = u64 [sp + 0x60]\n 42726: a5 = a5 + s1\n 42729: t0 = a5 <u s1\n 42732: a2 = u64 [sp + 0x58]\n 42735: s1 = s1 | a2\n 42738: a2 = a2 + t0\n 42741: t0 = u64 [sp + 0x40]\n 42744: s0 = s0 <u 0x60\n 42747: s0 = 0 if a4 != 0\n 42749: s0 = 0 if s1 != 0\n 42751: u8 [a3 + 0x19] = t1\n 42754: u64 [sp + 0x70] = a1\n 42757: u64 [sp + 0x68] = a0\n 42760: u64 [sp + 0x60] = a5\n 42763: u64 [sp + 0x58] = a2\n 42766: jump @890 if s0 == 0\n      : @874 (gas: 15)\n 42770: t2 = u64 [t0 + 0x50]\n 42773: a1 = u64 [t0 + 0x58]\n 42776: a0 = u64 [t0 + 0x40]\n 42779: ra = u64 [t0 + 0x48]\n 42782: a5 = reverse t2\n 42784: u64 [sp + 0x30] = a1\n 42787: t1 = reverse a1\n 42789: a4 = reverse a0\n 42791: a1 = reverse ra\n 42793: a2 = a1 | a4\n 42796: s0 = t1 <u 0xffffffffffffffc0\n 42799: s0 = 0 if a5 != 0\n 42801: u64 [sp + 0x38] = a2\n 42804: s0 = 0 if a2 != 0\n 42806: jump @892 if s0 == 0\n      : @875 (gas: 24)\n 42810: s0 = t1 + 0x40\n 42813: s1 = s0 <u t1\n 42816: a3 = a5 + s1\n 42819: a2 = a3 <u a5\n 42822: a2 = s1 if s1 == 0\n 42825: a2 = a2 + a1\n 42828: s1 = a2 <u a1\n 42831: s1 = s1 + a4\n 42834: s1 = reverse s1\n 42836: a2 = reverse a2\n 42838: a3 = reverse a3\n 42840: s0 = reverse s0\n 42842: u64 [t0 + 0x58] = s0\n 42845: u64 [t0 + 0x50] = a3\n 42848: u64 [t0 + 0x48] = a2\n 42851: a2 = t1 | a1\n 42854: a4 = a4 | a5\n 42857: a2 = a2 | a4\n 42860: a2 = a2 >> 0x20\n 42863: a1 = a1 | a4\n 42866: a1 = a1 << 0x20\n 42869: a1 = a1 | a2\n 42872: u64 [t0 + 0x40] = s1\n 42875: jump @891 if a1 != 0\n      : @876 (gas: 3)\n 42879: i32 a1 = t1 >> 0x10\n 42882: s0 = u64 [sp + 0x48]\n 42885: jump @891 if a1 != 0\n      : @877 (gas: 4)\n 42889: a1 = t1 + 0x3f\n 42892: a2 = u64 [sp + 0x78]\n 42895: a1 = a1 & a2\n 42898: jump @891 if a1 >u 65536\n      : @878 (gas: 3)\n 42905: a4 = t0\n 42907: i32 a2 = s0 + 0\n 42909: jump @880 if a2 >=u a1\n      : @879 (gas: 4)\n 42912: a2 = u64 [sp + 0x28]\n 42915: u32 [a2] = a1\n 42917: s0 = a1\n 42919: fallthrough\n      : @880 (gas: 40)\n 42920: a1 = u64 [sp + 0x50]\n 42923: t0 = t1 <u a1\n 42926: t0 = 0 if a5 != 0\n 42928: i32 a3 = t1 + 0\n 42930: a3 = a3 + a4\n 42933: u8 [a3 + 31] = 0\n 42936: u8 [a3 + 30] = 0\n 42939: u8 [a3 + 29] = 0\n 42942: u8 [a3 + 28] = 0\n 42945: u8 [a3 + 27] = 0\n 42948: u8 [a3 + 26] = 0\n 42951: u8 [a3 + 25] = 0\n 42954: u8 [a3 + 24] = 0\n 42957: u8 [a3 + 23] = 0\n 42960: u8 [a3 + 22] = 0\n 42963: u8 [a3 + 21] = 0\n 42966: u8 [a3 + 20] = 0\n 42969: u8 [a3 + 19] = 0\n 42972: u8 [a3 + 18] = 0\n 42975: u8 [a3 + 17] = 0\n 42978: u8 [a3 + 16] = 0\n 42981: u8 [a3 + 15] = 0\n 42984: u8 [a3 + 14] = 0\n 42987: u8 [a3 + 13] = 0\n 42990: u8 [a3 + 12] = 0\n 42993: u8 [a3 + 11] = 0\n 42996: u8 [a3 + 10] = 0\n 42999: u8 [a3 + 9] = 0\n 43002: u8 [a3 + 8] = 0\n 43005: u8 [a3 + 7] = 0\n 43008: u8 [a3 + 6] = 0\n 43011: u8 [a3 + 5] = 0\n 43014: u8 [a3 + 4] = 0\n 43017: u8 [a3 + 3] = 0\n 43020: u8 [a3 + 2] = 0\n 43023: u8 [a3 + 1] = 0\n 43026: a1 = u64 [sp + 0x38]\n 43029: t0 = 0 if a1 != 0\n 43031: u8 [a3 + 0] = 0\n 43033: jump @891 if t0 == 0\n      : @881 (gas: 2)\n 43037: i32 a1 = t1 >> 0x5\n 43040: jump @891 if a1 >=u 2047\n      : @882 (gas: 4)\n 43046: a1 = t1 + 0x5f\n 43049: a2 = u64 [sp + 0x78]\n 43052: a1 = a1 & a2\n 43055: jump @891 if a1 >u 65536\n      : @883 (gas: 2)\n 43062: i32 a2 = s0 + 0\n 43064: jump @885 if a2 >=u a1\n      : @884 (gas: 4)\n 43067: a2 = u64 [sp + 0x28]\n 43070: u32 [a2] = a1\n 43072: s0 = a1\n 43074: fallthrough\n      : @885 (gas: 63)\n 43075: a3 = u64 [sp + 0x10]\n 43078: a1 = u64 [sp + 0x70]\n 43081: a3 = a3 + a1\n 43084: a1 = a3 <u a1\n 43087: a2 = u64 [sp + 0x20]\n 43090: a5 = u64 [sp + 0x68]\n 43093: a2 = a2 + a5\n 43096: a2 = a2 + a1\n 43099: a4 = a2 ^ a5\n 43102: a5 = a2 <u a5\n 43105: a5 = a1 if a4 == 0\n 43108: a1 = u64 [sp + 0x8]\n 43111: a4 = u64 [sp + 0x60]\n 43114: a1 = a1 + a4\n 43117: a4 = a1 <u a4\n 43120: s1 = u64 [sp + 0x18]\n 43123: t0 = u64 [sp + 0x58]\n 43126: s1 = s1 + t0\n 43129: a4 = a4 + s1\n 43132: a5 = a5 + a1\n 43135: a1 = a5 <u a1\n 43138: a1 = a1 + a4\n 43141: a1 = a1 | a5\n 43144: a4 = u64 [sp + 0x50]\n 43147: a4 = a3 <u a4\n 43150: a4 = 0 if a2 != 0\n 43152: a4 = 0 if a1 != 0\n 43154: i32 a1 = t1 + 0x20\n 43157: a5 = u64 [sp + 0x40]\n 43160: a1 = a1 + a5\n 43163: u8 [a1 + 31] = 0\n 43166: u8 [a1 + 30] = 0\n 43169: u8 [a1 + 29] = 0\n 43172: u8 [a1 + 28] = 0\n 43175: u8 [a1 + 27] = 0\n 43178: u8 [a1 + 26] = 0\n 43181: u8 [a1 + 25] = 0\n 43184: u8 [a1 + 24] = 0\n 43187: u8 [a1 + 23] = 0\n 43190: u8 [a1 + 22] = 0\n 43193: u8 [a1 + 21] = 0\n 43196: u8 [a1 + 20] = 0\n 43199: u8 [a1 + 19] = 0\n 43202: u8 [a1 + 18] = 0\n 43205: u8 [a1 + 17] = 0\n 43208: u8 [a1 + 16] = 0\n 43211: u8 [a1 + 15] = 0\n 43214: u8 [a1 + 14] = 0\n 43217: u8 [a1 + 13] = 0\n 43220: u8 [a1 + 12] = 0\n 43223: u8 [a1 + 11] = 0\n 43226: u8 [a1 + 10] = 0\n 43229: u8 [a1 + 9] = 0\n 43232: u8 [a1 + 8] = 0\n 43235: u8 [a1 + 7] = 0\n 43238: u8 [a1 + 6] = 0\n 43241: u8 [a1 + 5] = 0\n 43244: u8 [a1 + 4] = 0\n 43247: u8 [a1 + 3] = 0\n 43250: u8 [a1 + 2] = 0\n 43253: u8 [a1 + 1] = 0\n 43256: u8 [a1 + 0] = 0\n 43258: jump @891 if a4 == 0\n      : @886 (gas: 2)\n 43261: i32 a1 = a3 >> 0x5\n 43264: jump @891 if a1 >=u 2047\n      : @887 (gas: 4)\n 43269: a1 = a3 + 0x5f\n 43272: a2 = u64 [sp + 0x78]\n 43275: a1 = a1 & a2\n 43278: jump @891 if a1 >u 65536\n      : @888 (gas: 2)\n 43284: i32 a2 = s0 + 0\n 43286: jump @873 if a2 >=u a1\n      : @889 (gas: 4)\n 43290: a2 = u64 [sp + 0x28]\n 43293: u32 [a2] = a1\n 43295: s0 = a1\n 43297: jump @873\n      : @890 (gas: 14)\n 43300: a0 = u64 [sp]\n 43302: a1 = u64 [sp + 0x10]\n 43305: u64 [a0] = a1\n 43307: a1 = u64 [sp + 0x20]\n 43310: u64 [a0 + 0x8] = a1\n 43313: a1 = u64 [sp + 0x8]\n 43316: u64 [a0 + 0x10] = a1\n 43319: a1 = u64 [sp + 0x18]\n 43322: u64 [a0 + 0x18] = a1\n 43325: ra = u64 [sp + 0x90]\n 43329: s0 = u64 [sp + 0x88]\n 43333: s1 = u64 [sp + 0x80]\n 43337: sp = sp + 0x98\n 43341: ret\n      : @891 (gas: 1)\n 43343: trap\n      : @892 (gas: 18)\n 43344: u64 [t0 + 16] = 0\n 43347: u64 [t0 + 24] = 0\n 43350: u64 [t0 + 8] = 0\n 43353: u64 [t0 + 0] = 0x717b484e\n 43359: u32 [t0 + 32] = 0x41000000\n 43366: u32 [t0 + 20] = 0\n 43369: u32 [t0 + 24] = 0\n 43372: u32 [t0 + 28] = 0\n 43375: u32 [t0 + 8] = 0\n 43378: u32 [t0 + 12] = 0\n 43381: u32 [t0 + 16] = 0\n 43384: u32 [t0 + 4] = 0\n 43387: i32 a1 = t0 + 0\n 43389: a0 = 0x1\n 43392: a2 = 0x24\n 43395: ra = 0x7c\n 43398: ecalli 5 // 'seal_return'\n 43400: fallthrough\n      : @893 [@dyn 62] (gas: 9)\n 43401: sp = sp + 0xfffffffffffffee0\n 43405: u64 [sp + 0x118] = ra\n 43409: u64 [sp + 0x110] = s0\n 43413: u64 [sp + 0x108] = s1\n 43417: s0 = sp + 0x120\n 43421: sp = sp & 0xfffffffffffffff0\n 43424: u64 [sp + 0x8] = a0\n 43427: a0 = sp + 0xe0\n 43431: ra = 126, jump @834\n      : @894 [@dyn 63] (gas: 12)\n 43436: a1 = 0x20044\n 43441: a0 = u64 [sp + 0xf8]\n 43445: u64 [sp + 0x80] = a0\n 43449: a0 = u64 [sp + 0xf0]\n 43453: u64 [sp + 0x78] = a0\n 43456: a0 = u64 [sp + 0xe8]\n 43460: u64 [sp + 0x90] = a0\n 43464: u64 [sp + 0xb0] = a1\n 43468: a1 = i32 [0x20044]\n 43473: a0 = u64 [sp + 0xe0]\n 43477: u64 [sp + 0x98] = a0\n 43481: jump @896 if a1 >u 95\n      : @895 (gas: 4)\n 43485: a1 = 0x60\n 43488: a0 = u64 [sp + 0xb0]\n 43492: u32 [a0] = a1\n 43494: fallthrough\n      : @896 (gas: 19)\n 43495: u64 [sp + 0xa0] = a1\n 43499: t1 = 0x20050\n 43504: a1 = u64 [0x200a0]\n 43509: a0 = u64 [0x200a8]\n 43514: a2 = u64 [0x20090]\n 43519: t0 = u64 [0x20098]\n 43524: u64 [sp + 0x68] = a1\n 43527: t2 = reverse a1\n 43529: u64 [sp + 0x70] = a0\n 43532: a4 = reverse a0\n 43534: u64 [sp + 0x60] = a2\n 43537: a0 = reverse a2\n 43539: s1 = reverse t0\n 43541: a2 = s1 | a0\n 43544: a1 = a4 <u 0xffffffffffffffc0\n 43547: a1 = 0 if t2 != 0\n 43549: u64 [sp + 0x88] = a2\n 43553: a1 = 0 if a2 != 0\n 43555: jump @898 if a1 != 0\n      : @897 (gas: 1)\n 43558: jump @1251\n      : @898 (gas: 24)\n 43561: a1 = a4 + 0x40\n 43564: a2 = a1 <u a4\n 43567: a5 = t2 + a2\n 43570: ra = a5 <u t2\n 43573: ra = a2 if a2 == 0\n 43576: ra = ra + s1\n 43579: a2 = ra <u s1\n 43582: a2 = a2 + a0\n 43585: a2 = reverse a2\n 43587: a3 = reverse ra\n 43589: a5 = reverse a5\n 43591: a1 = reverse a1\n 43593: u64 [0x200a8] = a1\n 43598: u64 [0x200a0] = a5\n 43603: u64 [0x20098] = a3\n 43608: a1 = a4 | s1\n 43611: a0 = t2 | a0\n 43614: a1 = a1 | a0\n 43617: a1 = a1 >> 0x20\n 43620: a0 = a0 | s1\n 43623: a0 = a0 << 0x20\n 43626: a0 = a0 | a1\n 43629: u64 [0x20090] = a2\n 43634: jump @900 if a0 == 0\n      : @899 (gas: 1)\n 43637: jump @1248\n      : @900 (gas: 3)\n 43640: i32 a0 = a4 >> 0x10\n 43643: a5 = u64 [sp + 0x98]\n 43647: jump @902 if a0 == 0\n      : @901 (gas: 1)\n 43650: jump @1248\n      : @902 (gas: 4)\n 43653: a0 = a4 + 0x3f\n 43656: u64 [sp + 184] = 0x1ffe0\n 43663: a0 = a0 & 0x1ffe0\n 43668: jump @904 if a0 <=u 65536\n      : @903 (gas: 1)\n 43674: jump @1248\n      : @904 (gas: 3)\n 43677: ra = 0x20050\n 43682: a1 = u64 [sp + 0xa0]\n 43686: jump @906 if a1 >=u a0\n      : @905 (gas: 4)\n 43689: a1 = u64 [sp + 0xb0]\n 43693: u32 [a1] = a0\n 43695: u64 [sp + 0xa0] = a0\n 43699: fallthrough\n      : @906 (gas: 40)\n 43700: i32 s1 = a4 + 0\n 43702: s1 = s1 + ra\n 43705: u8 [s1 + 31] = 0xa4\n 43710: u8 [s1 + 30] = 0x5d\n 43714: u8 [s1 + 29] = 0x6b\n 43718: u8 [s1 + 28] = 0xca\n 43723: u8 [s1 + 27] = 0x22\n 43727: u8 [s1 + 26] = 0xa5\n 43732: u8 [s1 + 25] = 0x51\n 43736: u8 [s1 + 24] = 0x77\n 43740: u8 [s1 + 23] = 0xb7\n 43745: u8 [s1 + 22] = 0x6a\n 43749: u8 [s1 + 21] = 0x24\n 43753: u8 [s1 + 20] = 0xad\n 43758: u8 [s1 + 19] = 0x85\n 43763: u8 [s1 + 18] = 0x71\n 43767: u8 [s1 + 17] = 0xc9\n 43772: u8 [s1 + 16] = 0x9f\n 43777: u8 [s1 + 15] = 0x1f\n 43781: u8 [s1 + 14] = 0xbe\n 43786: u8 [s1 + 13] = 0x6b\n 43790: u8 [s1 + 12] = 0x8f\n 43795: u8 [s1 + 11] = 0x60\n 43799: u8 [s1 + 10] = 0x74\n 43803: u8 [s1 + 9] = 0x83\n 43808: u8 [s1 + 8] = 0x2\n 43812: u8 [s1 + 7] = 0xa5\n 43817: u8 [s1 + 6] = 0xb6\n 43822: u8 [s1 + 5] = 0x3d\n 43826: u8 [s1 + 4] = 0x1f\n 43830: u8 [s1 + 3] = 0x2b\n 43834: u8 [s1 + 2] = 0xb1\n 43839: u8 [s1 + 1] = 0xe1\n 43844: a1 = 0xffffffe0\n 43854: a1 = a4 <u a1\n 43857: a1 = 0 if t2 != 0\n 43859: a2 = u64 [sp + 0x88]\n 43863: a1 = 0 if a2 != 0\n 43865: u8 [s1 + 0] = 0x6\n 43868: jump @908 if a1 != 0\n      : @907 (gas: 1)\n 43871: jump @1248\n      : @908 (gas: 3)\n 43874: i32 a0 = a4 >> 0x5\n 43877: t2 = u64 [sp + 0xa0]\n 43881: jump @910 if a0 <u 2047\n      : @909 (gas: 1)\n 43886: jump @1248\n      : @910 (gas: 4)\n 43889: a0 = a4 + 0x5f\n 43892: a1 = u64 [sp + 0xb8]\n 43896: a0 = a0 & a1\n 43899: jump @912 if a0 <=u 65536\n      : @911 (gas: 1)\n 43905: jump @1248\n      : @912 (gas: 2)\n 43908: i32 a4 = a4 + 0x20\n 43911: jump @914 if t2 >=u a0\n      : @913 (gas: 4)\n 43914: a1 = u64 [sp + 0xb0]\n 43918: u32 [a1] = a0\n 43920: t2 = a0\n 43922: fallthrough\n      : @914 (gas: 44)\n 43923: a4 = a4 + ra\n 43926: u8 [a4 + 31] = 0x87\n 43931: u8 [a4 + 30] = 0x8b\n 43936: u8 [a4 + 29] = 0xe0\n 43941: u8 [a4 + 28] = 0x66\n 43945: u8 [a4 + 27] = 0x9c\n 43950: u8 [a4 + 26] = 0x92\n 43955: u8 [a4 + 25] = 0x3\n 43959: u8 [a4 + 24] = 0xc0\n 43964: u8 [a4 + 23] = 0x27\n 43968: u8 [a4 + 22] = 0xc0\n 43973: u8 [a4 + 21] = 0xa2\n 43978: u8 [a4 + 20] = 0x9d\n 43983: u8 [a4 + 19] = 0x19\n 43987: u8 [a4 + 18] = 0xf4\n 43992: u8 [a4 + 17] = 0xd9\n 43997: u8 [a4 + 16] = 0x4d\n 44001: u8 [a4 + 15] = 0\n 44004: u8 [a4 + 14] = 0x89\n 44009: u8 [a4 + 13] = 0x55\n 44013: u8 [a4 + 12] = 0x89\n 44018: u8 [a4 + 11] = 0xdf\n 44023: u8 [a4 + 10] = 0xb4\n 44028: u8 [a4 + 9] = 0x83\n 44033: u8 [a4 + 8] = 0x3d\n 44037: u8 [a4 + 7] = 0x65\n 44041: u8 [a4 + 6] = 0x9a\n 44046: u8 [a4 + 5] = 0x1c\n 44050: u8 [a4 + 4] = 0xd6\n 44055: u8 [a4 + 3] = 0xf5\n 44060: u8 [a4 + 2] = 0xbe\n 44065: u8 [a4 + 1] = 0x1c\n 44069: a2 = u64 [sp + 0x78]\n 44072: a0 = a5 | a2\n 44075: a1 = u64 [sp + 0x80]\n 44079: a3 = u64 [sp + 0x90]\n 44083: a1 = a1 | a3\n 44086: a0 = a0 | a1\n 44089: a0 = a0 >> 0x20\n 44092: a1 = a1 | a2\n 44095: a1 = a1 << 0x20\n 44098: a0 = a0 | a1\n 44101: u8 [a4 + 0] = 0x30\n 44104: jump @916 if a0 == 0\n      : @915 (gas: 1)\n 44107: jump @1248\n      : @916 (gas: 2)\n 44110: i32 a0 = a5 >> 0x10\n 44113: jump @918 if a0 == 0\n      : @917 (gas: 1)\n 44116: jump @1248\n      : @918 (gas: 4)\n 44119: a0 = a5 + 0x3f\n 44122: a1 = u64 [sp + 0xb8]\n 44126: a0 = a0 & a1\n 44129: jump @920 if a0 <=u 65536\n      : @919 (gas: 1)\n 44135: jump @1248\n      : @920 (gas: 1)\n 44138: jump @922 if t2 >=u a0\n      : @921 (gas: 4)\n 44141: a1 = u64 [sp + 0xb0]\n 44145: u32 [a1] = a0\n 44147: t2 = a0\n 44149: fallthrough\n      : @922 (gas: 82)\n 44150: i32 a4 = a5 + 0\n 44152: a4 = a4 + ra\n 44155: a2 = u64 [sp + 0x68]\n 44158: u8 [a4 + 0x10] = a2\n 44161: a0 = t0 >> 0x38\n 44164: u8 [a4 + 0xf] = a0\n 44167: a0 = t0 >> 0x30\n 44170: u8 [a4 + 0xe] = a0\n 44173: a0 = t0 >> 0x28\n 44176: u8 [a4 + 0xd] = a0\n 44179: a0 = t0 >> 0x20\n 44182: u8 [a4 + 0xc] = a0\n 44185: a0 = t0 >> 0x18\n 44188: u8 [a4 + 0xb] = a0\n 44191: a0 = t0 >> 0x10\n 44194: u8 [a4 + 0xa] = a0\n 44197: a0 = t0 >> 0x8\n 44200: u8 [a4 + 0x9] = a0\n 44203: u8 [a4 + 0x8] = t0\n 44206: a1 = u64 [sp + 0x60]\n 44209: a0 = a1 >> 0x38\n 44212: u8 [a4 + 0x7] = a0\n 44215: a0 = a1 >> 0x30\n 44218: u8 [a4 + 0x6] = a0\n 44221: a0 = a1 >> 0x28\n 44224: u8 [a4 + 0x5] = a0\n 44227: a0 = a1 >> 0x20\n 44230: u8 [a4 + 0x4] = a0\n 44233: a0 = a1 >> 0x18\n 44236: u8 [a4 + 0x3] = a0\n 44239: a0 = a1 >> 0x10\n 44242: u8 [a4 + 0x2] = a0\n 44245: a0 = a1 >> 0x8\n 44248: u8 [a4 + 0x1] = a0\n 44251: u8 [a4] = a1\n 44253: a1 = u64 [sp + 0x70]\n 44256: u8 [a4 + 0x18] = a1\n 44259: a0 = a2 >> 0x38\n 44262: u8 [a4 + 0x17] = a0\n 44265: a0 = a2 >> 0x30\n 44268: u8 [a4 + 0x16] = a0\n 44271: a0 = a2 >> 0x28\n 44274: u8 [a4 + 0x15] = a0\n 44277: a0 = a2 >> 0x20\n 44280: u8 [a4 + 0x14] = a0\n 44283: a0 = a2 >> 0x18\n 44286: u8 [a4 + 0x13] = a0\n 44289: a0 = a2 >> 0x10\n 44292: u8 [a4 + 0x12] = a0\n 44295: a0 = a2 >> 0x8\n 44298: u8 [a4 + 0x11] = a0\n 44301: a0 = a1 >> 0x38\n 44304: u8 [a4 + 0x1f] = a0\n 44307: a0 = a1 >> 0x30\n 44310: u8 [a4 + 0x1e] = a0\n 44313: a0 = a1 >> 0x28\n 44316: u8 [a4 + 0x1d] = a0\n 44319: a0 = a1 >> 0x20\n 44322: u8 [a4 + 0x1c] = a0\n 44325: a0 = a1 >> 0x18\n 44328: u8 [a4 + 0x1b] = a0\n 44331: a0 = a1 >> 0x10\n 44334: u8 [a4 + 0x1a] = a0\n 44337: a0 = a1 >> 0x8\n 44340: u8 [a4 + 0x19] = a0\n 44343: a1 = u64 [0x200a0]\n 44348: a0 = u64 [0x200a8]\n 44353: a2 = u64 [0x20090]\n 44358: a3 = u64 [0x20098]\n 44363: u64 [sp + 0x70] = a1\n 44366: t1 = reverse a1\n 44368: u64 [sp + 0x88] = a0\n 44372: a0 = reverse a0\n 44374: u64 [sp + 0x68] = a2\n 44377: a4 = reverse a2\n 44379: u64 [sp + 0x60] = a3\n 44382: a3 = reverse a3\n 44384: t0 = a3 | a4\n 44387: a5 = a0 <u 0xffffffffffffffc0\n 44390: a5 = 0 if t1 != 0\n 44392: a5 = 0 if t0 != 0\n 44394: jump @924 if a5 != 0\n      : @923 (gas: 1)\n 44397: jump @1249\n      : @924 (gas: 24)\n 44400: a5 = a0 + 0x40\n 44403: s1 = a5 <u a0\n 44406: a1 = t1 + s1\n 44409: a2 = a1 <u t1\n 44412: a2 = s1 if s1 == 0\n 44415: a2 = a2 + a3\n 44418: s1 = a2 <u a3\n 44421: s1 = s1 + a4\n 44424: s1 = reverse s1\n 44426: a2 = reverse a2\n 44428: a1 = reverse a1\n 44430: a5 = reverse a5\n 44432: u64 [0x200a8] = a5\n 44437: u64 [0x200a0] = a1\n 44442: u64 [0x20098] = a2\n 44447: a1 = a0 | a3\n 44450: a2 = t1 | a4\n 44453: a1 = a1 | a2\n 44456: a1 = a1 >> 0x20\n 44459: a2 = a2 | a3\n 44462: a2 = a2 << 0x20\n 44465: a1 = a1 | a2\n 44468: u64 [0x20090] = s1\n 44473: jump @926 if a1 == 0\n      : @925 (gas: 1)\n 44476: jump @1248\n      : @926 (gas: 2)\n 44479: i32 a1 = a0 >> 0x10\n 44482: jump @928 if a1 == 0\n      : @927 (gas: 1)\n 44485: jump @1248\n      : @928 (gas: 4)\n 44488: a1 = a0 + 0x3f\n 44491: a3 = u64 [sp + 0xb8]\n 44495: a3 = a3 & a1\n 44498: jump @930 if a3 <=u 65536\n      : @929 (gas: 1)\n 44504: jump @1248\n      : @930 (gas: 1)\n 44507: jump @932 if t2 >=u a3\n      : @931 (gas: 4)\n 44510: a1 = u64 [sp + 0xb0]\n 44514: u32 [a1] = a3\n 44516: t2 = a3\n 44518: fallthrough\n      : @932 (gas: 39)\n 44519: i32 a3 = a0 + 0\n 44521: a3 = a3 + ra\n 44524: u8 [a3 + 31] = 0x7f\n 44528: u8 [a3 + 30] = 0x19\n 44532: u8 [a3 + 29] = 0x8a\n 44537: u8 [a3 + 28] = 0x67\n 44541: u8 [a3 + 27] = 0x28\n 44545: u8 [a3 + 26] = 0x3d\n 44549: u8 [a3 + 25] = 0x86\n 44554: u8 [a3 + 24] = 0x52\n 44558: u8 [a3 + 23] = 0x95\n 44563: u8 [a3 + 22] = 0x16\n 44567: u8 [a3 + 21] = 0xd\n 44571: u8 [a3 + 20] = 0x70\n 44575: u8 [a3 + 19] = 0x39\n 44579: u8 [a3 + 18] = 0xad\n 44584: u8 [a3 + 17] = 0xf2\n 44589: u8 [a3 + 16] = 0x49\n 44593: u8 [a3 + 15] = 0x7e\n 44597: u8 [a3 + 14] = 0xb0\n 44602: u8 [a3 + 13] = 0x69\n 44606: u8 [a3 + 12] = 0x5d\n 44610: u8 [a3 + 11] = 0x20\n 44614: u8 [a3 + 10] = 0x18\n 44618: u8 [a3 + 9] = 0xdd\n 44623: u8 [a3 + 8] = 0x98\n 44628: u8 [a3 + 7] = 0x50\n 44632: u8 [a3 + 6] = 0xf1\n 44637: u8 [a3 + 5] = 0xf9\n 44642: u8 [a3 + 4] = 0xa8\n 44647: u8 [a3 + 3] = 0xb2\n 44652: u8 [a3 + 2] = 0xaa\n 44657: u8 [a3 + 1] = 0xec\n 44662: a1 = 0xffffffe0\n 44672: a1 = a0 <u a1\n 44675: a1 = 0 if t1 != 0\n 44677: a1 = 0 if t0 != 0\n 44679: u8 [a3 + 0] = 0x15\n 44682: jump @934 if a1 != 0\n      : @933 (gas: 1)\n 44685: jump @1248\n      : @934 (gas: 2)\n 44688: i32 a1 = a0 >> 0x5\n 44691: jump @936 if a1 <u 2047\n      : @935 (gas: 1)\n 44696: jump @1248\n      : @936 (gas: 4)\n 44699: a1 = a0 + 0x5f\n 44702: a2 = u64 [sp + 0xb8]\n 44706: a1 = a1 & a2\n 44709: jump @938 if a1 <=u 65536\n      : @937 (gas: 1)\n 44715: jump @1248\n      : @938 (gas: 2)\n 44718: i32 a0 = a0 + 0x20\n 44721: jump @940 if t2 >=u a1\n      : @939 (gas: 4)\n 44724: a2 = u64 [sp + 0xb0]\n 44728: u32 [a2] = a1\n 44730: t2 = a1\n 44732: fallthrough\n      : @940 (gas: 50)\n 44733: a0 = a0 + ra\n 44736: u8 [a0 + 31] = 0x68\n 44740: u8 [a0 + 30] = 0xd3\n 44745: u8 [a0 + 29] = 0x44\n 44749: u8 [a0 + 28] = 0x4c\n 44753: u8 [a0 + 27] = 0x33\n 44757: u8 [a0 + 26] = 0xc9\n 44762: u8 [a0 + 25] = 0x37\n 44766: u8 [a0 + 24] = 0x2d\n 44770: u8 [a0 + 23] = 0xfd\n 44775: u8 [a0 + 22] = 0x34\n 44779: u8 [a0 + 21] = 0x45\n 44783: u8 [a0 + 20] = 0x21\n 44787: u8 [a0 + 19] = 0xd9\n 44792: u8 [a0 + 18] = 0x98\n 44797: u8 [a0 + 17] = 0xb5\n 44802: u8 [a0 + 16] = 0x9c\n 44807: u8 [a0 + 15] = 0x39\n 44811: u8 [a0 + 14] = 0x96\n 44816: u8 [a0 + 13] = 0x6e\n 44820: u8 [a0 + 12] = 0xd7\n 44825: u8 [a0 + 11] = 0xc1\n 44830: u8 [a0 + 10] = 0x85\n 44835: u8 [a0 + 9] = 0xa7\n 44840: u8 [a0 + 8] = 0x43\n 44844: u8 [a0 + 7] = 0x1a\n 44848: u8 [a0 + 6] = 0xf3\n 44853: u8 [a0 + 5] = 0xc5\n 44858: u8 [a0 + 4] = 0xdc\n 44863: u8 [a0 + 3] = 0xb0\n 44868: u8 [a0 + 2] = 0x20\n 44872: u8 [a0 + 1] = 0x3c\n 44876: u8 [a0 + 0] = 0x14\n 44879: a1 = u64 [0x200a0]\n 44884: a0 = u64 [0x200a8]\n 44889: a4 = u64 [0x20090]\n 44894: a2 = u64 [0x20098]\n 44899: u64 [sp + 0x50] = a1\n 44902: t1 = reverse a1\n 44904: u64 [sp + 0x58] = a0\n 44907: a3 = reverse a0\n 44909: u64 [sp + 0x40] = a4\n 44912: a5 = reverse a4\n 44914: u64 [sp + 0x48] = a2\n 44917: s1 = reverse a2\n 44919: t0 = s1 | a5\n 44922: a0 = a3 <u 0xffffffffffffffc0\n 44925: a0 = 0 if t1 != 0\n 44927: a0 = 0 if t0 != 0\n 44929: jump @942 if a0 != 0\n      : @941 (gas: 1)\n 44932: jump @1249\n      : @942 (gas: 24)\n 44935: a0 = a3 + 0x40\n 44938: a1 = a0 <u a3\n 44941: a4 = t1 + a1\n 44944: a2 = a4 <u t1\n 44947: a2 = a1 if a1 == 0\n 44950: a2 = a2 + s1\n 44953: a1 = a2 <u s1\n 44956: a1 = a1 + a5\n 44959: a1 = reverse a1\n 44961: a2 = reverse a2\n 44963: a4 = reverse a4\n 44965: a0 = reverse a0\n 44967: u64 [0x200a8] = a0\n 44972: u64 [0x200a0] = a4\n 44977: u64 [0x20098] = a2\n 44982: a0 = a3 | s1\n 44985: a2 = t1 | a5\n 44988: a0 = a0 | a2\n 44991: a0 = a0 >> 0x20\n 44994: a2 = a2 | s1\n 44997: a2 = a2 << 0x20\n 45000: a0 = a0 | a2\n 45003: u64 [0x20090] = a1\n 45008: jump @944 if a0 == 0\n      : @943 (gas: 1)\n 45011: jump @1248\n      : @944 (gas: 2)\n 45014: i32 a0 = a3 >> 0x10\n 45017: jump @946 if a0 == 0\n      : @945 (gas: 1)\n 45020: jump @1248\n      : @946 (gas: 4)\n 45023: a0 = a3 + 0x3f\n 45026: a5 = u64 [sp + 0xb8]\n 45030: a5 = a5 & a0\n 45033: jump @948 if a5 <=u 65536\n      : @947 (gas: 1)\n 45039: jump @1248\n      : @948 (gas: 1)\n 45042: jump @950 if t2 >=u a5\n      : @949 (gas: 4)\n 45045: a0 = u64 [sp + 0xb0]\n 45049: u32 [a0] = a5\n 45051: t2 = a5\n 45053: fallthrough\n      : @950 (gas: 39)\n 45054: i32 s1 = a3 + 0\n 45056: s1 = s1 + ra\n 45059: u8 [s1 + 31] = 0x88\n 45064: u8 [s1 + 30] = 0x43\n 45068: u8 [s1 + 29] = 0xbe\n 45073: u8 [s1 + 28] = 0x10\n 45077: u8 [s1 + 27] = 0xda\n 45082: u8 [s1 + 26] = 0xf8\n 45087: u8 [s1 + 25] = 0xf7\n 45092: u8 [s1 + 24] = 0x8\n 45096: u8 [s1 + 23] = 0x9a\n 45101: u8 [s1 + 22] = 0x44\n 45105: u8 [s1 + 21] = 0x9c\n 45110: u8 [s1 + 20] = 0x75\n 45114: u8 [s1 + 19] = 0xeb\n 45119: u8 [s1 + 18] = 0x73\n 45123: u8 [s1 + 17] = 0xa2\n 45128: u8 [s1 + 16] = 0xed\n 45133: u8 [s1 + 15] = 0x4\n 45137: u8 [s1 + 14] = 0xaa\n 45142: u8 [s1 + 13] = 0x76\n 45146: u8 [s1 + 12] = 0x48\n 45150: u8 [s1 + 11] = 0xaf\n 45155: u8 [s1 + 10] = 0x7d\n 45159: u8 [s1 + 9] = 0xff\n 45164: u8 [s1 + 8] = 0xf1\n 45169: u8 [s1 + 7] = 0xee\n 45174: u8 [s1 + 6] = 0x41\n 45178: u8 [s1 + 5] = 0x7e\n 45182: u8 [s1 + 4] = 0xce\n 45187: u8 [s1 + 3] = 0xe8\n 45192: u8 [s1 + 2] = 0x2e\n 45196: u8 [s1 + 1] = 0x71\n 45200: a0 = 0xffffffe0\n 45210: a0 = a3 <u a0\n 45213: a0 = 0 if t1 != 0\n 45215: a0 = 0 if t0 != 0\n 45217: u8 [s1 + 0] = 0x1f\n 45220: jump @952 if a0 != 0\n      : @951 (gas: 1)\n 45223: jump @1248\n      : @952 (gas: 2)\n 45226: i32 a0 = a3 >> 0x5\n 45229: jump @954 if a0 <u 2047\n      : @953 (gas: 1)\n 45234: jump @1248\n      : @954 (gas: 4)\n 45237: a0 = a3 + 0x5f\n 45240: a4 = u64 [sp + 0xb8]\n 45244: a4 = a4 & a0\n 45247: jump @956 if a4 <=u 65536\n      : @955 (gas: 1)\n 45253: jump @1248\n      : @956 (gas: 2)\n 45256: i32 a3 = a3 + 0x20\n 45259: jump @958 if t2 >=u a4\n      : @957 (gas: 4)\n 45262: a0 = u64 [sp + 0xb0]\n 45266: u32 [a0] = a4\n 45268: t2 = a4\n 45270: fallthrough\n      : @958 (gas: 50)\n 45271: u64 [sp + 0xa0] = t2\n 45275: a3 = a3 + ra\n 45278: u8 [a3 + 31] = 0x41\n 45282: u8 [a3 + 30] = 0x72\n 45286: u8 [a3 + 29] = 0x11\n 45290: u8 [a3 + 28] = 0x6c\n 45294: u8 [a3 + 27] = 0xce\n 45299: u8 [a3 + 26] = 0x7c\n 45303: u8 [a3 + 25] = 0xb0\n 45308: u8 [a3 + 24] = 0x4c\n 45312: u8 [a3 + 23] = 0x16\n 45316: u8 [a3 + 22] = 0x29\n 45320: u8 [a3 + 21] = 0x60\n 45324: u8 [a3 + 20] = 0x28\n 45328: u8 [a3 + 19] = 0x9d\n 45333: u8 [a3 + 18] = 0x94\n 45338: u8 [a3 + 17] = 0xf0\n 45343: u8 [a3 + 16] = 0xaf\n 45348: u8 [a3 + 15] = 0xe\n 45352: u8 [a3 + 14] = 0x51\n 45356: u8 [a3 + 13] = 0x2f\n 45360: u8 [a3 + 12] = 0x7a\n 45364: u8 [a3 + 11] = 0x89\n 45369: u8 [a3 + 10] = 0xf1\n 45374: u8 [a3 + 9] = 0x7\n 45378: u8 [a3 + 8] = 0xb1\n 45383: u8 [a3 + 7] = 0x4c\n 45387: u8 [a3 + 6] = 0xc0\n 45392: u8 [a3 + 5] = 0x6d\n 45396: u8 [a3 + 4] = 0x88\n 45401: u8 [a3 + 3] = 0x1e\n 45405: u8 [a3 + 2] = 0x7d\n 45409: u8 [a3 + 1] = 0xd2\n 45414: u8 [a3 + 0] = 0x14\n 45417: a1 = u64 [0x200a0]\n 45422: a0 = u64 [0x200a8]\n 45427: t2 = u64 [0x20090]\n 45432: t0 = u64 [0x20098]\n 45437: u64 [sp + 0x28] = a1\n 45440: a4 = reverse a1\n 45442: u64 [sp + 0x30] = a0\n 45445: t1 = reverse a0\n 45447: a5 = reverse t2\n 45449: s1 = reverse t0\n 45451: a1 = s1 | a5\n 45454: a0 = t1 <u 0xffffffffffffffc0\n 45457: a0 = 0 if a4 != 0\n 45459: u64 [sp + 0x38] = a1\n 45462: a0 = 0 if a1 != 0\n 45464: jump @960 if a0 != 0\n      : @959 (gas: 1)\n 45467: jump @1249\n      : @960 (gas: 25)\n 45470: a0 = t1 + 0x40\n 45473: a1 = a0 <u t1\n 45476: a2 = a4 + a1\n 45479: a3 = a2 <u a4\n 45482: a3 = a1 if a1 == 0\n 45485: a3 = a3 + s1\n 45488: a1 = a3 <u s1\n 45491: a1 = a1 + a5\n 45494: a1 = reverse a1\n 45496: a3 = reverse a3\n 45498: a2 = reverse a2\n 45500: a0 = reverse a0\n 45502: u64 [0x200a8] = a0\n 45507: u64 [0x200a0] = a2\n 45512: u64 [0x20098] = a3\n 45517: a0 = t1 | s1\n 45520: a5 = a5 | a4\n 45523: a0 = a0 | a5\n 45526: a0 = a0 >> 0x20\n 45529: a5 = a5 | s1\n 45532: a5 = a5 << 0x20\n 45535: a0 = a0 | a5\n 45538: u64 [sp + 0xa8] = ra\n 45542: u64 [0x20090] = a1\n 45547: jump @962 if a0 == 0\n      : @961 (gas: 1)\n 45550: jump @1248\n      : @962 (gas: 2)\n 45553: i32 a0 = t1 >> 0x10\n 45556: jump @964 if a0 == 0\n      : @963 (gas: 1)\n 45559: jump @1248\n      : @964 (gas: 4)\n 45562: a0 = t1 + 0x3f\n 45565: a5 = u64 [sp + 0xb8]\n 45569: a5 = a5 & a0\n 45572: jump @966 if a5 <=u 65536\n      : @965 (gas: 1)\n 45578: jump @1248\n      : @966 (gas: 2)\n 45581: a0 = u64 [sp + 0xa0]\n 45585: jump @968 if a0 >=u a5\n      : @967 (gas: 4)\n 45588: a0 = u64 [sp + 0xb0]\n 45592: u32 [a0] = a5\n 45594: u64 [sp + 0xa0] = a5\n 45598: fallthrough\n      : @968 (gas: 73)\n 45599: i32 s1 = t1 + 0\n 45601: a0 = u64 [sp + 0xa8]\n 45605: s1 = s1 + a0\n 45608: a2 = u64 [sp + 0x70]\n 45611: u8 [s1 + 0x10] = a2\n 45614: a1 = u64 [sp + 0x60]\n 45617: a0 = a1 >> 0x38\n 45620: u8 [s1 + 0xf] = a0\n 45623: a0 = a1 >> 0x30\n 45626: u8 [s1 + 0xe] = a0\n 45629: a0 = a1 >> 0x28\n 45632: u8 [s1 + 0xd] = a0\n 45635: a0 = a1 >> 0x20\n 45638: u8 [s1 + 0xc] = a0\n 45641: a0 = a1 >> 0x18\n 45644: u8 [s1 + 0xb] = a0\n 45647: a0 = a1 >> 0x10\n 45650: u8 [s1 + 0xa] = a0\n 45653: a0 = a1 >> 0x8\n 45656: u8 [s1 + 0x9] = a0\n 45659: u8 [s1 + 0x8] = a1\n 45662: a1 = u64 [sp + 0x68]\n 45665: a0 = a1 >> 0x38\n 45668: u8 [s1 + 0x7] = a0\n 45671: a0 = a1 >> 0x30\n 45674: u8 [s1 + 0x6] = a0\n 45677: a0 = a1 >> 0x28\n 45680: u8 [s1 + 0x5] = a0\n 45683: a0 = a1 >> 0x20\n 45686: u8 [s1 + 0x4] = a0\n 45689: a0 = a1 >> 0x18\n 45692: u8 [s1 + 0x3] = a0\n 45695: a0 = a1 >> 0x10\n 45698: u8 [s1 + 0x2] = a0\n 45701: a0 = a1 >> 0x8\n 45704: u8 [s1 + 0x1] = a0\n 45707: u8 [s1] = a1\n 45709: a1 = u64 [sp + 0x88]\n 45713: u8 [s1 + 0x18] = a1\n 45716: a0 = a2 >> 0x38\n 45719: u8 [s1 + 0x17] = a0\n 45722: a0 = a2 >> 0x30\n 45725: u8 [s1 + 0x16] = a0\n 45728: a0 = a2 >> 0x28\n 45731: u8 [s1 + 0x15] = a0\n 45734: a0 = a2 >> 0x20\n 45737: u8 [s1 + 0x14] = a0\n 45740: a0 = a2 >> 0x18\n 45743: u8 [s1 + 0x13] = a0\n 45746: a0 = a2 >> 0x10\n 45749: u8 [s1 + 0x12] = a0\n 45752: a0 = a2 >> 0x8\n 45755: u8 [s1 + 0x11] = a0\n 45758: a0 = a1 >> 0x38\n 45761: u8 [s1 + 0x1f] = a0\n 45764: a0 = a1 >> 0x30\n 45767: u8 [s1 + 0x1e] = a0\n 45770: a0 = a1 >> 0x28\n 45773: u8 [s1 + 0x1d] = a0\n 45776: a0 = a1 >> 0x20\n 45779: u8 [s1 + 0x1c] = a0\n 45782: a0 = a1 >> 0x18\n 45785: u8 [s1 + 0x1b] = a0\n 45788: a0 = a1 >> 0x10\n 45791: u8 [s1 + 0x1a] = a0\n 45794: a0 = a1 >> 0x8\n 45797: a1 = 0xffffffe0\n 45807: a1 = t1 <u a1\n 45810: a1 = 0 if a4 != 0\n 45812: a2 = u64 [sp + 0x38]\n 45815: a1 = 0 if a2 != 0\n 45817: u8 [s1 + 0x19] = a0\n 45820: jump @970 if a1 != 0\n      : @969 (gas: 1)\n 45823: jump @1248\n      : @970 (gas: 2)\n 45826: i32 a0 = t1 >> 0x5\n 45829: jump @972 if a0 <u 2047\n      : @971 (gas: 1)\n 45834: jump @1248\n      : @972 (gas: 4)\n 45837: a0 = t1 + 0x5f\n 45840: a4 = u64 [sp + 0xb8]\n 45844: a4 = a4 & a0\n 45847: jump @974 if a4 <=u 65536\n      : @973 (gas: 1)\n 45853: jump @1248\n      : @974 (gas: 3)\n 45856: i32 a5 = t1 + 0x20\n 45859: a0 = u64 [sp + 0xa0]\n 45863: jump @976 if a0 >=u a4\n      : @975 (gas: 4)\n 45866: a0 = u64 [sp + 0xb0]\n 45870: u32 [a0] = a4\n 45872: u64 [sp + 0xa0] = a4\n 45876: fallthrough\n      : @976 (gas: 77)\n 45877: ra = u64 [sp + 0xa8]\n 45881: a4 = ra + a5\n 45884: a1 = u64 [sp + 0x48]\n 45887: u8 [a4 + 0x8] = a1\n 45890: a2 = u64 [sp + 0x40]\n 45893: a0 = a2 >> 0x38\n 45896: u8 [a4 + 0x7] = a0\n 45899: a0 = a2 >> 0x30\n 45902: u8 [a4 + 0x6] = a0\n 45905: a0 = a2 >> 0x28\n 45908: u8 [a4 + 0x5] = a0\n 45911: a0 = a2 >> 0x20\n 45914: u8 [a4 + 0x4] = a0\n 45917: a0 = a2 >> 0x18\n 45920: u8 [a4 + 0x3] = a0\n 45923: a0 = a2 >> 0x10\n 45926: u8 [a4 + 0x2] = a0\n 45929: a0 = a2 >> 0x8\n 45932: u8 [a4 + 0x1] = a0\n 45935: u8 [a4] = a2\n 45937: a2 = u64 [sp + 0x50]\n 45940: u8 [a4 + 0x10] = a2\n 45943: a0 = a1 >> 0x38\n 45946: u8 [a4 + 0xf] = a0\n 45949: a0 = a1 >> 0x30\n 45952: u8 [a4 + 0xe] = a0\n 45955: a0 = a1 >> 0x28\n 45958: u8 [a4 + 0xd] = a0\n 45961: a0 = a1 >> 0x20\n 45964: u8 [a4 + 0xc] = a0\n 45967: a0 = a1 >> 0x18\n 45970: u8 [a4 + 0xb] = a0\n 45973: a0 = a1 >> 0x10\n 45976: u8 [a4 + 0xa] = a0\n 45979: a0 = a1 >> 0x8\n 45982: u8 [a4 + 0x9] = a0\n 45985: a1 = u64 [sp + 0x58]\n 45988: u8 [a4 + 0x18] = a1\n 45991: a0 = a2 >> 0x38\n 45994: u8 [a4 + 0x17] = a0\n 45997: a0 = a2 >> 0x30\n 46000: u8 [a4 + 0x16] = a0\n 46003: a0 = a2 >> 0x28\n 46006: u8 [a4 + 0x15] = a0\n 46009: a0 = a2 >> 0x20\n 46012: u8 [a4 + 0x14] = a0\n 46015: a0 = a2 >> 0x18\n 46018: u8 [a4 + 0x13] = a0\n 46021: a0 = a2 >> 0x10\n 46024: u8 [a4 + 0x12] = a0\n 46027: a0 = a2 >> 0x8\n 46030: u8 [a4 + 0x11] = a0\n 46033: a0 = a1 >> 0x38\n 46036: u8 [a4 + 0x1f] = a0\n 46039: a0 = a1 >> 0x30\n 46042: u8 [a4 + 0x1e] = a0\n 46045: a0 = a1 >> 0x28\n 46048: u8 [a4 + 0x1d] = a0\n 46051: a0 = a1 >> 0x20\n 46054: u8 [a4 + 0x1c] = a0\n 46057: a0 = a1 >> 0x18\n 46060: u8 [a4 + 0x1b] = a0\n 46063: a0 = a1 >> 0x10\n 46066: u8 [a4 + 0x1a] = a0\n 46069: a0 = a1 >> 0x8\n 46072: a1 = u64 [sp + 0x80]\n 46076: a2 = u64 [sp + 0x78]\n 46079: a5 = a2 | a1\n 46082: a1 = 0xffffffe0\n 46092: a3 = u64 [sp + 0x98]\n 46096: a1 = a3 <u a1\n 46099: a2 = u64 [sp + 0x90]\n 46103: a1 = 0 if a2 != 0\n 46105: u64 [sp + 0x88] = a5\n 46109: a1 = 0 if a5 != 0\n 46111: u8 [a4 + 0x19] = a0\n 46114: jump @978 if a1 != 0\n      : @977 (gas: 1)\n 46117: jump @1248\n      : @978 (gas: 2)\n 46120: i32 a2 = a3 >> 0x5\n 46123: jump @980 if a2 <u 2047\n      : @979 (gas: 1)\n 46128: jump @1248\n      : @980 (gas: 4)\n 46131: a0 = a3 + 0x5f\n 46134: a1 = u64 [sp + 0xb8]\n 46138: a0 = a0 & a1\n 46141: jump @982 if a0 <=u 65536\n      : @981 (gas: 1)\n 46147: jump @1248\n      : @982 (gas: 4)\n 46150: u64 [sp + 0x10] = a2\n 46153: i32 a1 = a3 + 0x20\n 46156: a2 = u64 [sp + 0xa0]\n 46160: jump @984 if a2 >=u a0\n      : @983 (gas: 4)\n 46163: a2 = u64 [sp + 0xb0]\n 46167: u32 [a2] = a0\n 46169: u64 [sp + 0xa0] = a0\n 46173: fallthrough\n      : @984 (gas: 80)\n 46174: a0 = ra + a1\n 46177: u8 [a0 + 0x8] = t0\n 46180: a1 = t2 >> 0x38\n 46183: u8 [a0 + 0x7] = a1\n 46186: a1 = t2 >> 0x30\n 46189: u8 [a0 + 0x6] = a1\n 46192: a1 = t2 >> 0x28\n 46195: u8 [a0 + 0x5] = a1\n 46198: a1 = t2 >> 0x20\n 46201: u8 [a0 + 0x4] = a1\n 46204: a1 = t2 >> 0x18\n 46207: u8 [a0 + 0x3] = a1\n 46210: a1 = t2 >> 0x10\n 46213: u8 [a0 + 0x2] = a1\n 46216: a1 = t2 >> 0x8\n 46219: u8 [a0 + 0x1] = a1\n 46222: u8 [a0] = t2\n 46224: a3 = u64 [sp + 0x28]\n 46227: u8 [a0 + 0x10] = a3\n 46230: a1 = t0 >> 0x38\n 46233: u8 [a0 + 0xf] = a1\n 46236: a1 = t0 >> 0x30\n 46239: u8 [a0 + 0xe] = a1\n 46242: a1 = t0 >> 0x28\n 46245: u8 [a0 + 0xd] = a1\n 46248: a1 = t0 >> 0x20\n 46251: u8 [a0 + 0xc] = a1\n 46254: a1 = t0 >> 0x18\n 46257: u8 [a0 + 0xb] = a1\n 46260: a1 = t0 >> 0x10\n 46263: u8 [a0 + 0xa] = a1\n 46266: a1 = t0 >> 0x8\n 46269: u8 [a0 + 0x9] = a1\n 46272: a2 = u64 [sp + 0x30]\n 46275: u8 [a0 + 0x18] = a2\n 46278: a1 = a3 >> 0x38\n 46281: u8 [a0 + 0x17] = a1\n 46284: a1 = a3 >> 0x30\n 46287: u8 [a0 + 0x16] = a1\n 46290: a1 = a3 >> 0x28\n 46293: u8 [a0 + 0x15] = a1\n 46296: a1 = a3 >> 0x20\n 46299: u8 [a0 + 0x14] = a1\n 46302: a1 = a3 >> 0x18\n 46305: u8 [a0 + 0x13] = a1\n 46308: a1 = a3 >> 0x10\n 46311: u8 [a0 + 0x12] = a1\n 46314: a1 = a3 >> 0x8\n 46317: u8 [a0 + 0x11] = a1\n 46320: a1 = a2 >> 0x38\n 46323: u8 [a0 + 0x1f] = a1\n 46326: a1 = a2 >> 0x30\n 46329: u8 [a0 + 0x1e] = a1\n 46332: a1 = a2 >> 0x28\n 46335: u8 [a0 + 0x1d] = a1\n 46338: a1 = a2 >> 0x20\n 46341: u8 [a0 + 0x1c] = a1\n 46344: a1 = a2 >> 0x18\n 46347: u8 [a0 + 0x1b] = a1\n 46350: a1 = a2 >> 0x10\n 46353: u8 [a0 + 0x1a] = a1\n 46356: a1 = a2 >> 0x8\n 46359: u8 [a0 + 0x19] = a1\n 46362: a1 = u64 [ra + 0x50]\n 46365: a0 = u64 [ra + 0x58]\n 46368: a2 = u64 [ra + 0x40]\n 46371: a3 = u64 [ra + 0x48]\n 46374: u64 [sp + 0x68] = a1\n 46377: t1 = reverse a1\n 46379: u64 [sp + 0x70] = a0\n 46382: a0 = reverse a0\n 46384: u64 [sp + 0x60] = a2\n 46387: a4 = reverse a2\n 46389: u64 [sp + 0x58] = a3\n 46392: a3 = reverse a3\n 46394: t0 = a3 | a4\n 46397: a5 = a0 <u 0xffffffffffffffc0\n 46400: a5 = 0 if t1 != 0\n 46402: a5 = 0 if t0 != 0\n 46404: jump @986 if a5 != 0\n      : @985 (gas: 1)\n 46407: jump @1249\n      : @986 (gas: 25)\n 46410: a5 = a0 + 0x40\n 46413: s1 = a5 <u a0\n 46416: a1 = t1 + s1\n 46419: a2 = a1 <u t1\n 46422: a2 = s1 if s1 == 0\n 46425: a2 = a2 + a3\n 46428: s1 = a2 <u a3\n 46431: s1 = s1 + a4\n 46434: s1 = reverse s1\n 46436: a2 = reverse a2\n 46438: a1 = reverse a1\n 46440: a5 = reverse a5\n 46442: u64 [ra + 0x58] = a5\n 46445: u64 [ra + 0x50] = a1\n 46448: u64 [ra + 0x48] = a2\n 46451: a1 = a0 | a3\n 46454: a2 = t1 | a4\n 46457: a1 = a1 | a2\n 46460: a1 = a1 >> 0x20\n 46463: a2 = a2 | a3\n 46466: a2 = a2 << 0x20\n 46469: a1 = a1 | a2\n 46472: u64 [ra + 0x40] = s1\n 46475: t2 = u64 [sp + 0xa0]\n 46479: jump @988 if a1 == 0\n      : @987 (gas: 1)\n 46482: jump @1248\n      : @988 (gas: 2)\n 46485: i32 a1 = a0 >> 0x10\n 46488: jump @990 if a1 == 0\n      : @989 (gas: 1)\n 46491: jump @1248\n      : @990 (gas: 4)\n 46494: a1 = a0 + 0x3f\n 46497: a3 = u64 [sp + 0xb8]\n 46501: a3 = a3 & a1\n 46504: jump @992 if a3 <=u 65536\n      : @991 (gas: 1)\n 46510: jump @1248\n      : @992 (gas: 1)\n 46513: jump @994 if t2 >=u a3\n      : @993 (gas: 4)\n 46516: a1 = u64 [sp + 0xb0]\n 46520: u32 [a1] = a3\n 46522: t2 = a3\n 46524: fallthrough\n      : @994 (gas: 39)\n 46525: i32 a3 = a0 + 0\n 46527: a3 = a3 + ra\n 46530: u8 [a3 + 31] = 0xc2\n 46535: u8 [a3 + 30] = 0x12\n 46539: u8 [a3 + 29] = 0xf3\n 46544: u8 [a3 + 28] = 0xae\n 46549: u8 [a3 + 27] = 0xb7\n 46554: u8 [a3 + 26] = 0x85\n 46559: u8 [a3 + 25] = 0xe4\n 46564: u8 [a3 + 24] = 0x97\n 46569: u8 [a3 + 23] = 0x12\n 46573: u8 [a3 + 22] = 0xe7\n 46578: u8 [a3 + 21] = 0xa9\n 46583: u8 [a3 + 20] = 0x35\n 46587: u8 [a3 + 19] = 0x33\n 46591: u8 [a3 + 18] = 0x49\n 46595: u8 [a3 + 17] = 0xaa\n 46600: u8 [a3 + 16] = 0xf1\n 46605: u8 [a3 + 15] = 0x25\n 46609: u8 [a3 + 14] = 0x5d\n 46613: u8 [a3 + 13] = 0xfb\n 46618: u8 [a3 + 12] = 0x31\n 46622: u8 [a3 + 11] = 0xb7\n 46627: u8 [a3 + 10] = 0xbf\n 46632: u8 [a3 + 9] = 0x60\n 46636: u8 [a3 + 8] = 0x72\n 46640: u8 [a3 + 7] = 0x3a\n 46644: u8 [a3 + 6] = 0x48\n 46648: u8 [a3 + 5] = 0xd\n 46652: u8 [a3 + 4] = 0x92\n 46657: u8 [a3 + 3] = 0x93\n 46662: u8 [a3 + 2] = 0x93\n 46667: u8 [a3 + 1] = 0x8e\n 46672: a2 = 0xffffffe0\n 46682: a2 = a0 <u a2\n 46685: a2 = 0 if t1 != 0\n 46687: a2 = 0 if t0 != 0\n 46689: u8 [a3 + 0] = 0x19\n 46692: jump @996 if a2 != 0\n      : @995 (gas: 1)\n 46695: jump @1248\n      : @996 (gas: 2)\n 46698: i32 a1 = a0 >> 0x5\n 46701: jump @998 if a1 <u 2047\n      : @997 (gas: 1)\n 46706: jump @1248\n      : @998 (gas: 4)\n 46709: a1 = a0 + 0x5f\n 46712: a2 = u64 [sp + 0xb8]\n 46716: a1 = a1 & a2\n 46719: jump @1000 if a1 <=u 65536\n      : @999 (gas: 1)\n 46725: jump @1248\n      : @1000 (gas: 2)\n 46728: i32 a0 = a0 + 0x20\n 46731: jump @1002 if t2 >=u a1\n      : @1001 (gas: 4)\n 46734: a2 = u64 [sp + 0xb0]\n 46738: u32 [a2] = a1\n 46740: t2 = a1\n 46742: fallthrough\n      : @1002 (gas: 50)\n 46743: a0 = a0 + ra\n 46746: u8 [a0 + 31] = 0xed\n 46751: u8 [a0 + 30] = 0xf6\n 46756: u8 [a0 + 29] = 0x92\n 46761: u8 [a0 + 28] = 0xd9\n 46766: u8 [a0 + 27] = 0x5c\n 46770: u8 [a0 + 26] = 0xbd\n 46775: u8 [a0 + 25] = 0xde\n 46780: u8 [a0 + 24] = 0x46\n 46784: u8 [a0 + 23] = 0xdd\n 46789: u8 [a0 + 22] = 0xda\n 46794: u8 [a0 + 21] = 0x5e\n 46798: u8 [a0 + 20] = 0xf7\n 46803: u8 [a0 + 19] = 0xd4\n 46808: u8 [a0 + 18] = 0x22\n 46812: u8 [a0 + 17] = 0x43\n 46816: u8 [a0 + 16] = 0x67\n 46820: u8 [a0 + 15] = 0x79\n 46824: u8 [a0 + 14] = 0x44\n 46828: u8 [a0 + 13] = 0x5c\n 46832: u8 [a0 + 12] = 0x5e\n 46836: u8 [a0 + 11] = 0x66\n 46840: u8 [a0 + 10] = 0\n 46843: u8 [a0 + 9] = 0x6a\n 46847: u8 [a0 + 8] = 0x42\n 46851: u8 [a0 + 7] = 0x76\n 46855: u8 [a0 + 6] = 0x1e\n 46859: u8 [a0 + 5] = 0x1f\n 46863: u8 [a0 + 4] = 0x12\n 46867: u8 [a0 + 3] = 0xef\n 46872: u8 [a0 + 2] = 0xde\n 46877: u8 [a0 + 1] = 0\n 46880: u8 [a0 + 0] = 0x18\n 46883: a1 = u64 [ra + 0x50]\n 46886: a0 = u64 [ra + 0x58]\n 46889: a3 = u64 [ra + 0x40]\n 46892: a2 = u64 [ra + 0x48]\n 46895: u64 [sp + 0x48] = a1\n 46898: t1 = reverse a1\n 46900: u64 [sp + 0x50] = a0\n 46903: a4 = reverse a0\n 46905: u64 [sp + 0x38] = a3\n 46908: a1 = reverse a3\n 46910: u64 [sp + 0x40] = a2\n 46913: s1 = reverse a2\n 46915: t0 = s1 | a1\n 46918: a0 = a4 <u 0xffffffffffffffc0\n 46921: a0 = 0 if t1 != 0\n 46923: a0 = 0 if t0 != 0\n 46925: jump @1004 if a0 != 0\n      : @1003 (gas: 1)\n 46928: jump @1249\n      : @1004 (gas: 24)\n 46931: a0 = a4 + 0x40\n 46934: a2 = a0 <u a4\n 46937: a5 = t1 + a2\n 46940: a3 = a5 <u t1\n 46943: a3 = a2 if a2 == 0\n 46946: a3 = a3 + s1\n 46949: a2 = a3 <u s1\n 46952: a2 = a2 + a1\n 46955: a2 = reverse a2\n 46957: a3 = reverse a3\n 46959: a5 = reverse a5\n 46961: a0 = reverse a0\n 46963: u64 [ra + 0x58] = a0\n 46966: u64 [ra + 0x50] = a5\n 46969: u64 [ra + 0x48] = a3\n 46972: a0 = a4 | s1\n 46975: a1 = t1 | a1\n 46978: a0 = a0 | a1\n 46981: a0 = a0 >> 0x20\n 46984: a1 = a1 | s1\n 46987: a1 = a1 << 0x20\n 46990: a0 = a0 | a1\n 46993: u64 [ra + 0x40] = a2\n 46996: jump @1006 if a0 == 0\n      : @1005 (gas: 1)\n 46999: jump @1248\n      : @1006 (gas: 2)\n 47002: i32 a0 = a4 >> 0x10\n 47005: jump @1008 if a0 == 0\n      : @1007 (gas: 1)\n 47008: jump @1248\n      : @1008 (gas: 4)\n 47011: a0 = a4 + 0x3f\n 47014: a1 = u64 [sp + 0xb8]\n 47018: a1 = a1 & a0\n 47021: jump @1010 if a1 <=u 65536\n      : @1009 (gas: 1)\n 47027: jump @1248\n      : @1010 (gas: 1)\n 47030: jump @1012 if t2 >=u a1\n      : @1011 (gas: 4)\n 47033: a0 = u64 [sp + 0xb0]\n 47037: u32 [a0] = a1\n 47039: t2 = a1\n 47041: fallthrough\n      : @1012 (gas: 39)\n 47042: i32 s1 = a4 + 0\n 47044: s1 = s1 + ra\n 47047: u8 [s1 + 31] = 0x5b\n 47051: u8 [s1 + 30] = 0x97\n 47056: u8 [s1 + 29] = 0x22\n 47060: u8 [s1 + 28] = 0xd1\n 47065: u8 [s1 + 27] = 0xdc\n 47070: u8 [s1 + 26] = 0xda\n 47075: u8 [s1 + 25] = 0xac\n 47080: u8 [s1 + 24] = 0x55\n 47084: u8 [s1 + 23] = 0xf3\n 47089: u8 [s1 + 22] = 0x8e\n 47094: u8 [s1 + 21] = 0xb3\n 47099: u8 [s1 + 20] = 0x70\n 47103: u8 [s1 + 19] = 0x33\n 47107: u8 [s1 + 18] = 0x31\n 47111: u8 [s1 + 17] = 0x4b\n 47115: u8 [s1 + 16] = 0xbc\n 47120: u8 [s1 + 15] = 0x95\n 47125: u8 [s1 + 14] = 0x33\n 47129: u8 [s1 + 13] = 0xc\n 47133: u8 [s1 + 12] = 0x69\n 47137: u8 [s1 + 11] = 0xad\n 47142: u8 [s1 + 10] = 0x99\n 47147: u8 [s1 + 9] = 0x9e\n 47152: u8 [s1 + 8] = 0xec\n 47157: u8 [s1 + 7] = 0x75\n 47161: u8 [s1 + 6] = 0xf0\n 47166: u8 [s1 + 5] = 0x5f\n 47170: u8 [s1 + 4] = 0x58\n 47174: u8 [s1 + 3] = 0xd0\n 47179: u8 [s1 + 2] = 0x89\n 47184: u8 [s1 + 1] = 0x6\n 47188: a1 = 0xffffffe0\n 47198: a1 = a4 <u a1\n 47201: a1 = 0 if t1 != 0\n 47203: a1 = 0 if t0 != 0\n 47205: u8 [s1 + 0] = 0x9\n 47208: jump @1014 if a1 != 0\n      : @1013 (gas: 1)\n 47211: jump @1248\n      : @1014 (gas: 2)\n 47214: i32 a0 = a4 >> 0x5\n 47217: jump @1016 if a0 <u 2047\n      : @1015 (gas: 1)\n 47222: jump @1248\n      : @1016 (gas: 4)\n 47225: a0 = a4 + 0x5f\n 47228: a1 = u64 [sp + 0xb8]\n 47232: a1 = a1 & a0\n 47235: jump @1018 if a1 <=u 65536\n      : @1017 (gas: 1)\n 47241: jump @1248\n      : @1018 (gas: 2)\n 47244: i32 a4 = a4 + 0x20\n 47247: jump @1020 if t2 >=u a1\n      : @1019 (gas: 4)\n 47250: a0 = u64 [sp + 0xb0]\n 47254: u32 [a0] = a1\n 47256: t2 = a1\n 47258: fallthrough\n      : @1020 (gas: 51)\n 47259: u64 [sp + 0xa0] = t2\n 47263: a4 = a4 + ra\n 47266: u8 [a4 + 31] = 0xaa\n 47271: u8 [a4 + 30] = 0x7d\n 47275: u8 [a4 + 29] = 0xfa\n 47280: u8 [a4 + 28] = 0x66\n 47284: u8 [a4 + 27] = 0x1\n 47288: u8 [a4 + 26] = 0xcc\n 47293: u8 [a4 + 25] = 0xe6\n 47298: u8 [a4 + 24] = 0x4c\n 47302: u8 [a4 + 23] = 0x7b\n 47306: u8 [a4 + 22] = 0xd3\n 47311: u8 [a4 + 21] = 0x43\n 47315: u8 [a4 + 20] = 0xc\n 47319: u8 [a4 + 19] = 0x69\n 47323: u8 [a4 + 18] = 0xe7\n 47328: u8 [a4 + 17] = 0xd1\n 47333: u8 [a4 + 16] = 0xe3\n 47338: u8 [a4 + 15] = 0x8f\n 47343: u8 [a4 + 14] = 0x40\n 47347: u8 [a4 + 13] = 0xcb\n 47352: u8 [a4 + 12] = 0x8d\n 47357: u8 [a4 + 11] = 0x80\n 47362: u8 [a4 + 10] = 0x71\n 47366: u8 [a4 + 9] = 0xab\n 47371: u8 [a4 + 8] = 0x4a\n 47375: u8 [a4 + 7] = 0xeb\n 47380: u8 [a4 + 6] = 0x6d\n 47384: u8 [a4 + 5] = 0x8c\n 47389: u8 [a4 + 4] = 0xdb\n 47394: u8 [a4 + 3] = 0xa5\n 47399: u8 [a4 + 2] = 0x5e\n 47403: u8 [a4 + 1] = 0xc8\n 47408: u8 [a4 + 0] = 0x12\n 47411: a1 = u64 [ra + 0x50]\n 47414: a0 = u64 [ra + 0x58]\n 47417: t2 = u64 [ra + 0x40]\n 47420: a2 = u64 [ra + 0x48]\n 47423: u64 [sp + 0x20] = a1\n 47426: a5 = reverse a1\n 47428: u64 [sp + 0x28] = a0\n 47431: t1 = reverse a0\n 47433: a1 = reverse t2\n 47435: u64 [sp + 0x18] = a2\n 47438: s1 = reverse a2\n 47440: a2 = s1 | a1\n 47443: a0 = t1 <u 0xffffffffffffffc0\n 47446: a0 = 0 if a5 != 0\n 47448: u64 [sp + 0x30] = a2\n 47451: a0 = 0 if a2 != 0\n 47453: jump @1022 if a0 != 0\n      : @1021 (gas: 1)\n 47456: jump @1249\n      : @1022 (gas: 24)\n 47459: a0 = t1 + 0x40\n 47462: a2 = a0 <u t1\n 47465: a3 = a5 + a2\n 47468: t0 = a3 <u a5\n 47471: t0 = a2 if a2 == 0\n 47474: t0 = t0 + s1\n 47477: a2 = t0 <u s1\n 47480: a2 = a2 + a1\n 47483: a2 = reverse a2\n 47485: a4 = reverse t0\n 47487: a3 = reverse a3\n 47489: a0 = reverse a0\n 47491: u64 [ra + 0x58] = a0\n 47494: u64 [ra + 0x50] = a3\n 47497: u64 [ra + 0x48] = a4\n 47500: a0 = t1 | s1\n 47503: a1 = a1 | a5\n 47506: a0 = a0 | a1\n 47509: a0 = a0 >> 0x20\n 47512: a1 = a1 | s1\n 47515: a1 = a1 << 0x20\n 47518: a0 = a0 | a1\n 47521: u64 [ra + 0x40] = a2\n 47524: jump @1024 if a0 == 0\n      : @1023 (gas: 1)\n 47527: jump @1248\n      : @1024 (gas: 2)\n 47530: i32 a0 = t1 >> 0x10\n 47533: jump @1026 if a0 == 0\n      : @1025 (gas: 1)\n 47536: jump @1248\n      : @1026 (gas: 4)\n 47539: a0 = t1 + 0x3f\n 47542: a1 = u64 [sp + 0xb8]\n 47546: a1 = a1 & a0\n 47549: jump @1028 if a1 <=u 65536\n      : @1027 (gas: 1)\n 47555: jump @1248\n      : @1028 (gas: 2)\n 47558: a0 = u64 [sp + 0xa0]\n 47562: jump @1030 if a0 >=u a1\n      : @1029 (gas: 4)\n 47565: a0 = u64 [sp + 0xb0]\n 47569: u32 [a0] = a1\n 47571: u64 [sp + 0xa0] = a1\n 47575: fallthrough\n      : @1030 (gas: 73)\n 47576: i32 s1 = t1 + 0\n 47578: a0 = u64 [sp + 0xa8]\n 47582: s1 = s1 + a0\n 47585: a2 = u64 [sp + 0x68]\n 47588: u8 [s1 + 0x10] = a2\n 47591: a1 = u64 [sp + 0x58]\n 47594: a0 = a1 >> 0x38\n 47597: u8 [s1 + 0xf] = a0\n 47600: a0 = a1 >> 0x30\n 47603: u8 [s1 + 0xe] = a0\n 47606: a0 = a1 >> 0x28\n 47609: u8 [s1 + 0xd] = a0\n 47612: a0 = a1 >> 0x20\n 47615: u8 [s1 + 0xc] = a0\n 47618: a0 = a1 >> 0x18\n 47621: u8 [s1 + 0xb] = a0\n 47624: a0 = a1 >> 0x10\n 47627: u8 [s1 + 0xa] = a0\n 47630: a0 = a1 >> 0x8\n 47633: u8 [s1 + 0x9] = a0\n 47636: u8 [s1 + 0x8] = a1\n 47639: a1 = u64 [sp + 0x60]\n 47642: a0 = a1 >> 0x38\n 47645: u8 [s1 + 0x7] = a0\n 47648: a0 = a1 >> 0x30\n 47651: u8 [s1 + 0x6] = a0\n 47654: a0 = a1 >> 0x28\n 47657: u8 [s1 + 0x5] = a0\n 47660: a0 = a1 >> 0x20\n 47663: u8 [s1 + 0x4] = a0\n 47666: a0 = a1 >> 0x18\n 47669: u8 [s1 + 0x3] = a0\n 47672: a0 = a1 >> 0x10\n 47675: u8 [s1 + 0x2] = a0\n 47678: a0 = a1 >> 0x8\n 47681: u8 [s1 + 0x1] = a0\n 47684: u8 [s1] = a1\n 47686: a1 = u64 [sp + 0x70]\n 47689: u8 [s1 + 0x18] = a1\n 47692: a0 = a2 >> 0x38\n 47695: u8 [s1 + 0x17] = a0\n 47698: a0 = a2 >> 0x30\n 47701: u8 [s1 + 0x16] = a0\n 47704: a0 = a2 >> 0x28\n 47707: u8 [s1 + 0x15] = a0\n 47710: a0 = a2 >> 0x20\n 47713: u8 [s1 + 0x14] = a0\n 47716: a0 = a2 >> 0x18\n 47719: u8 [s1 + 0x13] = a0\n 47722: a0 = a2 >> 0x10\n 47725: u8 [s1 + 0x12] = a0\n 47728: a0 = a2 >> 0x8\n 47731: u8 [s1 + 0x11] = a0\n 47734: a0 = a1 >> 0x38\n 47737: u8 [s1 + 0x1f] = a0\n 47740: a0 = a1 >> 0x30\n 47743: u8 [s1 + 0x1e] = a0\n 47746: a0 = a1 >> 0x28\n 47749: u8 [s1 + 0x1d] = a0\n 47752: a0 = a1 >> 0x20\n 47755: u8 [s1 + 0x1c] = a0\n 47758: a0 = a1 >> 0x18\n 47761: u8 [s1 + 0x1b] = a0\n 47764: a0 = a1 >> 0x10\n 47767: u8 [s1 + 0x1a] = a0\n 47770: a0 = a1 >> 0x8\n 47773: a1 = 0xffffffe0\n 47783: a1 = t1 <u a1\n 47786: a1 = 0 if a5 != 0\n 47788: a2 = u64 [sp + 0x30]\n 47791: a1 = 0 if a2 != 0\n 47793: u8 [s1 + 0x19] = a0\n 47796: jump @1032 if a1 != 0\n      : @1031 (gas: 1)\n 47799: jump @1248\n      : @1032 (gas: 2)\n 47802: i32 a0 = t1 >> 0x5\n 47805: jump @1034 if a0 <u 2047\n      : @1033 (gas: 1)\n 47810: jump @1248\n      : @1034 (gas: 4)\n 47813: a0 = t1 + 0x5f\n 47816: a1 = u64 [sp + 0xb8]\n 47820: a1 = a1 & a0\n 47823: jump @1036 if a1 <=u 65536\n      : @1035 (gas: 1)\n 47829: jump @1248\n      : @1036 (gas: 3)\n 47832: i32 a5 = t1 + 0x20\n 47835: a0 = u64 [sp + 0xa0]\n 47839: jump @1038 if a0 >=u a1\n      : @1037 (gas: 4)\n 47842: a0 = u64 [sp + 0xb0]\n 47846: u32 [a0] = a1\n 47848: u64 [sp + 0xa0] = a1\n 47852: fallthrough\n      : @1038 (gas: 74)\n 47853: a0 = u64 [sp + 0xa8]\n 47857: a5 = a5 + a0\n 47860: a1 = u64 [sp + 0x40]\n 47863: u8 [a5 + 0x8] = a1\n 47866: a2 = u64 [sp + 0x38]\n 47869: a0 = a2 >> 0x38\n 47872: u8 [a5 + 0x7] = a0\n 47875: a0 = a2 >> 0x30\n 47878: u8 [a5 + 0x6] = a0\n 47881: a0 = a2 >> 0x28\n 47884: u8 [a5 + 0x5] = a0\n 47887: a0 = a2 >> 0x20\n 47890: u8 [a5 + 0x4] = a0\n 47893: a0 = a2 >> 0x18\n 47896: u8 [a5 + 0x3] = a0\n 47899: a0 = a2 >> 0x10\n 47902: u8 [a5 + 0x2] = a0\n 47905: a0 = a2 >> 0x8\n 47908: u8 [a5 + 0x1] = a0\n 47911: u8 [a5] = a2\n 47913: a2 = u64 [sp + 0x48]\n 47916: u8 [a5 + 0x10] = a2\n 47919: a0 = a1 >> 0x38\n 47922: u8 [a5 + 0xf] = a0\n 47925: a0 = a1 >> 0x30\n 47928: u8 [a5 + 0xe] = a0\n 47931: a0 = a1 >> 0x28\n 47934: u8 [a5 + 0xd] = a0\n 47937: a0 = a1 >> 0x20\n 47940: u8 [a5 + 0xc] = a0\n 47943: a0 = a1 >> 0x18\n 47946: u8 [a5 + 0xb] = a0\n 47949: a0 = a1 >> 0x10\n 47952: u8 [a5 + 0xa] = a0\n 47955: a0 = a1 >> 0x8\n 47958: u8 [a5 + 0x9] = a0\n 47961: a1 = u64 [sp + 0x50]\n 47964: u8 [a5 + 0x18] = a1\n 47967: a0 = a2 >> 0x38\n 47970: u8 [a5 + 0x17] = a0\n 47973: a0 = a2 >> 0x30\n 47976: u8 [a5 + 0x16] = a0\n 47979: a0 = a2 >> 0x28\n 47982: u8 [a5 + 0x15] = a0\n 47985: a0 = a2 >> 0x20\n 47988: u8 [a5 + 0x14] = a0\n 47991: a0 = a2 >> 0x18\n 47994: u8 [a5 + 0x13] = a0\n 47997: a0 = a2 >> 0x10\n 48000: u8 [a5 + 0x12] = a0\n 48003: a0 = a2 >> 0x8\n 48006: u8 [a5 + 0x11] = a0\n 48009: a0 = a1 >> 0x38\n 48012: u8 [a5 + 0x1f] = a0\n 48015: a0 = a1 >> 0x30\n 48018: u8 [a5 + 0x1e] = a0\n 48021: a0 = a1 >> 0x28\n 48024: u8 [a5 + 0x1d] = a0\n 48027: a0 = a1 >> 0x20\n 48030: u8 [a5 + 0x1c] = a0\n 48033: a0 = a1 >> 0x18\n 48036: u8 [a5 + 0x1b] = a0\n 48039: a0 = a1 >> 0x10\n 48042: u8 [a5 + 0x1a] = a0\n 48045: a0 = a1 >> 0x8\n 48048: a1 = 0xffffffc0\n 48058: a3 = u64 [sp + 0x98]\n 48062: a1 = a3 <u a1\n 48065: a2 = u64 [sp + 0x90]\n 48069: a1 = 0 if a2 != 0\n 48071: a2 = u64 [sp + 0x88]\n 48075: a1 = 0 if a2 != 0\n 48077: u8 [a5 + 0x19] = a0\n 48080: jump @1040 if a1 != 0\n      : @1039 (gas: 1)\n 48083: jump @1248\n      : @1040 (gas: 2)\n 48086: i32 a0 = a3 >> 0x6\n 48089: jump @1042 if a0 <u 1023\n      : @1041 (gas: 1)\n 48094: jump @1248\n      : @1042 (gas: 4)\n 48097: a0 = a3 + 0x7f\n 48100: a1 = u64 [sp + 0xb8]\n 48104: a0 = a0 & a1\n 48107: jump @1044 if a0 <=u 65536\n      : @1043 (gas: 1)\n 48113: jump @1248\n      : @1044 (gas: 3)\n 48116: i32 a1 = a3 + 0x40\n 48119: a2 = u64 [sp + 0xa0]\n 48123: jump @1046 if a2 >=u a0\n      : @1045 (gas: 4)\n 48126: a2 = u64 [sp + 0xb0]\n 48130: u32 [a2] = a0\n 48132: u64 [sp + 0xa0] = a0\n 48136: fallthrough\n      : @1046 (gas: 82)\n 48137: ra = u64 [sp + 0xa8]\n 48141: a0 = ra + a1\n 48144: a2 = u64 [sp + 0x18]\n 48147: u8 [a0 + 0x8] = a2\n 48150: a1 = t2 >> 0x38\n 48153: u8 [a0 + 0x7] = a1\n 48156: a1 = t2 >> 0x30\n 48159: u8 [a0 + 0x6] = a1\n 48162: a1 = t2 >> 0x28\n 48165: u8 [a0 + 0x5] = a1\n 48168: a1 = t2 >> 0x20\n 48171: u8 [a0 + 0x4] = a1\n 48174: a1 = t2 >> 0x18\n 48177: u8 [a0 + 0x3] = a1\n 48180: a1 = t2 >> 0x10\n 48183: u8 [a0 + 0x2] = a1\n 48186: a1 = t2 >> 0x8\n 48189: u8 [a0 + 0x1] = a1\n 48192: u8 [a0] = t2\n 48194: a3 = u64 [sp + 0x20]\n 48197: u8 [a0 + 0x10] = a3\n 48200: a1 = a2 >> 0x38\n 48203: u8 [a0 + 0xf] = a1\n 48206: a1 = a2 >> 0x30\n 48209: u8 [a0 + 0xe] = a1\n 48212: a1 = a2 >> 0x28\n 48215: u8 [a0 + 0xd] = a1\n 48218: a1 = a2 >> 0x20\n 48221: u8 [a0 + 0xc] = a1\n 48224: a1 = a2 >> 0x18\n 48227: u8 [a0 + 0xb] = a1\n 48230: a1 = a2 >> 0x10\n 48233: u8 [a0 + 0xa] = a1\n 48236: a1 = a2 >> 0x8\n 48239: u8 [a0 + 0x9] = a1\n 48242: a2 = u64 [sp + 0x28]\n 48245: u8 [a0 + 0x18] = a2\n 48248: a1 = a3 >> 0x38\n 48251: u8 [a0 + 0x17] = a1\n 48254: a1 = a3 >> 0x30\n 48257: u8 [a0 + 0x16] = a1\n 48260: a1 = a3 >> 0x28\n 48263: u8 [a0 + 0x15] = a1\n 48266: a1 = a3 >> 0x20\n 48269: u8 [a0 + 0x14] = a1\n 48272: a1 = a3 >> 0x18\n 48275: u8 [a0 + 0x13] = a1\n 48278: a1 = a3 >> 0x10\n 48281: u8 [a0 + 0x12] = a1\n 48284: a1 = a3 >> 0x8\n 48287: u8 [a0 + 0x11] = a1\n 48290: a1 = a2 >> 0x38\n 48293: u8 [a0 + 0x1f] = a1\n 48296: a1 = a2 >> 0x30\n 48299: u8 [a0 + 0x1e] = a1\n 48302: a1 = a2 >> 0x28\n 48305: u8 [a0 + 0x1d] = a1\n 48308: a1 = a2 >> 0x20\n 48311: u8 [a0 + 0x1c] = a1\n 48314: a1 = a2 >> 0x18\n 48317: u8 [a0 + 0x1b] = a1\n 48320: a1 = a2 >> 0x10\n 48323: u8 [a0 + 0x1a] = a1\n 48326: a1 = a2 >> 0x8\n 48329: u8 [a0 + 0x19] = a1\n 48332: a1 = u64 [ra + 0x50]\n 48335: a0 = u64 [ra + 0x58]\n 48338: a2 = u64 [ra + 0x40]\n 48341: a3 = u64 [ra + 0x48]\n 48344: u64 [sp + 0x68] = a1\n 48347: t1 = reverse a1\n 48349: u64 [sp + 0x70] = a0\n 48352: a0 = reverse a0\n 48354: u64 [sp + 0x60] = a2\n 48357: a4 = reverse a2\n 48359: u64 [sp + 0x58] = a3\n 48362: a3 = reverse a3\n 48364: t0 = a3 | a4\n 48367: a5 = a0 <u 0xffffffffffffffc0\n 48370: a5 = 0 if t1 != 0\n 48372: a5 = 0 if t0 != 0\n 48374: jump @1048 if a5 != 0\n      : @1047 (gas: 1)\n 48377: jump @1249\n      : @1048 (gas: 25)\n 48380: a5 = a0 + 0x40\n 48383: s1 = a5 <u a0\n 48386: a1 = t1 + s1\n 48389: a2 = a1 <u t1\n 48392: a2 = s1 if s1 == 0\n 48395: a2 = a2 + a3\n 48398: s1 = a2 <u a3\n 48401: s1 = s1 + a4\n 48404: s1 = reverse s1\n 48406: a2 = reverse a2\n 48408: a1 = reverse a1\n 48410: a5 = reverse a5\n 48412: u64 [ra + 0x58] = a5\n 48415: u64 [ra + 0x50] = a1\n 48418: u64 [ra + 0x48] = a2\n 48421: a1 = a0 | a3\n 48424: a2 = t1 | a4\n 48427: a1 = a1 | a2\n 48430: a1 = a1 >> 0x20\n 48433: a2 = a2 | a3\n 48436: a2 = a2 << 0x20\n 48439: a1 = a1 | a2\n 48442: u64 [ra + 0x40] = s1\n 48445: t2 = u64 [sp + 0xa0]\n 48449: jump @1050 if a1 == 0\n      : @1049 (gas: 1)\n 48452: jump @1248\n      : @1050 (gas: 2)\n 48455: i32 a1 = a0 >> 0x10\n 48458: jump @1052 if a1 == 0\n      : @1051 (gas: 1)\n 48461: jump @1248\n      : @1052 (gas: 4)\n 48464: a1 = a0 + 0x3f\n 48467: a3 = u64 [sp + 0xb8]\n 48471: a3 = a3 & a1\n 48474: jump @1054 if a3 <=u 65536\n      : @1053 (gas: 1)\n 48480: jump @1248\n      : @1054 (gas: 1)\n 48483: jump @1056 if t2 >=u a3\n      : @1055 (gas: 4)\n 48486: a1 = u64 [sp + 0xb0]\n 48490: u32 [a1] = a3\n 48492: t2 = a3\n 48494: fallthrough\n      : @1056 (gas: 39)\n 48495: i32 a3 = a0 + 0\n 48497: a3 = a3 + ra\n 48500: u8 [a3 + 31] = 0xac\n 48505: u8 [a3 + 30] = 0x21\n 48509: u8 [a3 + 29] = 0x73\n 48513: u8 [a3 + 28] = 0x33\n 48517: u8 [a3 + 27] = 0xa7\n 48522: u8 [a3 + 26] = 0x1f\n 48526: u8 [a3 + 25] = 0xd8\n 48531: u8 [a3 + 24] = 0xad\n 48536: u8 [a3 + 23] = 0x41\n 48540: u8 [a3 + 22] = 0x10\n 48544: u8 [a3 + 21] = 0x38\n 48548: u8 [a3 + 20] = 0xc7\n 48553: u8 [a3 + 19] = 0x43\n 48557: u8 [a3 + 18] = 0xf7\n 48562: u8 [a3 + 17] = 0xf8\n 48567: u8 [a3 + 16] = 0xfd\n 48572: u8 [a3 + 15] = 0xd3\n 48577: u8 [a3 + 14] = 0xfd\n 48582: u8 [a3 + 13] = 0xc4\n 48587: u8 [a3 + 12] = 0xab\n 48592: u8 [a3 + 11] = 0x20\n 48596: u8 [a3 + 10] = 0x4f\n 48600: u8 [a3 + 9] = 0x2c\n 48604: u8 [a3 + 8] = 0x66\n 48608: u8 [a3 + 7] = 0x2d\n 48612: u8 [a3 + 6] = 0x57\n 48616: u8 [a3 + 5] = 0xb4\n 48621: u8 [a3 + 4] = 0xde\n 48626: u8 [a3 + 3] = 0x22\n 48630: u8 [a3 + 2] = 0x2\n 48634: u8 [a3 + 1] = 0xb6\n 48639: a2 = 0xffffffe0\n 48649: a2 = a0 <u a2\n 48652: a2 = 0 if t1 != 0\n 48654: a2 = 0 if t0 != 0\n 48656: u8 [a3 + 0] = 0x1d\n 48659: jump @1058 if a2 != 0\n      : @1057 (gas: 1)\n 48662: jump @1248\n      : @1058 (gas: 2)\n 48665: i32 a1 = a0 >> 0x5\n 48668: jump @1060 if a1 <u 2047\n      : @1059 (gas: 1)\n 48673: jump @1248\n      : @1060 (gas: 4)\n 48676: a1 = a0 + 0x5f\n 48679: a2 = u64 [sp + 0xb8]\n 48683: a1 = a1 & a2\n 48686: jump @1062 if a1 <=u 65536\n      : @1061 (gas: 1)\n 48692: jump @1248\n      : @1062 (gas: 2)\n 48695: i32 a0 = a0 + 0x20\n 48698: jump @1064 if t2 >=u a1\n      : @1063 (gas: 4)\n 48701: a2 = u64 [sp + 0xb0]\n 48705: u32 [a2] = a1\n 48707: t2 = a1\n 48709: fallthrough\n      : @1064 (gas: 50)\n 48710: a0 = a0 + ra\n 48713: u8 [a0 + 31] = 0x6a\n 48717: u8 [a0 + 30] = 0x3\n 48721: u8 [a0 + 29] = 0xc\n 48725: u8 [a0 + 28] = 0x4e\n 48729: u8 [a0 + 27] = 0x27\n 48733: u8 [a0 + 26] = 0xc5\n 48738: u8 [a0 + 25] = 0x1\n 48742: u8 [a0 + 24] = 0x27\n 48746: u8 [a0 + 23] = 0x68\n 48750: u8 [a0 + 22] = 0x7d\n 48754: u8 [a0 + 21] = 0x41\n 48758: u8 [a0 + 20] = 0xe\n 48762: u8 [a0 + 19] = 0x33\n 48766: u8 [a0 + 18] = 0x35\n 48770: u8 [a0 + 17] = 0x34\n 48774: u8 [a0 + 16] = 0x55\n 48778: u8 [a0 + 15] = 0x2c\n 48782: u8 [a0 + 14] = 0xf7\n 48787: u8 [a0 + 13] = 0x98\n 48792: u8 [a0 + 12] = 0x4b\n 48796: u8 [a0 + 11] = 0x4d\n 48800: u8 [a0 + 10] = 0x88\n 48805: u8 [a0 + 9] = 0xb1\n 48810: u8 [a0 + 8] = 0x36\n 48814: u8 [a0 + 7] = 0x3f\n 48818: u8 [a0 + 6] = 0xc0\n 48823: u8 [a0 + 5] = 0xad\n 48828: u8 [a0 + 4] = 0x97\n 48833: u8 [a0 + 3] = 0xc0\n 48838: u8 [a0 + 2] = 0xb5\n 48843: u8 [a0 + 1] = 0x1f\n 48847: u8 [a0 + 0] = 0x26\n 48850: a1 = u64 [ra + 0x50]\n 48853: a0 = u64 [ra + 0x58]\n 48856: a3 = u64 [ra + 0x40]\n 48859: a2 = u64 [ra + 0x48]\n 48862: u64 [sp + 0x48] = a1\n 48865: t1 = reverse a1\n 48867: u64 [sp + 0x50] = a0\n 48870: a4 = reverse a0\n 48872: u64 [sp + 0x38] = a3\n 48875: a1 = reverse a3\n 48877: u64 [sp + 0x40] = a2\n 48880: s1 = reverse a2\n 48882: t0 = s1 | a1\n 48885: a0 = a4 <u 0xffffffffffffffc0\n 48888: a0 = 0 if t1 != 0\n 48890: a0 = 0 if t0 != 0\n 48892: jump @1066 if a0 != 0\n      : @1065 (gas: 1)\n 48895: jump @1249\n      : @1066 (gas: 24)\n 48898: a0 = a4 + 0x40\n 48901: a2 = a0 <u a4\n 48904: a5 = t1 + a2\n 48907: a3 = a5 <u t1\n 48910: a3 = a2 if a2 == 0\n 48913: a3 = a3 + s1\n 48916: a2 = a3 <u s1\n 48919: a2 = a2 + a1\n 48922: a2 = reverse a2\n 48924: a3 = reverse a3\n 48926: a5 = reverse a5\n 48928: a0 = reverse a0\n 48930: u64 [ra + 0x58] = a0\n 48933: u64 [ra + 0x50] = a5\n 48936: u64 [ra + 0x48] = a3\n 48939: a0 = a4 | s1\n 48942: a1 = t1 | a1\n 48945: a0 = a0 | a1\n 48948: a0 = a0 >> 0x20\n 48951: a1 = a1 | s1\n 48954: a1 = a1 << 0x20\n 48957: a0 = a0 | a1\n 48960: u64 [ra + 0x40] = a2\n 48963: jump @1068 if a0 == 0\n      : @1067 (gas: 1)\n 48966: jump @1248\n      : @1068 (gas: 2)\n 48969: i32 a0 = a4 >> 0x10\n 48972: jump @1070 if a0 == 0\n      : @1069 (gas: 1)\n 48975: jump @1248\n      : @1070 (gas: 4)\n 48978: a0 = a4 + 0x3f\n 48981: a1 = u64 [sp + 0xb8]\n 48985: a1 = a1 & a0\n 48988: jump @1072 if a1 <=u 65536\n      : @1071 (gas: 1)\n 48994: jump @1248\n      : @1072 (gas: 1)\n 48997: jump @1074 if t2 >=u a1\n      : @1073 (gas: 4)\n 49000: a0 = u64 [sp + 0xb0]\n 49004: u32 [a0] = a1\n 49006: t2 = a1\n 49008: fallthrough\n      : @1074 (gas: 39)\n 49009: i32 s1 = a4 + 0\n 49011: s1 = s1 + ra\n 49014: u8 [s1 + 31] = 0xf0\n 49019: u8 [s1 + 30] = 0xbf\n 49024: u8 [s1 + 29] = 0x24\n 49028: u8 [s1 + 28] = 0x21\n 49032: u8 [s1 + 27] = 0x7f\n 49036: u8 [s1 + 26] = 0xad\n 49041: u8 [s1 + 25] = 0x5c\n 49045: u8 [s1 + 24] = 0x5\n 49049: u8 [s1 + 23] = 0x76\n 49053: u8 [s1 + 22] = 0xdc\n 49058: u8 [s1 + 21] = 0x20\n 49062: u8 [s1 + 20] = 0xc8\n 49067: u8 [s1 + 19] = 0x39\n 49071: u8 [s1 + 18] = 0x95\n 49076: u8 [s1 + 17] = 0xb0\n 49081: u8 [s1 + 16] = 0x3e\n 49085: u8 [s1 + 15] = 0xe0\n 49090: u8 [s1 + 14] = 0xcd\n 49095: u8 [s1 + 13] = 0xc3\n 49100: u8 [s1 + 12] = 0x6e\n 49104: u8 [s1 + 11] = 0x9\n 49108: u8 [s1 + 10] = 0xd2\n 49113: u8 [s1 + 9] = 0xd5\n 49118: u8 [s1 + 8] = 0xd2\n 49123: u8 [s1 + 7] = 0x73\n 49127: u8 [s1 + 6] = 0x13\n 49131: u8 [s1 + 5] = 0x63\n 49135: u8 [s1 + 4] = 0x94\n 49140: u8 [s1 + 3] = 0x1a\n 49144: u8 [s1 + 2] = 0xf1\n 49149: u8 [s1 + 1] = 0xe1\n 49154: a1 = 0xffffffe0\n 49164: a1 = a4 <u a1\n 49167: a1 = 0 if t1 != 0\n 49169: a1 = 0 if t0 != 0\n 49171: u8 [s1 + 0] = 0x26\n 49174: jump @1076 if a1 != 0\n      : @1075 (gas: 1)\n 49177: jump @1248\n      : @1076 (gas: 2)\n 49180: i32 a0 = a4 >> 0x5\n 49183: jump @1078 if a0 <u 2047\n      : @1077 (gas: 1)\n 49188: jump @1248\n      : @1078 (gas: 4)\n 49191: a0 = a4 + 0x5f\n 49194: a1 = u64 [sp + 0xb8]\n 49198: a1 = a1 & a0\n 49201: jump @1080 if a1 <=u 65536\n      : @1079 (gas: 1)\n 49207: jump @1248\n      : @1080 (gas: 2)\n 49210: i32 a4 = a4 + 0x20\n 49213: jump @1082 if t2 >=u a1\n      : @1081 (gas: 4)\n 49216: a0 = u64 [sp + 0xb0]\n 49220: u32 [a0] = a1\n 49222: t2 = a1\n 49224: fallthrough\n      : @1082 (gas: 50)\n 49225: u64 [sp + 0xa0] = t2\n 49229: a4 = a4 + ra\n 49232: u8 [a4 + 31] = 0xcf\n 49237: u8 [a4 + 30] = 0x17\n 49241: u8 [a4 + 29] = 0xa5\n 49246: u8 [a4 + 28] = 0xb6\n 49251: u8 [a4 + 27] = 0xf9\n 49256: u8 [a4 + 26] = 0x32\n 49260: u8 [a4 + 25] = 0x31\n 49264: u8 [a4 + 24] = 0xfe\n 49269: u8 [a4 + 23] = 0x3e\n 49273: u8 [a4 + 22] = 0x55\n 49277: u8 [a4 + 21] = 0xcd\n 49282: u8 [a4 + 20] = 0x3b\n 49286: u8 [a4 + 19] = 0x92\n 49291: u8 [a4 + 18] = 0x22\n 49295: u8 [a4 + 17] = 0xc6\n 49300: u8 [a4 + 16] = 0xf9\n 49305: u8 [a4 + 15] = 0x62\n 49309: u8 [a4 + 14] = 0x3a\n 49313: u8 [a4 + 13] = 0xe2\n 49318: u8 [a4 + 12] = 0x21\n 49322: u8 [a4 + 11] = 0xc6\n 49327: u8 [a4 + 10] = 0x42\n 49331: u8 [a4 + 9] = 0x67\n 49335: u8 [a4 + 8] = 0x6c\n 49339: u8 [a4 + 7] = 0x78\n 49343: u8 [a4 + 6] = 0xf\n 49347: u8 [a4 + 5] = 0xbe\n 49352: u8 [a4 + 4] = 0xb9\n 49357: u8 [a4 + 3] = 0xa5\n 49362: u8 [a4 + 2] = 0x92\n 49367: u8 [a4 + 1] = 0x53\n 49371: u8 [a4 + 0] = 0x24\n 49374: a1 = u64 [ra + 0x50]\n 49377: a0 = u64 [ra + 0x58]\n 49380: a5 = u64 [ra + 0x40]\n 49383: t2 = u64 [ra + 0x48]\n 49386: u64 [sp + 0x20] = a1\n 49389: t1 = reverse a1\n 49391: u64 [sp + 0x28] = a0\n 49394: t0 = reverse a0\n 49396: a1 = reverse a5\n 49398: s1 = reverse t2\n 49400: a2 = s1 | a1\n 49403: a0 = t0 <u 0xffffffffffffffc0\n 49406: a0 = 0 if t1 != 0\n 49408: u64 [sp + 0x30] = a2\n 49411: a0 = 0 if a2 != 0\n 49413: jump @1084 if a0 != 0\n      : @1083 (gas: 1)\n 49416: jump @1249\n      : @1084 (gas: 24)\n 49419: a0 = t0 + 0x40\n 49422: a2 = a0 <u t0\n 49425: a3 = t1 + a2\n 49428: a4 = a3 <u t1\n 49431: a4 = a2 if a2 == 0\n 49434: a4 = a4 + s1\n 49437: a2 = a4 <u s1\n 49440: a2 = a2 + a1\n 49443: a2 = reverse a2\n 49445: a4 = reverse a4\n 49447: a3 = reverse a3\n 49449: a0 = reverse a0\n 49451: u64 [ra + 0x58] = a0\n 49454: u64 [ra + 0x50] = a3\n 49457: u64 [ra + 0x48] = a4\n 49460: a0 = t0 | s1\n 49463: a1 = t1 | a1\n 49466: a0 = a0 | a1\n 49469: a0 = a0 >> 0x20\n 49472: a1 = a1 | s1\n 49475: a1 = a1 << 0x20\n 49478: a0 = a0 | a1\n 49481: u64 [ra + 0x40] = a2\n 49484: jump @1086 if a0 == 0\n      : @1085 (gas: 1)\n 49487: jump @1248\n      : @1086 (gas: 2)\n 49490: i32 a0 = t0 >> 0x10\n 49493: jump @1088 if a0 == 0\n      : @1087 (gas: 1)\n 49496: jump @1248\n      : @1088 (gas: 4)\n 49499: a0 = t0 + 0x3f\n 49502: a1 = u64 [sp + 0xb8]\n 49506: a1 = a1 & a0\n 49509: jump @1090 if a1 <=u 65536\n      : @1089 (gas: 1)\n 49515: jump @1248\n      : @1090 (gas: 2)\n 49518: a0 = u64 [sp + 0xa0]\n 49522: jump @1092 if a0 >=u a1\n      : @1091 (gas: 4)\n 49525: a0 = u64 [sp + 0xb0]\n 49529: u32 [a0] = a1\n 49531: u64 [sp + 0xa0] = a1\n 49535: fallthrough\n      : @1092 (gas: 73)\n 49536: i32 s1 = t0 + 0\n 49538: a0 = u64 [sp + 0xa8]\n 49542: s1 = s1 + a0\n 49545: a2 = u64 [sp + 0x68]\n 49548: u8 [s1 + 0x10] = a2\n 49551: a1 = u64 [sp + 0x58]\n 49554: a0 = a1 >> 0x38\n 49557: u8 [s1 + 0xf] = a0\n 49560: a0 = a1 >> 0x30\n 49563: u8 [s1 + 0xe] = a0\n 49566: a0 = a1 >> 0x28\n 49569: u8 [s1 + 0xd] = a0\n 49572: a0 = a1 >> 0x20\n 49575: u8 [s1 + 0xc] = a0\n 49578: a0 = a1 >> 0x18\n 49581: u8 [s1 + 0xb] = a0\n 49584: a0 = a1 >> 0x10\n 49587: u8 [s1 + 0xa] = a0\n 49590: a0 = a1 >> 0x8\n 49593: u8 [s1 + 0x9] = a0\n 49596: u8 [s1 + 0x8] = a1\n 49599: a1 = u64 [sp + 0x60]\n 49602: a0 = a1 >> 0x38\n 49605: u8 [s1 + 0x7] = a0\n 49608: a0 = a1 >> 0x30\n 49611: u8 [s1 + 0x6] = a0\n 49614: a0 = a1 >> 0x28\n 49617: u8 [s1 + 0x5] = a0\n 49620: a0 = a1 >> 0x20\n 49623: u8 [s1 + 0x4] = a0\n 49626: a0 = a1 >> 0x18\n 49629: u8 [s1 + 0x3] = a0\n 49632: a0 = a1 >> 0x10\n 49635: u8 [s1 + 0x2] = a0\n 49638: a0 = a1 >> 0x8\n 49641: u8 [s1 + 0x1] = a0\n 49644: u8 [s1] = a1\n 49646: a1 = u64 [sp + 0x70]\n 49649: u8 [s1 + 0x18] = a1\n 49652: a0 = a2 >> 0x38\n 49655: u8 [s1 + 0x17] = a0\n 49658: a0 = a2 >> 0x30\n 49661: u8 [s1 + 0x16] = a0\n 49664: a0 = a2 >> 0x28\n 49667: u8 [s1 + 0x15] = a0\n 49670: a0 = a2 >> 0x20\n 49673: u8 [s1 + 0x14] = a0\n 49676: a0 = a2 >> 0x18\n 49679: u8 [s1 + 0x13] = a0\n 49682: a0 = a2 >> 0x10\n 49685: u8 [s1 + 0x12] = a0\n 49688: a0 = a2 >> 0x8\n 49691: u8 [s1 + 0x11] = a0\n 49694: a0 = a1 >> 0x38\n 49697: u8 [s1 + 0x1f] = a0\n 49700: a0 = a1 >> 0x30\n 49703: u8 [s1 + 0x1e] = a0\n 49706: a0 = a1 >> 0x28\n 49709: u8 [s1 + 0x1d] = a0\n 49712: a0 = a1 >> 0x20\n 49715: u8 [s1 + 0x1c] = a0\n 49718: a0 = a1 >> 0x18\n 49721: u8 [s1 + 0x1b] = a0\n 49724: a0 = a1 >> 0x10\n 49727: u8 [s1 + 0x1a] = a0\n 49730: a0 = a1 >> 0x8\n 49733: a1 = 0xffffffe0\n 49743: a1 = t0 <u a1\n 49746: a1 = 0 if t1 != 0\n 49748: a2 = u64 [sp + 0x30]\n 49751: a1 = 0 if a2 != 0\n 49753: u8 [s1 + 0x19] = a0\n 49756: jump @1094 if a1 != 0\n      : @1093 (gas: 1)\n 49759: jump @1248\n      : @1094 (gas: 3)\n 49762: i32 a0 = t0 >> 0x5\n 49765: a3 = u64 [sp + 0x98]\n 49769: jump @1096 if a0 <u 2047\n      : @1095 (gas: 1)\n 49774: jump @1248\n      : @1096 (gas: 4)\n 49777: a0 = t0 + 0x5f\n 49780: a1 = u64 [sp + 0xb8]\n 49784: a1 = a1 & a0\n 49787: jump @1098 if a1 <=u 65536\n      : @1097 (gas: 1)\n 49793: jump @1248\n      : @1098 (gas: 3)\n 49796: i32 s1 = t0 + 0x20\n 49799: a0 = u64 [sp + 0xa0]\n 49803: jump @1100 if a0 >=u a1\n      : @1099 (gas: 4)\n 49806: a0 = u64 [sp + 0xb0]\n 49810: u32 [a0] = a1\n 49812: u64 [sp + 0xa0] = a1\n 49816: fallthrough\n      : @1100 (gas: 73)\n 49817: a0 = u64 [sp + 0xa8]\n 49821: s1 = s1 + a0\n 49824: a1 = u64 [sp + 0x40]\n 49827: u8 [s1 + 0x8] = a1\n 49830: a2 = u64 [sp + 0x38]\n 49833: a0 = a2 >> 0x38\n 49836: u8 [s1 + 0x7] = a0\n 49839: a0 = a2 >> 0x30\n 49842: u8 [s1 + 0x6] = a0\n 49845: a0 = a2 >> 0x28\n 49848: u8 [s1 + 0x5] = a0\n 49851: a0 = a2 >> 0x20\n 49854: u8 [s1 + 0x4] = a0\n 49857: a0 = a2 >> 0x18\n 49860: u8 [s1 + 0x3] = a0\n 49863: a0 = a2 >> 0x10\n 49866: u8 [s1 + 0x2] = a0\n 49869: a0 = a2 >> 0x8\n 49872: u8 [s1 + 0x1] = a0\n 49875: u8 [s1] = a2\n 49877: a2 = u64 [sp + 0x48]\n 49880: u8 [s1 + 0x10] = a2\n 49883: a0 = a1 >> 0x38\n 49886: u8 [s1 + 0xf] = a0\n 49889: a0 = a1 >> 0x30\n 49892: u8 [s1 + 0xe] = a0\n 49895: a0 = a1 >> 0x28\n 49898: u8 [s1 + 0xd] = a0\n 49901: a0 = a1 >> 0x20\n 49904: u8 [s1 + 0xc] = a0\n 49907: a0 = a1 >> 0x18\n 49910: u8 [s1 + 0xb] = a0\n 49913: a0 = a1 >> 0x10\n 49916: u8 [s1 + 0xa] = a0\n 49919: a0 = a1 >> 0x8\n 49922: u8 [s1 + 0x9] = a0\n 49925: a1 = u64 [sp + 0x50]\n 49928: u8 [s1 + 0x18] = a1\n 49931: a0 = a2 >> 0x38\n 49934: u8 [s1 + 0x17] = a0\n 49937: a0 = a2 >> 0x30\n 49940: u8 [s1 + 0x16] = a0\n 49943: a0 = a2 >> 0x28\n 49946: u8 [s1 + 0x15] = a0\n 49949: a0 = a2 >> 0x20\n 49952: u8 [s1 + 0x14] = a0\n 49955: a0 = a2 >> 0x18\n 49958: u8 [s1 + 0x13] = a0\n 49961: a0 = a2 >> 0x10\n 49964: u8 [s1 + 0x12] = a0\n 49967: a0 = a2 >> 0x8\n 49970: u8 [s1 + 0x11] = a0\n 49973: a0 = a1 >> 0x38\n 49976: u8 [s1 + 0x1f] = a0\n 49979: a0 = a1 >> 0x30\n 49982: u8 [s1 + 0x1e] = a0\n 49985: a0 = a1 >> 0x28\n 49988: u8 [s1 + 0x1d] = a0\n 49991: a0 = a1 >> 0x20\n 49994: u8 [s1 + 0x1c] = a0\n 49997: a0 = a1 >> 0x18\n 50000: u8 [s1 + 0x1b] = a0\n 50003: a0 = a1 >> 0x10\n 50006: u8 [s1 + 0x1a] = a0\n 50009: a0 = a1 >> 0x8\n 50012: a1 = 0xffffffa0\n 50022: a1 = a3 <u a1\n 50025: a2 = u64 [sp + 0x90]\n 50029: a1 = 0 if a2 != 0\n 50031: a2 = u64 [sp + 0x88]\n 50035: a1 = 0 if a2 != 0\n 50037: u8 [s1 + 0x19] = a0\n 50040: jump @1102 if a1 != 0\n      : @1101 (gas: 1)\n 50043: jump @1248\n      : @1102 (gas: 2)\n 50046: a1 = u64 [sp + 0x10]\n 50049: jump @1104 if a1 <u 2045\n      : @1103 (gas: 1)\n 50054: jump @1248\n      : @1104 (gas: 4)\n 50057: a0 = a3 + 0x9f\n 50061: a1 = u64 [sp + 0xb8]\n 50065: a0 = a0 & a1\n 50068: jump @1106 if a0 <=u 65536\n      : @1105 (gas: 1)\n 50074: jump @1248\n      : @1106 (gas: 3)\n 50077: i32 a1 = a3 + 0x60\n 50080: a2 = u64 [sp + 0xa0]\n 50084: jump @1108 if a2 >=u a0\n      : @1107 (gas: 3)\n 50087: a2 = u64 [sp + 0xb0]\n 50091: u32 [a2] = a0\n 50093: fallthrough\n      : @1108 (gas: 66)\n 50094: a0 = u64 [sp + 0xa8]\n 50098: a0 = a0 + a1\n 50101: u8 [a0 + 0x8] = t2\n 50104: a1 = a5 >> 0x38\n 50107: u8 [a0 + 0x7] = a1\n 50110: a1 = a5 >> 0x30\n 50113: u8 [a0 + 0x6] = a1\n 50116: a1 = a5 >> 0x28\n 50119: u8 [a0 + 0x5] = a1\n 50122: a1 = a5 >> 0x20\n 50125: u8 [a0 + 0x4] = a1\n 50128: a1 = a5 >> 0x18\n 50131: u8 [a0 + 0x3] = a1\n 50134: a1 = a5 >> 0x10\n 50137: u8 [a0 + 0x2] = a1\n 50140: a1 = a5 >> 0x8\n 50143: u8 [a0 + 0x1] = a1\n 50146: u8 [a0] = a5\n 50148: a5 = u64 [sp + 0x20]\n 50151: u8 [a0 + 0x10] = a5\n 50154: a1 = t2 >> 0x38\n 50157: u8 [a0 + 0xf] = a1\n 50160: a1 = t2 >> 0x30\n 50163: u8 [a0 + 0xe] = a1\n 50166: a1 = t2 >> 0x28\n 50169: u8 [a0 + 0xd] = a1\n 50172: a1 = t2 >> 0x20\n 50175: u8 [a0 + 0xc] = a1\n 50178: a1 = t2 >> 0x18\n 50181: u8 [a0 + 0xb] = a1\n 50184: a1 = t2 >> 0x10\n 50187: u8 [a0 + 0xa] = a1\n 50190: a1 = t2 >> 0x8\n 50193: u8 [a0 + 0x9] = a1\n 50196: a2 = u64 [sp + 0x28]\n 50199: u8 [a0 + 0x18] = a2\n 50202: a1 = a5 >> 0x38\n 50205: u8 [a0 + 0x17] = a1\n 50208: a1 = a5 >> 0x30\n 50211: u8 [a0 + 0x16] = a1\n 50214: a1 = a5 >> 0x28\n 50217: u8 [a0 + 0x15] = a1\n 50220: a1 = a5 >> 0x20\n 50223: u8 [a0 + 0x14] = a1\n 50226: a1 = a5 >> 0x18\n 50229: u8 [a0 + 0x13] = a1\n 50232: a1 = a5 >> 0x10\n 50235: u8 [a0 + 0x12] = a1\n 50238: a5 = a5 >> 0x8\n 50241: u8 [a0 + 0x11] = a5\n 50244: a1 = a2 >> 0x38\n 50247: u8 [a0 + 0x1f] = a1\n 50250: a1 = a2 >> 0x30\n 50253: u8 [a0 + 0x1e] = a1\n 50256: a1 = a2 >> 0x28\n 50259: u8 [a0 + 0x1d] = a1\n 50262: a1 = a2 >> 0x20\n 50265: u8 [a0 + 0x1c] = a1\n 50268: a1 = a2 >> 0x18\n 50271: u8 [a0 + 0x1b] = a1\n 50274: a1 = a2 >> 0x10\n 50277: u8 [a0 + 0x1a] = a1\n 50280: a1 = a2 >> 0x8\n 50283: u8 [a0 + 0x19] = a1\n 50286: a0 = sp + 0xc0\n 50290: ra = 128, jump @864\n      : @1109 [@dyn 64] (gas: 8)\n 50296: a0 = 0xffffff80\n 50306: a5 = u64 [sp + 0x98]\n 50310: a0 = a5 <u a0\n 50313: a1 = u64 [sp + 0x90]\n 50317: a0 = 0 if a1 != 0\n 50319: a1 = u64 [sp + 0x88]\n 50323: a0 = 0 if a1 != 0\n 50325: jump @1111 if a0 != 0\n      : @1110 (gas: 1)\n 50328: jump @1248\n      : @1111 (gas: 2)\n 50331: i32 a0 = a5 >> 0x7\n 50334: jump @1113 if a0 <u 511\n      : @1112 (gas: 1)\n 50339: jump @1248\n      : @1113 (gas: 4)\n 50342: a0 = a5 + 0xbf\n 50346: a1 = u64 [sp + 0xb8]\n 50350: s1 = a0 & a1\n 50353: jump @1115 if s1 <=u 65536\n      : @1114 (gas: 1)\n 50359: jump @1248\n      : @1115 (gas: 9)\n 50362: a0 = u64 [sp + 0xd8]\n 50366: a2 = u64 [sp + 0xd0]\n 50370: a3 = u64 [sp + 0xc8]\n 50374: a1 = u64 [sp + 0xb0]\n 50378: t1 = i32 [a1]\n 50380: a4 = u64 [sp + 0xc0]\n 50384: i32 a1 = a5 + 0x80\n 50388: ra = u64 [sp + 0xa8]\n 50392: jump @1117 if t1 >=u s1\n      : @1116 (gas: 4)\n 50395: a5 = u64 [sp + 0xb0]\n 50399: u32 [a5] = s1\n 50401: t1 = s1\n 50403: fallthrough\n      : @1117 (gas: 67)\n 50404: u64 [sp + 0x88] = s1\n 50408: t0 = ra + a1\n 50411: a0 = reverse a0\n 50413: a2 = reverse a2\n 50415: a3 = reverse a3\n 50417: a4 = reverse a4\n 50419: u8 [t0 + 0x18] = a4\n 50422: a5 = a4 >> 0x38\n 50425: u8 [t0 + 0x1f] = a5\n 50428: a5 = a4 >> 0x30\n 50431: u8 [t0 + 0x1e] = a5\n 50434: a5 = a4 >> 0x28\n 50437: u8 [t0 + 0x1d] = a5\n 50440: a5 = a4 >> 0x20\n 50443: u8 [t0 + 0x1c] = a5\n 50446: a5 = a4 >> 0x18\n 50449: u8 [t0 + 0x1b] = a5\n 50452: a5 = a4 >> 0x10\n 50455: u8 [t0 + 0x1a] = a5\n 50458: a4 = a4 >> 0x8\n 50461: u8 [t0 + 0x19] = a4\n 50464: u8 [t0 + 0x10] = a3\n 50467: a4 = a3 >> 0x38\n 50470: u8 [t0 + 0x17] = a4\n 50473: a4 = a3 >> 0x30\n 50476: u8 [t0 + 0x16] = a4\n 50479: a4 = a3 >> 0x28\n 50482: u8 [t0 + 0x15] = a4\n 50485: a4 = a3 >> 0x20\n 50488: u8 [t0 + 0x14] = a4\n 50491: a4 = a3 >> 0x18\n 50494: u8 [t0 + 0x13] = a4\n 50497: a4 = a3 >> 0x10\n 50500: u8 [t0 + 0x12] = a4\n 50503: a3 = a3 >> 0x8\n 50506: u8 [t0 + 0x11] = a3\n 50509: u8 [t0 + 0x8] = a2\n 50512: a3 = a2 >> 0x38\n 50515: u8 [t0 + 0xf] = a3\n 50518: a3 = a2 >> 0x30\n 50521: u8 [t0 + 0xe] = a3\n 50524: a3 = a2 >> 0x28\n 50527: u8 [t0 + 0xd] = a3\n 50530: a3 = a2 >> 0x20\n 50533: u8 [t0 + 0xc] = a3\n 50536: a3 = a2 >> 0x18\n 50539: u8 [t0 + 0xb] = a3\n 50542: a3 = a2 >> 0x10\n 50545: u8 [t0 + 0xa] = a3\n 50548: a2 = a2 >> 0x8\n 50551: u8 [t0 + 0x9] = a2\n 50554: u8 [t0] = a0\n 50556: a2 = a0 >> 0x38\n 50559: u8 [t0 + 0x7] = a2\n 50562: a2 = a0 >> 0x30\n 50565: u8 [t0 + 0x6] = a2\n 50568: a2 = a0 >> 0x28\n 50571: u8 [t0 + 0x5] = a2\n 50574: a2 = a0 >> 0x20\n 50577: u8 [t0 + 0x4] = a2\n 50580: a2 = a0 >> 0x18\n 50583: u8 [t0 + 0x3] = a2\n 50586: a2 = a0 >> 0x10\n 50589: u8 [t0 + 0x2] = a2\n 50592: a0 = a0 >> 0x8\n 50595: u8 [t0 + 0x1] = a0\n 50598: jump @1119 if t1 >u 95\n      : @1118 (gas: 4)\n 50602: t1 = 0x60\n 50605: a0 = u64 [sp + 0xb0]\n 50609: u32 [a0] = t1\n 50611: fallthrough\n      : @1119 (gas: 18)\n 50612: a1 = u64 [ra + 0x50]\n 50615: a0 = u64 [ra + 0x58]\n 50618: a2 = u64 [ra + 0x40]\n 50621: a3 = u64 [ra + 0x48]\n 50624: u64 [sp + 0x68] = a1\n 50627: t2 = reverse a1\n 50629: u64 [sp + 0x70] = a0\n 50632: a0 = reverse a0\n 50634: u64 [sp + 0x58] = a2\n 50637: a2 = reverse a2\n 50639: u64 [sp + 0x60] = a3\n 50642: s1 = reverse a3\n 50644: a1 = s1 | a2\n 50647: a5 = a0 <u 0xffffffffffffffc0\n 50650: a5 = 0 if t2 != 0\n 50652: u64 [sp + 0xa0] = a1\n 50656: a5 = 0 if a1 != 0\n 50658: jump @1121 if a5 != 0\n      : @1120 (gas: 1)\n 50661: jump @1249\n      : @1121 (gas: 24)\n 50664: a5 = a0 + 0x40\n 50667: a4 = a5 <u a0\n 50670: a3 = t2 + a4\n 50673: a1 = a3 <u t2\n 50676: a1 = a4 if a4 == 0\n 50679: a1 = a1 + s1\n 50682: a4 = a1 <u s1\n 50685: a4 = a4 + a2\n 50688: a4 = reverse a4\n 50690: a1 = reverse a1\n 50692: a3 = reverse a3\n 50694: a5 = reverse a5\n 50696: u64 [ra + 0x58] = a5\n 50699: u64 [ra + 0x50] = a3\n 50702: u64 [ra + 0x48] = a1\n 50705: a1 = a0 | s1\n 50708: a2 = t2 | a2\n 50711: a1 = a1 | a2\n 50714: a1 = a1 >> 0x20\n 50717: a2 = a2 | s1\n 50720: a2 = a2 << 0x20\n 50723: a1 = a1 | a2\n 50726: u64 [ra + 0x40] = a4\n 50729: jump @1123 if a1 == 0\n      : @1122 (gas: 1)\n 50732: jump @1248\n      : @1123 (gas: 2)\n 50735: i32 a1 = a0 >> 0x10\n 50738: jump @1125 if a1 == 0\n      : @1124 (gas: 1)\n 50741: jump @1248\n      : @1125 (gas: 4)\n 50744: a1 = a0 + 0x3f\n 50747: a2 = u64 [sp + 0xb8]\n 50751: a2 = a2 & a1\n 50754: jump @1127 if a2 <=u 65536\n      : @1126 (gas: 1)\n 50760: jump @1248\n      : @1127 (gas: 1)\n 50763: jump @1129 if t1 >=u a2\n      : @1128 (gas: 4)\n 50766: a1 = u64 [sp + 0xb0]\n 50770: u32 [a1] = a2\n 50772: t1 = a2\n 50774: fallthrough\n      : @1129 (gas: 40)\n 50775: i32 s1 = a0 + 0\n 50777: s1 = s1 + ra\n 50780: u8 [s1 + 31] = 0xec\n 50785: u8 [s1 + 30] = 0x81\n 50790: u8 [s1 + 29] = 0x23\n 50794: u8 [s1 + 28] = 0xc4\n 50799: u8 [s1 + 27] = 0x12\n 50803: u8 [s1 + 26] = 0xc2\n 50808: u8 [s1 + 25] = 0x4f\n 50812: u8 [s1 + 24] = 0x73\n 50816: u8 [s1 + 23] = 0x9a\n 50821: u8 [s1 + 22] = 0x47\n 50825: u8 [s1 + 21] = 0x3f\n 50829: u8 [s1 + 20] = 0xb1\n 50834: u8 [s1 + 19] = 0x1a\n 50838: u8 [s1 + 18] = 0xec\n 50843: u8 [s1 + 17] = 0x77\n 50847: u8 [s1 + 16] = 0x27\n 50851: u8 [s1 + 15] = 0x17\n 50855: u8 [s1 + 14] = 0x10\n 50859: u8 [s1 + 13] = 0x59\n 50863: u8 [s1 + 12] = 0xa\n 50867: u8 [s1 + 11] = 0xfc\n 50872: u8 [s1 + 10] = 0xbb\n 50877: u8 [s1 + 9] = 0x75\n 50881: u8 [s1 + 8] = 0xb\n 50885: u8 [s1 + 7] = 0xd1\n 50890: u8 [s1 + 6] = 0x17\n 50894: u8 [s1 + 5] = 0x9e\n 50899: u8 [s1 + 4] = 0x9d\n 50904: u8 [s1 + 3] = 0xf4\n 50909: u8 [s1 + 2] = 0x95\n 50914: u8 [s1 + 1] = 0xb0\n 50919: a2 = 0xffffffe0\n 50929: a2 = a0 <u a2\n 50932: a2 = 0 if t2 != 0\n 50934: a3 = u64 [sp + 0xa0]\n 50938: a2 = 0 if a3 != 0\n 50940: u8 [s1 + 0] = 0x1\n 50943: jump @1131 if a2 != 0\n      : @1130 (gas: 1)\n 50946: jump @1248\n      : @1131 (gas: 2)\n 50949: i32 a1 = a0 >> 0x5\n 50952: jump @1133 if a1 <u 2047\n      : @1132 (gas: 1)\n 50957: jump @1248\n      : @1133 (gas: 4)\n 50960: a1 = a0 + 0x5f\n 50963: a2 = u64 [sp + 0xb8]\n 50967: a2 = a2 & a1\n 50970: jump @1135 if a2 <=u 65536\n      : @1134 (gas: 1)\n 50976: jump @1248\n      : @1135 (gas: 3)\n 50979: s1 = t1\n 50981: i32 a0 = a0 + 0x20\n 50984: jump @1137 if t1 >=u a2\n      : @1136 (gas: 4)\n 50987: a1 = u64 [sp + 0xb0]\n 50991: u32 [a1] = a2\n 50993: s1 = a2\n 50995: fallthrough\n      : @1137 (gas: 35)\n 50996: a0 = a0 + ra\n 50999: u8 [a0 + 31] = 0x11\n 51003: u8 [a0 + 30] = 0x5a\n 51007: u8 [a0 + 29] = 0xfe\n 51012: u8 [a0 + 28] = 0xbb\n 51017: u8 [a0 + 27] = 0x41\n 51021: u8 [a0 + 26] = 0x45\n 51025: u8 [a0 + 25] = 0x96\n 51030: u8 [a0 + 24] = 0x66\n 51034: u8 [a0 + 23] = 0xb0\n 51039: u8 [a0 + 22] = 0xcf\n 51044: u8 [a0 + 21] = 0xd6\n 51049: u8 [a0 + 20] = 0x49\n 51053: u8 [a0 + 19] = 0xba\n 51058: u8 [a0 + 18] = 0x7e\n 51062: u8 [a0 + 17] = 0xda\n 51067: u8 [a0 + 16] = 0x2a\n 51071: u8 [a0 + 15] = 0x28\n 51075: u8 [a0 + 14] = 0x5f\n 51079: u8 [a0 + 13] = 0x26\n 51083: u8 [a0 + 12] = 0xa9\n 51088: u8 [a0 + 11] = 0x44\n 51092: u8 [a0 + 10] = 0x6d\n 51096: u8 [a0 + 9] = 0x6d\n 51100: u8 [a0 + 8] = 0x40\n 51104: u8 [a0 + 7] = 0xd0\n 51109: u8 [a0 + 6] = 0x8e\n 51114: u8 [a0 + 5] = 0x1\n 51118: u8 [a0 + 4] = 0x12\n 51122: u8 [a0 + 3] = 0x1d\n 51126: u8 [a0 + 2] = 0x58\n 51130: u8 [a0 + 1] = 0x49\n 51134: u8 [a0 + 0] = 0x1\n 51137: a0 = u64 [sp + 0x88]\n 51141: jump @1139 if s1 >=u a0\n      : @1138 (gas: 4)\n 51144: a0 = u64 [sp + 0xb0]\n 51148: s1 = u64 [sp + 0x88]\n 51152: u32 [a0] = s1\n 51154: fallthrough\n      : @1139 (gas: 100)\n 51155: a0 = u8 [t0 + 0x11]\n 51158: a1 = u8 [t0 + 0x10]\n 51161: a2 = u8 [t0 + 0x12]\n 51164: a3 = u8 [t0 + 0x13]\n 51167: a0 = a0 << 0x8\n 51170: a0 = a0 | a1\n 51173: a2 = a2 << 0x10\n 51176: a3 = a3 << 0x18\n 51179: a2 = a2 | a3\n 51182: a0 = a0 | a2\n 51185: a1 = u8 [t0 + 0x15]\n 51188: a2 = u8 [t0 + 0x14]\n 51191: a3 = u8 [t0 + 0x16]\n 51194: a4 = u8 [t0 + 0x17]\n 51197: a1 = a1 << 0x8\n 51200: a1 = a1 | a2\n 51203: a3 = a3 << 0x10\n 51206: a4 = a4 << 0x18\n 51209: a3 = a3 | a4\n 51212: a1 = a1 | a3\n 51215: a1 = a1 << 0x20\n 51218: t1 = a1 | a0\n 51221: a1 = u8 [t0 + 0x1]\n 51224: a2 = u8 [t0]\n 51226: a3 = u8 [t0 + 0x2]\n 51229: a4 = u8 [t0 + 0x3]\n 51232: a1 = a1 << 0x8\n 51235: a1 = a1 | a2\n 51238: a3 = a3 << 0x10\n 51241: a4 = a4 << 0x18\n 51244: a3 = a3 | a4\n 51247: a1 = a1 | a3\n 51250: a2 = u8 [t0 + 0x5]\n 51253: a3 = u8 [t0 + 0x4]\n 51256: a4 = u8 [t0 + 0x6]\n 51259: a5 = u8 [t0 + 0x7]\n 51262: a2 = a2 << 0x8\n 51265: a2 = a2 | a3\n 51268: a4 = a4 << 0x10\n 51271: a5 = a5 << 0x18\n 51274: a4 = a4 | a5\n 51277: a2 = a2 | a4\n 51280: a2 = a2 << 0x20\n 51283: t2 = a2 | a1\n 51286: a1 = u8 [t0 + 0x19]\n 51289: a2 = u8 [t0 + 0x18]\n 51292: a3 = u8 [t0 + 0x1a]\n 51295: a4 = u8 [t0 + 0x1b]\n 51298: a1 = a1 << 0x8\n 51301: a1 = a1 | a2\n 51304: a3 = a3 << 0x10\n 51307: a4 = a4 << 0x18\n 51310: a3 = a3 | a4\n 51313: a1 = a1 | a3\n 51316: a2 = u8 [t0 + 0x1d]\n 51319: a3 = u8 [t0 + 0x1c]\n 51322: a4 = u8 [t0 + 0x1e]\n 51325: a5 = u8 [t0 + 0x1f]\n 51328: a2 = a2 << 0x8\n 51331: a2 = a2 | a3\n 51334: a4 = a4 << 0x10\n 51337: a5 = a5 << 0x18\n 51340: a4 = a4 | a5\n 51343: a2 = a2 | a4\n 51346: a2 = a2 << 0x20\n 51349: a3 = a2 | a1\n 51352: a1 = u8 [t0 + 0x9]\n 51355: a2 = u8 [t0 + 0x8]\n 51358: a4 = u8 [t0 + 0xa]\n 51361: a5 = u8 [t0 + 0xb]\n 51364: a1 = a1 << 0x8\n 51367: a1 = a1 | a2\n 51370: a4 = a4 << 0x10\n 51373: a5 = a5 << 0x18\n 51376: a4 = a4 | a5\n 51379: a1 = a1 | a4\n 51382: a2 = u8 [t0 + 0xd]\n 51385: a4 = u8 [t0 + 0xc]\n 51388: a5 = u8 [t0 + 0xe]\n 51391: a0 = u8 [t0 + 0xf]\n 51394: a2 = a2 << 0x8\n 51397: a2 = a2 | a4\n 51400: a5 = a5 << 0x10\n 51403: a0 = a0 << 0x18\n 51406: a0 = a0 | a5\n 51409: a0 = a0 | a2\n 51412: a0 = a0 << 0x20\n 51415: a0 = a0 | a1\n 51418: a4 = reverse a0\n 51420: ra = reverse a3\n 51422: a5 = reverse t2\n 51424: a3 = reverse t1\n 51426: a0 = a3 | a5\n 51429: a1 = ra | a4\n 51432: a1 = a1 | a0\n 51435: a1 = a1 >> 0x20\n 51438: a0 = a0 | a4\n 51441: a0 = a0 << 0x20\n 51444: a0 = a0 | a1\n 51447: jump @1141 if a0 == 0\n      : @1140 (gas: 1)\n 51450: jump @1248\n      : @1141 (gas: 2)\n 51453: i32 a0 = ra >> 0x10\n 51456: jump @1143 if a0 == 0\n      : @1142 (gas: 1)\n 51459: jump @1248\n      : @1143 (gas: 4)\n 51462: a0 = ra + 0x3f\n 51465: a1 = u64 [sp + 0xb8]\n 51469: a2 = a0 & a1\n 51472: jump @1145 if a2 <=u 65536\n      : @1144 (gas: 1)\n 51478: jump @1248\n      : @1145 (gas: 4)\n 51481: u64 [sp + 0x40] = a5\n 51484: u64 [sp + 0x48] = a4\n 51487: u64 [sp + 0x50] = a3\n 51490: jump @1147 if s1 >=u a2\n      : @1146 (gas: 4)\n 51493: a0 = u64 [sp + 0xb0]\n 51497: u32 [a0] = a2\n 51499: s1 = a2\n 51501: fallthrough\n      : @1147 (gas: 99)\n 51502: u64 [sp + 0x28] = a2\n 51505: u64 [sp + 0xa0] = s1\n 51509: i32 s1 = ra + 0\n 51511: a0 = u64 [sp + 0xa8]\n 51515: s1 = s1 + a0\n 51518: a1 = u8 [s1 + 0x11]\n 51521: a2 = u8 [s1 + 0x10]\n 51524: a5 = u8 [s1 + 0x12]\n 51527: a4 = u8 [s1 + 0x13]\n 51530: a1 = a1 << 0x8\n 51533: a1 = a1 | a2\n 51536: a5 = a5 << 0x10\n 51539: a4 = a4 << 0x18\n 51542: a4 = a4 | a5\n 51545: a1 = a1 | a4\n 51548: u64 [sp + 0x38] = a1\n 51551: a1 = u8 [s1 + 0x1]\n 51554: a2 = u8 [s1]\n 51556: a4 = u8 [s1 + 0x2]\n 51559: a5 = u8 [s1 + 0x3]\n 51562: a1 = a1 << 0x8\n 51565: a1 = a1 | a2\n 51568: a4 = a4 << 0x10\n 51571: a5 = a5 << 0x18\n 51574: a4 = a4 | a5\n 51577: a1 = a1 | a4\n 51580: u64 [sp + 0x30] = a1\n 51583: a1 = u8 [s1 + 0x15]\n 51586: a2 = u8 [s1 + 0x14]\n 51589: a4 = u8 [s1 + 0x16]\n 51592: a0 = u8 [s1 + 0x17]\n 51595: a1 = a1 << 0x8\n 51598: a1 = a1 | a2\n 51601: a4 = a4 << 0x10\n 51604: a0 = a0 << 0x18\n 51607: a0 = a0 | a4\n 51610: a5 = a0 | a1\n 51613: a0 = u8 [s1 + 0x5]\n 51616: a2 = u8 [s1 + 0x4]\n 51619: a4 = u8 [s1 + 0x6]\n 51622: a3 = u8 [s1 + 0x7]\n 51625: a0 = a0 << 0x8\n 51628: a0 = a0 | a2\n 51631: a4 = a4 << 0x10\n 51634: a3 = a3 << 0x18\n 51637: a3 = a3 | a4\n 51640: a1 = a3 | a0\n 51643: a0 = u8 [s1 + 0x19]\n 51646: a2 = u8 [s1 + 0x18]\n 51649: a3 = u8 [s1 + 0x1a]\n 51652: a4 = u8 [s1 + 0x1b]\n 51655: a0 = a0 << 0x8\n 51658: a0 = a0 | a2\n 51661: a3 = a3 << 0x10\n 51664: a4 = a4 << 0x18\n 51667: a3 = a3 | a4\n 51670: t1 = a3 | a0\n 51673: a0 = u8 [s1 + 0x9]\n 51676: a2 = u8 [s1 + 0x8]\n 51679: a3 = u8 [s1 + 0xa]\n 51682: a4 = u8 [s1 + 0xb]\n 51685: a0 = a0 << 0x8\n 51688: a0 = a0 | a2\n 51691: a3 = a3 << 0x10\n 51694: a4 = a4 << 0x18\n 51697: a2 = a4 | a3\n 51700: a2 = a2 | a0\n 51703: a0 = u8 [s1 + 0x1d]\n 51706: a3 = u8 [s1 + 0x1c]\n 51709: a4 = u8 [s1 + 0x1e]\n 51712: t2 = u8 [s1 + 0x1f]\n 51715: a0 = a0 << 0x8\n 51718: a0 = a0 | a3\n 51721: a4 = a4 << 0x10\n 51724: t2 = t2 << 0x18\n 51727: a3 = t2 | a4\n 51730: t2 = a3 | a0\n 51733: a3 = u8 [s1 + 0xd]\n 51736: a4 = u8 [s1 + 0xc]\n 51739: a0 = u8 [s1 + 0xe]\n 51742: s1 = u8 [s1 + 0xf]\n 51745: a3 = a3 << 0x8\n 51748: a3 = a3 | a4\n 51751: a0 = a0 << 0x10\n 51754: s1 = s1 << 0x18\n 51757: a0 = a0 | s1\n 51760: a0 = a0 | a3\n 51763: a0 = a0 | t2\n 51766: a2 = a2 | t1\n 51769: a0 = a0 << 0x20\n 51772: a0 = a0 | a2\n 51775: a1 = a1 | a5\n 51778: a2 = u64 [sp + 0x38]\n 51781: a3 = u64 [sp + 0x30]\n 51784: a2 = a2 | a3\n 51787: a1 = a1 << 0x20\n 51790: a1 = a1 | a2\n 51793: a0 = a0 | a1\n 51796: jump @1149 if a0 != 0\n      : @1148 (gas: 1)\n 51799: jump @1250\n      : @1149 (gas: 9)\n 51802: a0 = u64 [sp + 0x48]\n 51805: a1 = u64 [sp + 0x40]\n 51808: a0 = a0 | a1\n 51811: a1 = 0xffffffe0\n 51821: a1 = ra <u a1\n 51824: a2 = u64 [sp + 0x50]\n 51827: a1 = 0 if a2 != 0\n 51829: a1 = 0 if a0 != 0\n 51831: jump @1151 if a1 != 0\n      : @1150 (gas: 1)\n 51834: jump @1248\n      : @1151 (gas: 3)\n 51837: i32 a0 = ra >> 0x5\n 51840: a4 = u64 [sp + 0xa0]\n 51844: jump @1153 if a0 <u 2047\n      : @1152 (gas: 1)\n 51849: jump @1248\n      : @1153 (gas: 4)\n 51852: a0 = ra + 0x5f\n 51855: a2 = u64 [sp + 0xb8]\n 51859: a2 = a2 & a0\n 51862: jump @1155 if a2 <=u 65536\n      : @1154 (gas: 1)\n 51868: jump @1248\n      : @1155 (gas: 2)\n 51871: i32 a3 = ra + 0x20\n 51874: jump @1157 if a4 >=u a2\n      : @1156 (gas: 4)\n 51877: a0 = u64 [sp + 0xb0]\n 51881: u32 [a0] = a2\n 51883: a4 = a2\n 51885: fallthrough\n      : @1157 (gas: 68)\n 51886: t2 = u64 [sp + 0xa8]\n 51890: a3 = a3 + t2\n 51893: a1 = u64 [sp + 0x60]\n 51896: u8 [a3 + 0x8] = a1\n 51899: a5 = u64 [sp + 0x58]\n 51902: a0 = a5 >> 0x38\n 51905: u8 [a3 + 0x7] = a0\n 51908: a0 = a5 >> 0x30\n 51911: u8 [a3 + 0x6] = a0\n 51914: a0 = a5 >> 0x28\n 51917: u8 [a3 + 0x5] = a0\n 51920: a0 = a5 >> 0x20\n 51923: u8 [a3 + 0x4] = a0\n 51926: a0 = a5 >> 0x18\n 51929: u8 [a3 + 0x3] = a0\n 51932: a0 = a5 >> 0x10\n 51935: u8 [a3 + 0x2] = a0\n 51938: a0 = a5 >> 0x8\n 51941: u8 [a3 + 0x1] = a0\n 51944: u8 [a3] = a5\n 51946: a5 = u64 [sp + 0x68]\n 51949: u8 [a3 + 0x10] = a5\n 51952: a0 = a1 >> 0x38\n 51955: u8 [a3 + 0xf] = a0\n 51958: a0 = a1 >> 0x30\n 51961: u8 [a3 + 0xe] = a0\n 51964: a0 = a1 >> 0x28\n 51967: u8 [a3 + 0xd] = a0\n 51970: a0 = a1 >> 0x20\n 51973: u8 [a3 + 0xc] = a0\n 51976: a0 = a1 >> 0x18\n 51979: u8 [a3 + 0xb] = a0\n 51982: a0 = a1 >> 0x10\n 51985: u8 [a3 + 0xa] = a0\n 51988: a0 = a1 >> 0x8\n 51991: u8 [a3 + 0x9] = a0\n 51994: a1 = u64 [sp + 0x70]\n 51997: u8 [a3 + 0x18] = a1\n 52000: a0 = a5 >> 0x38\n 52003: u8 [a3 + 0x17] = a0\n 52006: a0 = a5 >> 0x30\n 52009: u8 [a3 + 0x16] = a0\n 52012: a0 = a5 >> 0x28\n 52015: u8 [a3 + 0x15] = a0\n 52018: a0 = a5 >> 0x20\n 52021: u8 [a3 + 0x14] = a0\n 52024: a0 = a5 >> 0x18\n 52027: u8 [a3 + 0x13] = a0\n 52030: a0 = a5 >> 0x10\n 52033: u8 [a3 + 0x12] = a0\n 52036: a0 = a5 >> 0x8\n 52039: u8 [a3 + 0x11] = a0\n 52042: a0 = a1 >> 0x38\n 52045: u8 [a3 + 0x1f] = a0\n 52048: a0 = a1 >> 0x30\n 52051: u8 [a3 + 0x1e] = a0\n 52054: a0 = a1 >> 0x28\n 52057: u8 [a3 + 0x1d] = a0\n 52060: a0 = a1 >> 0x20\n 52063: u8 [a3 + 0x1c] = a0\n 52066: a0 = a1 >> 0x18\n 52069: u8 [a3 + 0x1b] = a0\n 52072: a0 = a1 >> 0x10\n 52075: u8 [a3 + 0x1a] = a0\n 52078: a0 = a1 >> 0x8\n 52081: u8 [a3 + 0x19] = a0\n 52084: a1 = u64 [sp + 0x28]\n 52087: jump @1159 if a4 >=u a1\n      : @1158 (gas: 4)\n 52090: a0 = u64 [sp + 0xb0]\n 52094: u32 [a0] = a1\n 52096: a4 = a1\n 52098: fallthrough\n      : @1159 (gas: 19)\n 52099: u64 [sp + 0xa0] = a4\n 52103: a1 = u64 [t2 + 0x50]\n 52106: a0 = u64 [t2 + 0x58]\n 52109: a4 = u64 [t2 + 0x40]\n 52112: a3 = u64 [t2 + 0x48]\n 52115: u64 [sp + 0x60] = a1\n 52118: t1 = reverse a1\n 52120: u64 [sp + 0x68] = a0\n 52123: a0 = reverse a0\n 52125: u64 [sp + 0x50] = a4\n 52128: a4 = reverse a4\n 52130: u64 [sp + 0x58] = a3\n 52133: a5 = reverse a3\n 52135: a3 = a5 | a4\n 52138: a1 = a0 <u 0xffffffffffffffc0\n 52141: a1 = 0 if t1 != 0\n 52143: u64 [sp + 0x70] = a3\n 52146: a1 = 0 if a3 != 0\n 52148: jump @1161 if a1 != 0\n      : @1160 (gas: 1)\n 52151: jump @1252\n      : @1161 (gas: 24)\n 52154: a1 = a0 + 0x40\n 52157: s1 = a1 <u a0\n 52160: a3 = t1 + s1\n 52163: ra = a3 <u t1\n 52166: ra = s1 if s1 == 0\n 52169: ra = ra + a5\n 52172: s1 = ra <u a5\n 52175: s1 = s1 + a4\n 52178: s1 = reverse s1\n 52180: a2 = reverse ra\n 52182: a3 = reverse a3\n 52184: a1 = reverse a1\n 52186: u64 [t2 + 0x58] = a1\n 52189: u64 [t2 + 0x50] = a3\n 52192: u64 [t2 + 0x48] = a2\n 52195: a1 = a0 | a5\n 52198: a2 = t1 | a4\n 52201: a1 = a1 | a2\n 52204: a1 = a1 >> 0x20\n 52207: a2 = a2 | a5\n 52210: a2 = a2 << 0x20\n 52213: a1 = a1 | a2\n 52216: u64 [t2 + 0x40] = s1\n 52219: jump @1163 if a1 == 0\n      : @1162 (gas: 1)\n 52222: jump @1248\n      : @1163 (gas: 4)\n 52225: a3 = t2\n 52227: i32 a1 = a0 >> 0x10\n 52230: t2 = u64 [sp + 0xa0]\n 52234: jump @1165 if a1 == 0\n      : @1164 (gas: 1)\n 52237: jump @1248\n      : @1165 (gas: 4)\n 52240: a1 = a0 + 0x3f\n 52243: a4 = u64 [sp + 0xb8]\n 52247: a4 = a4 & a1\n 52250: jump @1167 if a4 <=u 65536\n      : @1166 (gas: 1)\n 52256: jump @1248\n      : @1167 (gas: 1)\n 52259: jump @1169 if t2 >=u a4\n      : @1168 (gas: 4)\n 52262: a1 = u64 [sp + 0xb0]\n 52266: u32 [a1] = a4\n 52268: t2 = a4\n 52270: fallthrough\n      : @1169 (gas: 40)\n 52271: i32 s1 = a0 + 0\n 52273: s1 = s1 + a3\n 52276: u8 [s1 + 31] = 0x68\n 52280: u8 [s1 + 30] = 0x59\n 52284: u8 [s1 + 29] = 0xb0\n 52289: u8 [s1 + 28] = 0x24\n 52293: u8 [s1 + 27] = 0xd3\n 52298: u8 [s1 + 26] = 0x6a\n 52302: u8 [s1 + 25] = 0x52\n 52306: u8 [s1 + 24] = 0xf8\n 52311: u8 [s1 + 23] = 0xac\n 52316: u8 [s1 + 22] = 0x8e\n 52321: u8 [s1 + 21] = 0xaa\n 52326: u8 [s1 + 20] = 0x9b\n 52331: u8 [s1 + 19] = 0x70\n 52335: u8 [s1 + 18] = 0x8a\n 52340: u8 [s1 + 17] = 0x59\n 52344: u8 [s1 + 16] = 0xc3\n 52349: u8 [s1 + 15] = 0xab\n 52354: u8 [s1 + 14] = 0xb9\n 52359: u8 [s1 + 13] = 0xc8\n 52364: u8 [s1 + 12] = 0x35\n 52368: u8 [s1 + 11] = 0x80\n 52373: u8 [s1 + 10] = 0x8b\n 52378: u8 [s1 + 9] = 0xbb\n 52383: u8 [s1 + 8] = 0x64\n 52387: u8 [s1 + 7] = 0xf1\n 52392: u8 [s1 + 6] = 0x30\n 52396: u8 [s1 + 5] = 0xd4\n 52401: u8 [s1 + 4] = 0x9e\n 52406: u8 [s1 + 3] = 0x7c\n 52410: u8 [s1 + 2] = 0xe2\n 52415: u8 [s1 + 1] = 0xa3\n 52420: a1 = 0xffffffe0\n 52430: a1 = a0 <u a1\n 52433: a1 = 0 if t1 != 0\n 52435: a2 = u64 [sp + 0x70]\n 52438: a1 = 0 if a2 != 0\n 52440: u8 [s1 + 0] = 0x24\n 52443: jump @1171 if a1 != 0\n      : @1170 (gas: 1)\n 52446: jump @1248\n      : @1171 (gas: 3)\n 52449: i32 a1 = a0 >> 0x5\n 52452: s1 = u64 [sp + 0x88]\n 52456: jump @1173 if a1 <u 2047\n      : @1172 (gas: 1)\n 52461: jump @1248\n      : @1173 (gas: 4)\n 52464: a1 = a0 + 0x5f\n 52467: a2 = u64 [sp + 0xb8]\n 52471: a2 = a2 & a1\n 52474: jump @1175 if a2 <=u 65536\n      : @1174 (gas: 1)\n 52480: jump @1248\n      : @1175 (gas: 2)\n 52483: i32 a0 = a0 + 0x20\n 52486: jump @1177 if t2 >=u a2\n      : @1176 (gas: 4)\n 52489: a1 = u64 [sp + 0xb0]\n 52493: u32 [a1] = a2\n 52495: t2 = a2\n 52497: fallthrough\n      : @1177 (gas: 34)\n 52498: a0 = a0 + a3\n 52501: u8 [a0 + 31] = 0x11\n 52505: u8 [a0 + 30] = 0x8\n 52509: u8 [a0 + 29] = 0x27\n 52513: u8 [a0 + 28] = 0xd7\n 52518: u8 [a0 + 27] = 0xab\n 52523: u8 [a0 + 26] = 0x8e\n 52528: u8 [a0 + 25] = 0x6d\n 52532: u8 [a0 + 24] = 0xb9\n 52537: u8 [a0 + 23] = 0x58\n 52541: u8 [a0 + 22] = 0x8d\n 52546: u8 [a0 + 21] = 0x86\n 52551: u8 [a0 + 20] = 0xc0\n 52556: u8 [a0 + 19] = 0xc0\n 52561: u8 [a0 + 18] = 0x8a\n 52566: u8 [a0 + 17] = 0xcb\n 52571: u8 [a0 + 16] = 0xd\n 52575: u8 [a0 + 15] = 0xca\n 52580: u8 [a0 + 14] = 0xb9\n 52585: u8 [a0 + 13] = 0xd7\n 52590: u8 [a0 + 12] = 0x88\n 52595: u8 [a0 + 11] = 0x64\n 52599: u8 [a0 + 10] = 0xf2\n 52604: u8 [a0 + 9] = 0x8a\n 52609: u8 [a0 + 8] = 0xa3\n 52614: u8 [a0 + 7] = 0x31\n 52618: u8 [a0 + 6] = 0x2e\n 52622: u8 [a0 + 5] = 0x9e\n 52627: u8 [a0 + 4] = 0x65\n 52631: u8 [a0 + 3] = 0x97\n 52636: u8 [a0 + 2] = 0x49\n 52640: u8 [a0 + 1] = 0x4f\n 52644: u8 [a0 + 0] = 0x11\n 52647: jump @1179 if t2 >=u s1\n      : @1178 (gas: 4)\n 52650: a0 = u64 [sp + 0xb0]\n 52654: u32 [a0] = s1\n 52656: t2 = s1\n 52658: fallthrough\n      : @1179 (gas: 100)\n 52659: a0 = u8 [t0 + 0x11]\n 52662: a1 = u8 [t0 + 0x10]\n 52665: a2 = u8 [t0 + 0x12]\n 52668: a3 = u8 [t0 + 0x13]\n 52671: a0 = a0 << 0x8\n 52674: a0 = a0 | a1\n 52677: a2 = a2 << 0x10\n 52680: a3 = a3 << 0x18\n 52683: a2 = a2 | a3\n 52686: a0 = a0 | a2\n 52689: a1 = u8 [t0 + 0x15]\n 52692: a2 = u8 [t0 + 0x14]\n 52695: a3 = u8 [t0 + 0x16]\n 52698: a4 = u8 [t0 + 0x17]\n 52701: a1 = a1 << 0x8\n 52704: a1 = a1 | a2\n 52707: a3 = a3 << 0x10\n 52710: a4 = a4 << 0x18\n 52713: a3 = a3 | a4\n 52716: a1 = a1 | a3\n 52719: a1 = a1 << 0x20\n 52722: t1 = a1 | a0\n 52725: a1 = u8 [t0 + 0x1]\n 52728: a2 = u8 [t0]\n 52730: a3 = u8 [t0 + 0x2]\n 52733: a4 = u8 [t0 + 0x3]\n 52736: a1 = a1 << 0x8\n 52739: a1 = a1 | a2\n 52742: a3 = a3 << 0x10\n 52745: a4 = a4 << 0x18\n 52748: a3 = a3 | a4\n 52751: a1 = a1 | a3\n 52754: a2 = u8 [t0 + 0x5]\n 52757: a3 = u8 [t0 + 0x4]\n 52760: a4 = u8 [t0 + 0x6]\n 52763: a5 = u8 [t0 + 0x7]\n 52766: a2 = a2 << 0x8\n 52769: a2 = a2 | a3\n 52772: a4 = a4 << 0x10\n 52775: a5 = a5 << 0x18\n 52778: a4 = a4 | a5\n 52781: a2 = a2 | a4\n 52784: a2 = a2 << 0x20\n 52787: a4 = a2 | a1\n 52790: a1 = u8 [t0 + 0x19]\n 52793: a2 = u8 [t0 + 0x18]\n 52796: a3 = u8 [t0 + 0x1a]\n 52799: a5 = u8 [t0 + 0x1b]\n 52802: a1 = a1 << 0x8\n 52805: a1 = a1 | a2\n 52808: a3 = a3 << 0x10\n 52811: a5 = a5 << 0x18\n 52814: a3 = a3 | a5\n 52817: a1 = a1 | a3\n 52820: a2 = u8 [t0 + 0x1d]\n 52823: a3 = u8 [t0 + 0x1c]\n 52826: a5 = u8 [t0 + 0x1e]\n 52829: s1 = u8 [t0 + 0x1f]\n 52832: a2 = a2 << 0x8\n 52835: a2 = a2 | a3\n 52838: a5 = a5 << 0x10\n 52841: s1 = s1 << 0x18\n 52844: a5 = a5 | s1\n 52847: a2 = a2 | a5\n 52850: a2 = a2 << 0x20\n 52853: a3 = a2 | a1\n 52856: a1 = u8 [t0 + 0x9]\n 52859: a2 = u8 [t0 + 0x8]\n 52862: a5 = u8 [t0 + 0xa]\n 52865: s1 = u8 [t0 + 0xb]\n 52868: a1 = a1 << 0x8\n 52871: a1 = a1 | a2\n 52874: a5 = a5 << 0x10\n 52877: s1 = s1 << 0x18\n 52880: a5 = a5 | s1\n 52883: a1 = a1 | a5\n 52886: a2 = u8 [t0 + 0xd]\n 52889: a5 = u8 [t0 + 0xc]\n 52892: s1 = u8 [t0 + 0xe]\n 52895: a0 = u8 [t0 + 0xf]\n 52898: a2 = a2 << 0x8\n 52901: a2 = a2 | a5\n 52904: s1 = s1 << 0x10\n 52907: a0 = a0 << 0x18\n 52910: a0 = a0 | s1\n 52913: a0 = a0 | a2\n 52916: a0 = a0 << 0x20\n 52919: a0 = a0 | a1\n 52922: a5 = reverse a0\n 52924: ra = reverse a3\n 52926: a4 = reverse a4\n 52928: a3 = reverse t1\n 52930: a0 = a3 | a4\n 52933: a2 = ra | a5\n 52936: a2 = a2 | a0\n 52939: a2 = a2 >> 0x20\n 52942: a0 = a0 | a5\n 52945: a0 = a0 << 0x20\n 52948: a0 = a0 | a2\n 52951: jump @1181 if a0 == 0\n      : @1180 (gas: 1)\n 52954: jump @1248\n      : @1181 (gas: 2)\n 52957: i32 a0 = ra >> 0x10\n 52960: jump @1183 if a0 == 0\n      : @1182 (gas: 1)\n 52963: jump @1248\n      : @1183 (gas: 4)\n 52966: a0 = ra + 0x3f\n 52969: a1 = u64 [sp + 0xb8]\n 52973: t1 = a0 & a1\n 52976: jump @1185 if t1 <=u 65536\n      : @1184 (gas: 1)\n 52982: jump @1248\n      : @1185 (gas: 4)\n 52985: u64 [sp + 0x40] = a4\n 52988: u64 [sp + 0x48] = a5\n 52991: u64 [sp + 0x70] = a3\n 52994: jump @1187 if t2 >=u t1\n      : @1186 (gas: 4)\n 52997: a0 = u64 [sp + 0xb0]\n 53001: u32 [a0] = t1\n 53003: t2 = t1\n 53005: fallthrough\n      : @1187 (gas: 106)\n 53006: u64 [sp + 0xa0] = t2\n 53010: i32 a4 = ra + 0\n 53012: a0 = u64 [sp + 0xa8]\n 53016: a4 = a4 + a0\n 53019: a2 = u8 [a4 + 0x1]\n 53022: a5 = u8 [a4]\n 53024: s1 = u8 [a4 + 0x2]\n 53027: a1 = u8 [a4 + 0x3]\n 53030: a2 = a2 << 0x8\n 53033: a2 = a2 | a5\n 53036: s1 = s1 << 0x10\n 53039: a1 = a1 << 0x18\n 53042: a1 = a1 | s1\n 53045: a1 = a1 | a2\n 53048: a2 = u8 [a4 + 0x5]\n 53051: a5 = u8 [a4 + 0x4]\n 53054: s1 = u8 [a4 + 0x6]\n 53057: a0 = u8 [a4 + 0x7]\n 53060: a2 = a2 << 0x8\n 53063: a2 = a2 | a5\n 53066: s1 = s1 << 0x10\n 53069: a0 = a0 << 0x18\n 53072: a0 = a0 | s1\n 53075: a0 = a0 | a2\n 53078: a0 = a0 << 0x20\n 53081: s1 = a0 | a1\n 53084: a0 = u8 [a4 + 0x9]\n 53087: a1 = u8 [a4 + 0x8]\n 53090: a2 = u8 [a4 + 0xa]\n 53093: a5 = u8 [a4 + 0xb]\n 53096: a0 = a0 << 0x8\n 53099: a0 = a0 | a1\n 53102: a2 = a2 << 0x10\n 53105: a5 = a5 << 0x18\n 53108: a2 = a2 | a5\n 53111: a0 = a0 | a2\n 53114: a1 = u8 [a4 + 0xd]\n 53117: a2 = u8 [a4 + 0xc]\n 53120: a5 = u8 [a4 + 0xe]\n 53123: a3 = u8 [a4 + 0xf]\n 53126: a1 = a1 << 0x8\n 53129: a1 = a1 | a2\n 53132: a5 = a5 << 0x10\n 53135: a3 = a3 << 0x18\n 53138: a3 = a3 | a5\n 53141: a1 = a1 | a3\n 53144: a1 = a1 << 0x20\n 53147: a5 = a1 | a0\n 53150: a0 = u8 [a4 + 0x11]\n 53153: a1 = u8 [a4 + 0x10]\n 53156: a2 = u8 [a4 + 0x12]\n 53159: a3 = u8 [a4 + 0x13]\n 53162: a0 = a0 << 0x8\n 53165: a0 = a0 | a1\n 53168: a2 = a2 << 0x10\n 53171: a3 = a3 << 0x18\n 53174: a2 = a2 | a3\n 53177: t2 = a2 | a0\n 53180: a1 = u8 [a4 + 0x15]\n 53183: a2 = u8 [a4 + 0x14]\n 53186: a3 = u8 [a4 + 0x16]\n 53189: a0 = u8 [a4 + 0x17]\n 53192: a1 = a1 << 0x8\n 53195: a1 = a1 | a2\n 53198: a3 = a3 << 0x10\n 53201: a0 = a0 << 0x18\n 53204: a0 = a0 | a3\n 53207: a0 = a0 | a1\n 53210: a0 = a0 << 0x20\n 53213: t2 = a0 | t2\n 53216: a0 = u8 [a4 + 0x19]\n 53219: a1 = u8 [a4 + 0x18]\n 53222: a2 = u8 [a4 + 0x1a]\n 53225: a3 = u8 [a4 + 0x1b]\n 53228: a0 = a0 << 0x8\n 53231: a0 = a0 | a1\n 53234: a2 = a2 << 0x10\n 53237: a3 = a3 << 0x18\n 53240: a2 = a2 | a3\n 53243: a0 = a0 | a2\n 53246: a1 = u8 [a4 + 0x1d]\n 53249: a2 = u8 [a4 + 0x1c]\n 53252: a3 = u8 [a4 + 0x1e]\n 53255: a4 = u8 [a4 + 0x1f]\n 53258: a1 = a1 << 0x8\n 53261: a1 = a1 | a2\n 53264: a3 = a3 << 0x10\n 53267: a4 = a4 << 0x18\n 53270: a3 = a3 | a4\n 53273: a1 = a1 | a3\n 53276: a1 = a1 << 0x20\n 53279: a0 = a0 | a1\n 53282: a0 = reverse a0\n 53284: a1 = reverse t2\n 53286: a2 = reverse a5\n 53288: a3 = reverse s1\n 53290: a4 = a3 >u 0\n 53292: a5 = a2 >u 0\n 53294: a5 = a4 if a3 != 0\n 53297: a4 = a1 >u 0\n 53299: a0 = a0 <u 0x2\n 53302: a0 = a0 ^ 0x1\n 53305: a0 = a4 if a1 != 0\n 53308: a2 = a2 | a3\n 53311: a0 = a5 if a2 != 0\n 53314: jump @1250 if a0 == 0\n      : @1188 (gas: 9)\n 53318: a0 = u64 [sp + 0x48]\n 53321: a1 = u64 [sp + 0x40]\n 53324: a0 = a0 | a1\n 53327: a1 = 0xffffffc0\n 53337: a1 = ra <u a1\n 53340: a2 = u64 [sp + 0x70]\n 53343: a1 = 0 if a2 != 0\n 53345: a1 = 0 if a0 != 0\n 53347: jump @1248 if a1 == 0\n      : @1189 (gas: 3)\n 53351: i32 a0 = ra >> 0x6\n 53354: t2 = u64 [sp + 0xa0]\n 53358: jump @1248 if a0 >=u 1023\n      : @1190 (gas: 4)\n 53364: a0 = ra + 0x7f\n 53367: a2 = u64 [sp + 0xb8]\n 53371: a2 = a2 & a0\n 53374: jump @1248 if a2 >u 65536\n      : @1191 (gas: 2)\n 53381: i32 a3 = ra + 0x40\n 53384: jump @1193 if t2 >=u a2\n      : @1192 (gas: 4)\n 53387: a0 = u64 [sp + 0xb0]\n 53391: u32 [a0] = a2\n 53393: t2 = a2\n 53395: fallthrough\n      : @1193 (gas: 67)\n 53396: a1 = u64 [sp + 0xa8]\n 53400: a3 = a3 + a1\n 53403: a2 = u64 [sp + 0x58]\n 53406: u8 [a3 + 0x8] = a2\n 53409: a4 = u64 [sp + 0x50]\n 53412: a0 = a4 >> 0x38\n 53415: u8 [a3 + 0x7] = a0\n 53418: a0 = a4 >> 0x30\n 53421: u8 [a3 + 0x6] = a0\n 53424: a0 = a4 >> 0x28\n 53427: u8 [a3 + 0x5] = a0\n 53430: a0 = a4 >> 0x20\n 53433: u8 [a3 + 0x4] = a0\n 53436: a0 = a4 >> 0x18\n 53439: u8 [a3 + 0x3] = a0\n 53442: a0 = a4 >> 0x10\n 53445: u8 [a3 + 0x2] = a0\n 53448: a0 = a4 >> 0x8\n 53451: u8 [a3 + 0x1] = a0\n 53454: u8 [a3] = a4\n 53456: a4 = u64 [sp + 0x60]\n 53459: u8 [a3 + 0x10] = a4\n 53462: a0 = a2 >> 0x38\n 53465: u8 [a3 + 0xf] = a0\n 53468: a0 = a2 >> 0x30\n 53471: u8 [a3 + 0xe] = a0\n 53474: a0 = a2 >> 0x28\n 53477: u8 [a3 + 0xd] = a0\n 53480: a0 = a2 >> 0x20\n 53483: u8 [a3 + 0xc] = a0\n 53486: a0 = a2 >> 0x18\n 53489: u8 [a3 + 0xb] = a0\n 53492: a0 = a2 >> 0x10\n 53495: u8 [a3 + 0xa] = a0\n 53498: a0 = a2 >> 0x8\n 53501: u8 [a3 + 0x9] = a0\n 53504: a2 = u64 [sp + 0x68]\n 53507: u8 [a3 + 0x18] = a2\n 53510: a0 = a4 >> 0x38\n 53513: u8 [a3 + 0x17] = a0\n 53516: a0 = a4 >> 0x30\n 53519: u8 [a3 + 0x16] = a0\n 53522: a0 = a4 >> 0x28\n 53525: u8 [a3 + 0x15] = a0\n 53528: a0 = a4 >> 0x20\n 53531: u8 [a3 + 0x14] = a0\n 53534: a0 = a4 >> 0x18\n 53537: u8 [a3 + 0x13] = a0\n 53540: a0 = a4 >> 0x10\n 53543: u8 [a3 + 0x12] = a0\n 53546: a0 = a4 >> 0x8\n 53549: u8 [a3 + 0x11] = a0\n 53552: a0 = a2 >> 0x38\n 53555: u8 [a3 + 0x1f] = a0\n 53558: a0 = a2 >> 0x30\n 53561: u8 [a3 + 0x1e] = a0\n 53564: a0 = a2 >> 0x28\n 53567: u8 [a3 + 0x1d] = a0\n 53570: a0 = a2 >> 0x20\n 53573: u8 [a3 + 0x1c] = a0\n 53576: a0 = a2 >> 0x18\n 53579: u8 [a3 + 0x1b] = a0\n 53582: a0 = a2 >> 0x10\n 53585: u8 [a3 + 0x1a] = a0\n 53588: a0 = a2 >> 0x8\n 53591: u8 [a3 + 0x19] = a0\n 53594: jump @1195 if t2 >=u t1\n      : @1194 (gas: 4)\n 53597: a0 = u64 [sp + 0xb0]\n 53601: u32 [a0] = t1\n 53603: t2 = t1\n 53605: fallthrough\n      : @1195 (gas: 19)\n 53606: a2 = u64 [a1 + 0x50]\n 53609: a0 = u64 [a1 + 0x58]\n 53612: a4 = u64 [a1 + 0x40]\n 53615: a3 = u64 [a1 + 0x48]\n 53618: t1 = a1\n 53620: u64 [sp + 0x68] = a2\n 53623: ra = reverse a2\n 53625: u64 [sp + 0x70] = a0\n 53628: a0 = reverse a0\n 53630: u64 [sp + 0x58] = a4\n 53633: a4 = reverse a4\n 53635: u64 [sp + 0x60] = a3\n 53638: a5 = reverse a3\n 53640: a2 = a5 | a4\n 53643: a1 = a0 <u 0xffffffffffffffc0\n 53646: a1 = 0 if ra != 0\n 53648: u64 [sp + 0xa0] = a2\n 53652: a1 = 0 if a2 != 0\n 53654: jump @1251 if a1 == 0\n      : @1196 (gas: 24)\n 53658: a1 = a0 + 0x40\n 53661: a2 = a1 <u a0\n 53664: a3 = ra + a2\n 53667: s1 = a3 <u ra\n 53670: s1 = a2 if a2 == 0\n 53673: s1 = s1 + a5\n 53676: a2 = s1 <u a5\n 53679: a2 = a2 + a4\n 53682: a2 = reverse a2\n 53684: s1 = reverse s1\n 53686: a3 = reverse a3\n 53688: a1 = reverse a1\n 53690: u64 [t1 + 0x58] = a1\n 53693: u64 [t1 + 0x50] = a3\n 53696: u64 [t1 + 0x48] = s1\n 53699: a1 = a0 | a5\n 53702: a3 = ra | a4\n 53705: a1 = a1 | a3\n 53708: a1 = a1 >> 0x20\n 53711: a3 = a3 | a5\n 53714: a3 = a3 << 0x20\n 53717: a1 = a1 | a3\n 53720: u64 [t1 + 0x40] = a2\n 53723: jump @1248 if a1 != 0\n      : @1197 (gas: 3)\n 53727: i32 a1 = a0 >> 0x10\n 53730: s1 = u64 [sp + 0x88]\n 53734: jump @1248 if a1 != 0\n      : @1198 (gas: 4)\n 53738: a1 = a0 + 0x3f\n 53741: a4 = u64 [sp + 0xb8]\n 53745: a4 = a4 & a1\n 53748: jump @1248 if a4 >u 65536\n      : @1199 (gas: 1)\n 53755: jump @1201 if t2 >=u a4\n      : @1200 (gas: 4)\n 53758: a1 = u64 [sp + 0xb0]\n 53762: u32 [a1] = a4\n 53764: t2 = a4\n 53766: fallthrough\n      : @1201 (gas: 41)\n 53767: i32 a5 = a0 + 0\n 53769: a1 = u64 [sp + 0xa8]\n 53773: a5 = a5 + a1\n 53776: u8 [a5 + 31] = 0x65\n 53780: u8 [a5 + 30] = 0xb\n 53784: u8 [a5 + 29] = 0xf4\n 53789: u8 [a5 + 28] = 0x26\n 53793: u8 [a5 + 27] = 0xd2\n 53798: u8 [a5 + 26] = 0x79\n 53802: u8 [a5 + 25] = 0x7f\n 53806: u8 [a5 + 24] = 0xfc\n 53811: u8 [a5 + 23] = 0x6c\n 53815: u8 [a5 + 22] = 0xbe\n 53820: u8 [a5 + 21] = 0x2\n 53824: u8 [a5 + 20] = 0x5a\n 53828: u8 [a5 + 19] = 0xb5\n 53833: u8 [a5 + 18] = 0xa3\n 53838: u8 [a5 + 17] = 0xb9\n 53843: u8 [a5 + 16] = 0x63\n 53847: u8 [a5 + 15] = 0xfe\n 53852: u8 [a5 + 14] = 0xf7\n 53857: u8 [a5 + 13] = 0x29\n 53861: u8 [a5 + 12] = 0xc5\n 53866: u8 [a5 + 11] = 0x35\n 53870: u8 [a5 + 10] = 0x36\n 53874: u8 [a5 + 9] = 0x45\n 53878: u8 [a5 + 8] = 0xe6\n 53883: u8 [a5 + 7] = 0x6b\n 53887: u8 [a5 + 6] = 0x2c\n 53891: u8 [a5 + 5] = 0xe6\n 53896: u8 [a5 + 4] = 0x4d\n 53900: u8 [a5 + 3] = 0x22\n 53904: u8 [a5 + 2] = 0xc9\n 53909: u8 [a5 + 1] = 0xfd\n 53914: a2 = 0xffffffe0\n 53924: a2 = a0 <u a2\n 53927: a2 = 0 if ra != 0\n 53929: a3 = u64 [sp + 0xa0]\n 53933: a2 = 0 if a3 != 0\n 53935: u8 [a5 + 0] = 0x11\n 53938: jump @1248 if a2 == 0\n      : @1202 (gas: 2)\n 53942: i32 a1 = a0 >> 0x5\n 53945: jump @1248 if a1 >=u 2047\n      : @1203 (gas: 4)\n 53951: a1 = a0 + 0x5f\n 53954: a3 = u64 [sp + 0xb8]\n 53958: a3 = a3 & a1\n 53961: jump @1248 if a3 >u 65536\n      : @1204 (gas: 3)\n 53968: i32 a0 = a0 + 0x20\n 53971: a2 = u64 [sp + 0xa8]\n 53975: jump @1206 if t2 >=u a3\n      : @1205 (gas: 4)\n 53978: a1 = u64 [sp + 0xb0]\n 53982: u32 [a1] = a3\n 53984: t2 = a3\n 53986: fallthrough\n      : @1206 (gas: 34)\n 53987: a0 = a0 + a2\n 53990: u8 [a0 + 31] = 0x39\n 53994: u8 [a0 + 30] = 0x25\n 53998: u8 [a0 + 29] = 0x71\n 54002: u8 [a0 + 28] = 0x86\n 54007: u8 [a0 + 27] = 0xf\n 54011: u8 [a0 + 26] = 0x38\n 54015: u8 [a0 + 25] = 0x90\n 54020: u8 [a0 + 24] = 0x2d\n 54024: u8 [a0 + 23] = 0x9e\n 54029: u8 [a0 + 22] = 0x9d\n 54034: u8 [a0 + 21] = 0xb8\n 54039: u8 [a0 + 20] = 0x8a\n 54044: u8 [a0 + 19] = 0x7a\n 54048: u8 [a0 + 18] = 0xb3\n 54053: u8 [a0 + 17] = 0xdb\n 54058: u8 [a0 + 16] = 0xdb\n 54063: u8 [a0 + 15] = 0xfb\n 54068: u8 [a0 + 14] = 0xf1\n 54073: u8 [a0 + 13] = 0x4f\n 54077: u8 [a0 + 12] = 0xd6\n 54082: u8 [a0 + 11] = 0x62\n 54086: u8 [a0 + 10] = 0xdc\n 54091: u8 [a0 + 9] = 0x80\n 54096: u8 [a0 + 8] = 0x52\n 54100: u8 [a0 + 7] = 0xe6\n 54105: u8 [a0 + 6] = 0xf8\n 54110: u8 [a0 + 5] = 0xe4\n 54115: u8 [a0 + 4] = 0xfa\n 54120: u8 [a0 + 3] = 0xf\n 54124: u8 [a0 + 2] = 0x30\n 54128: u8 [a0 + 1] = 0x2e\n 54132: u8 [a0 + 0] = 0x16\n 54135: jump @1208 if t2 >=u s1\n      : @1207 (gas: 4)\n 54138: a0 = u64 [sp + 0xb0]\n 54142: u32 [a0] = s1\n 54144: t2 = s1\n 54146: fallthrough\n      : @1208 (gas: 101)\n 54147: ra = t2\n 54149: a0 = u8 [t0 + 0x11]\n 54152: a1 = u8 [t0 + 0x10]\n 54155: a2 = u8 [t0 + 0x12]\n 54158: a3 = u8 [t0 + 0x13]\n 54161: a0 = a0 << 0x8\n 54164: a0 = a0 | a1\n 54167: a2 = a2 << 0x10\n 54170: a3 = a3 << 0x18\n 54173: a2 = a2 | a3\n 54176: a0 = a0 | a2\n 54179: a1 = u8 [t0 + 0x15]\n 54182: a2 = u8 [t0 + 0x14]\n 54185: a3 = u8 [t0 + 0x16]\n 54188: a4 = u8 [t0 + 0x17]\n 54191: a1 = a1 << 0x8\n 54194: a1 = a1 | a2\n 54197: a3 = a3 << 0x10\n 54200: a4 = a4 << 0x18\n 54203: a3 = a3 | a4\n 54206: a1 = a1 | a3\n 54209: a1 = a1 << 0x20\n 54212: t2 = a1 | a0\n 54215: a1 = u8 [t0 + 0x1]\n 54218: a2 = u8 [t0]\n 54220: a3 = u8 [t0 + 0x2]\n 54223: a4 = u8 [t0 + 0x3]\n 54226: a1 = a1 << 0x8\n 54229: a1 = a1 | a2\n 54232: a3 = a3 << 0x10\n 54235: a4 = a4 << 0x18\n 54238: a3 = a3 | a4\n 54241: a1 = a1 | a3\n 54244: a2 = u8 [t0 + 0x5]\n 54247: a3 = u8 [t0 + 0x4]\n 54250: a4 = u8 [t0 + 0x6]\n 54253: a5 = u8 [t0 + 0x7]\n 54256: a2 = a2 << 0x8\n 54259: a2 = a2 | a3\n 54262: a4 = a4 << 0x10\n 54265: a5 = a5 << 0x18\n 54268: a4 = a4 | a5\n 54271: a2 = a2 | a4\n 54274: a2 = a2 << 0x20\n 54277: a5 = a2 | a1\n 54280: a1 = u8 [t0 + 0x19]\n 54283: a2 = u8 [t0 + 0x18]\n 54286: a3 = u8 [t0 + 0x1a]\n 54289: a4 = u8 [t0 + 0x1b]\n 54292: a1 = a1 << 0x8\n 54295: a1 = a1 | a2\n 54298: a3 = a3 << 0x10\n 54301: a4 = a4 << 0x18\n 54304: a3 = a3 | a4\n 54307: a1 = a1 | a3\n 54310: a2 = u8 [t0 + 0x1d]\n 54313: a3 = u8 [t0 + 0x1c]\n 54316: a4 = u8 [t0 + 0x1e]\n 54319: s1 = u8 [t0 + 0x1f]\n 54322: a2 = a2 << 0x8\n 54325: a2 = a2 | a3\n 54328: a4 = a4 << 0x10\n 54331: s1 = s1 << 0x18\n 54334: a4 = a4 | s1\n 54337: a2 = a2 | a4\n 54340: a2 = a2 << 0x20\n 54343: a3 = a2 | a1\n 54346: a1 = u8 [t0 + 0x9]\n 54349: a2 = u8 [t0 + 0x8]\n 54352: a4 = u8 [t0 + 0xa]\n 54355: s1 = u8 [t0 + 0xb]\n 54358: a1 = a1 << 0x8\n 54361: a1 = a1 | a2\n 54364: a4 = a4 << 0x10\n 54367: s1 = s1 << 0x18\n 54370: a4 = a4 | s1\n 54373: a1 = a1 | a4\n 54376: a2 = u8 [t0 + 0xd]\n 54379: a4 = u8 [t0 + 0xc]\n 54382: s1 = u8 [t0 + 0xe]\n 54385: a0 = u8 [t0 + 0xf]\n 54388: a2 = a2 << 0x8\n 54391: a2 = a2 | a4\n 54394: s1 = s1 << 0x10\n 54397: a0 = a0 << 0x18\n 54400: a0 = a0 | s1\n 54403: a0 = a0 | a2\n 54406: a0 = a0 << 0x20\n 54409: a0 = a0 | a1\n 54412: a4 = reverse a0\n 54414: t1 = reverse a3\n 54416: a5 = reverse a5\n 54418: a3 = reverse t2\n 54420: a0 = a3 | a5\n 54423: a1 = t1 | a4\n 54426: a1 = a1 | a0\n 54429: a1 = a1 >> 0x20\n 54432: a0 = a0 | a4\n 54435: a0 = a0 << 0x20\n 54438: a0 = a0 | a1\n 54441: jump @1248 if a0 != 0\n      : @1209 (gas: 2)\n 54445: i32 a0 = t1 >> 0x10\n 54448: jump @1248 if a0 != 0\n      : @1210 (gas: 4)\n 54452: a0 = t1 + 0x3f\n 54455: a1 = u64 [sp + 0xb8]\n 54459: a2 = a0 & a1\n 54462: jump @1248 if a2 >u 65536\n      : @1211 (gas: 4)\n 54469: u64 [sp + 0x40] = a5\n 54472: u64 [sp + 0x48] = a4\n 54475: u64 [sp + 0x50] = a3\n 54478: jump @1213 if ra >=u a2\n      : @1212 (gas: 4)\n 54481: a0 = u64 [sp + 0xb0]\n 54485: u32 [a0] = a2\n 54487: ra = a2\n 54489: fallthrough\n      : @1213 (gas: 107)\n 54490: u64 [sp + 0x38] = a2\n 54493: u64 [sp + 0xa0] = ra\n 54497: i32 s1 = t1 + 0\n 54499: a0 = u64 [sp + 0xa8]\n 54503: s1 = s1 + a0\n 54506: a1 = u8 [s1 + 0x1]\n 54509: a2 = u8 [s1]\n 54511: a5 = u8 [s1 + 0x2]\n 54514: a4 = u8 [s1 + 0x3]\n 54517: a1 = a1 << 0x8\n 54520: a1 = a1 | a2\n 54523: a5 = a5 << 0x10\n 54526: a4 = a4 << 0x18\n 54529: a4 = a4 | a5\n 54532: a1 = a1 | a4\n 54535: a2 = u8 [s1 + 0x5]\n 54538: a4 = u8 [s1 + 0x4]\n 54541: a5 = u8 [s1 + 0x6]\n 54544: a0 = u8 [s1 + 0x7]\n 54547: a2 = a2 << 0x8\n 54550: a2 = a2 | a4\n 54553: a5 = a5 << 0x10\n 54556: a0 = a0 << 0x18\n 54559: a0 = a0 | a5\n 54562: a0 = a0 | a2\n 54565: a0 = a0 << 0x20\n 54568: a5 = a0 | a1\n 54571: a0 = u8 [s1 + 0x9]\n 54574: a1 = u8 [s1 + 0x8]\n 54577: a2 = u8 [s1 + 0xa]\n 54580: a4 = u8 [s1 + 0xb]\n 54583: a0 = a0 << 0x8\n 54586: a0 = a0 | a1\n 54589: a2 = a2 << 0x10\n 54592: a4 = a4 << 0x18\n 54595: a2 = a2 | a4\n 54598: a0 = a0 | a2\n 54601: a1 = u8 [s1 + 0xd]\n 54604: a2 = u8 [s1 + 0xc]\n 54607: a4 = u8 [s1 + 0xe]\n 54610: a3 = u8 [s1 + 0xf]\n 54613: a1 = a1 << 0x8\n 54616: a1 = a1 | a2\n 54619: a4 = a4 << 0x10\n 54622: a3 = a3 << 0x18\n 54625: a3 = a3 | a4\n 54628: a1 = a1 | a3\n 54631: a1 = a1 << 0x20\n 54634: ra = a1 | a0\n 54637: a0 = u8 [s1 + 0x11]\n 54640: a1 = u8 [s1 + 0x10]\n 54643: a2 = u8 [s1 + 0x12]\n 54646: a3 = u8 [s1 + 0x13]\n 54649: a0 = a0 << 0x8\n 54652: a0 = a0 | a1\n 54655: a2 = a2 << 0x10\n 54658: a3 = a3 << 0x18\n 54661: a2 = a2 | a3\n 54664: a0 = a0 | a2\n 54667: a1 = u8 [s1 + 0x15]\n 54670: a2 = u8 [s1 + 0x14]\n 54673: a3 = u8 [s1 + 0x16]\n 54676: a4 = u8 [s1 + 0x17]\n 54679: a1 = a1 << 0x8\n 54682: a1 = a1 | a2\n 54685: a3 = a3 << 0x10\n 54688: a4 = a4 << 0x18\n 54691: a3 = a3 | a4\n 54694: a1 = a1 | a3\n 54697: a1 = a1 << 0x20\n 54700: t2 = a1 | a0\n 54703: a0 = u8 [s1 + 0x19]\n 54706: a1 = u8 [s1 + 0x18]\n 54709: a2 = u8 [s1 + 0x1a]\n 54712: a3 = u8 [s1 + 0x1b]\n 54715: a0 = a0 << 0x8\n 54718: a0 = a0 | a1\n 54721: a2 = a2 << 0x10\n 54724: a3 = a3 << 0x18\n 54727: a2 = a2 | a3\n 54730: a0 = a0 | a2\n 54733: a1 = u8 [s1 + 0x1d]\n 54736: a2 = u8 [s1 + 0x1c]\n 54739: a3 = u8 [s1 + 0x1e]\n 54742: a4 = u8 [s1 + 0x1f]\n 54745: a1 = a1 << 0x8\n 54748: a1 = a1 | a2\n 54751: a3 = a3 << 0x10\n 54754: a4 = a4 << 0x18\n 54757: a3 = a3 | a4\n 54760: a1 = a1 | a3\n 54763: a1 = a1 << 0x20\n 54766: a0 = a0 | a1\n 54769: a0 = reverse a0\n 54771: a1 = reverse t2\n 54773: a2 = reverse ra\n 54775: a3 = reverse a5\n 54777: a4 = a3 >u 0\n 54779: a5 = a2 >u 0\n 54781: a5 = a4 if a3 != 0\n 54784: a4 = a1 >u 0\n 54786: a0 = a0 <u 0x3\n 54789: a0 = a0 ^ 0x1\n 54792: a0 = a4 if a1 != 0\n 54795: a2 = a2 | a3\n 54798: a0 = a5 if a2 != 0\n 54801: jump @1250 if a0 == 0\n      : @1214 (gas: 9)\n 54805: a0 = u64 [sp + 0x48]\n 54808: a1 = u64 [sp + 0x40]\n 54811: a0 = a0 | a1\n 54814: a1 = 0xffffffa0\n 54824: a1 = t1 <u a1\n 54827: a2 = u64 [sp + 0x50]\n 54830: a1 = 0 if a2 != 0\n 54832: a1 = 0 if a0 != 0\n 54834: jump @1248 if a1 == 0\n      : @1215 (gas: 4)\n 54838: i32 a0 = t1 >> 0x5\n 54841: ra = u64 [sp + 0xa8]\n 54845: a5 = u64 [sp + 0xa0]\n 54849: jump @1248 if a0 >=u 2045\n      : @1216 (gas: 4)\n 54855: a0 = t1 + 0x9f\n 54859: a4 = u64 [sp + 0xb8]\n 54863: a4 = a4 & a0\n 54866: jump @1248 if a4 >u 65536\n      : @1217 (gas: 2)\n 54873: i32 a3 = t1 + 0x60\n 54876: jump @1219 if a5 >=u a4\n      : @1218 (gas: 4)\n 54879: a0 = u64 [sp + 0xb0]\n 54883: u32 [a0] = a4\n 54885: a5 = a4\n 54887: fallthrough\n      : @1219 (gas: 67)\n 54888: a3 = a3 + ra\n 54891: a1 = u64 [sp + 0x60]\n 54894: u8 [a3 + 0x8] = a1\n 54897: a4 = u64 [sp + 0x58]\n 54900: a0 = a4 >> 0x38\n 54903: u8 [a3 + 0x7] = a0\n 54906: a0 = a4 >> 0x30\n 54909: u8 [a3 + 0x6] = a0\n 54912: a0 = a4 >> 0x28\n 54915: u8 [a3 + 0x5] = a0\n 54918: a0 = a4 >> 0x20\n 54921: u8 [a3 + 0x4] = a0\n 54924: a0 = a4 >> 0x18\n 54927: u8 [a3 + 0x3] = a0\n 54930: a0 = a4 >> 0x10\n 54933: u8 [a3 + 0x2] = a0\n 54936: a0 = a4 >> 0x8\n 54939: u8 [a3 + 0x1] = a0\n 54942: u8 [a3] = a4\n 54944: a4 = u64 [sp + 0x68]\n 54947: u8 [a3 + 0x10] = a4\n 54950: a0 = a1 >> 0x38\n 54953: u8 [a3 + 0xf] = a0\n 54956: a0 = a1 >> 0x30\n 54959: u8 [a3 + 0xe] = a0\n 54962: a0 = a1 >> 0x28\n 54965: u8 [a3 + 0xd] = a0\n 54968: a0 = a1 >> 0x20\n 54971: u8 [a3 + 0xc] = a0\n 54974: a0 = a1 >> 0x18\n 54977: u8 [a3 + 0xb] = a0\n 54980: a0 = a1 >> 0x10\n 54983: u8 [a3 + 0xa] = a0\n 54986: a0 = a1 >> 0x8\n 54989: u8 [a3 + 0x9] = a0\n 54992: a1 = u64 [sp + 0x70]\n 54995: u8 [a3 + 0x18] = a1\n 54998: a0 = a4 >> 0x38\n 55001: u8 [a3 + 0x17] = a0\n 55004: a0 = a4 >> 0x30\n 55007: u8 [a3 + 0x16] = a0\n 55010: a0 = a4 >> 0x28\n 55013: u8 [a3 + 0x15] = a0\n 55016: a0 = a4 >> 0x20\n 55019: u8 [a3 + 0x14] = a0\n 55022: a0 = a4 >> 0x18\n 55025: u8 [a3 + 0x13] = a0\n 55028: a0 = a4 >> 0x10\n 55031: u8 [a3 + 0x12] = a0\n 55034: a0 = a4 >> 0x8\n 55037: u8 [a3 + 0x11] = a0\n 55040: a0 = a1 >> 0x38\n 55043: u8 [a3 + 0x1f] = a0\n 55046: a0 = a1 >> 0x30\n 55049: u8 [a3 + 0x1e] = a0\n 55052: a0 = a1 >> 0x28\n 55055: u8 [a3 + 0x1d] = a0\n 55058: a0 = a1 >> 0x20\n 55061: u8 [a3 + 0x1c] = a0\n 55064: a0 = a1 >> 0x18\n 55067: u8 [a3 + 0x1b] = a0\n 55070: a0 = a1 >> 0x10\n 55073: u8 [a3 + 0x1a] = a0\n 55076: a0 = a1 >> 0x8\n 55079: u8 [a3 + 0x19] = a0\n 55082: a1 = u64 [sp + 0x38]\n 55085: jump @1221 if a5 >=u a1\n      : @1220 (gas: 4)\n 55088: a0 = u64 [sp + 0xb0]\n 55092: u32 [a0] = a1\n 55094: a5 = a1\n 55096: fallthrough\n      : @1221 (gas: 19)\n 55097: u64 [sp + 0xa0] = a5\n 55101: a1 = u64 [ra + 0x50]\n 55104: a0 = u64 [ra + 0x58]\n 55107: a4 = u64 [ra + 0x40]\n 55110: a3 = u64 [ra + 0x48]\n 55113: u64 [sp + 0x60] = a1\n 55116: t1 = reverse a1\n 55118: u64 [sp + 0x68] = a0\n 55121: a0 = reverse a0\n 55123: u64 [sp + 0x50] = a4\n 55126: a4 = reverse a4\n 55128: u64 [sp + 0x58] = a3\n 55131: s1 = reverse a3\n 55133: a2 = s1 | a4\n 55136: a1 = a0 <u 0xffffffffffffffc0\n 55139: a1 = 0 if t1 != 0\n 55141: u64 [sp + 0x70] = a2\n 55144: a1 = 0 if a2 != 0\n 55146: jump @1249 if a1 == 0\n      : @1222 (gas: 24)\n 55150: a1 = a0 + 0x40\n 55153: a2 = a1 <u a0\n 55156: a3 = t1 + a2\n 55159: t2 = a3 <u t1\n 55162: t2 = a2 if a2 == 0\n 55165: t2 = t2 + s1\n 55168: a2 = t2 <u s1\n 55171: a2 = a2 + a4\n 55174: a2 = reverse a2\n 55176: a5 = reverse t2\n 55178: a3 = reverse a3\n 55180: a1 = reverse a1\n 55182: u64 [ra + 0x58] = a1\n 55185: u64 [ra + 0x50] = a3\n 55188: u64 [ra + 0x48] = a5\n 55191: a1 = a0 | s1\n 55194: a3 = t1 | a4\n 55197: a1 = a1 | a3\n 55200: a1 = a1 >> 0x20\n 55203: a3 = a3 | s1\n 55206: a3 = a3 << 0x20\n 55209: a1 = a1 | a3\n 55212: u64 [ra + 0x40] = a2\n 55215: jump @1248 if a1 != 0\n      : @1223 (gas: 3)\n 55219: i32 a1 = a0 >> 0x10\n 55222: a5 = u64 [sp + 0xa0]\n 55226: jump @1248 if a1 != 0\n      : @1224 (gas: 4)\n 55230: a1 = a0 + 0x3f\n 55233: a2 = u64 [sp + 0xb8]\n 55237: a2 = a2 & a1\n 55240: jump @1248 if a2 >u 65536\n      : @1225 (gas: 1)\n 55247: jump @1227 if a5 >=u a2\n      : @1226 (gas: 4)\n 55250: a1 = u64 [sp + 0xb0]\n 55254: u32 [a1] = a2\n 55256: a5 = a2\n 55258: fallthrough\n      : @1227 (gas: 41)\n 55259: i32 s1 = a0 + 0\n 55261: a1 = u64 [sp + 0xa8]\n 55265: s1 = s1 + a1\n 55268: u8 [s1 + 31] = 0x5c\n 55272: u8 [s1 + 30] = 0xae\n 55277: u8 [s1 + 29] = 0xb4\n 55282: u8 [s1 + 28] = 0xb8\n 55287: u8 [s1 + 27] = 0x44\n 55291: u8 [s1 + 26] = 0x20\n 55295: u8 [s1 + 25] = 0x4d\n 55299: u8 [s1 + 24] = 0xfd\n 55304: u8 [s1 + 23] = 0xf5\n 55309: u8 [s1 + 22] = 0x5\n 55313: u8 [s1 + 21] = 0x60\n 55317: u8 [s1 + 20] = 0x2d\n 55321: u8 [s1 + 19] = 0xc4\n 55326: u8 [s1 + 18] = 0x44\n 55330: u8 [s1 + 17] = 0x8f\n 55335: u8 [s1 + 16] = 0x8d\n 55340: u8 [s1 + 15] = 0x24\n 55344: u8 [s1 + 14] = 0x40\n 55348: u8 [s1 + 13] = 0x65\n 55352: u8 [s1 + 12] = 0xff\n 55357: u8 [s1 + 11] = 0xf2\n 55362: u8 [s1 + 10] = 0x23\n 55366: u8 [s1 + 9] = 0xf1\n 55371: u8 [s1 + 8] = 0xf5\n 55376: u8 [s1 + 7] = 0x9\n 55380: u8 [s1 + 6] = 0x39\n 55384: u8 [s1 + 5] = 0xc4\n 55389: u8 [s1 + 4] = 0x15\n 55393: u8 [s1 + 3] = 0x5f\n 55397: u8 [s1 + 2] = 0x97\n 55402: u8 [s1 + 1] = 0x9\n 55406: a2 = 0xffffffe0\n 55416: a2 = a0 <u a2\n 55419: a2 = 0 if t1 != 0\n 55421: a3 = u64 [sp + 0x70]\n 55424: a2 = 0 if a3 != 0\n 55426: u8 [s1 + 0] = 0xe\n 55429: jump @1248 if a2 == 0\n      : @1228 (gas: 3)\n 55433: i32 a1 = a0 >> 0x5\n 55436: a4 = u64 [sp + 0x88]\n 55440: jump @1248 if a1 >=u 2047\n      : @1229 (gas: 4)\n 55446: a1 = a0 + 0x5f\n 55449: a2 = u64 [sp + 0xb8]\n 55453: a2 = a2 & a1\n 55456: jump @1248 if a2 >u 65536\n      : @1230 (gas: 3)\n 55463: i32 a0 = a0 + 0x20\n 55466: a1 = u64 [sp + 0xa8]\n 55470: jump @1232 if a5 >=u a2\n      : @1231 (gas: 4)\n 55473: a3 = u64 [sp + 0xb0]\n 55477: u32 [a3] = a2\n 55479: a5 = a2\n 55481: fallthrough\n      : @1232 (gas: 34)\n 55482: a0 = a0 + a1\n 55485: u8 [a0 + 31] = 0xd7\n 55490: u8 [a0 + 30] = 0xa8\n 55495: u8 [a0 + 29] = 0xd9\n 55500: u8 [a0 + 28] = 0x11\n 55504: u8 [a0 + 27] = 0x70\n 55508: u8 [a0 + 26] = 0x86\n 55513: u8 [a0 + 25] = 0xe6\n 55518: u8 [a0 + 24] = 0x49\n 55522: u8 [a0 + 23] = 0x93\n 55527: u8 [a0 + 22] = 0x33\n 55531: u8 [a0 + 21] = 0x85\n 55536: u8 [a0 + 20] = 0xf\n 55540: u8 [a0 + 19] = 0x46\n 55544: u8 [a0 + 18] = 0x29\n 55548: u8 [a0 + 17] = 0xa4\n 55553: u8 [a0 + 16] = 0x1a\n 55557: u8 [a0 + 15] = 0x5c\n 55561: u8 [a0 + 14] = 0xd7\n 55566: u8 [a0 + 13] = 0x34\n 55570: u8 [a0 + 12] = 0x4b\n 55574: u8 [a0 + 11] = 0xf0\n 55579: u8 [a0 + 10] = 0x42\n 55583: u8 [a0 + 9] = 0xe5\n 55588: u8 [a0 + 8] = 0xeb\n 55593: u8 [a0 + 7] = 0x56\n 55597: u8 [a0 + 6] = 0xe2\n 55602: u8 [a0 + 5] = 0xf8\n 55607: u8 [a0 + 4] = 0x3\n 55611: u8 [a0 + 3] = 0x83\n 55616: u8 [a0 + 2] = 0xad\n 55621: u8 [a0 + 1] = 0x1c\n 55625: u8 [a0 + 0] = 0x1e\n 55628: jump @1234 if a5 >=u a4\n      : @1233 (gas: 4)\n 55631: a0 = u64 [sp + 0xb0]\n 55635: u32 [a0] = a4\n 55637: a5 = a4\n 55639: fallthrough\n      : @1234 (gas: 101)\n 55640: u64 [sp + 0xa0] = a5\n 55644: a0 = u8 [t0 + 0x11]\n 55647: a1 = u8 [t0 + 0x10]\n 55650: a2 = u8 [t0 + 0x12]\n 55653: a3 = u8 [t0 + 0x13]\n 55656: a0 = a0 << 0x8\n 55659: a0 = a0 | a1\n 55662: a2 = a2 << 0x10\n 55665: a3 = a3 << 0x18\n 55668: a2 = a2 | a3\n 55671: a0 = a0 | a2\n 55674: a1 = u8 [t0 + 0x15]\n 55677: a2 = u8 [t0 + 0x14]\n 55680: a3 = u8 [t0 + 0x16]\n 55683: a4 = u8 [t0 + 0x17]\n 55686: a1 = a1 << 0x8\n 55689: a1 = a1 | a2\n 55692: a3 = a3 << 0x10\n 55695: a4 = a4 << 0x18\n 55698: a3 = a3 | a4\n 55701: a1 = a1 | a3\n 55704: a1 = a1 << 0x20\n 55707: ra = a1 | a0\n 55710: a1 = u8 [t0 + 0x1]\n 55713: a2 = u8 [t0]\n 55715: a3 = u8 [t0 + 0x2]\n 55718: a4 = u8 [t0 + 0x3]\n 55721: a1 = a1 << 0x8\n 55724: a1 = a1 | a2\n 55727: a3 = a3 << 0x10\n 55730: a4 = a4 << 0x18\n 55733: a3 = a3 | a4\n 55736: a1 = a1 | a3\n 55739: a2 = u8 [t0 + 0x5]\n 55742: a3 = u8 [t0 + 0x4]\n 55745: a4 = u8 [t0 + 0x6]\n 55748: a5 = u8 [t0 + 0x7]\n 55751: a2 = a2 << 0x8\n 55754: a2 = a2 | a3\n 55757: a4 = a4 << 0x10\n 55760: a5 = a5 << 0x18\n 55763: a4 = a4 | a5\n 55766: a2 = a2 | a4\n 55769: a2 = a2 << 0x20\n 55772: a4 = a2 | a1\n 55775: a1 = u8 [t0 + 0x19]\n 55778: a2 = u8 [t0 + 0x18]\n 55781: a3 = u8 [t0 + 0x1a]\n 55784: a5 = u8 [t0 + 0x1b]\n 55787: a1 = a1 << 0x8\n 55790: a1 = a1 | a2\n 55793: a3 = a3 << 0x10\n 55796: a5 = a5 << 0x18\n 55799: a3 = a3 | a5\n 55802: a1 = a1 | a3\n 55805: a2 = u8 [t0 + 0x1d]\n 55808: a3 = u8 [t0 + 0x1c]\n 55811: a5 = u8 [t0 + 0x1e]\n 55814: s1 = u8 [t0 + 0x1f]\n 55817: a2 = a2 << 0x8\n 55820: a2 = a2 | a3\n 55823: a5 = a5 << 0x10\n 55826: s1 = s1 << 0x18\n 55829: a5 = a5 | s1\n 55832: a2 = a2 | a5\n 55835: a2 = a2 << 0x20\n 55838: s1 = a2 | a1\n 55841: a1 = u8 [t0 + 0x9]\n 55844: a2 = u8 [t0 + 0x8]\n 55847: a3 = u8 [t0 + 0xa]\n 55850: a5 = u8 [t0 + 0xb]\n 55853: a1 = a1 << 0x8\n 55856: a1 = a1 | a2\n 55859: a3 = a3 << 0x10\n 55862: a5 = a5 << 0x18\n 55865: a3 = a3 | a5\n 55868: a1 = a1 | a3\n 55871: a2 = u8 [t0 + 0xd]\n 55874: a3 = u8 [t0 + 0xc]\n 55877: a5 = u8 [t0 + 0xe]\n 55880: a0 = u8 [t0 + 0xf]\n 55883: a2 = a2 << 0x8\n 55886: a2 = a2 | a3\n 55889: a5 = a5 << 0x10\n 55892: a0 = a0 << 0x18\n 55895: a0 = a0 | a5\n 55898: a0 = a0 | a2\n 55901: a0 = a0 << 0x20\n 55904: a0 = a0 | a1\n 55907: t2 = reverse a0\n 55909: t1 = reverse s1\n 55911: a5 = reverse a4\n 55913: a4 = reverse ra\n 55915: a0 = a4 | a5\n 55918: a2 = t1 | t2\n 55921: a2 = a2 | a0\n 55924: a2 = a2 >> 0x20\n 55927: a0 = a0 | t2\n 55930: a0 = a0 << 0x20\n 55933: a0 = a0 | a2\n 55936: jump @1248 if a0 != 0\n      : @1235 (gas: 2)\n 55940: i32 a0 = t1 >> 0x10\n 55943: jump @1248 if a0 != 0\n      : @1236 (gas: 4)\n 55947: a0 = t1 + 0x3f\n 55950: a1 = u64 [sp + 0xb8]\n 55954: a3 = a0 & a1\n 55957: jump @1248 if a3 >u 65536\n      : @1237 (gas: 5)\n 55964: u64 [sp + 0x70] = a5\n 55967: u64 [sp + 0x88] = a4\n 55971: a0 = u64 [sp + 0xa8]\n 55975: a1 = u64 [sp + 0xa0]\n 55979: jump @1239 if a1 >=u a3\n      : @1238 (gas: 4)\n 55982: a1 = u64 [sp + 0xb0]\n 55986: u32 [a1] = a3\n 55988: u64 [sp + 0xa0] = a3\n 55992: fallthrough\n      : @1239 (gas: 105)\n 55993: u64 [sp + 0x48] = a3\n 55996: i32 a4 = t1 + 0\n 55998: a4 = a4 + a0\n 56001: a2 = u8 [a4 + 0x1]\n 56004: a5 = u8 [a4]\n 56006: s1 = u8 [a4 + 0x2]\n 56009: a0 = u8 [a4 + 0x3]\n 56012: a2 = a2 << 0x8\n 56015: a2 = a2 | a5\n 56018: s1 = s1 << 0x10\n 56021: a0 = a0 << 0x18\n 56024: a0 = a0 | s1\n 56027: a0 = a0 | a2\n 56030: a2 = u8 [a4 + 0x5]\n 56033: a5 = u8 [a4 + 0x4]\n 56036: s1 = u8 [a4 + 0x6]\n 56039: a3 = u8 [a4 + 0x7]\n 56042: a2 = a2 << 0x8\n 56045: a2 = a2 | a5\n 56048: s1 = s1 << 0x10\n 56051: a3 = a3 << 0x18\n 56054: a3 = a3 | s1\n 56057: a2 = a2 | a3\n 56060: a2 = a2 << 0x20\n 56063: s1 = a2 | a0\n 56066: a0 = u8 [a4 + 0x9]\n 56069: a2 = u8 [a4 + 0x8]\n 56072: a3 = u8 [a4 + 0xa]\n 56075: a5 = u8 [a4 + 0xb]\n 56078: a0 = a0 << 0x8\n 56081: a0 = a0 | a2\n 56084: a3 = a3 << 0x10\n 56087: a5 = a5 << 0x18\n 56090: a3 = a3 | a5\n 56093: a0 = a0 | a3\n 56096: a2 = u8 [a4 + 0xd]\n 56099: a3 = u8 [a4 + 0xc]\n 56102: a5 = u8 [a4 + 0xe]\n 56105: a1 = u8 [a4 + 0xf]\n 56108: a2 = a2 << 0x8\n 56111: a2 = a2 | a3\n 56114: a5 = a5 << 0x10\n 56117: a1 = a1 << 0x18\n 56120: a1 = a1 | a5\n 56123: a1 = a1 | a2\n 56126: a1 = a1 << 0x20\n 56129: t0 = a1 | a0\n 56132: a0 = u8 [a4 + 0x11]\n 56135: a1 = u8 [a4 + 0x10]\n 56138: a2 = u8 [a4 + 0x12]\n 56141: a3 = u8 [a4 + 0x13]\n 56144: a0 = a0 << 0x8\n 56147: a0 = a0 | a1\n 56150: a2 = a2 << 0x10\n 56153: a3 = a3 << 0x18\n 56156: a2 = a2 | a3\n 56159: a0 = a0 | a2\n 56162: a1 = u8 [a4 + 0x15]\n 56165: a2 = u8 [a4 + 0x14]\n 56168: a3 = u8 [a4 + 0x16]\n 56171: a5 = u8 [a4 + 0x17]\n 56174: a1 = a1 << 0x8\n 56177: a1 = a1 | a2\n 56180: a3 = a3 << 0x10\n 56183: a5 = a5 << 0x18\n 56186: a3 = a3 | a5\n 56189: a1 = a1 | a3\n 56192: a1 = a1 << 0x20\n 56195: ra = a1 | a0\n 56198: a0 = u8 [a4 + 0x19]\n 56201: a1 = u8 [a4 + 0x18]\n 56204: a2 = u8 [a4 + 0x1a]\n 56207: a3 = u8 [a4 + 0x1b]\n 56210: a0 = a0 << 0x8\n 56213: a0 = a0 | a1\n 56216: a2 = a2 << 0x10\n 56219: a3 = a3 << 0x18\n 56222: a2 = a2 | a3\n 56225: a0 = a0 | a2\n 56228: a1 = u8 [a4 + 0x1d]\n 56231: a2 = u8 [a4 + 0x1c]\n 56234: a3 = u8 [a4 + 0x1e]\n 56237: a4 = u8 [a4 + 0x1f]\n 56240: a1 = a1 << 0x8\n 56243: a1 = a1 | a2\n 56246: a3 = a3 << 0x10\n 56249: a4 = a4 << 0x18\n 56252: a3 = a3 | a4\n 56255: a1 = a1 | a3\n 56258: a1 = a1 << 0x20\n 56261: a0 = a0 | a1\n 56264: a0 = reverse a0\n 56266: a1 = reverse ra\n 56268: a2 = reverse t0\n 56270: a3 = reverse s1\n 56272: a4 = a3 >u 0\n 56274: a5 = a2 >u 0\n 56276: a5 = a4 if a3 != 0\n 56279: a4 = a1 >u 0\n 56281: a0 = a0 <u 0x4\n 56284: a0 = a0 ^ 0x1\n 56287: a0 = a4 if a1 != 0\n 56290: a2 = a2 | a3\n 56293: a0 = a5 if a2 != 0\n 56296: jump @1250 if a0 == 0\n      : @1240 (gas: 8)\n 56300: a0 = u64 [sp + 0x70]\n 56303: a0 = t2 | a0\n 56306: a1 = 0xffffff80\n 56316: a1 = t1 <u a1\n 56319: a2 = u64 [sp + 0x88]\n 56323: a1 = 0 if a2 != 0\n 56325: a1 = 0 if a0 != 0\n 56327: jump @1248 if a1 == 0\n      : @1241 (gas: 4)\n 56331: i32 a0 = t1 >> 0x7\n 56334: a3 = u64 [sp + 0xa8]\n 56338: a4 = u64 [sp + 0xa0]\n 56342: jump @1248 if a0 >=u 511\n      : @1242 (gas: 4)\n 56348: a0 = t1 + 0xbf\n 56352: a2 = u64 [sp + 0xb8]\n 56356: a2 = a2 & a0\n 56359: jump @1248 if a2 >u 65536\n      : @1243 (gas: 2)\n 56366: i32 a1 = t1 + 0x80\n 56370: jump @1245 if a4 >=u a2\n      : @1244 (gas: 4)\n 56373: a0 = u64 [sp + 0xb0]\n 56377: u32 [a0] = a2\n 56379: a4 = a2\n 56381: fallthrough\n      : @1245 (gas: 68)\n 56382: a1 = a1 + a3\n 56385: a2 = u64 [sp + 0x58]\n 56388: u8 [a1 + 0x8] = a2\n 56391: a3 = u64 [sp + 0x50]\n 56394: a0 = a3 >> 0x38\n 56397: u8 [a1 + 0x7] = a0\n 56400: a0 = a3 >> 0x30\n 56403: u8 [a1 + 0x6] = a0\n 56406: a0 = a3 >> 0x28\n 56409: u8 [a1 + 0x5] = a0\n 56412: a0 = a3 >> 0x20\n 56415: u8 [a1 + 0x4] = a0\n 56418: a0 = a3 >> 0x18\n 56421: u8 [a1 + 0x3] = a0\n 56424: a0 = a3 >> 0x10\n 56427: u8 [a1 + 0x2] = a0\n 56430: a0 = a3 >> 0x8\n 56433: u8 [a1 + 0x1] = a0\n 56436: u8 [a1] = a3\n 56438: a3 = u64 [sp + 0x60]\n 56441: u8 [a1 + 0x10] = a3\n 56444: a0 = a2 >> 0x38\n 56447: u8 [a1 + 0xf] = a0\n 56450: a0 = a2 >> 0x30\n 56453: u8 [a1 + 0xe] = a0\n 56456: a0 = a2 >> 0x28\n 56459: u8 [a1 + 0xd] = a0\n 56462: a0 = a2 >> 0x20\n 56465: u8 [a1 + 0xc] = a0\n 56468: a0 = a2 >> 0x18\n 56471: u8 [a1 + 0xb] = a0\n 56474: a0 = a2 >> 0x10\n 56477: u8 [a1 + 0xa] = a0\n 56480: a0 = a2 >> 0x8\n 56483: u8 [a1 + 0x9] = a0\n 56486: a2 = u64 [sp + 0x68]\n 56489: u8 [a1 + 0x18] = a2\n 56492: a0 = a3 >> 0x38\n 56495: u8 [a1 + 0x17] = a0\n 56498: a0 = a3 >> 0x30\n 56501: u8 [a1 + 0x16] = a0\n 56504: a0 = a3 >> 0x28\n 56507: u8 [a1 + 0x15] = a0\n 56510: a0 = a3 >> 0x20\n 56513: u8 [a1 + 0x14] = a0\n 56516: a0 = a3 >> 0x18\n 56519: u8 [a1 + 0x13] = a0\n 56522: a0 = a3 >> 0x10\n 56525: u8 [a1 + 0x12] = a0\n 56528: a0 = a3 >> 0x8\n 56531: u8 [a1 + 0x11] = a0\n 56534: a0 = a2 >> 0x38\n 56537: u8 [a1 + 0x1f] = a0\n 56540: a0 = a2 >> 0x30\n 56543: u8 [a1 + 0x1e] = a0\n 56546: a0 = a2 >> 0x28\n 56549: u8 [a1 + 0x1d] = a0\n 56552: a0 = a2 >> 0x20\n 56555: u8 [a1 + 0x1c] = a0\n 56558: a0 = a2 >> 0x18\n 56561: u8 [a1 + 0x1b] = a0\n 56564: a0 = a2 >> 0x10\n 56567: u8 [a1 + 0x1a] = a0\n 56570: a0 = a2 >> 0x8\n 56573: u8 [a1 + 0x19] = a0\n 56576: a1 = u64 [sp + 0x98]\n 56580: a2 = u64 [sp + 0x48]\n 56583: jump @1247 if a4 >=u a2\n      : @1246 (gas: 3)\n 56586: a0 = u64 [sp + 0xb0]\n 56590: u32 [a0] = a2\n 56592: fallthrough\n      : @1247 (gas: 14)\n 56593: a0 = u64 [sp + 0x8]\n 56596: u64 [a0] = a1\n 56598: a1 = u64 [sp + 0x90]\n 56602: u64 [a0 + 0x8] = a1\n 56605: a1 = u64 [sp + 0x78]\n 56608: u64 [a0 + 0x10] = a1\n 56611: a1 = u64 [sp + 0x80]\n 56615: u64 [a0 + 0x18] = a1\n 56618: sp = s0 + 0xfffffffffffffee0\n 56622: ra = u64 [sp + 0x118]\n 56626: s0 = u64 [sp + 0x110]\n 56630: s1 = u64 [sp + 0x108]\n 56634: sp = sp + 0x120\n 56638: ret\n      : @1248 (gas: 1)\n 56640: trap\n      : @1249 (gas: 17)\n 56641: u64 [ra + 16] = 0\n 56644: u64 [ra + 24] = 0\n 56647: u64 [ra + 8] = 0\n 56650: u64 [ra + 0] = 0x717b484e\n 56656: u32 [ra + 32] = 0x41000000\n 56663: u32 [ra + 20] = 0\n 56666: u32 [ra + 24] = 0\n 56669: u32 [ra + 28] = 0\n 56672: u32 [ra + 8] = 0\n 56675: u32 [ra + 12] = 0\n 56678: u32 [ra + 16] = 0\n 56681: u32 [ra + 4] = 0\n 56684: i32 a1 = ra + 0\n 56686: a0 = 0x1\n 56689: a2 = 0x24\n 56692: ecalli 5 // 'seal_return'\n 56694: fallthrough\n      : @1250 (gas: 18)\n 56695: a1 = u64 [sp + 0xa8]\n 56699: u64 [a1 + 16] = 0\n 56702: u64 [a1 + 24] = 0\n 56705: u64 [a1 + 8] = 0\n 56708: u64 [a1 + 0] = 0x717b484e\n 56714: u32 [a1 + 32] = 0x32000000\n 56721: u32 [a1 + 20] = 0\n 56724: u32 [a1 + 24] = 0\n 56727: u32 [a1 + 28] = 0\n 56730: u32 [a1 + 8] = 0\n 56733: u32 [a1 + 12] = 0\n 56736: u32 [a1 + 16] = 0\n 56739: u32 [a1 + 4] = 0\n 56742: i32 a1 = a1 + 0\n 56744: a0 = 0x1\n 56747: a2 = 0x24\n 56750: ecalli 5 // 'seal_return'\n 56752: fallthrough\n      : @1251 (gas: 17)\n 56753: u64 [t1 + 16] = 0\n 56756: u64 [t1 + 24] = 0\n 56759: u64 [t1 + 8] = 0\n 56762: u64 [t1 + 0] = 0x717b484e\n 56768: u32 [t1 + 32] = 0x41000000\n 56775: u32 [t1 + 20] = 0\n 56778: u32 [t1 + 24] = 0\n 56781: u32 [t1 + 28] = 0\n 56784: u32 [t1 + 8] = 0\n 56787: u32 [t1 + 12] = 0\n 56790: u32 [t1 + 16] = 0\n 56793: u32 [t1 + 4] = 0\n 56796: i32 a1 = t1 + 0\n 56798: a0 = 0x1\n 56801: a2 = 0x24\n 56804: ecalli 5 // 'seal_return'\n 56806: fallthrough\n      : @1252 (gas: 18)\n 56807: u64 [t2 + 16] = 0\n 56810: u64 [t2 + 24] = 0\n 56813: u64 [t2 + 8] = 0\n 56816: u64 [t2 + 0] = 0x717b484e\n 56822: u32 [t2 + 32] = 0x41000000\n 56829: u32 [t2 + 20] = 0\n 56832: u32 [t2 + 24] = 0\n 56835: u32 [t2 + 28] = 0\n 56838: u32 [t2 + 8] = 0\n 56841: u32 [t2 + 12] = 0\n 56844: u32 [t2 + 16] = 0\n 56847: u32 [t2 + 4] = 0\n 56850: i32 a1 = t2 + 0\n 56852: a0 = 0x1\n 56855: a2 = 0x24\n 56858: ra = 0x82\n 56862: ecalli 5 // 'seal_return'\n 56864: fallthrough\n      : @1253 [@dyn 65] (gas: 27)\n 56865: sp = sp + 0xfffffffffffffec0\n 56869: u64 [sp + 0x138] = ra\n 56873: u64 [sp + 0x130] = s0\n 56877: u64 [sp + 0x128] = s1\n 56881: s0 = sp + 0x140\n 56885: sp = sp & 0xffffffffffffffe0\n 56888: a3 = u64 [a2 + 0x18]\n 56891: u64 [sp + 0x48] = a3\n 56894: a3 = u64 [a2 + 0x10]\n 56897: u64 [sp + 0x50] = a3\n 56900: a3 = u64 [a2 + 0x8]\n 56903: u64 [sp + 0x58] = a3\n 56906: a2 = u64 [a2]\n 56908: u64 [sp + 0x60] = a2\n 56911: a2 = 0x20044\n 56916: a4 = u64 [a1 + 0x18]\n 56919: u64 [sp + 0x80] = a4\n 56923: a4 = u64 [a1 + 0x10]\n 56926: u64 [sp + 0x78] = a4\n 56929: a4 = u64 [a1 + 0x8]\n 56932: u64 [sp + 0x88] = a4\n 56936: u64 [sp + 0xb8] = a2\n 56940: t1 = i32 [0x20044]\n 56945: a1 = u64 [a1]\n 56947: u64 [sp + 0x90] = a1\n 56951: u64 [sp + 0x40] = a0\n 56954: jump @1255 if t1 >u 95\n      : @1254 (gas: 4)\n 56958: t1 = 0x60\n 56961: a0 = u64 [sp + 0xb8]\n 56965: u32 [a0] = t1\n 56967: fallthrough\n      : @1255 (gas: 14)\n 56968: t0 = 0x20050\n 56973: a0 = u64 [0x200a0]\n 56978: a1 = u64 [0x200a8]\n 56983: a2 = u64 [0x20090]\n 56988: a4 = u64 [0x20098]\n 56993: ra = reverse a0\n 56995: t2 = reverse a1\n 56997: a0 = reverse a2\n 56999: s1 = reverse a4\n 57001: a3 = s1 | a0\n 57004: a1 = t2 <u 0xffffffffffffffc0\n 57007: a1 = 0 if ra != 0\n 57009: a1 = 0 if a3 != 0\n 57011: jump @1306 if a1 == 0\n      : @1256 (gas: 25)\n 57015: a1 = t2 + 0x40\n 57018: a2 = a1 <u t2\n 57021: a4 = ra + a2\n 57024: a5 = a4 <u ra\n 57027: a5 = a2 if a2 == 0\n 57030: a5 = a5 + s1\n 57033: a2 = a5 <u s1\n 57036: a2 = a2 + a0\n 57039: a2 = reverse a2\n 57041: a5 = reverse a5\n 57043: a4 = reverse a4\n 57045: a1 = reverse a1\n 57047: u64 [0x200a8] = a1\n 57052: u64 [0x200a0] = a4\n 57057: u64 [0x20098] = a5\n 57062: a1 = t2 | s1\n 57065: u64 [sp + 0x38] = a0\n 57068: a4 = ra | a0\n 57071: a1 = a1 | a4\n 57074: a1 = a1 >> 0x20\n 57077: a4 = a4 | s1\n 57080: a4 = a4 << 0x20\n 57083: a1 = a1 | a4\n 57086: u64 [0x20090] = a2\n 57091: jump @1305 if a1 != 0\n      : @1257 (gas: 2)\n 57095: i32 a1 = t2 >> 0x10\n 57098: jump @1305 if a1 != 0\n      : @1258 (gas: 3)\n 57102: a1 = t2 + 0x3f\n 57105: a1 = a1 & 0x1ffe0\n 57110: jump @1305 if a1 >u 65536\n      : @1259 (gas: 2)\n 57117: a5 = 0x20050\n 57122: jump @1261 if t1 >=u a1\n      : @1260 (gas: 4)\n 57125: a2 = u64 [sp + 0xb8]\n 57129: u32 [a2] = a1\n 57131: t1 = a1\n 57133: fallthrough\n      : @1261 (gas: 39)\n 57134: i32 a1 = t2 + 0\n 57136: a2 = a5 + a1\n 57139: u8 [a2 + 31] = 0\n 57142: u8 [a2 + 30] = 0\n 57145: u8 [a2 + 29] = 0\n 57148: u8 [a2 + 28] = 0\n 57151: u8 [a2 + 27] = 0\n 57154: u8 [a2 + 26] = 0\n 57157: u8 [a2 + 25] = 0\n 57160: u8 [a2 + 24] = 0\n 57163: u8 [a2 + 23] = 0\n 57166: u8 [a2 + 22] = 0\n 57169: u8 [a2 + 21] = 0\n 57172: u8 [a2 + 20] = 0\n 57175: u8 [a2 + 19] = 0\n 57178: u8 [a2 + 18] = 0\n 57181: u8 [a2 + 17] = 0\n 57184: u8 [a2 + 16] = 0\n 57187: u8 [a2 + 15] = 0\n 57190: u8 [a2 + 14] = 0\n 57193: u8 [a2 + 13] = 0\n 57196: u8 [a2 + 12] = 0\n 57199: u8 [a2 + 11] = 0\n 57202: u8 [a2 + 10] = 0\n 57205: u8 [a2 + 9] = 0\n 57208: u8 [a2 + 8] = 0\n 57211: u8 [a2 + 7] = 0\n 57214: u8 [a2 + 6] = 0\n 57217: u8 [a2 + 5] = 0\n 57220: u8 [a2 + 4] = 0\n 57223: u8 [a2 + 3] = 0\n 57226: u8 [a2 + 2] = 0\n 57229: u8 [a2 + 1] = 0\n 57232: a1 = 0xffffffe0\n 57242: a1 = t2 <u a1\n 57245: a1 = 0 if ra != 0\n 57247: a1 = 0 if a3 != 0\n 57249: u8 [a2 + 0] = 0\n 57251: jump @1305 if a1 == 0\n      : @1262 (gas: 2)\n 57255: i32 a0 = t2 >> 0x5\n 57258: jump @1305 if a0 >=u 2047\n      : @1263 (gas: 3)\n 57264: a0 = t2 + 0x5f\n 57267: a0 = a0 & 0x1ffe0\n 57272: jump @1305 if a0 >u 65536\n      : @1264 (gas: 4)\n 57279: u64 [sp + 152] = 0x1ffe0\n 57286: u64 [sp + 0x28] = a2\n 57289: i32 a1 = t2 + 0x20\n 57292: jump @1266 if t1 >=u a0\n      : @1265 (gas: 4)\n 57295: a2 = u64 [sp + 0xb8]\n 57299: u32 [a2] = a0\n 57301: t1 = a0\n 57303: fallthrough\n      : @1266 (gas: 50)\n 57304: u64 [sp + 0x18] = s1\n 57307: a0 = a5 + a1\n 57310: u8 [a0 + 31] = 0\n 57313: u8 [a0 + 30] = 0\n 57316: u8 [a0 + 29] = 0\n 57319: u8 [a0 + 28] = 0\n 57322: u8 [a0 + 27] = 0\n 57325: u8 [a0 + 26] = 0\n 57328: u8 [a0 + 25] = 0\n 57331: u8 [a0 + 24] = 0\n 57334: u8 [a0 + 23] = 0\n 57337: u8 [a0 + 22] = 0\n 57340: u8 [a0 + 21] = 0\n 57343: u8 [a0 + 20] = 0\n 57346: u8 [a0 + 19] = 0\n 57349: u8 [a0 + 18] = 0\n 57352: u8 [a0 + 17] = 0\n 57355: u8 [a0 + 16] = 0\n 57358: u8 [a0 + 15] = 0\n 57361: u8 [a0 + 14] = 0\n 57364: u8 [a0 + 13] = 0\n 57367: u8 [a0 + 12] = 0\n 57370: u8 [a0 + 11] = 0\n 57373: u8 [a0 + 10] = 0\n 57376: u8 [a0 + 9] = 0\n 57379: u8 [a0 + 8] = 0\n 57382: u8 [a0 + 7] = 0\n 57385: u8 [a0 + 6] = 0\n 57388: u8 [a0 + 5] = 0\n 57391: u8 [a0 + 4] = 0\n 57394: u8 [a0 + 3] = 0\n 57397: u8 [a0 + 2] = 0\n 57400: u8 [a0 + 1] = 0\n 57403: u8 [a0 + 0] = 0\n 57405: a0 = u64 [0x200a0]\n 57410: a1 = u64 [0x200a8]\n 57415: a2 = u64 [0x20090]\n 57420: a4 = u64 [0x20098]\n 57425: s1 = reverse a0\n 57427: a3 = reverse a1\n 57429: t0 = reverse a2\n 57431: a0 = reverse a4\n 57433: a4 = a3\n 57435: a1 = a0 | t0\n 57438: a2 = a3 <u 0xffffffffffffffa0\n 57441: a2 = 0 if s1 != 0\n 57443: u64 [sp + 0x70] = a1\n 57446: a2 = 0 if a1 != 0\n 57448: a3 = 0x20050\n 57453: jump @1307 if a2 == 0\n      : @1267 (gas: 28)\n 57457: a2 = a4 + 0x60\n 57460: a5 = a4\n 57462: a4 = a2 <u a4\n 57465: a1 = s1 + a4\n 57468: u64 [sp + 0xa0] = s1\n 57472: s1 = u64 [sp + 0xa0]\n 57476: s1 = a1 <u s1\n 57479: s1 = a4 if a4 == 0\n 57482: s1 = s1 + a0\n 57485: a4 = s1 <u a0\n 57488: a4 = a4 + t0\n 57491: a4 = reverse a4\n 57493: s1 = reverse s1\n 57495: a1 = reverse a1\n 57497: a2 = reverse a2\n 57499: u64 [0x200a8] = a2\n 57504: u64 [0x200a0] = a1\n 57509: u64 [0x20098] = s1\n 57514: a2 = a5 | a0\n 57517: a1 = u64 [sp + 0xa0]\n 57521: a1 = a1 | t0\n 57524: a2 = a2 | a1\n 57527: a2 = a2 >> 0x20\n 57530: a0 = a0 | a1\n 57533: a0 = a0 << 0x20\n 57536: a0 = a0 | a2\n 57539: u64 [0x20090] = a4\n 57544: jump @1305 if a0 != 0\n      : @1268 (gas: 3)\n 57548: i32 a0 = a5 >> 0x10\n 57551: a1 = u64 [sp + 0x98]\n 57555: jump @1305 if a0 != 0\n      : @1269 (gas: 3)\n 57559: a0 = a5 + 0x7f\n 57562: a1 = a1 & a0\n 57565: jump @1305 if a1 >u 65536\n      : @1270 (gas: 4)\n 57572: u64 [sp + 0x68] = t2\n 57575: u64 [sp + 0x10] = ra\n 57578: a2 = i32 [0x20040]\n 57583: jump @1272 if t1 >=u a1\n      : @1271 (gas: 3)\n 57586: a0 = u64 [sp + 0xb8]\n 57590: u32 [a0] = a1\n 57592: fallthrough\n      : @1272 (gas: 8)\n 57593: u64 [sp + 0x20] = a1\n 57596: u64 [sp + 0xa8] = a5\n 57600: i32 s1 = a5 + 0\n 57602: u64 [sp + 0xb0] = a3\n 57606: i32 a0 = a3 + s1\n 57609: a1 = 0x60\n 57612: ecalli 1 // 'call_data_copy'\n 57614: fallthrough\n      : @1273 (gas: 12)\n 57615: a4 = u64 [sp + 0x90]\n 57619: a3 = u64 [sp + 0x78]\n 57622: a0 = a4 | a3\n 57625: a1 = u64 [sp + 0x88]\n 57629: a2 = u64 [sp + 0x80]\n 57633: a1 = a1 | a2\n 57636: a0 = a0 | a1\n 57639: a0 = a0 >> 0x20\n 57642: a1 = a1 | a3\n 57645: a1 = a1 << 0x20\n 57648: a0 = a0 | a1\n 57651: jump @1305 if a0 != 0\n      : @1274 (gas: 3)\n 57655: i32 a0 = a4 >> 0x10\n 57658: a2 = u64 [sp + 0x98]\n 57662: jump @1305 if a0 != 0\n      : @1275 (gas: 3)\n 57666: a0 = a4 + 0x3f\n 57669: a1 = a0 & a2\n 57672: jump @1305 if a1 >u 65536\n      : @1276 (gas: 5)\n 57679: a0 = u64 [sp + 0xb8]\n 57683: t0 = i32 [a0]\n 57685: a5 = u64 [sp + 0xb0]\n 57689: a3 = u64 [sp + 0xa8]\n 57693: jump @1278 if t0 >=u a1\n      : @1277 (gas: 4)\n 57696: a0 = u64 [sp + 0xb8]\n 57700: u32 [a0] = a1\n 57702: t0 = a1\n 57704: fallthrough\n      : @1278 (gas: 4)\n 57705: u64 [sp + 0x30] = s1\n 57708: a0 = a3 + 0x3f\n 57711: t1 = a0 & a2\n 57714: jump @1305 if t1 >u 65536\n      : @1279 (gas: 94)\n 57721: i32 a4 = a4 + 0\n 57723: a4 = a4 + a5\n 57726: a0 = u8 [a4 + 0x19]\n 57729: a1 = u8 [a4 + 0x18]\n 57732: a3 = u8 [a4 + 0x1a]\n 57735: a5 = u8 [a4 + 0x1b]\n 57738: a0 = a0 << 0x8\n 57741: a0 = a0 | a1\n 57744: a3 = a3 << 0x10\n 57747: a5 = a5 << 0x18\n 57750: a3 = a3 | a5\n 57753: a0 = a0 | a3\n 57756: a1 = u8 [a4 + 0x1d]\n 57759: a3 = u8 [a4 + 0x1c]\n 57762: a5 = u8 [a4 + 0x1e]\n 57765: s1 = u8 [a4 + 0x1f]\n 57768: a1 = a1 << 0x8\n 57771: a1 = a1 | a3\n 57774: a5 = a5 << 0x10\n 57777: s1 = s1 << 0x18\n 57780: a5 = a5 | s1\n 57783: a1 = a1 | a5\n 57786: a1 = a1 << 0x20\n 57789: ra = a1 | a0\n 57792: a0 = u8 [a4 + 0x11]\n 57795: a3 = u8 [a4 + 0x10]\n 57798: a5 = u8 [a4 + 0x12]\n 57801: s1 = u8 [a4 + 0x13]\n 57804: a0 = a0 << 0x8\n 57807: a0 = a0 | a3\n 57810: a5 = a5 << 0x10\n 57813: s1 = s1 << 0x18\n 57816: a5 = a5 | s1\n 57819: a0 = a0 | a5\n 57822: a3 = u8 [a4 + 0x15]\n 57825: a5 = u8 [a4 + 0x14]\n 57828: s1 = u8 [a4 + 0x16]\n 57831: a2 = u8 [a4 + 0x17]\n 57834: a3 = a3 << 0x8\n 57837: a3 = a3 | a5\n 57840: s1 = s1 << 0x10\n 57843: a2 = a2 << 0x18\n 57846: a2 = a2 | s1\n 57849: a2 = a2 | a3\n 57852: a2 = a2 << 0x20\n 57855: a3 = a2 | a0\n 57858: a0 = u8 [a4 + 0x9]\n 57861: a2 = u8 [a4 + 0x8]\n 57864: a5 = u8 [a4 + 0xa]\n 57867: s1 = u8 [a4 + 0xb]\n 57870: a0 = a0 << 0x8\n 57873: a0 = a0 | a2\n 57876: a5 = a5 << 0x10\n 57879: s1 = s1 << 0x18\n 57882: a5 = a5 | s1\n 57885: t2 = a5 | a0\n 57888: a2 = u8 [a4 + 0xd]\n 57891: a5 = u8 [a4 + 0xc]\n 57894: s1 = u8 [a4 + 0xe]\n 57897: a0 = u8 [a4 + 0xf]\n 57900: a2 = a2 << 0x8\n 57903: a2 = a2 | a5\n 57906: s1 = s1 << 0x10\n 57909: a0 = a0 << 0x18\n 57912: a0 = a0 | s1\n 57915: a0 = a0 | a2\n 57918: a0 = a0 << 0x20\n 57921: a5 = a0 | t2\n 57924: a0 = u8 [a4 + 0x1]\n 57927: a2 = u8 [a4]\n 57929: s1 = u8 [a4 + 0x2]\n 57932: a1 = u8 [a4 + 0x3]\n 57935: a0 = a0 << 0x8\n 57938: a0 = a0 | a2\n 57941: s1 = s1 << 0x10\n 57944: a1 = a1 << 0x18\n 57947: a1 = a1 | s1\n 57950: a0 = a0 | a1\n 57953: a1 = u8 [a4 + 0x5]\n 57956: a2 = u8 [a4 + 0x4]\n 57959: s1 = u8 [a4 + 0x6]\n 57962: a4 = u8 [a4 + 0x7]\n 57965: a1 = a1 << 0x8\n 57968: a1 = a1 | a2\n 57971: s1 = s1 << 0x10\n 57974: a4 = a4 << 0x18\n 57977: a4 = a4 | s1\n 57980: a1 = a1 | a4\n 57983: a1 = a1 << 0x20\n 57986: a4 = a1 | a0\n 57989: s1 = u64 [sp + 0x30]\n 57992: a0 = u64 [sp + 0xb0]\n 57996: s1 = s1 + a0\n 57999: jump @1281 if t0 >=u t1\n      : @1280 (gas: 4)\n 58002: a0 = u64 [sp + 0xb8]\n 58006: u32 [a0] = t1\n 58008: t0 = t1\n 58010: fallthrough\n      : @1281 (gas: 70)\n 58011: u8 [s1] = a4\n 58013: u8 [s1 + 0x8] = a5\n 58016: a0 = a4 >> 0x38\n 58019: u8 [s1 + 0x7] = a0\n 58022: a0 = a4 >> 0x30\n 58025: u8 [s1 + 0x6] = a0\n 58028: a0 = a4 >> 0x28\n 58031: u8 [s1 + 0x5] = a0\n 58034: a0 = a4 >> 0x20\n 58037: u8 [s1 + 0x4] = a0\n 58040: a0 = a4 >> 0x18\n 58043: u8 [s1 + 0x3] = a0\n 58046: a0 = a4 >> 0x10\n 58049: u8 [s1 + 0x2] = a0\n 58052: a4 = a4 >> 0x8\n 58055: u8 [s1 + 0x1] = a4\n 58058: u8 [s1 + 0x10] = a3\n 58061: a0 = a5 >> 0x38\n 58064: u8 [s1 + 0xf] = a0\n 58067: a0 = a5 >> 0x30\n 58070: u8 [s1 + 0xe] = a0\n 58073: a0 = a5 >> 0x28\n 58076: u8 [s1 + 0xd] = a0\n 58079: a0 = a5 >> 0x20\n 58082: u8 [s1 + 0xc] = a0\n 58085: a0 = a5 >> 0x18\n 58088: u8 [s1 + 0xb] = a0\n 58091: a0 = a5 >> 0x10\n 58094: u8 [s1 + 0xa] = a0\n 58097: a5 = a5 >> 0x8\n 58100: u8 [s1 + 0x9] = a5\n 58103: u8 [s1 + 0x18] = ra\n 58106: a0 = a3 >> 0x38\n 58109: u8 [s1 + 0x17] = a0\n 58112: a0 = a3 >> 0x30\n 58115: u8 [s1 + 0x16] = a0\n 58118: a0 = a3 >> 0x28\n 58121: u8 [s1 + 0x15] = a0\n 58124: a0 = a3 >> 0x20\n 58127: u8 [s1 + 0x14] = a0\n 58130: a0 = a3 >> 0x18\n 58133: u8 [s1 + 0x13] = a0\n 58136: a0 = a3 >> 0x10\n 58139: u8 [s1 + 0x12] = a0\n 58142: a3 = a3 >> 0x8\n 58145: u8 [s1 + 0x11] = a3\n 58148: a0 = ra >> 0x38\n 58151: u8 [s1 + 0x1f] = a0\n 58154: a0 = ra >> 0x30\n 58157: u8 [s1 + 0x1e] = a0\n 58160: a0 = ra >> 0x28\n 58163: u8 [s1 + 0x1d] = a0\n 58166: a0 = ra >> 0x20\n 58169: u8 [s1 + 0x1c] = a0\n 58172: a0 = ra >> 0x18\n 58175: u8 [s1 + 0x1b] = a0\n 58178: a0 = ra >> 0x10\n 58181: u8 [s1 + 0x1a] = a0\n 58184: a0 = ra >> 0x8\n 58187: a1 = u64 [sp + 0x80]\n 58191: a2 = u64 [sp + 0x78]\n 58194: a1 = a1 | a2\n 58197: a2 = 0xffffffe0\n 58207: a5 = u64 [sp + 0x90]\n 58211: a2 = a5 <u a2\n 58214: a3 = u64 [sp + 0x88]\n 58218: a2 = 0 if a3 != 0\n 58220: a2 = 0 if a1 != 0\n 58222: u8 [s1 + 0x19] = a0\n 58225: jump @1305 if a2 == 0\n      : @1282 (gas: 5)\n 58229: i32 a0 = a5 >> 0x5\n 58232: a2 = u64 [sp + 0x98]\n 58236: a3 = u64 [sp + 0xb0]\n 58240: a4 = u64 [sp + 0xa8]\n 58244: jump @1305 if a0 >=u 2047\n      : @1283 (gas: 3)\n 58250: a0 = a5 + 0x5f\n 58253: a1 = a0 & a2\n 58256: jump @1305 if a1 >u 65536\n      : @1284 (gas: 1)\n 58263: jump @1286 if t0 >=u a1\n      : @1285 (gas: 4)\n 58266: a0 = u64 [sp + 0xb8]\n 58270: u32 [a0] = a1\n 58272: t0 = a1\n 58274: fallthrough\n      : @1286 (gas: 7)\n 58275: a0 = 0xffffffe0\n 58285: a0 = a4 <u a0\n 58288: a1 = u64 [sp + 0xa0]\n 58292: a0 = 0 if a1 != 0\n 58294: a1 = u64 [sp + 0x70]\n 58297: a0 = 0 if a1 != 0\n 58299: jump @1305 if a0 == 0\n      : @1287 (gas: 2)\n 58303: i32 a0 = a4 >> 0x5\n 58306: jump @1305 if a0 >=u 2047\n      : @1288 (gas: 3)\n 58312: a0 = a4 + 0x5f\n 58315: t1 = a0 & a2\n 58318: jump @1305 if t1 >u 65536\n      : @1289 (gas: 93)\n 58325: i32 a4 = a5 + 0x20\n 58328: a4 = a4 + a3\n 58331: a1 = u8 [a4 + 0x19]\n 58334: a2 = u8 [a4 + 0x18]\n 58337: a3 = u8 [a4 + 0x1a]\n 58340: a5 = u8 [a4 + 0x1b]\n 58343: a1 = a1 << 0x8\n 58346: a1 = a1 | a2\n 58349: a3 = a3 << 0x10\n 58352: a5 = a5 << 0x18\n 58355: a3 = a3 | a5\n 58358: a1 = a1 | a3\n 58361: a2 = u8 [a4 + 0x1d]\n 58364: a3 = u8 [a4 + 0x1c]\n 58367: a5 = u8 [a4 + 0x1e]\n 58370: a0 = u8 [a4 + 0x1f]\n 58373: a2 = a2 << 0x8\n 58376: a2 = a2 | a3\n 58379: a5 = a5 << 0x10\n 58382: a0 = a0 << 0x18\n 58385: a0 = a0 | a5\n 58388: a0 = a0 | a2\n 58391: a0 = a0 << 0x20\n 58394: ra = a0 | a1\n 58397: a0 = u8 [a4 + 0x11]\n 58400: a2 = u8 [a4 + 0x10]\n 58403: a3 = u8 [a4 + 0x12]\n 58406: a5 = u8 [a4 + 0x13]\n 58409: a0 = a0 << 0x8\n 58412: a0 = a0 | a2\n 58415: a3 = a3 << 0x10\n 58418: a5 = a5 << 0x18\n 58421: a3 = a3 | a5\n 58424: t2 = a3 | a0\n 58427: a2 = u8 [a4 + 0x15]\n 58430: a3 = u8 [a4 + 0x14]\n 58433: a5 = u8 [a4 + 0x16]\n 58436: a0 = u8 [a4 + 0x17]\n 58439: a2 = a2 << 0x8\n 58442: a2 = a2 | a3\n 58445: a5 = a5 << 0x10\n 58448: a0 = a0 << 0x18\n 58451: a0 = a0 | a5\n 58454: a0 = a0 | a2\n 58457: a0 = a0 << 0x20\n 58460: a3 = a0 | t2\n 58463: a0 = u8 [a4 + 0x9]\n 58466: a2 = u8 [a4 + 0x8]\n 58469: a5 = u8 [a4 + 0xa]\n 58472: a1 = u8 [a4 + 0xb]\n 58475: a0 = a0 << 0x8\n 58478: a0 = a0 | a2\n 58481: a5 = a5 << 0x10\n 58484: a1 = a1 << 0x18\n 58487: a1 = a1 | a5\n 58490: t2 = a1 | a0\n 58493: a1 = u8 [a4 + 0xd]\n 58496: a2 = u8 [a4 + 0xc]\n 58499: a5 = u8 [a4 + 0xe]\n 58502: a0 = u8 [a4 + 0xf]\n 58505: a1 = a1 << 0x8\n 58508: a1 = a1 | a2\n 58511: a5 = a5 << 0x10\n 58514: a0 = a0 << 0x18\n 58517: a0 = a0 | a5\n 58520: a0 = a0 | a1\n 58523: a0 = a0 << 0x20\n 58526: a5 = a0 | t2\n 58529: t2 = u8 [a4 + 0x1]\n 58532: a1 = u8 [a4]\n 58534: a2 = u8 [a4 + 0x2]\n 58537: a0 = u8 [a4 + 0x3]\n 58540: t2 = t2 << 0x8\n 58543: a1 = t2 | a1\n 58546: a2 = a2 << 0x10\n 58549: a0 = a0 << 0x18\n 58552: a0 = a0 | a2\n 58555: t2 = a0 | a1\n 58558: a1 = u8 [a4 + 0x5]\n 58561: a2 = u8 [a4 + 0x4]\n 58564: a0 = u8 [a4 + 0x6]\n 58567: a4 = u8 [a4 + 0x7]\n 58570: a1 = a1 << 0x8\n 58573: a1 = a1 | a2\n 58576: a0 = a0 << 0x10\n 58579: a4 = a4 << 0x18\n 58582: a0 = a0 | a4\n 58585: a0 = a0 | a1\n 58588: a0 = a0 << 0x20\n 58591: a4 = a0 | t2\n 58594: a0 = u64 [sp + 0xa8]\n 58598: i32 a2 = a0 + 0x20\n 58601: jump @1291 if t0 >=u t1\n      : @1290 (gas: 4)\n 58604: a0 = u64 [sp + 0xb8]\n 58608: u32 [a0] = t1\n 58610: t0 = t1\n 58612: fallthrough\n      : @1291 (gas: 70)\n 58613: a0 = u64 [sp + 0xb0]\n 58617: a2 = a2 + a0\n 58620: u8 [a2 + 0x8] = a5\n 58623: a0 = a4 >> 0x38\n 58626: u8 [a2 + 0x7] = a0\n 58629: a0 = a4 >> 0x30\n 58632: u8 [a2 + 0x6] = a0\n 58635: a0 = a4 >> 0x28\n 58638: u8 [a2 + 0x5] = a0\n 58641: a0 = a4 >> 0x20\n 58644: u8 [a2 + 0x4] = a0\n 58647: a0 = a4 >> 0x18\n 58650: u8 [a2 + 0x3] = a0\n 58653: a0 = a4 >> 0x10\n 58656: u8 [a2 + 0x2] = a0\n 58659: a0 = a4 >> 0x8\n 58662: u8 [a2 + 0x1] = a0\n 58665: u8 [a2] = a4\n 58667: u8 [a2 + 0x10] = a3\n 58670: a0 = a5 >> 0x38\n 58673: u8 [a2 + 0xf] = a0\n 58676: a0 = a5 >> 0x30\n 58679: u8 [a2 + 0xe] = a0\n 58682: a0 = a5 >> 0x28\n 58685: u8 [a2 + 0xd] = a0\n 58688: a0 = a5 >> 0x20\n 58691: u8 [a2 + 0xc] = a0\n 58694: a0 = a5 >> 0x18\n 58697: u8 [a2 + 0xb] = a0\n 58700: a0 = a5 >> 0x10\n 58703: u8 [a2 + 0xa] = a0\n 58706: a5 = a5 >> 0x8\n 58709: u8 [a2 + 0x9] = a5\n 58712: u8 [a2 + 0x18] = ra\n 58715: a0 = a3 >> 0x38\n 58718: u8 [a2 + 0x17] = a0\n 58721: a0 = a3 >> 0x30\n 58724: u8 [a2 + 0x16] = a0\n 58727: a0 = a3 >> 0x28\n 58730: u8 [a2 + 0x15] = a0\n 58733: a0 = a3 >> 0x20\n 58736: u8 [a2 + 0x14] = a0\n 58739: a0 = a3 >> 0x18\n 58742: u8 [a2 + 0x13] = a0\n 58745: a0 = a3 >> 0x10\n 58748: u8 [a2 + 0x12] = a0\n 58751: a3 = a3 >> 0x8\n 58754: u8 [a2 + 0x11] = a3\n 58757: a0 = ra >> 0x38\n 58760: u8 [a2 + 0x1f] = a0\n 58763: a0 = ra >> 0x30\n 58766: u8 [a2 + 0x1e] = a0\n 58769: a0 = ra >> 0x28\n 58772: u8 [a2 + 0x1d] = a0\n 58775: a0 = ra >> 0x20\n 58778: u8 [a2 + 0x1c] = a0\n 58781: a0 = ra >> 0x18\n 58784: u8 [a2 + 0x1b] = a0\n 58787: a0 = ra >> 0x10\n 58790: u8 [a2 + 0x1a] = a0\n 58793: a0 = ra >> 0x8\n 58796: a1 = 0xffffffc0\n 58806: a3 = u64 [sp + 0xa8]\n 58810: a1 = a3 <u a1\n 58813: a4 = u64 [sp + 0xa0]\n 58817: a1 = 0 if a4 != 0\n 58819: a4 = u64 [sp + 0x70]\n 58822: a1 = 0 if a4 != 0\n 58824: u8 [a2 + 0x19] = a0\n 58827: jump @1305 if a1 == 0\n      : @1292 (gas: 3)\n 58831: i32 a0 = a3 >> 0x6\n 58834: a4 = u64 [sp + 0x20]\n 58837: jump @1305 if a0 >=u 1023\n      : @1293 (gas: 3)\n 58843: i32 a0 = a3 + 0x40\n 58846: a2 = u64 [sp + 0xb0]\n 58850: jump @1295 if t0 >=u a4\n      : @1294 (gas: 3)\n 58853: a1 = u64 [sp + 0xb8]\n 58857: u32 [a1] = a4\n 58859: fallthrough\n      : @1295 (gas: 71)\n 58860: a0 = a0 + a2\n 58863: a1 = u64 [sp + 0x48]\n 58866: a1 = reverse a1\n 58868: a2 = u64 [sp + 0x50]\n 58871: a2 = reverse a2\n 58873: a3 = u64 [sp + 0x58]\n 58876: a3 = reverse a3\n 58878: a4 = u64 [sp + 0x60]\n 58881: a4 = reverse a4\n 58883: u8 [a0 + 0x18] = a4\n 58886: a5 = a4 >> 0x38\n 58889: u8 [a0 + 0x1f] = a5\n 58892: a5 = a4 >> 0x30\n 58895: u8 [a0 + 0x1e] = a5\n 58898: a5 = a4 >> 0x28\n 58901: u8 [a0 + 0x1d] = a5\n 58904: a5 = a4 >> 0x20\n 58907: u8 [a0 + 0x1c] = a5\n 58910: a5 = a4 >> 0x18\n 58913: u8 [a0 + 0x1b] = a5\n 58916: a5 = a4 >> 0x10\n 58919: u8 [a0 + 0x1a] = a5\n 58922: a4 = a4 >> 0x8\n 58925: u8 [a0 + 0x19] = a4\n 58928: u8 [a0 + 0x10] = a3\n 58931: a4 = a3 >> 0x38\n 58934: u8 [a0 + 0x17] = a4\n 58937: a4 = a3 >> 0x30\n 58940: u8 [a0 + 0x16] = a4\n 58943: a4 = a3 >> 0x28\n 58946: u8 [a0 + 0x15] = a4\n 58949: a4 = a3 >> 0x20\n 58952: u8 [a0 + 0x14] = a4\n 58955: a4 = a3 >> 0x18\n 58958: u8 [a0 + 0x13] = a4\n 58961: a4 = a3 >> 0x10\n 58964: u8 [a0 + 0x12] = a4\n 58967: a3 = a3 >> 0x8\n 58970: u8 [a0 + 0x11] = a3\n 58973: u8 [a0 + 0x8] = a2\n 58976: a3 = a2 >> 0x38\n 58979: u8 [a0 + 0xf] = a3\n 58982: a3 = a2 >> 0x30\n 58985: u8 [a0 + 0xe] = a3\n 58988: a3 = a2 >> 0x28\n 58991: u8 [a0 + 0xd] = a3\n 58994: a3 = a2 >> 0x20\n 58997: u8 [a0 + 0xc] = a3\n 59000: a3 = a2 >> 0x18\n 59003: u8 [a0 + 0xb] = a3\n 59006: a3 = a2 >> 0x10\n 59009: u8 [a0 + 0xa] = a3\n 59012: a2 = a2 >> 0x8\n 59015: u8 [a0 + 0x9] = a2\n 59018: u8 [a0] = a1\n 59020: a2 = a1 >> 0x38\n 59023: u8 [a0 + 0x7] = a2\n 59026: a2 = a1 >> 0x30\n 59029: u8 [a0 + 0x6] = a2\n 59032: a2 = a1 >> 0x28\n 59035: u8 [a0 + 0x5] = a2\n 59038: a2 = a1 >> 0x20\n 59041: u8 [a0 + 0x4] = a2\n 59044: a2 = a1 >> 0x18\n 59047: u8 [a0 + 0x3] = a2\n 59050: a2 = a1 >> 0x10\n 59053: u8 [a0 + 0x2] = a2\n 59056: a1 = a1 >> 0x8\n 59059: u8 [a0 + 0x1] = a1\n 59062: ecalli 4 // 'ref_time_left'\n 59064: fallthrough\n      : @1296 (gas: 13)\n 59065: a0 = 0x30050\n 59070: u64 [0x30058] = 0\n 59075: u64 [0x30050] = 0\n 59080: u32 [0x30060] = 0x7000000\n 59089: u64 [sp + 216] = 0\n 59093: u64 [sp + 208] = 0\n 59097: u64 [sp + 200] = 0\n 59101: a1 = u64 [sp + 0xa8]\n 59105: a1 = a1 + 0x9f\n 59109: a4 = u64 [sp + 0x98]\n 59113: a2 = a1 & a4\n 59116: u64 [sp + 192] = 0\n 59120: jump @1305 if a2 >u 65536\n      : @1297 (gas: 4)\n 59127: a1 = u64 [sp + 0xb8]\n 59131: a1 = i32 [a1]\n 59133: a3 = u64 [sp + 0x68]\n 59136: jump @1299 if a1 >=u a2\n      : @1298 (gas: 4)\n 59139: a1 = u64 [sp + 0xb8]\n 59143: u32 [a1] = a2\n 59145: a1 = a2\n 59147: fallthrough\n      : @1299 (gas: 3)\n 59148: a2 = a3 + 0x7f\n 59151: a2 = a2 & a4\n 59154: jump @1305 if a2 >u 65536\n      : @1300 (gas: 1)\n 59161: jump @1302 if a1 >=u a2\n      : @1301 (gas: 3)\n 59164: a1 = u64 [sp + 0xb8]\n 59168: u32 [a1] = a2\n 59170: fallthrough\n      : @1302 (gas: 29)\n 59171: u32 [sp + 224] = 0x60\n 59176: u64 [sp + 280] = 0\n 59180: u64 [sp + 272] = 0\n 59184: u64 [sp + 264] = 0\n 59188: u64 [sp + 256] = 0\n 59192: a0 = a0 << 0x20\n 59195: a0 = a0 >> 0x20\n 59198: a1 = 0x1800000000\n 59208: a0 = a0 | a1\n 59211: a1 = sp + 0xc0\n 59215: a1 = a1 << 0x20\n 59218: a1 = a1 >> 0x20\n 59221: a2 = sp + 0x100\n 59225: a2 = a2 << 0x20\n 59228: a3 = a2 | a1\n 59231: s1 = s1 << 0x20\n 59234: s1 = s1 >> 0x20\n 59237: a1 = 0x8000000000\n 59247: a4 = s1 | a1\n 59250: a1 = u64 [sp + 0x28]\n 59253: a1 = a1 << 0x20\n 59256: a1 = a1 >> 0x20\n 59259: a2 = sp + 0xe0\n 59263: a2 = a2 << 0x20\n 59266: a5 = a2 | a1\n 59269: a1 = 0xffffffffffffffff\n 59272: a2 = 0xffffffffffffffff\n 59275: ecalli 0 // 'call'\n 59276: fallthrough\n      : @1303 (gas: 1)\n 59277: jump @1305 if a0 != 0\n      : @1304 (gas: 15)\n 59280: a0 = u64 [sp + 0x40]\n 59283: a1 = u64 [sp + 0x68]\n 59286: u64 [a0] = a1\n 59288: a1 = u64 [sp + 0x10]\n 59291: u64 [a0 + 0x8] = a1\n 59294: a1 = u64 [sp + 0x18]\n 59297: u64 [a0 + 0x10] = a1\n 59300: a1 = u64 [sp + 0x38]\n 59303: u64 [a0 + 0x18] = a1\n 59306: sp = s0 + 0xfffffffffffffec0\n 59310: ra = u64 [sp + 0x138]\n 59314: s0 = u64 [sp + 0x130]\n 59318: s1 = u64 [sp + 0x128]\n 59322: sp = sp + 0x140\n 59326: ret\n      : @1305 (gas: 1)\n 59328: trap\n      : @1306 (gas: 17)\n 59329: u64 [0x20060] = 0\n 59334: u64 [0x20068] = 0\n 59339: u64 [0x20058] = 0\n 59344: u64 [0x20050] = 0x717b484e\n 59353: u32 [0x20070] = 0x41000000\n 59362: u32 [0x20064] = 0\n 59367: u32 [0x20068] = 0\n 59372: u32 [0x2006c] = 0\n 59377: u32 [0x20058] = 0\n 59382: u32 [0x2005c] = 0\n 59387: u32 [0x20060] = 0\n 59392: u32 [0x20054] = 0\n 59397: i32 a1 = t0 + 0\n 59399: a0 = 0x1\n 59402: a2 = 0x24\n 59405: ecalli 5 // 'seal_return'\n 59407: fallthrough\n      : @1307 (gas: 18)\n 59408: u64 [a3 + 16] = 0\n 59411: u64 [a3 + 24] = 0\n 59414: u64 [a3 + 8] = 0\n 59417: u64 [a3 + 0] = 0x717b484e\n 59423: u32 [a3 + 32] = 0x41000000\n 59430: u32 [a3 + 20] = 0\n 59433: u32 [a3 + 24] = 0\n 59436: u32 [a3 + 28] = 0\n 59439: u32 [a3 + 8] = 0\n 59442: u32 [a3 + 12] = 0\n 59445: u32 [a3 + 16] = 0\n 59448: u32 [a3 + 4] = 0\n 59451: i32 a1 = a3 + 0\n 59453: a0 = 0x1\n 59456: a2 = 0x24\n 59459: ra = 0x84\n 59463: ecalli 5 // 'seal_return'\n 59465: fallthrough\n      : @1308 [@dyn 66] (gas: 26)\n 59466: sp = sp + 0xfffffffffffffec0\n 59470: u64 [sp + 0x138] = ra\n 59474: u64 [sp + 0x130] = s0\n 59478: u64 [sp + 0x128] = s1\n 59482: s0 = sp + 0x140\n 59486: sp = sp & 0xffffffffffffffe0\n 59489: a3 = u64 [a2 + 0x18]\n 59492: u64 [sp + 0x50] = a3\n 59495: a3 = u64 [a2 + 0x10]\n 59498: u64 [sp + 0x48] = a3\n 59501: a3 = u64 [a2 + 0x8]\n 59504: u64 [sp + 0x58] = a3\n 59507: a3 = u64 [a2]\n 59509: a2 = 0x20044\n 59514: a4 = u64 [a1 + 0x18]\n 59517: u64 [sp + 0x70] = a4\n 59520: a4 = u64 [a1 + 0x10]\n 59523: u64 [sp + 0x68] = a4\n 59526: a4 = u64 [a1 + 0x8]\n 59529: u64 [sp + 0x78] = a4\n 59532: u64 [sp + 0xb8] = a2\n 59536: t1 = i32 [0x20044]\n 59541: a1 = u64 [a1]\n 59543: u64 [sp + 0x80] = a1\n 59547: u64 [sp + 0x38] = a0\n 59550: jump @1310 if t1 >u 95\n      : @1309 (gas: 4)\n 59554: t1 = 0x60\n 59557: a0 = u64 [sp + 0xb8]\n 59561: u32 [a0] = t1\n 59563: fallthrough\n      : @1310 (gas: 15)\n 59564: u64 [sp + 0x60] = a3\n 59567: a3 = 0x20050\n 59572: a0 = u64 [0x200a0]\n 59577: a1 = u64 [0x200a8]\n 59582: a2 = u64 [0x20090]\n 59587: a4 = u64 [0x20098]\n 59592: ra = reverse a0\n 59594: s1 = reverse a1\n 59596: t0 = reverse a2\n 59598: t2 = reverse a4\n 59600: a0 = t2 | t0\n 59603: a1 = s1 <u 0xffffffffffffffc0\n 59606: a1 = 0 if ra != 0\n 59608: a1 = 0 if a0 != 0\n 59610: jump @1376 if a1 == 0\n      : @1311 (gas: 26)\n 59614: a1 = s1 + 0x40\n 59617: a2 = a1 <u s1\n 59620: a4 = ra + a2\n 59623: a5 = a4 <u ra\n 59626: a5 = a2 if a2 == 0\n 59629: a5 = a5 + t2\n 59632: a2 = a5 <u t2\n 59635: a2 = a2 + t0\n 59638: a2 = reverse a2\n 59640: a5 = reverse a5\n 59642: a4 = reverse a4\n 59644: a1 = reverse a1\n 59646: u64 [0x200a8] = a1\n 59651: u64 [0x200a0] = a4\n 59656: u64 [0x20098] = a5\n 59661: a1 = s1 | t2\n 59664: u64 [sp + 0x30] = t0\n 59667: a4 = ra | t0\n 59670: a1 = a1 | a4\n 59673: a1 = a1 >> 0x20\n 59676: a4 = a4 | t2\n 59679: a4 = a4 << 0x20\n 59682: a1 = a1 | a4\n 59685: u64 [sp + 0xa8] = a3\n 59689: u64 [0x20090] = a2\n 59694: jump @1375 if a1 != 0\n      : @1312 (gas: 2)\n 59698: i32 a1 = s1 >> 0x10\n 59701: jump @1375 if a1 != 0\n      : @1313 (gas: 3)\n 59705: a1 = s1 + 0x3f\n 59708: a1 = a1 & 0x1ffe0\n 59713: jump @1375 if a1 >u 65536\n      : @1314 (gas: 1)\n 59720: jump @1316 if t1 >=u a1\n      : @1315 (gas: 4)\n 59723: a2 = u64 [sp + 0xb8]\n 59727: u32 [a2] = a1\n 59729: t1 = a1\n 59731: fallthrough\n      : @1316 (gas: 40)\n 59732: i32 a1 = s1 + 0\n 59734: a2 = u64 [sp + 0xa8]\n 59738: a2 = a2 + a1\n 59741: u8 [a2 + 31] = 0\n 59744: u8 [a2 + 30] = 0\n 59747: u8 [a2 + 29] = 0\n 59750: u8 [a2 + 28] = 0\n 59753: u8 [a2 + 27] = 0\n 59756: u8 [a2 + 26] = 0\n 59759: u8 [a2 + 25] = 0\n 59762: u8 [a2 + 24] = 0\n 59765: u8 [a2 + 23] = 0\n 59768: u8 [a2 + 22] = 0\n 59771: u8 [a2 + 21] = 0\n 59774: u8 [a2 + 20] = 0\n 59777: u8 [a2 + 19] = 0\n 59780: u8 [a2 + 18] = 0\n 59783: u8 [a2 + 17] = 0\n 59786: u8 [a2 + 16] = 0\n 59789: u8 [a2 + 15] = 0\n 59792: u8 [a2 + 14] = 0\n 59795: u8 [a2 + 13] = 0\n 59798: u8 [a2 + 12] = 0\n 59801: u8 [a2 + 11] = 0\n 59804: u8 [a2 + 10] = 0\n 59807: u8 [a2 + 9] = 0\n 59810: u8 [a2 + 8] = 0\n 59813: u8 [a2 + 7] = 0\n 59816: u8 [a2 + 6] = 0\n 59819: u8 [a2 + 5] = 0\n 59822: u8 [a2 + 4] = 0\n 59825: u8 [a2 + 3] = 0\n 59828: u8 [a2 + 2] = 0\n 59831: u8 [a2 + 1] = 0\n 59834: a1 = 0xffffffe0\n 59844: a1 = s1 <u a1\n 59847: a1 = 0 if ra != 0\n 59849: a1 = 0 if a0 != 0\n 59851: u8 [a2 + 0] = 0\n 59853: jump @1375 if a1 == 0\n      : @1317 (gas: 2)\n 59857: i32 a0 = s1 >> 0x5\n 59860: jump @1375 if a0 >=u 2047\n      : @1318 (gas: 3)\n 59866: a0 = s1 + 0x5f\n 59869: a0 = a0 & 0x1ffe0\n 59874: jump @1375 if a0 >u 65536\n      : @1319 (gas: 4)\n 59881: u64 [sp + 160] = 0x1ffe0\n 59888: u64 [sp + 0x20] = a2\n 59891: i32 a1 = s1 + 0x20\n 59894: jump @1321 if t1 >=u a0\n      : @1320 (gas: 4)\n 59897: a2 = u64 [sp + 0xb8]\n 59901: u32 [a2] = a0\n 59903: t1 = a0\n 59905: fallthrough\n      : @1321 (gas: 50)\n 59906: u64 [sp + 0xb0] = t1\n 59910: u64 [sp + 0x28] = s1\n 59913: t0 = u64 [sp + 0xa8]\n 59917: a0 = t0 + a1\n 59920: u8 [a0 + 31] = 0\n 59923: u8 [a0 + 30] = 0\n 59926: u8 [a0 + 29] = 0\n 59929: u8 [a0 + 28] = 0\n 59932: u8 [a0 + 27] = 0\n 59935: u8 [a0 + 26] = 0\n 59938: u8 [a0 + 25] = 0\n 59941: u8 [a0 + 24] = 0\n 59944: u8 [a0 + 23] = 0\n 59947: u8 [a0 + 22] = 0\n 59950: u8 [a0 + 21] = 0\n 59953: u8 [a0 + 20] = 0\n 59956: u8 [a0 + 19] = 0\n 59959: u8 [a0 + 18] = 0\n 59962: u8 [a0 + 17] = 0\n 59965: u8 [a0 + 16] = 0\n 59968: u8 [a0 + 15] = 0\n 59971: u8 [a0 + 14] = 0\n 59974: u8 [a0 + 13] = 0\n 59977: u8 [a0 + 12] = 0\n 59980: u8 [a0 + 11] = 0\n 59983: u8 [a0 + 10] = 0\n 59986: u8 [a0 + 9] = 0\n 59989: u8 [a0 + 8] = 0\n 59992: u8 [a0 + 7] = 0\n 59995: u8 [a0 + 6] = 0\n 59998: u8 [a0 + 5] = 0\n 60001: u8 [a0 + 4] = 0\n 60004: u8 [a0 + 3] = 0\n 60007: u8 [a0 + 2] = 0\n 60010: u8 [a0 + 1] = 0\n 60013: u8 [a0 + 0] = 0\n 60015: a0 = u64 [t0 + 0x50]\n 60018: a1 = u64 [t0 + 0x58]\n 60021: a2 = u64 [t0 + 0x40]\n 60024: a4 = u64 [t0 + 0x48]\n 60027: s1 = reverse a0\n 60029: a3 = reverse a1\n 60031: t1 = reverse a2\n 60033: a0 = reverse a4\n 60035: a1 = a0 | t1\n 60038: a2 = a3 <u 0xffffffffffffff80\n 60041: a2 = 0 if s1 != 0\n 60043: u64 [sp + 0x88] = a1\n 60047: a2 = 0 if a1 != 0\n 60049: jump @1377 if a2 == 0\n      : @1322 (gas: 26)\n 60053: a2 = a3 + 0x80\n 60057: a4 = a2 <u a3\n 60060: a5 = s1 + a4\n 60063: a1 = s1\n 60065: s1 = a5 <u s1\n 60068: s1 = a4 if a4 == 0\n 60071: s1 = s1 + a0\n 60074: a4 = s1 <u a0\n 60077: a4 = a4 + t1\n 60080: a4 = reverse a4\n 60082: s1 = reverse s1\n 60084: a5 = reverse a5\n 60086: a2 = reverse a2\n 60088: u64 [t0 + 0x58] = a2\n 60091: u64 [t0 + 0x50] = a5\n 60094: u64 [t0 + 0x48] = s1\n 60097: a2 = a3 | a0\n 60100: u64 [sp + 0x90] = a1\n 60104: a1 = a1 | t1\n 60107: a2 = a2 | a1\n 60110: a2 = a2 >> 0x20\n 60113: a0 = a0 | a1\n 60116: a0 = a0 << 0x20\n 60119: a0 = a0 | a2\n 60122: u64 [t0 + 0x40] = a4\n 60125: jump @1375 if a0 != 0\n      : @1323 (gas: 4)\n 60129: i32 a0 = a3 >> 0x10\n 60132: a1 = u64 [sp + 0xa0]\n 60136: a4 = u64 [sp + 0xb0]\n 60140: jump @1375 if a0 != 0\n      : @1324 (gas: 3)\n 60144: a0 = a3 + 0x9f\n 60148: a1 = a1 & a0\n 60151: jump @1375 if a1 >u 65536\n      : @1325 (gas: 5)\n 60158: s1 = t0\n 60160: u64 [sp + 0x8] = t2\n 60163: u64 [sp + 0x10] = ra\n 60166: a2 = i32 [0x20040]\n 60171: jump @1327 if a4 >=u a1\n      : @1326 (gas: 3)\n 60174: a0 = u64 [sp + 0xb8]\n 60178: u32 [a0] = a1\n 60180: fallthrough\n      : @1327 (gas: 8)\n 60181: u64 [sp + 0x18] = a1\n 60184: u64 [sp + 0x98] = a3\n 60188: i32 a0 = a3 + 0\n 60190: u64 [sp + 0x40] = a0\n 60193: i32 a0 = a0 + s1\n 60196: a1 = 0x80\n 60200: ecalli 1 // 'call_data_copy'\n 60202: fallthrough\n      : @1328 (gas: 12)\n 60203: a4 = u64 [sp + 0x80]\n 60207: a3 = u64 [sp + 0x68]\n 60210: a0 = a4 | a3\n 60213: a1 = u64 [sp + 0x78]\n 60216: a2 = u64 [sp + 0x70]\n 60219: a1 = a1 | a2\n 60222: a0 = a0 | a1\n 60225: a0 = a0 >> 0x20\n 60228: a1 = a1 | a3\n 60231: a1 = a1 << 0x20\n 60234: a0 = a0 | a1\n 60237: jump @1375 if a0 != 0\n      : @1329 (gas: 3)\n 60241: i32 a0 = a4 >> 0x10\n 60244: a2 = u64 [sp + 0xa0]\n 60248: jump @1375 if a0 != 0\n      : @1330 (gas: 3)\n 60252: a0 = a4 + 0x3f\n 60255: a1 = a0 & a2\n 60258: jump @1375 if a1 >u 65536\n      : @1331 (gas: 4)\n 60265: a0 = u64 [sp + 0xb8]\n 60269: a0 = i32 [a0]\n 60271: a3 = u64 [sp + 0x98]\n 60275: jump @1333 if a0 >=u a1\n      : @1332 (gas: 4)\n 60278: a0 = u64 [sp + 0xb8]\n 60282: u32 [a0] = a1\n 60284: a0 = a1\n 60286: fallthrough\n      : @1333 (gas: 4)\n 60287: u64 [sp + 0xb0] = a0\n 60291: a0 = a3 + 0x3f\n 60294: t0 = a0 & a2\n 60297: jump @1375 if t0 >u 65536\n      : @1334 (gas: 95)\n 60304: i32 a4 = a4 + 0\n 60306: a4 = a4 + s1\n 60309: a0 = u8 [a4 + 0x19]\n 60312: a1 = u8 [a4 + 0x18]\n 60315: a3 = u8 [a4 + 0x1a]\n 60318: a5 = u8 [a4 + 0x1b]\n 60321: a0 = a0 << 0x8\n 60324: a0 = a0 | a1\n 60327: a3 = a3 << 0x10\n 60330: a5 = a5 << 0x18\n 60333: a3 = a3 | a5\n 60336: a0 = a0 | a3\n 60339: a1 = u8 [a4 + 0x1d]\n 60342: a3 = u8 [a4 + 0x1c]\n 60345: a5 = u8 [a4 + 0x1e]\n 60348: s1 = u8 [a4 + 0x1f]\n 60351: a1 = a1 << 0x8\n 60354: a1 = a1 | a3\n 60357: a5 = a5 << 0x10\n 60360: s1 = s1 << 0x18\n 60363: a5 = a5 | s1\n 60366: a1 = a1 | a5\n 60369: a1 = a1 << 0x20\n 60372: ra = a1 | a0\n 60375: a0 = u8 [a4 + 0x11]\n 60378: a3 = u8 [a4 + 0x10]\n 60381: a5 = u8 [a4 + 0x12]\n 60384: s1 = u8 [a4 + 0x13]\n 60387: a0 = a0 << 0x8\n 60390: a0 = a0 | a3\n 60393: a5 = a5 << 0x10\n 60396: s1 = s1 << 0x18\n 60399: a5 = a5 | s1\n 60402: a0 = a0 | a5\n 60405: a3 = u8 [a4 + 0x15]\n 60408: a5 = u8 [a4 + 0x14]\n 60411: s1 = u8 [a4 + 0x16]\n 60414: a2 = u8 [a4 + 0x17]\n 60417: a3 = a3 << 0x8\n 60420: a3 = a3 | a5\n 60423: s1 = s1 << 0x10\n 60426: a2 = a2 << 0x18\n 60429: a2 = a2 | s1\n 60432: a2 = a2 | a3\n 60435: a2 = a2 << 0x20\n 60438: a3 = a2 | a0\n 60441: a0 = u8 [a4 + 0x9]\n 60444: a2 = u8 [a4 + 0x8]\n 60447: a5 = u8 [a4 + 0xa]\n 60450: s1 = u8 [a4 + 0xb]\n 60453: a0 = a0 << 0x8\n 60456: a0 = a0 | a2\n 60459: a5 = a5 << 0x10\n 60462: s1 = s1 << 0x18\n 60465: a5 = a5 | s1\n 60468: t2 = a5 | a0\n 60471: a2 = u8 [a4 + 0xd]\n 60474: a5 = u8 [a4 + 0xc]\n 60477: s1 = u8 [a4 + 0xe]\n 60480: a0 = u8 [a4 + 0xf]\n 60483: a2 = a2 << 0x8\n 60486: a2 = a2 | a5\n 60489: s1 = s1 << 0x10\n 60492: a0 = a0 << 0x18\n 60495: a0 = a0 | s1\n 60498: a0 = a0 | a2\n 60501: a0 = a0 << 0x20\n 60504: a5 = a0 | t2\n 60507: a0 = u8 [a4 + 0x1]\n 60510: a2 = u8 [a4]\n 60512: s1 = u8 [a4 + 0x2]\n 60515: a1 = u8 [a4 + 0x3]\n 60518: a0 = a0 << 0x8\n 60521: a0 = a0 | a2\n 60524: s1 = s1 << 0x10\n 60527: a1 = a1 << 0x18\n 60530: a1 = a1 | s1\n 60533: a0 = a0 | a1\n 60536: a1 = u8 [a4 + 0x5]\n 60539: a2 = u8 [a4 + 0x4]\n 60542: s1 = u8 [a4 + 0x6]\n 60545: a4 = u8 [a4 + 0x7]\n 60548: a1 = a1 << 0x8\n 60551: a1 = a1 | a2\n 60554: s1 = s1 << 0x10\n 60557: a4 = a4 << 0x18\n 60560: a4 = a4 | s1\n 60563: t1 = u64 [sp + 0xa8]\n 60567: a1 = a1 | a4\n 60570: a1 = a1 << 0x20\n 60573: a4 = a1 | a0\n 60576: s1 = u64 [sp + 0x40]\n 60579: s1 = s1 + t1\n 60582: t2 = u64 [sp + 0xb0]\n 60586: jump @1336 if t2 >=u t0\n      : @1335 (gas: 4)\n 60589: a0 = u64 [sp + 0xb8]\n 60593: u32 [a0] = t0\n 60595: t2 = t0\n 60597: fallthrough\n      : @1336 (gas: 70)\n 60598: u8 [s1] = a4\n 60600: u8 [s1 + 0x8] = a5\n 60603: a0 = a4 >> 0x38\n 60606: u8 [s1 + 0x7] = a0\n 60609: a0 = a4 >> 0x30\n 60612: u8 [s1 + 0x6] = a0\n 60615: a0 = a4 >> 0x28\n 60618: u8 [s1 + 0x5] = a0\n 60621: a0 = a4 >> 0x20\n 60624: u8 [s1 + 0x4] = a0\n 60627: a0 = a4 >> 0x18\n 60630: u8 [s1 + 0x3] = a0\n 60633: a0 = a4 >> 0x10\n 60636: u8 [s1 + 0x2] = a0\n 60639: a4 = a4 >> 0x8\n 60642: u8 [s1 + 0x1] = a4\n 60645: u8 [s1 + 0x10] = a3\n 60648: a0 = a5 >> 0x38\n 60651: u8 [s1 + 0xf] = a0\n 60654: a0 = a5 >> 0x30\n 60657: u8 [s1 + 0xe] = a0\n 60660: a0 = a5 >> 0x28\n 60663: u8 [s1 + 0xd] = a0\n 60666: a0 = a5 >> 0x20\n 60669: u8 [s1 + 0xc] = a0\n 60672: a0 = a5 >> 0x18\n 60675: u8 [s1 + 0xb] = a0\n 60678: a0 = a5 >> 0x10\n 60681: u8 [s1 + 0xa] = a0\n 60684: a5 = a5 >> 0x8\n 60687: u8 [s1 + 0x9] = a5\n 60690: u8 [s1 + 0x18] = ra\n 60693: a0 = a3 >> 0x38\n 60696: u8 [s1 + 0x17] = a0\n 60699: a0 = a3 >> 0x30\n 60702: u8 [s1 + 0x16] = a0\n 60705: a0 = a3 >> 0x28\n 60708: u8 [s1 + 0x15] = a0\n 60711: a0 = a3 >> 0x20\n 60714: u8 [s1 + 0x14] = a0\n 60717: a0 = a3 >> 0x18\n 60720: u8 [s1 + 0x13] = a0\n 60723: a0 = a3 >> 0x10\n 60726: u8 [s1 + 0x12] = a0\n 60729: a3 = a3 >> 0x8\n 60732: u8 [s1 + 0x11] = a3\n 60735: a0 = ra >> 0x38\n 60738: u8 [s1 + 0x1f] = a0\n 60741: a0 = ra >> 0x30\n 60744: u8 [s1 + 0x1e] = a0\n 60747: a0 = ra >> 0x28\n 60750: u8 [s1 + 0x1d] = a0\n 60753: a0 = ra >> 0x20\n 60756: u8 [s1 + 0x1c] = a0\n 60759: a0 = ra >> 0x18\n 60762: u8 [s1 + 0x1b] = a0\n 60765: a0 = ra >> 0x10\n 60768: u8 [s1 + 0x1a] = a0\n 60771: a0 = ra >> 0x8\n 60774: a1 = u64 [sp + 0x70]\n 60777: a2 = u64 [sp + 0x68]\n 60780: a1 = a1 | a2\n 60783: a2 = 0xffffffe0\n 60793: a4 = u64 [sp + 0x80]\n 60797: a2 = a4 <u a2\n 60800: a3 = u64 [sp + 0x78]\n 60803: a2 = 0 if a3 != 0\n 60805: a2 = 0 if a1 != 0\n 60807: u8 [s1 + 0x19] = a0\n 60810: jump @1375 if a2 == 0\n      : @1337 (gas: 4)\n 60814: i32 a0 = a4 >> 0x5\n 60817: a2 = u64 [sp + 0xa0]\n 60821: a3 = u64 [sp + 0x98]\n 60825: jump @1375 if a0 >=u 2047\n      : @1338 (gas: 3)\n 60831: a0 = a4 + 0x5f\n 60834: a1 = a0 & a2\n 60837: jump @1375 if a1 >u 65536\n      : @1339 (gas: 1)\n 60844: jump @1341 if t2 >=u a1\n      : @1340 (gas: 4)\n 60847: a0 = u64 [sp + 0xb8]\n 60851: u32 [a0] = a1\n 60853: t2 = a1\n 60855: fallthrough\n      : @1341 (gas: 8)\n 60856: u64 [sp + 0xb0] = t2\n 60860: a0 = 0xffffffe0\n 60870: a0 = a3 <u a0\n 60873: a1 = u64 [sp + 0x90]\n 60877: a0 = 0 if a1 != 0\n 60879: a1 = u64 [sp + 0x88]\n 60883: a0 = 0 if a1 != 0\n 60885: jump @1375 if a0 == 0\n      : @1342 (gas: 3)\n 60889: i32 a1 = a3 >> 0x5\n 60892: u64 [sp + 0x78] = a1\n 60895: jump @1375 if a1 >=u 2047\n      : @1343 (gas: 3)\n 60901: a0 = a3 + 0x5f\n 60904: t2 = a0 & a2\n 60907: jump @1375 if t2 >u 65536\n      : @1344 (gas: 95)\n 60914: u64 [sp + 0x70] = s1\n 60917: i32 a5 = a4 + 0x20\n 60920: a5 = a5 + t1\n 60923: a1 = u8 [a5 + 0x19]\n 60926: a2 = u8 [a5 + 0x18]\n 60929: t1 = a3\n 60931: a3 = u8 [a5 + 0x1a]\n 60934: a4 = u8 [a5 + 0x1b]\n 60937: a1 = a1 << 0x8\n 60940: a1 = a1 | a2\n 60943: a3 = a3 << 0x10\n 60946: a4 = a4 << 0x18\n 60949: a3 = a3 | a4\n 60952: a1 = a1 | a3\n 60955: a2 = u8 [a5 + 0x1d]\n 60958: a3 = u8 [a5 + 0x1c]\n 60961: a4 = u8 [a5 + 0x1e]\n 60964: a0 = u8 [a5 + 0x1f]\n 60967: a2 = a2 << 0x8\n 60970: a2 = a2 | a3\n 60973: a4 = a4 << 0x10\n 60976: a0 = a0 << 0x18\n 60979: a0 = a0 | a4\n 60982: a0 = a0 | a2\n 60985: a0 = a0 << 0x20\n 60988: t0 = a0 | a1\n 60991: a0 = u8 [a5 + 0x11]\n 60994: a1 = u8 [a5 + 0x10]\n 60997: a3 = u8 [a5 + 0x12]\n 61000: a4 = u8 [a5 + 0x13]\n 61003: a0 = a0 << 0x8\n 61006: a0 = a0 | a1\n 61009: a3 = a3 << 0x10\n 61012: a4 = a4 << 0x18\n 61015: a3 = a3 | a4\n 61018: a0 = a0 | a3\n 61021: a1 = u8 [a5 + 0x15]\n 61024: a3 = u8 [a5 + 0x14]\n 61027: a4 = u8 [a5 + 0x16]\n 61030: s1 = u8 [a5 + 0x17]\n 61033: a1 = a1 << 0x8\n 61036: a1 = a1 | a3\n 61039: a4 = a4 << 0x10\n 61042: s1 = s1 << 0x18\n 61045: a4 = a4 | s1\n 61048: a1 = a1 | a4\n 61051: a1 = a1 << 0x20\n 61054: a4 = a1 | a0\n 61057: a0 = u8 [a5 + 0x9]\n 61060: a1 = u8 [a5 + 0x8]\n 61063: a3 = u8 [a5 + 0xa]\n 61066: s1 = u8 [a5 + 0xb]\n 61069: a0 = a0 << 0x8\n 61072: a0 = a0 | a1\n 61075: a3 = a3 << 0x10\n 61078: s1 = s1 << 0x18\n 61081: a3 = a3 | s1\n 61084: ra = a3 | a0\n 61087: a1 = u8 [a5 + 0xd]\n 61090: a3 = u8 [a5 + 0xc]\n 61093: s1 = u8 [a5 + 0xe]\n 61096: a0 = u8 [a5 + 0xf]\n 61099: a1 = a1 << 0x8\n 61102: a1 = a1 | a3\n 61105: s1 = s1 << 0x10\n 61108: a0 = a0 << 0x18\n 61111: a0 = a0 | s1\n 61114: a0 = a0 | a1\n 61117: a0 = a0 << 0x20\n 61120: a1 = a0 | ra\n 61123: a0 = u8 [a5 + 0x1]\n 61126: a3 = u8 [a5]\n 61128: s1 = u8 [a5 + 0x2]\n 61131: a2 = u8 [a5 + 0x3]\n 61134: a0 = a0 << 0x8\n 61137: a0 = a0 | a3\n 61140: s1 = s1 << 0x10\n 61143: a2 = a2 << 0x18\n 61146: a2 = a2 | s1\n 61149: a0 = a0 | a2\n 61152: a2 = u8 [a5 + 0x5]\n 61155: a3 = u8 [a5 + 0x4]\n 61158: s1 = u8 [a5 + 0x6]\n 61161: a5 = u8 [a5 + 0x7]\n 61164: a2 = a2 << 0x8\n 61167: a2 = a2 | a3\n 61170: s1 = s1 << 0x10\n 61173: a5 = a5 << 0x18\n 61176: a5 = a5 | s1\n 61179: a2 = a2 | a5\n 61182: a2 = a2 << 0x20\n 61185: a5 = a2 | a0\n 61188: i32 a3 = t1 + 0x20\n 61191: a0 = u64 [sp + 0xb0]\n 61195: jump @1346 if a0 >=u t2\n      : @1345 (gas: 4)\n 61198: a0 = u64 [sp + 0xb8]\n 61202: u32 [a0] = t2\n 61204: u64 [sp + 0xb0] = t2\n 61208: fallthrough\n      : @1346 (gas: 74)\n 61209: t1 = u64 [sp + 0xa8]\n 61213: a3 = a3 + t1\n 61216: u8 [a3 + 0x8] = a1\n 61219: a0 = a5 >> 0x38\n 61222: u8 [a3 + 0x7] = a0\n 61225: a0 = a5 >> 0x30\n 61228: u8 [a3 + 0x6] = a0\n 61231: a0 = a5 >> 0x28\n 61234: u8 [a3 + 0x5] = a0\n 61237: a0 = a5 >> 0x20\n 61240: u8 [a3 + 0x4] = a0\n 61243: a0 = a5 >> 0x18\n 61246: u8 [a3 + 0x3] = a0\n 61249: a0 = a5 >> 0x10\n 61252: u8 [a3 + 0x2] = a0\n 61255: a0 = a5 >> 0x8\n 61258: u8 [a3 + 0x1] = a0\n 61261: u8 [a3] = a5\n 61263: u8 [a3 + 0x10] = a4\n 61266: a0 = a1 >> 0x38\n 61269: u8 [a3 + 0xf] = a0\n 61272: a0 = a1 >> 0x30\n 61275: u8 [a3 + 0xe] = a0\n 61278: a0 = a1 >> 0x28\n 61281: u8 [a3 + 0xd] = a0\n 61284: a0 = a1 >> 0x20\n 61287: u8 [a3 + 0xc] = a0\n 61290: a0 = a1 >> 0x18\n 61293: u8 [a3 + 0xb] = a0\n 61296: a0 = a1 >> 0x10\n 61299: u8 [a3 + 0xa] = a0\n 61302: a1 = a1 >> 0x8\n 61305: u8 [a3 + 0x9] = a1\n 61308: u8 [a3 + 0x18] = t0\n 61311: a0 = a4 >> 0x38\n 61314: u8 [a3 + 0x17] = a0\n 61317: a0 = a4 >> 0x30\n 61320: u8 [a3 + 0x16] = a0\n 61323: a0 = a4 >> 0x28\n 61326: u8 [a3 + 0x15] = a0\n 61329: a0 = a4 >> 0x20\n 61332: u8 [a3 + 0x14] = a0\n 61335: a0 = a4 >> 0x18\n 61338: u8 [a3 + 0x13] = a0\n 61341: a0 = a4 >> 0x10\n 61344: u8 [a3 + 0x12] = a0\n 61347: a4 = a4 >> 0x8\n 61350: u8 [a3 + 0x11] = a4\n 61353: a0 = t0 >> 0x38\n 61356: u8 [a3 + 0x1f] = a0\n 61359: a0 = t0 >> 0x30\n 61362: u8 [a3 + 0x1e] = a0\n 61365: a0 = t0 >> 0x28\n 61368: u8 [a3 + 0x1d] = a0\n 61371: a0 = t0 >> 0x20\n 61374: u8 [a3 + 0x1c] = a0\n 61377: a0 = t0 >> 0x18\n 61380: u8 [a3 + 0x1b] = a0\n 61383: a0 = t0 >> 0x10\n 61386: u8 [a3 + 0x1a] = a0\n 61389: a0 = t0 >> 0x8\n 61392: a4 = u64 [sp + 0x60]\n 61395: s1 = u64 [sp + 0x48]\n 61398: a1 = a4 | s1\n 61401: a2 = u64 [sp + 0x58]\n 61404: a5 = u64 [sp + 0x50]\n 61407: a2 = a2 | a5\n 61410: a1 = a1 | a2\n 61413: a1 = a1 >> 0x20\n 61416: a2 = a2 | s1\n 61419: a2 = a2 << 0x20\n 61422: a1 = a1 | a2\n 61425: u8 [a3 + 0x19] = a0\n 61428: jump @1375 if a1 != 0\n      : @1347 (gas: 6)\n 61432: i32 a0 = a4 >> 0x10\n 61435: a2 = u64 [sp + 0xa0]\n 61439: a3 = u64 [sp + 0x98]\n 61443: a5 = u64 [sp + 0xb0]\n 61447: s1 = u64 [sp + 0x90]\n 61451: jump @1375 if a0 != 0\n      : @1348 (gas: 3)\n 61455: a0 = a4 + 0x3f\n 61458: a1 = a0 & a2\n 61461: jump @1375 if a1 >u 65536\n      : @1349 (gas: 1)\n 61468: jump @1351 if a5 >=u a1\n      : @1350 (gas: 4)\n 61471: a0 = u64 [sp + 0xb8]\n 61475: u32 [a0] = a1\n 61477: a5 = a1\n 61479: fallthrough\n      : @1351 (gas: 6)\n 61480: a0 = 0xffffffc0\n 61490: a0 = a3 <u a0\n 61493: a0 = 0 if s1 != 0\n 61495: a1 = u64 [sp + 0x88]\n 61499: a0 = 0 if a1 != 0\n 61501: jump @1375 if a0 == 0\n      : @1352 (gas: 3)\n 61505: u64 [sp + 0xb0] = a5\n 61509: i32 a0 = a3 >> 0x6\n 61512: jump @1375 if a0 >=u 1023\n      : @1353 (gas: 3)\n 61518: a0 = a3 + 0x7f\n 61521: t0 = a0 & a2\n 61524: jump @1375 if t0 >u 65536\n      : @1354 (gas: 94)\n 61531: i32 a5 = a4 + 0\n 61533: a5 = a5 + t1\n 61536: a0 = u8 [a5 + 0x19]\n 61539: a1 = u8 [a5 + 0x18]\n 61542: a2 = u8 [a5 + 0x1a]\n 61545: a4 = u8 [a5 + 0x1b]\n 61548: a0 = a0 << 0x8\n 61551: a0 = a0 | a1\n 61554: a2 = a2 << 0x10\n 61557: a4 = a4 << 0x18\n 61560: a2 = a2 | a4\n 61563: a0 = a0 | a2\n 61566: a1 = u8 [a5 + 0x1d]\n 61569: a2 = u8 [a5 + 0x1c]\n 61572: a4 = u8 [a5 + 0x1e]\n 61575: s1 = u8 [a5 + 0x1f]\n 61578: a1 = a1 << 0x8\n 61581: a1 = a1 | a2\n 61584: a4 = a4 << 0x10\n 61587: s1 = s1 << 0x18\n 61590: a4 = a4 | s1\n 61593: a1 = a1 | a4\n 61596: a1 = a1 << 0x20\n 61599: ra = a1 | a0\n 61602: a0 = u8 [a5 + 0x11]\n 61605: a1 = u8 [a5 + 0x10]\n 61608: a4 = u8 [a5 + 0x12]\n 61611: s1 = u8 [a5 + 0x13]\n 61614: a0 = a0 << 0x8\n 61617: a0 = a0 | a1\n 61620: a4 = a4 << 0x10\n 61623: s1 = s1 << 0x18\n 61626: a4 = a4 | s1\n 61629: a0 = a0 | a4\n 61632: a1 = u8 [a5 + 0x15]\n 61635: a4 = u8 [a5 + 0x14]\n 61638: s1 = u8 [a5 + 0x16]\n 61641: t1 = a3\n 61643: a3 = u8 [a5 + 0x17]\n 61646: a1 = a1 << 0x8\n 61649: a1 = a1 | a4\n 61652: s1 = s1 << 0x10\n 61655: a3 = a3 << 0x18\n 61658: a3 = a3 | s1\n 61661: a1 = a1 | a3\n 61664: a1 = a1 << 0x20\n 61667: a4 = a1 | a0\n 61670: a0 = u8 [a5 + 0x9]\n 61673: a1 = u8 [a5 + 0x8]\n 61676: a3 = u8 [a5 + 0xa]\n 61679: s1 = u8 [a5 + 0xb]\n 61682: a0 = a0 << 0x8\n 61685: a0 = a0 | a1\n 61688: a3 = a3 << 0x10\n 61691: s1 = s1 << 0x18\n 61694: a3 = a3 | s1\n 61697: t2 = a3 | a0\n 61700: a1 = u8 [a5 + 0xd]\n 61703: a3 = u8 [a5 + 0xc]\n 61706: s1 = u8 [a5 + 0xe]\n 61709: a0 = u8 [a5 + 0xf]\n 61712: a1 = a1 << 0x8\n 61715: a1 = a1 | a3\n 61718: s1 = s1 << 0x10\n 61721: a0 = a0 << 0x18\n 61724: a0 = a0 | s1\n 61727: a0 = a0 | a1\n 61730: a0 = a0 << 0x20\n 61733: a1 = a0 | t2\n 61736: a0 = u8 [a5 + 0x1]\n 61739: a3 = u8 [a5]\n 61741: s1 = u8 [a5 + 0x2]\n 61744: a2 = u8 [a5 + 0x3]\n 61747: a0 = a0 << 0x8\n 61750: a0 = a0 | a3\n 61753: s1 = s1 << 0x10\n 61756: a2 = a2 << 0x18\n 61759: a2 = a2 | s1\n 61762: a0 = a0 | a2\n 61765: a2 = u8 [a5 + 0x5]\n 61768: a3 = u8 [a5 + 0x4]\n 61771: s1 = u8 [a5 + 0x6]\n 61774: a5 = u8 [a5 + 0x7]\n 61777: a2 = a2 << 0x8\n 61780: a2 = a2 | a3\n 61783: s1 = s1 << 0x10\n 61786: a5 = a5 << 0x18\n 61789: a5 = a5 | s1\n 61792: a2 = a2 | a5\n 61795: a2 = a2 << 0x20\n 61798: a5 = a2 | a0\n 61801: i32 a0 = t1 + 0x40\n 61804: t1 = u64 [sp + 0xb0]\n 61808: jump @1356 if t1 >=u t0\n      : @1355 (gas: 4)\n 61811: a2 = u64 [sp + 0xb8]\n 61815: u32 [a2] = t0\n 61817: t1 = t0\n 61819: fallthrough\n      : @1356 (gas: 72)\n 61820: s1 = u64 [sp + 0xa8]\n 61824: a3 = s1 + a0\n 61827: u8 [a3 + 0x8] = a1\n 61830: a0 = a5 >> 0x38\n 61833: u8 [a3 + 0x7] = a0\n 61836: a0 = a5 >> 0x30\n 61839: u8 [a3 + 0x6] = a0\n 61842: a0 = a5 >> 0x28\n 61845: u8 [a3 + 0x5] = a0\n 61848: a0 = a5 >> 0x20\n 61851: u8 [a3 + 0x4] = a0\n 61854: a0 = a5 >> 0x18\n 61857: u8 [a3 + 0x3] = a0\n 61860: a0 = a5 >> 0x10\n 61863: u8 [a3 + 0x2] = a0\n 61866: a0 = a5 >> 0x8\n 61869: u8 [a3 + 0x1] = a0\n 61872: u8 [a3] = a5\n 61874: u8 [a3 + 0x10] = a4\n 61877: a0 = a1 >> 0x38\n 61880: u8 [a3 + 0xf] = a0\n 61883: a0 = a1 >> 0x30\n 61886: u8 [a3 + 0xe] = a0\n 61889: a0 = a1 >> 0x28\n 61892: u8 [a3 + 0xd] = a0\n 61895: a0 = a1 >> 0x20\n 61898: u8 [a3 + 0xc] = a0\n 61901: a0 = a1 >> 0x18\n 61904: u8 [a3 + 0xb] = a0\n 61907: a0 = a1 >> 0x10\n 61910: u8 [a3 + 0xa] = a0\n 61913: a1 = a1 >> 0x8\n 61916: u8 [a3 + 0x9] = a1\n 61919: u8 [a3 + 0x18] = ra\n 61922: a0 = a4 >> 0x38\n 61925: u8 [a3 + 0x17] = a0\n 61928: a0 = a4 >> 0x30\n 61931: u8 [a3 + 0x16] = a0\n 61934: a0 = a4 >> 0x28\n 61937: u8 [a3 + 0x15] = a0\n 61940: a0 = a4 >> 0x20\n 61943: u8 [a3 + 0x14] = a0\n 61946: a0 = a4 >> 0x18\n 61949: u8 [a3 + 0x13] = a0\n 61952: a0 = a4 >> 0x10\n 61955: u8 [a3 + 0x12] = a0\n 61958: a4 = a4 >> 0x8\n 61961: u8 [a3 + 0x11] = a4\n 61964: a0 = ra >> 0x38\n 61967: u8 [a3 + 0x1f] = a0\n 61970: a0 = ra >> 0x30\n 61973: u8 [a3 + 0x1e] = a0\n 61976: a0 = ra >> 0x28\n 61979: u8 [a3 + 0x1d] = a0\n 61982: a0 = ra >> 0x20\n 61985: u8 [a3 + 0x1c] = a0\n 61988: a0 = ra >> 0x18\n 61991: u8 [a3 + 0x1b] = a0\n 61994: a0 = ra >> 0x10\n 61997: u8 [a3 + 0x1a] = a0\n 62000: a0 = ra >> 0x8\n 62003: a1 = u64 [sp + 0x50]\n 62006: a2 = u64 [sp + 0x48]\n 62009: a1 = a1 | a2\n 62012: a2 = 0xffffffe0\n 62022: a4 = u64 [sp + 0x60]\n 62025: a2 = a4 <u a2\n 62028: a5 = u64 [sp + 0x58]\n 62031: a2 = 0 if a5 != 0\n 62033: a2 = 0 if a1 != 0\n 62035: u8 [a3 + 0x19] = a0\n 62038: jump @1375 if a2 == 0\n      : @1357 (gas: 3)\n 62042: i32 a0 = a4 >> 0x5\n 62045: a2 = u64 [sp + 0xa0]\n 62049: jump @1375 if a0 >=u 2047\n      : @1358 (gas: 3)\n 62055: a0 = a4 + 0x5f\n 62058: a1 = a0 & a2\n 62061: jump @1375 if a1 >u 65536\n      : @1359 (gas: 2)\n 62068: a2 = u64 [sp + 0x98]\n 62072: jump @1361 if t1 >=u a1\n      : @1360 (gas: 4)\n 62075: a0 = u64 [sp + 0xb8]\n 62079: u32 [a0] = a1\n 62081: t1 = a1\n 62083: fallthrough\n      : @1361 (gas: 7)\n 62084: a0 = 0xffffffa0\n 62094: a0 = a2 <u a0\n 62097: a1 = u64 [sp + 0x90]\n 62101: a0 = 0 if a1 != 0\n 62103: a1 = u64 [sp + 0x88]\n 62107: a0 = 0 if a1 != 0\n 62109: jump @1375 if a0 == 0\n      : @1362 (gas: 2)\n 62113: a1 = u64 [sp + 0x78]\n 62116: jump @1375 if a1 >=u 2045\n      : @1363 (gas: 94)\n 62122: i32 a3 = a4 + 0x20\n 62125: a3 = a3 + s1\n 62128: a0 = u8 [a3 + 0x19]\n 62131: a1 = u8 [a3 + 0x18]\n 62134: a2 = u8 [a3 + 0x1a]\n 62137: a4 = u8 [a3 + 0x1b]\n 62140: a0 = a0 << 0x8\n 62143: a0 = a0 | a1\n 62146: a2 = a2 << 0x10\n 62149: a4 = a4 << 0x18\n 62152: a2 = a2 | a4\n 62155: a0 = a0 | a2\n 62158: a1 = u8 [a3 + 0x1d]\n 62161: a2 = u8 [a3 + 0x1c]\n 62164: a4 = u8 [a3 + 0x1e]\n 62167: a5 = u8 [a3 + 0x1f]\n 62170: a1 = a1 << 0x8\n 62173: a1 = a1 | a2\n 62176: a4 = a4 << 0x10\n 62179: a5 = a5 << 0x18\n 62182: a4 = a4 | a5\n 62185: a1 = a1 | a4\n 62188: a1 = a1 << 0x20\n 62191: t2 = a1 | a0\n 62194: a0 = u8 [a3 + 0x11]\n 62197: a2 = u8 [a3 + 0x10]\n 62200: a4 = u8 [a3 + 0x12]\n 62203: a5 = u8 [a3 + 0x13]\n 62206: a0 = a0 << 0x8\n 62209: a0 = a0 | a2\n 62212: a4 = a4 << 0x10\n 62215: a5 = a5 << 0x18\n 62218: a4 = a4 | a5\n 62221: a0 = a0 | a4\n 62224: a2 = u8 [a3 + 0x15]\n 62227: a4 = u8 [a3 + 0x14]\n 62230: a5 = u8 [a3 + 0x16]\n 62233: s1 = u8 [a3 + 0x17]\n 62236: a2 = a2 << 0x8\n 62239: a2 = a2 | a4\n 62242: a5 = a5 << 0x10\n 62245: s1 = s1 << 0x18\n 62248: a5 = a5 | s1\n 62251: a2 = a2 | a5\n 62254: a2 = a2 << 0x20\n 62257: a2 = a2 | a0\n 62260: a0 = u8 [a3 + 0x9]\n 62263: a4 = u8 [a3 + 0x8]\n 62266: a5 = u8 [a3 + 0xa]\n 62269: s1 = u8 [a3 + 0xb]\n 62272: a0 = a0 << 0x8\n 62275: a0 = a0 | a4\n 62278: a5 = a5 << 0x10\n 62281: s1 = s1 << 0x18\n 62284: a5 = a5 | s1\n 62287: t0 = a5 | a0\n 62290: a4 = u8 [a3 + 0xd]\n 62293: a5 = u8 [a3 + 0xc]\n 62296: s1 = u8 [a3 + 0xe]\n 62299: a0 = u8 [a3 + 0xf]\n 62302: a4 = a4 << 0x8\n 62305: a4 = a4 | a5\n 62308: s1 = s1 << 0x10\n 62311: a0 = a0 << 0x18\n 62314: a0 = a0 | s1\n 62317: a0 = a0 | a4\n 62320: a0 = a0 << 0x20\n 62323: a4 = a0 | t0\n 62326: a0 = u8 [a3 + 0x1]\n 62329: a5 = u8 [a3]\n 62331: s1 = u8 [a3 + 0x2]\n 62334: a1 = u8 [a3 + 0x3]\n 62337: a0 = a0 << 0x8\n 62340: a0 = a0 | a5\n 62343: s1 = s1 << 0x10\n 62346: a1 = a1 << 0x18\n 62349: a1 = a1 | s1\n 62352: a0 = a0 | a1\n 62355: a1 = u8 [a3 + 0x5]\n 62358: a5 = u8 [a3 + 0x4]\n 62361: s1 = u8 [a3 + 0x6]\n 62364: a3 = u8 [a3 + 0x7]\n 62367: a1 = a1 << 0x8\n 62370: a1 = a1 | a5\n 62373: s1 = s1 << 0x10\n 62376: a3 = a3 << 0x18\n 62379: a3 = a3 | s1\n 62382: a1 = a1 | a3\n 62385: a1 = a1 << 0x20\n 62388: a3 = a1 | a0\n 62391: a0 = u64 [sp + 0x98]\n 62395: i32 a0 = a0 + 0x60\n 62398: a5 = u64 [sp + 0x18]\n 62401: jump @1365 if t1 >=u a5\n      : @1364 (gas: 3)\n 62404: a1 = u64 [sp + 0xb8]\n 62408: u32 [a1] = a5\n 62410: fallthrough\n      : @1365 (gas: 64)\n 62411: a1 = u64 [sp + 0xa8]\n 62415: a0 = a0 + a1\n 62418: u8 [a0 + 0x8] = a4\n 62421: a1 = a3 >> 0x38\n 62424: u8 [a0 + 0x7] = a1\n 62427: a1 = a3 >> 0x30\n 62430: u8 [a0 + 0x6] = a1\n 62433: a1 = a3 >> 0x28\n 62436: u8 [a0 + 0x5] = a1\n 62439: a1 = a3 >> 0x20\n 62442: u8 [a0 + 0x4] = a1\n 62445: a1 = a3 >> 0x18\n 62448: u8 [a0 + 0x3] = a1\n 62451: a1 = a3 >> 0x10\n 62454: u8 [a0 + 0x2] = a1\n 62457: a1 = a3 >> 0x8\n 62460: u8 [a0 + 0x1] = a1\n 62463: u8 [a0] = a3\n 62465: u8 [a0 + 0x10] = a2\n 62468: a1 = a4 >> 0x38\n 62471: u8 [a0 + 0xf] = a1\n 62474: a1 = a4 >> 0x30\n 62477: u8 [a0 + 0xe] = a1\n 62480: a1 = a4 >> 0x28\n 62483: u8 [a0 + 0xd] = a1\n 62486: a1 = a4 >> 0x20\n 62489: u8 [a0 + 0xc] = a1\n 62492: a1 = a4 >> 0x18\n 62495: u8 [a0 + 0xb] = a1\n 62498: a1 = a4 >> 0x10\n 62501: u8 [a0 + 0xa] = a1\n 62504: a4 = a4 >> 0x8\n 62507: u8 [a0 + 0x9] = a4\n 62510: u8 [a0 + 0x18] = t2\n 62513: a1 = a2 >> 0x38\n 62516: u8 [a0 + 0x17] = a1\n 62519: a1 = a2 >> 0x30\n 62522: u8 [a0 + 0x16] = a1\n 62525: a1 = a2 >> 0x28\n 62528: u8 [a0 + 0x15] = a1\n 62531: a1 = a2 >> 0x20\n 62534: u8 [a0 + 0x14] = a1\n 62537: a1 = a2 >> 0x18\n 62540: u8 [a0 + 0x13] = a1\n 62543: a1 = a2 >> 0x10\n 62546: u8 [a0 + 0x12] = a1\n 62549: a2 = a2 >> 0x8\n 62552: u8 [a0 + 0x11] = a2\n 62555: a1 = t2 >> 0x38\n 62558: u8 [a0 + 0x1f] = a1\n 62561: a1 = t2 >> 0x30\n 62564: u8 [a0 + 0x1e] = a1\n 62567: a1 = t2 >> 0x28\n 62570: u8 [a0 + 0x1d] = a1\n 62573: a1 = t2 >> 0x20\n 62576: u8 [a0 + 0x1c] = a1\n 62579: a1 = t2 >> 0x18\n 62582: u8 [a0 + 0x1b] = a1\n 62585: a1 = t2 >> 0x10\n 62588: u8 [a0 + 0x1a] = a1\n 62591: a1 = t2 >> 0x8\n 62594: u8 [a0 + 0x19] = a1\n 62597: ecalli 4 // 'ref_time_left'\n 62599: fallthrough\n      : @1366 (gas: 14)\n 62600: a0 = 0x30050\n 62605: u64 [0x30058] = 0\n 62610: u64 [0x30050] = 0\n 62615: u32 [0x30060] = 0x6000000\n 62624: u64 [sp + 216] = 0\n 62628: u64 [sp + 208] = 0\n 62632: u64 [sp + 200] = 0\n 62636: a1 = u64 [sp + 0x98]\n 62640: a1 = a1 + 0xdf\n 62644: a3 = u64 [sp + 0xa0]\n 62648: a2 = a1 & a3\n 62651: u64 [sp + 192] = 0\n 62655: s1 = u64 [sp + 0x28]\n 62658: jump @1375 if a2 >u 65536\n      : @1367 (gas: 4)\n 62665: a1 = u64 [sp + 0xb8]\n 62669: a1 = i32 [a1]\n 62671: a4 = u64 [sp + 0x70]\n 62674: jump @1369 if a1 >=u a2\n      : @1368 (gas: 4)\n 62677: a1 = u64 [sp + 0xb8]\n 62681: u32 [a1] = a2\n 62683: a1 = a2\n 62685: fallthrough\n      : @1369 (gas: 3)\n 62686: a2 = s1 + 0x7f\n 62689: a2 = a2 & a3\n 62692: jump @1375 if a2 >u 65536\n      : @1370 (gas: 1)\n 62699: jump @1372 if a1 >=u a2\n      : @1371 (gas: 3)\n 62702: a1 = u64 [sp + 0xb8]\n 62706: u32 [a1] = a2\n 62708: fallthrough\n      : @1372 (gas: 29)\n 62709: u32 [sp + 224] = 0x60\n 62714: u64 [sp + 280] = 0\n 62718: u64 [sp + 272] = 0\n 62722: u64 [sp + 264] = 0\n 62726: u64 [sp + 256] = 0\n 62730: a0 = a0 << 0x20\n 62733: a0 = a0 >> 0x20\n 62736: a2 = 0x1800000000\n 62746: a0 = a0 | a2\n 62749: a2 = sp + 0xc0\n 62753: a2 = a2 << 0x20\n 62756: a2 = a2 >> 0x20\n 62759: a3 = sp + 0x100\n 62763: a3 = a3 << 0x20\n 62766: a3 = a3 | a2\n 62769: a2 = a4 << 0x20\n 62772: a2 = a2 >> 0x20\n 62775: a1 = 0xc000000000\n 62785: a4 = a2 | a1\n 62788: a1 = u64 [sp + 0x20]\n 62791: a1 = a1 << 0x20\n 62794: a1 = a1 >> 0x20\n 62797: a2 = sp + 0xe0\n 62801: a2 = a2 << 0x20\n 62804: a5 = a2 | a1\n 62807: a1 = 0xffffffffffffffff\n 62810: a2 = 0xffffffffffffffff\n 62813: ecalli 0 // 'call'\n 62814: fallthrough\n      : @1373 (gas: 1)\n 62815: jump @1375 if a0 != 0\n      : @1374 (gas: 14)\n 62818: a0 = u64 [sp + 0x38]\n 62821: u64 [a0] = s1\n 62823: a1 = u64 [sp + 0x10]\n 62826: u64 [a0 + 0x8] = a1\n 62829: a1 = u64 [sp + 0x8]\n 62832: u64 [a0 + 0x10] = a1\n 62835: a1 = u64 [sp + 0x30]\n 62838: u64 [a0 + 0x18] = a1\n 62841: sp = s0 + 0xfffffffffffffec0\n 62845: ra = u64 [sp + 0x138]\n 62849: s0 = u64 [sp + 0x130]\n 62853: s1 = u64 [sp + 0x128]\n 62857: sp = sp + 0x140\n 62861: ret\n      : @1375 (gas: 1)\n 62863: trap\n      : @1376 (gas: 17)\n 62864: u64 [0x20060] = 0\n 62869: u64 [0x20068] = 0\n 62874: u64 [0x20058] = 0\n 62879: u64 [0x20050] = 0x717b484e\n 62888: u32 [0x20070] = 0x41000000\n 62897: u32 [0x20064] = 0\n 62902: u32 [0x20068] = 0\n 62907: u32 [0x2006c] = 0\n 62912: u32 [0x20058] = 0\n 62917: u32 [0x2005c] = 0\n 62922: u32 [0x20060] = 0\n 62927: u32 [0x20054] = 0\n 62932: i32 a1 = a3 + 0\n 62934: a0 = 0x1\n 62937: a2 = 0x24\n 62940: ecalli 5 // 'seal_return'\n 62942: fallthrough\n      : @1377 (gas: 18)\n 62943: u64 [t0 + 16] = 0\n 62946: u64 [t0 + 24] = 0\n 62949: u64 [t0 + 8] = 0\n 62952: u64 [t0 + 0] = 0x717b484e\n 62958: u32 [t0 + 32] = 0x41000000\n 62965: u32 [t0 + 20] = 0\n 62968: u32 [t0 + 24] = 0\n 62971: u32 [t0 + 28] = 0\n 62974: u32 [t0 + 8] = 0\n 62977: u32 [t0 + 12] = 0\n 62980: u32 [t0 + 16] = 0\n 62983: u32 [t0 + 4] = 0\n 62986: i32 a1 = t0 + 0\n 62988: a0 = 0x1\n 62991: a2 = 0x24\n 62994: ra = 0x86\n 62998: ecalli 5 // 'seal_return'\n 63000: fallthrough\n      : @1378 [@dyn 67] (gas: 16)\n 63001: sp = sp + 0xfffffffffffffdb8\n 63005: u64 [sp + 0x240] = ra\n 63009: u64 [sp + 0x238] = s0\n 63013: u64 [sp + 0x230] = s1\n 63017: a2 = 0x20044\n 63022: ra = u64 [a1 + 0x18]\n 63025: a3 = u64 [a1 + 0x10]\n 63028: u64 [sp + 0x1a0] = a3\n 63032: a3 = u64 [a1 + 0x8]\n 63035: u64 [sp + 0x198] = a3\n 63039: u64 [sp + 0xf0] = a2\n 63043: t2 = i32 [0x20044]\n 63048: a1 = u64 [a1]\n 63050: u64 [sp + 0x1a8] = a1\n 63054: u64 [sp + 0xc8] = a0\n 63058: jump @1380 if t2 >u 95\n      : @1379 (gas: 4)\n 63062: t2 = 0x60\n 63065: a1 = u64 [sp + 0xf0]\n 63069: u32 [a1] = t2\n 63071: fallthrough\n      : @1380 (gas: 14)\n 63072: t1 = 0x20050\n 63077: a2 = u64 [0x200a0]\n 63082: a1 = u64 [0x200a8]\n 63087: s1 = u64 [0x20090]\n 63092: s0 = u64 [0x20098]\n 63097: t0 = reverse a2\n 63099: a3 = reverse a1\n 63101: a1 = reverse s1\n 63103: s1 = reverse s0\n 63105: a0 = s1 | a1\n 63108: a4 = a3 <u 0xffffffffffffffc0\n 63111: a4 = 0 if t0 != 0\n 63113: a4 = 0 if a0 != 0\n 63115: jump @1382 if a4 != 0\n      : @1381 (gas: 1)\n 63118: jump @1460\n      : @1382 (gas: 25)\n 63121: a4 = a3 + 0x40\n 63124: a5 = a4 <u a3\n 63127: a2 = t0 + a5\n 63130: s0 = a2 <u t0\n 63133: s0 = a5 if a5 == 0\n 63136: s0 = s0 + s1\n 63139: a5 = s0 <u s1\n 63142: a5 = a5 + a1\n 63145: a5 = reverse a5\n 63147: s0 = reverse s0\n 63149: a2 = reverse a2\n 63151: a4 = reverse a4\n 63153: u64 [0x200a8] = a4\n 63158: u64 [0x200a0] = a2\n 63163: u64 [0x20098] = s0\n 63168: a2 = a3 | s1\n 63171: a1 = t0 | a1\n 63174: a2 = a2 | a1\n 63177: a2 = a2 >> 0x20\n 63180: a1 = a1 | s1\n 63183: a1 = a1 << 0x20\n 63186: a1 = a1 | a2\n 63189: u64 [sp + 0xf8] = t1\n 63193: u64 [0x20090] = a5\n 63198: jump @1384 if a1 == 0\n      : @1383 (gas: 1)\n 63201: jump @1459\n      : @1384 (gas: 2)\n 63204: i32 a1 = a3 >> 0x10\n 63207: jump @1386 if a1 == 0\n      : @1385 (gas: 1)\n 63210: jump @1459\n      : @1386 (gas: 5)\n 63213: a4 = t2\n 63215: t2 = 0x1ffe0\n 63220: a1 = a3 + 0x3f\n 63223: a1 = a1 & t2\n 63226: jump @1388 if a1 <=u 65536\n      : @1387 (gas: 1)\n 63232: jump @1459\n      : @1388 (gas: 2)\n 63235: t1 = ra\n 63237: jump @1390 if a4 >=u a1\n      : @1389 (gas: 4)\n 63240: a2 = u64 [sp + 0xf0]\n 63244: u32 [a2] = a1\n 63246: a4 = a1\n 63248: fallthrough\n      : @1390 (gas: 40)\n 63249: a1 = 0xffffffe0\n 63259: s1 = a3 <u a1\n 63262: s1 = 0 if t0 != 0\n 63264: i32 a2 = a3 + 0\n 63266: a1 = u64 [sp + 0xf8]\n 63270: a2 = a2 + a1\n 63273: u8 [a2 + 31] = 0\n 63276: u8 [a2 + 30] = 0\n 63279: u8 [a2 + 29] = 0\n 63282: u8 [a2 + 28] = 0\n 63285: u8 [a2 + 27] = 0\n 63288: u8 [a2 + 26] = 0\n 63291: u8 [a2 + 25] = 0\n 63294: u8 [a2 + 24] = 0\n 63297: u8 [a2 + 23] = 0\n 63300: u8 [a2 + 22] = 0\n 63303: u8 [a2 + 21] = 0\n 63306: u8 [a2 + 20] = 0\n 63309: u8 [a2 + 19] = 0\n 63312: u8 [a2 + 18] = 0\n 63315: u8 [a2 + 17] = 0\n 63318: u8 [a2 + 16] = 0\n 63321: u8 [a2 + 15] = 0\n 63324: u8 [a2 + 14] = 0\n 63327: u8 [a2 + 13] = 0\n 63330: u8 [a2 + 12] = 0\n 63333: u8 [a2 + 11] = 0\n 63336: u8 [a2 + 10] = 0\n 63339: u8 [a2 + 9] = 0\n 63342: u8 [a2 + 8] = 0\n 63345: u8 [a2 + 7] = 0\n 63348: u8 [a2 + 6] = 0\n 63351: u8 [a2 + 5] = 0\n 63354: u8 [a2 + 4] = 0\n 63357: u8 [a2 + 3] = 0\n 63360: u8 [a2 + 2] = 0\n 63363: u8 [a2 + 1] = 0\n 63366: s1 = 0 if a0 != 0\n 63368: u8 [a2 + 0] = 0\n 63370: jump @1392 if s1 != 0\n      : @1391 (gas: 1)\n 63373: jump @1459\n      : @1392 (gas: 3)\n 63376: i32 a1 = a3 >> 0x5\n 63379: ra = u64 [sp + 0x198]\n 63383: jump @1394 if a1 <u 2047\n      : @1393 (gas: 1)\n 63388: jump @1459\n      : @1394 (gas: 3)\n 63391: a1 = a3 + 0x5f\n 63394: a1 = a1 & 0x1ffe0\n 63399: jump @1396 if a1 <=u 65536\n      : @1395 (gas: 1)\n 63405: jump @1459\n      : @1396 (gas: 4)\n 63408: i32 a3 = a3 + 0x20\n 63411: a5 = u64 [sp + 0xf8]\n 63415: s1 = u64 [sp + 0x1a8]\n 63419: jump @1398 if a4 >=u a1\n      : @1397 (gas: 4)\n 63422: a2 = u64 [sp + 0xf0]\n 63426: u32 [a2] = a1\n 63428: a4 = a1\n 63430: fallthrough\n      : @1398 (gas: 42)\n 63431: a0 = u64 [sp + 0x1a0]\n 63435: a1 = s1 | a0\n 63438: a2 = ra | t1\n 63441: a1 = a1 | a2\n 63444: a1 = a1 >> 0x20\n 63447: a2 = a2 | a0\n 63450: a2 = a2 << 0x20\n 63453: a1 = a1 | a2\n 63456: a0 = a5 + a3\n 63459: u8 [a0 + 31] = 0\n 63462: u8 [a0 + 30] = 0\n 63465: u8 [a0 + 29] = 0\n 63468: u8 [a0 + 28] = 0\n 63471: u8 [a0 + 27] = 0\n 63474: u8 [a0 + 26] = 0\n 63477: u8 [a0 + 25] = 0\n 63480: u8 [a0 + 24] = 0\n 63483: u8 [a0 + 23] = 0\n 63486: u8 [a0 + 22] = 0\n 63489: u8 [a0 + 21] = 0\n 63492: u8 [a0 + 20] = 0\n 63495: u8 [a0 + 19] = 0\n 63498: u8 [a0 + 18] = 0\n 63501: u8 [a0 + 17] = 0\n 63504: u8 [a0 + 16] = 0\n 63507: u8 [a0 + 15] = 0\n 63510: u8 [a0 + 14] = 0\n 63513: u8 [a0 + 13] = 0\n 63516: u8 [a0 + 12] = 0\n 63519: u8 [a0 + 11] = 0\n 63522: u8 [a0 + 10] = 0\n 63525: u8 [a0 + 9] = 0\n 63528: u8 [a0 + 8] = 0\n 63531: u8 [a0 + 7] = 0\n 63534: u8 [a0 + 6] = 0\n 63537: u8 [a0 + 5] = 0\n 63540: u8 [a0 + 4] = 0\n 63543: u8 [a0 + 3] = 0\n 63546: u8 [a0 + 2] = 0\n 63549: u8 [a0 + 1] = 0\n 63552: u8 [a0 + 0] = 0\n 63554: jump @1400 if a1 == 0\n      : @1399 (gas: 1)\n 63557: jump @1459\n      : @1400 (gas: 2)\n 63560: i32 a0 = s1 >> 0x10\n 63563: jump @1402 if a0 == 0\n      : @1401 (gas: 1)\n 63566: jump @1459\n      : @1402 (gas: 3)\n 63569: a0 = s1 + 0x3f\n 63572: t0 = a0 & 0x1ffe0\n 63577: jump @1404 if t0 <=u 65536\n      : @1403 (gas: 1)\n 63583: jump @1459\n      : @1404 (gas: 1)\n 63586: jump @1406 if a4 >=u t0\n      : @1405 (gas: 4)\n 63589: a0 = u64 [sp + 0xf0]\n 63593: u32 [a0] = t0\n 63595: a4 = t0\n 63597: fallthrough\n      : @1406 (gas: 105)\n 63598: u64 [sp + 0x100] = a4\n 63602: i32 a1 = s1 + 0\n 63604: a1 = a1 + a5\n 63607: a2 = u8 [a1 + 0x11]\n 63610: a3 = u8 [a1 + 0x10]\n 63613: a4 = u8 [a1 + 0x12]\n 63616: a5 = u8 [a1 + 0x13]\n 63619: a2 = a2 << 0x8\n 63622: a2 = a2 | a3\n 63625: a4 = a4 << 0x10\n 63628: a5 = a5 << 0x18\n 63631: a4 = a4 | a5\n 63634: a2 = a2 | a4\n 63637: a3 = u8 [a1 + 0x15]\n 63640: a4 = u8 [a1 + 0x14]\n 63643: a5 = u8 [a1 + 0x16]\n 63646: s0 = u8 [a1 + 0x17]\n 63649: a3 = a3 << 0x8\n 63652: a3 = a3 | a4\n 63655: a5 = a5 << 0x10\n 63658: s0 = s0 << 0x18\n 63661: a5 = a5 | s0\n 63664: a3 = a3 | a5\n 63667: a3 = a3 << 0x20\n 63670: a0 = a3 | a2\n 63673: a2 = u8 [a1 + 0x1]\n 63676: a3 = u8 [a1]\n 63678: a4 = u8 [a1 + 0x2]\n 63681: a5 = u8 [a1 + 0x3]\n 63684: a2 = a2 << 0x8\n 63687: a2 = a2 | a3\n 63690: a4 = a4 << 0x10\n 63693: a5 = a5 << 0x18\n 63696: a4 = a4 | a5\n 63699: a2 = a2 | a4\n 63702: a3 = u8 [a1 + 0x5]\n 63705: a4 = u8 [a1 + 0x4]\n 63708: a5 = u8 [a1 + 0x6]\n 63711: s0 = u8 [a1 + 0x7]\n 63714: a3 = a3 << 0x8\n 63717: a3 = a3 | a4\n 63720: a5 = a5 << 0x10\n 63723: s0 = s0 << 0x18\n 63726: a5 = a5 | s0\n 63729: a3 = a3 | a5\n 63732: a3 = a3 << 0x20\n 63735: s1 = a3 | a2\n 63738: a2 = u8 [a1 + 0x19]\n 63741: a3 = u8 [a1 + 0x18]\n 63744: a4 = u8 [a1 + 0x1a]\n 63747: a5 = u8 [a1 + 0x1b]\n 63750: a2 = a2 << 0x8\n 63753: a2 = a2 | a3\n 63756: a4 = a4 << 0x10\n 63759: a5 = a5 << 0x18\n 63762: a4 = a4 | a5\n 63765: a2 = a2 | a4\n 63768: a3 = u8 [a1 + 0x1d]\n 63771: a4 = u8 [a1 + 0x1c]\n 63774: a5 = u8 [a1 + 0x1e]\n 63777: s0 = u8 [a1 + 0x1f]\n 63780: a3 = a3 << 0x8\n 63783: a3 = a3 | a4\n 63786: a5 = a5 << 0x10\n 63789: s0 = s0 << 0x18\n 63792: a5 = a5 | s0\n 63795: a3 = a3 | a5\n 63798: a3 = a3 << 0x20\n 63801: s0 = a3 | a2\n 63804: a2 = u8 [a1 + 0x9]\n 63807: a3 = u8 [a1 + 0x8]\n 63810: a4 = u8 [a1 + 0xa]\n 63813: a5 = u8 [a1 + 0xb]\n 63816: a2 = a2 << 0x8\n 63819: a2 = a2 | a3\n 63822: a4 = a4 << 0x10\n 63825: a5 = a5 << 0x18\n 63828: a4 = a4 | a5\n 63831: a2 = a2 | a4\n 63834: a3 = u8 [a1 + 0xd]\n 63837: a4 = u8 [a1 + 0xc]\n 63840: a5 = u8 [a1 + 0xe]\n 63843: a1 = u8 [a1 + 0xf]\n 63846: a3 = a3 << 0x8\n 63849: a3 = a3 | a4\n 63852: a5 = a5 << 0x10\n 63855: a1 = a1 << 0x18\n 63858: a1 = a1 | a5\n 63861: a1 = a1 | a3\n 63864: a1 = a1 << 0x20\n 63867: a1 = a1 | a2\n 63870: u64 [sp + 0xa8] = s0\n 63874: u64 [sp + 0xa0] = a1\n 63878: a1 = a1 | s0\n 63881: u64 [sp + 0xb8] = a0\n 63885: u64 [sp + 0xb0] = s1\n 63889: a2 = s1 | a0\n 63892: a3 = u64 [sp + 0x1a8]\n 63896: a1 = a1 | a2\n 63899: a0 = u64 [sp + 0x1a0]\n 63903: t1 = a0 | t1\n 63906: i32 a4 = a3 + 0x20\n 63909: i32 s0 = a3 >> 0x5\n 63912: a5 = a3 + 0x5f\n 63915: jump @1423 if a1 == 0\n      : @1407 (gas: 2)\n 63919: a2 = u64 [sp + 0x100]\n 63923: jump @1409 if a2 >=u t0\n      : @1408 (gas: 4)\n 63926: a0 = u64 [sp + 0xf0]\n 63930: u32 [a0] = t0\n 63932: a2 = t0\n 63934: fallthrough\n      : @1409 (gas: 5)\n 63935: a0 = 0xffffffe0\n 63945: a0 = a3 <u a0\n 63948: a0 = 0 if ra != 0\n 63950: a0 = 0 if t1 != 0\n 63952: jump @1411 if a0 != 0\n      : @1410 (gas: 1)\n 63955: jump @1459\n      : @1411 (gas: 2)\n 63958: a3 = u64 [sp + 0xf8]\n 63962: jump @1413 if s0 <u 2047\n      : @1412 (gas: 1)\n 63967: jump @1459\n      : @1413 (gas: 2)\n 63970: a0 = a5 & 0x1ffe0\n 63975: jump @1415 if a0 <=u 65536\n      : @1414 (gas: 1)\n 63981: jump @1459\n      : @1415 (gas: 2)\n 63984: u64 [sp + 224] = 0x1ffe0\n 63991: jump @1417 if a2 >=u a0\n      : @1416 (gas: 4)\n 63994: a1 = u64 [sp + 0xf0]\n 63998: u32 [a1] = a0\n 64000: a2 = a0\n 64002: fallthrough\n      : @1417 (gas: 153)\n 64003: u64 [sp + 0x100] = a2\n 64007: a1 = a3 + a4\n 64010: a0 = u8 [a1 + 0x11]\n 64013: a2 = u8 [a1 + 0x10]\n 64016: a3 = u8 [a1 + 0x12]\n 64019: a4 = u8 [a1 + 0x13]\n 64022: a0 = a0 << 0x8\n 64025: a0 = a0 | a2\n 64028: a3 = a3 << 0x10\n 64031: a4 = a4 << 0x18\n 64034: a3 = a3 | a4\n 64037: a0 = a0 | a3\n 64040: a2 = u8 [a1 + 0x15]\n 64043: a3 = u8 [a1 + 0x14]\n 64046: a4 = u8 [a1 + 0x16]\n 64049: a5 = u8 [a1 + 0x17]\n 64052: a2 = a2 << 0x8\n 64055: a2 = a2 | a3\n 64058: a4 = a4 << 0x10\n 64061: a5 = a5 << 0x18\n 64064: a4 = a4 | a5\n 64067: a2 = a2 | a4\n 64070: a2 = a2 << 0x20\n 64073: a0 = a0 | a2\n 64076: a2 = u8 [a1 + 0x1]\n 64079: a3 = u8 [a1]\n 64081: a4 = u8 [a1 + 0x2]\n 64084: a5 = u8 [a1 + 0x3]\n 64087: a2 = a2 << 0x8\n 64090: a2 = a2 | a3\n 64093: a4 = a4 << 0x10\n 64096: a5 = a5 << 0x18\n 64099: a4 = a4 | a5\n 64102: a2 = a2 | a4\n 64105: a3 = u8 [a1 + 0x5]\n 64108: a4 = u8 [a1 + 0x4]\n 64111: a5 = u8 [a1 + 0x6]\n 64114: s1 = u8 [a1 + 0x7]\n 64117: a3 = a3 << 0x8\n 64120: a3 = a3 | a4\n 64123: a5 = a5 << 0x10\n 64126: s1 = s1 << 0x18\n 64129: a5 = a5 | s1\n 64132: a3 = a3 | a5\n 64135: a3 = a3 << 0x20\n 64138: a2 = a2 | a3\n 64141: a3 = u8 [a1 + 0x19]\n 64144: a4 = u8 [a1 + 0x18]\n 64147: a5 = u8 [a1 + 0x1a]\n 64150: s1 = u8 [a1 + 0x1b]\n 64153: a3 = a3 << 0x8\n 64156: a3 = a3 | a4\n 64159: a5 = a5 << 0x10\n 64162: s1 = s1 << 0x18\n 64165: a5 = a5 | s1\n 64168: a3 = a3 | a5\n 64171: a4 = u8 [a1 + 0x1d]\n 64174: a5 = u8 [a1 + 0x1c]\n 64177: s1 = u8 [a1 + 0x1e]\n 64180: s0 = u8 [a1 + 0x1f]\n 64183: a4 = a4 << 0x8\n 64186: a4 = a4 | a5\n 64189: s1 = s1 << 0x10\n 64192: s0 = s0 << 0x18\n 64195: s0 = s0 | s1\n 64198: a4 = a4 | s0\n 64201: a4 = a4 << 0x20\n 64204: a3 = a3 | a4\n 64207: a4 = u8 [a1 + 0x9]\n 64210: a5 = u8 [a1 + 0x8]\n 64213: s1 = u8 [a1 + 0xa]\n 64216: s0 = u8 [a1 + 0xb]\n 64219: a4 = a4 << 0x8\n 64222: a4 = a4 | a5\n 64225: s1 = s1 << 0x10\n 64228: s0 = s0 << 0x18\n 64231: s0 = s0 | s1\n 64234: a4 = a4 | s0\n 64237: a5 = u8 [a1 + 0xd]\n 64240: s1 = u8 [a1 + 0xc]\n 64243: s0 = u8 [a1 + 0xe]\n 64246: a1 = u8 [a1 + 0xf]\n 64249: a5 = a5 << 0x8\n 64252: a5 = a5 | s1\n 64255: s0 = s0 << 0x10\n 64258: a1 = a1 << 0x18\n 64261: a1 = a1 | s0\n 64264: a1 = a1 | a5\n 64267: a1 = a1 << 0x20\n 64270: a1 = a1 | a4\n 64273: s1 = reverse a1\n 64275: a3 = reverse a3\n 64277: u64 [sp + 0xe8] = a3\n 64281: t2 = reverse a2\n 64283: ra = reverse a0\n 64285: a1 = clz t2\n 64287: a0 = clz s1\n 64289: a0 = a0 + 0x40\n 64292: a0 = a1 if t2 != 0\n 64295: a1 = clz ra\n 64297: a2 = clz a3\n 64299: a2 = a2 + 0x40\n 64302: a2 = a1 if ra != 0\n 64305: a1 = a2 + 0x80\n 64309: a3 = s1 | t2\n 64312: a0 = a1 if a3 == 0\n 64315: a4 = a1 <u a2\n 64318: a4 = 0 if a3 != 0\n 64320: a1 = a4 >u 0\n 64322: a2 = a0 <u 0x3\n 64325: a3 = a2 ^ 0x1\n 64328: a1 = a3 if a4 == 0\n 64331: a2 = a1 <u 0x1\n 64334: t1 = a2 + 0xffffffffffffffff\n 64337: t0 = -a1\n 64339: a4 = -a4\n 64341: a3 = a4 - a3\n 64344: a0 = 0x2 - a0\n 64347: a4 = t0 >u 0\n 64349: a5 = t1 >u 0\n 64351: a5 = a4 if t1 == 0\n 64354: a4 = a3 >u 0\n 64356: s0 = a0 <u 0x100\n 64360: s0 = s0 ^ 0x1\n 64363: s0 = a4 if a3 != 0\n 64366: a2 = u64 [0x20020]\n 64371: u64 [sp + 0x148] = a2\n 64375: s0 = a5 if a1 != 0\n 64378: a5 = ra\n 64380: a1 = ra | t2\n 64383: ra = u64 [sp + 0xe8]\n 64387: a4 = ra | s1\n 64390: a1 = a1 | a4\n 64393: a2 = u64 [0x20028]\n 64398: u64 [sp + 0x130] = a2\n 64402: a1 = a1 <u 0x1\n 64405: s0 = s0 | a1\n 64408: a1 = u64 [0x20030]\n 64413: u64 [sp + 0x140] = a1\n 64417: a1 = u64 [0x20038]\n 64422: u64 [sp + 0x138] = a1\n 64426: u64 [sp + 0xd0] = t2\n 64430: t2 = 0 if s0 != 0\n 64432: u64 [sp + 0x1a0] = t2\n 64436: u64 [sp + 0xd8] = s1\n 64440: s1 = 0 if s0 != 0\n 64442: a1 = a5\n 64444: a1 = 0 if s0 != 0\n 64446: u64 [sp + 0x1a8] = a1\n 64450: a1 = ra\n 64452: a1 = 0 if s0 != 0\n 64454: u64 [sp + 0xc0] = a5\n 64458: jump @1431 if s0 != 0\n      : @1418 (gas: 6)\n 64462: a4 = a0 ^ 0xff\n 64466: a4 = a4 | t0\n 64469: a2 = a3 | t1\n 64472: a2 = a2 | a4\n 64475: t2 = u64 [sp + 0xe0]\n 64479: jump @1434 if a2 == 0\n      : @1419 (gas: 253)\n 64483: a2 = a0 + 0x1\n 64486: u64 [sp + 0x1a8] = a2\n 64490: a1 = a2 <u 0x1\n 64493: a1 = a1 + a3\n 64496: u64 [sp + 0x180] = a1\n 64500: a1 = a1 | a2\n 64503: a1 = a1 <u 0x1\n 64506: a1 = a1 + t0\n 64509: u64 [sp + 0x178] = a1\n 64513: a1 = a1 <u t0\n 64516: t1 = t1 + a1\n 64519: u8 [sp + 0x210] = ra\n 64523: u8 [sp + 527] = 0\n 64527: u8 [sp + 526] = 0\n 64531: u8 [sp + 525] = 0\n 64535: u8 [sp + 524] = 0\n 64539: u8 [sp + 523] = 0\n 64543: u8 [sp + 522] = 0\n 64547: u8 [sp + 521] = 0\n 64551: u8 [sp + 520] = 0\n 64555: u8 [sp + 519] = 0\n 64559: u8 [sp + 518] = 0\n 64563: u8 [sp + 517] = 0\n 64567: u8 [sp + 516] = 0\n 64571: u8 [sp + 515] = 0\n 64575: u8 [sp + 514] = 0\n 64579: u8 [sp + 513] = 0\n 64583: u8 [sp + 512] = 0\n 64587: u8 [sp + 511] = 0\n 64591: u8 [sp + 510] = 0\n 64595: u8 [sp + 509] = 0\n 64599: u8 [sp + 508] = 0\n 64603: u8 [sp + 507] = 0\n 64607: u8 [sp + 506] = 0\n 64611: u8 [sp + 505] = 0\n 64615: u8 [sp + 504] = 0\n 64619: u8 [sp + 503] = 0\n 64623: u8 [sp + 502] = 0\n 64627: u8 [sp + 501] = 0\n 64631: u8 [sp + 500] = 0\n 64635: u8 [sp + 499] = 0\n 64639: u8 [sp + 498] = 0\n 64643: u8 [sp + 497] = 0\n 64647: u8 [sp + 496] = 0\n 64651: u8 [sp + 0x218] = a5\n 64655: a1 = ra >> 0x38\n 64658: u64 [sp + 0x160] = a1\n 64662: u8 [sp + 0x217] = a1\n 64666: a1 = ra >> 0x30\n 64669: u64 [sp + 0x158] = a1\n 64673: u8 [sp + 0x216] = a1\n 64677: a1 = ra >> 0x28\n 64680: u64 [sp + 0x150] = a1\n 64684: u8 [sp + 0x215] = a1\n 64688: a1 = ra >> 0x20\n 64691: u64 [sp + 0x128] = a1\n 64695: u8 [sp + 0x214] = a1\n 64699: a1 = ra >> 0x18\n 64702: u64 [sp + 0x120] = a1\n 64706: u8 [sp + 0x213] = a1\n 64710: i32 a1 = 0xff - a0\n 64714: a0 = a1 << 0x38\n 64717: a0 = a0 >> 0x3b\n 64720: a2 = sp + 0x210\n 64724: a0 = a2 - a0\n 64727: a2 = ra >> 0x10\n 64730: u64 [sp + 0x60] = a2\n 64733: u8 [sp + 0x212] = a2\n 64737: a2 = ra >> 0x8\n 64740: u64 [sp + 0x58] = a2\n 64743: u8 [sp + 0x211] = a2\n 64747: t2 = u64 [sp + 0xd8]\n 64751: u8 [sp + 0x220] = t2\n 64755: a2 = a5 >> 0x38\n 64758: u64 [sp + 0x50] = a2\n 64761: u8 [sp + 0x21f] = a2\n 64765: a2 = a5 >> 0x30\n 64768: u64 [sp + 0x48] = a2\n 64771: u8 [sp + 0x21e] = a2\n 64775: a2 = a5 >> 0x28\n 64778: u64 [sp + 0x40] = a2\n 64781: u8 [sp + 0x21d] = a2\n 64785: a2 = a5 >> 0x20\n 64788: u64 [sp + 0x38] = a2\n 64791: u8 [sp + 0x21c] = a2\n 64795: a2 = a5 >> 0x18\n 64798: u64 [sp + 0x30] = a2\n 64801: u8 [sp + 0x21b] = a2\n 64805: a2 = a5 >> 0x10\n 64808: u64 [sp + 0x28] = a2\n 64811: u8 [sp + 0x21a] = a2\n 64815: a2 = a5 >> 0x8\n 64818: u64 [sp + 0x20] = a2\n 64821: u8 [sp + 0x219] = a2\n 64825: ra = u64 [sp + 0xd0]\n 64829: u8 [sp + 0x228] = ra\n 64833: a2 = t2 >> 0x38\n 64836: u64 [sp + 0x18] = a2\n 64839: u8 [sp + 0x227] = a2\n 64843: a2 = t2 >> 0x30\n 64846: u64 [sp + 0x10] = a2\n 64849: u8 [sp + 0x226] = a2\n 64853: a2 = t2 >> 0x28\n 64856: u64 [sp + 0x8] = a2\n 64859: u8 [sp + 0x225] = a2\n 64863: a2 = t2 >> 0x20\n 64866: u64 [sp] = a2\n 64868: u8 [sp + 0x224] = a2\n 64872: a2 = t2 >> 0x18\n 64875: u64 [sp + 0x118] = a2\n 64879: u8 [sp + 0x223] = a2\n 64883: a2 = t2 >> 0x10\n 64886: u64 [sp + 0x110] = a2\n 64890: u8 [sp + 0x222] = a2\n 64894: a2 = t2 >> 0x8\n 64897: u64 [sp + 0x108] = a2\n 64901: u8 [sp + 0x221] = a2\n 64905: a2 = ra >> 0x38\n 64908: u64 [sp + 0x98] = a2\n 64912: u8 [sp + 0x22f] = a2\n 64916: a2 = ra >> 0x30\n 64919: u64 [sp + 0x90] = a2\n 64923: u8 [sp + 0x22e] = a2\n 64927: a2 = ra >> 0x28\n 64930: u64 [sp + 0x88] = a2\n 64934: u8 [sp + 0x22d] = a2\n 64938: a2 = ra >> 0x20\n 64941: u64 [sp + 0x80] = a2\n 64945: u8 [sp + 0x22c] = a2\n 64949: a2 = ra >> 0x18\n 64952: u64 [sp + 0x78] = a2\n 64955: u8 [sp + 0x22b] = a2\n 64959: a2 = ra >> 0x10\n 64962: u64 [sp + 0x70] = a2\n 64965: u8 [sp + 0x22a] = a2\n 64969: a2 = ra >> 0x8\n 64972: u64 [sp + 0x68] = a2\n 64975: u8 [sp + 0x229] = a2\n 64979: a2 = u8 [a0 + 0x19]\n 64982: a3 = u8 [a0 + 0x18]\n 64985: a4 = u8 [a0 + 0x1a]\n 64988: a5 = u8 [a0 + 0x1b]\n 64991: a2 = a2 << 0x8\n 64994: a2 = a2 | a3\n 64997: a4 = a4 << 0x10\n 65000: a5 = a5 << 0x18\n 65003: a4 = a4 | a5\n 65006: a2 = a2 | a4\n 65009: a3 = u8 [a0 + 0x1d]\n 65012: a4 = u8 [a0 + 0x1c]\n 65015: a5 = u8 [a0 + 0x1e]\n 65018: s1 = u8 [a0 + 0x1f]\n 65021: a3 = a3 << 0x8\n 65024: a3 = a3 | a4\n 65027: a5 = a5 << 0x10\n 65030: s1 = s1 << 0x18\n 65033: a5 = a5 | s1\n 65036: a3 = a3 | a5\n 65039: a3 = a3 << 0x20\n 65042: a2 = a2 | a3\n 65045: a3 = u8 [a0 + 0x11]\n 65048: a4 = u8 [a0 + 0x10]\n 65051: a5 = u8 [a0 + 0x12]\n 65054: s1 = u8 [a0 + 0x13]\n 65057: a3 = a3 << 0x8\n 65060: a3 = a3 | a4\n 65063: a5 = a5 << 0x10\n 65066: s1 = s1 << 0x18\n 65069: a5 = a5 | s1\n 65072: a3 = a3 | a5\n 65075: a4 = u8 [a0 + 0x15]\n 65078: a5 = u8 [a0 + 0x14]\n 65081: s1 = u8 [a0 + 0x16]\n 65084: s0 = u8 [a0 + 0x17]\n 65087: a4 = a4 << 0x8\n 65090: a4 = a4 | a5\n 65093: s1 = s1 << 0x10\n 65096: s0 = s0 << 0x18\n 65099: s0 = s0 | s1\n 65102: a4 = a4 | s0\n 65105: a4 = a4 << 0x20\n 65108: a5 = a4 | a3\n 65111: a1 = a1 & 0x7\n 65114: a3 = a2 << a1\n 65117: a4 = a5 >> 0x1\n 65120: t0 = a1 ^ 0x3f\n 65123: a4 = a4 >> t0\n 65126: a3 = a3 | a4\n 65129: u64 [sp + 0x1a0] = a3\n 65133: a3 = u8 [a0 + 0x9]\n 65136: a4 = u8 [a0 + 0x8]\n 65139: s1 = u8 [a0 + 0xa]\n 65142: s0 = u8 [a0 + 0xb]\n 65145: a3 = a3 << 0x8\n 65148: a3 = a3 | a4\n 65151: s1 = s1 << 0x10\n 65154: s0 = s0 << 0x18\n 65157: s0 = s0 | s1\n 65160: a3 = a3 | s0\n 65163: a4 = u8 [a0 + 0xd]\n 65166: s1 = u8 [a0 + 0xc]\n 65169: s0 = u8 [a0 + 0xe]\n 65172: a2 = u8 [a0 + 0xf]\n 65175: a4 = a4 << 0x8\n 65178: a4 = a4 | s1\n 65181: s0 = s0 << 0x10\n 65184: a2 = a2 << 0x18\n 65187: a2 = a2 | s0\n 65190: a2 = a2 | a4\n 65193: a2 = a2 << 0x20\n 65196: s1 = a2 | a3\n 65199: a2 = s1 >> 0x1\n 65202: a3 = a1 ^ 0xffffffffffffffff\n 65205: a2 = a2 >> a3\n 65208: a3 = a5 << a1\n 65211: a2 = a2 | a3\n 65214: u64 [sp + 0x198] = a2\n 65218: a2 = u8 [a0 + 0x1]\n 65221: a3 = u8 [a0]\n 65223: a4 = u8 [a0 + 0x2]\n 65226: a5 = u8 [a0 + 0x3]\n 65229: a2 = a2 << 0x8\n 65232: a2 = a2 | a3\n 65235: a4 = a4 << 0x10\n 65238: a5 = a5 << 0x18\n 65241: a4 = a4 | a5\n 65244: a2 = a2 | a4\n 65247: a3 = u8 [a0 + 0x5]\n 65250: a4 = u8 [a0 + 0x4]\n 65253: a5 = u8 [a0 + 0x6]\n 65256: a0 = u8 [a0 + 0x7]\n 65259: a3 = a3 << 0x8\n 65262: a3 = a3 | a4\n 65265: a4 = u64 [sp + 0x180]\n 65269: a5 = a5 << 0x10\n 65272: a0 = a0 << 0x18\n 65275: a0 = a0 | a5\n 65278: a0 = a0 | a3\n 65281: a0 = a0 << 0x20\n 65284: a0 = a0 | a2\n 65287: a2 = a0 >> 0x1\n 65290: a2 = a2 >> t0\n 65293: t0 = u64 [sp + 0x178]\n 65297: a3 = s1 << a1\n 65300: a2 = a2 | a3\n 65303: u64 [sp + 0x188] = a2\n 65307: a2 = a4 | t1\n 65310: a3 = u64 [sp + 0x1a8]\n 65314: a3 = a3 | t0\n 65317: a2 = a2 | a3\n 65320: a0 = a0 << a1\n 65323: u64 [sp + 0x190] = a0\n 65327: jump @1432 if a2 == 0\n      : @1420 (gas: 228)\n 65331: u64 [sp + 368] = 0\n 65335: u64 [sp + 0x168] = t1\n 65339: a0 = u64 [sp + 0x160]\n 65343: u8 [sp + 0x1b7] = a0\n 65347: a0 = u64 [sp + 0x158]\n 65351: u8 [sp + 0x1b6] = a0\n 65355: a0 = u64 [sp + 0x150]\n 65359: u8 [sp + 0x1b5] = a0\n 65363: a0 = u64 [sp + 0x128]\n 65367: u8 [sp + 0x1b4] = a0\n 65371: a0 = u64 [sp + 0x120]\n 65375: u8 [sp + 0x1b3] = a0\n 65379: a0 = u64 [sp + 0x60]\n 65382: u8 [sp + 0x1b2] = a0\n 65386: a0 = u64 [sp + 0x58]\n 65389: u8 [sp + 0x1b1] = a0\n 65393: a0 = u64 [sp + 0x50]\n 65396: u8 [sp + 0x1bf] = a0\n 65400: a0 = u64 [sp + 0x48]\n 65403: u8 [sp + 0x1be] = a0\n 65407: a0 = u64 [sp + 0x40]\n 65410: u8 [sp + 0x1bd] = a0\n 65414: a0 = u64 [sp + 0x38]\n 65417: u8 [sp + 0x1bc] = a0\n 65421: a0 = u64 [sp + 0x30]\n 65424: u8 [sp + 0x1bb] = a0\n 65428: a0 = u64 [sp + 0x28]\n 65431: u8 [sp + 0x1ba] = a0\n 65435: a0 = u64 [sp + 0x20]\n 65438: u8 [sp + 0x1b9] = a0\n 65442: a0 = u64 [sp + 0x18]\n 65445: u8 [sp + 0x1c7] = a0\n 65449: a0 = u64 [sp + 0x10]\n 65452: u8 [sp + 0x1c6] = a0\n 65456: a0 = u64 [sp + 0x8]\n 65459: u8 [sp + 0x1c5] = a0\n 65463: a0 = u64 [sp]\n 65465: u8 [sp + 0x1c4] = a0\n 65469: u8 [sp + 495] = 0\n 65473: u8 [sp + 494] = 0\n 65477: u8 [sp + 493] = 0\n 65481: u8 [sp + 492] = 0\n 65485: u8 [sp + 491] = 0\n 65489: u8 [sp + 490] = 0\n 65493: u8 [sp + 489] = 0\n 65497: u8 [sp + 488] = 0\n 65501: u8 [sp + 487] = 0\n 65505: u8 [sp + 486] = 0\n 65509: u8 [sp + 485] = 0\n 65513: u8 [sp + 484] = 0\n 65517: u8 [sp + 483] = 0\n 65521: u8 [sp + 482] = 0\n 65525: u8 [sp + 481] = 0\n 65529: u8 [sp + 480] = 0\n 65533: u8 [sp + 479] = 0\n 65537: u8 [sp + 478] = 0\n 65541: u8 [sp + 477] = 0\n 65545: u8 [sp + 476] = 0\n 65549: u8 [sp + 475] = 0\n 65553: u8 [sp + 474] = 0\n 65557: u8 [sp + 473] = 0\n 65561: u8 [sp + 472] = 0\n 65565: u8 [sp + 471] = 0\n 65569: u8 [sp + 470] = 0\n 65573: u8 [sp + 469] = 0\n 65577: u8 [sp + 468] = 0\n 65581: u8 [sp + 467] = 0\n 65585: u8 [sp + 466] = 0\n 65589: u8 [sp + 465] = 0\n 65593: u8 [sp + 464] = 0\n 65597: a0 = u64 [sp + 0xe8]\n 65601: u8 [sp + 0x1b0] = a0\n 65605: a0 = u64 [sp + 0xc0]\n 65609: u8 [sp + 0x1b8] = a0\n 65613: u8 [sp + 0x1c0] = t2\n 65617: u8 [sp + 0x1c8] = ra\n 65621: a0 = u64 [sp + 0x118]\n 65625: u8 [sp + 0x1c3] = a0\n 65629: a0 = u64 [sp + 0x110]\n 65633: u8 [sp + 0x1c2] = a0\n 65637: a0 = u64 [sp + 0x108]\n 65641: u8 [sp + 0x1c1] = a0\n 65645: a0 = u64 [sp + 0x98]\n 65649: u8 [sp + 0x1cf] = a0\n 65653: a0 = u64 [sp + 0x90]\n 65657: u8 [sp + 0x1ce] = a0\n 65661: a0 = u64 [sp + 0x88]\n 65665: u8 [sp + 0x1cd] = a0\n 65669: a0 = u64 [sp + 0x80]\n 65673: u8 [sp + 0x1cc] = a0\n 65677: a0 = u64 [sp + 0x78]\n 65680: u8 [sp + 0x1cb] = a0\n 65684: a0 = u64 [sp + 0x70]\n 65687: u8 [sp + 0x1ca] = a0\n 65691: a0 = u64 [sp + 0x68]\n 65694: u8 [sp + 0x1c9] = a0\n 65698: s1 = u64 [sp + 0x1a8]\n 65702: a0 = s1 << 0x38\n 65705: a0 = a0 >> 0x3b\n 65708: a1 = sp + 0x1b0\n 65712: a1 = a1 + a0\n 65715: a0 = u8 [a1 + 0x11]\n 65718: a2 = u8 [a1 + 0x10]\n 65721: a3 = u8 [a1 + 0x12]\n 65724: ra = a4\n 65726: a4 = u8 [a1 + 0x13]\n 65729: a0 = a0 << 0x8\n 65732: a0 = a0 | a2\n 65735: a3 = a3 << 0x10\n 65738: a4 = a4 << 0x18\n 65741: a3 = a3 | a4\n 65744: a0 = a0 | a3\n 65747: a2 = u8 [a1 + 0x15]\n 65750: a3 = u8 [a1 + 0x14]\n 65753: a4 = u8 [a1 + 0x16]\n 65756: a5 = u8 [a1 + 0x17]\n 65759: a2 = a2 << 0x8\n 65762: a2 = a2 | a3\n 65765: a4 = a4 << 0x10\n 65768: a5 = a5 << 0x18\n 65771: a4 = a4 | a5\n 65774: a2 = a2 | a4\n 65777: a2 = a2 << 0x20\n 65780: t2 = a2 | a0\n 65783: a2 = s1 & 0x7\n 65786: s1 = t2 >> a2\n 65789: a0 = u8 [a1 + 0x19]\n 65792: a3 = u8 [a1 + 0x18]\n 65795: a4 = u8 [a1 + 0x1a]\n 65798: a5 = u8 [a1 + 0x1b]\n 65801: a0 = a0 << 0x8\n 65804: a0 = a0 | a3\n 65807: a4 = a4 << 0x10\n 65810: a5 = a5 << 0x18\n 65813: a4 = a4 | a5\n 65816: a0 = a0 | a4\n 65819: a3 = u8 [a1 + 0x1d]\n 65822: a4 = u8 [a1 + 0x1c]\n 65825: a5 = u8 [a1 + 0x1e]\n 65828: s0 = u8 [a1 + 0x1f]\n 65831: a3 = a3 << 0x8\n 65834: a3 = a3 | a4\n 65837: a5 = a5 << 0x10\n 65840: s0 = s0 << 0x18\n 65843: a5 = a5 | s0\n 65846: a3 = a3 | a5\n 65849: a3 = a3 << 0x20\n 65852: a0 = a0 | a3\n 65855: u64 [sp + 0x158] = a0\n 65859: a0 = a0 << 0x1\n 65862: t0 = a2 ^ 0x3f\n 65865: a0 = a0 << t0\n 65868: a0 = a0 | s1\n 65871: u64 [sp + 0x160] = a0\n 65875: a0 = u8 [a1 + 0x9]\n 65878: a3 = u8 [a1 + 0x8]\n 65881: a4 = u8 [a1 + 0xa]\n 65884: s0 = u8 [a1 + 0xb]\n 65887: a0 = a0 << 0x8\n 65890: a0 = a0 | a3\n 65893: a4 = a4 << 0x10\n 65896: s0 = s0 << 0x18\n 65899: a4 = a4 | s0\n 65902: a0 = a0 | a4\n 65905: a3 = u8 [a1 + 0xd]\n 65908: a4 = u8 [a1 + 0xc]\n 65911: s0 = u8 [a1 + 0xe]\n 65914: s1 = u8 [a1 + 0xf]\n 65917: a3 = a3 << 0x8\n 65920: a3 = a3 | a4\n 65923: s0 = s0 << 0x10\n 65926: s1 = s1 << 0x18\n 65929: s0 = s0 | s1\n 65932: a3 = a3 | s0\n 65935: a3 = a3 << 0x20\n 65938: s1 = a3 | a0\n 65941: a0 = s1 >> a2\n 65944: t2 = t2 << 0x1\n 65947: a3 = a2 ^ 0xffffffffffffffff\n 65950: a3 = t2 << a3\n 65953: a0 = a0 | a3\n 65956: a3 = u8 [a1 + 0x1]\n 65959: a4 = u8 [a1]\n 65961: s0 = u8 [a1 + 0x2]\n 65964: a5 = u8 [a1 + 0x3]\n 65967: a3 = a3 << 0x8\n 65970: a3 = a3 | a4\n 65973: s0 = s0 << 0x10\n 65976: a5 = a5 << 0x18\n 65979: a5 = a5 | s0\n 65982: a3 = a3 | a5\n 65985: a4 = u8 [a1 + 0x5]\n 65988: a5 = u8 [a1 + 0x4]\n 65991: s0 = u8 [a1 + 0x6]\n 65994: a1 = u8 [a1 + 0x7]\n 65997: a4 = a4 << 0x8\n 66000: a4 = a4 | a5\n 66003: s0 = s0 << 0x10\n 66006: a1 = a1 << 0x18\n 66009: a1 = a1 | s0\n 66012: a1 = a1 | a4\n 66015: a1 = a1 << 0x20\n 66018: a1 = a1 | a3\n 66021: a1 = a1 >> a2\n 66024: s1 = s1 << 0x1\n 66027: a5 = s1 << t0\n 66030: s1 = u64 [sp + 0x170]\n 66034: t2 = a1 | a5\n 66037: a1 = u64 [sp + 0x158]\n 66041: a1 = a1 >> a2\n 66044: u64 [sp + 0x158] = a1\n 66048: a3 = u64 [sp + 0x138]\n 66052: a1 = a3 <u 0x1\n 66055: a2 = u64 [sp + 0x140]\n 66059: a1 = a2 - a1\n 66062: u64 [sp + 0x120] = a1\n 66066: a1 = a3 | a2\n 66069: a1 = a1 <u 0x1\n 66072: a2 = u64 [sp + 0x130]\n 66076: a4 = a2 - a1\n 66079: u64 [sp + 0x118] = a4\n 66083: a1 = a2 <u a1\n 66086: a2 = u64 [sp + 0x148]\n 66090: a2 = a2 - a1\n 66093: u64 [sp + 0x110] = a2\n 66097: a3 = a3 + 0xffffffffffffffff\n 66100: u64 [sp + 0x108] = a3\n 66104: fallthrough\n      : @1421 (gas: 103)\n 66105: u64 [sp + 0x170] = s1\n 66109: u64 [sp + 0x180] = ra\n 66113: u64 [sp + 296] = 0\n 66117: a1 = t2 >> 0x3f\n 66120: s0 = a0 << 0x1\n 66123: t0 = s0 | a1\n 66126: a5 = t2 << 0x1\n 66129: a4 = a0\n 66131: a0 = u64 [sp + 0x1a0]\n 66135: a1 = a0 >> 0x3f\n 66138: ra = a5 | a1\n 66141: a2 = u64 [sp + 0x120]\n 66145: a1 = a2 ^ t0\n 66148: s0 = a2 <u t0\n 66151: a2 = u64 [sp + 0x108]\n 66155: a3 = a2 <u ra\n 66158: u64 [sp + 0x150] = ra\n 66162: a3 = s0 if a1 != 0\n 66165: s1 = u64 [sp + 0x158]\n 66169: s1 = s1 << 0x1\n 66172: t2 = u64 [sp + 0x160]\n 66176: a1 = t2 >> 0x3f\n 66179: s1 = s1 | a1\n 66182: a1 = a4 >> 0x3f\n 66185: t2 = t2 << 0x1\n 66188: t2 = t2 | a1\n 66191: a0 = a0 << 0x1\n 66194: a2 = u64 [sp + 0x198]\n 66198: a1 = a2 >> 0x3f\n 66201: a0 = a0 | a1\n 66204: a1 = a2 << 0x1\n 66207: a2 = u64 [sp + 0x188]\n 66211: a4 = a2 >> 0x3f\n 66214: a1 = a1 | a4\n 66217: a4 = a2 << 0x1\n 66220: a5 = u64 [sp + 0x190]\n 66224: a2 = a5 >> 0x3f\n 66227: a2 = a2 | a4\n 66230: a4 = a5 << 0x1\n 66233: a5 = u64 [sp + 0x170]\n 66237: a4 = a4 | a5\n 66240: u64 [sp + 0x190] = a4\n 66244: a5 = u64 [sp + 0x180]\n 66248: a2 = a2 | 0\n 66250: u64 [sp + 0x188] = a2\n 66254: a1 = a1 | 0\n 66256: u64 [sp + 0x198] = a1\n 66260: a0 = a0 | 0\n 66262: u64 [sp + 0x1a0] = a0\n 66266: a1 = u64 [sp + 0x118]\n 66270: a0 = a1 - t2\n 66273: a0 = a0 <u a3\n 66276: a1 = a1 <u t2\n 66279: a2 = u64 [sp + 0x110]\n 66283: a2 = a2 - s1\n 66286: a2 = a2 - a1\n 66289: a1 = a2 - a0\n 66292: a1 = a1 >>a 0x3f\n 66295: a0 = u64 [sp + 0x138]\n 66299: t1 = a1 & a0\n 66302: a0 = u64 [sp + 0x140]\n 66306: a0 = a0 & a1\n 66309: a3 = t0 ^ a0\n 66312: a4 = t0 <u a0\n 66315: a2 = ra <u t1\n 66318: a4 = a2 if a3 == 0\n 66321: a3 = u64 [sp + 0x130]\n 66325: a3 = a3 & a1\n 66328: ra = t2 - a3\n 66331: s0 = ra - a4\n 66334: u64 [sp + 0x160] = s0\n 66338: a4 = ra <u a4\n 66341: a3 = t2 <u a3\n 66344: s0 = u64 [sp + 0x148]\n 66348: s0 = s0 & a1\n 66351: s1 = s1 - s0\n 66354: s1 = s1 - a3\n 66357: s1 = s1 - a4\n 66360: u64 [sp + 0x158] = s1\n 66364: a0 = t0 - a0\n 66367: a0 = a0 - a2\n 66370: a2 = u64 [sp + 0x150]\n 66374: t2 = a2 - t1\n 66377: s0 = u64 [sp + 0x1a8]\n 66381: a2 = s0 | a5\n 66384: a2 = a2 <u 0x1\n 66387: a4 = u64 [sp + 0x178]\n 66391: a3 = a4 <u a2\n 66394: a2 = a4 - a2\n 66397: a4 = s0 <u 0x1\n 66400: a5 = a5 - a4\n 66403: a4 = u64 [sp + 0x168]\n 66407: a4 = a4 - a3\n 66410: s0 = s0 + 0xffffffffffffffff\n 66413: u64 [sp + 0x168] = a4\n 66417: ra = a5\n 66419: a3 = a5 | a4\n 66422: u64 [sp + 0x1a8] = s0\n 66426: a4 = s0 | a2\n 66429: a3 = a3 | a4\n 66432: s1 = a1 & 0x1\n 66435: u64 [sp + 0x178] = a2\n 66439: jump @1421 if a3 != 0\n      : @1422 (gas: 1)\n 66443: jump @1433\n      : @1423 (gas: 5)\n 66446: a1 = 0xffffffe0\n 66456: a1 = a3 <u a1\n 66459: a1 = 0 if ra != 0\n 66461: a1 = 0 if t1 != 0\n 66463: jump @1459 if a1 == 0\n      : @1424 (gas: 2)\n 66467: a0 = u64 [sp + 0x100]\n 66471: jump @1459 if s0 >=u 2047\n      : @1425 (gas: 2)\n 66477: a1 = a5 & 0x1ffe0\n 66482: jump @1459 if a1 >u 65536\n      : @1426 (gas: 3)\n 66489: u64 [sp + 0x170] = s0\n 66493: u64 [sp + 0x178] = a5\n 66497: jump @1428 if a0 >=u a1\n      : @1427 (gas: 4)\n 66500: a0 = u64 [sp + 0xf0]\n 66504: u32 [a0] = a1\n 66506: a0 = a1\n 66508: fallthrough\n      : @1428 (gas: 101)\n 66509: u64 [sp + 0x100] = a0\n 66513: ra = u64 [sp + 0xf8]\n 66517: u64 [sp + 0x180] = a4\n 66521: a1 = ra + a4\n 66524: a2 = u8 [a1 + 0x11]\n 66527: a3 = u8 [a1 + 0x10]\n 66530: s0 = u8 [a1 + 0x12]\n 66533: s1 = u8 [a1 + 0x13]\n 66536: a2 = a2 << 0x8\n 66539: a2 = a2 | a3\n 66542: s0 = s0 << 0x10\n 66545: s1 = s1 << 0x18\n 66548: s0 = s0 | s1\n 66551: a2 = a2 | s0\n 66554: u64 [sp + 0x1a0] = a2\n 66558: a2 = u8 [a1 + 0x1]\n 66561: a3 = u8 [a1]\n 66563: s1 = u8 [a1 + 0x2]\n 66566: s0 = u8 [a1 + 0x3]\n 66569: a2 = a2 << 0x8\n 66572: a2 = a2 | a3\n 66575: s1 = s1 << 0x10\n 66578: s0 = s0 << 0x18\n 66581: a3 = s0 | s1\n 66584: a2 = a2 | a3\n 66587: u64 [sp + 0x190] = a2\n 66591: a2 = u8 [a1 + 0x15]\n 66594: s1 = u8 [a1 + 0x14]\n 66597: s0 = u8 [a1 + 0x16]\n 66600: a5 = u8 [a1 + 0x17]\n 66603: a2 = a2 << 0x8\n 66606: a2 = a2 | s1\n 66609: s0 = s0 << 0x10\n 66612: a5 = a5 << 0x18\n 66615: a5 = a5 | s0\n 66618: a2 = a2 | a5\n 66621: u64 [sp + 0x188] = a2\n 66625: a2 = u8 [a1 + 0x5]\n 66628: a5 = u8 [a1 + 0x4]\n 66631: s1 = u8 [a1 + 0x6]\n 66634: a4 = u8 [a1 + 0x7]\n 66637: a2 = a2 << 0x8\n 66640: a2 = a2 | a5\n 66643: s1 = s1 << 0x10\n 66646: a4 = a4 << 0x18\n 66649: a4 = a4 | s1\n 66652: s0 = a4 | a2\n 66655: a2 = u8 [a1 + 0x19]\n 66658: a4 = u8 [a1 + 0x18]\n 66661: a5 = u8 [a1 + 0x1a]\n 66664: a0 = u8 [a1 + 0x1b]\n 66667: a2 = a2 << 0x8\n 66670: a2 = a2 | a4\n 66673: a5 = a5 << 0x10\n 66676: a0 = a0 << 0x18\n 66679: a0 = a0 | a5\n 66682: a3 = a0 | a2\n 66685: a2 = u8 [a1 + 0x9]\n 66688: a4 = u8 [a1 + 0x8]\n 66691: a5 = u8 [a1 + 0xa]\n 66694: a0 = u8 [a1 + 0xb]\n 66697: a2 = a2 << 0x8\n 66700: a2 = a2 | a4\n 66703: a5 = a5 << 0x10\n 66706: a0 = a0 << 0x18\n 66709: a0 = a0 | a5\n 66712: a2 = a2 | a0\n 66715: a0 = u8 [a1 + 0x1d]\n 66718: a4 = u8 [a1 + 0x1c]\n 66721: a5 = u8 [a1 + 0x1e]\n 66724: s1 = ra\n 66726: ra = u8 [a1 + 0x1f]\n 66729: a0 = a0 << 0x8\n 66732: a0 = a0 | a4\n 66735: a5 = a5 << 0x10\n 66738: ra = ra << 0x18\n 66741: a4 = ra | a5\n 66744: ra = a4 | a0\n 66747: a4 = u8 [a1 + 0xd]\n 66750: a5 = u8 [a1 + 0xc]\n 66753: a0 = u8 [a1 + 0xe]\n 66756: a1 = u8 [a1 + 0xf]\n 66759: a4 = a4 << 0x8\n 66762: a4 = a4 | a5\n 66765: a0 = a0 << 0x10\n 66768: a1 = a1 << 0x18\n 66771: a0 = a0 | a1\n 66774: a0 = a0 | a4\n 66777: a0 = a0 | ra\n 66780: a0 = a0 << 0x20\n 66783: a2 = a2 | a3\n 66786: a0 = a0 | a2\n 66789: a1 = u64 [sp + 0x188]\n 66793: s0 = s0 | a1\n 66796: s0 = s0 << 0x20\n 66799: a1 = u64 [sp + 0x1a0]\n 66803: a2 = u64 [sp + 0x190]\n 66807: a1 = a1 | a2\n 66810: a1 = a1 | s0\n 66813: a0 = a0 | a1\n 66816: jump @1447 if a0 == 0\n      : @1429 (gas: 7)\n 66820: ra = u64 [sp + 0x198]\n 66824: a3 = u64 [sp + 0x1a8]\n 66828: a4 = u64 [sp + 0x180]\n 66832: a5 = u64 [sp + 0x178]\n 66836: s0 = u64 [sp + 0x170]\n 66840: a2 = u64 [sp + 0x100]\n 66844: jump @1408 if a2 <u t0\n      : @1430 (gas: 1)\n 66848: jump @1409\n      : @1431 (gas: 2)\n 66851: t2 = u64 [sp + 0xe0]\n 66855: jump @1434\n      : @1432 (gas: 3)\n 66857: s1 = 0\n 66859: u64 [sp + 296] = 0\n 66863: fallthrough\n      : @1433 (gas: 24)\n 66864: a4 = u64 [sp + 0x198]\n 66868: a0 = a4 >> 0x3f\n 66871: a3 = u64 [sp + 0x1a0]\n 66875: a3 = a3 << 0x1\n 66878: a0 = a0 | a3\n 66881: a5 = u64 [sp + 0x188]\n 66885: a3 = a5 >> 0x3f\n 66888: a4 = a4 << 0x1\n 66891: a3 = a3 | a4\n 66894: a1 = u64 [sp + 0x190]\n 66898: a4 = a1 >> 0x3f\n 66901: a5 = a5 << 0x1\n 66904: a1 = a1 << 0x1\n 66907: a1 = a1 | s1\n 66910: a2 = u64 [sp + 0x128]\n 66914: a4 = a4 | a2\n 66917: a4 = a4 | a5\n 66920: u64 [sp + 0x1a8] = a4\n 66924: s1 = a2 | a3\n 66927: a0 = a0 | a2\n 66930: u64 [sp + 0x1a0] = a0\n 66934: t2 = u64 [sp + 0xe0]\n 66938: ra = u64 [sp + 0xe8]\n 66942: fallthrough\n      : @1434 (gas: 16)\n 66943: u64 [sp + 0x188] = s1\n 66947: u64 [sp + 0x190] = a1\n 66951: a3 = u64 [sp + 0xf8]\n 66955: a0 = u64 [a3 + 0x50]\n 66958: a2 = u64 [a3 + 0x58]\n 66961: a4 = u64 [a3 + 0x40]\n 66964: s1 = u64 [a3 + 0x48]\n 66967: t1 = reverse a0\n 66969: a5 = reverse a2\n 66971: a2 = reverse a4\n 66973: a1 = reverse s1\n 66975: t0 = a1 | a2\n 66978: a0 = a5 <u 0xffffffffffffffc0\n 66981: a0 = 0 if t1 != 0\n 66983: a0 = 0 if t0 != 0\n 66985: jump @1461 if a0 == 0\n      : @1435 (gas: 24)\n 66989: a0 = a5 + 0x40\n 66992: a4 = a0 <u a5\n 66995: s1 = t1 + a4\n 66998: s0 = s1 <u t1\n 67001: s0 = a4 if a4 == 0\n 67004: s0 = s0 + a1\n 67007: a4 = s0 <u a1\n 67010: a4 = a4 + a2\n 67013: a4 = reverse a4\n 67015: s0 = reverse s0\n 67017: s1 = reverse s1\n 67019: a0 = reverse a0\n 67021: u64 [a3 + 0x58] = a0\n 67024: u64 [a3 + 0x50] = s1\n 67027: u64 [a3 + 0x48] = s0\n 67030: a0 = a5 | a1\n 67033: s1 = t1 | a2\n 67036: a0 = a0 | s1\n 67039: a0 = a0 >> 0x20\n 67042: s1 = s1 | a1\n 67045: s1 = s1 << 0x20\n 67048: a0 = a0 | s1\n 67051: u64 [a3 + 0x40] = a4\n 67054: jump @1459 if a0 != 0\n      : @1436 (gas: 3)\n 67058: u64 [sp + 0x198] = a1\n 67062: i32 a0 = a5 >> 0x10\n 67065: jump @1459 if a0 != 0\n      : @1437 (gas: 3)\n 67069: a0 = a5 + 0x3f\n 67072: a0 = a0 & t2\n 67075: jump @1459 if a0 >u 65536\n      : @1438 (gas: 2)\n 67082: a1 = u64 [sp + 0x100]\n 67086: jump @1440 if a1 >=u a0\n      : @1439 (gas: 4)\n 67089: a1 = u64 [sp + 0xf0]\n 67093: u32 [a1] = a0\n 67095: a1 = a0\n 67097: fallthrough\n      : @1440 (gas: 72)\n 67098: u64 [sp + 0x100] = a1\n 67102: i32 a0 = a5 + 0\n 67104: a0 = a0 + a3\n 67107: a1 = u64 [sp + 0xb8]\n 67111: u8 [a0 + 0x10] = a1\n 67114: a3 = u64 [sp + 0xa0]\n 67118: a4 = a3 >> 0x38\n 67121: u8 [a0 + 0xf] = a4\n 67124: a4 = a3 >> 0x30\n 67127: u8 [a0 + 0xe] = a4\n 67130: a4 = a3 >> 0x28\n 67133: u8 [a0 + 0xd] = a4\n 67136: a4 = a3 >> 0x20\n 67139: u8 [a0 + 0xc] = a4\n 67142: a4 = a3 >> 0x18\n 67145: u8 [a0 + 0xb] = a4\n 67148: a4 = a3 >> 0x10\n 67151: u8 [a0 + 0xa] = a4\n 67154: a4 = a3 >> 0x8\n 67157: u8 [a0 + 0x9] = a4\n 67160: u8 [a0 + 0x8] = a3\n 67163: a3 = u64 [sp + 0xb0]\n 67167: a4 = a3 >> 0x38\n 67170: u8 [a0 + 0x7] = a4\n 67173: a4 = a3 >> 0x30\n 67176: u8 [a0 + 0x6] = a4\n 67179: a4 = a3 >> 0x28\n 67182: u8 [a0 + 0x5] = a4\n 67185: a4 = a3 >> 0x20\n 67188: u8 [a0 + 0x4] = a4\n 67191: a4 = a3 >> 0x18\n 67194: u8 [a0 + 0x3] = a4\n 67197: a4 = a3 >> 0x10\n 67200: u8 [a0 + 0x2] = a4\n 67203: a4 = a3 >> 0x8\n 67206: u8 [a0 + 0x1] = a4\n 67209: u8 [a0] = a3\n 67211: a3 = u64 [sp + 0xa8]\n 67215: u8 [a0 + 0x18] = a3\n 67218: a4 = a1 >> 0x38\n 67221: u8 [a0 + 0x17] = a4\n 67224: a4 = a1 >> 0x30\n 67227: u8 [a0 + 0x16] = a4\n 67230: a4 = a1 >> 0x28\n 67233: u8 [a0 + 0x15] = a4\n 67236: a4 = a1 >> 0x20\n 67239: u8 [a0 + 0x14] = a4\n 67242: a4 = a1 >> 0x18\n 67245: u8 [a0 + 0x13] = a4\n 67248: a4 = a1 >> 0x10\n 67251: u8 [a0 + 0x12] = a4\n 67254: a4 = a1 >> 0x8\n 67257: u8 [a0 + 0x11] = a4\n 67260: a4 = a3 >> 0x38\n 67263: u8 [a0 + 0x1f] = a4\n 67266: a4 = a3 >> 0x30\n 67269: u8 [a0 + 0x1e] = a4\n 67272: a4 = a3 >> 0x28\n 67275: u8 [a0 + 0x1d] = a4\n 67278: a4 = a3 >> 0x20\n 67281: u8 [a0 + 0x1c] = a4\n 67284: a4 = a3 >> 0x18\n 67287: u8 [a0 + 0x1b] = a4\n 67290: a4 = a3 >> 0x10\n 67293: u8 [a0 + 0x1a] = a4\n 67296: a4 = a3 >> 0x8\n 67299: s1 = 0xffffffe0\n 67309: s1 = a5 <u s1\n 67312: s1 = 0 if t1 != 0\n 67314: s1 = 0 if t0 != 0\n 67316: u8 [a0 + 0x19] = a4\n 67319: jump @1459 if s1 == 0\n      : @1441 (gas: 6)\n 67323: u64 [sp + 0x178] = a2\n 67327: u64 [sp + 0x180] = t1\n 67331: i32 a0 = a5 >> 0x5\n 67334: a3 = u64 [sp + 0x140]\n 67338: a1 = u64 [sp + 0x138]\n 67342: jump @1459 if a0 >=u 2047\n      : @1442 (gas: 4)\n 67348: a0 = a5 + 0x5f\n 67351: a2 = a0 & t2\n 67354: u64 [sp + 0x170] = a2\n 67358: jump @1459 if a2 >u 65536\n      : @1443 (gas: 94)\n 67365: t2 = u64 [sp + 0x190]\n 67369: a0 = a1 * t2\n 67372: a4 = a0 - ra\n 67375: a0 = a0 <u ra\n 67378: s0 = a1 mulhu t2\n 67381: a2 = a3 * t2\n 67384: u64 [sp + 0x120] = a2\n 67388: s0 = s0 + a2\n 67391: t0 = u64 [sp + 0x1a8]\n 67395: ra = a1 * t0\n 67398: u64 [sp + 0x168] = a5\n 67402: t1 = ra + s0\n 67405: a5 = u64 [sp + 0xc0]\n 67409: a2 = t1 ^ a5\n 67412: s1 = t1 <u a5\n 67415: s1 = a0 if a2 == 0\n 67418: u64 [sp + 0x128] = s1\n 67422: a2 = t1 - a5\n 67425: a2 = a2 - a0\n 67428: a0 = a4 + a1\n 67431: u64 [sp + 0x160] = a0\n 67435: a0 = a0 <u a4\n 67438: a4 = a0 + a3\n 67441: a5 = a2 + a4\n 67444: a4 = a5 ^ a2\n 67447: u64 [sp + 0x158] = a5\n 67451: a2 = a5 <u a2\n 67454: a2 = a0 if a4 == 0\n 67457: u64 [sp + 0x150] = a2\n 67461: a0 = u64 [sp + 0x120]\n 67465: a2 = s0 <u a0\n 67468: t1 = t1 <u ra\n 67471: a4 = a3 mulhu t2\n 67474: a5 = a4 + a2\n 67477: a4 = a1 mulhu t0\n 67480: a4 = a4 + t1\n 67483: u64 [sp + 0x120] = a4\n 67487: a0 = u64 [sp + 0x188]\n 67491: a4 = a0 * a3\n 67494: s0 = a0 mulhu a1\n 67497: t1 = s0 + a4\n 67500: s0 = a0 * a1\n 67503: a0 = u64 [sp + 0x1a0]\n 67507: ra = a0 * a1\n 67510: a4 = u64 [sp + 0x130]\n 67514: a2 = t2 mulhu a4\n 67517: a0 = u64 [sp + 0x148]\n 67521: a0 = t2 * a0\n 67524: a0 = a0 + a2\n 67527: ra = ra + t1\n 67530: a1 = a3 * t0\n 67533: s1 = a3 mulhu t0\n 67536: a3 = t0 * a4\n 67539: a0 = a0 + a3\n 67542: t1 = u64 [sp + 0x120]\n 67546: t1 = t1 + a5\n 67549: a2 = t1 <u a5\n 67552: a2 = a2 + s1\n 67555: a0 = a0 + ra\n 67558: t1 = t1 + a1\n 67561: a1 = t1 <u a1\n 67564: a1 = a1 + a2\n 67567: a2 = t2 * a4\n 67570: a2 = a2 + s0\n 67573: a3 = a2 <u s0\n 67576: a0 = a0 + a3\n 67579: a0 = a0 + a1\n 67582: a2 = a2 + t1\n 67585: a1 = a2 <u t1\n 67588: s0 = u64 [sp + 0x168]\n 67592: a3 = u64 [sp + 0xd0]\n 67596: a1 = a1 - a3\n 67599: a0 = a0 + a1\n 67602: a3 = u64 [sp + 0xd8]\n 67606: a1 = a2 - a3\n 67609: a2 = a2 <u a3\n 67612: a5 = u64 [sp + 0x128]\n 67616: a3 = a1 - a5\n 67619: a1 = a1 <u a5\n 67622: a1 = a1 + a2\n 67625: a0 = a0 - a1\n 67628: a1 = a3 + a4\n 67631: a2 = a1 <u a3\n 67634: a0 = a0 + a2\n 67637: t0 = u64 [sp + 0x150]\n 67641: t0 = t0 + a1\n 67644: a1 = t0 <u a1\n 67647: a0 = a0 + a1\n 67650: a5 = u64 [sp + 0x148]\n 67654: a5 = a5 + a0\n 67657: i32 a1 = s0 + 0x20\n 67660: a0 = u64 [sp + 0x100]\n 67664: a2 = u64 [sp + 0x170]\n 67668: jump @1445 if a0 >=u a2\n      : @1444 (gas: 3)\n 67671: a0 = u64 [sp + 0xf0]\n 67675: u32 [a0] = a2\n 67677: fallthrough\n      : @1445 (gas: 72)\n 67678: a0 = u64 [sp + 0xf8]\n 67682: a1 = a1 + a0\n 67685: a2 = reverse a5\n 67687: a5 = reverse t0\n 67689: a0 = u64 [sp + 0x158]\n 67693: a4 = reverse a0\n 67695: a0 = u64 [sp + 0x160]\n 67699: a0 = reverse a0\n 67701: u8 [a1 + 0x18] = a0\n 67704: a3 = a0 >> 0x38\n 67707: u8 [a1 + 0x1f] = a3\n 67710: a3 = a0 >> 0x30\n 67713: u8 [a1 + 0x1e] = a3\n 67716: a3 = a0 >> 0x28\n 67719: u8 [a1 + 0x1d] = a3\n 67722: a3 = a0 >> 0x20\n 67725: u8 [a1 + 0x1c] = a3\n 67728: a3 = a0 >> 0x18\n 67731: u8 [a1 + 0x1b] = a3\n 67734: a3 = a0 >> 0x10\n 67737: u8 [a1 + 0x1a] = a3\n 67740: a0 = a0 >> 0x8\n 67743: u8 [a1 + 0x19] = a0\n 67746: u8 [a1 + 0x10] = a4\n 67749: a0 = a4 >> 0x38\n 67752: u8 [a1 + 0x17] = a0\n 67755: a0 = a4 >> 0x30\n 67758: u8 [a1 + 0x16] = a0\n 67761: a0 = a4 >> 0x28\n 67764: u8 [a1 + 0x15] = a0\n 67767: a0 = a4 >> 0x20\n 67770: u8 [a1 + 0x14] = a0\n 67773: a0 = a4 >> 0x18\n 67776: u8 [a1 + 0x13] = a0\n 67779: a0 = a4 >> 0x10\n 67782: u8 [a1 + 0x12] = a0\n 67785: a4 = a4 >> 0x8\n 67788: u8 [a1 + 0x11] = a4\n 67791: u8 [a1 + 0x8] = a5\n 67794: a0 = a5 >> 0x38\n 67797: u8 [a1 + 0xf] = a0\n 67800: a0 = a5 >> 0x30\n 67803: u8 [a1 + 0xe] = a0\n 67806: a0 = a5 >> 0x28\n 67809: u8 [a1 + 0xd] = a0\n 67812: a0 = a5 >> 0x20\n 67815: u8 [a1 + 0xc] = a0\n 67818: a0 = a5 >> 0x18\n 67821: u8 [a1 + 0xb] = a0\n 67824: a0 = a5 >> 0x10\n 67827: u8 [a1 + 0xa] = a0\n 67830: a5 = a5 >> 0x8\n 67833: u8 [a1 + 0x9] = a5\n 67836: u8 [a1] = a2\n 67838: a0 = a2 >> 0x38\n 67841: u8 [a1 + 0x7] = a0\n 67844: a0 = a2 >> 0x30\n 67847: u8 [a1 + 0x6] = a0\n 67850: a0 = a2 >> 0x28\n 67853: u8 [a1 + 0x5] = a0\n 67856: a0 = a2 >> 0x20\n 67859: u8 [a1 + 0x4] = a0\n 67862: a0 = a2 >> 0x18\n 67865: u8 [a1 + 0x3] = a0\n 67868: a0 = a2 >> 0x10\n 67871: u8 [a1 + 0x2] = a0\n 67874: a2 = a2 >> 0x8\n 67877: u8 [a1 + 0x1] = a2\n 67880: a3 = u64 [sp + 0xc8]\n 67884: t1 = u64 [sp + 0x180]\n 67888: t0 = u64 [sp + 0x178]\n 67892: fallthrough\n      : @1446 (gas: 10)\n 67893: u64 [a3] = s0\n 67895: u64 [a3 + 0x8] = t1\n 67898: a0 = u64 [sp + 0x198]\n 67902: u64 [a3 + 0x10] = a0\n 67905: u64 [a3 + 0x18] = t0\n 67908: ra = u64 [sp + 0x240]\n 67912: s0 = u64 [sp + 0x238]\n 67916: s1 = u64 [sp + 0x230]\n 67920: sp = sp + 0x248\n 67924: ret\n      : @1447 (gas: 13)\n 67926: a0 = u64 [s1 + 0x50]\n 67929: a1 = u64 [s1 + 0x58]\n 67932: a2 = u64 [s1 + 0x40]\n 67935: a4 = u64 [s1 + 0x48]\n 67938: t1 = reverse a0\n 67940: s0 = reverse a1\n 67942: t0 = reverse a2\n 67944: a3 = reverse a4\n 67946: a1 = a3 | t0\n 67949: a0 = s0 <u 0xffffffffffffffc0\n 67952: a0 = 0 if t1 != 0\n 67954: a0 = 0 if a1 != 0\n 67956: jump @1462 if a0 == 0\n      : @1448 (gas: 26)\n 67960: a0 = s0 + 0x40\n 67963: a2 = a0 <u s0\n 67966: a4 = t1 + a2\n 67969: a5 = a4 <u t1\n 67972: a5 = a2 if a2 == 0\n 67975: a5 = a5 + a3\n 67978: a2 = a5 <u a3\n 67981: a2 = a2 + t0\n 67984: a2 = reverse a2\n 67986: a5 = reverse a5\n 67988: a4 = reverse a4\n 67990: a0 = reverse a0\n 67992: u64 [s1 + 0x58] = a0\n 67995: u64 [s1 + 0x50] = a4\n 67998: u64 [s1 + 0x48] = a5\n 68001: a0 = s0 | a3\n 68004: a4 = t1 | t0\n 68007: a0 = a0 | a4\n 68010: a0 = a0 >> 0x20\n 68013: u64 [sp + 0x198] = a3\n 68017: a4 = a4 | a3\n 68020: a4 = a4 << 0x20\n 68023: a0 = a0 | a4\n 68026: u64 [s1 + 0x40] = a2\n 68029: a3 = u64 [sp + 0xc8]\n 68033: jump @1459 if a0 != 0\n      : @1449 (gas: 3)\n 68037: i32 a0 = s0 >> 0x10\n 68040: a4 = u64 [sp + 0x100]\n 68044: jump @1459 if a0 != 0\n      : @1450 (gas: 4)\n 68048: a0 = s0 + 0x3f\n 68051: a0 = a0 & 0x1ffe0\n 68056: a2 = 0x10000\n 68061: jump @1459 if a2 <u a0\n      : @1451 (gas: 1)\n 68065: jump @1453 if a4 >=u a0\n      : @1452 (gas: 4)\n 68068: a2 = u64 [sp + 0xf0]\n 68072: u32 [a2] = a0\n 68074: a4 = a0\n 68076: fallthrough\n      : @1453 (gas: 39)\n 68077: a0 = 0xffffffe0\n 68087: a0 = s0 <u a0\n 68090: a0 = 0 if t1 != 0\n 68092: a0 = 0 if a1 != 0\n 68094: i32 a1 = s0 + 0\n 68096: a1 = a1 + s1\n 68099: u8 [a1 + 31] = 0\n 68102: u8 [a1 + 30] = 0\n 68105: u8 [a1 + 29] = 0\n 68108: u8 [a1 + 28] = 0\n 68111: u8 [a1 + 27] = 0\n 68114: u8 [a1 + 26] = 0\n 68117: u8 [a1 + 25] = 0\n 68120: u8 [a1 + 24] = 0\n 68123: u8 [a1 + 23] = 0\n 68126: u8 [a1 + 22] = 0\n 68129: u8 [a1 + 21] = 0\n 68132: u8 [a1 + 20] = 0\n 68135: u8 [a1 + 19] = 0\n 68138: u8 [a1 + 18] = 0\n 68141: u8 [a1 + 17] = 0\n 68144: u8 [a1 + 16] = 0\n 68147: u8 [a1 + 15] = 0\n 68150: u8 [a1 + 14] = 0\n 68153: u8 [a1 + 13] = 0\n 68156: u8 [a1 + 12] = 0\n 68159: u8 [a1 + 11] = 0\n 68162: u8 [a1 + 10] = 0\n 68165: u8 [a1 + 9] = 0\n 68168: u8 [a1 + 8] = 0\n 68171: u8 [a1 + 7] = 0\n 68174: u8 [a1 + 6] = 0\n 68177: u8 [a1 + 5] = 0\n 68180: u8 [a1 + 4] = 0\n 68183: u8 [a1 + 3] = 0\n 68186: u8 [a1 + 2] = 0\n 68189: u8 [a1 + 1] = 0\n 68192: u8 [a1 + 0] = 0\n 68194: jump @1459 if a0 == 0\n      : @1454 (gas: 2)\n 68198: i32 a0 = s0 >> 0x5\n 68201: jump @1459 if a0 >=u 2047\n      : @1455 (gas: 3)\n 68207: a0 = s0 + 0x5f\n 68210: a0 = a0 & 0x1ffe0\n 68215: jump @1459 if a0 >u 65536\n      : @1456 (gas: 2)\n 68221: i32 a1 = s0 + 0x20\n 68224: jump @1458 if a4 >=u a0\n      : @1457 (gas: 3)\n 68227: a2 = u64 [sp + 0xf0]\n 68231: u32 [a2] = a0\n 68233: fallthrough\n      : @1458 (gas: 34)\n 68234: a0 = s1 + a1\n 68237: u8 [a0 + 31] = 0\n 68240: u8 [a0 + 30] = 0\n 68243: u8 [a0 + 29] = 0\n 68246: u8 [a0 + 28] = 0\n 68249: u8 [a0 + 27] = 0\n 68252: u8 [a0 + 26] = 0\n 68255: u8 [a0 + 25] = 0\n 68258: u8 [a0 + 24] = 0\n 68261: u8 [a0 + 23] = 0\n 68264: u8 [a0 + 22] = 0\n 68267: u8 [a0 + 21] = 0\n 68270: u8 [a0 + 20] = 0\n 68273: u8 [a0 + 19] = 0\n 68276: u8 [a0 + 18] = 0\n 68279: u8 [a0 + 17] = 0\n 68282: u8 [a0 + 16] = 0\n 68285: u8 [a0 + 15] = 0\n 68288: u8 [a0 + 14] = 0\n 68291: u8 [a0 + 13] = 0\n 68294: u8 [a0 + 12] = 0\n 68297: u8 [a0 + 11] = 0\n 68300: u8 [a0 + 10] = 0\n 68303: u8 [a0 + 9] = 0\n 68306: u8 [a0 + 8] = 0\n 68309: u8 [a0 + 7] = 0\n 68312: u8 [a0 + 6] = 0\n 68315: u8 [a0 + 5] = 0\n 68318: u8 [a0 + 4] = 0\n 68321: u8 [a0 + 3] = 0\n 68324: u8 [a0 + 2] = 0\n 68327: u8 [a0 + 1] = 0\n 68330: u8 [a0 + 0] = 0\n 68332: jump @1446\n      : @1459 (gas: 1)\n 68335: trap\n      : @1460 (gas: 17)\n 68336: u64 [0x20060] = 0\n 68341: u64 [0x20068] = 0\n 68346: u64 [0x20058] = 0\n 68351: u64 [0x20050] = 0x717b484e\n 68360: u32 [0x20070] = 0x41000000\n 68369: u32 [0x20064] = 0\n 68374: u32 [0x20068] = 0\n 68379: u32 [0x2006c] = 0\n 68384: u32 [0x20058] = 0\n 68389: u32 [0x2005c] = 0\n 68394: u32 [0x20060] = 0\n 68399: u32 [0x20054] = 0\n 68404: i32 a1 = t1 + 0\n 68406: a0 = 0x1\n 68409: a2 = 0x24\n 68412: ecalli 5 // 'seal_return'\n 68414: fallthrough\n      : @1461 (gas: 17)\n 68415: u64 [a3 + 16] = 0\n 68418: u64 [a3 + 24] = 0\n 68421: u64 [a3 + 8] = 0\n 68424: u64 [a3 + 0] = 0x717b484e\n 68430: u32 [a3 + 32] = 0x41000000\n 68437: u32 [a3 + 20] = 0\n 68440: u32 [a3 + 24] = 0\n 68443: u32 [a3 + 28] = 0\n 68446: u32 [a3 + 8] = 0\n 68449: u32 [a3 + 12] = 0\n 68452: u32 [a3 + 16] = 0\n 68455: u32 [a3 + 4] = 0\n 68458: i32 a1 = a3 + 0\n 68460: a0 = 0x1\n 68463: a2 = 0x24\n 68466: ecalli 5 // 'seal_return'\n 68468: fallthrough\n      : @1462 (gas: 18)\n 68469: u64 [s1 + 16] = 0\n 68472: u64 [s1 + 24] = 0\n 68475: u64 [s1 + 8] = 0\n 68478: u64 [s1 + 0] = 0x717b484e\n 68484: u32 [s1 + 32] = 0x41000000\n 68491: u32 [s1 + 20] = 0\n 68494: u32 [s1 + 24] = 0\n 68497: u32 [s1 + 28] = 0\n 68500: u32 [s1 + 8] = 0\n 68503: u32 [s1 + 12] = 0\n 68506: u32 [s1 + 16] = 0\n 68509: u32 [s1 + 4] = 0\n 68512: i32 a1 = s1 + 0\n 68514: a0 = 0x1\n 68517: a2 = 0x24\n 68520: ra = 0x88\n 68524: ecalli 5 // 'seal_return'\n 68526: fallthrough\n      : @1463 [@dyn 68] (gas: 76)\n 68527: sp = sp + 0xfffffffffffffcd0\n 68531: u64 [sp + 0x328] = ra\n 68535: u64 [sp + 0x320] = s0\n 68539: u64 [sp + 0x318] = s1\n 68543: s0 = sp + 0x330\n 68547: sp = sp & 0xfffffffffffffff0\n 68550: t0 = u64 [s0 + 0x10]\n 68553: s1 = u64 [t0 + 0x18]\n 68556: u64 [sp + 0x80] = s1\n 68560: t1 = u64 [s0 + 0x8]\n 68563: s1 = u64 [t0 + 0x10]\n 68566: u64 [sp + 0x68] = s1\n 68569: s1 = u64 [t0 + 0x8]\n 68572: u64 [sp + 0x70] = s1\n 68575: s1 = u64 [t0]\n 68577: u64 [sp + 0x78] = s1\n 68580: s1 = u64 [t1 + 0x18]\n 68583: u64 [sp + 0xf0] = s1\n 68587: t0 = u64 [s0]\n 68589: s1 = u64 [t1 + 0x10]\n 68592: u64 [sp + 0xd8] = s1\n 68596: s1 = u64 [t1 + 0x8]\n 68599: u64 [sp + 0xe0] = s1\n 68603: s1 = u64 [t1]\n 68605: u64 [sp + 0xe8] = s1\n 68609: s1 = u64 [t0 + 0x18]\n 68612: u64 [sp + 0x90] = s1\n 68616: s1 = u64 [t0 + 0x10]\n 68619: u64 [sp + 0x98] = s1\n 68623: s1 = u64 [t0 + 0x8]\n 68626: u64 [sp + 0xa0] = s1\n 68630: s1 = u64 [t0]\n 68632: u64 [sp + 0xa8] = s1\n 68636: s1 = u64 [a5 + 0x18]\n 68639: u64 [sp + 0x118] = s1\n 68643: s1 = u64 [a5 + 0x10]\n 68646: u64 [sp + 0x120] = s1\n 68650: s1 = u64 [a5 + 0x8]\n 68653: u64 [sp + 0x128] = s1\n 68657: a5 = u64 [a5]\n 68659: u64 [sp + 0x130] = a5\n 68663: a5 = u64 [a4 + 0x18]\n 68666: u64 [sp + 0xb8] = a5\n 68670: a5 = u64 [a4 + 0x10]\n 68673: u64 [sp + 0xc0] = a5\n 68677: a5 = u64 [a4 + 0x8]\n 68680: u64 [sp + 0xc8] = a5\n 68684: a4 = u64 [a4]\n 68686: u64 [sp + 0xd0] = a4\n 68690: a4 = u64 [a3 + 0x18]\n 68693: u64 [sp + 0x138] = a4\n 68697: a4 = u64 [a3 + 0x10]\n 68700: u64 [sp + 0x140] = a4\n 68704: a4 = u64 [a3 + 0x8]\n 68707: u64 [sp + 0x148] = a4\n 68711: a3 = u64 [a3]\n 68713: u64 [sp + 0x150] = a3\n 68717: a3 = u64 [a2 + 0x18]\n 68720: u64 [sp + 0xf8] = a3\n 68724: a3 = u64 [a2 + 0x10]\n 68727: u64 [sp + 0x100] = a3\n 68731: a3 = u64 [a2 + 0x8]\n 68734: u64 [sp + 0x108] = a3\n 68738: a2 = u64 [a2]\n 68740: u64 [sp + 0x110] = a2\n 68744: a2 = u64 [a1 + 0x18]\n 68747: u64 [sp + 0x158] = a2\n 68751: a2 = u64 [a1 + 0x10]\n 68754: u64 [sp + 0x160] = a2\n 68758: a2 = u64 [a1 + 0x8]\n 68761: u64 [sp + 0x168] = a2\n 68765: a1 = u64 [a1]\n 68767: u64 [sp + 0x170] = a1\n 68771: u64 [sp + 0x88] = a0\n 68775: a0 = sp + 0x2f0\n 68779: ra = 138, jump @864\n      : @1464 [@dyn 69] (gas: 12)\n 68785: a0 = 0x20044\n 68790: a1 = u64 [sp + 0x308]\n 68794: u64 [sp + 0x1c0] = a1\n 68798: a1 = u64 [sp + 0x300]\n 68802: u64 [sp + 0x1b8] = a1\n 68806: a1 = u64 [sp + 0x2f8]\n 68810: u64 [sp + 0x1f0] = a1\n 68814: u64 [sp + 0x208] = a0\n 68818: t0 = i32 [0x20044]\n 68823: a1 = u64 [sp + 0x2f0]\n 68827: u64 [sp + 0x1d8] = a1\n 68831: jump @1466 if t0 >u 95\n      : @1465 (gas: 4)\n 68835: t0 = 0x60\n 68838: a1 = u64 [sp + 0x208]\n 68842: u32 [a1] = t0\n 68844: fallthrough\n      : @1466 (gas: 15)\n 68845: a5 = 0x20050\n 68850: a1 = u64 [0x200a0]\n 68855: a2 = u64 [0x200a8]\n 68860: a3 = u64 [0x20090]\n 68865: a4 = u64 [0x20098]\n 68870: t1 = reverse a1\n 68872: t2 = reverse a2\n 68874: s1 = reverse a3\n 68876: a3 = reverse a4\n 68878: a0 = a3 | s1\n 68881: a1 = t2 <u 0xffffffffffffff60\n 68885: a1 = 0 if t1 != 0\n 68887: u64 [sp + 0x1d0] = a0\n 68891: a1 = 0 if a0 != 0\n 68893: jump @1468 if a1 != 0\n      : @1467 (gas: 1)\n 68896: jump @1584\n      : @1468 (gas: 26)\n 68899: a1 = t2 + 0xa0\n 68903: a2 = a1 <u t2\n 68906: a0 = t1 + a2\n 68909: a4 = a0 <u t1\n 68912: a4 = a2 if a2 == 0\n 68915: a4 = a4 + a3\n 68918: a2 = a4 <u a3\n 68921: a2 = a2 + s1\n 68924: a2 = reverse a2\n 68926: a4 = reverse a4\n 68928: a0 = reverse a0\n 68930: a1 = reverse a1\n 68932: u64 [0x200a8] = a1\n 68937: u64 [0x200a0] = a0\n 68942: u64 [0x20098] = a4\n 68947: a1 = t2 | a3\n 68950: u64 [sp + 0x190] = s1\n 68954: a0 = t1 | s1\n 68957: a1 = a1 | a0\n 68960: a1 = a1 >> 0x20\n 68963: u64 [sp + 0x188] = a3\n 68967: a3 = a3 | a0\n 68970: a3 = a3 << 0x20\n 68973: a1 = a1 | a3\n 68976: u64 [0x20090] = a2\n 68981: jump @1470 if a1 == 0\n      : @1469 (gas: 1)\n 68984: jump @1578\n      : @1470 (gas: 2)\n 68987: i32 a1 = t2 >> 0x10\n 68990: jump @1472 if a1 == 0\n      : @1471 (gas: 1)\n 68993: jump @1578\n      : @1472 (gas: 4)\n 68996: a1 = t2 + 0x3f\n 68999: u64 [sp + 504] = 0x1ffe0\n 69006: a0 = a1 & 0x1ffe0\n 69011: jump @1474 if a0 <=u 65536\n      : @1473 (gas: 1)\n 69017: jump @1578\n      : @1474 (gas: 4)\n 69020: u64 [sp + 0x1e8] = t1\n 69024: u64 [sp + 0x200] = a5\n 69028: a1 = a0\n 69030: jump @1476 if t0 >=u a0\n      : @1475 (gas: 3)\n 69033: a0 = u64 [sp + 0x208]\n 69037: u32 [a0] = a1\n 69039: fallthrough\n      : @1476 (gas: 40)\n 69040: u64 [sp + 0x1c8] = a1\n 69044: i32 s1 = t2 + 0\n 69046: a0 = u64 [sp + 0x200]\n 69050: s1 = s1 + a0\n 69053: u8 [s1 + 31] = 0x4\n 69057: u8 [s1 + 30] = 0\n 69060: u8 [s1 + 29] = 0\n 69063: u8 [s1 + 28] = 0\n 69066: u8 [s1 + 27] = 0\n 69069: u8 [s1 + 26] = 0\n 69072: u8 [s1 + 25] = 0\n 69075: u8 [s1 + 24] = 0\n 69078: u8 [s1 + 23] = 0\n 69081: u8 [s1 + 22] = 0\n 69084: u8 [s1 + 21] = 0\n 69087: u8 [s1 + 20] = 0\n 69090: u8 [s1 + 19] = 0\n 69093: u8 [s1 + 18] = 0\n 69096: u8 [s1 + 17] = 0\n 69099: u8 [s1 + 16] = 0\n 69102: u8 [s1 + 15] = 0\n 69105: u8 [s1 + 14] = 0\n 69108: u8 [s1 + 13] = 0\n 69111: u8 [s1 + 12] = 0\n 69114: u8 [s1 + 11] = 0\n 69117: u8 [s1 + 10] = 0\n 69120: u8 [s1 + 9] = 0\n 69123: u8 [s1 + 8] = 0\n 69126: u8 [s1 + 7] = 0\n 69129: u8 [s1 + 6] = 0\n 69132: u8 [s1 + 5] = 0\n 69135: u8 [s1 + 4] = 0\n 69138: u8 [s1 + 3] = 0\n 69141: u8 [s1 + 2] = 0\n 69144: u8 [s1 + 1] = 0\n 69147: u64 [sp + 0xb0] = s1\n 69151: u8 [s1 + 0] = 0\n 69153: a0 = sp + 0x2d0\n 69157: u64 [sp + 0x1e0] = t2\n 69161: ra = 140, jump @164\n      : @1477 [@dyn 70] (gas: 8)\n 69168: a4 = u64 [sp + 0x1e0]\n 69172: a0 = 0xffffffe0\n 69182: a0 = a4 <u a0\n 69185: a1 = u64 [sp + 0x1e8]\n 69189: a0 = 0 if a1 != 0\n 69191: a1 = u64 [sp + 0x1d0]\n 69195: a0 = 0 if a1 != 0\n 69197: jump @1479 if a0 != 0\n      : @1478 (gas: 1)\n 69200: jump @1578\n      : @1479 (gas: 3)\n 69203: i32 a1 = a4 >> 0x5\n 69206: u64 [sp + 0x180] = a1\n 69210: jump @1481 if a1 <u 2047\n      : @1480 (gas: 1)\n 69215: jump @1578\n      : @1481 (gas: 5)\n 69218: a0 = a4 + 0x5f\n 69221: a1 = u64 [sp + 0x1f8]\n 69225: a1 = a1 & a0\n 69228: u64 [sp + 0x198] = a1\n 69232: jump @1483 if a1 <=u 65536\n      : @1482 (gas: 1)\n 69238: jump @1578\n      : @1483 (gas: 9)\n 69241: a0 = u64 [sp + 0x2e8]\n 69245: a1 = u64 [sp + 0x2e0]\n 69249: a2 = u64 [sp + 0x2d8]\n 69253: a3 = u64 [sp + 0x208]\n 69257: a5 = i32 [a3]\n 69259: a3 = u64 [sp + 0x2d0]\n 69263: i32 a4 = a4 + 0x20\n 69266: s1 = u64 [sp + 0x198]\n 69270: jump @1485 if a5 >=u s1\n      : @1484 (gas: 3)\n 69273: a5 = u64 [sp + 0x208]\n 69277: u32 [a5] = s1\n 69279: fallthrough\n      : @1485 (gas: 69)\n 69280: a5 = u64 [sp + 0x200]\n 69284: a5 = a5 + a4\n 69287: a0 = reverse a0\n 69289: a1 = reverse a1\n 69291: a2 = reverse a2\n 69293: a3 = reverse a3\n 69295: u8 [a5 + 0x18] = a3\n 69298: a4 = a3 >> 0x38\n 69301: u8 [a5 + 0x1f] = a4\n 69304: a4 = a3 >> 0x30\n 69307: u8 [a5 + 0x1e] = a4\n 69310: a4 = a3 >> 0x28\n 69313: u8 [a5 + 0x1d] = a4\n 69316: a4 = a3 >> 0x20\n 69319: u8 [a5 + 0x1c] = a4\n 69322: a4 = a3 >> 0x18\n 69325: u8 [a5 + 0x1b] = a4\n 69328: a4 = a3 >> 0x10\n 69331: u8 [a5 + 0x1a] = a4\n 69334: a3 = a3 >> 0x8\n 69337: u8 [a5 + 0x19] = a3\n 69340: u8 [a5 + 0x10] = a2\n 69343: a3 = a2 >> 0x38\n 69346: u8 [a5 + 0x17] = a3\n 69349: a3 = a2 >> 0x30\n 69352: u8 [a5 + 0x16] = a3\n 69355: a3 = a2 >> 0x28\n 69358: u8 [a5 + 0x15] = a3\n 69361: a3 = a2 >> 0x20\n 69364: u8 [a5 + 0x14] = a3\n 69367: a3 = a2 >> 0x18\n 69370: u8 [a5 + 0x13] = a3\n 69373: a3 = a2 >> 0x10\n 69376: u8 [a5 + 0x12] = a3\n 69379: a2 = a2 >> 0x8\n 69382: u8 [a5 + 0x11] = a2\n 69385: u8 [a5 + 0x8] = a1\n 69388: a2 = a1 >> 0x38\n 69391: u8 [a5 + 0xf] = a2\n 69394: a2 = a1 >> 0x30\n 69397: u8 [a5 + 0xe] = a2\n 69400: a2 = a1 >> 0x28\n 69403: u8 [a5 + 0xd] = a2\n 69406: a2 = a1 >> 0x20\n 69409: u8 [a5 + 0xc] = a2\n 69412: a2 = a1 >> 0x18\n 69415: u8 [a5 + 0xb] = a2\n 69418: a2 = a1 >> 0x10\n 69421: u8 [a5 + 0xa] = a2\n 69424: a1 = a1 >> 0x8\n 69427: u8 [a5 + 0x9] = a1\n 69430: u8 [a5] = a0\n 69432: a1 = a0 >> 0x38\n 69435: u8 [a5 + 0x7] = a1\n 69438: a1 = a0 >> 0x30\n 69441: u8 [a5 + 0x6] = a1\n 69444: a1 = a0 >> 0x28\n 69447: u8 [a5 + 0x5] = a1\n 69450: a1 = a0 >> 0x20\n 69453: u8 [a5 + 0x4] = a1\n 69456: a1 = a0 >> 0x18\n 69459: u8 [a5 + 0x3] = a1\n 69462: a1 = a0 >> 0x10\n 69465: u8 [a5 + 0x2] = a1\n 69468: a0 = a0 >> 0x8\n 69471: u64 [sp + 0x60] = a5\n 69474: u8 [a5 + 0x1] = a0\n 69477: a0 = sp + 0x2b0\n 69481: ra = 142, jump @164\n      : @1486 [@dyn 71] (gas: 16)\n 69488: a0 = u64 [sp + 0x188]\n 69492: a0 = a0 >u 0\n 69494: a1 = u64 [sp + 0x190]\n 69498: a2 = a1 >u 0\n 69500: a2 = a0 if a1 == 0\n 69503: a0 = 0xffffffbf\n 69513: a4 = u64 [sp + 0x1e0]\n 69517: a0 = a0 <u a4\n 69520: a1 = u64 [sp + 0x1e8]\n 69524: a3 = a1 >u 0\n 69526: u64 [sp + 0x1a8] = a3\n 69530: a0 = a3 if a1 != 0\n 69533: a1 = u64 [sp + 0x1d0]\n 69537: u64 [sp + 0x1b0] = a2\n 69541: a0 = a2 if a1 != 0\n 69544: jump @1488 if a0 == 0\n      : @1487 (gas: 1)\n 69547: jump @1578\n      : @1488 (gas: 3)\n 69550: i32 a1 = a4 >> 0x6\n 69553: u64 [sp + 0x58] = a1\n 69556: jump @1490 if a1 <=u 1022\n      : @1489 (gas: 1)\n 69561: jump @1578\n      : @1490 (gas: 5)\n 69564: a0 = a4 + 0x7f\n 69567: a1 = u64 [sp + 0x1f8]\n 69571: a1 = a1 & a0\n 69574: u64 [sp + 0x178] = a1\n 69578: jump @1492 if a1 <=u 65536\n      : @1491 (gas: 1)\n 69584: jump @1578\n      : @1492 (gas: 9)\n 69587: a0 = u64 [sp + 0x2c8]\n 69591: a1 = u64 [sp + 0x2c0]\n 69595: a2 = u64 [sp + 0x2b8]\n 69599: a3 = u64 [sp + 0x208]\n 69603: a5 = i32 [a3]\n 69605: a3 = u64 [sp + 0x2b0]\n 69609: i32 a4 = a4 + 0x40\n 69612: s1 = u64 [sp + 0x178]\n 69616: jump @1494 if a5 >=u s1\n      : @1493 (gas: 3)\n 69619: a5 = u64 [sp + 0x208]\n 69623: u32 [a5] = s1\n 69625: fallthrough\n      : @1494 (gas: 69)\n 69626: a5 = u64 [sp + 0x200]\n 69630: a5 = a5 + a4\n 69633: a0 = reverse a0\n 69635: a1 = reverse a1\n 69637: a2 = reverse a2\n 69639: a3 = reverse a3\n 69641: u8 [a5 + 0x18] = a3\n 69644: a4 = a3 >> 0x38\n 69647: u8 [a5 + 0x1f] = a4\n 69650: a4 = a3 >> 0x30\n 69653: u8 [a5 + 0x1e] = a4\n 69656: a4 = a3 >> 0x28\n 69659: u8 [a5 + 0x1d] = a4\n 69662: a4 = a3 >> 0x20\n 69665: u8 [a5 + 0x1c] = a4\n 69668: a4 = a3 >> 0x18\n 69671: u8 [a5 + 0x1b] = a4\n 69674: a4 = a3 >> 0x10\n 69677: u8 [a5 + 0x1a] = a4\n 69680: a3 = a3 >> 0x8\n 69683: u8 [a5 + 0x19] = a3\n 69686: u8 [a5 + 0x10] = a2\n 69689: a3 = a2 >> 0x38\n 69692: u8 [a5 + 0x17] = a3\n 69695: a3 = a2 >> 0x30\n 69698: u8 [a5 + 0x16] = a3\n 69701: a3 = a2 >> 0x28\n 69704: u8 [a5 + 0x15] = a3\n 69707: a3 = a2 >> 0x20\n 69710: u8 [a5 + 0x14] = a3\n 69713: a3 = a2 >> 0x18\n 69716: u8 [a5 + 0x13] = a3\n 69719: a3 = a2 >> 0x10\n 69722: u8 [a5 + 0x12] = a3\n 69725: a2 = a2 >> 0x8\n 69728: u8 [a5 + 0x11] = a2\n 69731: u8 [a5 + 0x8] = a1\n 69734: a2 = a1 >> 0x38\n 69737: u8 [a5 + 0xf] = a2\n 69740: a2 = a1 >> 0x30\n 69743: u8 [a5 + 0xe] = a2\n 69746: a2 = a1 >> 0x28\n 69749: u8 [a5 + 0xd] = a2\n 69752: a2 = a1 >> 0x20\n 69755: u8 [a5 + 0xc] = a2\n 69758: a2 = a1 >> 0x18\n 69761: u8 [a5 + 0xb] = a2\n 69764: a2 = a1 >> 0x10\n 69767: u8 [a5 + 0xa] = a2\n 69770: a1 = a1 >> 0x8\n 69773: u8 [a5 + 0x9] = a1\n 69776: u8 [a5] = a0\n 69778: a1 = a0 >> 0x38\n 69781: u8 [a5 + 0x7] = a1\n 69784: a1 = a0 >> 0x30\n 69787: u8 [a5 + 0x6] = a1\n 69790: a1 = a0 >> 0x28\n 69793: u8 [a5 + 0x5] = a1\n 69796: a1 = a0 >> 0x20\n 69799: u8 [a5 + 0x4] = a1\n 69802: a1 = a0 >> 0x18\n 69805: u8 [a5 + 0x3] = a1\n 69808: a1 = a0 >> 0x10\n 69811: u8 [a5 + 0x2] = a1\n 69814: a0 = a0 >> 0x8\n 69817: u64 [sp + 0x38] = a5\n 69820: u8 [a5 + 0x1] = a0\n 69823: a0 = sp + 0x290\n 69827: ra = 144, jump @164\n      : @1495 [@dyn 72] (gas: 10)\n 69834: a0 = 0xffffff9f\n 69844: a4 = u64 [sp + 0x1e0]\n 69848: a0 = a0 <u a4\n 69851: a1 = u64 [sp + 0x1e8]\n 69855: a2 = u64 [sp + 0x1a8]\n 69859: a0 = a2 if a1 != 0\n 69862: a1 = u64 [sp + 0x1d0]\n 69866: a2 = u64 [sp + 0x1b0]\n 69870: a0 = a2 if a1 != 0\n 69873: jump @1497 if a0 == 0\n      : @1496 (gas: 1)\n 69876: jump @1578\n      : @1497 (gas: 2)\n 69879: a1 = u64 [sp + 0x180]\n 69883: jump @1499 if a1 <=u 2044\n      : @1498 (gas: 1)\n 69888: jump @1578\n      : @1499 (gas: 4)\n 69891: a0 = a4 + 0x9f\n 69895: a1 = u64 [sp + 0x1f8]\n 69899: a1 = a1 & a0\n 69902: jump @1501 if a1 <=u 65536\n      : @1500 (gas: 1)\n 69908: jump @1578\n      : @1501 (gas: 8)\n 69911: a0 = u64 [sp + 0x2a8]\n 69915: s1 = u64 [sp + 0x2a0]\n 69919: a2 = u64 [sp + 0x298]\n 69923: a3 = u64 [sp + 0x208]\n 69927: a5 = i32 [a3]\n 69929: a3 = u64 [sp + 0x290]\n 69933: i32 a4 = a4 + 0x60\n 69936: jump @1503 if a5 >=u a1\n      : @1502 (gas: 3)\n 69939: a5 = u64 [sp + 0x208]\n 69943: u32 [a5] = a1\n 69945: fallthrough\n      : @1503 (gas: 70)\n 69946: u64 [sp + 0x30] = a1\n 69949: a5 = u64 [sp + 0x200]\n 69953: a5 = a5 + a4\n 69956: a0 = reverse a0\n 69958: a1 = reverse s1\n 69960: a2 = reverse a2\n 69962: a3 = reverse a3\n 69964: u8 [a5 + 0x18] = a3\n 69967: a4 = a3 >> 0x38\n 69970: u8 [a5 + 0x1f] = a4\n 69973: a4 = a3 >> 0x30\n 69976: u8 [a5 + 0x1e] = a4\n 69979: a4 = a3 >> 0x28\n 69982: u8 [a5 + 0x1d] = a4\n 69985: a4 = a3 >> 0x20\n 69988: u8 [a5 + 0x1c] = a4\n 69991: a4 = a3 >> 0x18\n 69994: u8 [a5 + 0x1b] = a4\n 69997: a4 = a3 >> 0x10\n 70000: u8 [a5 + 0x1a] = a4\n 70003: a3 = a3 >> 0x8\n 70006: u8 [a5 + 0x19] = a3\n 70009: u8 [a5 + 0x10] = a2\n 70012: a3 = a2 >> 0x38\n 70015: u8 [a5 + 0x17] = a3\n 70018: a3 = a2 >> 0x30\n 70021: u8 [a5 + 0x16] = a3\n 70024: a3 = a2 >> 0x28\n 70027: u8 [a5 + 0x15] = a3\n 70030: a3 = a2 >> 0x20\n 70033: u8 [a5 + 0x14] = a3\n 70036: a3 = a2 >> 0x18\n 70039: u8 [a5 + 0x13] = a3\n 70042: a3 = a2 >> 0x10\n 70045: u8 [a5 + 0x12] = a3\n 70048: a2 = a2 >> 0x8\n 70051: u8 [a5 + 0x11] = a2\n 70054: u8 [a5 + 0x8] = a1\n 70057: a2 = a1 >> 0x38\n 70060: u8 [a5 + 0xf] = a2\n 70063: a2 = a1 >> 0x30\n 70066: u8 [a5 + 0xe] = a2\n 70069: a2 = a1 >> 0x28\n 70072: u8 [a5 + 0xd] = a2\n 70075: a2 = a1 >> 0x20\n 70078: u8 [a5 + 0xc] = a2\n 70081: a2 = a1 >> 0x18\n 70084: u8 [a5 + 0xb] = a2\n 70087: a2 = a1 >> 0x10\n 70090: u8 [a5 + 0xa] = a2\n 70093: a1 = a1 >> 0x8\n 70096: u8 [a5 + 0x9] = a1\n 70099: u8 [a5] = a0\n 70101: a1 = a0 >> 0x38\n 70104: u8 [a5 + 0x7] = a1\n 70107: a1 = a0 >> 0x30\n 70110: u8 [a5 + 0x6] = a1\n 70113: a1 = a0 >> 0x28\n 70116: u8 [a5 + 0x5] = a1\n 70119: a1 = a0 >> 0x20\n 70122: u8 [a5 + 0x4] = a1\n 70125: a1 = a0 >> 0x18\n 70128: u8 [a5 + 0x3] = a1\n 70131: a1 = a0 >> 0x10\n 70134: u8 [a5 + 0x2] = a1\n 70137: a0 = a0 >> 0x8\n 70140: u64 [sp + 0x20] = a5\n 70143: u8 [a5 + 0x1] = a0\n 70146: a0 = sp + 0x270\n 70150: ra = 146, jump @164\n      : @1504 [@dyn 73] (gas: 10)\n 70157: a0 = 0xffffff7f\n 70167: s1 = u64 [sp + 0x1e0]\n 70171: a0 = a0 <u s1\n 70174: a1 = u64 [sp + 0x1e8]\n 70178: a2 = u64 [sp + 0x1a8]\n 70182: a0 = a2 if a1 != 0\n 70185: a1 = u64 [sp + 0x1d0]\n 70189: a2 = u64 [sp + 0x1b0]\n 70193: a0 = a2 if a1 != 0\n 70196: jump @1578 if a0 != 0\n      : @1505 (gas: 2)\n 70200: i32 ra = s1 >> 0x7\n 70203: jump @1578 if ra >u 510\n      : @1506 (gas: 4)\n 70209: a2 = s1 + 0xbf\n 70213: a0 = u64 [sp + 0x1f8]\n 70217: a1 = a2 & a0\n 70220: jump @1578 if a1 >u 65536\n      : @1507 (gas: 10)\n 70227: t0 = u64 [sp + 0x288]\n 70231: t1 = u64 [sp + 0x280]\n 70235: a4 = u64 [sp + 0x278]\n 70239: a0 = u64 [sp + 0x208]\n 70243: a3 = i32 [a0]\n 70245: a5 = u64 [sp + 0x270]\n 70249: i32 a0 = s1 + 0x80\n 70253: t2 = u64 [sp + 0x1d8]\n 70257: u64 [sp + 0x1b0] = a3\n 70261: jump @1509 if a3 >=u a1\n      : @1508 (gas: 5)\n 70264: s1 = u64 [sp + 0x208]\n 70268: u32 [s1] = a1\n 70270: t2 = u64 [sp + 0x1d8]\n 70274: u64 [sp + 0x1b0] = a1\n 70278: fallthrough\n      : @1509 (gas: 78)\n 70279: u64 [sp + 0x10] = a2\n 70282: a1 = u64 [sp + 0x200]\n 70286: a1 = a1 + a0\n 70289: a2 = reverse t0\n 70291: a3 = reverse t1\n 70293: a4 = reverse a4\n 70295: a0 = reverse a5\n 70297: u8 [a1 + 0x18] = a0\n 70300: a5 = a0 >> 0x38\n 70303: u8 [a1 + 0x1f] = a5\n 70306: a5 = a0 >> 0x30\n 70309: u8 [a1 + 0x1e] = a5\n 70312: a5 = a0 >> 0x28\n 70315: u8 [a1 + 0x1d] = a5\n 70318: a5 = a0 >> 0x20\n 70321: u8 [a1 + 0x1c] = a5\n 70324: a5 = a0 >> 0x18\n 70327: u8 [a1 + 0x1b] = a5\n 70330: a5 = a0 >> 0x10\n 70333: u8 [a1 + 0x1a] = a5\n 70336: a0 = a0 >> 0x8\n 70339: u8 [a1 + 0x19] = a0\n 70342: u8 [a1 + 0x10] = a4\n 70345: a0 = a4 >> 0x38\n 70348: u8 [a1 + 0x17] = a0\n 70351: a0 = a4 >> 0x30\n 70354: u8 [a1 + 0x16] = a0\n 70357: a0 = a4 >> 0x28\n 70360: u8 [a1 + 0x15] = a0\n 70363: a0 = a4 >> 0x20\n 70366: u8 [a1 + 0x14] = a0\n 70369: a0 = a4 >> 0x18\n 70372: u8 [a1 + 0x13] = a0\n 70375: a0 = a4 >> 0x10\n 70378: u8 [a1 + 0x12] = a0\n 70381: a4 = a4 >> 0x8\n 70384: u8 [a1 + 0x11] = a4\n 70387: u8 [a1 + 0x8] = a3\n 70390: a0 = a3 >> 0x38\n 70393: u8 [a1 + 0xf] = a0\n 70396: a0 = a3 >> 0x30\n 70399: u8 [a1 + 0xe] = a0\n 70402: a0 = a3 >> 0x28\n 70405: u8 [a1 + 0xd] = a0\n 70408: a0 = a3 >> 0x20\n 70411: u8 [a1 + 0xc] = a0\n 70414: a0 = a3 >> 0x18\n 70417: u8 [a1 + 0xb] = a0\n 70420: a0 = a3 >> 0x10\n 70423: u8 [a1 + 0xa] = a0\n 70426: a3 = a3 >> 0x8\n 70429: u8 [a1 + 0x9] = a3\n 70432: u8 [a1] = a2\n 70434: a0 = a2 >> 0x38\n 70437: u8 [a1 + 0x7] = a0\n 70440: a0 = a2 >> 0x30\n 70443: u8 [a1 + 0x6] = a0\n 70446: a0 = a2 >> 0x28\n 70449: u8 [a1 + 0x5] = a0\n 70452: a0 = a2 >> 0x20\n 70455: u8 [a1 + 0x4] = a0\n 70458: a0 = a2 >> 0x18\n 70461: u8 [a1 + 0x3] = a0\n 70464: a0 = a2 >> 0x10\n 70467: u8 [a1 + 0x2] = a0\n 70470: a2 = a2 >> 0x8\n 70473: a4 = u64 [sp + 0x1b8]\n 70477: a0 = t2 | a4\n 70480: a3 = u64 [sp + 0x1c0]\n 70484: a5 = u64 [sp + 0x1f0]\n 70488: a3 = a3 | a5\n 70491: a0 = a0 | a3\n 70494: a0 = a0 >> 0x20\n 70497: a3 = a3 | a4\n 70500: a3 = a3 << 0x20\n 70503: a0 = a0 | a3\n 70506: u8 [a1 + 0x1] = a2\n 70509: jump @1578 if a0 != 0\n      : @1510 (gas: 2)\n 70513: i32 a0 = t2 >> 0x10\n 70516: jump @1578 if a0 != 0\n      : @1511 (gas: 4)\n 70520: a0 = t2 + 0x3f\n 70523: a2 = u64 [sp + 0x1f8]\n 70527: a3 = a0 & a2\n 70530: jump @1578 if a3 >u 65536\n      : @1512 (gas: 3)\n 70537: u64 [sp + 0x8] = ra\n 70540: a0 = u64 [sp + 0x1b0]\n 70544: jump @1514 if a0 >=u a3\n      : @1513 (gas: 4)\n 70547: a0 = u64 [sp + 0x208]\n 70551: u32 [a0] = a3\n 70553: u64 [sp + 0x1b0] = a3\n 70557: fallthrough\n      : @1514 (gas: 101)\n 70558: u64 [sp + 0x1d0] = a3\n 70562: i32 a2 = t2 + 0\n 70564: a0 = u64 [sp + 0x200]\n 70568: a2 = a2 + a0\n 70571: a3 = u8 [a2 + 0x11]\n 70574: a4 = u8 [a2 + 0x10]\n 70577: a5 = u8 [a2 + 0x12]\n 70580: a0 = u8 [a2 + 0x13]\n 70583: a3 = a3 << 0x8\n 70586: a3 = a3 | a4\n 70589: a5 = a5 << 0x10\n 70592: a0 = a0 << 0x18\n 70595: a0 = a0 | a5\n 70598: t0 = a0 | a3\n 70601: a3 = u8 [a2 + 0x15]\n 70604: a4 = u8 [a2 + 0x14]\n 70607: a5 = u8 [a2 + 0x16]\n 70610: a0 = u8 [a2 + 0x17]\n 70613: a3 = a3 << 0x8\n 70616: a3 = a3 | a4\n 70619: a5 = a5 << 0x10\n 70622: a0 = a0 << 0x18\n 70625: a0 = a0 | a5\n 70628: a0 = a0 | a3\n 70631: a0 = a0 << 0x20\n 70634: ra = a0 | t0\n 70637: a3 = u8 [a2 + 0x1]\n 70640: a4 = u8 [a2]\n 70642: a5 = u8 [a2 + 0x2]\n 70645: a0 = u8 [a2 + 0x3]\n 70648: a3 = a3 << 0x8\n 70651: a3 = a3 | a4\n 70654: a5 = a5 << 0x10\n 70657: a0 = a0 << 0x18\n 70660: a0 = a0 | a5\n 70663: t0 = a0 | a3\n 70666: a3 = u8 [a2 + 0x5]\n 70669: a4 = u8 [a2 + 0x4]\n 70672: a5 = u8 [a2 + 0x6]\n 70675: a0 = u8 [a2 + 0x7]\n 70678: a3 = a3 << 0x8\n 70681: a3 = a3 | a4\n 70684: a5 = a5 << 0x10\n 70687: a0 = a0 << 0x18\n 70690: a0 = a0 | a5\n 70693: a0 = a0 | a3\n 70696: a0 = a0 << 0x20\n 70699: t1 = a0 | t0\n 70702: a0 = u8 [a2 + 0x19]\n 70705: a3 = u8 [a2 + 0x18]\n 70708: a4 = u8 [a2 + 0x1a]\n 70711: a5 = u8 [a2 + 0x1b]\n 70714: a0 = a0 << 0x8\n 70717: a0 = a0 | a3\n 70720: a4 = a4 << 0x10\n 70723: a5 = a5 << 0x18\n 70726: a4 = a4 | a5\n 70729: t0 = a4 | a0\n 70732: a3 = u8 [a2 + 0x1d]\n 70735: a4 = u8 [a2 + 0x1c]\n 70738: a5 = u8 [a2 + 0x1e]\n 70741: a0 = u8 [a2 + 0x1f]\n 70744: a3 = a3 << 0x8\n 70747: a3 = a3 | a4\n 70750: a5 = a5 << 0x10\n 70753: a0 = a0 << 0x18\n 70756: a0 = a0 | a5\n 70759: a0 = a0 | a3\n 70762: a0 = a0 << 0x20\n 70765: s1 = a0 | t0\n 70768: a0 = u8 [a2 + 0x9]\n 70771: a3 = u8 [a2 + 0x8]\n 70774: a4 = u8 [a2 + 0xa]\n 70777: a5 = u8 [a2 + 0xb]\n 70780: a0 = a0 << 0x8\n 70783: a0 = a0 | a3\n 70786: a4 = a4 << 0x10\n 70789: a5 = a5 << 0x18\n 70792: a4 = a4 | a5\n 70795: a0 = a0 | a4\n 70798: a3 = u8 [a2 + 0xd]\n 70801: a4 = u8 [a2 + 0xc]\n 70804: a5 = u8 [a2 + 0xe]\n 70807: a2 = u8 [a2 + 0xf]\n 70810: a3 = a3 << 0x8\n 70813: a3 = a3 | a4\n 70816: a5 = a5 << 0x10\n 70819: a2 = a2 << 0x18\n 70822: a2 = a2 | a5\n 70825: a2 = a2 | a3\n 70828: a2 = a2 << 0x20\n 70831: a0 = a0 | a2\n 70834: u64 [sp + 0x40] = s1\n 70837: u64 [sp + 0x1a0] = a0\n 70841: a0 = a0 | s1\n 70844: u64 [sp + 0x50] = ra\n 70847: u64 [sp + 0x48] = t1\n 70850: a2 = t1 | ra\n 70853: u64 [sp + 0x28] = a2\n 70856: a0 = a0 | a2\n 70859: jump @1585 if a0 == 0\n      : @1515 (gas: 10)\n 70863: a0 = u64 [sp + 0x1c0]\n 70867: a2 = u64 [sp + 0x1b8]\n 70871: a3 = a2 | a0\n 70874: a0 = 0xffffffe0\n 70884: a0 = t2 <u a0\n 70887: a2 = u64 [sp + 0x1f0]\n 70891: a0 = 0 if a2 != 0\n 70893: u64 [sp + 0x1a8] = a3\n 70897: a0 = 0 if a3 != 0\n 70899: jump @1578 if a0 == 0\n      : @1516 (gas: 3)\n 70903: i32 a3 = t2 >> 0x5\n 70906: s1 = u64 [sp + 0x1d0]\n 70910: jump @1578 if a3 >=u 2047\n      : @1517 (gas: 4)\n 70916: a0 = t2 + 0x5f\n 70919: a2 = u64 [sp + 0x1f8]\n 70923: a2 = a2 & a0\n 70926: jump @1578 if a2 >u 65536\n      : @1518 (gas: 4)\n 70933: u64 [sp + 0x18] = a3\n 70936: i32 ra = t2 + 0x20\n 70939: a5 = u64 [sp + 0x1b0]\n 70943: jump @1520 if a5 >=u a2\n      : @1519 (gas: 4)\n 70946: a0 = u64 [sp + 0x208]\n 70950: u32 [a0] = a2\n 70952: a5 = a2\n 70954: fallthrough\n      : @1520 (gas: 72)\n 70955: a0 = u64 [sp + 0x200]\n 70959: ra = ra + a0\n 70962: a0 = u64 [sp + 0x158]\n 70966: t0 = reverse a0\n 70968: a0 = u64 [sp + 0x160]\n 70972: a2 = reverse a0\n 70974: a0 = u64 [sp + 0x168]\n 70978: a3 = reverse a0\n 70980: a0 = u64 [sp + 0x170]\n 70984: a0 = reverse a0\n 70986: u8 [ra + 0x18] = a0\n 70989: a4 = a0 >> 0x38\n 70992: u8 [ra + 0x1f] = a4\n 70995: a4 = a0 >> 0x30\n 70998: u8 [ra + 0x1e] = a4\n 71001: a4 = a0 >> 0x28\n 71004: u8 [ra + 0x1d] = a4\n 71007: a4 = a0 >> 0x20\n 71010: u8 [ra + 0x1c] = a4\n 71013: a4 = a0 >> 0x18\n 71016: u8 [ra + 0x1b] = a4\n 71019: a4 = a0 >> 0x10\n 71022: u8 [ra + 0x1a] = a4\n 71025: a0 = a0 >> 0x8\n 71028: u8 [ra + 0x19] = a0\n 71031: u8 [ra + 0x10] = a3\n 71034: a0 = a3 >> 0x38\n 71037: u8 [ra + 0x17] = a0\n 71040: a0 = a3 >> 0x30\n 71043: u8 [ra + 0x16] = a0\n 71046: a0 = a3 >> 0x28\n 71049: u8 [ra + 0x15] = a0\n 71052: a0 = a3 >> 0x20\n 71055: u8 [ra + 0x14] = a0\n 71058: a0 = a3 >> 0x18\n 71061: u8 [ra + 0x13] = a0\n 71064: a0 = a3 >> 0x10\n 71067: u8 [ra + 0x12] = a0\n 71070: a3 = a3 >> 0x8\n 71073: u8 [ra + 0x11] = a3\n 71076: u8 [ra + 0x8] = a2\n 71079: a0 = a2 >> 0x38\n 71082: u8 [ra + 0xf] = a0\n 71085: a0 = a2 >> 0x30\n 71088: u8 [ra + 0xe] = a0\n 71091: a0 = a2 >> 0x28\n 71094: u8 [ra + 0xd] = a0\n 71097: a0 = a2 >> 0x20\n 71100: u8 [ra + 0xc] = a0\n 71103: a0 = a2 >> 0x18\n 71106: u8 [ra + 0xb] = a0\n 71109: a0 = a2 >> 0x10\n 71112: u8 [ra + 0xa] = a0\n 71115: a2 = a2 >> 0x8\n 71118: u8 [ra + 0x9] = a2\n 71121: u8 [ra] = t0\n 71123: a0 = t0 >> 0x38\n 71126: u8 [ra + 0x7] = a0\n 71129: a0 = t0 >> 0x30\n 71132: u8 [ra + 0x6] = a0\n 71135: a0 = t0 >> 0x28\n 71138: u8 [ra + 0x5] = a0\n 71141: a0 = t0 >> 0x20\n 71144: u8 [ra + 0x4] = a0\n 71147: a0 = t0 >> 0x18\n 71150: u8 [ra + 0x3] = a0\n 71153: a0 = t0 >> 0x10\n 71156: u8 [ra + 0x2] = a0\n 71159: a0 = t0 >> 0x8\n 71162: u8 [ra + 0x1] = a0\n 71165: t1 = a5\n 71167: jump @1522 if a5 >=u s1\n      : @1521 (gas: 4)\n 71170: a0 = u64 [sp + 0x208]\n 71174: u32 [a0] = s1\n 71176: t1 = s1\n 71178: fallthrough\n      : @1522 (gas: 19)\n 71179: ra = u64 [sp + 0x40]\n 71182: s1 = reverse ra\n 71184: a0 = u64 [sp + 0x50]\n 71187: a5 = reverse a0\n 71189: a0 = u64 [sp + 0x1a0]\n 71193: a2 = reverse a0\n 71195: a0 = u64 [sp + 0x48]\n 71198: a3 = reverse a0\n 71200: a4 = a3 >u 0\n 71202: t0 = a2 >u 0\n 71204: t0 = a4 if a3 != 0\n 71207: a0 = a5 >u 0\n 71209: a4 = s1 <u 0x2\n 71212: a4 = a4 ^ 0x1\n 71215: u64 [sp + 0x1b0] = a0\n 71219: a4 = a0 if a5 != 0\n 71222: a2 = a2 | a3\n 71225: a4 = t0 if a2 != 0\n 71228: jump @1587 if a4 == 0\n      : @1523 (gas: 8)\n 71232: u64 [sp + 0x170] = a2\n 71236: a2 = 0xffffffc0\n 71246: a2 = t2 <u a2\n 71249: a0 = u64 [sp + 0x1f0]\n 71253: a2 = 0 if a0 != 0\n 71255: a0 = u64 [sp + 0x1a8]\n 71259: a2 = 0 if a0 != 0\n 71261: jump @1578 if a2 == 0\n      : @1524 (gas: 2)\n 71265: i32 a2 = t2 >> 0x6\n 71268: jump @1578 if a2 >=u 1023\n      : @1525 (gas: 4)\n 71274: a2 = t2 + 0x7f\n 71277: a0 = u64 [sp + 0x1f8]\n 71281: a2 = a2 & a0\n 71284: jump @1578 if a2 >u 65536\n      : @1526 (gas: 5)\n 71291: u64 [sp + 0x160] = s1\n 71295: u64 [sp + 0x168] = a5\n 71299: i32 a5 = t2 + 0x40\n 71302: t2 = t1\n 71304: jump @1528 if t1 >=u a2\n      : @1527 (gas: 4)\n 71307: a0 = u64 [sp + 0x208]\n 71311: u32 [a0] = a2\n 71313: t2 = a2\n 71315: fallthrough\n      : @1528 (gas: 73)\n 71316: a0 = u64 [sp + 0x200]\n 71320: a5 = a5 + a0\n 71323: a0 = u64 [sp + 0x138]\n 71327: a2 = reverse a0\n 71329: a0 = u64 [sp + 0x140]\n 71333: a3 = reverse a0\n 71335: a0 = u64 [sp + 0x148]\n 71339: a4 = reverse a0\n 71341: a0 = u64 [sp + 0x150]\n 71345: s1 = reverse a0\n 71347: u8 [a5 + 0x18] = s1\n 71350: a0 = s1 >> 0x38\n 71353: u8 [a5 + 0x1f] = a0\n 71356: a0 = s1 >> 0x30\n 71359: u8 [a5 + 0x1e] = a0\n 71362: a0 = s1 >> 0x28\n 71365: u8 [a5 + 0x1d] = a0\n 71368: a0 = s1 >> 0x20\n 71371: u8 [a5 + 0x1c] = a0\n 71374: a0 = s1 >> 0x18\n 71377: u8 [a5 + 0x1b] = a0\n 71380: a0 = s1 >> 0x10\n 71383: u8 [a5 + 0x1a] = a0\n 71386: s1 = s1 >> 0x8\n 71389: u8 [a5 + 0x19] = s1\n 71392: u8 [a5 + 0x10] = a4\n 71395: a0 = a4 >> 0x38\n 71398: u8 [a5 + 0x17] = a0\n 71401: a0 = a4 >> 0x30\n 71404: u8 [a5 + 0x16] = a0\n 71407: a0 = a4 >> 0x28\n 71410: u8 [a5 + 0x15] = a0\n 71413: a0 = a4 >> 0x20\n 71416: u8 [a5 + 0x14] = a0\n 71419: a0 = a4 >> 0x18\n 71422: u8 [a5 + 0x13] = a0\n 71425: a0 = a4 >> 0x10\n 71428: u8 [a5 + 0x12] = a0\n 71431: a4 = a4 >> 0x8\n 71434: u8 [a5 + 0x11] = a4\n 71437: u8 [a5 + 0x8] = a3\n 71440: a0 = a3 >> 0x38\n 71443: u8 [a5 + 0xf] = a0\n 71446: a0 = a3 >> 0x30\n 71449: u8 [a5 + 0xe] = a0\n 71452: a0 = a3 >> 0x28\n 71455: u8 [a5 + 0xd] = a0\n 71458: a0 = a3 >> 0x20\n 71461: u8 [a5 + 0xc] = a0\n 71464: a0 = a3 >> 0x18\n 71467: u8 [a5 + 0xb] = a0\n 71470: a0 = a3 >> 0x10\n 71473: u8 [a5 + 0xa] = a0\n 71476: a3 = a3 >> 0x8\n 71479: u8 [a5 + 0x9] = a3\n 71482: u8 [a5] = a2\n 71484: a0 = a2 >> 0x38\n 71487: u8 [a5 + 0x7] = a0\n 71490: a0 = a2 >> 0x30\n 71493: u8 [a5 + 0x6] = a0\n 71496: a0 = a2 >> 0x28\n 71499: u8 [a5 + 0x5] = a0\n 71502: a0 = a2 >> 0x20\n 71505: u8 [a5 + 0x4] = a0\n 71508: a0 = a2 >> 0x18\n 71511: u8 [a5 + 0x3] = a0\n 71514: a0 = a2 >> 0x10\n 71517: u8 [a5 + 0x2] = a0\n 71520: a2 = a2 >> 0x8\n 71523: u8 [a5 + 0x1] = a2\n 71526: a2 = u64 [sp + 0x1d0]\n 71530: t1 = u64 [sp + 0x28]\n 71533: jump @1530 if t2 >=u a2\n      : @1529 (gas: 4)\n 71536: a0 = u64 [sp + 0x208]\n 71540: u32 [a0] = a2\n 71542: t2 = a2\n 71544: fallthrough\n      : @1530 (gas: 7)\n 71545: a0 = 0x200000000000000\n 71555: a0 = ra ^ a0\n 71558: a3 = u64 [sp + 0x1a0]\n 71562: a0 = a0 | a3\n 71565: a0 = t1 | a0\n 71568: a4 = u64 [sp + 0x1d8]\n 71572: jump @1579 if a0 == 0\n      : @1531 (gas: 8)\n 71576: a0 = 0xffffffa0\n 71586: a0 = a4 <u a0\n 71589: a2 = u64 [sp + 0x1f0]\n 71593: a0 = 0 if a2 != 0\n 71595: a2 = u64 [sp + 0x1a8]\n 71599: a0 = 0 if a2 != 0\n 71601: a3 = u64 [sp + 0x200]\n 71605: jump @1578 if a0 == 0\n      : @1532 (gas: 2)\n 71609: a2 = u64 [sp + 0x18]\n 71612: jump @1578 if a2 >=u 2045\n      : @1533 (gas: 4)\n 71618: a0 = a4 + 0x9f\n 71622: a2 = u64 [sp + 0x1f8]\n 71626: a2 = a2 & a0\n 71629: jump @1578 if a2 >u 65536\n      : @1534 (gas: 2)\n 71636: i32 a5 = a4 + 0x60\n 71639: jump @1536 if t2 >=u a2\n      : @1535 (gas: 4)\n 71642: a0 = u64 [sp + 0x208]\n 71646: u32 [a0] = a2\n 71648: t2 = a2\n 71650: fallthrough\n      : @1536 (gas: 71)\n 71651: a5 = a5 + a3\n 71654: a0 = u64 [sp + 0x118]\n 71658: a2 = reverse a0\n 71660: a0 = u64 [sp + 0x120]\n 71664: a3 = reverse a0\n 71666: a0 = u64 [sp + 0x128]\n 71670: a4 = reverse a0\n 71672: a0 = u64 [sp + 0x130]\n 71676: a0 = reverse a0\n 71678: u8 [a5 + 0x18] = a0\n 71681: s1 = a0 >> 0x38\n 71684: u8 [a5 + 0x1f] = s1\n 71687: s1 = a0 >> 0x30\n 71690: u8 [a5 + 0x1e] = s1\n 71693: s1 = a0 >> 0x28\n 71696: u8 [a5 + 0x1d] = s1\n 71699: s1 = a0 >> 0x20\n 71702: u8 [a5 + 0x1c] = s1\n 71705: s1 = a0 >> 0x18\n 71708: u8 [a5 + 0x1b] = s1\n 71711: s1 = a0 >> 0x10\n 71714: u8 [a5 + 0x1a] = s1\n 71717: a0 = a0 >> 0x8\n 71720: u8 [a5 + 0x19] = a0\n 71723: u8 [a5 + 0x10] = a4\n 71726: a0 = a4 >> 0x38\n 71729: u8 [a5 + 0x17] = a0\n 71732: a0 = a4 >> 0x30\n 71735: u8 [a5 + 0x16] = a0\n 71738: a0 = a4 >> 0x28\n 71741: u8 [a5 + 0x15] = a0\n 71744: a0 = a4 >> 0x20\n 71747: u8 [a5 + 0x14] = a0\n 71750: a0 = a4 >> 0x18\n 71753: u8 [a5 + 0x13] = a0\n 71756: a0 = a4 >> 0x10\n 71759: u8 [a5 + 0x12] = a0\n 71762: a4 = a4 >> 0x8\n 71765: u8 [a5 + 0x11] = a4\n 71768: u8 [a5 + 0x8] = a3\n 71771: a0 = a3 >> 0x38\n 71774: u8 [a5 + 0xf] = a0\n 71777: a0 = a3 >> 0x30\n 71780: u8 [a5 + 0xe] = a0\n 71783: a0 = a3 >> 0x28\n 71786: u8 [a5 + 0xd] = a0\n 71789: a0 = a3 >> 0x20\n 71792: u8 [a5 + 0xc] = a0\n 71795: a0 = a3 >> 0x18\n 71798: u8 [a5 + 0xb] = a0\n 71801: a0 = a3 >> 0x10\n 71804: u8 [a5 + 0xa] = a0\n 71807: a3 = a3 >> 0x8\n 71810: u8 [a5 + 0x9] = a3\n 71813: u8 [a5] = a2\n 71815: a0 = a2 >> 0x38\n 71818: u8 [a5 + 0x7] = a0\n 71821: a0 = a2 >> 0x30\n 71824: u8 [a5 + 0x6] = a0\n 71827: a0 = a2 >> 0x28\n 71830: u8 [a5 + 0x5] = a0\n 71833: a0 = a2 >> 0x20\n 71836: u8 [a5 + 0x4] = a0\n 71839: a0 = a2 >> 0x18\n 71842: u8 [a5 + 0x3] = a0\n 71845: a0 = a2 >> 0x10\n 71848: u8 [a5 + 0x2] = a0\n 71851: a2 = a2 >> 0x8\n 71854: u8 [a5 + 0x1] = a2\n 71857: a2 = u64 [sp + 0x1d0]\n 71861: jump @1538 if t2 >=u a2\n      : @1537 (gas: 4)\n 71864: a0 = u64 [sp + 0x208]\n 71868: u32 [a0] = a2\n 71870: t2 = a2\n 71872: fallthrough\n      : @1538 (gas: 7)\n 71873: a0 = 0x300000000000000\n 71883: a0 = ra ^ a0\n 71886: a2 = u64 [sp + 0x1a0]\n 71890: a0 = a0 | a2\n 71893: a0 = t1 | a0\n 71896: a3 = u64 [sp + 0x1d8]\n 71900: jump @1579 if a0 == 0\n      : @1539 (gas: 8)\n 71904: a0 = 0xffffff80\n 71914: a0 = a3 <u a0\n 71917: a2 = u64 [sp + 0x1f0]\n 71921: a0 = 0 if a2 != 0\n 71923: a2 = u64 [sp + 0x1a8]\n 71927: a0 = 0 if a2 != 0\n 71929: a4 = u64 [sp + 0x200]\n 71933: jump @1578 if a0 == 0\n      : @1540 (gas: 2)\n 71937: i32 a0 = a3 >> 0x7\n 71940: jump @1578 if a0 >=u 511\n      : @1541 (gas: 4)\n 71946: a0 = a3 + 0xbf\n 71950: a2 = u64 [sp + 0x1f8]\n 71954: a2 = a2 & a0\n 71957: jump @1578 if a2 >u 65536\n      : @1542 (gas: 2)\n 71964: i32 a3 = a3 + 0x80\n 71968: jump @1544 if t2 >=u a2\n      : @1543 (gas: 4)\n 71971: a0 = u64 [sp + 0x208]\n 71975: u32 [a0] = a2\n 71977: t2 = a2\n 71979: fallthrough\n      : @1544 (gas: 71)\n 71980: a2 = a4 + a3\n 71983: a0 = u64 [sp + 0xf0]\n 71987: a3 = reverse a0\n 71989: a0 = u64 [sp + 0xd8]\n 71993: a5 = reverse a0\n 71995: a0 = u64 [sp + 0xe0]\n 71999: a4 = reverse a0\n 72001: a0 = u64 [sp + 0xe8]\n 72005: a0 = reverse a0\n 72007: u8 [a2 + 0x18] = a0\n 72010: s1 = a0 >> 0x38\n 72013: u8 [a2 + 0x1f] = s1\n 72016: s1 = a0 >> 0x30\n 72019: u8 [a2 + 0x1e] = s1\n 72022: s1 = a0 >> 0x28\n 72025: u8 [a2 + 0x1d] = s1\n 72028: s1 = a0 >> 0x20\n 72031: u8 [a2 + 0x1c] = s1\n 72034: s1 = a0 >> 0x18\n 72037: u8 [a2 + 0x1b] = s1\n 72040: s1 = a0 >> 0x10\n 72043: u8 [a2 + 0x1a] = s1\n 72046: a0 = a0 >> 0x8\n 72049: u8 [a2 + 0x19] = a0\n 72052: u8 [a2 + 0x10] = a4\n 72055: a0 = a4 >> 0x38\n 72058: u8 [a2 + 0x17] = a0\n 72061: a0 = a4 >> 0x30\n 72064: u8 [a2 + 0x16] = a0\n 72067: a0 = a4 >> 0x28\n 72070: u8 [a2 + 0x15] = a0\n 72073: a0 = a4 >> 0x20\n 72076: u8 [a2 + 0x14] = a0\n 72079: a0 = a4 >> 0x18\n 72082: u8 [a2 + 0x13] = a0\n 72085: a0 = a4 >> 0x10\n 72088: u8 [a2 + 0x12] = a0\n 72091: a4 = a4 >> 0x8\n 72094: u8 [a2 + 0x11] = a4\n 72097: u8 [a2 + 0x8] = a5\n 72100: a0 = a5 >> 0x38\n 72103: u8 [a2 + 0xf] = a0\n 72106: a0 = a5 >> 0x30\n 72109: u8 [a2 + 0xe] = a0\n 72112: a0 = a5 >> 0x28\n 72115: u8 [a2 + 0xd] = a0\n 72118: a0 = a5 >> 0x20\n 72121: u8 [a2 + 0xc] = a0\n 72124: a0 = a5 >> 0x18\n 72127: u8 [a2 + 0xb] = a0\n 72130: a0 = a5 >> 0x10\n 72133: u8 [a2 + 0xa] = a0\n 72136: a5 = a5 >> 0x8\n 72139: u8 [a2 + 0x9] = a5\n 72142: u8 [a2] = a3\n 72144: a0 = a3 >> 0x38\n 72147: u8 [a2 + 0x7] = a0\n 72150: a0 = a3 >> 0x30\n 72153: u8 [a2 + 0x6] = a0\n 72156: a0 = a3 >> 0x28\n 72159: u8 [a2 + 0x5] = a0\n 72162: a0 = a3 >> 0x20\n 72165: u8 [a2 + 0x4] = a0\n 72168: a0 = a3 >> 0x18\n 72171: u8 [a2 + 0x3] = a0\n 72174: a0 = a3 >> 0x10\n 72177: u8 [a2 + 0x2] = a0\n 72180: a3 = a3 >> 0x8\n 72183: u8 [a2 + 0x1] = a3\n 72186: a2 = u64 [sp + 0x1d0]\n 72190: jump @1546 if t2 >=u a2\n      : @1545 (gas: 4)\n 72193: a0 = u64 [sp + 0x208]\n 72197: u32 [a0] = a2\n 72199: t2 = a2\n 72201: fallthrough\n      : @1546 (gas: 9)\n 72202: a0 = u64 [sp + 0x160]\n 72206: a0 = a0 <u 0x4\n 72209: a0 = a0 ^ 0x1\n 72212: a2 = u64 [sp + 0x168]\n 72216: a3 = u64 [sp + 0x1b0]\n 72220: a0 = a3 if a2 != 0\n 72223: a2 = u64 [sp + 0x170]\n 72227: a0 = t0 if a2 != 0\n 72230: jump @1579 if a0 == 0\n      : @1547 (gas: 3)\n 72234: u64 [sp + 0x1a0] = a1\n 72238: a2 = u64 [sp + 0x1c8]\n 72242: jump @1549 if t2 >=u a2\n      : @1548 (gas: 4)\n 72245: a0 = u64 [sp + 0x208]\n 72249: u32 [a0] = a2\n 72251: t2 = a2\n 72253: fallthrough\n      : @1549 (gas: 95)\n 72254: a1 = u64 [sp + 0xb0]\n 72258: a0 = u8 [a1 + 0x11]\n 72261: a2 = u8 [a1 + 0x10]\n 72264: a3 = u8 [a1 + 0x12]\n 72267: a4 = u8 [a1 + 0x13]\n 72270: a0 = a0 << 0x8\n 72273: a0 = a0 | a2\n 72276: a3 = a3 << 0x10\n 72279: a4 = a4 << 0x18\n 72282: a3 = a3 | a4\n 72285: a0 = a0 | a3\n 72288: a2 = u8 [a1 + 0x15]\n 72291: a3 = u8 [a1 + 0x14]\n 72294: a4 = u8 [a1 + 0x16]\n 72297: a5 = u8 [a1 + 0x17]\n 72300: a2 = a2 << 0x8\n 72303: a2 = a2 | a3\n 72306: a4 = a4 << 0x10\n 72309: a5 = a5 << 0x18\n 72312: a4 = a4 | a5\n 72315: a2 = a2 | a4\n 72318: a2 = a2 << 0x20\n 72321: t0 = a2 | a0\n 72324: a0 = u8 [a1 + 0x1]\n 72327: a2 = u8 [a1]\n 72329: a3 = u8 [a1 + 0x2]\n 72332: a4 = u8 [a1 + 0x3]\n 72335: a0 = a0 << 0x8\n 72338: a0 = a0 | a2\n 72341: a3 = a3 << 0x10\n 72344: a4 = a4 << 0x18\n 72347: a3 = a3 | a4\n 72350: a0 = a0 | a3\n 72353: a2 = u8 [a1 + 0x5]\n 72356: a3 = u8 [a1 + 0x4]\n 72359: a4 = u8 [a1 + 0x6]\n 72362: a5 = u8 [a1 + 0x7]\n 72365: a2 = a2 << 0x8\n 72368: a2 = a2 | a3\n 72371: a4 = a4 << 0x10\n 72374: a5 = a5 << 0x18\n 72377: a4 = a4 | a5\n 72380: a2 = a2 | a4\n 72383: a2 = a2 << 0x20\n 72386: t1 = a2 | a0\n 72389: a0 = u8 [a1 + 0x19]\n 72392: a2 = u8 [a1 + 0x18]\n 72395: a3 = u8 [a1 + 0x1a]\n 72398: a4 = u8 [a1 + 0x1b]\n 72401: a0 = a0 << 0x8\n 72404: a0 = a0 | a2\n 72407: a3 = a3 << 0x10\n 72410: a4 = a4 << 0x18\n 72413: a3 = a3 | a4\n 72416: a0 = a0 | a3\n 72419: a2 = u8 [a1 + 0x1d]\n 72422: a3 = u8 [a1 + 0x1c]\n 72425: a4 = u8 [a1 + 0x1e]\n 72428: s1 = u8 [a1 + 0x1f]\n 72431: a2 = a2 << 0x8\n 72434: a2 = a2 | a3\n 72437: a4 = a4 << 0x10\n 72440: s1 = s1 << 0x18\n 72443: a4 = a4 | s1\n 72446: a2 = a2 | a4\n 72449: a2 = a2 << 0x20\n 72452: a5 = a2 | a0\n 72455: a0 = u8 [a1 + 0x9]\n 72458: a2 = u8 [a1 + 0x8]\n 72461: a3 = u8 [a1 + 0xa]\n 72464: a4 = u8 [a1 + 0xb]\n 72467: a0 = a0 << 0x8\n 72470: a0 = a0 | a2\n 72473: a3 = a3 << 0x10\n 72476: a4 = a4 << 0x18\n 72479: a3 = a3 | a4\n 72482: a0 = a0 | a3\n 72485: a2 = u8 [a1 + 0xd]\n 72488: a3 = u8 [a1 + 0xc]\n 72491: a4 = u8 [a1 + 0xe]\n 72494: s1 = u8 [a1 + 0xf]\n 72497: a2 = a2 << 0x8\n 72500: a2 = a2 | a3\n 72503: a4 = a4 << 0x10\n 72506: s1 = s1 << 0x18\n 72509: a4 = a4 | s1\n 72512: a2 = a2 | a4\n 72515: a2 = a2 << 0x20\n 72518: a0 = a0 | a2\n 72521: u64 [sp + 0x1d0] = a0\n 72525: a0 = a0 | a5\n 72528: a1 = t1 | t0\n 72531: u64 [sp + 0x1a8] = a1\n 72535: a0 = a0 | a1\n 72538: jump @1579 if a0 == 0\n      : @1550 (gas: 5)\n 72542: u64 [sp + 0x1b0] = t1\n 72546: t1 = t0\n 72548: a4 = a5\n 72550: a1 = u64 [sp + 0x198]\n 72554: jump @1552 if t2 >=u a1\n      : @1551 (gas: 4)\n 72557: a0 = u64 [sp + 0x208]\n 72561: u32 [a0] = a1\n 72563: t2 = a1\n 72565: fallthrough\n      : @1552 (gas: 71)\n 72566: a0 = u64 [sp + 0xf8]\n 72570: s1 = reverse a0\n 72572: a0 = u64 [sp + 0x100]\n 72576: a2 = reverse a0\n 72578: a0 = u64 [sp + 0x108]\n 72582: a3 = reverse a0\n 72584: a0 = u64 [sp + 0x110]\n 72588: ra = reverse a0\n 72590: t0 = u64 [sp + 0x60]\n 72593: u8 [t0 + 0x18] = ra\n 72596: a0 = ra >> 0x38\n 72599: u8 [t0 + 0x1f] = a0\n 72602: a0 = ra >> 0x30\n 72605: u8 [t0 + 0x1e] = a0\n 72608: a0 = ra >> 0x28\n 72611: u8 [t0 + 0x1d] = a0\n 72614: a0 = ra >> 0x20\n 72617: u8 [t0 + 0x1c] = a0\n 72620: a0 = ra >> 0x18\n 72623: u8 [t0 + 0x1b] = a0\n 72626: a0 = ra >> 0x10\n 72629: u8 [t0 + 0x1a] = a0\n 72632: a0 = ra >> 0x8\n 72635: u8 [t0 + 0x19] = a0\n 72638: u8 [t0 + 0x10] = a3\n 72641: a0 = a3 >> 0x38\n 72644: u8 [t0 + 0x17] = a0\n 72647: a0 = a3 >> 0x30\n 72650: u8 [t0 + 0x16] = a0\n 72653: a0 = a3 >> 0x28\n 72656: u8 [t0 + 0x15] = a0\n 72659: a0 = a3 >> 0x20\n 72662: u8 [t0 + 0x14] = a0\n 72665: a0 = a3 >> 0x18\n 72668: u8 [t0 + 0x13] = a0\n 72671: a0 = a3 >> 0x10\n 72674: u8 [t0 + 0x12] = a0\n 72677: a3 = a3 >> 0x8\n 72680: u8 [t0 + 0x11] = a3\n 72683: u8 [t0 + 0x8] = a2\n 72686: a0 = a2 >> 0x38\n 72689: u8 [t0 + 0xf] = a0\n 72692: a0 = a2 >> 0x30\n 72695: u8 [t0 + 0xe] = a0\n 72698: a0 = a2 >> 0x28\n 72701: u8 [t0 + 0xd] = a0\n 72704: a0 = a2 >> 0x20\n 72707: u8 [t0 + 0xc] = a0\n 72710: a0 = a2 >> 0x18\n 72713: u8 [t0 + 0xb] = a0\n 72716: a0 = a2 >> 0x10\n 72719: u8 [t0 + 0xa] = a0\n 72722: a2 = a2 >> 0x8\n 72725: u8 [t0 + 0x9] = a2\n 72728: u8 [t0] = s1\n 72730: a0 = s1 >> 0x38\n 72733: u8 [t0 + 0x7] = a0\n 72736: a0 = s1 >> 0x30\n 72739: u8 [t0 + 0x6] = a0\n 72742: a0 = s1 >> 0x28\n 72745: u8 [t0 + 0x5] = a0\n 72748: a0 = s1 >> 0x20\n 72751: u8 [t0 + 0x4] = a0\n 72754: a0 = s1 >> 0x18\n 72757: u8 [t0 + 0x3] = a0\n 72760: a0 = s1 >> 0x10\n 72763: u8 [t0 + 0x2] = a0\n 72766: s1 = s1 >> 0x8\n 72769: u8 [t0 + 0x1] = s1\n 72772: a0 = u64 [sp + 0x1c8]\n 72776: jump @1554 if t2 >=u a0\n      : @1553 (gas: 4)\n 72779: a0 = u64 [sp + 0x208]\n 72783: t2 = u64 [sp + 0x1c8]\n 72787: u32 [a0] = t2\n 72789: fallthrough\n      : @1554 (gas: 19)\n 72790: t0 = a4\n 72792: a0 = reverse a4\n 72794: a5 = reverse t1\n 72796: a1 = u64 [sp + 0x1d0]\n 72800: a2 = reverse a1\n 72802: a1 = u64 [sp + 0x1b0]\n 72806: a3 = reverse a1\n 72808: s1 = a3 >u 0\n 72810: a4 = a2 >u 0\n 72812: a4 = s1 if a3 != 0\n 72815: t1 = a5 >u 0\n 72817: u64 [sp + 0x1b0] = a0\n 72821: s1 = a0 <u 0x2\n 72824: s1 = s1 ^ 0x1\n 72827: s1 = t1 if a5 != 0\n 72830: a3 = a3 | a2\n 72833: s1 = a4 if a3 != 0\n 72836: ra = u64 [sp + 0x30]\n 72839: jump @1579 if s1 == 0\n      : @1555 (gas: 3)\n 72843: a1 = u64 [sp + 0x178]\n 72847: a0 = u64 [sp + 0x58]\n 72850: jump @1578 if a0 >=u 1023\n      : @1556 (gas: 1)\n 72856: jump @1578 if a1 >u 65536\n      : @1557 (gas: 6)\n 72863: u64 [sp + 0x160] = a3\n 72867: u64 [sp + 0x168] = a4\n 72871: u64 [sp + 0x170] = t1\n 72875: u64 [sp + 0x198] = a5\n 72879: a4 = t2\n 72881: jump @1559 if t2 >=u a1\n      : @1558 (gas: 4)\n 72884: a0 = u64 [sp + 0x208]\n 72888: u32 [a0] = a1\n 72890: a4 = a1\n 72892: fallthrough\n      : @1559 (gas: 73)\n 72893: a0 = u64 [sp + 0xb8]\n 72897: s1 = reverse a0\n 72899: a0 = u64 [sp + 0xc0]\n 72903: a2 = reverse a0\n 72905: a0 = u64 [sp + 0xc8]\n 72909: t1 = reverse a0\n 72911: a0 = u64 [sp + 0xd0]\n 72915: a0 = reverse a0\n 72917: a5 = u64 [sp + 0x38]\n 72920: u8 [a5 + 0x18] = a0\n 72923: a3 = a0 >> 0x38\n 72926: u8 [a5 + 0x1f] = a3\n 72929: a3 = a0 >> 0x30\n 72932: u8 [a5 + 0x1e] = a3\n 72935: a3 = a0 >> 0x28\n 72938: u8 [a5 + 0x1d] = a3\n 72941: a3 = a0 >> 0x20\n 72944: u8 [a5 + 0x1c] = a3\n 72947: a3 = a0 >> 0x18\n 72950: u8 [a5 + 0x1b] = a3\n 72953: a3 = a0 >> 0x10\n 72956: u8 [a5 + 0x1a] = a3\n 72959: a0 = a0 >> 0x8\n 72962: u8 [a5 + 0x19] = a0\n 72965: u8 [a5 + 0x10] = t1\n 72968: a0 = t1 >> 0x38\n 72971: u8 [a5 + 0x17] = a0\n 72974: a0 = t1 >> 0x30\n 72977: u8 [a5 + 0x16] = a0\n 72980: a0 = t1 >> 0x28\n 72983: u8 [a5 + 0x15] = a0\n 72986: a0 = t1 >> 0x20\n 72989: u8 [a5 + 0x14] = a0\n 72992: a0 = t1 >> 0x18\n 72995: u8 [a5 + 0x13] = a0\n 72998: a0 = t1 >> 0x10\n 73001: u8 [a5 + 0x12] = a0\n 73004: a0 = t1 >> 0x8\n 73007: u8 [a5 + 0x11] = a0\n 73010: u8 [a5 + 0x8] = a2\n 73013: a0 = a2 >> 0x38\n 73016: u8 [a5 + 0xf] = a0\n 73019: a0 = a2 >> 0x30\n 73022: u8 [a5 + 0xe] = a0\n 73025: a0 = a2 >> 0x28\n 73028: u8 [a5 + 0xd] = a0\n 73031: a0 = a2 >> 0x20\n 73034: u8 [a5 + 0xc] = a0\n 73037: a0 = a2 >> 0x18\n 73040: u8 [a5 + 0xb] = a0\n 73043: a0 = a2 >> 0x10\n 73046: u8 [a5 + 0xa] = a0\n 73049: a2 = a2 >> 0x8\n 73052: u8 [a5 + 0x9] = a2\n 73055: u8 [a5] = s1\n 73057: a0 = s1 >> 0x38\n 73060: u8 [a5 + 0x7] = a0\n 73063: a0 = s1 >> 0x30\n 73066: u8 [a5 + 0x6] = a0\n 73069: a0 = s1 >> 0x28\n 73072: u8 [a5 + 0x5] = a0\n 73075: a0 = s1 >> 0x20\n 73078: u8 [a5 + 0x4] = a0\n 73081: a0 = s1 >> 0x18\n 73084: u8 [a5 + 0x3] = a0\n 73087: a0 = s1 >> 0x10\n 73090: u8 [a5 + 0x2] = a0\n 73093: s1 = s1 >> 0x8\n 73096: u8 [a5 + 0x1] = s1\n 73099: t1 = u64 [sp + 0x1c8]\n 73103: a3 = a4\n 73105: t2 = u64 [sp + 0x1a8]\n 73109: jump @1561 if a4 >=u t1\n      : @1560 (gas: 4)\n 73112: a0 = u64 [sp + 0x208]\n 73116: u32 [a0] = t1\n 73118: a3 = t1\n 73120: fallthrough\n      : @1561 (gas: 6)\n 73121: a0 = 0x200000000000000\n 73131: a0 = t0 ^ a0\n 73134: a1 = u64 [sp + 0x1d0]\n 73138: a0 = a0 | a1\n 73141: a0 = t2 | a0\n 73144: jump @1589 if a0 == 0\n      : @1562 (gas: 2)\n 73148: a2 = u64 [sp + 0x180]\n 73152: jump @1578 if a2 >=u 2045\n      : @1563 (gas: 1)\n 73158: jump @1578 if ra >u 65536\n      : @1564 (gas: 2)\n 73165: a4 = a3\n 73167: jump @1566 if a3 >=u ra\n      : @1565 (gas: 4)\n 73170: a0 = u64 [sp + 0x208]\n 73174: u32 [a0] = ra\n 73176: a4 = ra\n 73178: fallthrough\n      : @1566 (gas: 71)\n 73179: a0 = u64 [sp + 0x90]\n 73183: s1 = reverse a0\n 73185: a0 = u64 [sp + 0x98]\n 73189: a2 = reverse a0\n 73191: a0 = u64 [sp + 0xa0]\n 73195: a3 = reverse a0\n 73197: a0 = u64 [sp + 0xa8]\n 73201: a5 = reverse a0\n 73203: a1 = u64 [sp + 0x20]\n 73206: u8 [a1 + 0x18] = a5\n 73209: a0 = a5 >> 0x38\n 73212: u8 [a1 + 0x1f] = a0\n 73215: a0 = a5 >> 0x30\n 73218: u8 [a1 + 0x1e] = a0\n 73221: a0 = a5 >> 0x28\n 73224: u8 [a1 + 0x1d] = a0\n 73227: a0 = a5 >> 0x20\n 73230: u8 [a1 + 0x1c] = a0\n 73233: a0 = a5 >> 0x18\n 73236: u8 [a1 + 0x1b] = a0\n 73239: a0 = a5 >> 0x10\n 73242: u8 [a1 + 0x1a] = a0\n 73245: a5 = a5 >> 0x8\n 73248: u8 [a1 + 0x19] = a5\n 73251: u8 [a1 + 0x10] = a3\n 73254: a0 = a3 >> 0x38\n 73257: u8 [a1 + 0x17] = a0\n 73260: a0 = a3 >> 0x30\n 73263: u8 [a1 + 0x16] = a0\n 73266: a0 = a3 >> 0x28\n 73269: u8 [a1 + 0x15] = a0\n 73272: a0 = a3 >> 0x20\n 73275: u8 [a1 + 0x14] = a0\n 73278: a0 = a3 >> 0x18\n 73281: u8 [a1 + 0x13] = a0\n 73284: a0 = a3 >> 0x10\n 73287: u8 [a1 + 0x12] = a0\n 73290: a3 = a3 >> 0x8\n 73293: u8 [a1 + 0x11] = a3\n 73296: u8 [a1 + 0x8] = a2\n 73299: a0 = a2 >> 0x38\n 73302: u8 [a1 + 0xf] = a0\n 73305: a0 = a2 >> 0x30\n 73308: u8 [a1 + 0xe] = a0\n 73311: a0 = a2 >> 0x28\n 73314: u8 [a1 + 0xd] = a0\n 73317: a0 = a2 >> 0x20\n 73320: u8 [a1 + 0xc] = a0\n 73323: a0 = a2 >> 0x18\n 73326: u8 [a1 + 0xb] = a0\n 73329: a0 = a2 >> 0x10\n 73332: u8 [a1 + 0xa] = a0\n 73335: a2 = a2 >> 0x8\n 73338: u8 [a1 + 0x9] = a2\n 73341: u8 [a1] = s1\n 73343: a0 = s1 >> 0x38\n 73346: u8 [a1 + 0x7] = a0\n 73349: a0 = s1 >> 0x30\n 73352: u8 [a1 + 0x6] = a0\n 73355: a0 = s1 >> 0x28\n 73358: u8 [a1 + 0x5] = a0\n 73361: a0 = s1 >> 0x20\n 73364: u8 [a1 + 0x4] = a0\n 73367: a0 = s1 >> 0x18\n 73370: u8 [a1 + 0x3] = a0\n 73373: a0 = s1 >> 0x10\n 73376: u8 [a1 + 0x2] = a0\n 73379: s1 = s1 >> 0x8\n 73382: u8 [a1 + 0x1] = s1\n 73385: s1 = a4\n 73387: jump @1568 if a4 >=u t1\n      : @1567 (gas: 4)\n 73390: a0 = u64 [sp + 0x208]\n 73394: u32 [a0] = t1\n 73396: s1 = t1\n 73398: fallthrough\n      : @1568 (gas: 7)\n 73399: a0 = 0x300000000000000\n 73409: a0 = t0 ^ a0\n 73412: a1 = u64 [sp + 0x1d0]\n 73416: a0 = a0 | a1\n 73419: a0 = t2 | a0\n 73422: a1 = u64 [sp + 0x1a0]\n 73426: jump @1582 if a0 == 0\n      : @1569 (gas: 2)\n 73430: a2 = u64 [sp + 0x8]\n 73433: jump @1578 if a2 >=u 511\n      : @1570 (gas: 4)\n 73439: a0 = u64 [sp + 0x1f8]\n 73443: a2 = u64 [sp + 0x10]\n 73446: a2 = a2 & a0\n 73449: jump @1578 if a2 >u 65536\n      : @1571 (gas: 1)\n 73456: jump @1573 if s1 >=u a2\n      : @1572 (gas: 4)\n 73459: a0 = u64 [sp + 0x208]\n 73463: u32 [a0] = a2\n 73465: s1 = a2\n 73467: fallthrough\n      : @1573 (gas: 69)\n 73468: a0 = u64 [sp + 0x80]\n 73472: a2 = reverse a0\n 73474: a0 = u64 [sp + 0x68]\n 73477: a4 = reverse a0\n 73479: a0 = u64 [sp + 0x70]\n 73482: a3 = reverse a0\n 73484: a0 = u64 [sp + 0x78]\n 73487: a0 = reverse a0\n 73489: u8 [a1 + 0x18] = a0\n 73492: a5 = a0 >> 0x38\n 73495: u8 [a1 + 0x1f] = a5\n 73498: a5 = a0 >> 0x30\n 73501: u8 [a1 + 0x1e] = a5\n 73504: a5 = a0 >> 0x28\n 73507: u8 [a1 + 0x1d] = a5\n 73510: a5 = a0 >> 0x20\n 73513: u8 [a1 + 0x1c] = a5\n 73516: a5 = a0 >> 0x18\n 73519: u8 [a1 + 0x1b] = a5\n 73522: a5 = a0 >> 0x10\n 73525: u8 [a1 + 0x1a] = a5\n 73528: a0 = a0 >> 0x8\n 73531: u8 [a1 + 0x19] = a0\n 73534: u8 [a1 + 0x10] = a3\n 73537: a0 = a3 >> 0x38\n 73540: u8 [a1 + 0x17] = a0\n 73543: a0 = a3 >> 0x30\n 73546: u8 [a1 + 0x16] = a0\n 73549: a0 = a3 >> 0x28\n 73552: u8 [a1 + 0x15] = a0\n 73555: a0 = a3 >> 0x20\n 73558: u8 [a1 + 0x14] = a0\n 73561: a0 = a3 >> 0x18\n 73564: u8 [a1 + 0x13] = a0\n 73567: a0 = a3 >> 0x10\n 73570: u8 [a1 + 0x12] = a0\n 73573: a3 = a3 >> 0x8\n 73576: u8 [a1 + 0x11] = a3\n 73579: u8 [a1 + 0x8] = a4\n 73582: a0 = a4 >> 0x38\n 73585: u8 [a1 + 0xf] = a0\n 73588: a0 = a4 >> 0x30\n 73591: u8 [a1 + 0xe] = a0\n 73594: a0 = a4 >> 0x28\n 73597: u8 [a1 + 0xd] = a0\n 73600: a0 = a4 >> 0x20\n 73603: u8 [a1 + 0xc] = a0\n 73606: a0 = a4 >> 0x18\n 73609: u8 [a1 + 0xb] = a0\n 73612: a0 = a4 >> 0x10\n 73615: u8 [a1 + 0xa] = a0\n 73618: a4 = a4 >> 0x8\n 73621: u8 [a1 + 0x9] = a4\n 73624: u8 [a1] = a2\n 73626: a0 = a2 >> 0x38\n 73629: u8 [a1 + 0x7] = a0\n 73632: a0 = a2 >> 0x30\n 73635: u8 [a1 + 0x6] = a0\n 73638: a0 = a2 >> 0x28\n 73641: u8 [a1 + 0x5] = a0\n 73644: a0 = a2 >> 0x20\n 73647: u8 [a1 + 0x4] = a0\n 73650: a0 = a2 >> 0x18\n 73653: u8 [a1 + 0x3] = a0\n 73656: a0 = a2 >> 0x10\n 73659: u8 [a1 + 0x2] = a0\n 73662: a2 = a2 >> 0x8\n 73665: u8 [a1 + 0x1] = a2\n 73668: jump @1575 if s1 >=u t1\n      : @1574 (gas: 4)\n 73671: a0 = u64 [sp + 0x208]\n 73675: u32 [a0] = t1\n 73677: s1 = t1\n 73679: fallthrough\n      : @1575 (gas: 12)\n 73680: a0 = u64 [sp + 0x1b0]\n 73684: a0 = a0 <u 0x4\n 73687: a0 = a0 ^ 0x1\n 73690: a1 = u64 [sp + 0x198]\n 73694: a2 = u64 [sp + 0x170]\n 73698: a0 = a2 if a1 != 0\n 73701: a1 = u64 [sp + 0x168]\n 73705: a2 = u64 [sp + 0x160]\n 73709: a0 = a1 if a2 != 0\n 73712: a1 = u64 [sp + 0x190]\n 73716: a2 = u64 [sp + 0x188]\n 73720: jump @1582 if a0 == 0\n      : @1576 (gas: 18)\n 73724: a0 = u64 [sp + 0x1e0]\n 73728: u64 [sp + 0x210] = a0\n 73732: a0 = u64 [sp + 0x1d8]\n 73736: u64 [sp + 0x230] = a0\n 73740: a0 = u64 [sp + 0x1e8]\n 73744: u64 [sp + 0x218] = a0\n 73748: a0 = u64 [sp + 0x1f0]\n 73752: u64 [sp + 0x238] = a0\n 73756: u64 [sp + 0x220] = a2\n 73760: a0 = u64 [sp + 0x1b8]\n 73764: u64 [sp + 0x240] = a0\n 73768: u64 [sp + 0x228] = a1\n 73772: a0 = sp + 0x250\n 73776: a1 = sp + 0x230\n 73780: a2 = sp + 0x210\n 73784: a3 = u64 [sp + 0x1c0]\n 73788: u64 [sp + 0x248] = a3\n 73792: ra = 148, jump @1651\n      : @1577 [@dyn 74] (gas: 15)\n 73798: a0 = u64 [sp + 0x260]\n 73802: a1 = u64 [sp + 0x268]\n 73806: a2 = u64 [sp + 0x250]\n 73810: a3 = u64 [sp + 0x258]\n 73814: a4 = u64 [sp + 0x88]\n 73818: u64 [a4 + 0x10] = a0\n 73821: u64 [a4 + 0x18] = a1\n 73824: u64 [a4] = a2\n 73826: u64 [a4 + 0x8] = a3\n 73829: sp = s0 + 0xfffffffffffffcd0\n 73833: ra = u64 [sp + 0x328]\n 73837: s0 = u64 [sp + 0x320]\n 73841: s1 = u64 [sp + 0x318]\n 73845: sp = sp + 0x330\n 73849: ret\n      : @1578 (gas: 1)\n 73851: trap\n      : @1579 (gas: 6)\n 73852: a1 = u64 [sp + 0x200]\n 73856: u64 [a1 + 24] = 0\n 73859: u64 [a1 + 16] = 0\n 73862: u64 [a1 + 0] = 0x717b484e\n 73868: u64 [a1 + 8] = 0\n 73871: jump @1581 if t2 >u 63\n      : @1580 (gas: 3)\n 73875: a1 = u64 [sp + 0x208]\n 73879: u32 [a1 + 0] = 0x40\n 73882: fallthrough\n      : @1581 (gas: 14)\n 73883: a1 = u64 [sp + 0x200]\n 73887: u32 [a1 + 32] = 0x32000000\n 73894: u32 [a1 + 28] = 0\n 73897: u32 [a1 + 24] = 0\n 73900: u32 [a1 + 20] = 0\n 73903: u32 [a1 + 16] = 0\n 73906: u32 [a1 + 12] = 0\n 73909: u32 [a1 + 8] = 0\n 73912: u32 [a1 + 4] = 0\n 73915: i32 a1 = a1 + 0\n 73917: a0 = 0x1\n 73920: a2 = 0x24\n 73923: ecalli 5 // 'seal_return'\n 73925: fallthrough\n      : @1582 (gas: 6)\n 73926: a1 = u64 [sp + 0x200]\n 73930: u64 [a1 + 24] = 0\n 73933: u64 [a1 + 16] = 0\n 73936: u64 [a1 + 0] = 0x717b484e\n 73942: u64 [a1 + 8] = 0\n 73945: jump @1580 if s1 <=u 63\n      : @1583 (gas: 1)\n 73949: jump @1581\n      : @1584 (gas: 17)\n 73951: u64 [0x20060] = 0\n 73956: u64 [0x20068] = 0\n 73961: u64 [0x20058] = 0\n 73966: u64 [0x20050] = 0x717b484e\n 73975: u32 [0x20070] = 0x41000000\n 73984: u32 [0x20064] = 0\n 73989: u32 [0x20068] = 0\n 73994: u32 [0x2006c] = 0\n 73999: u32 [0x20058] = 0\n 74004: u32 [0x2005c] = 0\n 74009: u32 [0x20060] = 0\n 74014: u32 [0x20054] = 0\n 74019: i32 a1 = a5 + 0\n 74021: a0 = 0x1\n 74024: a2 = 0x24\n 74027: ecalli 5 // 'seal_return'\n 74029: fallthrough\n      : @1585 (gas: 7)\n 74030: a1 = u64 [sp + 0x200]\n 74034: u64 [a1 + 24] = 0\n 74037: u64 [a1 + 16] = 0\n 74040: u64 [a1 + 0] = 0x717b484e\n 74046: u64 [a1 + 8] = 0\n 74049: a1 = u64 [sp + 0x1b0]\n 74053: jump @1580 if a1 <=u 63\n      : @1586 (gas: 1)\n 74058: jump @1581\n      : @1587 (gas: 6)\n 74061: a1 = u64 [sp + 0x200]\n 74065: u64 [a1 + 24] = 0\n 74068: u64 [a1 + 16] = 0\n 74071: u64 [a1 + 0] = 0x717b484e\n 74077: u64 [a1 + 8] = 0\n 74080: jump @1580 if t1 <=u 63\n      : @1588 (gas: 1)\n 74085: jump @1581\n      : @1589 (gas: 6)\n 74088: a1 = u64 [sp + 0x200]\n 74092: u64 [a1 + 24] = 0\n 74095: u64 [a1 + 16] = 0\n 74098: u64 [a1 + 0] = 0x717b484e\n 74104: u64 [a1 + 8] = 0\n 74107: jump @1580 if a3 <=u 63\n      : @1590 (gas: 1)\n 74112: jump @1581\n      : @1591 (gas: 12)\n 74115: sp = sp + 0xffffffffffffffe8\n 74118: u64 [sp + 0x10] = ra\n 74121: u64 [sp + 0x8] = s0\n 74124: u64 [sp] = s1\n 74126: a1 = u64 [a0 + 0x10]\n 74129: a2 = u64 [a0 + 0x18]\n 74132: a3 = u64 [a0 + 0x8]\n 74135: a0 = u64 [a0]\n 74137: a2 = a2 | a3\n 74140: a0 = a0 | a1\n 74143: a0 = a0 | a2\n 74146: jump @1593 if a0 == 0\n      : @1592 (gas: 5)\n 74149: ra = u64 [sp + 0x10]\n 74152: s0 = u64 [sp + 0x8]\n 74155: s1 = u64 [sp]\n 74157: sp = sp + 0x18\n 74160: ret\n      : @1593 (gas: 3)\n 74162: t0 = 0x20044\n 74167: s0 = i32 [0x20044]\n 74172: jump @1595 if s0 >u 95\n      : @1594 (gas: 3)\n 74176: s0 = 0x60\n 74179: u32 [0x20044] = s0\n 74184: fallthrough\n      : @1595 (gas: 17)\n 74185: a2 = 0x20050\n 74190: a0 = u64 [0x20098]\n 74195: a3 = u64 [0x200a8]\n 74200: a4 = u64 [0x20090]\n 74205: s1 = u64 [0x200a0]\n 74210: a1 = reverse a0\n 74212: a0 = reverse a3\n 74214: a4 = reverse a4\n 74216: ra = reverse s1\n 74218: a3 = ra | a4\n 74221: a5 = a0 | a1\n 74224: a5 = a5 | a3\n 74227: a5 = a5 >> 0x20\n 74230: a3 = a3 | a1\n 74233: a3 = a3 << 0x20\n 74236: a3 = a3 | a5\n 74239: jump @1613 if a3 != 0\n      : @1596 (gas: 2)\n 74243: i32 a3 = a0 >> 0x10\n 74246: jump @1613 if a3 != 0\n      : @1597 (gas: 4)\n 74250: t2 = 0x1ffe0\n 74255: a3 = a0 + 0x3f\n 74258: a3 = a3 & t2\n 74261: jump @1613 if a3 >u 65536\n      : @1598 (gas: 1)\n 74268: jump @1600 if s0 >=u a3\n      : @1599 (gas: 3)\n 74271: u32 [0x20044] = a3\n 74276: s0 = a3\n 74278: fallthrough\n      : @1600 (gas: 40)\n 74279: i32 a5 = a0 + 0\n 74281: s1 = a2 + a5\n 74284: u8 [s1 + 31] = 0\n 74287: u8 [s1 + 30] = 0\n 74290: u8 [s1 + 29] = 0\n 74293: u8 [s1 + 28] = 0\n 74296: u8 [s1 + 27] = 0\n 74299: u8 [s1 + 26] = 0\n 74302: u8 [s1 + 25] = 0\n 74305: u8 [s1 + 24] = 0\n 74308: u8 [s1 + 23] = 0\n 74311: u8 [s1 + 22] = 0\n 74314: u8 [s1 + 21] = 0\n 74317: u8 [s1 + 20] = 0\n 74320: u8 [s1 + 19] = 0\n 74323: u8 [s1 + 18] = 0\n 74326: u8 [s1 + 17] = 0\n 74329: u8 [s1 + 16] = 0\n 74332: u8 [s1 + 15] = 0\n 74335: u8 [s1 + 14] = 0\n 74338: u8 [s1 + 13] = 0\n 74341: u8 [s1 + 12] = 0\n 74344: u8 [s1 + 11] = 0\n 74347: u8 [s1 + 10] = 0\n 74350: u8 [s1 + 9] = 0\n 74353: u8 [s1 + 8] = 0\n 74356: u8 [s1 + 7] = 0\n 74359: u8 [s1 + 6] = 0\n 74362: u8 [s1 + 5] = 0\n 74365: u8 [s1 + 4] = 0\n 74368: u8 [s1 + 3] = 0xa0\n 74373: u8 [s1 + 2] = 0x79\n 74377: u8 [s1 + 1] = 0xc3\n 74382: t1 = a1 | a4\n 74385: a1 = 0xfffffffc\n 74395: a1 = a0 <u a1\n 74398: a1 = 0 if ra != 0\n 74400: a1 = 0 if t1 != 0\n 74402: u8 [s1 + 0] = 0x8\n 74405: jump @1613 if a1 == 0\n      : @1601 (gas: 1)\n 74409: jump @1613 if a5 >=u 65532\n      : @1602 (gas: 3)\n 74416: a1 = a0 + 0x43\n 74419: a3 = a1 & 0x1ffe0\n 74424: jump @1613 if a3 >u 65536\n      : @1603 (gas: 2)\n 74431: i32 a4 = a0 + 0x4\n 74434: jump @1605 if s0 >=u a3\n      : @1604 (gas: 3)\n 74437: u32 [0x20044] = a3\n 74442: s0 = a3\n 74444: fallthrough\n      : @1605 (gas: 38)\n 74445: a4 = a4 + a2\n 74448: u8 [a4 + 31] = 0x20\n 74452: u8 [a4 + 30] = 0\n 74455: u8 [a4 + 29] = 0\n 74458: u8 [a4 + 28] = 0\n 74461: u8 [a4 + 27] = 0\n 74464: u8 [a4 + 26] = 0\n 74467: u8 [a4 + 25] = 0\n 74470: u8 [a4 + 24] = 0\n 74473: u8 [a4 + 23] = 0\n 74476: u8 [a4 + 22] = 0\n 74479: u8 [a4 + 21] = 0\n 74482: u8 [a4 + 20] = 0\n 74485: u8 [a4 + 19] = 0\n 74488: u8 [a4 + 18] = 0\n 74491: u8 [a4 + 17] = 0\n 74494: u8 [a4 + 16] = 0\n 74497: u8 [a4 + 15] = 0\n 74500: u8 [a4 + 14] = 0\n 74503: u8 [a4 + 13] = 0\n 74506: u8 [a4 + 12] = 0\n 74509: u8 [a4 + 11] = 0\n 74512: u8 [a4 + 10] = 0\n 74515: u8 [a4 + 9] = 0\n 74518: u8 [a4 + 8] = 0\n 74521: u8 [a4 + 7] = 0\n 74524: u8 [a4 + 6] = 0\n 74527: u8 [a4 + 5] = 0\n 74530: u8 [a4 + 4] = 0\n 74533: u8 [a4 + 3] = 0\n 74536: u8 [a4 + 2] = 0\n 74539: u8 [a4 + 1] = 0\n 74542: a1 = 0xffffffdc\n 74552: a1 = a0 <u a1\n 74555: a1 = 0 if ra != 0\n 74557: a1 = 0 if t1 != 0\n 74559: u8 [a4 + 0] = 0\n 74561: jump @1613 if a1 == 0\n      : @1606 (gas: 1)\n 74565: jump @1613 if a5 >=u 65500\n      : @1607 (gas: 3)\n 74572: a1 = a0 + 0x63\n 74575: a3 = a1 & 0x1ffe0\n 74580: jump @1613 if a3 >u 65536\n      : @1608 (gas: 2)\n 74587: i32 a4 = a0 + 0x24\n 74590: jump @1610 if s0 >=u a3\n      : @1609 (gas: 3)\n 74593: u32 [0x20044] = a3\n 74598: s0 = a3\n 74600: fallthrough\n      : @1610 (gas: 38)\n 74601: a4 = a4 + a2\n 74604: u8 [a4 + 31] = 0x16\n 74608: u8 [a4 + 30] = 0\n 74611: u8 [a4 + 29] = 0\n 74614: u8 [a4 + 28] = 0\n 74617: u8 [a4 + 27] = 0\n 74620: u8 [a4 + 26] = 0\n 74623: u8 [a4 + 25] = 0\n 74626: u8 [a4 + 24] = 0\n 74629: u8 [a4 + 23] = 0\n 74632: u8 [a4 + 22] = 0\n 74635: u8 [a4 + 21] = 0\n 74638: u8 [a4 + 20] = 0\n 74641: u8 [a4 + 19] = 0\n 74644: u8 [a4 + 18] = 0\n 74647: u8 [a4 + 17] = 0\n 74650: u8 [a4 + 16] = 0\n 74653: u8 [a4 + 15] = 0\n 74656: u8 [a4 + 14] = 0\n 74659: u8 [a4 + 13] = 0\n 74662: u8 [a4 + 12] = 0\n 74665: u8 [a4 + 11] = 0\n 74668: u8 [a4 + 10] = 0\n 74671: u8 [a4 + 9] = 0\n 74674: u8 [a4 + 8] = 0\n 74677: u8 [a4 + 7] = 0\n 74680: u8 [a4 + 6] = 0\n 74683: u8 [a4 + 5] = 0\n 74686: u8 [a4 + 4] = 0\n 74689: u8 [a4 + 3] = 0\n 74692: u8 [a4 + 2] = 0\n 74695: u8 [a4 + 1] = 0\n 74698: a1 = 0xffffffbc\n 74708: a1 = a0 <u a1\n 74711: a1 = 0 if ra != 0\n 74713: a1 = 0 if t1 != 0\n 74715: u8 [a4 + 0] = 0\n 74717: jump @1613 if a1 == 0\n      : @1611 (gas: 1)\n 74720: jump @1613 if a5 >=u 65468\n      : @1612 (gas: 3)\n 74726: a1 = a0 + 0x83\n 74730: a3 = a1 & 0x1ffe0\n 74735: jump @1614 if a3 <=u 65536\n      : @1613 (gas: 1)\n 74741: trap\n      : @1614 (gas: 1)\n 74742: jump @1616 if s0 >=u a3\n      : @1615 (gas: 2)\n 74745: u32 [0x20044] = a3\n 74750: fallthrough\n      : @1616 (gas: 41)\n 74751: i32 a1 = a0 + 0x44\n 74754: a2 = a2 + a1\n 74757: u8 [a2 + 31] = 0\n 74760: u8 [a2 + 30] = 0\n 74763: u8 [a2 + 29] = 0\n 74766: u8 [a2 + 28] = 0\n 74769: u8 [a2 + 27] = 0\n 74772: u8 [a2 + 26] = 0\n 74775: u8 [a2 + 25] = 0\n 74778: u8 [a2 + 24] = 0\n 74781: u8 [a2 + 23] = 0\n 74784: u8 [a2 + 22] = 0\n 74787: u8 [a2 + 21] = 0x64\n 74791: a4 = 0x65\n 74794: u8 [a2 + 0x14] = a4\n 74797: a5 = 0x6c\n 74800: u8 [a2 + 0x13] = a5\n 74803: u8 [a2 + 18] = 0x69\n 74807: t0 = 0x61\n 74810: u8 [a2 + 0x11] = t0\n 74813: u8 [a2 + 16] = 0x66\n 74817: s1 = 0x2d\n 74820: u8 [a2 + 0xf] = s1\n 74823: u8 [a2 + 14] = 0x73\n 74827: u8 [a2 + 13] = 0x68\n 74831: u8 [a2 + 12] = 0x74\n 74835: s0 = 0x67\n 74838: u8 [a2 + 0xb] = s0\n 74841: u8 [a2 + 10] = 0x6e\n 74845: u8 [a2 + 0x9] = a4\n 74848: u8 [a2 + 0x8] = a5\n 74851: u8 [a2 + 0x7] = s1\n 74854: u8 [a2 + 0x6] = s0\n 74857: u8 [a2 + 5] = 0x6e\n 74861: u8 [a2 + 4] = 0x69\n 74865: u8 [a2 + 3] = 0x72\n 74869: u8 [a2 + 2] = 0x69\n 74873: u8 [a2 + 0x1] = t0\n 74876: u8 [a2 + 0] = 0x70\n 74879: a1 = 0x64\n 74882: ra = 150, jump @0\n      : @1617 [@dyn 75] (gas: 6)\n 74889: i32 a1 = a0 + 0\n 74891: a0 = 0x1\n 74894: a2 = 0x64\n 74897: ra = 0x98\n 74901: ecalli 5 // 'seal_return'\n 74903: fallthrough\n      : @1618 [@dyn 76] (gas: 26)\n 74904: sp = sp + 0xffffffffffffffe8\n 74907: u64 [sp + 0x10] = ra\n 74910: u64 [sp + 0x8] = s0\n 74913: u64 [sp] = s1\n 74915: ra = u64 [a1 + 0x18]\n 74918: a2 = u64 [a1]\n 74920: a4 = u64 [a1 + 0x8]\n 74923: s1 = u64 [a1 + 0x10]\n 74926: a1 = 0x6\n 74929: t0 = a2 mulhu a1\n 74932: a3 = a4 * a1\n 74935: t0 = t0 + a3\n 74938: a3 = t0 <u a3\n 74941: a5 = a4 mulhu a1\n 74944: a3 = a3 + a5\n 74947: t1 = s1 * a1\n 74950: t1 = t1 + a3\n 74953: a3 = t1 <u a3\n 74956: s0 = ra * a1\n 74959: a5 = s1 mulhu a1\n 74962: s0 = s0 + a5\n 74965: a4 = a4 | ra\n 74968: s1 = s1 | a2\n 74971: a4 = a4 | s1\n 74974: t2 = s0 + a3\n 74977: jump @1620 if a4 == 0\n      : @1619 (gas: 7)\n 74980: a3 = 0 if t2 != 0\n 74982: a4 = s0 <u a5\n 74985: a5 = ra mulhu a1\n 74988: a5 = a5 >u 0\n 74990: a4 = a4 | a5\n 74993: a3 = a3 | a4\n 74996: jump @1621 if a3 != 0\n      : @1620 (gas: 10)\n 74999: a1 = a2 * 0x6\n 75002: u64 [a0] = a1\n 75004: u64 [a0 + 0x8] = t0\n 75007: u64 [a0 + 0x10] = t1\n 75010: u64 [a0 + 0x18] = t2\n 75013: ra = u64 [sp + 0x10]\n 75016: s0 = u64 [sp + 0x8]\n 75019: s1 = u64 [sp]\n 75021: sp = sp + 0x18\n 75024: ret\n      : @1621 (gas: 7)\n 75026: a1 = 0x20050\n 75031: a2 = i32 [0x20044]\n 75036: u64 [0x20068] = 0\n 75041: u64 [0x20060] = 0\n 75046: u64 [0x20050] = 0x717b484e\n 75055: u64 [0x20058] = 0\n 75060: jump @1623 if a2 >u 63\n      : @1622 (gas: 2)\n 75064: u32 [0x20044] = 0x40\n 75070: fallthrough\n      : @1623 (gas: 14)\n 75071: u32 [0x20070] = 0x11000000\n 75080: u32 [0x2006c] = 0\n 75085: u32 [0x20068] = 0\n 75090: u32 [0x20064] = 0\n 75095: u32 [0x20060] = 0\n 75100: u32 [0x2005c] = 0\n 75105: u32 [0x20058] = 0\n 75110: u32 [0x20054] = 0\n 75115: i32 a1 = a1 + 0\n 75117: a0 = 0x1\n 75120: a2 = 0x24\n 75123: ra = 0x9a\n 75127: ecalli 5 // 'seal_return'\n 75129: fallthrough\n      : @1624 [@dyn 77] (gas: 12)\n 75130: sp = sp + 0xffffffffffffffe8\n 75133: u64 [sp + 0x10] = ra\n 75136: u64 [sp + 0x8] = s0\n 75139: u64 [sp] = s1\n 75141: a1 = u64 [a0 + 0x10]\n 75144: a2 = u64 [a0 + 0x18]\n 75147: a3 = u64 [a0 + 0x8]\n 75150: a0 = u64 [a0]\n 75152: a2 = a2 | a3\n 75155: a0 = a0 | a1\n 75158: a0 = a0 | a2\n 75161: jump @1626 if a0 == 0\n      : @1625 (gas: 5)\n 75164: ra = u64 [sp + 0x10]\n 75167: s0 = u64 [sp + 0x8]\n 75170: s1 = u64 [sp]\n 75172: sp = sp + 0x18\n 75175: ret\n      : @1626 (gas: 3)\n 75177: t0 = 0x20044\n 75182: s0 = i32 [0x20044]\n 75187: jump @1628 if s0 >u 95\n      : @1627 (gas: 3)\n 75191: s0 = 0x60\n 75194: u32 [0x20044] = s0\n 75199: fallthrough\n      : @1628 (gas: 17)\n 75200: a2 = 0x20050\n 75205: a0 = u64 [0x20098]\n 75210: a3 = u64 [0x200a8]\n 75215: a4 = u64 [0x20090]\n 75220: s1 = u64 [0x200a0]\n 75225: a1 = reverse a0\n 75227: a0 = reverse a3\n 75229: a4 = reverse a4\n 75231: ra = reverse s1\n 75233: a3 = ra | a4\n 75236: a5 = a0 | a1\n 75239: a5 = a5 | a3\n 75242: a5 = a5 >> 0x20\n 75245: a3 = a3 | a1\n 75248: a3 = a3 << 0x20\n 75251: a3 = a3 | a5\n 75254: jump @1646 if a3 != 0\n      : @1629 (gas: 2)\n 75258: i32 a3 = a0 >> 0x10\n 75261: jump @1646 if a3 != 0\n      : @1630 (gas: 4)\n 75265: t2 = 0x1ffe0\n 75270: a3 = a0 + 0x3f\n 75273: a3 = a3 & t2\n 75276: jump @1646 if a3 >u 65536\n      : @1631 (gas: 1)\n 75283: jump @1633 if s0 >=u a3\n      : @1632 (gas: 3)\n 75286: u32 [0x20044] = a3\n 75291: s0 = a3\n 75293: fallthrough\n      : @1633 (gas: 40)\n 75294: i32 a5 = a0 + 0\n 75296: s1 = a2 + a5\n 75299: u8 [s1 + 31] = 0\n 75302: u8 [s1 + 30] = 0\n 75305: u8 [s1 + 29] = 0\n 75308: u8 [s1 + 28] = 0\n 75311: u8 [s1 + 27] = 0\n 75314: u8 [s1 + 26] = 0\n 75317: u8 [s1 + 25] = 0\n 75320: u8 [s1 + 24] = 0\n 75323: u8 [s1 + 23] = 0\n 75326: u8 [s1 + 22] = 0\n 75329: u8 [s1 + 21] = 0\n 75332: u8 [s1 + 20] = 0\n 75335: u8 [s1 + 19] = 0\n 75338: u8 [s1 + 18] = 0\n 75341: u8 [s1 + 17] = 0\n 75344: u8 [s1 + 16] = 0\n 75347: u8 [s1 + 15] = 0\n 75350: u8 [s1 + 14] = 0\n 75353: u8 [s1 + 13] = 0\n 75356: u8 [s1 + 12] = 0\n 75359: u8 [s1 + 11] = 0\n 75362: u8 [s1 + 10] = 0\n 75365: u8 [s1 + 9] = 0\n 75368: u8 [s1 + 8] = 0\n 75371: u8 [s1 + 7] = 0\n 75374: u8 [s1 + 6] = 0\n 75377: u8 [s1 + 5] = 0\n 75380: u8 [s1 + 4] = 0\n 75383: u8 [s1 + 3] = 0xa0\n 75388: u8 [s1 + 2] = 0x79\n 75392: u8 [s1 + 1] = 0xc3\n 75397: t1 = a1 | a4\n 75400: a1 = 0xfffffffc\n 75410: a1 = a0 <u a1\n 75413: a1 = 0 if ra != 0\n 75415: a1 = 0 if t1 != 0\n 75417: u8 [s1 + 0] = 0x8\n 75420: jump @1646 if a1 == 0\n      : @1634 (gas: 1)\n 75424: jump @1646 if a5 >=u 65532\n      : @1635 (gas: 3)\n 75431: a1 = a0 + 0x43\n 75434: a3 = a1 & 0x1ffe0\n 75439: jump @1646 if a3 >u 65536\n      : @1636 (gas: 2)\n 75446: i32 a4 = a0 + 0x4\n 75449: jump @1638 if s0 >=u a3\n      : @1637 (gas: 3)\n 75452: u32 [0x20044] = a3\n 75457: s0 = a3\n 75459: fallthrough\n      : @1638 (gas: 38)\n 75460: a4 = a4 + a2\n 75463: u8 [a4 + 31] = 0x20\n 75467: u8 [a4 + 30] = 0\n 75470: u8 [a4 + 29] = 0\n 75473: u8 [a4 + 28] = 0\n 75476: u8 [a4 + 27] = 0\n 75479: u8 [a4 + 26] = 0\n 75482: u8 [a4 + 25] = 0\n 75485: u8 [a4 + 24] = 0\n 75488: u8 [a4 + 23] = 0\n 75491: u8 [a4 + 22] = 0\n 75494: u8 [a4 + 21] = 0\n 75497: u8 [a4 + 20] = 0\n 75500: u8 [a4 + 19] = 0\n 75503: u8 [a4 + 18] = 0\n 75506: u8 [a4 + 17] = 0\n 75509: u8 [a4 + 16] = 0\n 75512: u8 [a4 + 15] = 0\n 75515: u8 [a4 + 14] = 0\n 75518: u8 [a4 + 13] = 0\n 75521: u8 [a4 + 12] = 0\n 75524: u8 [a4 + 11] = 0\n 75527: u8 [a4 + 10] = 0\n 75530: u8 [a4 + 9] = 0\n 75533: u8 [a4 + 8] = 0\n 75536: u8 [a4 + 7] = 0\n 75539: u8 [a4 + 6] = 0\n 75542: u8 [a4 + 5] = 0\n 75545: u8 [a4 + 4] = 0\n 75548: u8 [a4 + 3] = 0\n 75551: u8 [a4 + 2] = 0\n 75554: u8 [a4 + 1] = 0\n 75557: a1 = 0xffffffdc\n 75567: a1 = a0 <u a1\n 75570: a1 = 0 if ra != 0\n 75572: a1 = 0 if t1 != 0\n 75574: u8 [a4 + 0] = 0\n 75576: jump @1646 if a1 == 0\n      : @1639 (gas: 1)\n 75580: jump @1646 if a5 >=u 65500\n      : @1640 (gas: 3)\n 75587: a1 = a0 + 0x63\n 75590: a3 = a1 & 0x1ffe0\n 75595: jump @1646 if a3 >u 65536\n      : @1641 (gas: 2)\n 75602: i32 a4 = a0 + 0x24\n 75605: jump @1643 if s0 >=u a3\n      : @1642 (gas: 3)\n 75608: u32 [0x20044] = a3\n 75613: s0 = a3\n 75615: fallthrough\n      : @1643 (gas: 38)\n 75616: a4 = a4 + a2\n 75619: u8 [a4 + 31] = 0x15\n 75623: u8 [a4 + 30] = 0\n 75626: u8 [a4 + 29] = 0\n 75629: u8 [a4 + 28] = 0\n 75632: u8 [a4 + 27] = 0\n 75635: u8 [a4 + 26] = 0\n 75638: u8 [a4 + 25] = 0\n 75641: u8 [a4 + 24] = 0\n 75644: u8 [a4 + 23] = 0\n 75647: u8 [a4 + 22] = 0\n 75650: u8 [a4 + 21] = 0\n 75653: u8 [a4 + 20] = 0\n 75656: u8 [a4 + 19] = 0\n 75659: u8 [a4 + 18] = 0\n 75662: u8 [a4 + 17] = 0\n 75665: u8 [a4 + 16] = 0\n 75668: u8 [a4 + 15] = 0\n 75671: u8 [a4 + 14] = 0\n 75674: u8 [a4 + 13] = 0\n 75677: u8 [a4 + 12] = 0\n 75680: u8 [a4 + 11] = 0\n 75683: u8 [a4 + 10] = 0\n 75686: u8 [a4 + 9] = 0\n 75689: u8 [a4 + 8] = 0\n 75692: u8 [a4 + 7] = 0\n 75695: u8 [a4 + 6] = 0\n 75698: u8 [a4 + 5] = 0\n 75701: u8 [a4 + 4] = 0\n 75704: u8 [a4 + 3] = 0\n 75707: u8 [a4 + 2] = 0\n 75710: u8 [a4 + 1] = 0\n 75713: a1 = 0xffffffbc\n 75723: a1 = a0 <u a1\n 75726: a1 = 0 if ra != 0\n 75728: a1 = 0 if t1 != 0\n 75730: u8 [a4 + 0] = 0\n 75732: jump @1646 if a1 == 0\n      : @1644 (gas: 1)\n 75735: jump @1646 if a5 >=u 65468\n      : @1645 (gas: 3)\n 75741: a1 = a0 + 0x83\n 75745: a3 = a1 & 0x1ffe0\n 75750: jump @1647 if a3 <=u 65536\n      : @1646 (gas: 1)\n 75756: trap\n      : @1647 (gas: 1)\n 75757: jump @1649 if s0 >=u a3\n      : @1648 (gas: 2)\n 75760: u32 [0x20044] = a3\n 75765: fallthrough\n      : @1649 (gas: 39)\n 75766: i32 a1 = a0 + 0x44\n 75769: a2 = a2 + a1\n 75772: u8 [a2 + 31] = 0\n 75775: u8 [a2 + 30] = 0\n 75778: u8 [a2 + 29] = 0\n 75781: u8 [a2 + 28] = 0\n 75784: u8 [a2 + 27] = 0\n 75787: u8 [a2 + 26] = 0\n 75790: u8 [a2 + 25] = 0\n 75793: u8 [a2 + 24] = 0\n 75796: u8 [a2 + 23] = 0\n 75799: u8 [a2 + 22] = 0\n 75802: u8 [a2 + 21] = 0\n 75805: u8 [a2 + 20] = 0x64\n 75809: u8 [a2 + 19] = 0x65\n 75813: u8 [a2 + 18] = 0x6c\n 75817: u8 [a2 + 17] = 0x69\n 75821: a5 = 0x61\n 75824: u8 [a2 + 0x10] = a5\n 75827: u8 [a2 + 15] = 0x66\n 75831: s1 = 0x2d\n 75834: u8 [a2 + 0xe] = s1\n 75837: u8 [a2 + 13] = 0x65\n 75841: u8 [a2 + 12] = 0x64\n 75845: u8 [a2 + 11] = 0x6f\n 75849: u8 [a2 + 10] = 0x63\n 75853: a4 = 0x70\n 75856: u8 [a2 + 0x9] = a4\n 75859: u8 [a2 + 8] = 0x6f\n 75863: u8 [a2 + 0x7] = s1\n 75866: u8 [a2 + 6] = 0x67\n 75870: u8 [a2 + 5] = 0x6e\n 75874: u8 [a2 + 4] = 0x69\n 75878: u8 [a2 + 3] = 0x72\n 75882: u8 [a2 + 2] = 0x69\n 75886: u8 [a2 + 0x1] = a5\n 75889: u8 [a2] = a4\n 75891: a1 = 0x64\n 75894: ra = 156, jump @0\n      : @1650 [@dyn 78] (gas: 6)\n 75901: i32 a1 = a0 + 0\n 75903: a0 = 0x1\n 75906: a2 = 0x64\n 75909: ra = 0x9e\n 75913: ecalli 5 // 'seal_return'\n 75915: fallthrough\n      : @1651 [@dyn 79] (gas: 18)\n 75916: sp = sp + 0xfffffffffffffd40\n 75920: u64 [sp + 0x2b8] = ra\n 75924: u64 [sp + 0x2b0] = s0\n 75928: u64 [sp + 0x2a8] = s1\n 75932: s0 = sp + 0x2c0\n 75936: sp = sp & 0xffffffffffffffe0\n 75939: s1 = u64 [a1 + 0x10]\n 75942: t1 = u64 [a1 + 0x18]\n 75945: ra = u64 [a1 + 0x8]\n 75948: a5 = u64 [a1]\n 75950: a1 = ra | t1\n 75953: a3 = a5 | s1\n 75956: a3 = a3 | a1\n 75959: a3 = a3 >> 0x20\n 75962: a1 = a1 | s1\n 75965: a1 = a1 << 0x20\n 75968: a1 = a1 | a3\n 75971: jump @1653 if a1 == 0\n      : @1652 (gas: 1)\n 75974: jump @1885\n      : @1653 (gas: 2)\n 75977: i32 a1 = a5 >> 0x10\n 75980: jump @1655 if a1 == 0\n      : @1654 (gas: 1)\n 75983: jump @1885\n      : @1655 (gas: 4)\n 75986: a3 = a5 + 0x3f\n 75989: u64 [sp + 400] = 0x1ffe0\n 75996: a3 = a3 & 0x1ffe0\n 76001: jump @1657 if a3 <=u 65536\n      : @1656 (gas: 1)\n 76007: jump @1885\n      : @1657 (gas: 10)\n 76010: u64 [sp + 0x10] = a0\n 76013: a4 = 0x20044\n 76018: a1 = u64 [a2 + 0x18]\n 76021: a0 = u64 [a2 + 0x10]\n 76024: u64 [sp + 0x188] = a0\n 76028: a0 = u64 [a2 + 0x8]\n 76031: u64 [sp + 0x160] = a0\n 76035: a0 = i32 [0x20044]\n 76040: t2 = u64 [a2]\n 76042: jump @1659 if a0 >=u a3\n      : @1658 (gas: 3)\n 76045: u32 [0x20044] = a3\n 76050: a0 = a3\n 76052: fallthrough\n      : @1659 (gas: 12)\n 76053: u64 [sp + 0x178] = a0\n 76057: a2 = u64 [sp + 0x188]\n 76061: a0 = t2 | a2\n 76064: u64 [sp + 0x158] = a1\n 76068: t0 = u64 [sp + 0x160]\n 76072: a1 = t0 | a1\n 76075: a0 = a0 | a1\n 76078: a0 = a0 >> 0x20\n 76081: a1 = a1 | a2\n 76084: a1 = a1 << 0x20\n 76087: a0 = a0 | a1\n 76090: jump @1661 if a0 == 0\n      : @1660 (gas: 1)\n 76093: jump @1885\n      : @1661 (gas: 7)\n 76096: u64 [sp + 0x140] = ra\n 76100: u64 [sp + 0x148] = t1\n 76104: u64 [sp + 0x150] = s1\n 76108: u64 [sp + 0xf0] = a3\n 76112: u64 [sp + 0x198] = a4\n 76116: i32 a0 = t2 >> 0x10\n 76119: jump @1663 if a0 == 0\n      : @1662 (gas: 1)\n 76122: jump @1885\n      : @1663 (gas: 5)\n 76125: t0 = t2\n 76127: a0 = t2 + 0x3f\n 76130: a1 = u64 [sp + 0x190]\n 76134: t1 = a0 & a1\n 76137: jump @1665 if t1 <=u 65536\n      : @1664 (gas: 1)\n 76143: jump @1885\n      : @1665 (gas: 98)\n 76146: a1 = 0x20050\n 76151: u64 [sp + 0x138] = a5\n 76155: i32 a0 = a5 + 0\n 76157: u64 [sp + 0x180] = a1\n 76161: a3 = a1 + a0\n 76164: a0 = u8 [a3 + 0x19]\n 76167: a1 = u8 [a3 + 0x18]\n 76170: a2 = u8 [a3 + 0x1a]\n 76173: a4 = u8 [a3 + 0x1b]\n 76176: a0 = a0 << 0x8\n 76179: a0 = a0 | a1\n 76182: a2 = a2 << 0x10\n 76185: a4 = a4 << 0x18\n 76188: a2 = a2 | a4\n 76191: a0 = a0 | a2\n 76194: a1 = u8 [a3 + 0x1d]\n 76197: a2 = u8 [a3 + 0x1c]\n 76200: a4 = u8 [a3 + 0x1e]\n 76203: a5 = u8 [a3 + 0x1f]\n 76206: a1 = a1 << 0x8\n 76209: a1 = a1 | a2\n 76212: a4 = a4 << 0x10\n 76215: a5 = a5 << 0x18\n 76218: a4 = a4 | a5\n 76221: a1 = a1 | a4\n 76224: a1 = a1 << 0x20\n 76227: a0 = a0 | a1\n 76230: u64 [sp + 0x170] = a0\n 76234: a1 = u8 [a3 + 0x11]\n 76237: a2 = u8 [a3 + 0x10]\n 76240: a4 = u8 [a3 + 0x12]\n 76243: a5 = u8 [a3 + 0x13]\n 76246: a1 = a1 << 0x8\n 76249: a1 = a1 | a2\n 76252: a4 = a4 << 0x10\n 76255: a5 = a5 << 0x18\n 76258: a4 = a4 | a5\n 76261: a1 = a1 | a4\n 76264: a2 = u8 [a3 + 0x15]\n 76267: a4 = u8 [a3 + 0x14]\n 76270: a5 = u8 [a3 + 0x16]\n 76273: s1 = u8 [a3 + 0x17]\n 76276: a2 = a2 << 0x8\n 76279: a2 = a2 | a4\n 76282: a5 = a5 << 0x10\n 76285: s1 = s1 << 0x18\n 76288: a5 = a5 | s1\n 76291: a2 = a2 | a5\n 76294: a2 = a2 << 0x20\n 76297: a1 = a1 | a2\n 76300: u64 [sp + 0x168] = a1\n 76304: a2 = u8 [a3 + 0x9]\n 76307: a4 = u8 [a3 + 0x8]\n 76310: a5 = u8 [a3 + 0xa]\n 76313: s1 = u8 [a3 + 0xb]\n 76316: a2 = a2 << 0x8\n 76319: a2 = a2 | a4\n 76322: a5 = a5 << 0x10\n 76325: s1 = s1 << 0x18\n 76328: a5 = a5 | s1\n 76331: a2 = a2 | a5\n 76334: a4 = u8 [a3 + 0xd]\n 76337: a5 = u8 [a3 + 0xc]\n 76340: s1 = u8 [a3 + 0xe]\n 76343: a0 = u8 [a3 + 0xf]\n 76346: a4 = a4 << 0x8\n 76349: a4 = a4 | a5\n 76352: s1 = s1 << 0x10\n 76355: a0 = a0 << 0x18\n 76358: a0 = a0 | s1\n 76361: a0 = a0 | a4\n 76364: a0 = a0 << 0x20\n 76367: t2 = a0 | a2\n 76370: a0 = u8 [a3 + 0x1]\n 76373: a4 = u8 [a3]\n 76375: a5 = u8 [a3 + 0x2]\n 76378: s1 = u8 [a3 + 0x3]\n 76381: a0 = a0 << 0x8\n 76384: a0 = a0 | a4\n 76387: a5 = a5 << 0x10\n 76390: s1 = s1 << 0x18\n 76393: a5 = a5 | s1\n 76396: a0 = a0 | a5\n 76399: a4 = u8 [a3 + 0x5]\n 76402: a5 = u8 [a3 + 0x4]\n 76405: s1 = u8 [a3 + 0x6]\n 76408: u64 [sp + 0xe8] = a3\n 76412: a1 = u8 [a3 + 0x7]\n 76415: a4 = a4 << 0x8\n 76418: a4 = a4 | a5\n 76421: s1 = s1 << 0x10\n 76424: a1 = a1 << 0x18\n 76427: a1 = a1 | s1\n 76430: a1 = a1 | a4\n 76433: a1 = a1 << 0x20\n 76436: ra = a1 | a0\n 76439: a0 = u64 [sp + 0x178]\n 76443: jump @1667 if a0 >=u t1\n      : @1666 (gas: 3)\n 76446: a0 = u64 [sp + 0x198]\n 76450: u32 [a0] = t1\n 76452: fallthrough\n      : @1667 (gas: 110)\n 76453: u64 [sp + 0x108] = t1\n 76457: u64 [sp + 0x128] = t0\n 76461: i32 a0 = t0 + 0\n 76463: a1 = u64 [sp + 0x180]\n 76467: t0 = a1 + a0\n 76470: a0 = u8 [t0 + 0x1]\n 76473: a1 = u8 [t0]\n 76475: a3 = u8 [t0 + 0x2]\n 76478: a5 = u8 [t0 + 0x3]\n 76481: a0 = a0 << 0x8\n 76484: a0 = a0 | a1\n 76487: a3 = a3 << 0x10\n 76490: a5 = a5 << 0x18\n 76493: a3 = a3 | a5\n 76496: a0 = a0 | a3\n 76499: a1 = u8 [t0 + 0x5]\n 76502: a3 = u8 [t0 + 0x4]\n 76505: a5 = u8 [t0 + 0x6]\n 76508: s1 = u8 [t0 + 0x7]\n 76511: a1 = a1 << 0x8\n 76514: a1 = a1 | a3\n 76517: a5 = a5 << 0x10\n 76520: s1 = s1 << 0x18\n 76523: a5 = a5 | s1\n 76526: a1 = a1 | a5\n 76529: a1 = a1 << 0x20\n 76532: a3 = a1 | a0\n 76535: a0 = u8 [t0 + 0x11]\n 76538: a1 = u8 [t0 + 0x10]\n 76541: a5 = u8 [t0 + 0x12]\n 76544: s1 = u8 [t0 + 0x13]\n 76547: a0 = a0 << 0x8\n 76550: a0 = a0 | a1\n 76553: a5 = a5 << 0x10\n 76556: s1 = s1 << 0x18\n 76559: a5 = a5 | s1\n 76562: a0 = a0 | a5\n 76565: a1 = u8 [t0 + 0x15]\n 76568: a5 = u8 [t0 + 0x14]\n 76571: s1 = u8 [t0 + 0x16]\n 76574: a2 = u8 [t0 + 0x17]\n 76577: a1 = a1 << 0x8\n 76580: a1 = a1 | a5\n 76583: s1 = s1 << 0x10\n 76586: a2 = a2 << 0x18\n 76589: a2 = a2 | s1\n 76592: a1 = a1 | a2\n 76595: a1 = a1 << 0x20\n 76598: a5 = a1 | a0\n 76601: a0 = u8 [t0 + 0x9]\n 76604: a1 = u8 [t0 + 0x8]\n 76607: a2 = u8 [t0 + 0xa]\n 76610: s1 = u8 [t0 + 0xb]\n 76613: a0 = a0 << 0x8\n 76616: a0 = a0 | a1\n 76619: a2 = a2 << 0x10\n 76622: s1 = s1 << 0x18\n 76625: a2 = a2 | s1\n 76628: a0 = a0 | a2\n 76631: a1 = u8 [t0 + 0xd]\n 76634: a2 = u8 [t0 + 0xc]\n 76637: s1 = u8 [t0 + 0xe]\n 76640: a4 = u8 [t0 + 0xf]\n 76643: a1 = a1 << 0x8\n 76646: a1 = a1 | a2\n 76649: s1 = s1 << 0x10\n 76652: a4 = a4 << 0x18\n 76655: a4 = a4 | s1\n 76658: a1 = a1 | a4\n 76661: a1 = a1 << 0x20\n 76664: s1 = a1 | a0\n 76667: a0 = u8 [t0 + 0x19]\n 76670: a1 = u8 [t0 + 0x18]\n 76673: a2 = u8 [t0 + 0x1a]\n 76676: a4 = u8 [t0 + 0x1b]\n 76679: a0 = a0 << 0x8\n 76682: a0 = a0 | a1\n 76685: a2 = a2 << 0x10\n 76688: a4 = a4 << 0x18\n 76691: a2 = a2 | a4\n 76694: a0 = a0 | a2\n 76697: a1 = u8 [t0 + 0x1d]\n 76700: a2 = u8 [t0 + 0x1c]\n 76703: a4 = u8 [t0 + 0x1e]\n 76706: u64 [sp + 0x100] = t0\n 76710: t0 = u8 [t0 + 0x1f]\n 76713: a1 = a1 << 0x8\n 76716: a1 = a1 | a2\n 76719: a4 = a4 << 0x10\n 76722: t0 = t0 << 0x18\n 76725: a2 = t0 | a4\n 76728: a1 = a1 | a2\n 76731: a1 = a1 << 0x20\n 76734: a0 = a0 | a1\n 76737: a1 = u64 [sp + 0x170]\n 76741: a0 = a0 ^ a1\n 76744: a1 = t2 ^ s1\n 76747: a0 = a0 | a1\n 76750: a1 = u64 [sp + 0x168]\n 76754: a1 = a1 ^ a5\n 76757: a2 = ra ^ a3\n 76760: a1 = a1 | a2\n 76763: a0 = a0 | a1\n 76766: a0 = a0 <u 0x1\n 76769: u64 [sp + 568] = 0\n 76773: u64 [sp + 560] = 0\n 76777: u64 [sp + 0x220] = a0\n 76781: a0 = sp + 0x220\n 76785: u64 [sp + 552] = 0\n 76789: ra = 160, jump @1591\n      : @1668 [@dyn 80] (gas: 4)\n 76795: a0 = u64 [sp + 0x198]\n 76799: a2 = i32 [a0]\n 76801: a1 = u64 [sp + 0xf0]\n 76805: jump @1670 if a2 >=u a1\n      : @1669 (gas: 3)\n 76808: u32 [a0] = a1\n 76810: a2 = a1\n 76812: fallthrough\n      : @1670 (gas: 125)\n 76813: u64 [sp + 0x168] = a2\n 76817: t2 = u64 [sp + 0xe8]\n 76821: a1 = u8 [t2 + 0x19]\n 76824: a2 = u8 [t2 + 0x18]\n 76827: a3 = u8 [t2 + 0x1a]\n 76830: a4 = u8 [t2 + 0x1b]\n 76833: a1 = a1 << 0x8\n 76836: a1 = a1 | a2\n 76839: a3 = a3 << 0x10\n 76842: a4 = a4 << 0x18\n 76845: a3 = a3 | a4\n 76848: a1 = a1 | a3\n 76851: a2 = u8 [t2 + 0x1d]\n 76854: a3 = u8 [t2 + 0x1c]\n 76857: a4 = u8 [t2 + 0x1e]\n 76860: a5 = u8 [t2 + 0x1f]\n 76863: a2 = a2 << 0x8\n 76866: a2 = a2 | a3\n 76869: a4 = a4 << 0x10\n 76872: a5 = a5 << 0x18\n 76875: a4 = a4 | a5\n 76878: a2 = a2 | a4\n 76881: a2 = a2 << 0x20\n 76884: a1 = a1 | a2\n 76887: u64 [sp + 0x178] = a1\n 76891: a2 = u8 [t2 + 0x11]\n 76894: a3 = u8 [t2 + 0x10]\n 76897: a4 = u8 [t2 + 0x12]\n 76900: a5 = u8 [t2 + 0x13]\n 76903: a2 = a2 << 0x8\n 76906: a2 = a2 | a3\n 76909: a4 = a4 << 0x10\n 76912: a5 = a5 << 0x18\n 76915: a4 = a4 | a5\n 76918: a2 = a2 | a4\n 76921: a3 = u8 [t2 + 0x15]\n 76924: a4 = u8 [t2 + 0x14]\n 76927: a5 = u8 [t2 + 0x16]\n 76930: s1 = u8 [t2 + 0x17]\n 76933: a3 = a3 << 0x8\n 76936: a3 = a3 | a4\n 76939: a5 = a5 << 0x10\n 76942: s1 = s1 << 0x18\n 76945: a5 = a5 | s1\n 76948: a3 = a3 | a5\n 76951: a3 = a3 << 0x20\n 76954: a2 = a2 | a3\n 76957: a3 = u8 [t2 + 0x9]\n 76960: a4 = u8 [t2 + 0x8]\n 76963: a5 = u8 [t2 + 0xa]\n 76966: s1 = u8 [t2 + 0xb]\n 76969: a3 = a3 << 0x8\n 76972: a3 = a3 | a4\n 76975: a5 = a5 << 0x10\n 76978: s1 = s1 << 0x18\n 76981: a5 = a5 | s1\n 76984: a3 = a3 | a5\n 76987: a4 = u8 [t2 + 0xd]\n 76990: a5 = u8 [t2 + 0xc]\n 76993: s1 = u8 [t2 + 0xe]\n 76996: a0 = u8 [t2 + 0xf]\n 76999: a4 = a4 << 0x8\n 77002: a4 = a4 | a5\n 77005: s1 = s1 << 0x10\n 77008: a0 = a0 << 0x18\n 77011: a0 = a0 | s1\n 77014: a0 = a0 | a4\n 77017: a0 = a0 << 0x20\n 77020: a0 = a0 | a3\n 77023: u64 [sp + 0x170] = a0\n 77027: a0 = u8 [t2 + 0x1]\n 77030: a4 = u8 [t2]\n 77032: a5 = u8 [t2 + 0x2]\n 77035: s1 = u8 [t2 + 0x3]\n 77038: a0 = a0 << 0x8\n 77041: a0 = a0 | a4\n 77044: a5 = a5 << 0x10\n 77047: s1 = s1 << 0x18\n 77050: a5 = a5 | s1\n 77053: a0 = a0 | a5\n 77056: a4 = u8 [t2 + 0x5]\n 77059: a5 = u8 [t2 + 0x4]\n 77062: s1 = u8 [t2 + 0x6]\n 77065: a1 = u8 [t2 + 0x7]\n 77068: a4 = a4 << 0x8\n 77071: a4 = a4 | a5\n 77074: s1 = s1 << 0x10\n 77077: a1 = a1 << 0x18\n 77080: a1 = a1 | s1\n 77083: a1 = a1 | a4\n 77086: a1 = a1 << 0x20\n 77089: ra = a1 | a0\n 77092: t1 = reverse ra\n 77094: s1 = reverse a2\n 77096: a3 = u64 [sp + 0x178]\n 77100: t0 = reverse a3\n 77102: a4 = 0x6\n 77105: a0 = t0 mulhu a4\n 77108: a1 = s1 * a4\n 77111: t2 = a1 + a0\n 77114: a0 = t2 <u a1\n 77117: u64 [sp + 0x90] = s1\n 77121: a1 = s1 mulhu a4\n 77124: a0 = a0 + a1\n 77127: a1 = u64 [sp + 0x170]\n 77131: a5 = reverse a1\n 77133: a3 = a3 | a1\n 77136: a1 = a5 * a4\n 77139: s1 = a0 + a1\n 77142: a1 = s1 <u a0\n 77145: a2 = ra | a2\n 77148: u64 [sp + 0x98] = t1\n 77152: a0 = t1 * a4\n 77155: t1 = a2 | a3\n 77158: u64 [sp + 0x80] = a5\n 77162: a2 = a5 mulhu a4\n 77165: a3 = a2 + a0\n 77168: ra = a3 + a1\n 77171: u64 [sp + 0x88] = t0\n 77175: a5 = t0 * a4\n 77178: u64 [sp + 0x30] = t2\n 77181: u64 [sp + 0x28] = s1\n 77184: u64 [sp + 0x20] = a5\n 77187: u64 [sp + 0x18] = ra\n 77190: jump @1672 if t1 != 0\n      : @1671 (gas: 1)\n 77193: jump @1862\n      : @1672 (gas: 8)\n 77196: a1 = 0 if ra != 0\n 77198: a0 = a3 <u a2\n 77201: a2 = u64 [sp + 0x98]\n 77205: a2 = a2 mulhu a4\n 77208: a2 = a2 >u 0\n 77210: a0 = a0 | a2\n 77213: a0 = a0 | a1\n 77216: jump @1674 if a0 == 0\n      : @1673 (gas: 1)\n 77219: jump @1898\n      : @1674 (gas: 7)\n 77222: u64 [sp + 0x1e0] = a5\n 77226: u64 [sp + 0x1e8] = t2\n 77230: u64 [sp + 0x1f0] = s1\n 77234: a0 = sp + 0x200\n 77238: a1 = sp + 0x1e0\n 77242: u64 [sp + 0x1f8] = ra\n 77246: ra = 162, jump @253\n      : @1675 [@dyn 81] (gas: 72)\n 77253: u64 [sp + 368] = 0\n 77257: u64 [sp + 360] = 0\n 77261: u64 [sp + 376] = 0\n 77265: a1 = u64 [sp + 0x138]\n 77269: a0 = a1 + 0x20\n 77272: u64 [sp + 0x78] = a0\n 77275: a0 = a0 <u a1\n 77278: a2 = u64 [sp + 0x140]\n 77282: a1 = a2 + a0\n 77285: u64 [sp + 0x70] = a1\n 77288: a1 = a1 <u a2\n 77291: a1 = a0 if a0 == 0\n 77294: a0 = u64 [sp + 0x150]\n 77298: a1 = a1 + a0\n 77301: ra = u64 [sp + 0x200]\n 77305: u64 [sp + 0x68] = a1\n 77308: a0 = a1 <u a0\n 77311: a1 = u64 [sp + 0x208]\n 77315: a2 = u64 [sp + 0x148]\n 77319: a0 = a0 + a2\n 77322: u64 [sp + 0x60] = a0\n 77325: a0 = ra + 0x20\n 77328: u64 [sp + 0x138] = a0\n 77332: a0 = a0 <u ra\n 77335: a2 = a1 + a0\n 77338: u64 [sp + 0xb8] = a1\n 77342: u64 [sp + 0x130] = a2\n 77346: a1 = a2 <u a1\n 77349: a1 = a0 if a0 == 0\n 77352: a2 = u64 [sp + 0x128]\n 77356: a0 = a2 + 0x20\n 77359: u64 [sp + 0x50] = a0\n 77362: a0 = a0 <u a2\n 77365: a3 = u64 [sp + 0x160]\n 77369: a2 = a3 + a0\n 77372: u64 [sp + 0x48] = a2\n 77375: a2 = a2 <u a3\n 77378: a2 = a0 if a0 == 0\n 77381: a0 = u64 [sp + 0x188]\n 77385: a2 = a2 + a0\n 77388: u64 [sp + 0x40] = a2\n 77391: a0 = a2 <u a0\n 77394: a2 = u64 [sp + 0x158]\n 77398: a0 = a0 + a2\n 77401: u64 [sp + 0x38] = a0\n 77404: i32 a0 = ra >> 0x10\n 77407: a0 = a0 >u 0\n 77409: a2 = ra + 0x3f\n 77412: a3 = u64 [sp + 0x190]\n 77416: a2 = a2 & a3\n 77419: u64 [sp + 0x160] = a2\n 77423: a2 = a2 >u 0x10000\n 77428: a0 = a0 | a2\n 77431: u64 [sp + 0x58] = a0\n 77434: a2 = u64 [sp + 0x210]\n 77438: u64 [sp + 0xb0] = ra\n 77442: i32 ra = ra + 0\n 77444: a0 = u64 [sp + 0x180]\n 77448: a0 = a0 + ra\n 77451: ra = 0\n 77453: u64 [sp + 0x128] = a0\n 77457: a3 = u64 [sp + 0x218]\n 77461: a1 = a1 + a2\n 77464: a5 = u64 [sp + 0x198]\n 77468: t0 = i32 [a5]\n 77470: u64 [sp + 0xa8] = a2\n 77474: u64 [sp + 0x120] = a1\n 77478: a0 = a1 <u a2\n 77481: u64 [sp + 0xa0] = a3\n 77485: a0 = a0 + a3\n 77488: u64 [sp + 0x118] = a0\n 77492: jump @1678\n      : @1676 (gas: 192)\n 77495: a3 = i32 [sp + 0xf8]\n 77499: a3 = a3 + t1\n 77502: a1 = u8 [a3 + 0x19]\n 77505: a2 = u8 [a3 + 0x18]\n 77508: a4 = u8 [a3 + 0x1a]\n 77511: a5 = u8 [a3 + 0x1b]\n 77514: a1 = a1 << 0x8\n 77517: a1 = a1 | a2\n 77520: a4 = a4 << 0x10\n 77523: a5 = a5 << 0x18\n 77526: a4 = a4 | a5\n 77529: a1 = a1 | a4\n 77532: a2 = u8 [a3 + 0x1d]\n 77535: a4 = u8 [a3 + 0x1c]\n 77538: a5 = u8 [a3 + 0x1e]\n 77541: s1 = u8 [a3 + 0x1f]\n 77544: a2 = a2 << 0x8\n 77547: a2 = a2 | a4\n 77550: a5 = a5 << 0x10\n 77553: s1 = s1 << 0x18\n 77556: a5 = a5 | s1\n 77559: a2 = a2 | a5\n 77562: a2 = a2 << 0x20\n 77565: a1 = a1 | a2\n 77568: u64 [sp + 0x188] = a1\n 77572: a1 = u8 [a3 + 0x11]\n 77575: a2 = u8 [a3 + 0x10]\n 77578: a4 = u8 [a3 + 0x12]\n 77581: s1 = u8 [a3 + 0x13]\n 77584: a1 = a1 << 0x8\n 77587: a1 = a1 | a2\n 77590: a4 = a4 << 0x10\n 77593: s1 = s1 << 0x18\n 77596: a4 = a4 | s1\n 77599: a1 = a1 | a4\n 77602: a2 = u8 [a3 + 0x15]\n 77605: a4 = u8 [a3 + 0x14]\n 77608: s1 = u8 [a3 + 0x16]\n 77611: a0 = u8 [a3 + 0x17]\n 77614: a2 = a2 << 0x8\n 77617: a2 = a2 | a4\n 77620: s1 = s1 << 0x10\n 77623: a0 = a0 << 0x18\n 77626: a0 = a0 | s1\n 77629: a0 = a0 | a2\n 77632: a0 = a0 << 0x20\n 77635: ra = a0 | a1\n 77638: a0 = u8 [a3 + 0x9]\n 77641: a1 = u8 [a3 + 0x8]\n 77644: a2 = u8 [a3 + 0xa]\n 77647: s1 = u8 [a3 + 0xb]\n 77650: a0 = a0 << 0x8\n 77653: a0 = a0 | a1\n 77656: a2 = a2 << 0x10\n 77659: s1 = s1 << 0x18\n 77662: a2 = a2 | s1\n 77665: a0 = a0 | a2\n 77668: a1 = u8 [a3 + 0xd]\n 77671: a2 = u8 [a3 + 0xc]\n 77674: s1 = u8 [a3 + 0xe]\n 77677: a5 = u8 [a3 + 0xf]\n 77680: a1 = a1 << 0x8\n 77683: a1 = a1 | a2\n 77686: s1 = s1 << 0x10\n 77689: a5 = a5 << 0x18\n 77692: a5 = a5 | s1\n 77695: a1 = a1 | a5\n 77698: a1 = a1 << 0x20\n 77701: t1 = a1 | a0\n 77704: a0 = u8 [a3 + 0x1]\n 77707: a1 = u8 [a3]\n 77709: a5 = u8 [a3 + 0x2]\n 77712: s1 = u8 [a3 + 0x3]\n 77715: a0 = a0 << 0x8\n 77718: a0 = a0 | a1\n 77721: a5 = a5 << 0x10\n 77724: s1 = s1 << 0x18\n 77727: a5 = a5 | s1\n 77730: a0 = a0 | a5\n 77733: u64 [sp + 0x148] = a0\n 77737: a4 = u64 [sp + 0x170]\n 77741: a4 = a4 + 0x1\n 77744: a0 = a4 <u 0x1\n 77747: s1 = u64 [sp + 0x168]\n 77751: s1 = s1 + a0\n 77754: a0 = a4 | s1\n 77757: a1 = a0 <u 0x1\n 77760: a0 = u64 [sp + 0x158]\n 77764: t2 = a0 + a1\n 77767: a0 = t2 <u a0\n 77770: a5 = u64 [sp + 0x178]\n 77774: a5 = a5 + a0\n 77777: a0 = u64 [sp + 0x88]\n 77781: u64 [sp + 0x170] = a4\n 77785: a0 = a4 <u a0\n 77788: a4 = u64 [sp + 0x90]\n 77792: a1 = s1 ^ a4\n 77795: u64 [sp + 0x168] = s1\n 77799: a4 = s1 <u a4\n 77802: a4 = a0 if a1 == 0\n 77805: a0 = u64 [sp + 0x80]\n 77809: a2 = t0\n 77811: t0 = t2 <u a0\n 77814: s1 = u64 [sp + 0x98]\n 77818: a1 = a5 ^ s1\n 77821: u64 [sp + 0x178] = a5\n 77825: s1 = a5 <u s1\n 77828: s1 = t0 if a1 == 0\n 77831: t0 = a2\n 77833: a0 = t2 ^ a0\n 77836: a0 = a0 | a1\n 77839: a5 = u8 [a3 + 0x5]\n 77842: s1 = a4 if a0 == 0\n 77845: a0 = u8 [a3 + 0x4]\n 77848: a4 = u8 [a3 + 0x6]\n 77851: a3 = u8 [a3 + 0x7]\n 77854: a5 = a5 << 0x8\n 77857: a0 = a0 | a5\n 77860: a4 = a4 << 0x10\n 77863: a3 = a3 << 0x18\n 77866: a3 = a3 | a4\n 77869: a0 = a0 | a3\n 77872: a0 = a0 << 0x20\n 77875: a3 = u64 [sp + 0x148]\n 77879: a3 = a3 | a0\n 77882: a0 = i32 [sp + 0x150]\n 77886: a1 = u64 [sp + 0x180]\n 77890: a0 = a0 + a1\n 77893: a4 = t1 >> 0x38\n 77896: u8 [a0 + 0xf] = a4\n 77899: a4 = t1 >> 0x30\n 77902: u8 [a0 + 0xe] = a4\n 77905: a4 = t1 >> 0x28\n 77908: u8 [a0 + 0xd] = a4\n 77911: a4 = t1 >> 0x20\n 77914: u8 [a0 + 0xc] = a4\n 77917: a4 = t1 >> 0x18\n 77920: u8 [a0 + 0xb] = a4\n 77923: a4 = t1 >> 0x10\n 77926: u8 [a0 + 0xa] = a4\n 77929: a4 = t1 >> 0x8\n 77932: u8 [a0 + 0x9] = a4\n 77935: u8 [a0 + 0x8] = t1\n 77938: a2 = a3 >> 0x38\n 77941: u8 [a0 + 0x7] = a2\n 77944: a2 = a3 >> 0x30\n 77947: u8 [a0 + 0x6] = a2\n 77950: a2 = a3 >> 0x28\n 77953: u8 [a0 + 0x5] = a2\n 77956: a2 = a3 >> 0x20\n 77959: u8 [a0 + 0x4] = a2\n 77962: a2 = a3 >> 0x18\n 77965: u8 [a0 + 0x3] = a2\n 77968: a2 = a3 >> 0x10\n 77971: u8 [a0 + 0x2] = a2\n 77974: a2 = a3 >> 0x8\n 77977: u8 [a0 + 0x1] = a2\n 77980: u8 [a0] = a3\n 77982: a2 = ra >> 0x38\n 77985: u8 [a0 + 0x17] = a2\n 77988: a2 = ra >> 0x30\n 77991: u8 [a0 + 0x16] = a2\n 77994: a2 = ra >> 0x28\n 77997: u8 [a0 + 0x15] = a2\n 78000: a2 = ra >> 0x20\n 78003: u8 [a0 + 0x14] = a2\n 78006: a2 = ra >> 0x18\n 78009: u8 [a0 + 0x13] = a2\n 78012: a2 = ra >> 0x10\n 78015: u8 [a0 + 0x12] = a2\n 78018: u8 [a0 + 0x10] = ra\n 78021: a2 = ra >> 0x8\n 78024: a5 = u64 [sp + 0x198]\n 78028: u8 [a0 + 0x11] = a2\n 78031: a1 = u64 [sp + 0x188]\n 78035: a2 = a1 >> 0x38\n 78038: u8 [a0 + 0x1f] = a2\n 78041: a2 = a1 >> 0x30\n 78044: u8 [a0 + 0x1e] = a2\n 78047: a2 = a1 >> 0x28\n 78050: u8 [a0 + 0x1d] = a2\n 78053: a2 = a1 >> 0x20\n 78056: u8 [a0 + 0x1c] = a2\n 78059: a2 = a1 >> 0x18\n 78062: u8 [a0 + 0x1b] = a2\n 78065: a2 = a1 >> 0x10\n 78068: u8 [a0 + 0x1a] = a2\n 78071: u8 [a0 + 0x18] = a1\n 78074: a2 = a1 >> 0x8\n 78077: u8 [a0 + 0x19] = a2\n 78080: ra = t2\n 78082: jump @1678 if s1 != 0\n      : @1677 (gas: 1)\n 78085: jump @1864\n      : @1678 (gas: 3)\n 78088: i32 a0 = t0 + 0\n 78090: a1 = u64 [sp + 0xf0]\n 78094: jump @1680 if a0 >=u a1\n      : @1679 (gas: 3)\n 78097: u32 [a5] = a1\n 78099: t0 = a1\n 78101: fallthrough\n      : @1680 (gas: 109)\n 78102: t2 = t0\n 78104: t0 = u64 [sp + 0xe8]\n 78108: a0 = u8 [t0 + 0x1]\n 78111: a1 = u8 [t0]\n 78113: a2 = u8 [t0 + 0x2]\n 78116: a3 = u8 [t0 + 0x3]\n 78119: a0 = a0 << 0x8\n 78122: a0 = a0 | a1\n 78125: a2 = a2 << 0x10\n 78128: a3 = a3 << 0x18\n 78131: a2 = a2 | a3\n 78134: a0 = a0 | a2\n 78137: a1 = u8 [t0 + 0x5]\n 78140: a2 = u8 [t0 + 0x4]\n 78143: a3 = u8 [t0 + 0x6]\n 78146: a4 = u8 [t0 + 0x7]\n 78149: a1 = a1 << 0x8\n 78152: a1 = a1 | a2\n 78155: a3 = a3 << 0x10\n 78158: a4 = a4 << 0x18\n 78161: a3 = a3 | a4\n 78164: a1 = a1 | a3\n 78167: a1 = a1 << 0x20\n 78170: t1 = a1 | a0\n 78173: a1 = u8 [t0 + 0x9]\n 78176: a2 = u8 [t0 + 0x8]\n 78179: a3 = u8 [t0 + 0xa]\n 78182: a4 = u8 [t0 + 0xb]\n 78185: a1 = a1 << 0x8\n 78188: a1 = a1 | a2\n 78191: a3 = a3 << 0x10\n 78194: a4 = a4 << 0x18\n 78197: a3 = a3 | a4\n 78200: a1 = a1 | a3\n 78203: a2 = u8 [t0 + 0xd]\n 78206: a3 = u8 [t0 + 0xc]\n 78209: a4 = u8 [t0 + 0xe]\n 78212: a5 = u8 [t0 + 0xf]\n 78215: a2 = a2 << 0x8\n 78218: a2 = a2 | a3\n 78221: a4 = a4 << 0x10\n 78224: a5 = a5 << 0x18\n 78227: a4 = a4 | a5\n 78230: a2 = a2 | a4\n 78233: a2 = a2 << 0x20\n 78236: a1 = a1 | a2\n 78239: a2 = u8 [t0 + 0x11]\n 78242: a3 = u8 [t0 + 0x10]\n 78245: a4 = u8 [t0 + 0x12]\n 78248: a5 = u8 [t0 + 0x13]\n 78251: a2 = a2 << 0x8\n 78254: a2 = a2 | a3\n 78257: a4 = a4 << 0x10\n 78260: a5 = a5 << 0x18\n 78263: a4 = a4 | a5\n 78266: a2 = a2 | a4\n 78269: a3 = u8 [t0 + 0x15]\n 78272: a4 = u8 [t0 + 0x14]\n 78275: a5 = u8 [t0 + 0x16]\n 78278: s1 = u8 [t0 + 0x17]\n 78281: a3 = a3 << 0x8\n 78284: a3 = a3 | a4\n 78287: a5 = a5 << 0x10\n 78290: s1 = s1 << 0x18\n 78293: a5 = a5 | s1\n 78296: a3 = a3 | a5\n 78299: a3 = a3 << 0x20\n 78302: a2 = a2 | a3\n 78305: a3 = u8 [t0 + 0x19]\n 78308: a4 = u8 [t0 + 0x18]\n 78311: a5 = u8 [t0 + 0x1a]\n 78314: s1 = u8 [t0 + 0x1b]\n 78317: a3 = a3 << 0x8\n 78320: a3 = a3 | a4\n 78323: a5 = a5 << 0x10\n 78326: s1 = s1 << 0x18\n 78329: a5 = a5 | s1\n 78332: a3 = a3 | a5\n 78335: a4 = u8 [t0 + 0x1d]\n 78338: a5 = u8 [t0 + 0x1c]\n 78341: s1 = u8 [t0 + 0x1e]\n 78344: a0 = u8 [t0 + 0x1f]\n 78347: a4 = a4 << 0x8\n 78350: a4 = a4 | a5\n 78353: s1 = s1 << 0x10\n 78356: a0 = a0 << 0x18\n 78359: a0 = a0 | s1\n 78362: a0 = a0 | a4\n 78365: a0 = a0 << 0x20\n 78368: a0 = a0 | a3\n 78371: a0 = reverse a0\n 78373: a2 = reverse a2\n 78375: a1 = reverse a1\n 78377: s1 = reverse t1\n 78379: a5 = u64 [sp + 0x168]\n 78383: a4 = a2 ^ a5\n 78386: a2 = a5 <u a2\n 78389: t0 = u64 [sp + 0x170]\n 78393: a0 = t0 <u a0\n 78396: a0 = a2 if a4 != 0\n 78399: a2 = u64 [sp + 0x178]\n 78403: a3 = s1 ^ a2\n 78406: s1 = a2 <u s1\n 78409: a4 = ra <u a1\n 78412: a4 = s1 if a3 != 0\n 78415: a1 = a1 ^ ra\n 78418: a1 = a1 | a3\n 78421: a0 = a4 if a1 != 0\n 78424: jump @1682 if a0 != 0\n      : @1681 (gas: 1)\n 78427: jump @1893\n      : @1682 (gas: 39)\n 78430: a0 = ra >> 0x3b\n 78433: a1 = a2 << 0x5\n 78436: t1 = a1 | a0\n 78439: a0 = a5 >> 0x3b\n 78442: u64 [sp + 0x158] = ra\n 78446: a1 = ra << 0x5\n 78449: s1 = a1 | a0\n 78452: a0 = t0 >> 0x3b\n 78455: a1 = a5 << 0x5\n 78458: a2 = a1 | a0\n 78461: a1 = t0 << 0x5\n 78464: a0 = u64 [sp + 0x78]\n 78467: u64 [sp + 0xd0] = a1\n 78471: a1 = a1 + a0\n 78474: a0 = a1 <u a0\n 78477: a4 = u64 [sp + 0x70]\n 78480: u64 [sp + 0xd8] = a2\n 78484: a2 = a2 + a4\n 78487: a2 = a2 + a0\n 78490: a3 = a2 ^ a4\n 78493: a4 = a2 <u a4\n 78496: a4 = a0 if a3 == 0\n 78499: a3 = u64 [sp + 0x68]\n 78502: a0 = a3 + s1\n 78505: a3 = a0 <u a3\n 78508: a5 = u64 [sp + 0x60]\n 78511: a5 = a5 + t1\n 78514: a3 = a3 + a5\n 78517: a4 = a4 + a0\n 78520: a0 = a4 <u a0\n 78523: a0 = a0 + a3\n 78526: a0 = a0 | a2\n 78529: a2 = a1 | a4\n 78532: a2 = a2 | a0\n 78535: a0 = a0 | a4\n 78538: a2 = a2 >> 0x20\n 78541: a0 = a0 << 0x20\n 78544: a0 = a0 | a2\n 78547: jump @1684 if a0 == 0\n      : @1683 (gas: 1)\n 78550: jump @1885\n      : @1684 (gas: 2)\n 78553: i32 a0 = a1 >> 0x10\n 78556: jump @1686 if a0 == 0\n      : @1685 (gas: 1)\n 78559: jump @1885\n      : @1686 (gas: 4)\n 78562: a0 = a1 + 0x3f\n 78565: a2 = u64 [sp + 0x190]\n 78569: a3 = a0 & a2\n 78572: jump @1688 if a3 <=u 65536\n      : @1687 (gas: 1)\n 78578: jump @1885\n      : @1688 (gas: 5)\n 78581: ra = t2\n 78583: u64 [sp + 0xc0] = s1\n 78587: u64 [sp + 0xc8] = t1\n 78591: i32 a2 = t2 + 0\n 78593: jump @1690 if a2 >=u a3\n      : @1689 (gas: 4)\n 78596: a0 = u64 [sp + 0x198]\n 78600: u32 [a0] = a3\n 78602: ra = a3\n 78604: fallthrough\n      : @1690 (gas: 104)\n 78605: u64 [sp + 0xf8] = a3\n 78609: i32 a1 = a1 + 0\n 78611: t1 = u64 [sp + 0x180]\n 78615: t1 = t1 + a1\n 78618: a1 = u8 [t1 + 0x11]\n 78621: a2 = u8 [t1 + 0x10]\n 78624: a3 = u8 [t1 + 0x12]\n 78627: a4 = u8 [t1 + 0x13]\n 78630: a1 = a1 << 0x8\n 78633: a1 = a1 | a2\n 78636: a3 = a3 << 0x10\n 78639: a4 = a4 << 0x18\n 78642: a3 = a3 | a4\n 78645: a1 = a1 | a3\n 78648: a2 = u8 [t1 + 0x15]\n 78651: a3 = u8 [t1 + 0x14]\n 78654: a4 = u8 [t1 + 0x16]\n 78657: a5 = u8 [t1 + 0x17]\n 78660: a2 = a2 << 0x8\n 78663: a2 = a2 | a3\n 78666: a4 = a4 << 0x10\n 78669: a5 = a5 << 0x18\n 78672: a4 = a4 | a5\n 78675: a2 = a2 | a4\n 78678: a2 = a2 << 0x20\n 78681: a1 = a1 | a2\n 78684: a2 = u8 [t1 + 0x1]\n 78687: a3 = u8 [t1]\n 78689: a4 = u8 [t1 + 0x2]\n 78692: a5 = u8 [t1 + 0x3]\n 78695: a2 = a2 << 0x8\n 78698: a2 = a2 | a3\n 78701: a4 = a4 << 0x10\n 78704: a5 = a5 << 0x18\n 78707: a4 = a4 | a5\n 78710: a2 = a2 | a4\n 78713: a3 = u8 [t1 + 0x5]\n 78716: a4 = u8 [t1 + 0x4]\n 78719: a5 = u8 [t1 + 0x6]\n 78722: s1 = u8 [t1 + 0x7]\n 78725: a3 = a3 << 0x8\n 78728: a3 = a3 | a4\n 78731: a5 = a5 << 0x10\n 78734: s1 = s1 << 0x18\n 78737: a5 = a5 | s1\n 78740: a3 = a3 | a5\n 78743: a3 = a3 << 0x20\n 78746: a2 = a2 | a3\n 78749: a3 = u8 [t1 + 0x19]\n 78752: a4 = u8 [t1 + 0x18]\n 78755: a5 = u8 [t1 + 0x1a]\n 78758: s1 = u8 [t1 + 0x1b]\n 78761: a3 = a3 << 0x8\n 78764: a3 = a3 | a4\n 78767: a5 = a5 << 0x10\n 78770: s1 = s1 << 0x18\n 78773: a5 = a5 | s1\n 78776: a3 = a3 | a5\n 78779: a4 = u8 [t1 + 0x1d]\n 78782: a5 = u8 [t1 + 0x1c]\n 78785: s1 = u8 [t1 + 0x1e]\n 78788: a0 = u8 [t1 + 0x1f]\n 78791: a4 = a4 << 0x8\n 78794: a4 = a4 | a5\n 78797: s1 = s1 << 0x10\n 78800: a0 = a0 << 0x18\n 78803: a0 = a0 | s1\n 78806: a0 = a0 | a4\n 78809: a0 = a0 << 0x20\n 78812: t2 = a0 | a3\n 78815: a0 = u8 [t1 + 0x9]\n 78818: a4 = u8 [t1 + 0x8]\n 78821: a5 = u8 [t1 + 0xa]\n 78824: s1 = u8 [t1 + 0xb]\n 78827: a0 = a0 << 0x8\n 78830: a0 = a0 | a4\n 78833: a5 = a5 << 0x10\n 78836: s1 = s1 << 0x18\n 78839: a5 = a5 | s1\n 78842: a0 = a0 | a5\n 78845: a4 = u8 [t1 + 0xd]\n 78848: a5 = u8 [t1 + 0xc]\n 78851: s1 = u8 [t1 + 0xe]\n 78854: a3 = u8 [t1 + 0xf]\n 78857: a4 = a4 << 0x8\n 78860: a4 = a4 | a5\n 78863: s1 = s1 << 0x10\n 78866: a3 = a3 << 0x18\n 78869: a3 = a3 | s1\n 78872: a3 = a3 | a4\n 78875: a3 = a3 << 0x20\n 78878: a0 = a0 | a3\n 78881: a0 = reverse a0\n 78883: a4 = reverse t2\n 78885: a2 = reverse a2\n 78887: a1 = reverse a1\n 78889: a1 = a1 | a2\n 78892: a2 = a4 | a0\n 78895: a2 = a2 | a1\n 78898: a2 = a2 >> 0x20\n 78901: a0 = a0 | a1\n 78904: a0 = a0 << 0x20\n 78907: a0 = a0 | a2\n 78910: jump @1692 if a0 == 0\n      : @1691 (gas: 1)\n 78913: jump @1885\n      : @1692 (gas: 2)\n 78916: i32 a0 = a4 >> 0x10\n 78919: jump @1694 if a0 == 0\n      : @1693 (gas: 1)\n 78922: jump @1885\n      : @1694 (gas: 4)\n 78925: a0 = a4 + 0x3f\n 78928: a1 = u64 [sp + 0x190]\n 78932: a1 = a1 & a0\n 78935: jump @1696 if a1 <=u 65536\n      : @1695 (gas: 1)\n 78941: jump @1885\n      : @1696 (gas: 2)\n 78944: i32 a0 = ra + 0\n 78946: jump @1698 if a0 >=u a1\n      : @1697 (gas: 4)\n 78949: a0 = u64 [sp + 0x198]\n 78953: u32 [a0] = a1\n 78955: ra = a1\n 78957: fallthrough\n      : @1698 (gas: 12)\n 78958: a0 = u64 [sp + 0xb0]\n 78962: a2 = u64 [sp + 0xa8]\n 78966: a0 = a0 | a2\n 78969: a1 = u64 [sp + 0xb8]\n 78973: a3 = u64 [sp + 0xa0]\n 78977: a1 = a1 | a3\n 78980: a0 = a0 | a1\n 78983: a0 = a0 >> 0x20\n 78986: a1 = a1 | a2\n 78989: a1 = a1 << 0x20\n 78992: a0 = a0 | a1\n 78995: jump @1700 if a0 == 0\n      : @1699 (gas: 1)\n 78998: jump @1885\n      : @1700 (gas: 2)\n 79001: a0 = u64 [sp + 0x58]\n 79004: jump @1702 if a0 == 0\n      : @1701 (gas: 1)\n 79007: jump @1885\n      : @1702 (gas: 4)\n 79010: u64 [sp + 0xe0] = a4\n 79014: i32 a0 = ra + 0\n 79016: a1 = u64 [sp + 0x160]\n 79020: jump @1704 if a0 >=u a1\n      : @1703 (gas: 4)\n 79023: a0 = u64 [sp + 0x198]\n 79027: ra = u64 [sp + 0x160]\n 79031: u32 [a0] = ra\n 79033: fallthrough\n      : @1704 (gas: 132)\n 79034: u64 [sp + 0x188] = ra\n 79038: a3 = 0x6\n 79041: a0 = t0 mulhu a3\n 79044: t2 = u64 [sp + 0x168]\n 79048: a1 = t2 * a3\n 79051: a0 = a0 + a1\n 79054: u64 [sp + 0x140] = a0\n 79058: a0 = a0 <u a1\n 79061: a1 = t2 mulhu a3\n 79064: a0 = a0 + a1\n 79067: ra = u64 [sp + 0x158]\n 79071: a1 = ra * a3\n 79074: a1 = a1 + a0\n 79077: u64 [sp + 0x150] = a1\n 79081: a0 = a1 <u a0\n 79084: a1 = ra mulhu a3\n 79087: a2 = u64 [sp + 0x178]\n 79091: a2 = a2 * a3\n 79094: a1 = a1 + a2\n 79097: a0 = a0 + a1\n 79100: u64 [sp + 0x148] = a0\n 79104: t0 = u64 [sp + 0x128]\n 79108: a0 = u8 [t0 + 0x1]\n 79111: a1 = u8 [t0]\n 79113: a2 = u8 [t0 + 0x2]\n 79116: a3 = u8 [t0 + 0x3]\n 79119: a0 = a0 << 0x8\n 79122: a0 = a0 | a1\n 79125: a2 = a2 << 0x10\n 79128: a3 = a3 << 0x18\n 79131: a2 = a2 | a3\n 79134: a0 = a0 | a2\n 79137: a1 = u8 [t0 + 0x5]\n 79140: a2 = u8 [t0 + 0x4]\n 79143: a3 = u8 [t0 + 0x6]\n 79146: a4 = u8 [t0 + 0x7]\n 79149: a1 = a1 << 0x8\n 79152: a1 = a1 | a2\n 79155: a3 = a3 << 0x10\n 79158: a4 = a4 << 0x18\n 79161: a3 = a3 | a4\n 79164: a1 = a1 | a3\n 79167: a1 = a1 << 0x20\n 79170: a1 = a1 | a0\n 79173: a0 = u8 [t0 + 0x9]\n 79176: a2 = u8 [t0 + 0x8]\n 79179: a3 = u8 [t0 + 0xa]\n 79182: a4 = u8 [t0 + 0xb]\n 79185: a0 = a0 << 0x8\n 79188: a0 = a0 | a2\n 79191: a3 = a3 << 0x10\n 79194: a4 = a4 << 0x18\n 79197: a3 = a3 | a4\n 79200: a0 = a0 | a3\n 79203: a2 = u8 [t0 + 0xd]\n 79206: a3 = u8 [t0 + 0xc]\n 79209: a4 = u8 [t0 + 0xe]\n 79212: a5 = u8 [t0 + 0xf]\n 79215: a2 = a2 << 0x8\n 79218: a2 = a2 | a3\n 79221: a4 = a4 << 0x10\n 79224: a5 = a5 << 0x18\n 79227: a4 = a4 | a5\n 79230: a2 = a2 | a4\n 79233: a2 = a2 << 0x20\n 79236: a2 = a2 | a0\n 79239: a0 = u8 [t0 + 0x11]\n 79242: a3 = u8 [t0 + 0x10]\n 79245: a4 = u8 [t0 + 0x12]\n 79248: a5 = u8 [t0 + 0x13]\n 79251: a0 = a0 << 0x8\n 79254: a0 = a0 | a3\n 79257: a4 = a4 << 0x10\n 79260: a5 = a5 << 0x18\n 79263: a4 = a4 | a5\n 79266: a0 = a0 | a4\n 79269: a3 = u8 [t0 + 0x15]\n 79272: a4 = u8 [t0 + 0x14]\n 79275: a5 = u8 [t0 + 0x16]\n 79278: s1 = u8 [t0 + 0x17]\n 79281: a3 = a3 << 0x8\n 79284: a3 = a3 | a4\n 79287: a5 = a5 << 0x10\n 79290: s1 = s1 << 0x18\n 79293: a5 = a5 | s1\n 79296: a3 = a3 | a5\n 79299: a3 = a3 << 0x20\n 79302: a3 = a3 | a0\n 79305: a0 = u8 [t0 + 0x19]\n 79308: a4 = u8 [t0 + 0x18]\n 79311: a5 = u8 [t0 + 0x1a]\n 79314: s1 = u8 [t0 + 0x1b]\n 79317: a0 = a0 << 0x8\n 79320: a0 = a0 | a4\n 79323: a5 = a5 << 0x10\n 79326: s1 = s1 << 0x18\n 79329: a5 = a5 | s1\n 79332: a0 = a0 | a5\n 79335: a4 = u8 [t0 + 0x1d]\n 79338: a5 = u8 [t0 + 0x1c]\n 79341: s1 = u8 [t0 + 0x1e]\n 79344: t0 = u8 [t0 + 0x1f]\n 79347: a4 = a4 << 0x8\n 79350: a4 = a4 | a5\n 79353: s1 = s1 << 0x10\n 79356: t0 = t0 << 0x18\n 79359: a5 = t0 | s1\n 79362: s1 = u64 [sp + 0x170]\n 79366: a4 = a4 | a5\n 79369: a5 = s1 * 0x6\n 79372: a4 = a4 << 0x20\n 79375: a0 = a0 | a4\n 79378: a0 = reverse a0\n 79380: a3 = reverse a3\n 79382: a2 = reverse a2\n 79384: a1 = reverse a1\n 79386: a4 = u64 [sp + 0x140]\n 79390: t0 = a3 ^ a4\n 79393: a3 = a4 <u a3\n 79396: u64 [sp + 0x110] = a5\n 79400: a0 = a5 <u a0\n 79403: a0 = a3 if t0 != 0\n 79406: a4 = u64 [sp + 0x148]\n 79410: a3 = a1 ^ a4\n 79413: a1 = a4 <u a1\n 79416: a5 = u64 [sp + 0x150]\n 79420: a4 = a5 <u a2\n 79423: a4 = a1 if a3 != 0\n 79426: a1 = a2 ^ a5\n 79429: a1 = a1 | a3\n 79432: a0 = a4 if a1 != 0\n 79435: jump @1706 if a0 != 0\n      : @1705 (gas: 1)\n 79438: jump @1886\n      : @1706 (gas: 42)\n 79441: a4 = 0xc0\n 79445: a0 = s1 mulhu a4\n 79448: a1 = t2 * a4\n 79451: a0 = a0 + a1\n 79454: a1 = a0 <u a1\n 79457: a2 = t2 mulhu a4\n 79460: a2 = a2 + a1\n 79463: a1 = s1 * a4\n 79466: t0 = u64 [sp + 0x138]\n 79470: t0 = t0 + a1\n 79473: a3 = t0 <u a1\n 79476: a1 = u64 [sp + 0x130]\n 79480: a1 = a1 + a0\n 79483: a1 = a1 + a3\n 79486: a5 = a1 ^ a0\n 79489: a0 = a1 <u a0\n 79492: a0 = a3 if a5 == 0\n 79495: a3 = ra mulhu a4\n 79498: a5 = u64 [sp + 0x178]\n 79502: a5 = a5 * a4\n 79505: a3 = a3 + a5\n 79508: a5 = ra * a4\n 79511: a5 = a5 + a2\n 79514: a2 = a5 <u a2\n 79517: a4 = u64 [sp + 0x118]\n 79521: a3 = a3 + a4\n 79524: a2 = a2 + a3\n 79527: a3 = u64 [sp + 0x120]\n 79531: a3 = a3 + a5\n 79534: a5 = a3 <u a5\n 79537: a2 = a2 + a5\n 79540: a0 = a0 + a3\n 79543: a3 = a0 <u a3\n 79546: a2 = a2 + a3\n 79549: a1 = a1 | a2\n 79552: a2 = t0 | a0\n 79555: a2 = a2 | a1\n 79558: a0 = a0 | a1\n 79561: a2 = a2 >> 0x20\n 79564: a0 = a0 << 0x20\n 79567: a0 = a0 | a2\n 79570: jump @1708 if a0 == 0\n      : @1707 (gas: 1)\n 79573: jump @1885\n      : @1708 (gas: 3)\n 79576: i32 a0 = t0 >> 0x10\n 79579: a2 = u64 [sp + 0xe0]\n 79583: jump @1710 if a0 == 0\n      : @1709 (gas: 1)\n 79586: jump @1885\n      : @1710 (gas: 4)\n 79589: a0 = t0 + 0x3f\n 79592: a1 = u64 [sp + 0x190]\n 79596: a1 = a1 & a0\n 79599: jump @1712 if a1 <=u 65536\n      : @1711 (gas: 1)\n 79605: jump @1885\n      : @1712 (gas: 3)\n 79608: ra = u64 [sp + 0x188]\n 79612: i32 a0 = ra + 0\n 79614: jump @1714 if a0 >=u a1\n      : @1713 (gas: 4)\n 79617: a0 = u64 [sp + 0x198]\n 79621: u32 [a0] = a1\n 79623: ra = a1\n 79625: fallthrough\n      : @1714 (gas: 157)\n 79626: i32 a2 = a2 + 0\n 79628: a0 = u64 [sp + 0x180]\n 79632: a2 = a2 + a0\n 79635: a0 = u8 [a2 + 0x19]\n 79638: a1 = u8 [a2 + 0x18]\n 79641: a3 = u8 [a2 + 0x1a]\n 79644: a5 = u8 [a2 + 0x1b]\n 79647: a0 = a0 << 0x8\n 79650: a0 = a0 | a1\n 79653: a3 = a3 << 0x10\n 79656: a5 = a5 << 0x18\n 79659: a3 = a3 | a5\n 79662: a0 = a0 | a3\n 79665: a1 = u8 [a2 + 0x1d]\n 79668: a3 = u8 [a2 + 0x1c]\n 79671: a5 = u8 [a2 + 0x1e]\n 79674: s1 = u8 [a2 + 0x1f]\n 79677: a1 = a1 << 0x8\n 79680: a1 = a1 | a3\n 79683: a5 = a5 << 0x10\n 79686: s1 = s1 << 0x18\n 79689: a5 = a5 | s1\n 79692: a1 = a1 | a5\n 79695: a1 = a1 << 0x20\n 79698: a3 = a1 | a0\n 79701: a0 = u8 [a2 + 0x11]\n 79704: a1 = u8 [a2 + 0x10]\n 79707: a5 = u8 [a2 + 0x12]\n 79710: s1 = u8 [a2 + 0x13]\n 79713: a0 = a0 << 0x8\n 79716: a0 = a0 | a1\n 79719: a5 = a5 << 0x10\n 79722: s1 = s1 << 0x18\n 79725: a5 = a5 | s1\n 79728: a0 = a0 | a5\n 79731: a1 = u8 [a2 + 0x15]\n 79734: a5 = u8 [a2 + 0x14]\n 79737: s1 = u8 [a2 + 0x16]\n 79740: a4 = u8 [a2 + 0x17]\n 79743: a1 = a1 << 0x8\n 79746: a1 = a1 | a5\n 79749: s1 = s1 << 0x10\n 79752: a4 = a4 << 0x18\n 79755: a4 = a4 | s1\n 79758: a1 = a1 | a4\n 79761: a1 = a1 << 0x20\n 79764: a1 = a1 | a0\n 79767: a0 = u8 [a2 + 0x9]\n 79770: a4 = u8 [a2 + 0x8]\n 79773: a5 = u8 [a2 + 0xa]\n 79776: s1 = u8 [a2 + 0xb]\n 79779: a0 = a0 << 0x8\n 79782: a0 = a0 | a4\n 79785: a5 = a5 << 0x10\n 79788: s1 = s1 << 0x18\n 79791: a5 = a5 | s1\n 79794: t2 = a5 | a0\n 79797: a4 = u8 [a2 + 0xd]\n 79800: a5 = u8 [a2 + 0xc]\n 79803: s1 = u8 [a2 + 0xe]\n 79806: a0 = u8 [a2 + 0xf]\n 79809: a4 = a4 << 0x8\n 79812: a4 = a4 | a5\n 79815: s1 = s1 << 0x10\n 79818: a0 = a0 << 0x18\n 79821: a0 = a0 | s1\n 79824: a0 = a0 | a4\n 79827: a0 = a0 << 0x20\n 79830: a5 = a0 | t2\n 79833: t2 = u8 [a2 + 0x1]\n 79836: a4 = u8 [a2]\n 79838: s1 = u8 [a2 + 0x2]\n 79841: a0 = u8 [a2 + 0x3]\n 79844: t2 = t2 << 0x8\n 79847: a4 = t2 | a4\n 79850: s1 = s1 << 0x10\n 79853: a0 = a0 << 0x18\n 79856: a0 = a0 | s1\n 79859: t2 = a0 | a4\n 79862: a4 = u8 [a2 + 0x5]\n 79865: s1 = u8 [a2 + 0x4]\n 79868: a0 = u8 [a2 + 0x6]\n 79871: a2 = u8 [a2 + 0x7]\n 79874: a4 = a4 << 0x8\n 79877: a4 = a4 | s1\n 79880: a0 = a0 << 0x10\n 79883: a2 = a2 << 0x18\n 79886: a0 = a0 | a2\n 79889: a0 = a0 | a4\n 79892: a0 = a0 << 0x20\n 79895: s1 = a0 | t2\n 79898: i32 a2 = t0 + 0\n 79900: a0 = u64 [sp + 0x180]\n 79904: a2 = a2 + a0\n 79907: u8 [a2 + 0x10] = a1\n 79910: a0 = a5 >> 0x38\n 79913: u8 [a2 + 0xf] = a0\n 79916: a0 = a5 >> 0x30\n 79919: u8 [a2 + 0xe] = a0\n 79922: a0 = a5 >> 0x28\n 79925: u8 [a2 + 0xd] = a0\n 79928: a0 = a5 >> 0x20\n 79931: u8 [a2 + 0xc] = a0\n 79934: a0 = a5 >> 0x18\n 79937: u8 [a2 + 0xb] = a0\n 79940: a0 = a5 >> 0x10\n 79943: u8 [a2 + 0xa] = a0\n 79946: a0 = a5 >> 0x8\n 79949: u8 [a2 + 0x9] = a0\n 79952: u8 [a2 + 0x8] = a5\n 79955: a0 = s1 >> 0x38\n 79958: u8 [a2 + 0x7] = a0\n 79961: a0 = s1 >> 0x30\n 79964: u8 [a2 + 0x6] = a0\n 79967: a0 = s1 >> 0x28\n 79970: u8 [a2 + 0x5] = a0\n 79973: a0 = s1 >> 0x20\n 79976: u8 [a2 + 0x4] = a0\n 79979: a0 = s1 >> 0x18\n 79982: u8 [a2 + 0x3] = a0\n 79985: a0 = s1 >> 0x10\n 79988: u8 [a2 + 0x2] = a0\n 79991: a0 = s1 >> 0x8\n 79994: u8 [a2 + 0x1] = a0\n 79997: u8 [a2] = s1\n 79999: u8 [a2 + 0x18] = a3\n 80002: a0 = a1 >> 0x38\n 80005: u8 [a2 + 0x17] = a0\n 80008: a0 = a1 >> 0x30\n 80011: u8 [a2 + 0x16] = a0\n 80014: a0 = a1 >> 0x28\n 80017: u8 [a2 + 0x15] = a0\n 80020: a0 = a1 >> 0x20\n 80023: u8 [a2 + 0x14] = a0\n 80026: a0 = a1 >> 0x18\n 80029: u8 [a2 + 0x13] = a0\n 80032: a0 = a1 >> 0x10\n 80035: u8 [a2 + 0x12] = a0\n 80038: a1 = a1 >> 0x8\n 80041: u8 [a2 + 0x11] = a1\n 80044: a0 = a3 >> 0x38\n 80047: u8 [a2 + 0x1f] = a0\n 80050: a0 = a3 >> 0x30\n 80053: u8 [a2 + 0x1e] = a0\n 80056: a0 = a3 >> 0x28\n 80059: u8 [a2 + 0x1d] = a0\n 80062: a0 = a3 >> 0x20\n 80065: u8 [a2 + 0x1c] = a0\n 80068: a0 = a3 >> 0x18\n 80071: u8 [a2 + 0x1b] = a0\n 80074: a0 = a3 >> 0x10\n 80077: u8 [a2 + 0x1a] = a0\n 80080: a3 = a3 >> 0x8\n 80083: i32 a0 = ra + 0\n 80085: u8 [a2 + 0x19] = a3\n 80088: a1 = u64 [sp + 0xf0]\n 80092: jump @1716 if a0 >=u a1\n      : @1715 (gas: 4)\n 80095: a0 = u64 [sp + 0x198]\n 80099: u32 [a0] = a1\n 80101: ra = a1\n 80103: fallthrough\n      : @1716 (gas: 110)\n 80104: t2 = u64 [sp + 0xe8]\n 80108: a0 = u8 [t2 + 0x1]\n 80111: a1 = u8 [t2]\n 80113: a2 = u8 [t2 + 0x2]\n 80116: a3 = u8 [t2 + 0x3]\n 80119: a0 = a0 << 0x8\n 80122: a0 = a0 | a1\n 80125: a2 = a2 << 0x10\n 80128: a3 = a3 << 0x18\n 80131: a2 = a2 | a3\n 80134: a0 = a0 | a2\n 80137: a1 = u8 [t2 + 0x5]\n 80140: a2 = u8 [t2 + 0x4]\n 80143: a3 = u8 [t2 + 0x6]\n 80146: a4 = u8 [t2 + 0x7]\n 80149: a1 = a1 << 0x8\n 80152: a1 = a1 | a2\n 80155: a3 = a3 << 0x10\n 80158: a4 = a4 << 0x18\n 80161: a3 = a3 | a4\n 80164: a1 = a1 | a3\n 80167: a1 = a1 << 0x20\n 80170: t0 = a1 | a0\n 80173: a0 = u8 [t2 + 0x9]\n 80176: a2 = u8 [t2 + 0x8]\n 80179: a3 = u8 [t2 + 0xa]\n 80182: a4 = u8 [t2 + 0xb]\n 80185: a0 = a0 << 0x8\n 80188: a0 = a0 | a2\n 80191: a3 = a3 << 0x10\n 80194: a4 = a4 << 0x18\n 80197: a3 = a3 | a4\n 80200: a0 = a0 | a3\n 80203: a2 = u8 [t2 + 0xd]\n 80206: a3 = u8 [t2 + 0xc]\n 80209: a4 = u8 [t2 + 0xe]\n 80212: a5 = u8 [t2 + 0xf]\n 80215: a2 = a2 << 0x8\n 80218: a2 = a2 | a3\n 80221: a4 = a4 << 0x10\n 80224: a5 = a5 << 0x18\n 80227: a4 = a4 | a5\n 80230: a2 = a2 | a4\n 80233: a2 = a2 << 0x20\n 80236: a2 = a2 | a0\n 80239: a0 = u8 [t2 + 0x11]\n 80242: a3 = u8 [t2 + 0x10]\n 80245: a4 = u8 [t2 + 0x12]\n 80248: a5 = u8 [t2 + 0x13]\n 80251: a0 = a0 << 0x8\n 80254: a0 = a0 | a3\n 80257: a4 = a4 << 0x10\n 80260: a5 = a5 << 0x18\n 80263: a4 = a4 | a5\n 80266: a0 = a0 | a4\n 80269: a3 = u8 [t2 + 0x15]\n 80272: a4 = u8 [t2 + 0x14]\n 80275: a5 = u8 [t2 + 0x16]\n 80278: s1 = u8 [t2 + 0x17]\n 80281: a3 = a3 << 0x8\n 80284: a3 = a3 | a4\n 80287: a5 = a5 << 0x10\n 80290: s1 = s1 << 0x18\n 80293: a5 = a5 | s1\n 80296: a3 = a3 | a5\n 80299: a3 = a3 << 0x20\n 80302: a3 = a3 | a0\n 80305: a0 = u8 [t2 + 0x19]\n 80308: a4 = u8 [t2 + 0x18]\n 80311: a5 = u8 [t2 + 0x1a]\n 80314: s1 = u8 [t2 + 0x1b]\n 80317: a0 = a0 << 0x8\n 80320: a0 = a0 | a4\n 80323: a5 = a5 << 0x10\n 80326: s1 = s1 << 0x18\n 80329: a5 = a5 | s1\n 80332: a0 = a0 | a5\n 80335: a4 = u8 [t2 + 0x1d]\n 80338: a5 = u8 [t2 + 0x1c]\n 80341: s1 = u8 [t2 + 0x1e]\n 80344: a1 = u8 [t2 + 0x1f]\n 80347: a4 = a4 << 0x8\n 80350: a4 = a4 | a5\n 80353: s1 = s1 << 0x10\n 80356: a1 = a1 << 0x18\n 80359: a1 = a1 | s1\n 80362: a1 = a1 | a4\n 80365: a1 = a1 << 0x20\n 80368: a0 = a0 | a1\n 80371: a0 = reverse a0\n 80373: a1 = reverse a3\n 80375: a2 = reverse a2\n 80377: a3 = reverse t0\n 80379: a5 = u64 [sp + 0x168]\n 80383: a4 = a1 ^ a5\n 80386: a1 = a5 <u a1\n 80389: a5 = u64 [sp + 0x170]\n 80393: a0 = a5 <u a0\n 80396: a0 = a1 if a4 != 0\n 80399: a4 = u64 [sp + 0x178]\n 80403: a1 = a3 ^ a4\n 80406: a3 = a4 <u a3\n 80409: a5 = u64 [sp + 0x158]\n 80413: a4 = a5 <u a2\n 80416: a4 = a3 if a1 != 0\n 80419: a2 = a2 ^ a5\n 80422: a1 = a1 | a2\n 80425: a0 = a4 if a1 != 0\n 80428: i32 a1 = ra + 0\n 80430: jump @1718 if a0 != 0\n      : @1717 (gas: 1)\n 80433: jump @1895\n      : @1718 (gas: 2)\n 80436: a2 = u64 [sp + 0xf8]\n 80440: jump @1720 if a1 >=u a2\n      : @1719 (gas: 4)\n 80443: a0 = u64 [sp + 0x198]\n 80447: u32 [a0] = a2\n 80449: ra = a2\n 80451: fallthrough\n      : @1720 (gas: 109)\n 80452: t2 = ra\n 80454: a0 = u8 [t1 + 0x19]\n 80457: a1 = u8 [t1 + 0x18]\n 80460: a2 = u8 [t1 + 0x1a]\n 80463: a3 = u8 [t1 + 0x1b]\n 80466: a0 = a0 << 0x8\n 80469: a0 = a0 | a1\n 80472: a2 = a2 << 0x10\n 80475: a3 = a3 << 0x18\n 80478: a2 = a2 | a3\n 80481: a0 = a0 | a2\n 80484: a1 = u8 [t1 + 0x1d]\n 80487: a2 = u8 [t1 + 0x1c]\n 80490: a3 = u8 [t1 + 0x1e]\n 80493: a4 = u8 [t1 + 0x1f]\n 80496: a1 = a1 << 0x8\n 80499: a1 = a1 | a2\n 80502: a3 = a3 << 0x10\n 80505: a4 = a4 << 0x18\n 80508: a3 = a3 | a4\n 80511: a1 = a1 | a3\n 80514: a1 = a1 << 0x20\n 80517: t0 = a1 | a0\n 80520: a1 = u8 [t1 + 0x11]\n 80523: a2 = u8 [t1 + 0x10]\n 80526: a3 = u8 [t1 + 0x12]\n 80529: a4 = u8 [t1 + 0x13]\n 80532: a1 = a1 << 0x8\n 80535: a1 = a1 | a2\n 80538: a3 = a3 << 0x10\n 80541: a4 = a4 << 0x18\n 80544: a3 = a3 | a4\n 80547: a1 = a1 | a3\n 80550: a2 = u8 [t1 + 0x15]\n 80553: a3 = u8 [t1 + 0x14]\n 80556: a4 = u8 [t1 + 0x16]\n 80559: a5 = u8 [t1 + 0x17]\n 80562: a2 = a2 << 0x8\n 80565: a2 = a2 | a3\n 80568: a4 = a4 << 0x10\n 80571: a5 = a5 << 0x18\n 80574: a4 = a4 | a5\n 80577: a2 = a2 | a4\n 80580: a2 = a2 << 0x20\n 80583: a1 = a1 | a2\n 80586: a2 = u8 [t1 + 0x9]\n 80589: a3 = u8 [t1 + 0x8]\n 80592: a4 = u8 [t1 + 0xa]\n 80595: a5 = u8 [t1 + 0xb]\n 80598: a2 = a2 << 0x8\n 80601: a2 = a2 | a3\n 80604: a4 = a4 << 0x10\n 80607: a5 = a5 << 0x18\n 80610: a4 = a4 | a5\n 80613: a2 = a2 | a4\n 80616: a3 = u8 [t1 + 0xd]\n 80619: a4 = u8 [t1 + 0xc]\n 80622: a5 = u8 [t1 + 0xe]\n 80625: s1 = u8 [t1 + 0xf]\n 80628: a3 = a3 << 0x8\n 80631: a3 = a3 | a4\n 80634: a5 = a5 << 0x10\n 80637: s1 = s1 << 0x18\n 80640: a5 = a5 | s1\n 80643: a3 = a3 | a5\n 80646: a3 = a3 << 0x20\n 80649: a2 = a2 | a3\n 80652: a3 = u8 [t1 + 0x1]\n 80655: a4 = u8 [t1]\n 80657: a5 = u8 [t1 + 0x2]\n 80660: s1 = u8 [t1 + 0x3]\n 80663: a3 = a3 << 0x8\n 80666: a3 = a3 | a4\n 80669: a5 = a5 << 0x10\n 80672: s1 = s1 << 0x18\n 80675: a5 = a5 | s1\n 80678: a3 = a3 | a5\n 80681: a4 = u8 [t1 + 0x5]\n 80684: a5 = u8 [t1 + 0x4]\n 80687: s1 = u8 [t1 + 0x6]\n 80690: a0 = u8 [t1 + 0x7]\n 80693: a4 = a4 << 0x8\n 80696: a4 = a4 | a5\n 80699: s1 = s1 << 0x10\n 80702: a0 = a0 << 0x18\n 80705: a0 = a0 | s1\n 80708: a0 = a0 | a4\n 80711: a0 = a0 << 0x20\n 80714: a0 = a0 | a3\n 80717: a3 = reverse a0\n 80719: a2 = reverse a2\n 80721: a1 = reverse a1\n 80723: a4 = reverse t0\n 80725: ra = a4 + 0x20\n 80728: a4 = ra <u a4\n 80731: a5 = a1 + a4\n 80734: a1 = a5 <u a1\n 80737: a1 = a4 if a4 == 0\n 80740: a1 = a1 + a2\n 80743: a2 = a1 <u a2\n 80746: a2 = a2 + a3\n 80749: a3 = ra | a1\n 80752: a2 = a2 | a5\n 80755: a3 = a3 | a2\n 80758: a3 = a3 >> 0x20\n 80761: a1 = a1 | a2\n 80764: a1 = a1 << 0x20\n 80767: a1 = a1 | a3\n 80770: jump @1722 if a1 == 0\n      : @1721 (gas: 1)\n 80773: jump @1885\n      : @1722 (gas: 2)\n 80776: i32 a1 = ra >> 0x10\n 80779: jump @1724 if a1 == 0\n      : @1723 (gas: 1)\n 80782: jump @1885\n      : @1724 (gas: 4)\n 80785: a1 = ra + 0x3f\n 80788: a2 = u64 [sp + 0x190]\n 80792: a1 = a1 & a2\n 80795: jump @1726 if a1 <=u 65536\n      : @1725 (gas: 1)\n 80801: jump @1885\n      : @1726 (gas: 2)\n 80804: i32 a2 = t2 + 0\n 80806: jump @1728 if a2 >=u a1\n      : @1727 (gas: 4)\n 80809: a2 = u64 [sp + 0x198]\n 80813: u32 [a2] = a1\n 80815: t2 = a1\n 80817: fallthrough\n      : @1728 (gas: 3)\n 80818: i32 a1 = t2 + 0\n 80820: a2 = u64 [sp + 0x160]\n 80824: jump @1730 if a1 >=u a2\n      : @1729 (gas: 4)\n 80827: a1 = u64 [sp + 0x198]\n 80831: t2 = u64 [sp + 0x160]\n 80835: u32 [a1] = t2\n 80837: fallthrough\n      : @1730 (gas: 112)\n 80838: a0 = u64 [sp + 0x128]\n 80842: a1 = u8 [a0 + 0x1]\n 80845: a2 = u8 [a0]\n 80847: a3 = u8 [a0 + 0x2]\n 80850: a4 = u8 [a0 + 0x3]\n 80853: a1 = a1 << 0x8\n 80856: a1 = a1 | a2\n 80859: a3 = a3 << 0x10\n 80862: a4 = a4 << 0x18\n 80865: a3 = a3 | a4\n 80868: a1 = a1 | a3\n 80871: a2 = u8 [a0 + 0x5]\n 80874: a3 = u8 [a0 + 0x4]\n 80877: a4 = u8 [a0 + 0x6]\n 80880: a5 = u8 [a0 + 0x7]\n 80883: a2 = a2 << 0x8\n 80886: a2 = a2 | a3\n 80889: a4 = a4 << 0x10\n 80892: a5 = a5 << 0x18\n 80895: a4 = a4 | a5\n 80898: a2 = a2 | a4\n 80901: a2 = a2 << 0x20\n 80904: a1 = a1 | a2\n 80907: u64 [sp + 0x188] = a1\n 80911: a2 = u8 [a0 + 0x9]\n 80914: a3 = u8 [a0 + 0x8]\n 80917: a4 = u8 [a0 + 0xa]\n 80920: a5 = u8 [a0 + 0xb]\n 80923: a2 = a2 << 0x8\n 80926: a2 = a2 | a3\n 80929: a4 = a4 << 0x10\n 80932: a5 = a5 << 0x18\n 80935: a4 = a4 | a5\n 80938: a2 = a2 | a4\n 80941: a3 = u8 [a0 + 0xd]\n 80944: a4 = u8 [a0 + 0xc]\n 80947: a5 = u8 [a0 + 0xe]\n 80950: s1 = u8 [a0 + 0xf]\n 80953: a3 = a3 << 0x8\n 80956: a3 = a3 | a4\n 80959: a5 = a5 << 0x10\n 80962: s1 = s1 << 0x18\n 80965: a5 = a5 | s1\n 80968: a3 = a3 | a5\n 80971: a3 = a3 << 0x20\n 80974: t1 = a3 | a2\n 80977: a3 = u8 [a0 + 0x11]\n 80980: a4 = u8 [a0 + 0x10]\n 80983: a5 = u8 [a0 + 0x12]\n 80986: s1 = u8 [a0 + 0x13]\n 80989: a3 = a3 << 0x8\n 80992: a3 = a3 | a4\n 80995: a5 = a5 << 0x10\n 80998: s1 = s1 << 0x18\n 81001: a5 = a5 | s1\n 81004: a3 = a3 | a5\n 81007: a4 = u8 [a0 + 0x15]\n 81010: a5 = u8 [a0 + 0x14]\n 81013: s1 = u8 [a0 + 0x16]\n 81016: a1 = u8 [a0 + 0x17]\n 81019: a4 = a4 << 0x8\n 81022: a4 = a4 | a5\n 81025: s1 = s1 << 0x10\n 81028: a1 = a1 << 0x18\n 81031: a1 = a1 | s1\n 81034: a1 = a1 | a4\n 81037: a1 = a1 << 0x20\n 81040: a4 = a1 | a3\n 81043: a1 = u8 [a0 + 0x19]\n 81046: a3 = u8 [a0 + 0x18]\n 81049: a5 = u8 [a0 + 0x1a]\n 81052: s1 = u8 [a0 + 0x1b]\n 81055: a1 = a1 << 0x8\n 81058: a1 = a1 | a3\n 81061: a5 = a5 << 0x10\n 81064: s1 = s1 << 0x18\n 81067: a5 = a5 | s1\n 81070: a1 = a1 | a5\n 81073: a3 = u8 [a0 + 0x1d]\n 81076: a5 = u8 [a0 + 0x1c]\n 81079: s1 = u8 [a0 + 0x1e]\n 81082: a2 = u8 [a0 + 0x1f]\n 81085: a3 = a3 << 0x8\n 81088: a3 = a3 | a5\n 81091: s1 = s1 << 0x10\n 81094: a2 = a2 << 0x18\n 81097: a2 = a2 | s1\n 81100: a2 = a2 | a3\n 81103: a0 = u64 [sp + 0x110]\n 81107: t0 = a0 | 0x1\n 81110: a2 = a2 << 0x20\n 81113: a1 = a1 | a2\n 81116: a1 = reverse a1\n 81118: a2 = reverse a4\n 81120: t1 = reverse t1\n 81122: a0 = u64 [sp + 0x188]\n 81126: a3 = reverse a0\n 81128: a0 = u64 [sp + 0x140]\n 81132: s1 = a2 ^ a0\n 81135: a2 = a0 <u a2\n 81138: a1 = t0 <u a1\n 81141: a1 = a2 if s1 != 0\n 81144: a5 = u64 [sp + 0x148]\n 81148: a2 = a3 ^ a5\n 81151: a4 = a5 <u a3\n 81154: a3 = u64 [sp + 0x150]\n 81158: s1 = a3 <u t1\n 81161: s1 = a4 if a2 != 0\n 81164: a4 = t1 ^ a3\n 81167: a2 = a2 | a4\n 81170: a1 = s1 if a2 != 0\n 81173: jump @1732 if a1 != 0\n      : @1731 (gas: 1)\n 81176: jump @1888\n      : @1732 (gas: 36)\n 81179: a1 = a3 >> 0x3b\n 81182: a2 = a5 << 0x5\n 81185: a1 = a1 | a2\n 81188: a2 = t0 >> 0x3b\n 81191: a4 = a0 << 0x5\n 81194: a2 = a2 | a4\n 81197: a4 = t0 << 0x5\n 81200: t0 = u64 [sp + 0x138]\n 81204: t0 = t0 + a4\n 81207: a4 = t0 <u a4\n 81210: a5 = u64 [sp + 0x130]\n 81214: a5 = a5 + a2\n 81217: a5 = a5 + a4\n 81220: s1 = a5 ^ a2\n 81223: a2 = a5 <u a2\n 81226: a2 = a4 if s1 == 0\n 81229: a0 = a0 >> 0x3b\n 81232: s1 = a3 << 0x5\n 81235: s1 = s1 | a0\n 81238: a3 = u64 [sp + 0x120]\n 81242: a3 = a3 + s1\n 81245: s1 = a3 <u s1\n 81248: a0 = u64 [sp + 0x118]\n 81252: a1 = a1 + a0\n 81255: a1 = a1 + s1\n 81258: a2 = a2 + a3\n 81261: a3 = a2 <u a3\n 81264: a1 = a1 + a3\n 81267: a1 = a1 | a5\n 81270: a3 = t0 | a2\n 81273: a3 = a3 | a1\n 81276: a1 = a1 | a2\n 81279: a3 = a3 >> 0x20\n 81282: a1 = a1 << 0x20\n 81285: a1 = a1 | a3\n 81288: jump @1734 if a1 == 0\n      : @1733 (gas: 1)\n 81291: jump @1885\n      : @1734 (gas: 2)\n 81294: i32 a1 = t0 >> 0x10\n 81297: jump @1736 if a1 == 0\n      : @1735 (gas: 1)\n 81300: jump @1885\n      : @1736 (gas: 4)\n 81303: a1 = t0 + 0x3f\n 81306: a2 = u64 [sp + 0x190]\n 81310: a1 = a1 & a2\n 81313: jump @1738 if a1 <=u 65536\n      : @1737 (gas: 1)\n 81319: jump @1885\n      : @1738 (gas: 2)\n 81322: i32 a2 = t2 + 0\n 81324: jump @1740 if a2 >=u a1\n      : @1739 (gas: 4)\n 81327: a2 = u64 [sp + 0x198]\n 81331: u32 [a2] = a1\n 81333: t2 = a1\n 81335: fallthrough\n      : @1740 (gas: 158)\n 81336: u64 [sp + 0x188] = t2\n 81340: i32 a0 = ra + 0\n 81342: ra = u64 [sp + 0x180]\n 81346: a2 = ra + a0\n 81349: a0 = u8 [a2 + 0x19]\n 81352: a1 = u8 [a2 + 0x18]\n 81355: a3 = u8 [a2 + 0x1a]\n 81358: a5 = u8 [a2 + 0x1b]\n 81361: a0 = a0 << 0x8\n 81364: a0 = a0 | a1\n 81367: a3 = a3 << 0x10\n 81370: a5 = a5 << 0x18\n 81373: a3 = a3 | a5\n 81376: a0 = a0 | a3\n 81379: a1 = u8 [a2 + 0x1d]\n 81382: a3 = u8 [a2 + 0x1c]\n 81385: a5 = u8 [a2 + 0x1e]\n 81388: s1 = u8 [a2 + 0x1f]\n 81391: a1 = a1 << 0x8\n 81394: a1 = a1 | a3\n 81397: a5 = a5 << 0x10\n 81400: s1 = s1 << 0x18\n 81403: a5 = a5 | s1\n 81406: a1 = a1 | a5\n 81409: a1 = a1 << 0x20\n 81412: t2 = a1 | a0\n 81415: a1 = u8 [a2 + 0x11]\n 81418: a3 = u8 [a2 + 0x10]\n 81421: a5 = u8 [a2 + 0x12]\n 81424: s1 = u8 [a2 + 0x13]\n 81427: a1 = a1 << 0x8\n 81430: a1 = a1 | a3\n 81433: a5 = a5 << 0x10\n 81436: s1 = s1 << 0x18\n 81439: a5 = a5 | s1\n 81442: a1 = a1 | a5\n 81445: a3 = u8 [a2 + 0x15]\n 81448: a5 = u8 [a2 + 0x14]\n 81451: s1 = u8 [a2 + 0x16]\n 81454: a4 = u8 [a2 + 0x17]\n 81457: a3 = a3 << 0x8\n 81460: a3 = a3 | a5\n 81463: s1 = s1 << 0x10\n 81466: a4 = a4 << 0x18\n 81469: a4 = a4 | s1\n 81472: a3 = a3 | a4\n 81475: a3 = a3 << 0x20\n 81478: a1 = a1 | a3\n 81481: a3 = u8 [a2 + 0x9]\n 81484: a4 = u8 [a2 + 0x8]\n 81487: a5 = u8 [a2 + 0xa]\n 81490: s1 = u8 [a2 + 0xb]\n 81493: a3 = a3 << 0x8\n 81496: a3 = a3 | a4\n 81499: a5 = a5 << 0x10\n 81502: s1 = s1 << 0x18\n 81505: a5 = a5 | s1\n 81508: t1 = a5 | a3\n 81511: a4 = u8 [a2 + 0xd]\n 81514: a5 = u8 [a2 + 0xc]\n 81517: s1 = u8 [a2 + 0xe]\n 81520: a3 = u8 [a2 + 0xf]\n 81523: a4 = a4 << 0x8\n 81526: a4 = a4 | a5\n 81529: s1 = s1 << 0x10\n 81532: a3 = a3 << 0x18\n 81535: a3 = a3 | s1\n 81538: a3 = a3 | a4\n 81541: a3 = a3 << 0x20\n 81544: a3 = a3 | t1\n 81547: a4 = u8 [a2 + 0x1]\n 81550: a5 = u8 [a2]\n 81552: s1 = u8 [a2 + 0x2]\n 81555: a0 = u8 [a2 + 0x3]\n 81558: a4 = a4 << 0x8\n 81561: a4 = a4 | a5\n 81564: s1 = s1 << 0x10\n 81567: a0 = a0 << 0x18\n 81570: a0 = a0 | s1\n 81573: a0 = a0 | a4\n 81576: a4 = u8 [a2 + 0x5]\n 81579: a5 = u8 [a2 + 0x4]\n 81582: s1 = u8 [a2 + 0x6]\n 81585: a2 = u8 [a2 + 0x7]\n 81588: a4 = a4 << 0x8\n 81591: a4 = a4 | a5\n 81594: s1 = s1 << 0x10\n 81597: a2 = a2 << 0x18\n 81600: a2 = a2 | s1\n 81603: a2 = a2 | a4\n 81606: a2 = a2 << 0x20\n 81609: a5 = a2 | a0\n 81612: i32 a2 = t0 + 0\n 81614: a2 = a2 + ra\n 81617: u8 [a2 + 0x10] = a1\n 81620: a0 = a3 >> 0x38\n 81623: u8 [a2 + 0xf] = a0\n 81626: a0 = a3 >> 0x30\n 81629: u8 [a2 + 0xe] = a0\n 81632: a0 = a3 >> 0x28\n 81635: u8 [a2 + 0xd] = a0\n 81638: a0 = a3 >> 0x20\n 81641: u8 [a2 + 0xc] = a0\n 81644: a0 = a3 >> 0x18\n 81647: u8 [a2 + 0xb] = a0\n 81650: a0 = a3 >> 0x10\n 81653: u8 [a2 + 0xa] = a0\n 81656: a0 = a3 >> 0x8\n 81659: u8 [a2 + 0x9] = a0\n 81662: u8 [a2 + 0x8] = a3\n 81665: a0 = a5 >> 0x38\n 81668: u8 [a2 + 0x7] = a0\n 81671: a0 = a5 >> 0x30\n 81674: u8 [a2 + 0x6] = a0\n 81677: a0 = a5 >> 0x28\n 81680: u8 [a2 + 0x5] = a0\n 81683: a0 = a5 >> 0x20\n 81686: u8 [a2 + 0x4] = a0\n 81689: a0 = a5 >> 0x18\n 81692: u8 [a2 + 0x3] = a0\n 81695: a0 = a5 >> 0x10\n 81698: u8 [a2 + 0x2] = a0\n 81701: a0 = a5 >> 0x8\n 81704: u8 [a2 + 0x1] = a0\n 81707: u8 [a2] = a5\n 81709: u8 [a2 + 0x18] = t2\n 81712: a0 = a1 >> 0x38\n 81715: u8 [a2 + 0x17] = a0\n 81718: a0 = a1 >> 0x30\n 81721: u8 [a2 + 0x16] = a0\n 81724: a0 = a1 >> 0x28\n 81727: u8 [a2 + 0x15] = a0\n 81730: a0 = a1 >> 0x20\n 81733: u8 [a2 + 0x14] = a0\n 81736: a0 = a1 >> 0x18\n 81739: u8 [a2 + 0x13] = a0\n 81742: a0 = a1 >> 0x10\n 81745: u8 [a2 + 0x12] = a0\n 81748: a1 = a1 >> 0x8\n 81751: u8 [a2 + 0x11] = a1\n 81754: a0 = t2 >> 0x38\n 81757: u8 [a2 + 0x1f] = a0\n 81760: a0 = t2 >> 0x30\n 81763: u8 [a2 + 0x1e] = a0\n 81766: a0 = t2 >> 0x28\n 81769: u8 [a2 + 0x1d] = a0\n 81772: a0 = t2 >> 0x20\n 81775: u8 [a2 + 0x1c] = a0\n 81778: a0 = t2 >> 0x18\n 81781: u8 [a2 + 0x1b] = a0\n 81784: a0 = t2 >> 0x10\n 81787: u8 [a2 + 0x1a] = a0\n 81790: a0 = t2 >> 0x8\n 81793: t2 = u64 [sp + 0x188]\n 81797: i32 a1 = t2 + 0\n 81799: u8 [a2 + 0x19] = a0\n 81802: a2 = u64 [sp + 0x108]\n 81806: jump @1742 if a1 >=u a2\n      : @1741 (gas: 4)\n 81809: a0 = u64 [sp + 0x198]\n 81813: u32 [a0] = a2\n 81815: t2 = a2\n 81817: fallthrough\n      : @1742 (gas: 109)\n 81818: t1 = u64 [sp + 0x100]\n 81822: a0 = u8 [t1 + 0x1]\n 81825: a1 = u8 [t1]\n 81827: a2 = u8 [t1 + 0x2]\n 81830: a3 = u8 [t1 + 0x3]\n 81833: a0 = a0 << 0x8\n 81836: a0 = a0 | a1\n 81839: a2 = a2 << 0x10\n 81842: a3 = a3 << 0x18\n 81845: a2 = a2 | a3\n 81848: a0 = a0 | a2\n 81851: a1 = u8 [t1 + 0x5]\n 81854: a2 = u8 [t1 + 0x4]\n 81857: a3 = u8 [t1 + 0x6]\n 81860: a4 = u8 [t1 + 0x7]\n 81863: a1 = a1 << 0x8\n 81866: a1 = a1 | a2\n 81869: a3 = a3 << 0x10\n 81872: a4 = a4 << 0x18\n 81875: a3 = a3 | a4\n 81878: a1 = a1 | a3\n 81881: a1 = a1 << 0x20\n 81884: t0 = a1 | a0\n 81887: a1 = u8 [t1 + 0x9]\n 81890: a2 = u8 [t1 + 0x8]\n 81893: a3 = u8 [t1 + 0xa]\n 81896: a4 = u8 [t1 + 0xb]\n 81899: a1 = a1 << 0x8\n 81902: a1 = a1 | a2\n 81905: a3 = a3 << 0x10\n 81908: a4 = a4 << 0x18\n 81911: a3 = a3 | a4\n 81914: a1 = a1 | a3\n 81917: a2 = u8 [t1 + 0xd]\n 81920: a3 = u8 [t1 + 0xc]\n 81923: a4 = u8 [t1 + 0xe]\n 81926: a5 = u8 [t1 + 0xf]\n 81929: a2 = a2 << 0x8\n 81932: a2 = a2 | a3\n 81935: a4 = a4 << 0x10\n 81938: a5 = a5 << 0x18\n 81941: a4 = a4 | a5\n 81944: a2 = a2 | a4\n 81947: a2 = a2 << 0x20\n 81950: a1 = a1 | a2\n 81953: a2 = u8 [t1 + 0x11]\n 81956: a3 = u8 [t1 + 0x10]\n 81959: a4 = u8 [t1 + 0x12]\n 81962: a5 = u8 [t1 + 0x13]\n 81965: a2 = a2 << 0x8\n 81968: a2 = a2 | a3\n 81971: a4 = a4 << 0x10\n 81974: a5 = a5 << 0x18\n 81977: a4 = a4 | a5\n 81980: a2 = a2 | a4\n 81983: a3 = u8 [t1 + 0x15]\n 81986: a4 = u8 [t1 + 0x14]\n 81989: a5 = u8 [t1 + 0x16]\n 81992: s1 = u8 [t1 + 0x17]\n 81995: a3 = a3 << 0x8\n 81998: a3 = a3 | a4\n 82001: a5 = a5 << 0x10\n 82004: s1 = s1 << 0x18\n 82007: a5 = a5 | s1\n 82010: a3 = a3 | a5\n 82013: a3 = a3 << 0x20\n 82016: a2 = a2 | a3\n 82019: a3 = u8 [t1 + 0x19]\n 82022: a4 = u8 [t1 + 0x18]\n 82025: a5 = u8 [t1 + 0x1a]\n 82028: s1 = u8 [t1 + 0x1b]\n 82031: a3 = a3 << 0x8\n 82034: a3 = a3 | a4\n 82037: a5 = a5 << 0x10\n 82040: s1 = s1 << 0x18\n 82043: a5 = a5 | s1\n 82046: a3 = a3 | a5\n 82049: a4 = u8 [t1 + 0x1d]\n 82052: a5 = u8 [t1 + 0x1c]\n 82055: s1 = u8 [t1 + 0x1e]\n 82058: a0 = u8 [t1 + 0x1f]\n 82061: a4 = a4 << 0x8\n 82064: a4 = a4 | a5\n 82067: s1 = s1 << 0x10\n 82070: a0 = a0 << 0x18\n 82073: a0 = a0 | s1\n 82076: a0 = a0 | a4\n 82079: a0 = a0 << 0x20\n 82082: a0 = a0 | a3\n 82085: a0 = reverse a0\n 82087: a2 = reverse a2\n 82089: a1 = reverse a1\n 82091: a3 = reverse t0\n 82093: a5 = u64 [sp + 0x168]\n 82097: a4 = a2 ^ a5\n 82100: a2 = a5 <u a2\n 82103: a5 = u64 [sp + 0x170]\n 82107: a0 = a5 <u a0\n 82110: a0 = a2 if a4 != 0\n 82113: a4 = u64 [sp + 0x178]\n 82117: a2 = a3 ^ a4\n 82120: a3 = a4 <u a3\n 82123: a5 = u64 [sp + 0x158]\n 82127: a4 = a5 <u a1\n 82130: a4 = a3 if a2 != 0\n 82133: a1 = a1 ^ a5\n 82136: a1 = a1 | a2\n 82139: a0 = a4 if a1 != 0\n 82142: jump @1744 if a0 != 0\n      : @1743 (gas: 1)\n 82145: jump @1888\n      : @1744 (gas: 30)\n 82148: a1 = u64 [sp + 0x50]\n 82151: a0 = u64 [sp + 0xd0]\n 82155: a0 = a0 + a1\n 82158: a1 = a0 <u a1\n 82161: a4 = u64 [sp + 0x48]\n 82164: a2 = u64 [sp + 0xd8]\n 82168: a2 = a2 + a4\n 82171: a2 = a2 + a1\n 82174: a3 = a2 ^ a4\n 82177: a4 = a2 <u a4\n 82180: a4 = a1 if a3 == 0\n 82183: a5 = u64 [sp + 0x40]\n 82186: a1 = u64 [sp + 0xc0]\n 82190: a1 = a1 + a5\n 82193: a4 = a4 + a1\n 82196: a3 = a4 <u a1\n 82199: a1 = a1 <u a5\n 82202: a5 = u64 [sp + 0x38]\n 82205: s1 = u64 [sp + 0xc8]\n 82209: a5 = a5 + s1\n 82212: a1 = a1 + a5\n 82215: a1 = a1 + a3\n 82218: a3 = a0 | a4\n 82221: a1 = a1 | a2\n 82224: a3 = a3 | a1\n 82227: a3 = a3 >> 0x20\n 82230: a1 = a1 | a4\n 82233: a1 = a1 << 0x20\n 82236: a1 = a1 | a3\n 82239: jump @1746 if a1 == 0\n      : @1745 (gas: 1)\n 82242: jump @1885\n      : @1746 (gas: 2)\n 82245: i32 a1 = a0 >> 0x10\n 82248: jump @1748 if a1 == 0\n      : @1747 (gas: 1)\n 82251: jump @1885\n      : @1748 (gas: 4)\n 82254: a1 = a0 + 0x3f\n 82257: a2 = u64 [sp + 0x190]\n 82261: a2 = a2 & a1\n 82264: jump @1750 if a2 <=u 65536\n      : @1749 (gas: 1)\n 82270: jump @1885\n      : @1750 (gas: 2)\n 82273: i32 a1 = t2 + 0\n 82275: jump @1752 if a1 >=u a2\n      : @1751 (gas: 4)\n 82278: a1 = u64 [sp + 0x198]\n 82282: u32 [a1] = a2\n 82284: t2 = a2\n 82286: fallthrough\n      : @1752 (gas: 105)\n 82287: u64 [sp + 0xf8] = a2\n 82291: t1 = t2\n 82293: i32 a0 = a0 + 0\n 82295: t2 = u64 [sp + 0x180]\n 82299: t2 = t2 + a0\n 82302: a0 = u8 [t2 + 0x11]\n 82305: a1 = u8 [t2 + 0x10]\n 82308: a2 = u8 [t2 + 0x12]\n 82311: a3 = u8 [t2 + 0x13]\n 82314: a0 = a0 << 0x8\n 82317: a0 = a0 | a1\n 82320: a2 = a2 << 0x10\n 82323: a3 = a3 << 0x18\n 82326: a2 = a2 | a3\n 82329: a0 = a0 | a2\n 82332: a1 = u8 [t2 + 0x15]\n 82335: a2 = u8 [t2 + 0x14]\n 82338: a3 = u8 [t2 + 0x16]\n 82341: a4 = u8 [t2 + 0x17]\n 82344: a1 = a1 << 0x8\n 82347: a1 = a1 | a2\n 82350: a3 = a3 << 0x10\n 82353: a4 = a4 << 0x18\n 82356: a3 = a3 | a4\n 82359: a1 = a1 | a3\n 82362: a1 = a1 << 0x20\n 82365: t0 = a1 | a0\n 82368: a1 = u8 [t2 + 0x1]\n 82371: a2 = u8 [t2]\n 82373: a3 = u8 [t2 + 0x2]\n 82376: a4 = u8 [t2 + 0x3]\n 82379: a1 = a1 << 0x8\n 82382: a1 = a1 | a2\n 82385: a3 = a3 << 0x10\n 82388: a4 = a4 << 0x18\n 82391: a3 = a3 | a4\n 82394: a1 = a1 | a3\n 82397: a2 = u8 [t2 + 0x5]\n 82400: a3 = u8 [t2 + 0x4]\n 82403: a4 = u8 [t2 + 0x6]\n 82406: a5 = u8 [t2 + 0x7]\n 82409: a2 = a2 << 0x8\n 82412: a2 = a2 | a3\n 82415: a4 = a4 << 0x10\n 82418: a5 = a5 << 0x18\n 82421: a4 = a4 | a5\n 82424: a2 = a2 | a4\n 82427: a2 = a2 << 0x20\n 82430: a1 = a1 | a2\n 82433: a2 = u8 [t2 + 0x19]\n 82436: a3 = u8 [t2 + 0x18]\n 82439: a4 = u8 [t2 + 0x1a]\n 82442: a5 = u8 [t2 + 0x1b]\n 82445: a2 = a2 << 0x8\n 82448: a2 = a2 | a3\n 82451: a4 = a4 << 0x10\n 82454: a5 = a5 << 0x18\n 82457: a4 = a4 | a5\n 82460: a2 = a2 | a4\n 82463: a3 = u8 [t2 + 0x1d]\n 82466: a4 = u8 [t2 + 0x1c]\n 82469: a5 = u8 [t2 + 0x1e]\n 82472: s1 = u8 [t2 + 0x1f]\n 82475: a3 = a3 << 0x8\n 82478: a3 = a3 | a4\n 82481: a5 = a5 << 0x10\n 82484: s1 = s1 << 0x18\n 82487: a5 = a5 | s1\n 82490: a3 = a3 | a5\n 82493: a3 = a3 << 0x20\n 82496: a2 = a2 | a3\n 82499: a3 = u8 [t2 + 0x9]\n 82502: a4 = u8 [t2 + 0x8]\n 82505: a5 = u8 [t2 + 0xa]\n 82508: s1 = u8 [t2 + 0xb]\n 82511: a3 = a3 << 0x8\n 82514: a3 = a3 | a4\n 82517: a5 = a5 << 0x10\n 82520: s1 = s1 << 0x18\n 82523: a5 = a5 | s1\n 82526: a3 = a3 | a5\n 82529: a4 = u8 [t2 + 0xd]\n 82532: a5 = u8 [t2 + 0xc]\n 82535: s1 = u8 [t2 + 0xe]\n 82538: a0 = u8 [t2 + 0xf]\n 82541: a4 = a4 << 0x8\n 82544: a4 = a4 | a5\n 82547: s1 = s1 << 0x10\n 82550: a0 = a0 << 0x18\n 82553: a0 = a0 | s1\n 82556: a0 = a0 | a4\n 82559: a0 = a0 << 0x20\n 82562: a0 = a0 | a3\n 82565: a0 = reverse a0\n 82567: a2 = reverse a2\n 82569: a1 = reverse a1\n 82571: a3 = reverse t0\n 82573: a1 = a1 | a3\n 82576: a3 = a2 | a0\n 82579: a3 = a3 | a1\n 82582: a3 = a3 >> 0x20\n 82585: a0 = a0 | a1\n 82588: a0 = a0 << 0x20\n 82591: a0 = a0 | a3\n 82594: jump @1754 if a0 == 0\n      : @1753 (gas: 1)\n 82597: jump @1885\n      : @1754 (gas: 2)\n 82600: i32 a0 = a2 >> 0x10\n 82603: jump @1756 if a0 == 0\n      : @1755 (gas: 1)\n 82606: jump @1885\n      : @1756 (gas: 4)\n 82609: a0 = a2 + 0x3f\n 82612: a1 = u64 [sp + 0x190]\n 82616: a0 = a0 & a1\n 82619: jump @1758 if a0 <=u 65536\n      : @1757 (gas: 1)\n 82625: jump @1885\n      : @1758 (gas: 3)\n 82628: t0 = t1\n 82630: i32 a1 = t1 + 0\n 82632: jump @1760 if a1 >=u a0\n      : @1759 (gas: 4)\n 82635: a1 = u64 [sp + 0x198]\n 82639: u32 [a1] = a0\n 82641: t0 = a0\n 82643: fallthrough\n      : @1760 (gas: 103)\n 82644: i32 a0 = a2 + 0\n 82646: a1 = u64 [sp + 0x180]\n 82650: a0 = a0 + a1\n 82653: a1 = u8 [a0 + 0x11]\n 82656: a2 = u8 [a0 + 0x10]\n 82659: a3 = u8 [a0 + 0x12]\n 82662: a4 = u8 [a0 + 0x13]\n 82665: a1 = a1 << 0x8\n 82668: a1 = a1 | a2\n 82671: a3 = a3 << 0x10\n 82674: a4 = a4 << 0x18\n 82677: a3 = a3 | a4\n 82680: a1 = a1 | a3\n 82683: a2 = u8 [a0 + 0x15]\n 82686: a3 = u8 [a0 + 0x14]\n 82689: a4 = u8 [a0 + 0x16]\n 82692: a5 = u8 [a0 + 0x17]\n 82695: a2 = a2 << 0x8\n 82698: a2 = a2 | a3\n 82701: a4 = a4 << 0x10\n 82704: a5 = a5 << 0x18\n 82707: a4 = a4 | a5\n 82710: a2 = a2 | a4\n 82713: a2 = a2 << 0x20\n 82716: t1 = a2 | a1\n 82719: a2 = u8 [a0 + 0x1]\n 82722: a3 = u8 [a0]\n 82724: a4 = u8 [a0 + 0x2]\n 82727: a5 = u8 [a0 + 0x3]\n 82730: a2 = a2 << 0x8\n 82733: a2 = a2 | a3\n 82736: a4 = a4 << 0x10\n 82739: a5 = a5 << 0x18\n 82742: a4 = a4 | a5\n 82745: a2 = a2 | a4\n 82748: a3 = u8 [a0 + 0x5]\n 82751: a4 = u8 [a0 + 0x4]\n 82754: a5 = u8 [a0 + 0x6]\n 82757: s1 = u8 [a0 + 0x7]\n 82760: a3 = a3 << 0x8\n 82763: a3 = a3 | a4\n 82766: a5 = a5 << 0x10\n 82769: s1 = s1 << 0x18\n 82772: a5 = a5 | s1\n 82775: a3 = a3 | a5\n 82778: a3 = a3 << 0x20\n 82781: a2 = a2 | a3\n 82784: a3 = u8 [a0 + 0x19]\n 82787: a4 = u8 [a0 + 0x18]\n 82790: a5 = u8 [a0 + 0x1a]\n 82793: s1 = u8 [a0 + 0x1b]\n 82796: a3 = a3 << 0x8\n 82799: a3 = a3 | a4\n 82802: a5 = a5 << 0x10\n 82805: s1 = s1 << 0x18\n 82808: a5 = a5 | s1\n 82811: a3 = a3 | a5\n 82814: a4 = u8 [a0 + 0x1d]\n 82817: a5 = u8 [a0 + 0x1c]\n 82820: s1 = u8 [a0 + 0x1e]\n 82823: a1 = u8 [a0 + 0x1f]\n 82826: a4 = a4 << 0x8\n 82829: a4 = a4 | a5\n 82832: s1 = s1 << 0x10\n 82835: a1 = a1 << 0x18\n 82838: a1 = a1 | s1\n 82841: a1 = a1 | a4\n 82844: a1 = a1 << 0x20\n 82847: a3 = a3 | a1\n 82850: a1 = u8 [a0 + 0x9]\n 82853: a4 = u8 [a0 + 0x8]\n 82856: a5 = u8 [a0 + 0xa]\n 82859: s1 = u8 [a0 + 0xb]\n 82862: a1 = a1 << 0x8\n 82865: a1 = a1 | a4\n 82868: a5 = a5 << 0x10\n 82871: s1 = s1 << 0x18\n 82874: a5 = a5 | s1\n 82877: a1 = a1 | a5\n 82880: a4 = u8 [a0 + 0xd]\n 82883: a5 = u8 [a0 + 0xc]\n 82886: s1 = u8 [a0 + 0xe]\n 82889: a0 = u8 [a0 + 0xf]\n 82892: a4 = a4 << 0x8\n 82895: a4 = a4 | a5\n 82898: s1 = s1 << 0x10\n 82901: a0 = a0 << 0x18\n 82904: a0 = a0 | s1\n 82907: a0 = a0 | a4\n 82910: a0 = a0 << 0x20\n 82913: a0 = a0 | a1\n 82916: a1 = reverse a0\n 82918: a4 = reverse a3\n 82920: a2 = reverse a2\n 82922: a3 = reverse t1\n 82924: a2 = a2 | a3\n 82927: a3 = a4 | a1\n 82930: a3 = a3 | a2\n 82933: a3 = a3 >> 0x20\n 82936: a1 = a1 | a2\n 82939: a1 = a1 << 0x20\n 82942: a1 = a1 | a3\n 82945: jump @1762 if a1 == 0\n      : @1761 (gas: 1)\n 82948: jump @1885\n      : @1762 (gas: 3)\n 82951: i32 a1 = a4 >> 0x10\n 82954: a0 = u64 [sp + 0x198]\n 82958: jump @1764 if a1 == 0\n      : @1763 (gas: 1)\n 82961: jump @1885\n      : @1764 (gas: 4)\n 82964: a1 = a4 + 0x3f\n 82967: a2 = u64 [sp + 0x190]\n 82971: a1 = a1 & a2\n 82974: jump @1766 if a1 <=u 65536\n      : @1765 (gas: 1)\n 82980: jump @1885\n      : @1766 (gas: 2)\n 82983: i32 a2 = t0 + 0\n 82985: jump @1768 if a2 >=u a1\n      : @1767 (gas: 3)\n 82988: u32 [a0] = a1\n 82990: t0 = a1\n 82992: fallthrough\n      : @1768 (gas: 4)\n 82993: u64 [sp + 0xc8] = a4\n 82997: i32 a1 = t0 + 0\n 82999: a2 = u64 [sp + 0x160]\n 83003: jump @1770 if a1 >=u a2\n      : @1769 (gas: 3)\n 83006: t0 = u64 [sp + 0x160]\n 83010: u32 [a0] = t0\n 83012: fallthrough\n      : @1770 (gas: 124)\n 83013: u64 [sp + 0x188] = t0\n 83017: a0 = u64 [sp + 0x110]\n 83021: a1 = a0 + 0x2\n 83024: u64 [sp + 0xe0] = a1\n 83028: a1 = a1 <u a0\n 83031: a0 = u64 [sp + 0x140]\n 83035: a2 = a0 + a1\n 83038: u64 [sp + 0xd8] = a2\n 83042: t1 = a2 <u a0\n 83045: t1 = a1 if a1 == 0\n 83048: a5 = u64 [sp + 0x128]\n 83052: a1 = u8 [a5 + 0x1]\n 83055: a3 = u8 [a5]\n 83057: s1 = u8 [a5 + 0x2]\n 83060: a0 = u8 [a5 + 0x3]\n 83063: a1 = a1 << 0x8\n 83066: a1 = a1 | a3\n 83069: s1 = s1 << 0x10\n 83072: a0 = a0 << 0x18\n 83075: a0 = a0 | s1\n 83078: a0 = a0 | a1\n 83081: a1 = u8 [a5 + 0x5]\n 83084: a3 = u8 [a5 + 0x4]\n 83087: s1 = u8 [a5 + 0x6]\n 83090: a2 = u8 [a5 + 0x7]\n 83093: a1 = a1 << 0x8\n 83096: a1 = a1 | a3\n 83099: s1 = s1 << 0x10\n 83102: a2 = a2 << 0x18\n 83105: a2 = a2 | s1\n 83108: a1 = a1 | a2\n 83111: a1 = a1 << 0x20\n 83114: a0 = a0 | a1\n 83117: u64 [sp + 0xd0] = a0\n 83121: a0 = u8 [a5 + 0x9]\n 83124: a2 = u8 [a5 + 0x8]\n 83127: a3 = u8 [a5 + 0xa]\n 83130: s1 = u8 [a5 + 0xb]\n 83133: a0 = a0 << 0x8\n 83136: a0 = a0 | a2\n 83139: a3 = a3 << 0x10\n 83142: s1 = s1 << 0x18\n 83145: a3 = a3 | s1\n 83148: a0 = a0 | a3\n 83151: a2 = u8 [a5 + 0xd]\n 83154: a3 = u8 [a5 + 0xc]\n 83157: s1 = u8 [a5 + 0xe]\n 83160: t0 = u8 [a5 + 0xf]\n 83163: a2 = a2 << 0x8\n 83166: a2 = a2 | a3\n 83169: s1 = s1 << 0x10\n 83172: t0 = t0 << 0x18\n 83175: a3 = t0 | s1\n 83178: a2 = a2 | a3\n 83181: a2 = a2 << 0x20\n 83184: t0 = a2 | a0\n 83187: a0 = u8 [a5 + 0x11]\n 83190: a2 = u8 [a5 + 0x10]\n 83193: s1 = u8 [a5 + 0x12]\n 83196: a3 = u8 [a5 + 0x13]\n 83199: a0 = a0 << 0x8\n 83202: a0 = a0 | a2\n 83205: s1 = s1 << 0x10\n 83208: a3 = a3 << 0x18\n 83211: a3 = a3 | s1\n 83214: a0 = a0 | a3\n 83217: a2 = u8 [a5 + 0x15]\n 83220: a3 = u8 [a5 + 0x14]\n 83223: s1 = u8 [a5 + 0x16]\n 83226: a4 = u8 [a5 + 0x17]\n 83229: a2 = a2 << 0x8\n 83232: a2 = a2 | a3\n 83235: s1 = s1 << 0x10\n 83238: a4 = a4 << 0x18\n 83241: a4 = a4 | s1\n 83244: a2 = a2 | a4\n 83247: a2 = a2 << 0x20\n 83250: s1 = a2 | a0\n 83253: a0 = u8 [a5 + 0x19]\n 83256: a2 = u8 [a5 + 0x18]\n 83259: a3 = u8 [a5 + 0x1a]\n 83262: a4 = u8 [a5 + 0x1b]\n 83265: a0 = a0 << 0x8\n 83268: a0 = a0 | a2\n 83271: a3 = a3 << 0x10\n 83274: a4 = a4 << 0x18\n 83277: a3 = a3 | a4\n 83280: a0 = a0 | a3\n 83283: a2 = u8 [a5 + 0x1d]\n 83286: a3 = u8 [a5 + 0x1c]\n 83289: a4 = u8 [a5 + 0x1e]\n 83292: ra = u8 [a5 + 0x1f]\n 83295: a2 = a2 << 0x8\n 83298: a3 = a3 | a2\n 83301: a4 = a4 << 0x10\n 83304: ra = ra << 0x18\n 83307: a4 = ra | a4\n 83310: a5 = u64 [sp + 0x150]\n 83314: a2 = a5 + t1\n 83317: a3 = a3 | a4\n 83320: t1 = a2 <u a5\n 83323: a4 = u64 [sp + 0x148]\n 83327: t1 = t1 + a4\n 83330: a3 = a3 << 0x20\n 83333: a0 = a0 | a3\n 83336: a0 = reverse a0\n 83338: a3 = reverse s1\n 83340: ra = reverse t0\n 83342: a1 = u64 [sp + 0xd8]\n 83346: s1 = u64 [sp + 0xe0]\n 83350: a4 = u64 [sp + 0xd0]\n 83354: a5 = reverse a4\n 83356: t0 = a3 ^ a1\n 83359: a3 = a1 <u a3\n 83362: a0 = s1 <u a0\n 83365: a0 = a3 if t0 != 0\n 83368: a3 = a5 ^ t1\n 83371: a4 = t1 <u a5\n 83374: a5 = a2 <u ra\n 83377: a5 = a4 if a3 != 0\n 83380: a4 = ra ^ a2\n 83383: a3 = a3 | a4\n 83386: a0 = a5 if a3 != 0\n 83389: jump @1772 if a0 != 0\n      : @1771 (gas: 1)\n 83392: jump @1886\n      : @1772 (gas: 37)\n 83395: a0 = a2 >> 0x3b\n 83398: t1 = t1 << 0x5\n 83401: a0 = t1 | a0\n 83404: a3 = a1 >> 0x3b\n 83407: a2 = a2 << 0x5\n 83410: a4 = a2 | a3\n 83413: a2 = s1 >> 0x3b\n 83416: a3 = a1 << 0x5\n 83419: a2 = a2 | a3\n 83422: a3 = s1 << 0x5\n 83425: t0 = u64 [sp + 0x138]\n 83429: t0 = t0 + a3\n 83432: a3 = t0 <u a3\n 83435: a5 = u64 [sp + 0x130]\n 83439: a5 = a5 + a3\n 83442: a5 = a5 + a2\n 83445: s1 = a5 ^ a2\n 83448: a2 = a5 <u a2\n 83451: a2 = a3 if s1 == 0\n 83454: a3 = u64 [sp + 0x120]\n 83458: a3 = a3 + a4\n 83461: a2 = a2 + a3\n 83464: s1 = a2 <u a3\n 83467: a1 = a3 <u a4\n 83470: a3 = u64 [sp + 0x118]\n 83474: a0 = a0 + a3\n 83477: a0 = a0 + a1\n 83480: a0 = a0 + s1\n 83483: a1 = t0 | a2\n 83486: a0 = a0 | a5\n 83489: a1 = a1 | a0\n 83492: a1 = a1 >> 0x20\n 83495: a0 = a0 | a2\n 83498: a0 = a0 << 0x20\n 83501: a0 = a0 | a1\n 83504: a4 = u64 [sp + 0x180]\n 83508: jump @1774 if a0 == 0\n      : @1773 (gas: 1)\n 83511: jump @1885\n      : @1774 (gas: 3)\n 83514: i32 a0 = t0 >> 0x10\n 83517: a2 = u64 [sp + 0x198]\n 83521: jump @1776 if a0 == 0\n      : @1775 (gas: 1)\n 83524: jump @1885\n      : @1776 (gas: 4)\n 83527: a0 = t0 + 0x3f\n 83530: a1 = u64 [sp + 0x190]\n 83534: a1 = a1 & a0\n 83537: jump @1778 if a1 <=u 65536\n      : @1777 (gas: 1)\n 83543: jump @1885\n      : @1778 (gas: 3)\n 83546: a3 = u64 [sp + 0x188]\n 83550: i32 a0 = a3 + 0\n 83552: jump @1780 if a0 >=u a1\n      : @1779 (gas: 3)\n 83555: u32 [a2] = a1\n 83557: a3 = a1\n 83559: fallthrough\n      : @1780 (gas: 158)\n 83560: u64 [sp + 0x188] = a3\n 83564: a2 = i32 [sp + 0xc8]\n 83568: a2 = a2 + a4\n 83571: a0 = u8 [a2 + 0x19]\n 83574: a1 = u8 [a2 + 0x18]\n 83577: a3 = u8 [a2 + 0x1a]\n 83580: a5 = u8 [a2 + 0x1b]\n 83583: a0 = a0 << 0x8\n 83586: a0 = a0 | a1\n 83589: a3 = a3 << 0x10\n 83592: a5 = a5 << 0x18\n 83595: a3 = a3 | a5\n 83598: a0 = a0 | a3\n 83601: a1 = u8 [a2 + 0x1d]\n 83604: a3 = u8 [a2 + 0x1c]\n 83607: a5 = u8 [a2 + 0x1e]\n 83610: s1 = u8 [a2 + 0x1f]\n 83613: a1 = a1 << 0x8\n 83616: a1 = a1 | a3\n 83619: a5 = a5 << 0x10\n 83622: s1 = s1 << 0x18\n 83625: a5 = a5 | s1\n 83628: a1 = a1 | a5\n 83631: a1 = a1 << 0x20\n 83634: ra = a1 | a0\n 83637: a1 = u8 [a2 + 0x11]\n 83640: a3 = u8 [a2 + 0x10]\n 83643: a5 = u8 [a2 + 0x12]\n 83646: s1 = u8 [a2 + 0x13]\n 83649: a1 = a1 << 0x8\n 83652: a1 = a1 | a3\n 83655: a5 = a5 << 0x10\n 83658: s1 = s1 << 0x18\n 83661: a5 = a5 | s1\n 83664: a1 = a1 | a5\n 83667: a3 = u8 [a2 + 0x15]\n 83670: a5 = u8 [a2 + 0x14]\n 83673: s1 = u8 [a2 + 0x16]\n 83676: a4 = u8 [a2 + 0x17]\n 83679: a3 = a3 << 0x8\n 83682: a3 = a3 | a5\n 83685: s1 = s1 << 0x10\n 83688: a4 = a4 << 0x18\n 83691: a4 = a4 | s1\n 83694: a3 = a3 | a4\n 83697: a3 = a3 << 0x20\n 83700: a1 = a1 | a3\n 83703: a3 = u8 [a2 + 0x9]\n 83706: a4 = u8 [a2 + 0x8]\n 83709: a5 = u8 [a2 + 0xa]\n 83712: s1 = u8 [a2 + 0xb]\n 83715: a3 = a3 << 0x8\n 83718: a3 = a3 | a4\n 83721: a5 = a5 << 0x10\n 83724: s1 = s1 << 0x18\n 83727: a5 = a5 | s1\n 83730: t1 = a5 | a3\n 83733: a4 = u8 [a2 + 0xd]\n 83736: a5 = u8 [a2 + 0xc]\n 83739: s1 = u8 [a2 + 0xe]\n 83742: a3 = u8 [a2 + 0xf]\n 83745: a4 = a4 << 0x8\n 83748: a4 = a4 | a5\n 83751: s1 = s1 << 0x10\n 83754: a3 = a3 << 0x18\n 83757: a3 = a3 | s1\n 83760: a3 = a3 | a4\n 83763: a3 = a3 << 0x20\n 83766: a3 = a3 | t1\n 83769: a4 = u8 [a2 + 0x1]\n 83772: a5 = u8 [a2]\n 83774: s1 = u8 [a2 + 0x2]\n 83777: a0 = u8 [a2 + 0x3]\n 83780: a4 = a4 << 0x8\n 83783: a4 = a4 | a5\n 83786: s1 = s1 << 0x10\n 83789: a0 = a0 << 0x18\n 83792: a0 = a0 | s1\n 83795: a0 = a0 | a4\n 83798: a4 = u8 [a2 + 0x5]\n 83801: a5 = u8 [a2 + 0x4]\n 83804: s1 = u8 [a2 + 0x6]\n 83807: a2 = u8 [a2 + 0x7]\n 83810: a4 = a4 << 0x8\n 83813: a4 = a4 | a5\n 83816: s1 = s1 << 0x10\n 83819: a2 = a2 << 0x18\n 83822: a2 = a2 | s1\n 83825: a2 = a2 | a4\n 83828: a2 = a2 << 0x20\n 83831: a5 = a2 | a0\n 83834: i32 a2 = t0 + 0\n 83836: a0 = u64 [sp + 0x180]\n 83840: a2 = a2 + a0\n 83843: u8 [a2 + 0x10] = a1\n 83846: a0 = a3 >> 0x38\n 83849: u8 [a2 + 0xf] = a0\n 83852: a0 = a3 >> 0x30\n 83855: u8 [a2 + 0xe] = a0\n 83858: a0 = a3 >> 0x28\n 83861: u8 [a2 + 0xd] = a0\n 83864: a0 = a3 >> 0x20\n 83867: u8 [a2 + 0xc] = a0\n 83870: a0 = a3 >> 0x18\n 83873: u8 [a2 + 0xb] = a0\n 83876: a0 = a3 >> 0x10\n 83879: u8 [a2 + 0xa] = a0\n 83882: a0 = a3 >> 0x8\n 83885: u8 [a2 + 0x9] = a0\n 83888: u8 [a2 + 0x8] = a3\n 83891: a0 = a5 >> 0x38\n 83894: u8 [a2 + 0x7] = a0\n 83897: a0 = a5 >> 0x30\n 83900: u8 [a2 + 0x6] = a0\n 83903: a0 = a5 >> 0x28\n 83906: u8 [a2 + 0x5] = a0\n 83909: a0 = a5 >> 0x20\n 83912: u8 [a2 + 0x4] = a0\n 83915: a0 = a5 >> 0x18\n 83918: u8 [a2 + 0x3] = a0\n 83921: a0 = a5 >> 0x10\n 83924: u8 [a2 + 0x2] = a0\n 83927: a0 = a5 >> 0x8\n 83930: u8 [a2 + 0x1] = a0\n 83933: u8 [a2] = a5\n 83935: u8 [a2 + 0x18] = ra\n 83938: a0 = a1 >> 0x38\n 83941: u8 [a2 + 0x17] = a0\n 83944: a0 = a1 >> 0x30\n 83947: u8 [a2 + 0x16] = a0\n 83950: a0 = a1 >> 0x28\n 83953: u8 [a2 + 0x15] = a0\n 83956: a0 = a1 >> 0x20\n 83959: u8 [a2 + 0x14] = a0\n 83962: a0 = a1 >> 0x18\n 83965: u8 [a2 + 0x13] = a0\n 83968: a0 = a1 >> 0x10\n 83971: u8 [a2 + 0x12] = a0\n 83974: a1 = a1 >> 0x8\n 83977: u8 [a2 + 0x11] = a1\n 83980: a0 = ra >> 0x38\n 83983: u8 [a2 + 0x1f] = a0\n 83986: a0 = ra >> 0x30\n 83989: u8 [a2 + 0x1e] = a0\n 83992: a0 = ra >> 0x28\n 83995: u8 [a2 + 0x1d] = a0\n 83998: a0 = ra >> 0x20\n 84001: u8 [a2 + 0x1c] = a0\n 84004: a0 = ra >> 0x18\n 84007: u8 [a2 + 0x1b] = a0\n 84010: a0 = ra >> 0x10\n 84013: u8 [a2 + 0x1a] = a0\n 84016: a0 = ra >> 0x8\n 84019: ra = u64 [sp + 0x188]\n 84023: i32 a1 = ra + 0\n 84025: u8 [a2 + 0x19] = a0\n 84028: a0 = u64 [sp + 0x108]\n 84032: jump @1782 if a1 >=u a0\n      : @1781 (gas: 4)\n 84035: a1 = u64 [sp + 0x198]\n 84039: u32 [a1] = a0\n 84041: ra = a0\n 84043: fallthrough\n      : @1782 (gas: 110)\n 84044: t1 = u64 [sp + 0x100]\n 84048: a0 = u8 [t1 + 0x1]\n 84051: a1 = u8 [t1]\n 84053: a2 = u8 [t1 + 0x2]\n 84056: a3 = u8 [t1 + 0x3]\n 84059: a0 = a0 << 0x8\n 84062: a0 = a0 | a1\n 84065: a2 = a2 << 0x10\n 84068: a3 = a3 << 0x18\n 84071: a2 = a2 | a3\n 84074: a0 = a0 | a2\n 84077: a1 = u8 [t1 + 0x5]\n 84080: a2 = u8 [t1 + 0x4]\n 84083: a3 = u8 [t1 + 0x6]\n 84086: a4 = u8 [t1 + 0x7]\n 84089: a1 = a1 << 0x8\n 84092: a1 = a1 | a2\n 84095: a3 = a3 << 0x10\n 84098: a4 = a4 << 0x18\n 84101: a3 = a3 | a4\n 84104: a1 = a1 | a3\n 84107: a1 = a1 << 0x20\n 84110: t0 = a1 | a0\n 84113: a1 = u8 [t1 + 0x9]\n 84116: a2 = u8 [t1 + 0x8]\n 84119: a3 = u8 [t1 + 0xa]\n 84122: a4 = u8 [t1 + 0xb]\n 84125: a1 = a1 << 0x8\n 84128: a1 = a1 | a2\n 84131: a3 = a3 << 0x10\n 84134: a4 = a4 << 0x18\n 84137: a3 = a3 | a4\n 84140: a1 = a1 | a3\n 84143: a2 = u8 [t1 + 0xd]\n 84146: a3 = u8 [t1 + 0xc]\n 84149: a4 = u8 [t1 + 0xe]\n 84152: a5 = u8 [t1 + 0xf]\n 84155: a2 = a2 << 0x8\n 84158: a2 = a2 | a3\n 84161: a4 = a4 << 0x10\n 84164: a5 = a5 << 0x18\n 84167: a4 = a4 | a5\n 84170: a2 = a2 | a4\n 84173: a2 = a2 << 0x20\n 84176: a1 = a1 | a2\n 84179: a2 = u8 [t1 + 0x11]\n 84182: a3 = u8 [t1 + 0x10]\n 84185: a4 = u8 [t1 + 0x12]\n 84188: a5 = u8 [t1 + 0x13]\n 84191: a2 = a2 << 0x8\n 84194: a2 = a2 | a3\n 84197: a4 = a4 << 0x10\n 84200: a5 = a5 << 0x18\n 84203: a4 = a4 | a5\n 84206: a2 = a2 | a4\n 84209: a3 = u8 [t1 + 0x15]\n 84212: a4 = u8 [t1 + 0x14]\n 84215: a5 = u8 [t1 + 0x16]\n 84218: s1 = u8 [t1 + 0x17]\n 84221: a3 = a3 << 0x8\n 84224: a3 = a3 | a4\n 84227: a5 = a5 << 0x10\n 84230: s1 = s1 << 0x18\n 84233: a5 = a5 | s1\n 84236: a3 = a3 | a5\n 84239: a3 = a3 << 0x20\n 84242: a2 = a2 | a3\n 84245: a3 = u8 [t1 + 0x19]\n 84248: a4 = u8 [t1 + 0x18]\n 84251: a5 = u8 [t1 + 0x1a]\n 84254: s1 = u8 [t1 + 0x1b]\n 84257: a3 = a3 << 0x8\n 84260: a3 = a3 | a4\n 84263: a5 = a5 << 0x10\n 84266: s1 = s1 << 0x18\n 84269: a5 = a5 | s1\n 84272: a3 = a3 | a5\n 84275: a4 = u8 [t1 + 0x1d]\n 84278: a5 = u8 [t1 + 0x1c]\n 84281: s1 = u8 [t1 + 0x1e]\n 84284: a0 = u8 [t1 + 0x1f]\n 84287: a4 = a4 << 0x8\n 84290: a4 = a4 | a5\n 84293: s1 = s1 << 0x10\n 84296: a0 = a0 << 0x18\n 84299: a0 = a0 | s1\n 84302: a0 = a0 | a4\n 84305: a0 = a0 << 0x20\n 84308: a0 = a0 | a3\n 84311: a0 = reverse a0\n 84313: a2 = reverse a2\n 84315: a1 = reverse a1\n 84317: a3 = reverse t0\n 84319: a5 = u64 [sp + 0x168]\n 84323: a4 = a2 ^ a5\n 84326: a2 = a5 <u a2\n 84329: a5 = u64 [sp + 0x170]\n 84333: a5 = a5 <u a0\n 84336: a5 = a2 if a4 != 0\n 84339: a2 = u64 [sp + 0x178]\n 84343: a0 = a3 ^ a2\n 84346: a2 = a2 <u a3\n 84349: a4 = u64 [sp + 0x158]\n 84353: a3 = a4 <u a1\n 84356: a3 = a2 if a0 != 0\n 84359: a1 = a1 ^ a4\n 84362: a0 = a0 | a1\n 84365: a5 = a3 if a0 != 0\n 84368: i32 a0 = ra + 0\n 84370: jump @1784 if a5 != 0\n      : @1783 (gas: 1)\n 84373: jump @1887\n      : @1784 (gas: 3)\n 84376: t1 = u64 [sp + 0x180]\n 84380: a1 = u64 [sp + 0xf8]\n 84384: jump @1786 if a0 >=u a1\n      : @1785 (gas: 4)\n 84387: a0 = u64 [sp + 0x198]\n 84391: u32 [a0] = a1\n 84393: ra = a1\n 84395: fallthrough\n      : @1786 (gas: 100)\n 84396: a0 = u8 [t2 + 0x11]\n 84399: a1 = u8 [t2 + 0x10]\n 84402: a2 = u8 [t2 + 0x12]\n 84405: a3 = u8 [t2 + 0x13]\n 84408: a0 = a0 << 0x8\n 84411: a0 = a0 | a1\n 84414: a2 = a2 << 0x10\n 84417: a3 = a3 << 0x18\n 84420: a2 = a2 | a3\n 84423: a0 = a0 | a2\n 84426: a1 = u8 [t2 + 0x15]\n 84429: a2 = u8 [t2 + 0x14]\n 84432: a3 = u8 [t2 + 0x16]\n 84435: a4 = u8 [t2 + 0x17]\n 84438: a1 = a1 << 0x8\n 84441: a1 = a1 | a2\n 84444: a3 = a3 << 0x10\n 84447: a4 = a4 << 0x18\n 84450: a3 = a3 | a4\n 84453: a1 = a1 | a3\n 84456: a1 = a1 << 0x20\n 84459: t0 = a1 | a0\n 84462: a1 = u8 [t2 + 0x1]\n 84465: a2 = u8 [t2]\n 84467: a3 = u8 [t2 + 0x2]\n 84470: a4 = u8 [t2 + 0x3]\n 84473: a1 = a1 << 0x8\n 84476: a1 = a1 | a2\n 84479: a3 = a3 << 0x10\n 84482: a4 = a4 << 0x18\n 84485: a3 = a3 | a4\n 84488: a1 = a1 | a3\n 84491: a2 = u8 [t2 + 0x5]\n 84494: a3 = u8 [t2 + 0x4]\n 84497: a4 = u8 [t2 + 0x6]\n 84500: a5 = u8 [t2 + 0x7]\n 84503: a2 = a2 << 0x8\n 84506: a2 = a2 | a3\n 84509: a4 = a4 << 0x10\n 84512: a5 = a5 << 0x18\n 84515: a4 = a4 | a5\n 84518: a2 = a2 | a4\n 84521: a2 = a2 << 0x20\n 84524: a1 = a1 | a2\n 84527: a2 = u8 [t2 + 0x19]\n 84530: a3 = u8 [t2 + 0x18]\n 84533: a4 = u8 [t2 + 0x1a]\n 84536: a5 = u8 [t2 + 0x1b]\n 84539: a2 = a2 << 0x8\n 84542: a2 = a2 | a3\n 84545: a4 = a4 << 0x10\n 84548: a5 = a5 << 0x18\n 84551: a4 = a4 | a5\n 84554: a2 = a2 | a4\n 84557: a3 = u8 [t2 + 0x1d]\n 84560: a4 = u8 [t2 + 0x1c]\n 84563: a5 = u8 [t2 + 0x1e]\n 84566: s1 = u8 [t2 + 0x1f]\n 84569: a3 = a3 << 0x8\n 84572: a3 = a3 | a4\n 84575: a5 = a5 << 0x10\n 84578: s1 = s1 << 0x18\n 84581: a5 = a5 | s1\n 84584: a3 = a3 | a5\n 84587: a3 = a3 << 0x20\n 84590: a2 = a2 | a3\n 84593: a3 = u8 [t2 + 0x9]\n 84596: a4 = u8 [t2 + 0x8]\n 84599: a5 = u8 [t2 + 0xa]\n 84602: s1 = u8 [t2 + 0xb]\n 84605: a3 = a3 << 0x8\n 84608: a3 = a3 | a4\n 84611: a5 = a5 << 0x10\n 84614: s1 = s1 << 0x18\n 84617: a5 = a5 | s1\n 84620: a3 = a3 | a5\n 84623: a4 = u8 [t2 + 0xd]\n 84626: a5 = u8 [t2 + 0xc]\n 84629: s1 = u8 [t2 + 0xe]\n 84632: a0 = u8 [t2 + 0xf]\n 84635: a4 = a4 << 0x8\n 84638: a4 = a4 | a5\n 84641: s1 = s1 << 0x10\n 84644: a0 = a0 << 0x18\n 84647: a0 = a0 | s1\n 84650: a0 = a0 | a4\n 84653: a0 = a0 << 0x20\n 84656: a0 = a0 | a3\n 84659: a0 = reverse a0\n 84661: a2 = reverse a2\n 84663: a1 = reverse a1\n 84665: a3 = reverse t0\n 84667: a1 = a1 | a3\n 84670: a3 = a2 | a0\n 84673: a3 = a3 | a1\n 84676: a3 = a3 >> 0x20\n 84679: a0 = a0 | a1\n 84682: a0 = a0 << 0x20\n 84685: a0 = a0 | a3\n 84688: jump @1788 if a0 == 0\n      : @1787 (gas: 1)\n 84691: jump @1885\n      : @1788 (gas: 2)\n 84694: i32 a0 = a2 >> 0x10\n 84697: jump @1790 if a0 == 0\n      : @1789 (gas: 1)\n 84700: jump @1885\n      : @1790 (gas: 4)\n 84703: a0 = a2 + 0x3f\n 84706: a1 = u64 [sp + 0x190]\n 84710: a0 = a0 & a1\n 84713: jump @1792 if a0 <=u 65536\n      : @1791 (gas: 1)\n 84719: jump @1885\n      : @1792 (gas: 2)\n 84722: i32 a1 = ra + 0\n 84724: jump @1794 if a1 >=u a0\n      : @1793 (gas: 4)\n 84727: a1 = u64 [sp + 0x198]\n 84731: u32 [a1] = a0\n 84733: ra = a0\n 84735: fallthrough\n      : @1794 (gas: 110)\n 84736: i32 a0 = a2 + 0\n 84738: a0 = a0 + t1\n 84741: a1 = u8 [a0 + 0x19]\n 84744: a2 = u8 [a0 + 0x18]\n 84747: a3 = u8 [a0 + 0x1a]\n 84750: a4 = u8 [a0 + 0x1b]\n 84753: a1 = a1 << 0x8\n 84756: a1 = a1 | a2\n 84759: a3 = a3 << 0x10\n 84762: a4 = a4 << 0x18\n 84765: a3 = a3 | a4\n 84768: a1 = a1 | a3\n 84771: a2 = u8 [a0 + 0x1d]\n 84774: a3 = u8 [a0 + 0x1c]\n 84777: a4 = u8 [a0 + 0x1e]\n 84780: a5 = u8 [a0 + 0x1f]\n 84783: a2 = a2 << 0x8\n 84786: a2 = a2 | a3\n 84789: a4 = a4 << 0x10\n 84792: a5 = a5 << 0x18\n 84795: a4 = a4 | a5\n 84798: a2 = a2 | a4\n 84801: a2 = a2 << 0x20\n 84804: t0 = a2 | a1\n 84807: a2 = u8 [a0 + 0x11]\n 84810: a3 = u8 [a0 + 0x10]\n 84813: a4 = u8 [a0 + 0x12]\n 84816: a5 = u8 [a0 + 0x13]\n 84819: a2 = a2 << 0x8\n 84822: a2 = a2 | a3\n 84825: a4 = a4 << 0x10\n 84828: a5 = a5 << 0x18\n 84831: a4 = a4 | a5\n 84834: a2 = a2 | a4\n 84837: a3 = u8 [a0 + 0x15]\n 84840: a4 = u8 [a0 + 0x14]\n 84843: a5 = u8 [a0 + 0x16]\n 84846: s1 = u8 [a0 + 0x17]\n 84849: a3 = a3 << 0x8\n 84852: a3 = a3 | a4\n 84855: a5 = a5 << 0x10\n 84858: s1 = s1 << 0x18\n 84861: a5 = a5 | s1\n 84864: a3 = a3 | a5\n 84867: a3 = a3 << 0x20\n 84870: a2 = a2 | a3\n 84873: a3 = u8 [a0 + 0x9]\n 84876: a4 = u8 [a0 + 0x8]\n 84879: a5 = u8 [a0 + 0xa]\n 84882: s1 = u8 [a0 + 0xb]\n 84885: a3 = a3 << 0x8\n 84888: a3 = a3 | a4\n 84891: a5 = a5 << 0x10\n 84894: s1 = s1 << 0x18\n 84897: a5 = a5 | s1\n 84900: a3 = a3 | a5\n 84903: a4 = u8 [a0 + 0xd]\n 84906: a5 = u8 [a0 + 0xc]\n 84909: s1 = u8 [a0 + 0xe]\n 84912: a1 = u8 [a0 + 0xf]\n 84915: a4 = a4 << 0x8\n 84918: a4 = a4 | a5\n 84921: s1 = s1 << 0x10\n 84924: a1 = a1 << 0x18\n 84927: a1 = a1 | s1\n 84930: a1 = a1 | a4\n 84933: a1 = a1 << 0x20\n 84936: a3 = a3 | a1\n 84939: a1 = u8 [a0 + 0x1]\n 84942: a4 = u8 [a0]\n 84944: a5 = u8 [a0 + 0x2]\n 84947: s1 = u8 [a0 + 0x3]\n 84950: a1 = a1 << 0x8\n 84953: a1 = a1 | a4\n 84956: a5 = a5 << 0x10\n 84959: s1 = s1 << 0x18\n 84962: a5 = a5 | s1\n 84965: a1 = a1 | a5\n 84968: a4 = u8 [a0 + 0x5]\n 84971: a5 = u8 [a0 + 0x4]\n 84974: s1 = u8 [a0 + 0x6]\n 84977: a0 = u8 [a0 + 0x7]\n 84980: a4 = a4 << 0x8\n 84983: a4 = a4 | a5\n 84986: s1 = s1 << 0x10\n 84989: a0 = a0 << 0x18\n 84992: a0 = a0 | s1\n 84995: a0 = a0 | a4\n 84998: a0 = a0 << 0x20\n 85001: a0 = a0 | a1\n 85004: a1 = reverse a0\n 85006: a3 = reverse a3\n 85008: a2 = reverse a2\n 85010: a4 = reverse t0\n 85012: s1 = a4 + 0x20\n 85015: a4 = s1 <u a4\n 85018: a5 = a2 + a4\n 85021: a2 = a5 <u a2\n 85024: a2 = a4 if a4 == 0\n 85027: a2 = a2 + a3\n 85030: a3 = a2 <u a3\n 85033: a1 = a1 + a3\n 85036: a3 = s1 | a2\n 85039: a1 = a1 | a5\n 85042: a3 = a3 | a1\n 85045: a3 = a3 >> 0x20\n 85048: a1 = a1 | a2\n 85051: a1 = a1 << 0x20\n 85054: a1 = a1 | a3\n 85057: jump @1796 if a1 == 0\n      : @1795 (gas: 1)\n 85060: jump @1885\n      : @1796 (gas: 2)\n 85063: i32 a1 = s1 >> 0x10\n 85066: jump @1798 if a1 == 0\n      : @1797 (gas: 1)\n 85069: jump @1885\n      : @1798 (gas: 4)\n 85072: a1 = s1 + 0x3f\n 85075: a0 = u64 [sp + 0x190]\n 85079: a1 = a1 & a0\n 85082: jump @1800 if a1 <=u 65536\n      : @1799 (gas: 1)\n 85088: jump @1885\n      : @1800 (gas: 2)\n 85091: i32 a2 = ra + 0\n 85093: jump @1802 if a2 >=u a1\n      : @1801 (gas: 4)\n 85096: a0 = u64 [sp + 0x198]\n 85100: u32 [a0] = a1\n 85102: ra = a1\n 85104: fallthrough\n      : @1802 (gas: 4)\n 85105: u64 [sp + 0xd0] = s1\n 85109: i32 a1 = ra + 0\n 85111: a0 = u64 [sp + 0x160]\n 85115: jump @1804 if a1 >=u a0\n      : @1803 (gas: 4)\n 85118: ra = u64 [sp + 0x160]\n 85122: a0 = u64 [sp + 0x198]\n 85126: u32 [a0] = ra\n 85128: fallthrough\n      : @1804 (gas: 123)\n 85129: u64 [sp + 0x188] = ra\n 85133: a0 = u64 [sp + 0x110]\n 85137: a5 = a0 + 0x3\n 85140: a1 = a5 <u a0\n 85143: a0 = u64 [sp + 0x140]\n 85147: t0 = a0 + a1\n 85150: a0 = t0 <u a0\n 85153: a0 = a1 if a1 == 0\n 85156: u64 [sp + 0xe0] = a0\n 85160: a4 = u64 [sp + 0x128]\n 85164: a1 = u8 [a4 + 0x1]\n 85167: a3 = u8 [a4]\n 85169: s1 = u8 [a4 + 0x2]\n 85172: a2 = u8 [a4 + 0x3]\n 85175: a1 = a1 << 0x8\n 85178: a1 = a1 | a3\n 85181: s1 = s1 << 0x10\n 85184: a2 = a2 << 0x18\n 85187: a2 = a2 | s1\n 85190: a1 = a1 | a2\n 85193: a2 = u8 [a4 + 0x5]\n 85196: a3 = u8 [a4 + 0x4]\n 85199: s1 = u8 [a4 + 0x6]\n 85202: a0 = u8 [a4 + 0x7]\n 85205: a2 = a2 << 0x8\n 85208: a2 = a2 | a3\n 85211: s1 = s1 << 0x10\n 85214: a0 = a0 << 0x18\n 85217: a0 = a0 | s1\n 85220: a0 = a0 | a2\n 85223: a0 = a0 << 0x20\n 85226: a0 = a0 | a1\n 85229: u64 [sp + 0xd8] = a0\n 85233: a0 = u8 [a4 + 0x9]\n 85236: a1 = u8 [a4 + 0x8]\n 85239: a2 = u8 [a4 + 0xa]\n 85242: a3 = u8 [a4 + 0xb]\n 85245: a0 = a0 << 0x8\n 85248: a0 = a0 | a1\n 85251: a2 = a2 << 0x10\n 85254: a3 = a3 << 0x18\n 85257: a2 = a2 | a3\n 85260: a0 = a0 | a2\n 85263: a1 = u8 [a4 + 0xd]\n 85266: a2 = u8 [a4 + 0xc]\n 85269: a3 = u8 [a4 + 0xe]\n 85272: s1 = u8 [a4 + 0xf]\n 85275: a1 = a1 << 0x8\n 85278: a1 = a1 | a2\n 85281: a3 = a3 << 0x10\n 85284: s1 = s1 << 0x18\n 85287: a3 = a3 | s1\n 85290: a1 = a1 | a3\n 85293: a1 = a1 << 0x20\n 85296: a3 = a1 | a0\n 85299: a0 = u8 [a4 + 0x11]\n 85302: a1 = u8 [a4 + 0x10]\n 85305: a2 = u8 [a4 + 0x12]\n 85308: s1 = u8 [a4 + 0x13]\n 85311: a0 = a0 << 0x8\n 85314: a0 = a0 | a1\n 85317: a2 = a2 << 0x10\n 85320: s1 = s1 << 0x18\n 85323: a2 = a2 | s1\n 85326: a0 = a0 | a2\n 85329: a1 = u8 [a4 + 0x15]\n 85332: a2 = u8 [a4 + 0x14]\n 85335: s1 = u8 [a4 + 0x16]\n 85338: ra = u8 [a4 + 0x17]\n 85341: a1 = a1 << 0x8\n 85344: a1 = a1 | a2\n 85347: s1 = s1 << 0x10\n 85350: ra = ra << 0x18\n 85353: a2 = ra | s1\n 85356: a1 = a1 | a2\n 85359: a1 = a1 << 0x20\n 85362: ra = a1 | a0\n 85365: a0 = u8 [a4 + 0x19]\n 85368: a1 = u8 [a4 + 0x18]\n 85371: a2 = u8 [a4 + 0x1a]\n 85374: s1 = u8 [a4 + 0x1b]\n 85377: a0 = a0 << 0x8\n 85380: a0 = a0 | a1\n 85383: a2 = a2 << 0x10\n 85386: s1 = s1 << 0x18\n 85389: a2 = a2 | s1\n 85392: a0 = a0 | a2\n 85395: a1 = u8 [a4 + 0x1d]\n 85398: a2 = u8 [a4 + 0x1c]\n 85401: s1 = u8 [a4 + 0x1e]\n 85404: t1 = u8 [a4 + 0x1f]\n 85407: a1 = a1 << 0x8\n 85410: a1 = a1 | a2\n 85413: s1 = s1 << 0x10\n 85416: t1 = t1 << 0x18\n 85419: s1 = t1 | s1\n 85422: t1 = a5\n 85424: a4 = u64 [sp + 0x150]\n 85428: a2 = u64 [sp + 0xe0]\n 85432: a2 = a2 + a4\n 85435: s1 = s1 | a1\n 85438: a1 = a2 <u a4\n 85441: a4 = u64 [sp + 0x148]\n 85445: a1 = a1 + a4\n 85448: s1 = s1 << 0x20\n 85451: a0 = a0 | s1\n 85454: a0 = reverse a0\n 85456: s1 = reverse ra\n 85458: a3 = reverse a3\n 85460: a4 = u64 [sp + 0xd8]\n 85464: a4 = reverse a4\n 85466: a5 = s1 ^ t0\n 85469: s1 = t0 <u s1\n 85472: a0 = t1 <u a0\n 85475: a0 = s1 if a5 != 0\n 85478: a5 = a4 ^ a1\n 85481: a4 = a1 <u a4\n 85484: s1 = a2 <u a3\n 85487: s1 = a4 if a5 != 0\n 85490: a3 = a3 ^ a2\n 85493: a3 = a3 | a5\n 85496: a0 = s1 if a3 != 0\n 85499: jump @1806 if a0 != 0\n      : @1805 (gas: 1)\n 85502: jump @1886\n      : @1806 (gas: 37)\n 85505: a0 = a2 >> 0x3b\n 85508: a1 = a1 << 0x5\n 85511: a0 = a0 | a1\n 85514: a1 = t0 >> 0x3b\n 85517: a2 = a2 << 0x5\n 85520: a1 = a1 | a2\n 85523: a2 = t1 >> 0x3b\n 85526: t0 = t0 << 0x5\n 85529: a2 = t0 | a2\n 85532: a3 = t1 << 0x5\n 85535: t0 = u64 [sp + 0x138]\n 85539: t0 = t0 + a3\n 85542: a3 = t0 <u a3\n 85545: a5 = u64 [sp + 0x130]\n 85549: a5 = a5 + a3\n 85552: a5 = a5 + a2\n 85555: s1 = a5 ^ a2\n 85558: a2 = a5 <u a2\n 85561: a2 = a3 if s1 == 0\n 85564: a3 = u64 [sp + 0x120]\n 85568: a3 = a3 + a1\n 85571: a2 = a2 + a3\n 85574: s1 = a2 <u a3\n 85577: a1 = a3 <u a1\n 85580: a3 = u64 [sp + 0x118]\n 85584: a0 = a0 + a3\n 85587: a0 = a0 + a1\n 85590: a0 = a0 + s1\n 85593: a1 = t0 | a2\n 85596: a0 = a0 | a5\n 85599: a1 = a1 | a0\n 85602: a1 = a1 >> 0x20\n 85605: a0 = a0 | a2\n 85608: a0 = a0 << 0x20\n 85611: a0 = a0 | a1\n 85614: a4 = u64 [sp + 0x180]\n 85618: jump @1808 if a0 == 0\n      : @1807 (gas: 1)\n 85621: jump @1885\n      : @1808 (gas: 3)\n 85624: i32 a0 = t0 >> 0x10\n 85627: a2 = u64 [sp + 0x198]\n 85631: jump @1810 if a0 == 0\n      : @1809 (gas: 1)\n 85634: jump @1885\n      : @1810 (gas: 4)\n 85637: a0 = t0 + 0x3f\n 85640: a1 = u64 [sp + 0x190]\n 85644: a1 = a1 & a0\n 85647: jump @1812 if a1 <=u 65536\n      : @1811 (gas: 1)\n 85653: jump @1885\n      : @1812 (gas: 3)\n 85656: a3 = u64 [sp + 0x188]\n 85660: i32 a0 = a3 + 0\n 85662: jump @1814 if a0 >=u a1\n      : @1813 (gas: 3)\n 85665: u32 [a2] = a1\n 85667: a3 = a1\n 85669: fallthrough\n      : @1814 (gas: 158)\n 85670: u64 [sp + 0x188] = a3\n 85674: a2 = i32 [sp + 0xd0]\n 85678: a2 = a2 + a4\n 85681: a0 = u8 [a2 + 0x19]\n 85684: a1 = u8 [a2 + 0x18]\n 85687: a3 = u8 [a2 + 0x1a]\n 85690: a5 = u8 [a2 + 0x1b]\n 85693: a0 = a0 << 0x8\n 85696: a0 = a0 | a1\n 85699: a3 = a3 << 0x10\n 85702: a5 = a5 << 0x18\n 85705: a3 = a3 | a5\n 85708: a0 = a0 | a3\n 85711: a1 = u8 [a2 + 0x1d]\n 85714: a3 = u8 [a2 + 0x1c]\n 85717: a5 = u8 [a2 + 0x1e]\n 85720: s1 = u8 [a2 + 0x1f]\n 85723: a1 = a1 << 0x8\n 85726: a1 = a1 | a3\n 85729: a5 = a5 << 0x10\n 85732: s1 = s1 << 0x18\n 85735: a5 = a5 | s1\n 85738: a1 = a1 | a5\n 85741: a1 = a1 << 0x20\n 85744: ra = a1 | a0\n 85747: a1 = u8 [a2 + 0x11]\n 85750: a3 = u8 [a2 + 0x10]\n 85753: a5 = u8 [a2 + 0x12]\n 85756: s1 = u8 [a2 + 0x13]\n 85759: a1 = a1 << 0x8\n 85762: a1 = a1 | a3\n 85765: a5 = a5 << 0x10\n 85768: s1 = s1 << 0x18\n 85771: a5 = a5 | s1\n 85774: a1 = a1 | a5\n 85777: a3 = u8 [a2 + 0x15]\n 85780: a5 = u8 [a2 + 0x14]\n 85783: s1 = u8 [a2 + 0x16]\n 85786: a4 = u8 [a2 + 0x17]\n 85789: a3 = a3 << 0x8\n 85792: a3 = a3 | a5\n 85795: s1 = s1 << 0x10\n 85798: a4 = a4 << 0x18\n 85801: a4 = a4 | s1\n 85804: a3 = a3 | a4\n 85807: a3 = a3 << 0x20\n 85810: a1 = a1 | a3\n 85813: a3 = u8 [a2 + 0x9]\n 85816: a4 = u8 [a2 + 0x8]\n 85819: a5 = u8 [a2 + 0xa]\n 85822: s1 = u8 [a2 + 0xb]\n 85825: a3 = a3 << 0x8\n 85828: a3 = a3 | a4\n 85831: a5 = a5 << 0x10\n 85834: s1 = s1 << 0x18\n 85837: a5 = a5 | s1\n 85840: t1 = a5 | a3\n 85843: a4 = u8 [a2 + 0xd]\n 85846: a5 = u8 [a2 + 0xc]\n 85849: s1 = u8 [a2 + 0xe]\n 85852: a3 = u8 [a2 + 0xf]\n 85855: a4 = a4 << 0x8\n 85858: a4 = a4 | a5\n 85861: s1 = s1 << 0x10\n 85864: a3 = a3 << 0x18\n 85867: a3 = a3 | s1\n 85870: a3 = a3 | a4\n 85873: a3 = a3 << 0x20\n 85876: a3 = a3 | t1\n 85879: a4 = u8 [a2 + 0x1]\n 85882: a5 = u8 [a2]\n 85884: s1 = u8 [a2 + 0x2]\n 85887: a0 = u8 [a2 + 0x3]\n 85890: a4 = a4 << 0x8\n 85893: a4 = a4 | a5\n 85896: s1 = s1 << 0x10\n 85899: a0 = a0 << 0x18\n 85902: a0 = a0 | s1\n 85905: a0 = a0 | a4\n 85908: a4 = u8 [a2 + 0x5]\n 85911: a5 = u8 [a2 + 0x4]\n 85914: s1 = u8 [a2 + 0x6]\n 85917: a2 = u8 [a2 + 0x7]\n 85920: a4 = a4 << 0x8\n 85923: a4 = a4 | a5\n 85926: s1 = s1 << 0x10\n 85929: a2 = a2 << 0x18\n 85932: a2 = a2 | s1\n 85935: a2 = a2 | a4\n 85938: a2 = a2 << 0x20\n 85941: a5 = a2 | a0\n 85944: i32 a2 = t0 + 0\n 85946: a0 = u64 [sp + 0x180]\n 85950: a2 = a2 + a0\n 85953: u8 [a2 + 0x10] = a1\n 85956: a0 = a3 >> 0x38\n 85959: u8 [a2 + 0xf] = a0\n 85962: a0 = a3 >> 0x30\n 85965: u8 [a2 + 0xe] = a0\n 85968: a0 = a3 >> 0x28\n 85971: u8 [a2 + 0xd] = a0\n 85974: a0 = a3 >> 0x20\n 85977: u8 [a2 + 0xc] = a0\n 85980: a0 = a3 >> 0x18\n 85983: u8 [a2 + 0xb] = a0\n 85986: a0 = a3 >> 0x10\n 85989: u8 [a2 + 0xa] = a0\n 85992: a0 = a3 >> 0x8\n 85995: u8 [a2 + 0x9] = a0\n 85998: u8 [a2 + 0x8] = a3\n 86001: a0 = a5 >> 0x38\n 86004: u8 [a2 + 0x7] = a0\n 86007: a0 = a5 >> 0x30\n 86010: u8 [a2 + 0x6] = a0\n 86013: a0 = a5 >> 0x28\n 86016: u8 [a2 + 0x5] = a0\n 86019: a0 = a5 >> 0x20\n 86022: u8 [a2 + 0x4] = a0\n 86025: a0 = a5 >> 0x18\n 86028: u8 [a2 + 0x3] = a0\n 86031: a0 = a5 >> 0x10\n 86034: u8 [a2 + 0x2] = a0\n 86037: a0 = a5 >> 0x8\n 86040: u8 [a2 + 0x1] = a0\n 86043: u8 [a2] = a5\n 86045: u8 [a2 + 0x18] = ra\n 86048: a0 = a1 >> 0x38\n 86051: u8 [a2 + 0x17] = a0\n 86054: a0 = a1 >> 0x30\n 86057: u8 [a2 + 0x16] = a0\n 86060: a0 = a1 >> 0x28\n 86063: u8 [a2 + 0x15] = a0\n 86066: a0 = a1 >> 0x20\n 86069: u8 [a2 + 0x14] = a0\n 86072: a0 = a1 >> 0x18\n 86075: u8 [a2 + 0x13] = a0\n 86078: a0 = a1 >> 0x10\n 86081: u8 [a2 + 0x12] = a0\n 86084: a1 = a1 >> 0x8\n 86087: u8 [a2 + 0x11] = a1\n 86090: a0 = ra >> 0x38\n 86093: u8 [a2 + 0x1f] = a0\n 86096: a0 = ra >> 0x30\n 86099: u8 [a2 + 0x1e] = a0\n 86102: a0 = ra >> 0x28\n 86105: u8 [a2 + 0x1d] = a0\n 86108: a0 = ra >> 0x20\n 86111: u8 [a2 + 0x1c] = a0\n 86114: a0 = ra >> 0x18\n 86117: u8 [a2 + 0x1b] = a0\n 86120: a0 = ra >> 0x10\n 86123: u8 [a2 + 0x1a] = a0\n 86126: a0 = ra >> 0x8\n 86129: ra = u64 [sp + 0x188]\n 86133: i32 a1 = ra + 0\n 86135: u8 [a2 + 0x19] = a0\n 86138: a0 = u64 [sp + 0x108]\n 86142: jump @1816 if a1 >=u a0\n      : @1815 (gas: 4)\n 86145: a1 = u64 [sp + 0x198]\n 86149: u32 [a1] = a0\n 86151: ra = a0\n 86153: fallthrough\n      : @1816 (gas: 110)\n 86154: t1 = u64 [sp + 0x100]\n 86158: a0 = u8 [t1 + 0x1]\n 86161: a1 = u8 [t1]\n 86163: a2 = u8 [t1 + 0x2]\n 86166: a3 = u8 [t1 + 0x3]\n 86169: a0 = a0 << 0x8\n 86172: a0 = a0 | a1\n 86175: a2 = a2 << 0x10\n 86178: a3 = a3 << 0x18\n 86181: a2 = a2 | a3\n 86184: a0 = a0 | a2\n 86187: a1 = u8 [t1 + 0x5]\n 86190: a2 = u8 [t1 + 0x4]\n 86193: a3 = u8 [t1 + 0x6]\n 86196: a4 = u8 [t1 + 0x7]\n 86199: a1 = a1 << 0x8\n 86202: a1 = a1 | a2\n 86205: a3 = a3 << 0x10\n 86208: a4 = a4 << 0x18\n 86211: a3 = a3 | a4\n 86214: a1 = a1 | a3\n 86217: a1 = a1 << 0x20\n 86220: t0 = a1 | a0\n 86223: a1 = u8 [t1 + 0x9]\n 86226: a2 = u8 [t1 + 0x8]\n 86229: a3 = u8 [t1 + 0xa]\n 86232: a4 = u8 [t1 + 0xb]\n 86235: a1 = a1 << 0x8\n 86238: a1 = a1 | a2\n 86241: a3 = a3 << 0x10\n 86244: a4 = a4 << 0x18\n 86247: a3 = a3 | a4\n 86250: a1 = a1 | a3\n 86253: a2 = u8 [t1 + 0xd]\n 86256: a3 = u8 [t1 + 0xc]\n 86259: a4 = u8 [t1 + 0xe]\n 86262: a5 = u8 [t1 + 0xf]\n 86265: a2 = a2 << 0x8\n 86268: a2 = a2 | a3\n 86271: a4 = a4 << 0x10\n 86274: a5 = a5 << 0x18\n 86277: a4 = a4 | a5\n 86280: a2 = a2 | a4\n 86283: a2 = a2 << 0x20\n 86286: a1 = a1 | a2\n 86289: a2 = u8 [t1 + 0x11]\n 86292: a3 = u8 [t1 + 0x10]\n 86295: a4 = u8 [t1 + 0x12]\n 86298: a5 = u8 [t1 + 0x13]\n 86301: a2 = a2 << 0x8\n 86304: a2 = a2 | a3\n 86307: a4 = a4 << 0x10\n 86310: a5 = a5 << 0x18\n 86313: a4 = a4 | a5\n 86316: a2 = a2 | a4\n 86319: a3 = u8 [t1 + 0x15]\n 86322: a4 = u8 [t1 + 0x14]\n 86325: a5 = u8 [t1 + 0x16]\n 86328: s1 = u8 [t1 + 0x17]\n 86331: a3 = a3 << 0x8\n 86334: a3 = a3 | a4\n 86337: a5 = a5 << 0x10\n 86340: s1 = s1 << 0x18\n 86343: a5 = a5 | s1\n 86346: a3 = a3 | a5\n 86349: a3 = a3 << 0x20\n 86352: a2 = a2 | a3\n 86355: a3 = u8 [t1 + 0x19]\n 86358: a4 = u8 [t1 + 0x18]\n 86361: a5 = u8 [t1 + 0x1a]\n 86364: s1 = u8 [t1 + 0x1b]\n 86367: a3 = a3 << 0x8\n 86370: a3 = a3 | a4\n 86373: a5 = a5 << 0x10\n 86376: s1 = s1 << 0x18\n 86379: a5 = a5 | s1\n 86382: a3 = a3 | a5\n 86385: a4 = u8 [t1 + 0x1d]\n 86388: a5 = u8 [t1 + 0x1c]\n 86391: s1 = u8 [t1 + 0x1e]\n 86394: a0 = u8 [t1 + 0x1f]\n 86397: a4 = a4 << 0x8\n 86400: a4 = a4 | a5\n 86403: s1 = s1 << 0x10\n 86406: a0 = a0 << 0x18\n 86409: a0 = a0 | s1\n 86412: a0 = a0 | a4\n 86415: a0 = a0 << 0x20\n 86418: a0 = a0 | a3\n 86421: a0 = reverse a0\n 86423: a2 = reverse a2\n 86425: a1 = reverse a1\n 86427: a3 = reverse t0\n 86429: a5 = u64 [sp + 0x168]\n 86433: a4 = a2 ^ a5\n 86436: a2 = a5 <u a2\n 86439: a5 = u64 [sp + 0x170]\n 86443: a5 = a5 <u a0\n 86446: a5 = a2 if a4 != 0\n 86449: a2 = u64 [sp + 0x178]\n 86453: a0 = a3 ^ a2\n 86456: a2 = a2 <u a3\n 86459: a4 = u64 [sp + 0x158]\n 86463: a3 = a4 <u a1\n 86466: a3 = a2 if a0 != 0\n 86469: a1 = a1 ^ a4\n 86472: a0 = a0 | a1\n 86475: a5 = a3 if a0 != 0\n 86478: i32 a0 = ra + 0\n 86480: jump @1818 if a5 != 0\n      : @1817 (gas: 1)\n 86483: jump @1887\n      : @1818 (gas: 3)\n 86486: t1 = u64 [sp + 0x180]\n 86490: a1 = u64 [sp + 0xf8]\n 86494: jump @1820 if a0 >=u a1\n      : @1819 (gas: 4)\n 86497: a0 = u64 [sp + 0x198]\n 86501: u32 [a0] = a1\n 86503: ra = a1\n 86505: fallthrough\n      : @1820 (gas: 108)\n 86506: a0 = u8 [t2 + 0x19]\n 86509: a1 = u8 [t2 + 0x18]\n 86512: a2 = u8 [t2 + 0x1a]\n 86515: a3 = u8 [t2 + 0x1b]\n 86518: a0 = a0 << 0x8\n 86521: a0 = a0 | a1\n 86524: a2 = a2 << 0x10\n 86527: a3 = a3 << 0x18\n 86530: a2 = a2 | a3\n 86533: a0 = a0 | a2\n 86536: a1 = u8 [t2 + 0x1d]\n 86539: a2 = u8 [t2 + 0x1c]\n 86542: a3 = u8 [t2 + 0x1e]\n 86545: a4 = u8 [t2 + 0x1f]\n 86548: a1 = a1 << 0x8\n 86551: a1 = a1 | a2\n 86554: a3 = a3 << 0x10\n 86557: a4 = a4 << 0x18\n 86560: a3 = a3 | a4\n 86563: a1 = a1 | a3\n 86566: a1 = a1 << 0x20\n 86569: t0 = a1 | a0\n 86572: a1 = u8 [t2 + 0x11]\n 86575: a2 = u8 [t2 + 0x10]\n 86578: a3 = u8 [t2 + 0x12]\n 86581: a4 = u8 [t2 + 0x13]\n 86584: a1 = a1 << 0x8\n 86587: a1 = a1 | a2\n 86590: a3 = a3 << 0x10\n 86593: a4 = a4 << 0x18\n 86596: a3 = a3 | a4\n 86599: a1 = a1 | a3\n 86602: a2 = u8 [t2 + 0x15]\n 86605: a3 = u8 [t2 + 0x14]\n 86608: a4 = u8 [t2 + 0x16]\n 86611: a5 = u8 [t2 + 0x17]\n 86614: a2 = a2 << 0x8\n 86617: a2 = a2 | a3\n 86620: a4 = a4 << 0x10\n 86623: a5 = a5 << 0x18\n 86626: a4 = a4 | a5\n 86629: a2 = a2 | a4\n 86632: a2 = a2 << 0x20\n 86635: a1 = a1 | a2\n 86638: a2 = u8 [t2 + 0x9]\n 86641: a3 = u8 [t2 + 0x8]\n 86644: a4 = u8 [t2 + 0xa]\n 86647: a5 = u8 [t2 + 0xb]\n 86650: a2 = a2 << 0x8\n 86653: a2 = a2 | a3\n 86656: a4 = a4 << 0x10\n 86659: a5 = a5 << 0x18\n 86662: a4 = a4 | a5\n 86665: a2 = a2 | a4\n 86668: a3 = u8 [t2 + 0xd]\n 86671: a4 = u8 [t2 + 0xc]\n 86674: a5 = u8 [t2 + 0xe]\n 86677: s1 = u8 [t2 + 0xf]\n 86680: a3 = a3 << 0x8\n 86683: a3 = a3 | a4\n 86686: a5 = a5 << 0x10\n 86689: s1 = s1 << 0x18\n 86692: a5 = a5 | s1\n 86695: a3 = a3 | a5\n 86698: a3 = a3 << 0x20\n 86701: a2 = a2 | a3\n 86704: a3 = u8 [t2 + 0x1]\n 86707: a4 = u8 [t2]\n 86709: a5 = u8 [t2 + 0x2]\n 86712: s1 = u8 [t2 + 0x3]\n 86715: a3 = a3 << 0x8\n 86718: a3 = a3 | a4\n 86721: a5 = a5 << 0x10\n 86724: s1 = s1 << 0x18\n 86727: a5 = a5 | s1\n 86730: a3 = a3 | a5\n 86733: a4 = u8 [t2 + 0x5]\n 86736: a5 = u8 [t2 + 0x4]\n 86739: s1 = u8 [t2 + 0x6]\n 86742: a0 = u8 [t2 + 0x7]\n 86745: a4 = a4 << 0x8\n 86748: a4 = a4 | a5\n 86751: s1 = s1 << 0x10\n 86754: a0 = a0 << 0x18\n 86757: a0 = a0 | s1\n 86760: a0 = a0 | a4\n 86763: a0 = a0 << 0x20\n 86766: a0 = a0 | a3\n 86769: a3 = reverse a0\n 86771: a2 = reverse a2\n 86773: a1 = reverse a1\n 86775: a4 = reverse t0\n 86777: a0 = a4 + 0x20\n 86780: a4 = a0 <u a4\n 86783: a5 = a1 + a4\n 86786: a1 = a5 <u a1\n 86789: a1 = a4 if a4 == 0\n 86792: a1 = a1 + a2\n 86795: a2 = a1 <u a2\n 86798: a2 = a2 + a3\n 86801: a3 = a0 | a1\n 86804: a2 = a2 | a5\n 86807: a3 = a3 | a2\n 86810: a3 = a3 >> 0x20\n 86813: a1 = a1 | a2\n 86816: a1 = a1 << 0x20\n 86819: a1 = a1 | a3\n 86822: jump @1885 if a1 != 0\n      : @1821 (gas: 2)\n 86826: i32 a1 = a0 >> 0x10\n 86829: jump @1885 if a1 != 0\n      : @1822 (gas: 4)\n 86833: a1 = a0 + 0x3f\n 86836: a2 = u64 [sp + 0x190]\n 86840: a1 = a1 & a2\n 86843: jump @1885 if a1 >u 65536\n      : @1823 (gas: 2)\n 86850: i32 a2 = ra + 0\n 86852: jump @1825 if a2 >=u a1\n      : @1824 (gas: 4)\n 86855: a2 = u64 [sp + 0x198]\n 86859: u32 [a2] = a1\n 86861: ra = a1\n 86863: fallthrough\n      : @1825 (gas: 102)\n 86864: i32 a0 = a0 + 0\n 86866: a0 = a0 + t1\n 86869: a1 = u8 [a0 + 0x11]\n 86872: a2 = u8 [a0 + 0x10]\n 86875: a3 = u8 [a0 + 0x12]\n 86878: a4 = u8 [a0 + 0x13]\n 86881: a1 = a1 << 0x8\n 86884: a1 = a1 | a2\n 86887: a3 = a3 << 0x10\n 86890: a4 = a4 << 0x18\n 86893: a3 = a3 | a4\n 86896: a1 = a1 | a3\n 86899: a2 = u8 [a0 + 0x15]\n 86902: a3 = u8 [a0 + 0x14]\n 86905: a4 = u8 [a0 + 0x16]\n 86908: a5 = u8 [a0 + 0x17]\n 86911: a2 = a2 << 0x8\n 86914: a2 = a2 | a3\n 86917: a4 = a4 << 0x10\n 86920: a5 = a5 << 0x18\n 86923: a4 = a4 | a5\n 86926: a2 = a2 | a4\n 86929: a2 = a2 << 0x20\n 86932: t0 = a2 | a1\n 86935: a2 = u8 [a0 + 0x1]\n 86938: a3 = u8 [a0]\n 86940: a4 = u8 [a0 + 0x2]\n 86943: a5 = u8 [a0 + 0x3]\n 86946: a2 = a2 << 0x8\n 86949: a2 = a2 | a3\n 86952: a4 = a4 << 0x10\n 86955: a5 = a5 << 0x18\n 86958: a4 = a4 | a5\n 86961: a2 = a2 | a4\n 86964: a3 = u8 [a0 + 0x5]\n 86967: a4 = u8 [a0 + 0x4]\n 86970: a5 = u8 [a0 + 0x6]\n 86973: s1 = u8 [a0 + 0x7]\n 86976: a3 = a3 << 0x8\n 86979: a3 = a3 | a4\n 86982: a5 = a5 << 0x10\n 86985: s1 = s1 << 0x18\n 86988: a5 = a5 | s1\n 86991: a3 = a3 | a5\n 86994: a3 = a3 << 0x20\n 86997: a2 = a2 | a3\n 87000: a3 = u8 [a0 + 0x19]\n 87003: a4 = u8 [a0 + 0x18]\n 87006: a5 = u8 [a0 + 0x1a]\n 87009: s1 = u8 [a0 + 0x1b]\n 87012: a3 = a3 << 0x8\n 87015: a3 = a3 | a4\n 87018: a5 = a5 << 0x10\n 87021: s1 = s1 << 0x18\n 87024: a5 = a5 | s1\n 87027: a3 = a3 | a5\n 87030: a4 = u8 [a0 + 0x1d]\n 87033: a5 = u8 [a0 + 0x1c]\n 87036: s1 = u8 [a0 + 0x1e]\n 87039: a1 = u8 [a0 + 0x1f]\n 87042: a4 = a4 << 0x8\n 87045: a4 = a4 | a5\n 87048: s1 = s1 << 0x10\n 87051: a1 = a1 << 0x18\n 87054: a1 = a1 | s1\n 87057: a1 = a1 | a4\n 87060: a1 = a1 << 0x20\n 87063: a3 = a3 | a1\n 87066: a1 = u8 [a0 + 0x9]\n 87069: a4 = u8 [a0 + 0x8]\n 87072: a5 = u8 [a0 + 0xa]\n 87075: s1 = u8 [a0 + 0xb]\n 87078: a1 = a1 << 0x8\n 87081: a1 = a1 | a4\n 87084: a5 = a5 << 0x10\n 87087: s1 = s1 << 0x18\n 87090: a5 = a5 | s1\n 87093: a1 = a1 | a5\n 87096: a4 = u8 [a0 + 0xd]\n 87099: a5 = u8 [a0 + 0xc]\n 87102: s1 = u8 [a0 + 0xe]\n 87105: a0 = u8 [a0 + 0xf]\n 87108: a4 = a4 << 0x8\n 87111: a4 = a4 | a5\n 87114: s1 = s1 << 0x10\n 87117: a0 = a0 << 0x18\n 87120: a0 = a0 | s1\n 87123: a0 = a0 | a4\n 87126: a0 = a0 << 0x20\n 87129: a0 = a0 | a1\n 87132: a1 = reverse a0\n 87134: a4 = reverse a3\n 87136: a2 = reverse a2\n 87138: a3 = reverse t0\n 87140: a2 = a2 | a3\n 87143: a3 = a4 | a1\n 87146: a3 = a3 | a2\n 87149: a3 = a3 >> 0x20\n 87152: a1 = a1 | a2\n 87155: a1 = a1 << 0x20\n 87158: a1 = a1 | a3\n 87161: jump @1885 if a1 != 0\n      : @1826 (gas: 2)\n 87165: i32 a1 = a4 >> 0x10\n 87168: jump @1885 if a1 != 0\n      : @1827 (gas: 4)\n 87172: a1 = a4 + 0x3f\n 87175: a0 = u64 [sp + 0x190]\n 87179: a1 = a1 & a0\n 87182: jump @1885 if a1 >u 65536\n      : @1828 (gas: 2)\n 87189: i32 a2 = ra + 0\n 87191: jump @1830 if a2 >=u a1\n      : @1829 (gas: 4)\n 87194: a0 = u64 [sp + 0x198]\n 87198: u32 [a0] = a1\n 87200: ra = a1\n 87202: fallthrough\n      : @1830 (gas: 4)\n 87203: u64 [sp + 0xd0] = a4\n 87207: i32 a1 = ra + 0\n 87209: a0 = u64 [sp + 0x160]\n 87213: jump @1832 if a1 >=u a0\n      : @1831 (gas: 4)\n 87216: ra = u64 [sp + 0x160]\n 87220: a0 = u64 [sp + 0x198]\n 87224: u32 [a0] = ra\n 87226: fallthrough\n      : @1832 (gas: 122)\n 87227: u64 [sp + 0x188] = ra\n 87231: a0 = u64 [sp + 0x110]\n 87235: a1 = a0 + 0x4\n 87238: u64 [sp + 0xe0] = a1\n 87242: a1 = a1 <u a0\n 87245: a0 = u64 [sp + 0x140]\n 87249: t0 = a0 + a1\n 87252: a4 = t0 <u a0\n 87255: a4 = a1 if a1 == 0\n 87258: a5 = u64 [sp + 0x128]\n 87262: a1 = u8 [a5 + 0x1]\n 87265: a3 = u8 [a5]\n 87267: s1 = u8 [a5 + 0x2]\n 87270: a0 = u8 [a5 + 0x3]\n 87273: a1 = a1 << 0x8\n 87276: a1 = a1 | a3\n 87279: s1 = s1 << 0x10\n 87282: a0 = a0 << 0x18\n 87285: a0 = a0 | s1\n 87288: a0 = a0 | a1\n 87291: a1 = u8 [a5 + 0x5]\n 87294: a3 = u8 [a5 + 0x4]\n 87297: s1 = u8 [a5 + 0x6]\n 87300: a2 = u8 [a5 + 0x7]\n 87303: a1 = a1 << 0x8\n 87306: a1 = a1 | a3\n 87309: s1 = s1 << 0x10\n 87312: a2 = a2 << 0x18\n 87315: a2 = a2 | s1\n 87318: a1 = a1 | a2\n 87321: a1 = a1 << 0x20\n 87324: a0 = a0 | a1\n 87327: u64 [sp + 0xd8] = a0\n 87331: a0 = u8 [a5 + 0x9]\n 87334: a1 = u8 [a5 + 0x8]\n 87337: a2 = u8 [a5 + 0xa]\n 87340: a3 = u8 [a5 + 0xb]\n 87343: a0 = a0 << 0x8\n 87346: a0 = a0 | a1\n 87349: a2 = a2 << 0x10\n 87352: a3 = a3 << 0x18\n 87355: a2 = a2 | a3\n 87358: a0 = a0 | a2\n 87361: a1 = u8 [a5 + 0xd]\n 87364: a2 = u8 [a5 + 0xc]\n 87367: a3 = u8 [a5 + 0xe]\n 87370: s1 = u8 [a5 + 0xf]\n 87373: a1 = a1 << 0x8\n 87376: a1 = a1 | a2\n 87379: a3 = a3 << 0x10\n 87382: s1 = s1 << 0x18\n 87385: a3 = a3 | s1\n 87388: a1 = a1 | a3\n 87391: a1 = a1 << 0x20\n 87394: a3 = a1 | a0\n 87397: a0 = u8 [a5 + 0x11]\n 87400: a1 = u8 [a5 + 0x10]\n 87403: a2 = u8 [a5 + 0x12]\n 87406: s1 = u8 [a5 + 0x13]\n 87409: a0 = a0 << 0x8\n 87412: a0 = a0 | a1\n 87415: a2 = a2 << 0x10\n 87418: s1 = s1 << 0x18\n 87421: a2 = a2 | s1\n 87424: a0 = a0 | a2\n 87427: a1 = u8 [a5 + 0x15]\n 87430: a2 = u8 [a5 + 0x14]\n 87433: s1 = u8 [a5 + 0x16]\n 87436: ra = u8 [a5 + 0x17]\n 87439: a1 = a1 << 0x8\n 87442: a1 = a1 | a2\n 87445: s1 = s1 << 0x10\n 87448: ra = ra << 0x18\n 87451: a2 = ra | s1\n 87454: a1 = a1 | a2\n 87457: a1 = a1 << 0x20\n 87460: ra = a1 | a0\n 87463: a0 = u8 [a5 + 0x19]\n 87466: a1 = u8 [a5 + 0x18]\n 87469: a2 = u8 [a5 + 0x1a]\n 87472: s1 = u8 [a5 + 0x1b]\n 87475: a0 = a0 << 0x8\n 87478: a0 = a0 | a1\n 87481: a2 = a2 << 0x10\n 87484: s1 = s1 << 0x18\n 87487: a2 = a2 | s1\n 87490: a0 = a0 | a2\n 87493: a1 = u8 [a5 + 0x1d]\n 87496: a2 = u8 [a5 + 0x1c]\n 87499: s1 = u8 [a5 + 0x1e]\n 87502: t1 = u8 [a5 + 0x1f]\n 87505: a1 = a1 << 0x8\n 87508: a1 = a1 | a2\n 87511: s1 = s1 << 0x10\n 87514: t1 = t1 << 0x18\n 87517: s1 = t1 | s1\n 87520: t1 = u64 [sp + 0xe0]\n 87524: a5 = u64 [sp + 0x150]\n 87528: a2 = a5 + a4\n 87531: s1 = s1 | a1\n 87534: a1 = a2 <u a5\n 87537: a4 = u64 [sp + 0x148]\n 87541: a1 = a1 + a4\n 87544: s1 = s1 << 0x20\n 87547: a0 = a0 | s1\n 87550: a0 = reverse a0\n 87552: s1 = reverse ra\n 87554: a3 = reverse a3\n 87556: a4 = u64 [sp + 0xd8]\n 87560: a4 = reverse a4\n 87562: a5 = s1 ^ t0\n 87565: s1 = t0 <u s1\n 87568: a0 = t1 <u a0\n 87571: a0 = s1 if a5 != 0\n 87574: a5 = a4 ^ a1\n 87577: a4 = a1 <u a4\n 87580: s1 = a2 <u a3\n 87583: s1 = a4 if a5 != 0\n 87586: a3 = a3 ^ a2\n 87589: a3 = a3 | a5\n 87592: a0 = s1 if a3 != 0\n 87595: jump @1886 if a0 == 0\n      : @1833 (gas: 37)\n 87599: a0 = a2 >> 0x3b\n 87602: a1 = a1 << 0x5\n 87605: a0 = a0 | a1\n 87608: a1 = t0 >> 0x3b\n 87611: a2 = a2 << 0x5\n 87614: a1 = a1 | a2\n 87617: a2 = t1 >> 0x3b\n 87620: t0 = t0 << 0x5\n 87623: a2 = t0 | a2\n 87626: a3 = t1 << 0x5\n 87629: t0 = u64 [sp + 0x138]\n 87633: t0 = t0 + a3\n 87636: a3 = t0 <u a3\n 87639: a5 = u64 [sp + 0x130]\n 87643: a5 = a5 + a3\n 87646: a5 = a5 + a2\n 87649: s1 = a5 ^ a2\n 87652: a2 = a5 <u a2\n 87655: a2 = a3 if s1 == 0\n 87658: a3 = u64 [sp + 0x120]\n 87662: a3 = a3 + a1\n 87665: a2 = a2 + a3\n 87668: s1 = a2 <u a3\n 87671: a1 = a3 <u a1\n 87674: a3 = u64 [sp + 0x118]\n 87678: a0 = a0 + a3\n 87681: a0 = a0 + a1\n 87684: a0 = a0 + s1\n 87687: a1 = t0 | a2\n 87690: a0 = a0 | a5\n 87693: a1 = a1 | a0\n 87696: a1 = a1 >> 0x20\n 87699: a0 = a0 | a2\n 87702: a0 = a0 << 0x20\n 87705: a0 = a0 | a1\n 87708: a4 = u64 [sp + 0x180]\n 87712: jump @1885 if a0 != 0\n      : @1834 (gas: 3)\n 87716: i32 a0 = t0 >> 0x10\n 87719: a2 = u64 [sp + 0x198]\n 87723: jump @1885 if a0 != 0\n      : @1835 (gas: 4)\n 87727: a0 = t0 + 0x3f\n 87730: a1 = u64 [sp + 0x190]\n 87734: a1 = a1 & a0\n 87737: jump @1885 if a1 >u 65536\n      : @1836 (gas: 3)\n 87744: a3 = u64 [sp + 0x188]\n 87748: i32 a0 = a3 + 0\n 87750: jump @1838 if a0 >=u a1\n      : @1837 (gas: 3)\n 87753: u32 [a2] = a1\n 87755: a3 = a1\n 87757: fallthrough\n      : @1838 (gas: 158)\n 87758: u64 [sp + 0x188] = a3\n 87762: a2 = i32 [sp + 0xd0]\n 87766: a2 = a2 + a4\n 87769: a0 = u8 [a2 + 0x19]\n 87772: a1 = u8 [a2 + 0x18]\n 87775: a3 = u8 [a2 + 0x1a]\n 87778: a5 = u8 [a2 + 0x1b]\n 87781: a0 = a0 << 0x8\n 87784: a0 = a0 | a1\n 87787: a3 = a3 << 0x10\n 87790: a5 = a5 << 0x18\n 87793: a3 = a3 | a5\n 87796: a0 = a0 | a3\n 87799: a1 = u8 [a2 + 0x1d]\n 87802: a3 = u8 [a2 + 0x1c]\n 87805: a5 = u8 [a2 + 0x1e]\n 87808: s1 = u8 [a2 + 0x1f]\n 87811: a1 = a1 << 0x8\n 87814: a1 = a1 | a3\n 87817: a5 = a5 << 0x10\n 87820: s1 = s1 << 0x18\n 87823: a5 = a5 | s1\n 87826: a1 = a1 | a5\n 87829: a1 = a1 << 0x20\n 87832: ra = a1 | a0\n 87835: a1 = u8 [a2 + 0x11]\n 87838: a3 = u8 [a2 + 0x10]\n 87841: a5 = u8 [a2 + 0x12]\n 87844: s1 = u8 [a2 + 0x13]\n 87847: a1 = a1 << 0x8\n 87850: a1 = a1 | a3\n 87853: a5 = a5 << 0x10\n 87856: s1 = s1 << 0x18\n 87859: a5 = a5 | s1\n 87862: a1 = a1 | a5\n 87865: a3 = u8 [a2 + 0x15]\n 87868: a5 = u8 [a2 + 0x14]\n 87871: s1 = u8 [a2 + 0x16]\n 87874: a4 = u8 [a2 + 0x17]\n 87877: a3 = a3 << 0x8\n 87880: a3 = a3 | a5\n 87883: s1 = s1 << 0x10\n 87886: a4 = a4 << 0x18\n 87889: a4 = a4 | s1\n 87892: a3 = a3 | a4\n 87895: a3 = a3 << 0x20\n 87898: a1 = a1 | a3\n 87901: a3 = u8 [a2 + 0x9]\n 87904: a4 = u8 [a2 + 0x8]\n 87907: a5 = u8 [a2 + 0xa]\n 87910: s1 = u8 [a2 + 0xb]\n 87913: a3 = a3 << 0x8\n 87916: a3 = a3 | a4\n 87919: a5 = a5 << 0x10\n 87922: s1 = s1 << 0x18\n 87925: a5 = a5 | s1\n 87928: t1 = a5 | a3\n 87931: a4 = u8 [a2 + 0xd]\n 87934: a5 = u8 [a2 + 0xc]\n 87937: s1 = u8 [a2 + 0xe]\n 87940: a3 = u8 [a2 + 0xf]\n 87943: a4 = a4 << 0x8\n 87946: a4 = a4 | a5\n 87949: s1 = s1 << 0x10\n 87952: a3 = a3 << 0x18\n 87955: a3 = a3 | s1\n 87958: a3 = a3 | a4\n 87961: a3 = a3 << 0x20\n 87964: a3 = a3 | t1\n 87967: a4 = u8 [a2 + 0x1]\n 87970: a5 = u8 [a2]\n 87972: s1 = u8 [a2 + 0x2]\n 87975: a0 = u8 [a2 + 0x3]\n 87978: a4 = a4 << 0x8\n 87981: a4 = a4 | a5\n 87984: s1 = s1 << 0x10\n 87987: a0 = a0 << 0x18\n 87990: a0 = a0 | s1\n 87993: a0 = a0 | a4\n 87996: a4 = u8 [a2 + 0x5]\n 87999: a5 = u8 [a2 + 0x4]\n 88002: s1 = u8 [a2 + 0x6]\n 88005: a2 = u8 [a2 + 0x7]\n 88008: a4 = a4 << 0x8\n 88011: a4 = a4 | a5\n 88014: s1 = s1 << 0x10\n 88017: a2 = a2 << 0x18\n 88020: a2 = a2 | s1\n 88023: a2 = a2 | a4\n 88026: a2 = a2 << 0x20\n 88029: a5 = a2 | a0\n 88032: i32 a2 = t0 + 0\n 88034: a0 = u64 [sp + 0x180]\n 88038: a2 = a2 + a0\n 88041: u8 [a2 + 0x10] = a1\n 88044: a0 = a3 >> 0x38\n 88047: u8 [a2 + 0xf] = a0\n 88050: a0 = a3 >> 0x30\n 88053: u8 [a2 + 0xe] = a0\n 88056: a0 = a3 >> 0x28\n 88059: u8 [a2 + 0xd] = a0\n 88062: a0 = a3 >> 0x20\n 88065: u8 [a2 + 0xc] = a0\n 88068: a0 = a3 >> 0x18\n 88071: u8 [a2 + 0xb] = a0\n 88074: a0 = a3 >> 0x10\n 88077: u8 [a2 + 0xa] = a0\n 88080: a0 = a3 >> 0x8\n 88083: u8 [a2 + 0x9] = a0\n 88086: u8 [a2 + 0x8] = a3\n 88089: a0 = a5 >> 0x38\n 88092: u8 [a2 + 0x7] = a0\n 88095: a0 = a5 >> 0x30\n 88098: u8 [a2 + 0x6] = a0\n 88101: a0 = a5 >> 0x28\n 88104: u8 [a2 + 0x5] = a0\n 88107: a0 = a5 >> 0x20\n 88110: u8 [a2 + 0x4] = a0\n 88113: a0 = a5 >> 0x18\n 88116: u8 [a2 + 0x3] = a0\n 88119: a0 = a5 >> 0x10\n 88122: u8 [a2 + 0x2] = a0\n 88125: a0 = a5 >> 0x8\n 88128: u8 [a2 + 0x1] = a0\n 88131: u8 [a2] = a5\n 88133: u8 [a2 + 0x18] = ra\n 88136: a0 = a1 >> 0x38\n 88139: u8 [a2 + 0x17] = a0\n 88142: a0 = a1 >> 0x30\n 88145: u8 [a2 + 0x16] = a0\n 88148: a0 = a1 >> 0x28\n 88151: u8 [a2 + 0x15] = a0\n 88154: a0 = a1 >> 0x20\n 88157: u8 [a2 + 0x14] = a0\n 88160: a0 = a1 >> 0x18\n 88163: u8 [a2 + 0x13] = a0\n 88166: a0 = a1 >> 0x10\n 88169: u8 [a2 + 0x12] = a0\n 88172: a1 = a1 >> 0x8\n 88175: u8 [a2 + 0x11] = a1\n 88178: a0 = ra >> 0x38\n 88181: u8 [a2 + 0x1f] = a0\n 88184: a0 = ra >> 0x30\n 88187: u8 [a2 + 0x1e] = a0\n 88190: a0 = ra >> 0x28\n 88193: u8 [a2 + 0x1d] = a0\n 88196: a0 = ra >> 0x20\n 88199: u8 [a2 + 0x1c] = a0\n 88202: a0 = ra >> 0x18\n 88205: u8 [a2 + 0x1b] = a0\n 88208: a0 = ra >> 0x10\n 88211: u8 [a2 + 0x1a] = a0\n 88214: a0 = ra >> 0x8\n 88217: ra = u64 [sp + 0x188]\n 88221: i32 a1 = ra + 0\n 88223: u8 [a2 + 0x19] = a0\n 88226: a0 = u64 [sp + 0x108]\n 88230: jump @1840 if a1 >=u a0\n      : @1839 (gas: 4)\n 88233: a1 = u64 [sp + 0x198]\n 88237: u32 [a1] = a0\n 88239: ra = a0\n 88241: fallthrough\n      : @1840 (gas: 110)\n 88242: t1 = u64 [sp + 0x100]\n 88246: a0 = u8 [t1 + 0x1]\n 88249: a1 = u8 [t1]\n 88251: a2 = u8 [t1 + 0x2]\n 88254: a3 = u8 [t1 + 0x3]\n 88257: a0 = a0 << 0x8\n 88260: a0 = a0 | a1\n 88263: a2 = a2 << 0x10\n 88266: a3 = a3 << 0x18\n 88269: a2 = a2 | a3\n 88272: a0 = a0 | a2\n 88275: a1 = u8 [t1 + 0x5]\n 88278: a2 = u8 [t1 + 0x4]\n 88281: a3 = u8 [t1 + 0x6]\n 88284: a4 = u8 [t1 + 0x7]\n 88287: a1 = a1 << 0x8\n 88290: a1 = a1 | a2\n 88293: a3 = a3 << 0x10\n 88296: a4 = a4 << 0x18\n 88299: a3 = a3 | a4\n 88302: a1 = a1 | a3\n 88305: a1 = a1 << 0x20\n 88308: t0 = a1 | a0\n 88311: a1 = u8 [t1 + 0x9]\n 88314: a2 = u8 [t1 + 0x8]\n 88317: a3 = u8 [t1 + 0xa]\n 88320: a4 = u8 [t1 + 0xb]\n 88323: a1 = a1 << 0x8\n 88326: a1 = a1 | a2\n 88329: a3 = a3 << 0x10\n 88332: a4 = a4 << 0x18\n 88335: a3 = a3 | a4\n 88338: a1 = a1 | a3\n 88341: a2 = u8 [t1 + 0xd]\n 88344: a3 = u8 [t1 + 0xc]\n 88347: a4 = u8 [t1 + 0xe]\n 88350: a5 = u8 [t1 + 0xf]\n 88353: a2 = a2 << 0x8\n 88356: a2 = a2 | a3\n 88359: a4 = a4 << 0x10\n 88362: a5 = a5 << 0x18\n 88365: a4 = a4 | a5\n 88368: a2 = a2 | a4\n 88371: a2 = a2 << 0x20\n 88374: a1 = a1 | a2\n 88377: a2 = u8 [t1 + 0x11]\n 88380: a3 = u8 [t1 + 0x10]\n 88383: a4 = u8 [t1 + 0x12]\n 88386: a5 = u8 [t1 + 0x13]\n 88389: a2 = a2 << 0x8\n 88392: a2 = a2 | a3\n 88395: a4 = a4 << 0x10\n 88398: a5 = a5 << 0x18\n 88401: a4 = a4 | a5\n 88404: a2 = a2 | a4\n 88407: a3 = u8 [t1 + 0x15]\n 88410: a4 = u8 [t1 + 0x14]\n 88413: a5 = u8 [t1 + 0x16]\n 88416: s1 = u8 [t1 + 0x17]\n 88419: a3 = a3 << 0x8\n 88422: a3 = a3 | a4\n 88425: a5 = a5 << 0x10\n 88428: s1 = s1 << 0x18\n 88431: a5 = a5 | s1\n 88434: a3 = a3 | a5\n 88437: a3 = a3 << 0x20\n 88440: a2 = a2 | a3\n 88443: a3 = u8 [t1 + 0x19]\n 88446: a4 = u8 [t1 + 0x18]\n 88449: a5 = u8 [t1 + 0x1a]\n 88452: s1 = u8 [t1 + 0x1b]\n 88455: a3 = a3 << 0x8\n 88458: a3 = a3 | a4\n 88461: a5 = a5 << 0x10\n 88464: s1 = s1 << 0x18\n 88467: a5 = a5 | s1\n 88470: a3 = a3 | a5\n 88473: a4 = u8 [t1 + 0x1d]\n 88476: a5 = u8 [t1 + 0x1c]\n 88479: s1 = u8 [t1 + 0x1e]\n 88482: a0 = u8 [t1 + 0x1f]\n 88485: a4 = a4 << 0x8\n 88488: a4 = a4 | a5\n 88491: s1 = s1 << 0x10\n 88494: a0 = a0 << 0x18\n 88497: a0 = a0 | s1\n 88500: a0 = a0 | a4\n 88503: a0 = a0 << 0x20\n 88506: a0 = a0 | a3\n 88509: a0 = reverse a0\n 88511: a2 = reverse a2\n 88513: a1 = reverse a1\n 88515: a3 = reverse t0\n 88517: a5 = u64 [sp + 0x168]\n 88521: a4 = a2 ^ a5\n 88524: a2 = a5 <u a2\n 88527: a5 = u64 [sp + 0x170]\n 88531: a5 = a5 <u a0\n 88534: a5 = a2 if a4 != 0\n 88537: a2 = u64 [sp + 0x178]\n 88541: a0 = a3 ^ a2\n 88544: a2 = a2 <u a3\n 88547: a4 = u64 [sp + 0x158]\n 88551: a3 = a4 <u a1\n 88554: a3 = a2 if a0 != 0\n 88557: a1 = a1 ^ a4\n 88560: a0 = a0 | a1\n 88563: a5 = a3 if a0 != 0\n 88566: i32 a0 = ra + 0\n 88568: jump @1887 if a5 == 0\n      : @1841 (gas: 3)\n 88572: t1 = u64 [sp + 0x180]\n 88576: a1 = u64 [sp + 0xf8]\n 88580: jump @1843 if a0 >=u a1\n      : @1842 (gas: 4)\n 88583: a0 = u64 [sp + 0x198]\n 88587: u32 [a0] = a1\n 88589: ra = a1\n 88591: fallthrough\n      : @1843 (gas: 108)\n 88592: a0 = u8 [t2 + 0x19]\n 88595: a1 = u8 [t2 + 0x18]\n 88598: a2 = u8 [t2 + 0x1a]\n 88601: a3 = u8 [t2 + 0x1b]\n 88604: a0 = a0 << 0x8\n 88607: a0 = a0 | a1\n 88610: a2 = a2 << 0x10\n 88613: a3 = a3 << 0x18\n 88616: a2 = a2 | a3\n 88619: a0 = a0 | a2\n 88622: a1 = u8 [t2 + 0x1d]\n 88625: a2 = u8 [t2 + 0x1c]\n 88628: a3 = u8 [t2 + 0x1e]\n 88631: a4 = u8 [t2 + 0x1f]\n 88634: a1 = a1 << 0x8\n 88637: a1 = a1 | a2\n 88640: a3 = a3 << 0x10\n 88643: a4 = a4 << 0x18\n 88646: a3 = a3 | a4\n 88649: a1 = a1 | a3\n 88652: a1 = a1 << 0x20\n 88655: t0 = a1 | a0\n 88658: a1 = u8 [t2 + 0x11]\n 88661: a2 = u8 [t2 + 0x10]\n 88664: a3 = u8 [t2 + 0x12]\n 88667: a4 = u8 [t2 + 0x13]\n 88670: a1 = a1 << 0x8\n 88673: a1 = a1 | a2\n 88676: a3 = a3 << 0x10\n 88679: a4 = a4 << 0x18\n 88682: a3 = a3 | a4\n 88685: a1 = a1 | a3\n 88688: a2 = u8 [t2 + 0x15]\n 88691: a3 = u8 [t2 + 0x14]\n 88694: a4 = u8 [t2 + 0x16]\n 88697: a5 = u8 [t2 + 0x17]\n 88700: a2 = a2 << 0x8\n 88703: a2 = a2 | a3\n 88706: a4 = a4 << 0x10\n 88709: a5 = a5 << 0x18\n 88712: a4 = a4 | a5\n 88715: a2 = a2 | a4\n 88718: a2 = a2 << 0x20\n 88721: a1 = a1 | a2\n 88724: a2 = u8 [t2 + 0x9]\n 88727: a3 = u8 [t2 + 0x8]\n 88730: a4 = u8 [t2 + 0xa]\n 88733: a5 = u8 [t2 + 0xb]\n 88736: a2 = a2 << 0x8\n 88739: a2 = a2 | a3\n 88742: a4 = a4 << 0x10\n 88745: a5 = a5 << 0x18\n 88748: a4 = a4 | a5\n 88751: a2 = a2 | a4\n 88754: a3 = u8 [t2 + 0xd]\n 88757: a4 = u8 [t2 + 0xc]\n 88760: a5 = u8 [t2 + 0xe]\n 88763: s1 = u8 [t2 + 0xf]\n 88766: a3 = a3 << 0x8\n 88769: a3 = a3 | a4\n 88772: a5 = a5 << 0x10\n 88775: s1 = s1 << 0x18\n 88778: a5 = a5 | s1\n 88781: a3 = a3 | a5\n 88784: a3 = a3 << 0x20\n 88787: a2 = a2 | a3\n 88790: a3 = u8 [t2 + 0x1]\n 88793: a4 = u8 [t2]\n 88795: a5 = u8 [t2 + 0x2]\n 88798: s1 = u8 [t2 + 0x3]\n 88801: a3 = a3 << 0x8\n 88804: a3 = a3 | a4\n 88807: a5 = a5 << 0x10\n 88810: s1 = s1 << 0x18\n 88813: a5 = a5 | s1\n 88816: a3 = a3 | a5\n 88819: a4 = u8 [t2 + 0x5]\n 88822: a5 = u8 [t2 + 0x4]\n 88825: s1 = u8 [t2 + 0x6]\n 88828: a0 = u8 [t2 + 0x7]\n 88831: a4 = a4 << 0x8\n 88834: a4 = a4 | a5\n 88837: s1 = s1 << 0x10\n 88840: a0 = a0 << 0x18\n 88843: a0 = a0 | s1\n 88846: a0 = a0 | a4\n 88849: a0 = a0 << 0x20\n 88852: a0 = a0 | a3\n 88855: a3 = reverse a0\n 88857: a2 = reverse a2\n 88859: a1 = reverse a1\n 88861: a4 = reverse t0\n 88863: a0 = a4 + 0x20\n 88866: a4 = a0 <u a4\n 88869: a5 = a1 + a4\n 88872: a1 = a5 <u a1\n 88875: a1 = a4 if a4 == 0\n 88878: a1 = a1 + a2\n 88881: a2 = a1 <u a2\n 88884: a2 = a2 + a3\n 88887: a3 = a0 | a1\n 88890: a2 = a2 | a5\n 88893: a3 = a3 | a2\n 88896: a3 = a3 >> 0x20\n 88899: a1 = a1 | a2\n 88902: a1 = a1 << 0x20\n 88905: a1 = a1 | a3\n 88908: jump @1885 if a1 != 0\n      : @1844 (gas: 2)\n 88912: i32 a1 = a0 >> 0x10\n 88915: jump @1885 if a1 != 0\n      : @1845 (gas: 4)\n 88919: a1 = a0 + 0x3f\n 88922: a2 = u64 [sp + 0x190]\n 88926: a1 = a1 & a2\n 88929: jump @1885 if a1 >u 65536\n      : @1846 (gas: 2)\n 88936: i32 a2 = ra + 0\n 88938: jump @1848 if a2 >=u a1\n      : @1847 (gas: 4)\n 88941: a2 = u64 [sp + 0x198]\n 88945: u32 [a2] = a1\n 88947: ra = a1\n 88949: fallthrough\n      : @1848 (gas: 110)\n 88950: i32 a0 = a0 + 0\n 88952: a0 = a0 + t1\n 88955: a1 = u8 [a0 + 0x19]\n 88958: a2 = u8 [a0 + 0x18]\n 88961: a3 = u8 [a0 + 0x1a]\n 88964: a4 = u8 [a0 + 0x1b]\n 88967: a1 = a1 << 0x8\n 88970: a1 = a1 | a2\n 88973: a3 = a3 << 0x10\n 88976: a4 = a4 << 0x18\n 88979: a3 = a3 | a4\n 88982: a1 = a1 | a3\n 88985: a2 = u8 [a0 + 0x1d]\n 88988: a3 = u8 [a0 + 0x1c]\n 88991: a4 = u8 [a0 + 0x1e]\n 88994: a5 = u8 [a0 + 0x1f]\n 88997: a2 = a2 << 0x8\n 89000: a2 = a2 | a3\n 89003: a4 = a4 << 0x10\n 89006: a5 = a5 << 0x18\n 89009: a4 = a4 | a5\n 89012: a2 = a2 | a4\n 89015: a2 = a2 << 0x20\n 89018: t0 = a2 | a1\n 89021: a2 = u8 [a0 + 0x11]\n 89024: a3 = u8 [a0 + 0x10]\n 89027: a4 = u8 [a0 + 0x12]\n 89030: a5 = u8 [a0 + 0x13]\n 89033: a2 = a2 << 0x8\n 89036: a2 = a2 | a3\n 89039: a4 = a4 << 0x10\n 89042: a5 = a5 << 0x18\n 89045: a4 = a4 | a5\n 89048: a2 = a2 | a4\n 89051: a3 = u8 [a0 + 0x15]\n 89054: a4 = u8 [a0 + 0x14]\n 89057: a5 = u8 [a0 + 0x16]\n 89060: s1 = u8 [a0 + 0x17]\n 89063: a3 = a3 << 0x8\n 89066: a3 = a3 | a4\n 89069: a5 = a5 << 0x10\n 89072: s1 = s1 << 0x18\n 89075: a5 = a5 | s1\n 89078: a3 = a3 | a5\n 89081: a3 = a3 << 0x20\n 89084: a2 = a2 | a3\n 89087: a3 = u8 [a0 + 0x9]\n 89090: a4 = u8 [a0 + 0x8]\n 89093: a5 = u8 [a0 + 0xa]\n 89096: s1 = u8 [a0 + 0xb]\n 89099: a3 = a3 << 0x8\n 89102: a3 = a3 | a4\n 89105: a5 = a5 << 0x10\n 89108: s1 = s1 << 0x18\n 89111: a5 = a5 | s1\n 89114: a3 = a3 | a5\n 89117: a4 = u8 [a0 + 0xd]\n 89120: a5 = u8 [a0 + 0xc]\n 89123: s1 = u8 [a0 + 0xe]\n 89126: a1 = u8 [a0 + 0xf]\n 89129: a4 = a4 << 0x8\n 89132: a4 = a4 | a5\n 89135: s1 = s1 << 0x10\n 89138: a1 = a1 << 0x18\n 89141: a1 = a1 | s1\n 89144: a1 = a1 | a4\n 89147: a1 = a1 << 0x20\n 89150: a3 = a3 | a1\n 89153: a1 = u8 [a0 + 0x1]\n 89156: a4 = u8 [a0]\n 89158: a5 = u8 [a0 + 0x2]\n 89161: s1 = u8 [a0 + 0x3]\n 89164: a1 = a1 << 0x8\n 89167: a1 = a1 | a4\n 89170: a5 = a5 << 0x10\n 89173: s1 = s1 << 0x18\n 89176: a5 = a5 | s1\n 89179: a1 = a1 | a5\n 89182: a4 = u8 [a0 + 0x5]\n 89185: a5 = u8 [a0 + 0x4]\n 89188: s1 = u8 [a0 + 0x6]\n 89191: a0 = u8 [a0 + 0x7]\n 89194: a4 = a4 << 0x8\n 89197: a4 = a4 | a5\n 89200: s1 = s1 << 0x10\n 89203: a0 = a0 << 0x18\n 89206: a0 = a0 | s1\n 89209: a0 = a0 | a4\n 89212: a0 = a0 << 0x20\n 89215: a0 = a0 | a1\n 89218: a0 = reverse a0\n 89220: a1 = reverse a3\n 89222: a2 = reverse a2\n 89224: a3 = reverse t0\n 89226: a5 = a3 + 0x20\n 89229: a3 = a5 <u a3\n 89232: a4 = a2 + a3\n 89235: a2 = a4 <u a2\n 89238: a2 = a3 if a3 == 0\n 89241: a2 = a2 + a1\n 89244: a1 = a2 <u a1\n 89247: a0 = a0 + a1\n 89250: a1 = a5 | a2\n 89253: a0 = a0 | a4\n 89256: a1 = a1 | a0\n 89259: a1 = a1 >> 0x20\n 89262: a0 = a0 | a2\n 89265: a0 = a0 << 0x20\n 89268: a0 = a0 | a1\n 89271: jump @1885 if a0 != 0\n      : @1849 (gas: 4)\n 89275: i32 a0 = a5 >> 0x10\n 89278: a2 = u64 [sp + 0x150]\n 89282: a4 = u64 [sp + 0x148]\n 89286: jump @1885 if a0 != 0\n      : @1850 (gas: 4)\n 89290: a0 = a5 + 0x3f\n 89293: a1 = u64 [sp + 0x190]\n 89297: a0 = a0 & a1\n 89300: jump @1885 if a0 >u 65536\n      : @1851 (gas: 2)\n 89307: i32 a1 = ra + 0\n 89309: jump @1853 if a1 >=u a0\n      : @1852 (gas: 4)\n 89312: a1 = u64 [sp + 0x198]\n 89316: u32 [a1] = a0\n 89318: ra = a0\n 89320: fallthrough\n      : @1853 (gas: 4)\n 89321: u64 [sp + 0xf8] = a5\n 89325: i32 a0 = ra + 0\n 89327: a1 = u64 [sp + 0x160]\n 89331: jump @1855 if a0 >=u a1\n      : @1854 (gas: 4)\n 89334: ra = u64 [sp + 0x160]\n 89338: a0 = u64 [sp + 0x198]\n 89342: u32 [a0] = ra\n 89344: fallthrough\n      : @1855 (gas: 122)\n 89345: u64 [sp + 0x188] = ra\n 89349: a0 = u64 [sp + 0x110]\n 89353: ra = a0 + 0x5\n 89356: a1 = ra <u a0\n 89359: a0 = u64 [sp + 0x140]\n 89363: t2 = a0 + a1\n 89366: a3 = t2 <u a0\n 89369: a3 = a1 if a1 == 0\n 89372: a3 = a3 + a2\n 89375: a2 = a3 <u a2\n 89378: a2 = a2 + a4\n 89381: u64 [sp + 0x150] = a2\n 89385: a4 = u64 [sp + 0x128]\n 89389: a1 = u8 [a4 + 0x1]\n 89392: s1 = u8 [a4]\n 89394: a5 = u8 [a4 + 0x2]\n 89397: a2 = u8 [a4 + 0x3]\n 89400: a1 = a1 << 0x8\n 89403: a1 = a1 | s1\n 89406: a5 = a5 << 0x10\n 89409: a2 = a2 << 0x18\n 89412: a2 = a2 | a5\n 89415: a1 = a1 | a2\n 89418: a2 = u8 [a4 + 0x5]\n 89421: a5 = u8 [a4 + 0x4]\n 89424: s1 = u8 [a4 + 0x6]\n 89427: a0 = u8 [a4 + 0x7]\n 89430: a2 = a2 << 0x8\n 89433: a2 = a2 | a5\n 89436: s1 = s1 << 0x10\n 89439: a0 = a0 << 0x18\n 89442: a0 = a0 | s1\n 89445: a0 = a0 | a2\n 89448: a0 = a0 << 0x20\n 89451: a0 = a0 | a1\n 89454: u64 [sp + 0x148] = a0\n 89458: a0 = u8 [a4 + 0x9]\n 89461: a1 = u8 [a4 + 0x8]\n 89464: a2 = u8 [a4 + 0xa]\n 89467: a5 = u8 [a4 + 0xb]\n 89470: a0 = a0 << 0x8\n 89473: a0 = a0 | a1\n 89476: a2 = a2 << 0x10\n 89479: a5 = a5 << 0x18\n 89482: a2 = a2 | a5\n 89485: a0 = a0 | a2\n 89488: a1 = u8 [a4 + 0xd]\n 89491: a2 = u8 [a4 + 0xc]\n 89494: a5 = u8 [a4 + 0xe]\n 89497: s1 = u8 [a4 + 0xf]\n 89500: a1 = a1 << 0x8\n 89503: a1 = a1 | a2\n 89506: a5 = a5 << 0x10\n 89509: s1 = s1 << 0x18\n 89512: a5 = a5 | s1\n 89515: a1 = a1 | a5\n 89518: a1 = a1 << 0x20\n 89521: a0 = a0 | a1\n 89524: u64 [sp + 0x140] = a0\n 89528: a0 = u8 [a4 + 0x11]\n 89531: a1 = u8 [a4 + 0x10]\n 89534: a2 = u8 [a4 + 0x12]\n 89537: a5 = u8 [a4 + 0x13]\n 89540: a0 = a0 << 0x8\n 89543: a0 = a0 | a1\n 89546: a2 = a2 << 0x10\n 89549: a5 = a5 << 0x18\n 89552: a2 = a2 | a5\n 89555: a0 = a0 | a2\n 89558: a1 = u8 [a4 + 0x15]\n 89561: a2 = u8 [a4 + 0x14]\n 89564: a5 = u8 [a4 + 0x16]\n 89567: t0 = u8 [a4 + 0x17]\n 89570: a1 = a1 << 0x8\n 89573: a1 = a1 | a2\n 89576: a5 = a5 << 0x10\n 89579: t0 = t0 << 0x18\n 89582: a2 = t0 | a5\n 89585: a1 = a1 | a2\n 89588: a1 = a1 << 0x20\n 89591: t0 = a1 | a0\n 89594: a0 = u8 [a4 + 0x19]\n 89597: a2 = u8 [a4 + 0x18]\n 89600: a5 = u8 [a4 + 0x1a]\n 89603: a1 = u8 [a4 + 0x1b]\n 89606: a0 = a0 << 0x8\n 89609: a0 = a0 | a2\n 89612: a5 = a5 << 0x10\n 89615: a1 = a1 << 0x18\n 89618: a1 = a1 | a5\n 89621: a0 = a0 | a1\n 89624: a1 = u8 [a4 + 0x1d]\n 89627: a2 = u8 [a4 + 0x1c]\n 89630: a5 = u8 [a4 + 0x1e]\n 89633: t1 = u8 [a4 + 0x1f]\n 89636: a1 = a1 << 0x8\n 89639: a1 = a1 | a2\n 89642: a5 = a5 << 0x10\n 89645: t1 = t1 << 0x18\n 89648: a2 = t1 | a5\n 89651: a1 = a1 | a2\n 89654: a1 = a1 << 0x20\n 89657: a0 = a0 | a1\n 89660: a0 = reverse a0\n 89662: a1 = reverse t0\n 89664: s1 = u64 [sp + 0x150]\n 89668: a2 = u64 [sp + 0x140]\n 89672: a2 = reverse a2\n 89674: a4 = u64 [sp + 0x148]\n 89678: a5 = reverse a4\n 89680: a4 = a1 ^ t2\n 89683: a1 = t2 <u a1\n 89686: a0 = ra <u a0\n 89689: a0 = a1 if a4 != 0\n 89692: a1 = a5 ^ s1\n 89695: a4 = s1 <u a5\n 89698: a5 = a3 <u a2\n 89701: a5 = a4 if a1 != 0\n 89704: a2 = a2 ^ a3\n 89707: a1 = a1 | a2\n 89710: a0 = a5 if a1 != 0\n 89713: jump @1886 if a0 == 0\n      : @1856 (gas: 36)\n 89717: a0 = a3 >> 0x3b\n 89720: a1 = s1 << 0x5\n 89723: a1 = a1 | a0\n 89726: a0 = t2 >> 0x3b\n 89729: a3 = a3 << 0x5\n 89732: a3 = a3 | a0\n 89735: a0 = ra >> 0x3b\n 89738: t2 = t2 << 0x5\n 89741: a2 = t2 | a0\n 89744: ra = ra << 0x5\n 89747: a0 = u64 [sp + 0x138]\n 89751: s1 = ra + a0\n 89754: a4 = s1 <u ra\n 89757: a5 = u64 [sp + 0x130]\n 89761: a5 = a5 + a4\n 89764: a5 = a5 + a2\n 89767: a0 = a5 ^ a2\n 89770: a2 = a5 <u a2\n 89773: a2 = a4 if a0 == 0\n 89776: a4 = u64 [sp + 0x120]\n 89780: a4 = a4 + a3\n 89783: a2 = a2 + a4\n 89786: t0 = a2 <u a4\n 89789: a3 = a4 <u a3\n 89792: a0 = u64 [sp + 0x118]\n 89796: a1 = a1 + a0\n 89799: a1 = a1 + a3\n 89802: a1 = a1 + t0\n 89805: a3 = s1 | a2\n 89808: a1 = a1 | a5\n 89811: a3 = a3 | a1\n 89814: a3 = a3 >> 0x20\n 89817: a1 = a1 | a2\n 89820: a1 = a1 << 0x20\n 89823: a1 = a1 | a3\n 89826: jump @1885 if a1 != 0\n      : @1857 (gas: 5)\n 89830: i32 a1 = s1 >> 0x10\n 89833: t1 = u64 [sp + 0x180]\n 89837: a0 = u64 [sp + 0x198]\n 89841: t0 = u64 [sp + 0x188]\n 89845: jump @1885 if a1 != 0\n      : @1858 (gas: 4)\n 89849: a1 = s1 + 0x3f\n 89852: a2 = u64 [sp + 0x190]\n 89856: a1 = a1 & a2\n 89859: jump @1885 if a1 >u 65536\n      : @1859 (gas: 3)\n 89866: u64 [sp + 0x150] = s1\n 89870: i32 a2 = t0 + 0\n 89872: jump @1861 if a2 <u a1\n      : @1860 (gas: 1)\n 89875: jump @1676\n      : @1861 (gas: 3)\n 89878: u32 [a0] = a1\n 89880: t0 = a1\n 89882: jump @1676\n      : @1862 (gas: 7)\n 89885: u64 [sp + 0x1a0] = a5\n 89889: u64 [sp + 0x1a8] = t2\n 89893: u64 [sp + 0x1b0] = s1\n 89897: a0 = sp + 0x1c0\n 89901: a1 = sp + 0x1a0\n 89905: u64 [sp + 0x1b8] = ra\n 89909: ra = 164, jump @253\n      : @1863 [@dyn 82] (gas: 11)\n 89916: a5 = u64 [sp + 0x198]\n 89920: a0 = u64 [sp + 0x1d8]\n 89924: u64 [sp + 0xa0] = a0\n 89928: a0 = u64 [sp + 0x1d0]\n 89932: u64 [sp + 0xa8] = a0\n 89936: a0 = u64 [sp + 0x1c8]\n 89940: u64 [sp + 0xb8] = a0\n 89944: a0 = u64 [sp + 0x1c0]\n 89948: u64 [sp + 0xb0] = a0\n 89952: t0 = i32 [a5]\n 89954: fallthrough\n      : @1864 (gas: 3)\n 89955: i32 a0 = t0 + 0\n 89957: t1 = u64 [sp + 0x180]\n 89961: jump @1866 if a0 >u 95\n      : @1865 (gas: 3)\n 89965: t0 = 0x60\n 89968: u32 [a5] = t0\n 89970: fallthrough\n      : @1866 (gas: 14)\n 89971: u64 [sp + 0x188] = t0\n 89975: a0 = u64 [t1 + 0x50]\n 89978: a1 = u64 [t1 + 0x58]\n 89981: a2 = u64 [t1 + 0x40]\n 89984: a3 = u64 [t1 + 0x48]\n 89987: a0 = reverse a0\n 89989: s1 = reverse a1\n 89991: t0 = reverse a2\n 89993: a1 = reverse a3\n 89995: a3 = a1 | t0\n 89998: a4 = s1 <u 0xffffffffffffffe0\n 90001: a4 = 0 if a0 != 0\n 90003: a4 = 0 if a3 != 0\n 90005: jump @1897 if a4 == 0\n      : @1867 (gas: 24)\n 90009: t2 = s1 + 0x20\n 90012: a4 = t2 <u s1\n 90015: a3 = a0 + a4\n 90018: a2 = a3 <u a0\n 90021: a2 = a4 if a4 == 0\n 90024: a2 = a2 + a1\n 90027: a4 = a2 <u a1\n 90030: a4 = a4 + t0\n 90033: ra = reverse a4\n 90035: a2 = reverse a2\n 90037: a4 = reverse a3\n 90039: a3 = reverse t2\n 90041: u64 [t1 + 0x58] = a3\n 90044: u64 [t1 + 0x50] = a4\n 90047: u64 [t1 + 0x48] = a2\n 90050: a2 = s1 | a1\n 90053: a0 = a0 | t0\n 90056: a2 = a2 | a0\n 90059: a2 = a2 >> 0x20\n 90062: a0 = a0 | a1\n 90065: a0 = a0 << 0x20\n 90068: a0 = a0 | a2\n 90071: u64 [t1 + 0x40] = ra\n 90074: jump @1885 if a0 != 0\n      : @1868 (gas: 3)\n 90078: i32 a0 = s1 >> 0x10\n 90081: a3 = u64 [sp + 0x188]\n 90085: jump @1885 if a0 != 0\n      : @1869 (gas: 4)\n 90089: a0 = s1 + 0x3f\n 90092: a1 = u64 [sp + 0x190]\n 90096: a1 = a1 & a0\n 90099: jump @1885 if a1 >u 65536\n      : @1870 (gas: 3)\n 90106: a2 = i32 [0x20040]\n 90111: i32 a0 = a3 + 0\n 90113: jump @1872 if a0 >=u a1\n      : @1871 (gas: 2)\n 90116: u32 [a5] = a1\n 90118: fallthrough\n      : @1872 (gas: 23)\n 90119: u64 [sp + 0x190] = a1\n 90123: i32 s1 = s1 + 0\n 90125: u64 [sp + 0x168] = s1\n 90129: i32 a0 = t1 + s1\n 90132: a1 = 0x20\n 90135: ecalli 1 // 'call_data_copy'\n 90137: a0 = u64 [sp + 0xb0]\n 90141: a1 = a0 + 0x20\n 90144: u64 [sp + 0x170] = a1\n 90148: a0 = a1 <u a0\n 90151: a1 = u64 [sp + 0xb8]\n 90155: a2 = a1 + a0\n 90158: u64 [sp + 0x188] = a2\n 90162: a1 = a2 <u a1\n 90165: a1 = a0 if a0 == 0\n 90168: a0 = u64 [sp + 0xa8]\n 90172: s1 = a0 + a1\n 90175: a0 = s1 <u a0\n 90178: a1 = u64 [sp + 0xa0]\n 90182: a0 = a0 + a1\n 90185: u64 [sp + 0x178] = a0\n 90189: ecalli 4 // 'ref_time_left'\n 90191: fallthrough\n      : @1873 (gas: 19)\n 90192: ra = u64 [sp + 0x170]\n 90196: t1 = 0x30050\n 90201: u64 [0x30058] = 0\n 90206: u64 [0x30050] = 0\n 90211: u32 [0x30060] = 0x8000000\n 90220: u64 [sp + 600] = 0\n 90224: u64 [sp + 592] = 0\n 90228: u64 [sp + 584] = 0\n 90232: a1 = ra | s1\n 90235: a0 = u64 [sp + 0x188]\n 90239: a2 = u64 [sp + 0x178]\n 90243: a2 = a2 | a0\n 90246: a1 = a1 | a2\n 90249: a1 = a1 >> 0x20\n 90252: a2 = a2 | s1\n 90255: a2 = a2 << 0x20\n 90258: a1 = a1 | a2\n 90261: u64 [sp + 576] = 0\n 90265: jump @1885 if a1 != 0\n      : @1874 (gas: 22)\n 90269: t0 = u64 [sp + 0x20]\n 90272: a1 = t0 >> 0x3b\n 90275: a0 = u64 [sp + 0x30]\n 90278: a2 = a0 << 0x5\n 90281: a2 = a2 | a1\n 90284: a1 = a0 >> 0x3b\n 90287: a0 = u64 [sp + 0x28]\n 90290: a3 = a0 << 0x5\n 90293: a3 = a3 | a1\n 90296: a1 = a0 >> 0x3b\n 90299: a4 = u64 [sp + 0x18]\n 90302: a4 = a4 << 0x5\n 90305: a4 = a4 | a1\n 90308: t0 = t0 << 0x5\n 90311: a5 = t0 | a3\n 90314: a2 = a2 | a4\n 90317: a5 = a5 | a2\n 90320: a5 = a5 >> 0x20\n 90323: a2 = a2 | a3\n 90326: a2 = a2 << 0x20\n 90329: a2 = a2 | a5\n 90332: jump @1885 if a2 != 0\n      : @1875 (gas: 5)\n 90336: i32 a2 = ra >> 0x10\n 90339: a1 = u64 [sp + 0x180]\n 90343: a0 = u64 [sp + 0x198]\n 90347: t2 = u64 [sp + 0x190]\n 90351: jump @1885 if a2 != 0\n      : @1876 (gas: 4)\n 90355: a2 = t0 | 0x1f\n 90358: i32 a3 = a2 + ra\n 90361: a3 = a3 & 0xffffffffffffffe0\n 90364: jump @1885 if a3 >u 65536\n      : @1877 (gas: 6)\n 90371: a5 = i32 [a0]\n 90373: s1 = u64 [sp + 0x168]\n 90377: s1 = s1 + a1\n 90380: a4 = maxu(a3, a5)\n 90383: a2 = a1 + ra\n 90386: jump @1879 if a5 <u a3\n      : @1878 (gas: 1)\n 90389: jump @1880 if a4 >=u t2\n      : @1879 (gas: 3)\n 90392: a3 = maxu(t2, a4)\n 90395: u32 [a0] = a3\n 90397: fallthrough\n      : @1880 (gas: 28)\n 90398: u32 [sp + 608] = 0x20\n 90403: u64 [sp + 664] = 0\n 90407: u64 [sp + 656] = 0\n 90411: u64 [sp + 648] = 0\n 90415: u64 [sp + 640] = 0\n 90419: a0 = t1 << 0x20\n 90422: a0 = a0 >> 0x20\n 90425: a3 = 0x1800000000\n 90435: a0 = a0 | a3\n 90438: a3 = sp + 0x240\n 90442: a3 = a3 << 0x20\n 90445: a3 = a3 >> 0x20\n 90448: a4 = sp + 0x280\n 90452: a4 = a4 << 0x20\n 90455: a3 = a3 | a4\n 90458: a2 = a2 << 0x20\n 90461: a2 = a2 >> 0x20\n 90464: a1 = t0 << 0x20\n 90467: a4 = a1 | a2\n 90470: a1 = s1 << 0x20\n 90473: a1 = a1 >> 0x20\n 90476: a2 = sp + 0x260\n 90480: a2 = a2 << 0x20\n 90483: a5 = a2 | a1\n 90486: a1 = 0xffffffffffffffff\n 90489: a2 = 0xffffffffffffffff\n 90492: ecalli 0 // 'call'\n 90493: fallthrough\n      : @1881 (gas: 1)\n 90494: jump @1885 if a0 != 0\n      : @1882 (gas: 4)\n 90498: a1 = u64 [sp + 0x198]\n 90502: a0 = i32 [a1]\n 90504: a2 = u64 [sp + 0x190]\n 90508: jump @1884 if a0 >=u a2\n      : @1883 (gas: 2)\n 90511: u32 [a1] = a2\n 90513: fallthrough\n      : @1884 (gas: 101)\n 90514: a0 = u8 [s1 + 0x11]\n 90517: a1 = u8 [s1 + 0x10]\n 90520: a2 = u8 [s1 + 0x12]\n 90523: a3 = u8 [s1 + 0x13]\n 90526: a0 = a0 << 0x8\n 90529: a0 = a0 | a1\n 90532: a2 = a2 << 0x10\n 90535: a3 = a3 << 0x18\n 90538: a2 = a2 | a3\n 90541: t0 = a2 | a0\n 90544: a1 = u8 [s1 + 0x1]\n 90547: a2 = u8 [s1]\n 90549: a3 = u8 [s1 + 0x2]\n 90552: a4 = u8 [s1 + 0x3]\n 90555: a1 = a1 << 0x8\n 90558: a1 = a1 | a2\n 90561: a3 = a3 << 0x10\n 90564: a4 = a4 << 0x18\n 90567: a3 = a3 | a4\n 90570: t1 = a3 | a1\n 90573: a2 = u8 [s1 + 0x15]\n 90576: a3 = u8 [s1 + 0x14]\n 90579: a4 = u8 [s1 + 0x16]\n 90582: a5 = u8 [s1 + 0x17]\n 90585: a2 = a2 << 0x8\n 90588: a2 = a2 | a3\n 90591: a4 = a4 << 0x10\n 90594: a5 = a5 << 0x18\n 90597: a4 = a4 | a5\n 90600: t2 = a4 | a2\n 90603: a3 = u8 [s1 + 0x5]\n 90606: a4 = u8 [s1 + 0x4]\n 90609: a5 = u8 [s1 + 0x6]\n 90612: a0 = u8 [s1 + 0x7]\n 90615: a3 = a3 << 0x8\n 90618: a3 = a3 | a4\n 90621: a5 = a5 << 0x10\n 90624: a0 = a0 << 0x18\n 90627: a0 = a0 | a5\n 90630: ra = a0 | a3\n 90633: a0 = u8 [s1 + 0x19]\n 90636: a4 = u8 [s1 + 0x18]\n 90639: a5 = u8 [s1 + 0x1a]\n 90642: a1 = u8 [s1 + 0x1b]\n 90645: a0 = a0 << 0x8\n 90648: a0 = a0 | a4\n 90651: a5 = a5 << 0x10\n 90654: a1 = a1 << 0x18\n 90657: a1 = a1 | a5\n 90660: a4 = a1 | a0\n 90663: a0 = u8 [s1 + 0x9]\n 90666: a1 = u8 [s1 + 0x8]\n 90669: a5 = u8 [s1 + 0xa]\n 90672: a2 = u8 [s1 + 0xb]\n 90675: a0 = a0 << 0x8\n 90678: a0 = a0 | a1\n 90681: a5 = a5 << 0x10\n 90684: a2 = a2 << 0x18\n 90687: a2 = a2 | a5\n 90690: a5 = a2 | a0\n 90693: a0 = u8 [s1 + 0x1d]\n 90696: a1 = u8 [s1 + 0x1c]\n 90699: a2 = u8 [s1 + 0x1e]\n 90702: a3 = u8 [s1 + 0x1f]\n 90705: a0 = a0 << 0x8\n 90708: a0 = a0 | a1\n 90711: a2 = a2 << 0x10\n 90714: a3 = a3 << 0x18\n 90717: a2 = a2 | a3\n 90720: a0 = a0 | a2\n 90723: a1 = u8 [s1 + 0xd]\n 90726: a2 = u8 [s1 + 0xc]\n 90729: a3 = u8 [s1 + 0xe]\n 90732: s1 = u8 [s1 + 0xf]\n 90735: a1 = a1 << 0x8\n 90738: a1 = a1 | a2\n 90741: a3 = a3 << 0x10\n 90744: s1 = s1 << 0x18\n 90747: a3 = a3 | s1\n 90750: a1 = a1 | a3\n 90753: a0 = a0 | a1\n 90756: a0 = a0 << 0x20\n 90759: a4 = a4 | a5\n 90762: a0 = a0 | a4\n 90765: a1 = ra | t2\n 90768: a1 = a1 << 0x20\n 90771: a2 = t1 | t0\n 90774: a1 = a1 | a2\n 90777: a0 = a0 | a1\n 90780: a0 = a0 >u 0\n 90782: a1 = u64 [sp + 0x10]\n 90785: u64 [a1 + 24] = 0\n 90788: u64 [a1 + 16] = 0\n 90791: u64 [a1 + 8] = 0\n 90794: u64 [a1] = a0\n 90796: sp = s0 + 0xfffffffffffffd40\n 90800: ra = u64 [sp + 0x2b8]\n 90804: s0 = u64 [sp + 0x2b0]\n 90808: s1 = u64 [sp + 0x2a8]\n 90812: sp = sp + 0x2c0\n 90816: ret\n      : @1885 (gas: 1)\n 90818: trap\n      : @1886 (gas: 6)\n 90819: a2 = u64 [sp + 0x180]\n 90823: u64 [a2 + 24] = 0\n 90826: u64 [a2 + 16] = 0\n 90829: u64 [a2 + 0] = 0x717b484e\n 90835: a0 = i32 [sp + 0x188]\n 90839: jump @1889\n      : @1887 (gas: 5)\n 90841: a2 = u64 [sp + 0x180]\n 90845: u64 [a2 + 24] = 0\n 90848: u64 [a2 + 16] = 0\n 90851: u64 [a2 + 0] = 0x717b484e\n 90857: jump @1889\n      : @1888 (gas: 6)\n 90859: a2 = u64 [sp + 0x180]\n 90863: u64 [a2 + 24] = 0\n 90866: u64 [a2 + 16] = 0\n 90869: u64 [a2 + 0] = 0x717b484e\n 90875: i32 a0 = t2 + 0\n 90877: fallthrough\n      : @1889 (gas: 2)\n 90878: u64 [a2 + 8] = 0\n 90881: jump @1891 if a0 >u 63\n      : @1890 (gas: 4)\n 90885: a1 = u64 [sp + 0x198]\n 90889: u32 [a1 + 0] = 0x40\n 90892: a0 = 0x32000000\n 90898: jump @1892\n      : @1891 (gas: 2)\n 90900: a0 = 0x32000000\n 90906: fallthrough\n      : @1892 (gas: 14)\n 90907: a1 = u64 [sp + 0x180]\n 90911: u32 [a1 + 0x20] = a0\n 90914: u32 [a1 + 28] = 0\n 90917: u32 [a1 + 24] = 0\n 90920: u32 [a1 + 20] = 0\n 90923: u32 [a1 + 16] = 0\n 90926: u32 [a1 + 12] = 0\n 90929: u32 [a1 + 8] = 0\n 90932: u32 [a1 + 4] = 0\n 90935: i32 a1 = a1 + 0\n 90937: a0 = 0x1\n 90940: a2 = 0x24\n 90943: ecalli 5 // 'seal_return'\n 90945: fallthrough\n      : @1893 (gas: 7)\n 90946: a1 = u64 [sp + 0x180]\n 90950: u64 [a1 + 24] = 0\n 90953: u64 [a1 + 16] = 0\n 90956: u64 [a1 + 0] = 0x717b484e\n 90962: i32 t0 = t2 + 0\n 90964: u64 [a1 + 8] = 0\n 90967: jump @1890 if t0 <=u 63\n      : @1894 (gas: 1)\n 90971: jump @1891\n      : @1895 (gas: 6)\n 90973: a2 = u64 [sp + 0x180]\n 90977: u64 [a2 + 24] = 0\n 90980: u64 [a2 + 16] = 0\n 90983: u64 [a2 + 0] = 0x717b484e\n 90989: u64 [a2 + 8] = 0\n 90992: jump @1890 if a1 <=u 63\n      : @1896 (gas: 1)\n 90996: jump @1891\n      : @1897 (gas: 17)\n 90998: u64 [t1 + 16] = 0\n 91001: u64 [t1 + 24] = 0\n 91004: u64 [t1 + 8] = 0\n 91007: u64 [t1 + 0] = 0x717b484e\n 91013: u32 [t1 + 32] = 0x41000000\n 91020: u32 [t1 + 20] = 0\n 91023: u32 [t1 + 24] = 0\n 91026: u32 [t1 + 28] = 0\n 91029: u32 [t1 + 8] = 0\n 91032: u32 [t1 + 12] = 0\n 91035: u32 [t1 + 16] = 0\n 91038: u32 [t1 + 4] = 0\n 91041: i32 a1 = t1 + 0\n 91043: a0 = 0x1\n 91046: a2 = 0x24\n 91049: ecalli 5 // 'seal_return'\n 91051: fallthrough\n      : @1898 (gas: 7)\n 91052: a1 = u64 [sp + 0x180]\n 91056: u64 [a1 + 24] = 0\n 91059: u64 [a1 + 16] = 0\n 91062: u64 [a1 + 0] = 0x717b484e\n 91068: u64 [a1 + 8] = 0\n 91071: a1 = u64 [sp + 0x168]\n 91075: jump @1900 if a1 >u 63\n      : @1899 (gas: 4)\n 91079: a1 = u64 [sp + 0x198]\n 91083: u32 [a1 + 0] = 0x40\n 91086: a0 = 0x11000000\n 91092: jump @1892\n      : @1900 (gas: 2)\n 91095: a0 = 0x11000000\n 91101: jump @1892\n      : @1901 [export #0: 'call'] (gas: 2)\n 91104: a0 = 0\n 91106: ra = 166, jump @6\n      : @1902 [@dyn 83] [export #1: 'deploy'] (gas: 2)\n 91113: a0 = 0x1\n 91116: ra = 168, jump @6\n      : @1903 [@dyn 84] (gas: 1)\n 91123: trap\n","bytecode":{"object":""},"deployedBytecode":{"object":""},"methodIdentifiers":{"verifyProof(uint256[2],uint256[2][2],uint256[2],uint256[3])":"11479fea"}},"irOptimized":"/// @use-src 3:\"contracts/Verifier.sol\"\nobject \"Verifier_1734\" {\n    code {\n        {\n            /// @src 3:7121:11829  \"contract Verifier {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Verifier_1734_deployed\")\n            codecopy(_1, dataoffset(\"Verifier_1734_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 3:\"contracts/Verifier.sol\"\n    object \"Verifier_1734_deployed\" {\n        code {\n            {\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                mstore(64, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    if eq(0x11479fea, shr(224, calldataload(0)))\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 352) { revert(0, 0) }\n                        let value0 := abi_decode_array_uint256(calldatasize())\n                        if iszero(slt(99, calldatasize())) { revert(0, 0) }\n                        let size := /** @src -1:-1:-1 */ 0\n                        /// @src 3:7121:11829  \"contract Verifier {...\"\n                        let _1 := /** @src -1:-1:-1 */ size\n                        /// @src 3:7121:11829  \"contract Verifier {...\"\n                        _1 := /** @src -1:-1:-1 */ size\n                        /// @src 3:7121:11829  \"contract Verifier {...\"\n                        size := 64\n                        let dst := allocate_memory(size)\n                        let array := dst\n                        if gt(196, calldatasize()) { revert(0, 0) }\n                        let src := 68\n                        for { } lt(src, 196) { src := add(src, size) }\n                        {\n                            mstore(dst, abi_decode_t_array_t_uint256_memory_ptr(src, calldatasize()))\n                            dst := add(dst, 0x20)\n                        }\n                        let value2 := abi_decode_array_uint256_memory_ptr(calldatasize())\n                        let ret := fun_verifyProof(value0, array, value2, abi_decode_t_array_t_uint256(calldatasize()))\n                        let memPos := mload(size)\n                        return(memPos, sub(abi_encode_bool(memPos, ret), memPos))\n                    }\n                }\n                revert(0, 0)\n            }\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function allocate_memory_3370() -> memPtr\n            {\n                memPtr := mload(64)\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function allocate_memory(size) -> memPtr\n            {\n                memPtr := mload(64)\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function abi_decode_available_length_array_uint256(offset, end) -> array\n            {\n                let size := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                size := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                size := 64\n                array := allocate_memory(64)\n                let dst := array\n                let srcEnd := add(offset, 64)\n                if gt(srcEnd, end) { revert(0, 0) }\n                let src := offset\n                for { } lt(src, srcEnd) { src := add(src, 0x20) }\n                {\n                    let value := /** @src -1:-1:-1 */ 0\n                    /// @src 3:7121:11829  \"contract Verifier {...\"\n                    value := calldataload(src)\n                    mstore(dst, value)\n                    dst := add(dst, 0x20)\n                }\n            }\n            function abi_decode_array_uint256(end) -> array\n            {\n                if iszero(slt(35, end)) { revert(0, 0) }\n                array := abi_decode_available_length_array_uint256(4, end)\n            }\n            function abi_decode_array_uint256_memory_ptr(end) -> array\n            {\n                if iszero(slt(227, end)) { revert(0, 0) }\n                array := abi_decode_available_length_array_uint256(196, end)\n            }\n            function abi_decode_t_array_t_uint256_memory_ptr(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                array := abi_decode_available_length_array_uint256(offset, end)\n            }\n            function abi_decode_t_array_t_uint256(end) -> array\n            {\n                if iszero(slt(291, end)) { revert(0, 0) }\n                let array_1 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                let size := /** @src -1:-1:-1 */ array_1\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                array_1 := /** @src -1:-1:-1 */ array_1\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                size := 96\n                array_1 := allocate_memory(96)\n                let dst := array_1\n                if gt(356, end) { revert(0, 0) }\n                let src := 260\n                for { } lt(src, 356) { src := add(src, 0x20) }\n                {\n                    let value := /** @src -1:-1:-1 */ 0\n                    /// @src 3:7121:11829  \"contract Verifier {...\"\n                    value := calldataload(src)\n                    mstore(dst, value)\n                    dst := add(dst, 0x20)\n                }\n                array := array_1\n            }\n            function cleanup_bool(value) -> cleaned\n            {\n                cleaned := iszero(iszero(value))\n            }\n            function abi_encode_bool(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, iszero(iszero(value0)))\n            }\n            function allocate_and_zero_memory_array_array_uint256() -> memPtr\n            {\n                let size := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                size := /** @src -1:-1:-1 */ size\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                size := 32\n                memPtr := allocate_memory(size)\n                let size_1 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                size_1 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                size_1 := size\n                calldatacopy(memPtr, calldatasize(), size)\n            }\n            function allocate_and_zero_memory_struct_struct_G2Point() -> memPtr\n            {\n                memPtr := allocate_memory_3370()\n                let size := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                let _1 := /** @src -1:-1:-1 */ size\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                _1 := /** @src -1:-1:-1 */ size\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                size := 64\n                let memPtr_1 := allocate_memory(size)\n                calldatacopy(memPtr_1, calldatasize(), size)\n                mstore(memPtr, memPtr_1)\n                let memPtr_2 := allocate_memory(size)\n                calldatacopy(memPtr_2, calldatasize(), size)\n                mstore(add(memPtr, 32), memPtr_2)\n            }\n            function allocate_and_zero_memory_struct_struct_Proof() -> memPtr\n            {\n                let memPtr_1 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                memPtr_1 := mload(64)\n                let newFreePtr := add(memPtr_1, 96)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_1)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n                memPtr := memPtr_1\n                let memPtr_2 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                memPtr_2 := allocate_memory_3370()\n                mstore(memPtr_2, 0)\n                mstore(add(memPtr_2, 32), 0)\n                mstore(memPtr_1, memPtr_2)\n                mstore(add(memPtr_1, 32), allocate_and_zero_memory_struct_struct_G2Point())\n                let memPtr_3 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                memPtr_3 := allocate_memory_3370()\n                mstore(memPtr_3, 0)\n                mstore(add(memPtr_3, 32), 0)\n                mstore(add(memPtr_1, 64), memPtr_3)\n            }\n            function panic_error_0x32()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x32)\n                revert(0, 0x24)\n            }\n            function memory_array_index_access_array_uint256(baseRef) -> addr\n            {\n                let _1 := 0\n                _1 := 0\n                addr := add(baseRef, 32)\n            }\n            function array_allocation_size_array_uint256_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(shl(5, length), 0x20)\n            }\n            function allocate_and_zero_memory_array_array_uint256_dyn() -> memPtr\n            {\n                let size := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                if gt(0x03, 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(shl(5, 0x03), 0x20)\n                let memPtr_1 := allocate_memory(size)\n                mstore(memPtr_1, 0x03)\n                memPtr := memPtr_1\n                let size_1 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                if gt(0x03, 0xffffffffffffffff) { panic_error_0x41() }\n                size_1 := size\n                calldatacopy(add(memPtr_1, 32), calldatasize(), add(size, not(31)))\n            }\n            function allocate_and_zero_memory_array_array_uint256_dyn_memory_ptr(length) -> memPtr\n            {\n                let memPtr_1 := allocate_memory(array_allocation_size_array_uint256_dyn(length))\n                mstore(memPtr_1, length)\n                memPtr := memPtr_1\n                calldatacopy(add(memPtr_1, 32), calldatasize(), add(array_allocation_size_array_uint256_dyn(length), not(31)))\n            }\n            function memory_array_index_access_uint256(baseRef, index) -> addr\n            {\n                if iszero(lt(index, 0x03)) { panic_error_0x32() }\n                addr := add(baseRef, shl(5, index))\n            }\n            function memory_array_index_access_array_uint256_dyn(baseRef) -> addr\n            {\n                if iszero(mload(baseRef)) { panic_error_0x32() }\n                addr := add(baseRef, 32)\n            }\n            function memory_array_index_access_t_uint256_dyn(baseRef) -> addr\n            {\n                if iszero(lt(/** @src 3:9347:9348  \"1\" */ 0x01, /** @src 3:7121:11829  \"contract Verifier {...\" */ mload(baseRef))) { panic_error_0x32() }\n                addr := add(baseRef, 64)\n            }\n            function memory_array_index_access_array_uint256_dyn_memory_ptr(baseRef) -> addr\n            {\n                if iszero(lt(/** @src 3:7813:7982  \"[9916723841081039443275076399171230540551908170777423639963754056599235860863,...\" */ 2, /** @src 3:7121:11829  \"contract Verifier {...\" */ mload(baseRef))) { panic_error_0x32() }\n                addr := add(baseRef, 96)\n            }\n            function memory_array_index_access_uint256_dyn_memory_ptr(baseRef) -> addr\n            {\n                if iszero(lt(/** @src 3:9897:9898  \"3\" */ 0x03, /** @src 3:7121:11829  \"contract Verifier {...\" */ mload(baseRef))) { panic_error_0x32() }\n                addr := add(baseRef, 128)\n            }\n            function memory_array_index_access_uint256_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef))) { panic_error_0x32() }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            /// @ast-id 1733 @src 3:11152:11827  \"function verifyProof(...\"\n            function fun_verifyProof(var_a_mpos, var_b_mpos, var_c_mpos, var_input_mpos) -> var_r\n            {\n                /// @src 3:11331:11337  \"bool r\"\n                var_r := /** @src 3:7121:11829  \"contract Verifier {...\" */ 0\n                /// @src 3:11349:11367  \"Proof memory proof\"\n                let zero_struct_Proof_mpos := /** @src 3:7121:11829  \"contract Verifier {...\" */ allocate_and_zero_memory_struct_struct_Proof()\n                /// @src 3:11403:11407  \"a[0]\"\n                let addr := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                let index := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                index := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                addr := /** @src 3:11403:11407  \"a[0]\" */ var_a_mpos\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                let _1 := mload(/** @src 3:11403:11407  \"a[0]\" */ var_a_mpos)\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                let _2 := mload(/** @src 3:11409:11413  \"a[1]\" */ memory_array_index_access_array_uint256(var_a_mpos))\n                /// @src 3:11387:11414  \"Pairing.G1Point(a[0], a[1])\"\n                let expr_1639_mpos := /** @src 3:7121:11829  \"contract Verifier {...\" */ allocate_memory_3370()\n                mstore(expr_1639_mpos, _1)\n                mstore(/** @src 3:11387:11414  \"Pairing.G1Point(a[0], a[1])\" */ add(expr_1639_mpos, 32), /** @src 3:7121:11829  \"contract Verifier {...\" */ _2)\n                /// @src 3:11377:11414  \"proof.A = Pairing.G1Point(a[0], a[1])\"\n                mstore(zero_struct_Proof_mpos, expr_1639_mpos)\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                let size := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                let _3 := /** @src -1:-1:-1 */ size\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                _3 := /** @src -1:-1:-1 */ size\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                size := 64\n                /// @src 3:11450:11468  \"[b[0][0], b[0][1]]\"\n                let expr_1657_mpos := /** @src 3:7121:11829  \"contract Verifier {...\" */ allocate_memory(size)\n                /// @src 3:11451:11455  \"b[0]\"\n                let addr_1 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                let index_1 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                index_1 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                addr_1 := /** @src 3:11451:11455  \"b[0]\" */ var_b_mpos\n                /// @src 3:11451:11458  \"b[0][0]\"\n                let baseRef := /** @src 3:11451:11455  \"b[0]\" */ mload(var_b_mpos)\n                /// @src 3:11451:11458  \"b[0][0]\"\n                let addr_2 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                let index_2 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                index_2 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                addr_2 := baseRef\n                mstore(expr_1657_mpos, mload(baseRef))\n                mstore(/** @src 3:11450:11468  \"[b[0][0], b[0][1]]\" */ add(expr_1657_mpos, /** @src 3:11387:11414  \"Pairing.G1Point(a[0], a[1])\" */ 32), /** @src 3:7121:11829  \"contract Verifier {...\" */ mload(/** @src 3:11460:11467  \"b[0][1]\" */ memory_array_index_access_array_uint256(/** @src 3:11460:11464  \"b[0]\" */ mload(/** @src 3:11451:11455  \"b[0]\" */ var_b_mpos))))\n                /// @src 3:11470:11488  \"[b[1][0], b[1][1]]\"\n                let expr_1668_mpos := /** @src 3:7121:11829  \"contract Verifier {...\" */ allocate_memory(size)\n                /// @src 3:11471:11475  \"b[1]\"\n                let _4 := memory_array_index_access_array_uint256(var_b_mpos)\n                /// @src 3:11471:11478  \"b[1][0]\"\n                let baseRef_1 := /** @src 3:11471:11475  \"b[1]\" */ mload(_4)\n                /// @src 3:11471:11478  \"b[1][0]\"\n                let addr_3 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                let index_3 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                index_3 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                addr_3 := baseRef_1\n                mstore(expr_1668_mpos, mload(baseRef_1))\n                mstore(/** @src 3:11470:11488  \"[b[1][0], b[1][1]]\" */ add(expr_1668_mpos, /** @src 3:11387:11414  \"Pairing.G1Point(a[0], a[1])\" */ 32), /** @src 3:7121:11829  \"contract Verifier {...\" */ mload(/** @src 3:11480:11487  \"b[1][1]\" */ memory_array_index_access_array_uint256(/** @src 3:11480:11484  \"b[1]\" */ mload(_4))))\n                /// @src 3:11434:11489  \"Pairing.G2Point([b[0][0], b[0][1]], [b[1][0], b[1][1]])\"\n                let expr_1669_mpos := /** @src 3:7121:11829  \"contract Verifier {...\" */ allocate_memory_3370()\n                mstore(expr_1669_mpos, expr_1657_mpos)\n                mstore(/** @src 3:11434:11489  \"Pairing.G2Point([b[0][0], b[0][1]], [b[1][0], b[1][1]])\" */ add(expr_1669_mpos, /** @src 3:11387:11414  \"Pairing.G1Point(a[0], a[1])\" */ 32), /** @src 3:7121:11829  \"contract Verifier {...\" */ expr_1668_mpos)\n                /// @src 3:11424:11489  \"proof.B = Pairing.G2Point([b[0][0], b[0][1]], [b[1][0], b[1][1]])\"\n                mstore(/** @src 3:11424:11431  \"proof.B\" */ add(zero_struct_Proof_mpos, /** @src 3:11387:11414  \"Pairing.G1Point(a[0], a[1])\" */ 32), /** @src 3:11424:11489  \"proof.B = Pairing.G2Point([b[0][0], b[0][1]], [b[1][0], b[1][1]])\" */ expr_1669_mpos)\n                /// @src 3:11525:11529  \"c[0]\"\n                let addr_4 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                let index_4 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                index_4 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                addr_4 := /** @src 3:11525:11529  \"c[0]\" */ var_c_mpos\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                let _5 := mload(/** @src 3:11525:11529  \"c[0]\" */ var_c_mpos)\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                let _6 := mload(/** @src 3:11531:11535  \"c[1]\" */ memory_array_index_access_array_uint256(var_c_mpos))\n                /// @src 3:11509:11536  \"Pairing.G1Point(c[0], c[1])\"\n                let expr_1683_mpos := /** @src 3:7121:11829  \"contract Verifier {...\" */ allocate_memory_3370()\n                mstore(expr_1683_mpos, _5)\n                mstore(/** @src 3:11509:11536  \"Pairing.G1Point(c[0], c[1])\" */ add(expr_1683_mpos, /** @src 3:11387:11414  \"Pairing.G1Point(a[0], a[1])\" */ 32), /** @src 3:7121:11829  \"contract Verifier {...\" */ _6)\n                /// @src 3:11499:11536  \"proof.C = Pairing.G1Point(c[0], c[1])\"\n                mstore(/** @src 3:11499:11506  \"proof.C\" */ add(zero_struct_Proof_mpos, /** @src 3:7121:11829  \"contract Verifier {...\" */ size), /** @src 3:11499:11536  \"proof.C = Pairing.G1Point(c[0], c[1])\" */ expr_1683_mpos)\n                /// @src 3:11574:11598  \"new uint[](input.length)\"\n                let expr_1696_mpos := allocate_and_zero_memory_array_array_uint256_dyn()\n                /// @src 3:11612:11622  \"uint i = 0\"\n                let var_i := /** @src 3:7121:11829  \"contract Verifier {...\" */ 0\n                /// @src 3:11608:11696  \"for(uint i = 0; i < input.length; i++){...\"\n                for { }\n                /** @src 3:11624:11640  \"i < input.length\" */ lt(var_i, /** @src 3:7121:11829  \"contract Verifier {...\" */ 0x03)\n                /// @src 3:11612:11622  \"uint i = 0\"\n                {\n                    /// @src 3:11642:11645  \"i++\"\n                    var_i := /** @src 3:7121:11829  \"contract Verifier {...\" */ add(/** @src 3:11642:11645  \"i++\" */ var_i, /** @src 3:11411:11412  \"1\" */ 0x01)\n                }\n                /// @src 3:11642:11645  \"i++\"\n                {\n                    /// @src 3:7121:11829  \"contract Verifier {...\"\n                    mstore(/** @src 3:11660:11685  \"inputValues[i] = input[i]\" */ memory_array_index_access_uint256_dyn(expr_1696_mpos, var_i), /** @src 3:7121:11829  \"contract Verifier {...\" */ mload(/** @src 3:11677:11685  \"input[i]\" */ memory_array_index_access_uint256(var_input_mpos, var_i)))\n                }\n                /// @src 3:11705:11821  \"if (verify(inputValues, proof) == 0) {...\"\n                switch /** @src 3:11709:11740  \"verify(inputValues, proof) == 0\" */ iszero(/** @src 3:11709:11735  \"verify(inputValues, proof)\" */ fun_verify(expr_1696_mpos, zero_struct_Proof_mpos))\n                case /** @src 3:11705:11821  \"if (verify(inputValues, proof) == 0) {...\" */ 0 {\n                    /// @src 3:11798:11810  \"return false\"\n                    var_r := /** @src 3:7121:11829  \"contract Verifier {...\" */ 0\n                    /// @src 3:11798:11810  \"return false\"\n                    leave\n                }\n                default /// @src 3:11705:11821  \"if (verify(inputValues, proof) == 0) {...\"\n                {\n                    /// @src 3:11756:11767  \"return true\"\n                    var_r := /** @src 3:11411:11412  \"1\" */ 0x01\n                    /// @src 3:11756:11767  \"return true\"\n                    leave\n                }\n            }\n            /// @src 3:7121:11829  \"contract Verifier {...\"\n            function panic_error_0x11()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x11)\n                revert(0, 0x24)\n            }\n            function checked_add_uint256_3395(x) -> sum\n            {\n                sum := add(x, /** @src 3:10452:10453  \"1\" */ 0x01)\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                if gt(x, sum) { panic_error_0x11() }\n            }\n            function checked_add_uint256(x) -> sum\n            {\n                sum := add(x, /** @src 3:4965:4966  \"2\" */ 0x02)\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                if gt(x, sum) { panic_error_0x11() }\n            }\n            function checked_add_uint256_3462(x) -> sum\n            {\n                sum := add(x, /** @src 3:5008:5009  \"3\" */ 0x03)\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                if gt(x, sum) { panic_error_0x11() }\n            }\n            function checked_add_t_uint256(x) -> sum\n            {\n                sum := add(x, /** @src 3:5051:5052  \"4\" */ 0x04)\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                if gt(x, sum) { panic_error_0x11() }\n            }\n            function checked_add_uint256_3468(x) -> sum\n            {\n                sum := add(x, /** @src 3:5094:5095  \"5\" */ 0x05)\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                if gt(x, sum) { panic_error_0x11() }\n            }\n            function require_helper_stringliteral_62f1(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 18)\n                    mstore(add(memPtr, 68), \"verifier-bad-input\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_8cb5(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 31)\n                    mstore(add(memPtr, 68), \"verifier-gte-snark-scalar-field\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 1600 @src 3:10168:11100  \"function verify(uint[] memory input, Proof memory proof) internal view returns (uint) {...\"\n            function fun_verify(var_input_1479_mpos, var_proof_mpos) -> var_\n            {\n                /// @src 3:10248:10252  \"uint\"\n                var_ := /** @src 3:7121:11829  \"contract Verifier {...\" */ 0\n                /// @src 3:10405:10419  \"verifyingKey()\"\n                let expr_1495_mpos := fun_verifyingKey()\n                /// @src 3:10437:10453  \"input.length + 1\"\n                let expr := checked_add_uint256_3395(/** @src 3:7121:11829  \"contract Verifier {...\" */ mload(/** @src 3:10437:10449  \"input.length\" */ var_input_1479_mpos))\n                /// @src 3:10457:10462  \"vk.IC\"\n                let _1 := add(expr_1495_mpos, 128)\n                /// @src 3:10429:10491  \"require(input.length + 1 == vk.IC.length,\\\"verifier-bad-input\\\")\"\n                require_helper_stringliteral_62f1(/** @src 3:10437:10469  \"input.length + 1 == vk.IC.length\" */ eq(expr, /** @src 3:7121:11829  \"contract Verifier {...\" */ mload(/** @src 3:10457:10462  \"vk.IC\" */ mload(_1))))\n                /// @src 3:10578:10599  \"Pairing.G1Point(0, 0)\"\n                let expr_1518_mpos := /** @src 3:7121:11829  \"contract Verifier {...\" */ allocate_memory_3370()\n                mstore(expr_1518_mpos, 0)\n                mstore(/** @src 3:10578:10599  \"Pairing.G1Point(0, 0)\" */ add(expr_1518_mpos, 32), /** @src 3:7121:11829  \"contract Verifier {...\" */ 0)\n                /// @src 3:10548:10599  \"Pairing.G1Point memory vk_x = Pairing.G1Point(0, 0)\"\n                let var_vk_x_mpos := expr_1518_mpos\n                /// @src 3:10614:10624  \"uint i = 0\"\n                let var_i := /** @src 3:7121:11829  \"contract Verifier {...\" */ 0\n                /// @src 3:10609:10833  \"for (uint i = 0; i < input.length; i++) {...\"\n                for { }\n                /** @src 3:10452:10453  \"1\" */ 0x01\n                /// @src 3:10614:10624  \"uint i = 0\"\n                {\n                    /// @src 3:10644:10647  \"i++\"\n                    var_i := /** @src 3:7121:11829  \"contract Verifier {...\" */ add(/** @src 3:10644:10647  \"i++\" */ var_i, /** @src 3:10452:10453  \"1\" */ 0x01)\n                }\n                /// @src 3:10644:10647  \"i++\"\n                {\n                    /// @src 3:10626:10642  \"i < input.length\"\n                    if iszero(lt(var_i, /** @src 3:7121:11829  \"contract Verifier {...\" */ mload(/** @src 3:10630:10642  \"input.length\" */ var_input_1479_mpos)))\n                    /// @src 3:10626:10642  \"i < input.length\"\n                    { break }\n                    /// @src 3:10663:10735  \"require(input[i] < snark_scalar_field,\\\"verifier-gte-snark-scalar-field\\\")\"\n                    require_helper_stringliteral_8cb5(/** @src 3:10671:10700  \"input[i] < snark_scalar_field\" */ lt(/** @src 3:7121:11829  \"contract Verifier {...\" */ mload(/** @src 3:10671:10679  \"input[i]\" */ memory_array_index_access_uint256_dyn(var_input_1479_mpos, var_i)), /** @src 3:10293:10370  \"21888242871839275222246405745257275088548364400416034343698204186575808495617\" */ 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001))\n                    /// @src 3:10798:10803  \"vk.IC\"\n                    let _63_mpos := mload(_1)\n                    /// @src 3:10798:10810  \"vk.IC[i + 1]\"\n                    let _65_mpos := mload(memory_array_index_access_uint256_dyn(_63_mpos, /** @src 3:10804:10809  \"i + 1\" */ checked_add_uint256_3395(var_i)))\n                    /// @src 3:10749:10822  \"vk_x = Pairing.addition(vk_x, Pairing.scalar_mul(vk.IC[i + 1], input[i]))\"\n                    var_vk_x_mpos := /** @src 3:10756:10822  \"Pairing.addition(vk_x, Pairing.scalar_mul(vk.IC[i + 1], input[i]))\" */ fun_addition(var_vk_x_mpos, /** @src 3:10779:10821  \"Pairing.scalar_mul(vk.IC[i + 1], input[i])\" */ fun_scalar_mul(_65_mpos, /** @src 3:7121:11829  \"contract Verifier {...\" */ mload(/** @src 3:10812:10820  \"input[i]\" */ memory_array_index_access_uint256_dyn(var_input_1479_mpos, var_i))))\n                }\n                /// @src 3:10849:10881  \"Pairing.addition(vk_x, vk.IC[0])\"\n                let expr_1569_mpos := fun_addition(var_vk_x_mpos, /** @src 3:10872:10880  \"vk.IC[0]\" */ mload(memory_array_index_access_array_uint256_dyn(/** @src 3:10872:10877  \"vk.IC\" */ mload(_1))))\n                /// @src 3:10930:10953  \"Pairing.negate(proof.A)\"\n                let expr_1578_mpos := fun_negate(/** @src 3:10945:10952  \"proof.A\" */ mload(var_proof_mpos))\n                /// @src 3:10955:10962  \"proof.B\"\n                let _81_mpos := mload(add(var_proof_mpos, /** @src 3:10578:10599  \"Pairing.G1Point(0, 0)\" */ 32))\n                /// @src 3:10976:10984  \"vk.alfa1\"\n                let _84_mpos := mload(expr_1495_mpos)\n                /// @src 3:10986:10994  \"vk.beta2\"\n                let _87_mpos := mload(add(expr_1495_mpos, /** @src 3:10578:10599  \"Pairing.G1Point(0, 0)\" */ 32))\n                /// @src 3:11014:11023  \"vk.gamma2\"\n                let _91_mpos := mload(add(expr_1495_mpos, /** @src 3:7121:11829  \"contract Verifier {...\" */ 64))\n                /// @src 3:11037:11044  \"proof.C\"\n                let _94_mpos := mload(add(var_proof_mpos, /** @src 3:7121:11829  \"contract Verifier {...\" */ 64))\n                /// @src 3:10891:11075  \"if (!Pairing.pairingProd4(...\"\n                if /** @src 3:10895:11065  \"!Pairing.pairingProd4(...\" */ cleanup_bool(iszero(/** @src 3:10896:11065  \"Pairing.pairingProd4(...\" */ fun_pairingProd4(expr_1578_mpos, _81_mpos, _84_mpos, _87_mpos, expr_1569_mpos, _91_mpos, _94_mpos, /** @src 3:11046:11055  \"vk.delta2\" */ mload(add(expr_1495_mpos, 96)))))\n                /// @src 3:10891:11075  \"if (!Pairing.pairingProd4(...\"\n                {\n                    /// @src 3:11067:11075  \"return 1\"\n                    var_ := /** @src 3:10452:10453  \"1\" */ 0x01\n                    /// @src 3:11067:11075  \"return 1\"\n                    leave\n                }\n                /// @src 3:11085:11093  \"return 0\"\n                var_ := /** @src 3:7121:11829  \"contract Verifier {...\" */ 0\n            }\n            function allocate_and_zero_memory_struct_struct_VerifyingKey() -> memPtr\n            {\n                let memPtr_1 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                memPtr_1 := mload(64)\n                let newFreePtr := add(memPtr_1, 160)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_1)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n                memPtr := memPtr_1\n                let memPtr_2 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                memPtr_2 := allocate_memory_3370()\n                mstore(memPtr_2, 0)\n                mstore(add(memPtr_2, 32), 0)\n                mstore(memPtr_1, memPtr_2)\n                mstore(add(memPtr_1, 32), allocate_and_zero_memory_struct_struct_G2Point())\n                mstore(add(memPtr_1, 64), allocate_and_zero_memory_struct_struct_G2Point())\n                mstore(add(memPtr_1, 96), allocate_and_zero_memory_struct_struct_G2Point())\n                mstore(add(memPtr_1, 128), 96)\n            }\n            function allocate_and_zero_memory_array_array_struct_G1Point_dyn() -> memPtr\n            {\n                let size := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                if gt(/** @src 3:9048:9049  \"4\" */ 0x04, /** @src 3:7121:11829  \"contract Verifier {...\" */ 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(shl(5, /** @src 3:9048:9049  \"4\" */ 0x04), /** @src 3:7121:11829  \"contract Verifier {...\" */ 0x20)\n                let memPtr_1 := allocate_memory(size)\n                mstore(memPtr_1, /** @src 3:9048:9049  \"4\" */ 0x04)\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                memPtr := memPtr_1\n                let size_1 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                if gt(/** @src 3:9048:9049  \"4\" */ 0x04, /** @src 3:7121:11829  \"contract Verifier {...\" */ 0xffffffffffffffff) { panic_error_0x41() }\n                size_1 := size\n                let _1 := add(size, not(31))\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                for { } lt(i, _1) { i := add(i, 32) }\n                {\n                    let memPtr_2 := /** @src -1:-1:-1 */ 0\n                    /// @src 3:7121:11829  \"contract Verifier {...\"\n                    memPtr_2 := allocate_memory_3370()\n                    mstore(memPtr_2, 0)\n                    mstore(add(memPtr_2, 32), 0)\n                    mstore(add(add(memPtr_1, i), 32), memPtr_2)\n                }\n            }\n            /// @ast-id 1476 @src 3:7464:10163  \"function verifyingKey() internal pure returns (VerifyingKey memory vk) {...\"\n            function fun_verifyingKey() -> var_vk_mpos\n            {\n                /// @src 3:7511:7533  \"VerifyingKey memory vk\"\n                var_vk_mpos := /** @src 3:7121:11829  \"contract Verifier {...\" */ allocate_and_zero_memory_struct_struct_VerifyingKey()\n                /// @src 3:7556:7762  \"Pairing.G1Point(...\"\n                let expr_1371_mpos := /** @src 3:7121:11829  \"contract Verifier {...\" */ allocate_memory_3370()\n                mstore(expr_1371_mpos, /** @src 3:7585:7661  \"3112640452745891906395967382512463782769786511499763029389435659949223665060\" */ 0x06e1b12b1f3db6a5028374608f6bbe1f9fc97185ad246ab77751a522ca6b5da4)\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                mstore(/** @src 3:7556:7762  \"Pairing.G1Point(...\" */ add(expr_1371_mpos, 32), /** @src 3:7675:7752  \"21761806409352002115101162498209346270751871932492984846604013947992364059527\" */ 0x301cbef5d61c9a653d83b4df895589004dd9f4199da2c027c003929c66e08b87)\n                /// @src 3:7545:7762  \"vk.alfa1 = Pairing.G1Point(...\"\n                mstore(var_vk_mpos, expr_1371_mpos)\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                let size := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                let _1 := /** @src -1:-1:-1 */ size\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                _1 := /** @src -1:-1:-1 */ size\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                size := 64\n                /// @src 3:7813:7982  \"[9916723841081039443275076399171230540551908170777423639963754056599235860863,...\"\n                let expr_1381_mpos := /** @src 3:7121:11829  \"contract Verifier {...\" */ allocate_memory(size)\n                mstore(expr_1381_mpos, /** @src 3:7814:7890  \"9916723841081039443275076399171230540551908170777423639963754056599235860863\" */ 0x15ecaab2a8f9f15098dd18205d69b07e49f2ad39700d169552863d28678a197f)\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                mstore(/** @src 3:7813:7982  \"[9916723841081039443275076399171230540551908170777423639963754056599235860863,...\" */ add(expr_1381_mpos, /** @src 3:7556:7762  \"Pairing.G1Point(...\" */ 32), /** @src 3:7905:7981  \"9152493419635877461134214039762804574135588600441757947058474234217471726440\" */ 0x143c20b0dcc5f31a43a785c1d76e96399cb598d9214534fd2d37c9334c44d368)\n                /// @src 3:7996:8166  \"[14221675781187066041833878228984135615670714378796892911166473098633852896136,...\"\n                let expr_1384_mpos := /** @src 3:7121:11829  \"contract Verifier {...\" */ allocate_memory(size)\n                mstore(expr_1384_mpos, /** @src 3:7997:8074  \"14221675781187066041833878228984135615670714378796892911166473098633852896136\" */ 0x1f712ee8ce7e41eef1ff7daf4876aa04eda273eb759c449a08f7f8da10be4388)\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                mstore(/** @src 3:7996:8166  \"[14221675781187066041833878228984135615670714378796892911166473098633852896136,...\" */ add(expr_1384_mpos, /** @src 3:7556:7762  \"Pairing.G1Point(...\" */ 32), /** @src 3:8089:8165  \"9418158396728157991287396942798828936700886913347622388844728474725577224769\" */ 0x14d27d1e886dc04cb107f1897a2f510eaff0949d286029164cb07cce6c117241)\n                /// @src 3:7784:8176  \"Pairing.G2Point(...\"\n                let expr_1385_mpos := /** @src 3:7121:11829  \"contract Verifier {...\" */ allocate_memory_3370()\n                mstore(expr_1385_mpos, expr_1381_mpos)\n                mstore(/** @src 3:7784:8176  \"Pairing.G2Point(...\" */ add(expr_1385_mpos, /** @src 3:7556:7762  \"Pairing.G1Point(...\" */ 32), /** @src 3:7121:11829  \"contract Verifier {...\" */ expr_1384_mpos)\n                /// @src 3:7773:8176  \"vk.beta2 = Pairing.G2Point(...\"\n                mstore(/** @src 3:7773:7781  \"vk.beta2\" */ add(var_vk_mpos, /** @src 3:7556:7762  \"Pairing.G1Point(...\" */ 32), /** @src 3:7773:8176  \"vk.beta2 = Pairing.G2Point(...\" */ expr_1385_mpos)\n                /// @src 3:8227:8398  \"[11559732032986387107991004021392285783925812861821192530917403151452391805634,...\"\n                let expr_1395_mpos := /** @src 3:7121:11829  \"contract Verifier {...\" */ allocate_memory(size)\n                mstore(expr_1395_mpos, /** @src 3:8228:8305  \"11559732032986387107991004021392285783925812861821192530917403151452391805634\" */ 0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2)\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                mstore(/** @src 3:8227:8398  \"[11559732032986387107991004021392285783925812861821192530917403151452391805634,...\" */ add(expr_1395_mpos, /** @src 3:7556:7762  \"Pairing.G1Point(...\" */ 32), /** @src 3:8320:8397  \"10857046999023057135944570762232829481370756359578518086990519993285655852781\" */ 0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed)\n                /// @src 3:8412:8581  \"[4082367875863433681332203403145435568316851327593401208105741076214120093531,...\"\n                let expr_1398_mpos := /** @src 3:7121:11829  \"contract Verifier {...\" */ allocate_memory(size)\n                mstore(expr_1398_mpos, /** @src 3:8413:8489  \"4082367875863433681332203403145435568316851327593401208105741076214120093531\" */ 0x090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b)\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                mstore(/** @src 3:8412:8581  \"[4082367875863433681332203403145435568316851327593401208105741076214120093531,...\" */ add(expr_1398_mpos, /** @src 3:7556:7762  \"Pairing.G1Point(...\" */ 32), /** @src 3:8504:8580  \"8495653923123431417604973247489272438418190587263600148770280649306958101930\" */ 0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa)\n                /// @src 3:8198:8591  \"Pairing.G2Point(...\"\n                let expr_1399_mpos := /** @src 3:7121:11829  \"contract Verifier {...\" */ allocate_memory_3370()\n                mstore(expr_1399_mpos, expr_1395_mpos)\n                mstore(/** @src 3:8198:8591  \"Pairing.G2Point(...\" */ add(expr_1399_mpos, /** @src 3:7556:7762  \"Pairing.G1Point(...\" */ 32), /** @src 3:7121:11829  \"contract Verifier {...\" */ expr_1398_mpos)\n                /// @src 3:8186:8591  \"vk.gamma2 = Pairing.G2Point(...\"\n                mstore(/** @src 3:8186:8195  \"vk.gamma2\" */ add(var_vk_mpos, /** @src 3:7121:11829  \"contract Verifier {...\" */ size), /** @src 3:8186:8591  \"vk.gamma2 = Pairing.G2Point(...\" */ expr_1399_mpos)\n                /// @src 3:8642:8813  \"[13438653518288788019143743712818566091790779839120735018305088396196687585708,...\"\n                let expr_mpos := /** @src 3:7121:11829  \"contract Verifier {...\" */ allocate_memory(size)\n                mstore(expr_mpos, /** @src 3:8643:8720  \"13438653518288788019143743712818566091790779839120735018305088396196687585708\" */ 0x1db60222deb4572d662c4f20abc4fdd3fdf8f743c7381041add81fa7337321ac)\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                mstore(/** @src 3:8642:8813  \"[13438653518288788019143743712818566091790779839120735018305088396196687585708,...\" */ add(expr_mpos, /** @src 3:7556:7762  \"Pairing.G1Point(...\" */ 32), /** @src 3:8735:8812  \"17243914913544414900331031360667901230307697486510106221450028976183796564842\" */ 0x261fb5c097adc03f36b1884d4b98f72c553435330e417d682701c5274e0c036a)\n                /// @src 3:8827:8998  \"[17587092873194425767731335381829252655781923443512477329969151825924323590128,...\"\n                let expr_1412_mpos := /** @src 3:7121:11829  \"contract Verifier {...\" */ allocate_memory(size)\n                mstore(expr_1412_mpos, /** @src 3:8828:8905  \"17587092873194425767731335381829252655781923443512477329969151825924323590128\" */ 0x26e1f11a94631373d2d5d2096ec3cde03eb09539c820dc76055cad7f2124bff0)\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                mstore(/** @src 3:8827:8998  \"[17587092873194425767731335381829252655781923443512477329969151825924323590128,...\" */ add(expr_1412_mpos, /** @src 3:7556:7762  \"Pairing.G1Point(...\" */ 32), /** @src 3:8920:8997  \"16430922978292987668100366728957812421279218267510108283348099988119420737487\" */ 0x245392a5b9be0f786c6742c621e23a62f9c622923bcd553efe3132f9b6a517cf)\n                /// @src 3:8613:9008  \"Pairing.G2Point(...\"\n                let expr_1413_mpos := /** @src 3:7121:11829  \"contract Verifier {...\" */ allocate_memory_3370()\n                mstore(expr_1413_mpos, expr_mpos)\n                mstore(/** @src 3:8613:9008  \"Pairing.G2Point(...\" */ add(expr_1413_mpos, /** @src 3:7556:7762  \"Pairing.G1Point(...\" */ 32), /** @src 3:7121:11829  \"contract Verifier {...\" */ expr_1412_mpos)\n                /// @src 3:8601:9008  \"vk.delta2 = Pairing.G2Point(...\"\n                mstore(/** @src 3:8601:8610  \"vk.delta2\" */ add(var_vk_mpos, 96), /** @src 3:8601:9008  \"vk.delta2 = Pairing.G2Point(...\" */ expr_1413_mpos)\n                /// @src 3:9026:9050  \"new Pairing.G1Point[](4)\"\n                let expr_1424_mpos := allocate_and_zero_memory_array_array_struct_G1Point_dyn()\n                /// @src 3:9018:9023  \"vk.IC\"\n                let _2 := add(var_vk_mpos, 128)\n                /// @src 3:9018:9050  \"vk.IC = new Pairing.G1Point[](4)\"\n                mstore(_2, expr_1424_mpos)\n                /// @src 3:9080:9284  \"Pairing.G1Point( ...\"\n                let expr_1436_mpos := /** @src 3:7121:11829  \"contract Verifier {...\" */ allocate_memory_3370()\n                mstore(expr_1436_mpos, /** @src 3:9110:9185  \"764312887015986102888364722725819283701448797821918109913499988131070575084\" */ 0x01b095f49d9e17d10b75bbfc0a5910172777ec1ab13f479a734fc212c42381ec)\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                mstore(/** @src 3:9080:9284  \"Pairing.G1Point( ...\" */ add(expr_1436_mpos, /** @src 3:7556:7762  \"Pairing.G1Point(...\" */ 32), /** @src 3:9199:9274  \"581900821725321480007315022533820807324501919402643897336936980064583440913\" */ 0x0149581d12018ed0406d6d44a9265f282ada7eba49d6cfb066964541bbfe5a11)\n                /// @src 3:9069:9074  \"vk.IC\"\n                let _133_mpos := mload(_2)\n                /// @src 3:9069:9284  \"vk.IC[0] = Pairing.G1Point( ...\"\n                mstore(memory_array_index_access_array_uint256_dyn(_133_mpos), expr_1436_mpos)\n                pop(memory_array_index_access_array_uint256_dyn(_133_mpos))\n                /// @src 3:9352:9559  \"Pairing.G1Point( ...\"\n                let expr_1448_mpos := /** @src 3:7121:11829  \"contract Verifier {...\" */ allocate_memory_3370()\n                mstore(expr_1448_mpos, /** @src 3:9382:9459  \"16572821774990860494704700231703947442158229636776641142382437900939064007016\" */ 0x24a3e27c9ed430f164bb8b8035c8b9abc3598a709baa8eacf8526ad324b05968)\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                mstore(/** @src 3:9352:9559  \"Pairing.G1Point( ...\" */ add(expr_1448_mpos, /** @src 3:7556:7762  \"Pairing.G1Point(...\" */ 32), /** @src 3:9473:9549  \"7829407253169896534563224234843010424193288969396394196456956558891129702417\" */ 0x114f4997659e2e31a38af26488d7b9ca0dcb8ac0c0868d58b96d8eabd7270811)\n                /// @src 3:9341:9346  \"vk.IC\"\n                let _139_mpos := mload(_2)\n                /// @src 3:9341:9559  \"vk.IC[1] = Pairing.G1Point( ...\"\n                mstore(memory_array_index_access_t_uint256_dyn(_139_mpos), expr_1448_mpos)\n                pop(memory_array_index_access_t_uint256_dyn(_139_mpos))\n                /// @src 3:9627:9834  \"Pairing.G1Point( ...\"\n                let expr_1460_mpos := /** @src 3:7121:11829  \"contract Verifier {...\" */ allocate_memory_3370()\n                mstore(expr_1460_mpos, /** @src 3:9657:9733  \"8137718909162085777269030960428818343674674454071415319162021736331156392805\" */ 0x11fdc9224de62c6be6453635c529f7fe63b9a3b55a02be6cfc7f79d226f40b65)\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                mstore(/** @src 3:9627:9834  \"Pairing.G1Point( ...\" */ add(expr_1460_mpos, /** @src 3:7556:7762  \"Pairing.G1Point(...\" */ 32), /** @src 3:9747:9824  \"10032489348457778820993314355078012280043344533311459253972967745596756665657\" */ 0x162e300ffae4f8e65280dc62d64ff1fbdbdbb37a8ab89d9e2d90380f86712539)\n                /// @src 3:9616:9621  \"vk.IC\"\n                let _mpos := mload(_2)\n                /// @src 3:9616:9834  \"vk.IC[2] = Pairing.G1Point( ...\"\n                mstore(memory_array_index_access_array_uint256_dyn_memory_ptr(_mpos), expr_1460_mpos)\n                pop(memory_array_index_access_array_uint256_dyn_memory_ptr(_mpos))\n                /// @src 3:9902:10109  \"Pairing.G1Point( ...\"\n                let expr_1472_mpos := /** @src 3:7121:11829  \"contract Verifier {...\" */ allocate_memory_3370()\n                mstore(expr_1472_mpos, /** @src 3:9932:10008  \"6349326230934313156976828643793342266852298075898779839679601918860187709020\" */ 0x0e09975f15c43909f5f123f2ff6540248d8f44c42d6005f5fd4d2044b8b4ae5c)\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                mstore(/** @src 3:9902:10109  \"Pairing.G1Point( ...\" */ add(expr_1472_mpos, /** @src 3:7556:7762  \"Pairing.G1Point(...\" */ 32), /** @src 3:10022:10099  \"13620054709601116447869576680439541741763486638168006495199766488994572511447\" */ 0x1e1cad8303f8e256ebe542f04b34d75c1aa429460f85339349e6867011d9a8d7)\n                /// @src 3:9891:9896  \"vk.IC\"\n                let _151_mpos := mload(_2)\n                /// @src 3:9891:10109  \"vk.IC[3] = Pairing.G1Point( ...\"\n                mstore(memory_array_index_access_uint256_dyn_memory_ptr(_151_mpos), expr_1472_mpos)\n                pop(memory_array_index_access_uint256_dyn_memory_ptr(_151_mpos))\n            }\n            /// @ast-id 892 @src 3:3772:4311  \"function scalar_mul(G1Point memory p, uint s) internal view returns (G1Point memory r) {...\"\n            function fun_scalar_mul(var_p_847_mpos, var_s) -> var_r_853_mpos\n            {\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                let memPtr := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                memPtr := allocate_memory_3370()\n                mstore(memPtr, 0)\n                mstore(add(memPtr, 32), 0)\n                /// @src 3:3841:3857  \"G1Point memory r\"\n                var_r_853_mpos := /** @src 3:7121:11829  \"contract Verifier {...\" */ memPtr\n                let size := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                let _1 := /** @src -1:-1:-1 */ size\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                _1 := /** @src -1:-1:-1 */ size\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                size := 96\n                let memPtr_1 := allocate_memory(size)\n                calldatacopy(memPtr_1, calldatasize(), size)\n                mstore(memPtr_1, mload(/** @src 3:3910:3913  \"p.X\" */ var_p_847_mpos))\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                mstore(add(memPtr_1, /** @src 3:3934:3937  \"p.Y\" */ 32), /** @src 3:7121:11829  \"contract Verifier {...\" */ mload(/** @src 3:3934:3937  \"p.Y\" */ add(var_p_847_mpos, 32)))\n                /// @src 3:3947:3959  \"input[2] = s\"\n                let addr := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                let _2 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                _2 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                addr := add(memPtr_1, 64)\n                mstore(addr, var_s)\n                /// @src 3:4055:4257  \"assembly {...\"\n                let _3 := iszero(staticcall(add(gas(), not(1999)), 7, memPtr_1, 0x80, /** @src 3:7121:11829  \"contract Verifier {...\" */ memPtr, size))\n                /// @src 3:4055:4257  \"assembly {...\"\n                if _3 { invalid() }\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                _3 := /** @src -1:-1:-1 */ 0\n            }\n            /// @ast-id 843 @src 3:3039:3617  \"function addition(G1Point memory p1, G1Point memory p2) internal view returns (G1Point memory r) {...\"\n            function fun_addition(var_p1_mpos, var_p2_mpos) -> var_r_mpos\n            {\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                let memPtr := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                memPtr := allocate_memory_3370()\n                mstore(memPtr, 0)\n                mstore(add(memPtr, 32), 0)\n                /// @src 3:3118:3134  \"G1Point memory r\"\n                var_r_mpos := /** @src 3:7121:11829  \"contract Verifier {...\" */ memPtr\n                let size := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                let _1 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                _1 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                size := 128\n                let memPtr_1 := allocate_memory(128)\n                calldatacopy(memPtr_1, calldatasize(), 128)\n                mstore(memPtr_1, mload(/** @src 3:3187:3191  \"p1.X\" */ var_p1_mpos))\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                let _2 := mload(/** @src 3:3212:3216  \"p1.Y\" */ add(var_p1_mpos, 32))\n                /// @src 3:3201:3216  \"input[1] = p1.Y\"\n                let addr := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                let _3 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                _3 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                addr := add(memPtr_1, /** @src 3:3212:3216  \"p1.Y\" */ 32)\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                mstore(addr, _2)\n                let _4 := mload(/** @src 3:3237:3241  \"p2.X\" */ var_p2_mpos)\n                /// @src 3:3226:3241  \"input[2] = p2.X\"\n                let addr_1 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                let _5 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                _5 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                addr_1 := add(memPtr_1, 64)\n                mstore(addr_1, _4)\n                let _6 := mload(/** @src 3:3262:3266  \"p2.Y\" */ add(var_p2_mpos, /** @src 3:3212:3216  \"p1.Y\" */ 32))\n                /// @src 3:3251:3266  \"input[3] = p2.Y\"\n                let addr_2 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                let _7 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                _7 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                addr_2 := add(/** @src 3:3251:3266  \"input[3] = p2.Y\" */ memPtr_1, /** @src 3:7121:11829  \"contract Verifier {...\" */ 96)\n                mstore(/** @src 3:3251:3266  \"input[3] = p2.Y\" */ addr_2, /** @src 3:7121:11829  \"contract Verifier {...\" */ _6)\n                /// @src 3:3362:3564  \"assembly {...\"\n                let var_success := staticcall(add(gas(), /** @src 3:4055:4257  \"assembly {...\" */ not(1999)), /** @src 3:3362:3564  \"assembly {...\" */ 6, memPtr_1, 0xc0, /** @src 3:7121:11829  \"contract Verifier {...\" */ memPtr, /** @src 3:3362:3564  \"assembly {...\" */ 0x60)\n                if iszero(var_success) { invalid() }\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                if iszero(/** @src 3:3573:3610  \"require(success,\\\"pairing-add-failed\\\")\" */ var_success)\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                {\n                    let memPtr_2 := mload(64)\n                    mstore(memPtr_2, shl(229, 4594637))\n                    mstore(add(memPtr_2, 4), 32)\n                    mstore(add(memPtr_2, 36), 18)\n                    mstore(add(memPtr_2, 68), \"pairing-add-failed\")\n                    revert(memPtr_2, 100)\n                }\n            }\n            /// @ast-id 785 @src 3:2646:2988  \"function negate(G1Point memory p) internal pure returns (G1Point memory r) {...\"\n            function fun_negate(var_p_mpos) -> var_r_751_mpos\n            {\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                let memPtr := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                memPtr := allocate_memory_3370()\n                mstore(memPtr, 0)\n                mstore(add(memPtr, 32), 0)\n                /// @src 3:2703:2719  \"G1Point memory r\"\n                var_r_751_mpos := /** @src 3:7121:11829  \"contract Verifier {...\" */ memPtr\n                /// @src 3:2883:2903  \"p.X == 0 && p.Y == 0\"\n                let expr := /** @src 3:2883:2891  \"p.X == 0\" */ iszero(/** @src 3:7121:11829  \"contract Verifier {...\" */ mload(/** @src 3:2883:2886  \"p.X\" */ var_p_mpos))\n                /// @src 3:2883:2903  \"p.X == 0 && p.Y == 0\"\n                if expr\n                {\n                    expr := /** @src 3:2895:2903  \"p.Y == 0\" */ iszero(/** @src 3:7121:11829  \"contract Verifier {...\" */ mload(/** @src 3:2895:2898  \"p.Y\" */ add(var_p_mpos, 32)))\n                }\n                /// @src 3:2879:2937  \"if (p.X == 0 && p.Y == 0)...\"\n                if expr\n                {\n                    /// @src 3:2924:2937  \"G1Point(0, 0)\"\n                    let expr_769_mpos := /** @src 3:7121:11829  \"contract Verifier {...\" */ allocate_memory_3370()\n                    mstore(expr_769_mpos, /** @src -1:-1:-1 */ 0)\n                    /// @src 3:7121:11829  \"contract Verifier {...\"\n                    mstore(/** @src 3:2924:2937  \"G1Point(0, 0)\" */ add(expr_769_mpos, 32), /** @src -1:-1:-1 */ 0)\n                    /// @src 3:2917:2937  \"return G1Point(0, 0)\"\n                    var_r_751_mpos := expr_769_mpos\n                    leave\n                }\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                let _1 := mload(/** @src 3:2962:2965  \"p.X\" */ var_p_mpos)\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                let diff := sub(/** @src 3:2792:2869  \"21888242871839275222246405745257275088696311157297823662689037894645226208583\" */ 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47, /** @src 3:7121:11829  \"contract Verifier {...\" */ mod(mload(/** @src 3:2972:2975  \"p.Y\" */ add(var_p_mpos, 32)), /** @src 3:2792:2869  \"21888242871839275222246405745257275088696311157297823662689037894645226208583\" */ 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47))\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                if gt(diff, /** @src 3:2792:2869  \"21888242871839275222246405745257275088696311157297823662689037894645226208583\" */ 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47)\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                { panic_error_0x11() }\n                /// @src 3:2954:2981  \"G1Point(p.X, q - (p.Y % q))\"\n                let expr_782_mpos := /** @src 3:7121:11829  \"contract Verifier {...\" */ allocate_memory_3370()\n                mstore(expr_782_mpos, _1)\n                mstore(/** @src 3:2954:2981  \"G1Point(p.X, q - (p.Y % q))\" */ add(expr_782_mpos, /** @src 3:2972:2975  \"p.Y\" */ 32), /** @src 3:7121:11829  \"contract Verifier {...\" */ diff)\n                /// @src 3:2947:2981  \"return G1Point(p.X, q - (p.Y % q))\"\n                var_r_751_mpos := expr_782_mpos\n            }\n            /// @ast-id 1328 @src 3:6566:7118  \"function pairingProd4(...\"\n            function fun_pairingProd4(var_a1_mpos, var_a2_mpos, var_b1_mpos, var_b2_mpos, var_c1_mpos, var_c2_mpos, var_d1_mpos, var_d2_mpos) -> var\n            {\n                /// @src 3:6855:6871  \"new G1Point[](4)\"\n                let expr_1260_mpos := allocate_and_zero_memory_array_array_struct_G1Point_dyn()\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                let size := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                let _1 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                _1 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                size := 160\n                let memPtr := allocate_memory(160)\n                mstore(memPtr, /** @src 3:6869:6870  \"4\" */ 0x04)\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                let _2 := add(160, not(31))\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                for { } lt(i, _2) { i := add(i, 32) }\n                {\n                    mstore(add(add(memPtr, i), 32), allocate_and_zero_memory_struct_struct_G2Point())\n                }\n                /// @src 3:6929:6939  \"p1[0] = a1\"\n                mstore(memory_array_index_access_array_uint256_dyn(expr_1260_mpos), var_a1_mpos)\n                pop(memory_array_index_access_array_uint256_dyn(expr_1260_mpos))\n                /// @src 3:6949:6959  \"p1[1] = b1\"\n                mstore(memory_array_index_access_t_uint256_dyn(expr_1260_mpos), var_b1_mpos)\n                pop(memory_array_index_access_t_uint256_dyn(expr_1260_mpos))\n                /// @src 3:6969:6979  \"p1[2] = c1\"\n                mstore(memory_array_index_access_array_uint256_dyn_memory_ptr(expr_1260_mpos), var_c1_mpos)\n                pop(memory_array_index_access_array_uint256_dyn_memory_ptr(expr_1260_mpos))\n                /// @src 3:6989:6999  \"p1[3] = d1\"\n                mstore(memory_array_index_access_uint256_dyn_memory_ptr(expr_1260_mpos), var_d1_mpos)\n                pop(memory_array_index_access_uint256_dyn_memory_ptr(expr_1260_mpos))\n                /// @src 3:7009:7019  \"p2[0] = a2\"\n                mstore(memory_array_index_access_array_uint256_dyn(memPtr), var_a2_mpos)\n                pop(memory_array_index_access_array_uint256_dyn(memPtr))\n                /// @src 3:7029:7039  \"p2[1] = b2\"\n                mstore(memory_array_index_access_t_uint256_dyn(memPtr), var_b2_mpos)\n                pop(memory_array_index_access_t_uint256_dyn(memPtr))\n                /// @src 3:7049:7059  \"p2[2] = c2\"\n                mstore(memory_array_index_access_array_uint256_dyn_memory_ptr(memPtr), var_c2_mpos)\n                pop(memory_array_index_access_array_uint256_dyn_memory_ptr(memPtr))\n                /// @src 3:7069:7079  \"p2[3] = d2\"\n                mstore(memory_array_index_access_uint256_dyn_memory_ptr(memPtr), var_d2_mpos)\n                pop(memory_array_index_access_uint256_dyn_memory_ptr(memPtr))\n                /// @src 3:7089:7111  \"return pairing(p1, p2)\"\n                var := /** @src 3:7096:7111  \"pairing(p1, p2)\" */ fun_pairing(expr_1260_mpos, memPtr)\n            }\n            /// @src 3:7121:11829  \"contract Verifier {...\"\n            function require_helper_stringliteral_d4c5(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 22)\n                    mstore(add(memPtr, 68), \"pairing-lengths-failed\")\n                    revert(memPtr, 100)\n                }\n            }\n            function checked_mul_uint256(x) -> product\n            {\n                product := mul(x, /** @src 3:4749:4750  \"6\" */ 0x06)\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                if iszero(or(iszero(x), eq(/** @src 3:4749:4750  \"6\" */ 0x06, /** @src 3:7121:11829  \"contract Verifier {...\" */ div(product, x)))) { panic_error_0x11() }\n            }\n            function require_helper_stringliteral_f322(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 21)\n                    mstore(add(memPtr, 68), \"pairing-opcode-failed\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 1058 @src 3:4522:5558  \"function pairing(G1Point[] memory p1, G2Point[] memory p2) internal view returns (bool) {...\"\n            function fun_pairing(var_p1_897_mpos, var_p2_901_mpos) -> var\n            {\n                /// @src 3:4628:4637  \"p1.length\"\n                let expr := /** @src 3:7121:11829  \"contract Verifier {...\" */ mload(/** @src 3:4628:4637  \"p1.length\" */ var_p1_897_mpos)\n                /// @src 3:4620:4676  \"require(p1.length == p2.length,\\\"pairing-lengths-failed\\\")\"\n                require_helper_stringliteral_d4c5(/** @src 3:4628:4650  \"p1.length == p2.length\" */ eq(expr, /** @src 3:7121:11829  \"contract Verifier {...\" */ mload(/** @src 3:4641:4650  \"p2.length\" */ var_p2_901_mpos)))\n                /// @src 3:4702:4711  \"p1.length\"\n                let expr_1 := /** @src 3:7121:11829  \"contract Verifier {...\" */ mload(/** @src 3:4702:4711  \"p1.length\" */ var_p1_897_mpos)\n                /// @src 3:4738:4750  \"elements * 6\"\n                let expr_2 := checked_mul_uint256(expr_1)\n                /// @src 3:4782:4803  \"new uint[](inputSize)\"\n                let expr_935_mpos := allocate_and_zero_memory_array_array_uint256_dyn_memory_ptr(expr_2)\n                /// @src 3:4818:4828  \"uint i = 0\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 3:4813:5120  \"for (uint i = 0; i < elements; i++)...\"\n                for { }\n                /** @src 3:4830:4842  \"i < elements\" */ lt(var_i, expr_1)\n                /// @src 3:4818:4828  \"uint i = 0\"\n                {\n                    /// @src 3:4844:4847  \"i++\"\n                    var_i := /** @src 3:7121:11829  \"contract Verifier {...\" */ add(/** @src 3:4844:4847  \"i++\" */ var_i, /** @src 3:4925:4926  \"1\" */ 0x01)\n                }\n                /// @src 3:4844:4847  \"i++\"\n                {\n                    /// @src 3:7121:11829  \"contract Verifier {...\"\n                    let _1 := mload(/** @src 3:4890:4895  \"p1[i]\" */ mload(memory_array_index_access_uint256_dyn(var_p1_897_mpos, var_i)))\n                    /// @src 3:4877:4886  \"i * 6 + 0\"\n                    let x := /** @src 3:4877:4882  \"i * 6\" */ checked_mul_uint256(var_i)\n                    /// @src 3:4877:4886  \"i * 6 + 0\"\n                    let sum := /** @src -1:-1:-1 */ 0\n                    /// @src 3:7121:11829  \"contract Verifier {...\"\n                    let y := /** @src -1:-1:-1 */ sum\n                    /// @src 3:7121:11829  \"contract Verifier {...\"\n                    sum := x\n                    y := /** @src 3:4827:4828  \"0\" */ 0x00\n                    /// @src 3:7121:11829  \"contract Verifier {...\"\n                    mstore(/** @src 3:4871:4897  \"input[i * 6 + 0] = p1[i].X\" */ memory_array_index_access_uint256_dyn(expr_935_mpos, /** @src 3:4877:4886  \"i * 6 + 0\" */ x), /** @src 3:7121:11829  \"contract Verifier {...\" */ _1)\n                    mstore(/** @src 3:4911:4937  \"input[i * 6 + 1] = p1[i].Y\" */ memory_array_index_access_uint256_dyn(expr_935_mpos, /** @src 3:4917:4926  \"i * 6 + 1\" */ checked_add_uint256_3395(/** @src 3:4917:4922  \"i * 6\" */ checked_mul_uint256(var_i))), /** @src 3:7121:11829  \"contract Verifier {...\" */ mload(/** @src 3:4930:4937  \"p1[i].Y\" */ add(/** @src 3:4930:4935  \"p1[i]\" */ mload(memory_array_index_access_uint256_dyn(var_p1_897_mpos, var_i)), /** @src 3:4930:4937  \"p1[i].Y\" */ 32)))\n                    /// @src 3:4970:4980  \"p2[i].X[0]\"\n                    let baseRef := /** @src 3:4970:4977  \"p2[i].X\" */ mload(/** @src 3:4970:4975  \"p2[i]\" */ mload(memory_array_index_access_uint256_dyn(var_p2_901_mpos, var_i)))\n                    /// @src 3:4970:4980  \"p2[i].X[0]\"\n                    let addr := /** @src 3:4827:4828  \"0\" */ y\n                    /// @src 3:7121:11829  \"contract Verifier {...\"\n                    let index := /** @src 3:4827:4828  \"0\" */ y\n                    /// @src 3:7121:11829  \"contract Verifier {...\"\n                    index := /** @src 3:4827:4828  \"0\" */ y\n                    /// @src 3:7121:11829  \"contract Verifier {...\"\n                    addr := baseRef\n                    mstore(/** @src 3:4951:4980  \"input[i * 6 + 2] = p2[i].X[0]\" */ memory_array_index_access_uint256_dyn(expr_935_mpos, /** @src 3:4957:4966  \"i * 6 + 2\" */ checked_add_uint256(/** @src 3:4957:4962  \"i * 6\" */ checked_mul_uint256(var_i))), /** @src 3:7121:11829  \"contract Verifier {...\" */ mload(/** @src 3:4970:4980  \"p2[i].X[0]\" */ baseRef))\n                    /// @src 3:7121:11829  \"contract Verifier {...\"\n                    mstore(/** @src 3:4994:5023  \"input[i * 6 + 3] = p2[i].X[1]\" */ memory_array_index_access_uint256_dyn(expr_935_mpos, /** @src 3:5000:5009  \"i * 6 + 3\" */ checked_add_uint256_3462(/** @src 3:5000:5005  \"i * 6\" */ checked_mul_uint256(var_i))), /** @src 3:7121:11829  \"contract Verifier {...\" */ mload(/** @src 3:5013:5023  \"p2[i].X[1]\" */ memory_array_index_access_array_uint256(/** @src 3:5013:5020  \"p2[i].X\" */ mload(/** @src 3:5013:5018  \"p2[i]\" */ mload(memory_array_index_access_uint256_dyn(var_p2_901_mpos, var_i))))))\n                    /// @src 3:5056:5066  \"p2[i].Y[0]\"\n                    let baseRef_1 := /** @src 3:5056:5063  \"p2[i].Y\" */ mload(add(/** @src 3:5056:5061  \"p2[i]\" */ mload(memory_array_index_access_uint256_dyn(var_p2_901_mpos, var_i)), /** @src 3:4930:4937  \"p1[i].Y\" */ 32))\n                    /// @src 3:5056:5066  \"p2[i].Y[0]\"\n                    let addr_1 := /** @src 3:4827:4828  \"0\" */ y\n                    /// @src 3:7121:11829  \"contract Verifier {...\"\n                    let index_1 := /** @src 3:4827:4828  \"0\" */ y\n                    /// @src 3:7121:11829  \"contract Verifier {...\"\n                    index_1 := /** @src 3:4827:4828  \"0\" */ y\n                    /// @src 3:7121:11829  \"contract Verifier {...\"\n                    addr_1 := baseRef_1\n                    mstore(/** @src 3:5037:5066  \"input[i * 6 + 4] = p2[i].Y[0]\" */ memory_array_index_access_uint256_dyn(expr_935_mpos, /** @src 3:5043:5052  \"i * 6 + 4\" */ checked_add_t_uint256(/** @src 3:5043:5048  \"i * 6\" */ checked_mul_uint256(var_i))), /** @src 3:7121:11829  \"contract Verifier {...\" */ mload(/** @src 3:5056:5066  \"p2[i].Y[0]\" */ baseRef_1))\n                    /// @src 3:7121:11829  \"contract Verifier {...\"\n                    mstore(/** @src 3:5080:5109  \"input[i * 6 + 5] = p2[i].Y[1]\" */ memory_array_index_access_uint256_dyn(expr_935_mpos, /** @src 3:5086:5095  \"i * 6 + 5\" */ checked_add_uint256_3468(/** @src 3:5086:5091  \"i * 6\" */ checked_mul_uint256(var_i))), /** @src 3:7121:11829  \"contract Verifier {...\" */ mload(/** @src 3:5099:5109  \"p2[i].Y[1]\" */ memory_array_index_access_array_uint256(/** @src 3:5099:5106  \"p2[i].Y\" */ mload(add(/** @src 3:5099:5104  \"p2[i]\" */ mload(memory_array_index_access_uint256_dyn(var_p2_901_mpos, var_i)), /** @src 3:4930:4937  \"p1[i].Y\" */ 32)))))\n                }\n                /// @src 3:5129:5147  \"uint[1] memory out\"\n                let zero_array_uint256_mpos := /** @src 3:7121:11829  \"contract Verifier {...\" */ allocate_and_zero_memory_array_array_uint256()\n                /// @src 3:5243:5474  \"assembly {...\"\n                let var_success := staticcall(add(gas(), /** @src 3:4055:4257  \"assembly {...\" */ not(1999)), /** @src 3:5243:5474  \"assembly {...\" */ 8, add(expr_935_mpos, /** @src 3:4930:4937  \"p1[i].Y\" */ 32), /** @src 3:5243:5474  \"assembly {...\" */ shl(/** @src 3:5094:5095  \"5\" */ 0x05, /** @src 3:5243:5474  \"assembly {...\" */ expr_2), zero_array_uint256_mpos, /** @src 3:4930:4937  \"p1[i].Y\" */ 32)\n                /// @src 3:5243:5474  \"assembly {...\"\n                if iszero(var_success) { invalid() }\n                /// @src 3:5483:5523  \"require(success,\\\"pairing-opcode-failed\\\")\"\n                require_helper_stringliteral_f322(var_success)\n                /// @src 3:5540:5546  \"out[0]\"\n                let addr_2 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                let index_2 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                index_2 := /** @src -1:-1:-1 */ 0\n                /// @src 3:7121:11829  \"contract Verifier {...\"\n                addr_2 := /** @src 3:5540:5546  \"out[0]\" */ zero_array_uint256_mpos\n                /// @src 3:5533:5551  \"return out[0] != 0\"\n                var := /** @src 3:5540:5551  \"out[0] != 0\" */ iszero(iszero(/** @src 3:7121:11829  \"contract Verifier {...\" */ mload(/** @src 3:5540:5546  \"out[0]\" */ zero_array_uint256_mpos)))\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220f35f59dd36d988d90437ef7b271a821db6e30409aaee505276b9424de13fc23c64736f6c634300081d0033\"\n    }\n}\n","hash":"9687bb8ea629a5d6854343190c0287d037c6dcda6e89b9912fe7afa140657ae3","factoryDependencies":{}}}}}}